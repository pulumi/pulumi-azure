// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package appinsights

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages an Azure Workbook.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"encoding/json"
//
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/appinsights"
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/core"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			exampleResourceGroup, err := core.NewResourceGroup(ctx, "exampleResourceGroup", &core.ResourceGroupArgs{
//				Location: pulumi.String("West Europe"),
//			})
//			if err != nil {
//				return err
//			}
//			tmpJSON0, err := json.Marshal(map[string]interface{}{
//				"version": "Notebook/1.0",
//				"items": []map[string]interface{}{
//					map[string]interface{}{
//						"type": 1,
//						"content": map[string]interface{}{
//							"json": "Test2022",
//						},
//						"name": "text - 0",
//					},
//				},
//				"isLocked": false,
//				"fallbackResourceIds": []string{
//					"Azure Monitor",
//				},
//			})
//			if err != nil {
//				return err
//			}
//			json0 := string(tmpJSON0)
//			_, err = appinsights.NewWorkbook(ctx, "exampleWorkbook", &appinsights.WorkbookArgs{
//				ResourceGroupName: exampleResourceGroup.Name,
//				Location:          exampleResourceGroup.Location,
//				DisplayName:       pulumi.String("workbook1"),
//				DataJson:          pulumi.String(json0),
//				Tags: pulumi.StringMap{
//					"ENV": pulumi.String("Test"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Workbooks can be imported using the `resource id`, e.g.
//
// ```sh
//
//	$ pulumi import azure:appinsights/workbook:Workbook example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resourceGroup1/providers/Microsoft.Insights/workbooks/resource1
//
// ```
type Workbook struct {
	pulumi.CustomResourceState

	// Workbook category, as defined by the user at creation time. There may be additional category types beyond the following: `workbook`, `sentinel`. Defaults to `workbook`.
	Category pulumi.StringPtrOutput `pulumi:"category"`
	// Configuration of this particular workbook. Configuration data is a string containing valid JSON.
	DataJson pulumi.StringOutput `pulumi:"dataJson"`
	// Specifies the description of the workbook.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Specifies the user-defined name (display name) of the workbook.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// An `identity` block as defined below. Changing this forces a new Workbook to be created.
	Identity WorkbookIdentityPtrOutput `pulumi:"identity"`
	// Specifies the Azure Region where the Workbook should exist. Changing this forces a new Workbook to be created.
	Location pulumi.StringOutput `pulumi:"location"`
	// Specifies the name of this Workbook as a UUID/GUID. It should not contain any uppercase letters. Changing this forces a new Workbook to be created.
	Name pulumi.StringOutput `pulumi:"name"`
	// Specifies the name of the Resource Group where the Workbook should exist. Changing this forces a new Workbook to be created.
	ResourceGroupName pulumi.StringOutput `pulumi:"resourceGroupName"`
	// Resource ID for a source resource. It should not contain any uppercase letters. Defaults to `azure monitor`.
	SourceId pulumi.StringPtrOutput `pulumi:"sourceId"`
	// Specifies the Resource Manager ID of the Storage Container when bring your own storage is used. Changing this forces a new Workbook to be created.
	//
	// > **Note:** This is the Resource Manager ID of the Storage Container, rather than the regular ID - and can be accessed on the `storage.Container` Data Source/Resource as `resourceManagerId`.
	StorageContainerId pulumi.StringPtrOutput `pulumi:"storageContainerId"`
	// A mapping of tags which should be assigned to the Workbook.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
}

// NewWorkbook registers a new resource with the given unique name, arguments, and options.
func NewWorkbook(ctx *pulumi.Context,
	name string, args *WorkbookArgs, opts ...pulumi.ResourceOption) (*Workbook, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DataJson == nil {
		return nil, errors.New("invalid value for required argument 'DataJson'")
	}
	if args.DisplayName == nil {
		return nil, errors.New("invalid value for required argument 'DisplayName'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Workbook
	err := ctx.RegisterResource("azure:appinsights/workbook:Workbook", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWorkbook gets an existing Workbook resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWorkbook(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WorkbookState, opts ...pulumi.ResourceOption) (*Workbook, error) {
	var resource Workbook
	err := ctx.ReadResource("azure:appinsights/workbook:Workbook", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Workbook resources.
type workbookState struct {
	// Workbook category, as defined by the user at creation time. There may be additional category types beyond the following: `workbook`, `sentinel`. Defaults to `workbook`.
	Category *string `pulumi:"category"`
	// Configuration of this particular workbook. Configuration data is a string containing valid JSON.
	DataJson *string `pulumi:"dataJson"`
	// Specifies the description of the workbook.
	Description *string `pulumi:"description"`
	// Specifies the user-defined name (display name) of the workbook.
	DisplayName *string `pulumi:"displayName"`
	// An `identity` block as defined below. Changing this forces a new Workbook to be created.
	Identity *WorkbookIdentity `pulumi:"identity"`
	// Specifies the Azure Region where the Workbook should exist. Changing this forces a new Workbook to be created.
	Location *string `pulumi:"location"`
	// Specifies the name of this Workbook as a UUID/GUID. It should not contain any uppercase letters. Changing this forces a new Workbook to be created.
	Name *string `pulumi:"name"`
	// Specifies the name of the Resource Group where the Workbook should exist. Changing this forces a new Workbook to be created.
	ResourceGroupName *string `pulumi:"resourceGroupName"`
	// Resource ID for a source resource. It should not contain any uppercase letters. Defaults to `azure monitor`.
	SourceId *string `pulumi:"sourceId"`
	// Specifies the Resource Manager ID of the Storage Container when bring your own storage is used. Changing this forces a new Workbook to be created.
	//
	// > **Note:** This is the Resource Manager ID of the Storage Container, rather than the regular ID - and can be accessed on the `storage.Container` Data Source/Resource as `resourceManagerId`.
	StorageContainerId *string `pulumi:"storageContainerId"`
	// A mapping of tags which should be assigned to the Workbook.
	Tags map[string]string `pulumi:"tags"`
}

type WorkbookState struct {
	// Workbook category, as defined by the user at creation time. There may be additional category types beyond the following: `workbook`, `sentinel`. Defaults to `workbook`.
	Category pulumi.StringPtrInput
	// Configuration of this particular workbook. Configuration data is a string containing valid JSON.
	DataJson pulumi.StringPtrInput
	// Specifies the description of the workbook.
	Description pulumi.StringPtrInput
	// Specifies the user-defined name (display name) of the workbook.
	DisplayName pulumi.StringPtrInput
	// An `identity` block as defined below. Changing this forces a new Workbook to be created.
	Identity WorkbookIdentityPtrInput
	// Specifies the Azure Region where the Workbook should exist. Changing this forces a new Workbook to be created.
	Location pulumi.StringPtrInput
	// Specifies the name of this Workbook as a UUID/GUID. It should not contain any uppercase letters. Changing this forces a new Workbook to be created.
	Name pulumi.StringPtrInput
	// Specifies the name of the Resource Group where the Workbook should exist. Changing this forces a new Workbook to be created.
	ResourceGroupName pulumi.StringPtrInput
	// Resource ID for a source resource. It should not contain any uppercase letters. Defaults to `azure monitor`.
	SourceId pulumi.StringPtrInput
	// Specifies the Resource Manager ID of the Storage Container when bring your own storage is used. Changing this forces a new Workbook to be created.
	//
	// > **Note:** This is the Resource Manager ID of the Storage Container, rather than the regular ID - and can be accessed on the `storage.Container` Data Source/Resource as `resourceManagerId`.
	StorageContainerId pulumi.StringPtrInput
	// A mapping of tags which should be assigned to the Workbook.
	Tags pulumi.StringMapInput
}

func (WorkbookState) ElementType() reflect.Type {
	return reflect.TypeOf((*workbookState)(nil)).Elem()
}

type workbookArgs struct {
	// Workbook category, as defined by the user at creation time. There may be additional category types beyond the following: `workbook`, `sentinel`. Defaults to `workbook`.
	Category *string `pulumi:"category"`
	// Configuration of this particular workbook. Configuration data is a string containing valid JSON.
	DataJson string `pulumi:"dataJson"`
	// Specifies the description of the workbook.
	Description *string `pulumi:"description"`
	// Specifies the user-defined name (display name) of the workbook.
	DisplayName string `pulumi:"displayName"`
	// An `identity` block as defined below. Changing this forces a new Workbook to be created.
	Identity *WorkbookIdentity `pulumi:"identity"`
	// Specifies the Azure Region where the Workbook should exist. Changing this forces a new Workbook to be created.
	Location *string `pulumi:"location"`
	// Specifies the name of this Workbook as a UUID/GUID. It should not contain any uppercase letters. Changing this forces a new Workbook to be created.
	Name *string `pulumi:"name"`
	// Specifies the name of the Resource Group where the Workbook should exist. Changing this forces a new Workbook to be created.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Resource ID for a source resource. It should not contain any uppercase letters. Defaults to `azure monitor`.
	SourceId *string `pulumi:"sourceId"`
	// Specifies the Resource Manager ID of the Storage Container when bring your own storage is used. Changing this forces a new Workbook to be created.
	//
	// > **Note:** This is the Resource Manager ID of the Storage Container, rather than the regular ID - and can be accessed on the `storage.Container` Data Source/Resource as `resourceManagerId`.
	StorageContainerId *string `pulumi:"storageContainerId"`
	// A mapping of tags which should be assigned to the Workbook.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a Workbook resource.
type WorkbookArgs struct {
	// Workbook category, as defined by the user at creation time. There may be additional category types beyond the following: `workbook`, `sentinel`. Defaults to `workbook`.
	Category pulumi.StringPtrInput
	// Configuration of this particular workbook. Configuration data is a string containing valid JSON.
	DataJson pulumi.StringInput
	// Specifies the description of the workbook.
	Description pulumi.StringPtrInput
	// Specifies the user-defined name (display name) of the workbook.
	DisplayName pulumi.StringInput
	// An `identity` block as defined below. Changing this forces a new Workbook to be created.
	Identity WorkbookIdentityPtrInput
	// Specifies the Azure Region where the Workbook should exist. Changing this forces a new Workbook to be created.
	Location pulumi.StringPtrInput
	// Specifies the name of this Workbook as a UUID/GUID. It should not contain any uppercase letters. Changing this forces a new Workbook to be created.
	Name pulumi.StringPtrInput
	// Specifies the name of the Resource Group where the Workbook should exist. Changing this forces a new Workbook to be created.
	ResourceGroupName pulumi.StringInput
	// Resource ID for a source resource. It should not contain any uppercase letters. Defaults to `azure monitor`.
	SourceId pulumi.StringPtrInput
	// Specifies the Resource Manager ID of the Storage Container when bring your own storage is used. Changing this forces a new Workbook to be created.
	//
	// > **Note:** This is the Resource Manager ID of the Storage Container, rather than the regular ID - and can be accessed on the `storage.Container` Data Source/Resource as `resourceManagerId`.
	StorageContainerId pulumi.StringPtrInput
	// A mapping of tags which should be assigned to the Workbook.
	Tags pulumi.StringMapInput
}

func (WorkbookArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*workbookArgs)(nil)).Elem()
}

type WorkbookInput interface {
	pulumi.Input

	ToWorkbookOutput() WorkbookOutput
	ToWorkbookOutputWithContext(ctx context.Context) WorkbookOutput
}

func (*Workbook) ElementType() reflect.Type {
	return reflect.TypeOf((**Workbook)(nil)).Elem()
}

func (i *Workbook) ToWorkbookOutput() WorkbookOutput {
	return i.ToWorkbookOutputWithContext(context.Background())
}

func (i *Workbook) ToWorkbookOutputWithContext(ctx context.Context) WorkbookOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkbookOutput)
}

// WorkbookArrayInput is an input type that accepts WorkbookArray and WorkbookArrayOutput values.
// You can construct a concrete instance of `WorkbookArrayInput` via:
//
//	WorkbookArray{ WorkbookArgs{...} }
type WorkbookArrayInput interface {
	pulumi.Input

	ToWorkbookArrayOutput() WorkbookArrayOutput
	ToWorkbookArrayOutputWithContext(context.Context) WorkbookArrayOutput
}

type WorkbookArray []WorkbookInput

func (WorkbookArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Workbook)(nil)).Elem()
}

func (i WorkbookArray) ToWorkbookArrayOutput() WorkbookArrayOutput {
	return i.ToWorkbookArrayOutputWithContext(context.Background())
}

func (i WorkbookArray) ToWorkbookArrayOutputWithContext(ctx context.Context) WorkbookArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkbookArrayOutput)
}

// WorkbookMapInput is an input type that accepts WorkbookMap and WorkbookMapOutput values.
// You can construct a concrete instance of `WorkbookMapInput` via:
//
//	WorkbookMap{ "key": WorkbookArgs{...} }
type WorkbookMapInput interface {
	pulumi.Input

	ToWorkbookMapOutput() WorkbookMapOutput
	ToWorkbookMapOutputWithContext(context.Context) WorkbookMapOutput
}

type WorkbookMap map[string]WorkbookInput

func (WorkbookMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Workbook)(nil)).Elem()
}

func (i WorkbookMap) ToWorkbookMapOutput() WorkbookMapOutput {
	return i.ToWorkbookMapOutputWithContext(context.Background())
}

func (i WorkbookMap) ToWorkbookMapOutputWithContext(ctx context.Context) WorkbookMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkbookMapOutput)
}

type WorkbookOutput struct{ *pulumi.OutputState }

func (WorkbookOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Workbook)(nil)).Elem()
}

func (o WorkbookOutput) ToWorkbookOutput() WorkbookOutput {
	return o
}

func (o WorkbookOutput) ToWorkbookOutputWithContext(ctx context.Context) WorkbookOutput {
	return o
}

// Workbook category, as defined by the user at creation time. There may be additional category types beyond the following: `workbook`, `sentinel`. Defaults to `workbook`.
func (o WorkbookOutput) Category() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Workbook) pulumi.StringPtrOutput { return v.Category }).(pulumi.StringPtrOutput)
}

// Configuration of this particular workbook. Configuration data is a string containing valid JSON.
func (o WorkbookOutput) DataJson() pulumi.StringOutput {
	return o.ApplyT(func(v *Workbook) pulumi.StringOutput { return v.DataJson }).(pulumi.StringOutput)
}

// Specifies the description of the workbook.
func (o WorkbookOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Workbook) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Specifies the user-defined name (display name) of the workbook.
func (o WorkbookOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *Workbook) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

// An `identity` block as defined below. Changing this forces a new Workbook to be created.
func (o WorkbookOutput) Identity() WorkbookIdentityPtrOutput {
	return o.ApplyT(func(v *Workbook) WorkbookIdentityPtrOutput { return v.Identity }).(WorkbookIdentityPtrOutput)
}

// Specifies the Azure Region where the Workbook should exist. Changing this forces a new Workbook to be created.
func (o WorkbookOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *Workbook) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// Specifies the name of this Workbook as a UUID/GUID. It should not contain any uppercase letters. Changing this forces a new Workbook to be created.
func (o WorkbookOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Workbook) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Specifies the name of the Resource Group where the Workbook should exist. Changing this forces a new Workbook to be created.
func (o WorkbookOutput) ResourceGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v *Workbook) pulumi.StringOutput { return v.ResourceGroupName }).(pulumi.StringOutput)
}

// Resource ID for a source resource. It should not contain any uppercase letters. Defaults to `azure monitor`.
func (o WorkbookOutput) SourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Workbook) pulumi.StringPtrOutput { return v.SourceId }).(pulumi.StringPtrOutput)
}

// Specifies the Resource Manager ID of the Storage Container when bring your own storage is used. Changing this forces a new Workbook to be created.
//
// > **Note:** This is the Resource Manager ID of the Storage Container, rather than the regular ID - and can be accessed on the `storage.Container` Data Source/Resource as `resourceManagerId`.
func (o WorkbookOutput) StorageContainerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Workbook) pulumi.StringPtrOutput { return v.StorageContainerId }).(pulumi.StringPtrOutput)
}

// A mapping of tags which should be assigned to the Workbook.
func (o WorkbookOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Workbook) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

type WorkbookArrayOutput struct{ *pulumi.OutputState }

func (WorkbookArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Workbook)(nil)).Elem()
}

func (o WorkbookArrayOutput) ToWorkbookArrayOutput() WorkbookArrayOutput {
	return o
}

func (o WorkbookArrayOutput) ToWorkbookArrayOutputWithContext(ctx context.Context) WorkbookArrayOutput {
	return o
}

func (o WorkbookArrayOutput) Index(i pulumi.IntInput) WorkbookOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Workbook {
		return vs[0].([]*Workbook)[vs[1].(int)]
	}).(WorkbookOutput)
}

type WorkbookMapOutput struct{ *pulumi.OutputState }

func (WorkbookMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Workbook)(nil)).Elem()
}

func (o WorkbookMapOutput) ToWorkbookMapOutput() WorkbookMapOutput {
	return o
}

func (o WorkbookMapOutput) ToWorkbookMapOutputWithContext(ctx context.Context) WorkbookMapOutput {
	return o
}

func (o WorkbookMapOutput) MapIndex(k pulumi.StringInput) WorkbookOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Workbook {
		return vs[0].(map[string]*Workbook)[vs[1].(string)]
	}).(WorkbookOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*WorkbookInput)(nil)).Elem(), &Workbook{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkbookArrayInput)(nil)).Elem(), WorkbookArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkbookMapInput)(nil)).Elem(), WorkbookMap{})
	pulumi.RegisterOutputType(WorkbookOutput{})
	pulumi.RegisterOutputType(WorkbookArrayOutput{})
	pulumi.RegisterOutputType(WorkbookMapOutput{})
}
