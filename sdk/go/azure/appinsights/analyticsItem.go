// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package appinsights

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages an Application Insights Analytics Item component.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/appinsights"
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/core"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			exampleResourceGroup, err := core.NewResourceGroup(ctx, "exampleResourceGroup", &core.ResourceGroupArgs{
//				Location: pulumi.String("West Europe"),
//			})
//			if err != nil {
//				return err
//			}
//			exampleInsights, err := appinsights.NewInsights(ctx, "exampleInsights", &appinsights.InsightsArgs{
//				Location:          exampleResourceGroup.Location,
//				ResourceGroupName: exampleResourceGroup.Name,
//				ApplicationType:   pulumi.String("web"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = appinsights.NewAnalyticsItem(ctx, "exampleAnalyticsItem", &appinsights.AnalyticsItemArgs{
//				ApplicationInsightsId: exampleInsights.ID(),
//				Content:               pulumi.String("requests //simple example query"),
//				Scope:                 pulumi.String("shared"),
//				Type:                  pulumi.String("query"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Application Insights Analytics Items can be imported using the `resource id`, e.g.
//
// ```sh
//
//	$ pulumi import azure:appinsights/analyticsItem:AnalyticsItem example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.Insights/components/mycomponent1/analyticsItems/11111111-1111-1111-1111-111111111111
//
// ```
//
//	To find the Analytics Item ID you can query the REST API using the [`az rest` CLI command](https://docs.microsoft.com/cli/azure/reference-index?view=azure-cli-latest#az-rest), e.g. az rest --method GET --uri "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/microsoft.insights/components/appinsightstest/analyticsItems?api-version=2015-05-01"
type AnalyticsItem struct {
	pulumi.CustomResourceState

	// The ID of the Application Insights component on which the Analytics Item exists. Changing this forces a new resource to be created.
	ApplicationInsightsId pulumi.StringOutput `pulumi:"applicationInsightsId"`
	// The content for the Analytics Item, for example the query text if `type` is `query`.
	Content pulumi.StringOutput `pulumi:"content"`
	// The alias to use for the function. Required when `type` is `function`.
	FunctionAlias pulumi.StringPtrOutput `pulumi:"functionAlias"`
	// Specifies the name of the Application Insights Analytics Item. Changing this forces a new resource to be created.
	Name pulumi.StringOutput `pulumi:"name"`
	// The scope for the Analytics Item. Can be `shared` or `user`. Changing this forces a new resource to be created. Must be `shared` for functions.
	Scope pulumi.StringOutput `pulumi:"scope"`
	// A string containing the time the Analytics Item was created.
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
	// A string containing the time the Analytics Item was last modified.
	TimeModified pulumi.StringOutput `pulumi:"timeModified"`
	// The type of Analytics Item to create. Can be one of `query`, `function`, `folder`, `recent`. Changing this forces a new resource to be created.
	Type pulumi.StringOutput `pulumi:"type"`
	// A string indicating the version of the query format
	Version pulumi.StringOutput `pulumi:"version"`
}

// NewAnalyticsItem registers a new resource with the given unique name, arguments, and options.
func NewAnalyticsItem(ctx *pulumi.Context,
	name string, args *AnalyticsItemArgs, opts ...pulumi.ResourceOption) (*AnalyticsItem, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ApplicationInsightsId == nil {
		return nil, errors.New("invalid value for required argument 'ApplicationInsightsId'")
	}
	if args.Content == nil {
		return nil, errors.New("invalid value for required argument 'Content'")
	}
	if args.Scope == nil {
		return nil, errors.New("invalid value for required argument 'Scope'")
	}
	if args.Type == nil {
		return nil, errors.New("invalid value for required argument 'Type'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AnalyticsItem
	err := ctx.RegisterResource("azure:appinsights/analyticsItem:AnalyticsItem", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAnalyticsItem gets an existing AnalyticsItem resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAnalyticsItem(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AnalyticsItemState, opts ...pulumi.ResourceOption) (*AnalyticsItem, error) {
	var resource AnalyticsItem
	err := ctx.ReadResource("azure:appinsights/analyticsItem:AnalyticsItem", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AnalyticsItem resources.
type analyticsItemState struct {
	// The ID of the Application Insights component on which the Analytics Item exists. Changing this forces a new resource to be created.
	ApplicationInsightsId *string `pulumi:"applicationInsightsId"`
	// The content for the Analytics Item, for example the query text if `type` is `query`.
	Content *string `pulumi:"content"`
	// The alias to use for the function. Required when `type` is `function`.
	FunctionAlias *string `pulumi:"functionAlias"`
	// Specifies the name of the Application Insights Analytics Item. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// The scope for the Analytics Item. Can be `shared` or `user`. Changing this forces a new resource to be created. Must be `shared` for functions.
	Scope *string `pulumi:"scope"`
	// A string containing the time the Analytics Item was created.
	TimeCreated *string `pulumi:"timeCreated"`
	// A string containing the time the Analytics Item was last modified.
	TimeModified *string `pulumi:"timeModified"`
	// The type of Analytics Item to create. Can be one of `query`, `function`, `folder`, `recent`. Changing this forces a new resource to be created.
	Type *string `pulumi:"type"`
	// A string indicating the version of the query format
	Version *string `pulumi:"version"`
}

type AnalyticsItemState struct {
	// The ID of the Application Insights component on which the Analytics Item exists. Changing this forces a new resource to be created.
	ApplicationInsightsId pulumi.StringPtrInput
	// The content for the Analytics Item, for example the query text if `type` is `query`.
	Content pulumi.StringPtrInput
	// The alias to use for the function. Required when `type` is `function`.
	FunctionAlias pulumi.StringPtrInput
	// Specifies the name of the Application Insights Analytics Item. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// The scope for the Analytics Item. Can be `shared` or `user`. Changing this forces a new resource to be created. Must be `shared` for functions.
	Scope pulumi.StringPtrInput
	// A string containing the time the Analytics Item was created.
	TimeCreated pulumi.StringPtrInput
	// A string containing the time the Analytics Item was last modified.
	TimeModified pulumi.StringPtrInput
	// The type of Analytics Item to create. Can be one of `query`, `function`, `folder`, `recent`. Changing this forces a new resource to be created.
	Type pulumi.StringPtrInput
	// A string indicating the version of the query format
	Version pulumi.StringPtrInput
}

func (AnalyticsItemState) ElementType() reflect.Type {
	return reflect.TypeOf((*analyticsItemState)(nil)).Elem()
}

type analyticsItemArgs struct {
	// The ID of the Application Insights component on which the Analytics Item exists. Changing this forces a new resource to be created.
	ApplicationInsightsId string `pulumi:"applicationInsightsId"`
	// The content for the Analytics Item, for example the query text if `type` is `query`.
	Content string `pulumi:"content"`
	// The alias to use for the function. Required when `type` is `function`.
	FunctionAlias *string `pulumi:"functionAlias"`
	// Specifies the name of the Application Insights Analytics Item. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// The scope for the Analytics Item. Can be `shared` or `user`. Changing this forces a new resource to be created. Must be `shared` for functions.
	Scope string `pulumi:"scope"`
	// The type of Analytics Item to create. Can be one of `query`, `function`, `folder`, `recent`. Changing this forces a new resource to be created.
	Type string `pulumi:"type"`
}

// The set of arguments for constructing a AnalyticsItem resource.
type AnalyticsItemArgs struct {
	// The ID of the Application Insights component on which the Analytics Item exists. Changing this forces a new resource to be created.
	ApplicationInsightsId pulumi.StringInput
	// The content for the Analytics Item, for example the query text if `type` is `query`.
	Content pulumi.StringInput
	// The alias to use for the function. Required when `type` is `function`.
	FunctionAlias pulumi.StringPtrInput
	// Specifies the name of the Application Insights Analytics Item. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// The scope for the Analytics Item. Can be `shared` or `user`. Changing this forces a new resource to be created. Must be `shared` for functions.
	Scope pulumi.StringInput
	// The type of Analytics Item to create. Can be one of `query`, `function`, `folder`, `recent`. Changing this forces a new resource to be created.
	Type pulumi.StringInput
}

func (AnalyticsItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*analyticsItemArgs)(nil)).Elem()
}

type AnalyticsItemInput interface {
	pulumi.Input

	ToAnalyticsItemOutput() AnalyticsItemOutput
	ToAnalyticsItemOutputWithContext(ctx context.Context) AnalyticsItemOutput
}

func (*AnalyticsItem) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyticsItem)(nil)).Elem()
}

func (i *AnalyticsItem) ToAnalyticsItemOutput() AnalyticsItemOutput {
	return i.ToAnalyticsItemOutputWithContext(context.Background())
}

func (i *AnalyticsItem) ToAnalyticsItemOutputWithContext(ctx context.Context) AnalyticsItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsItemOutput)
}

// AnalyticsItemArrayInput is an input type that accepts AnalyticsItemArray and AnalyticsItemArrayOutput values.
// You can construct a concrete instance of `AnalyticsItemArrayInput` via:
//
//	AnalyticsItemArray{ AnalyticsItemArgs{...} }
type AnalyticsItemArrayInput interface {
	pulumi.Input

	ToAnalyticsItemArrayOutput() AnalyticsItemArrayOutput
	ToAnalyticsItemArrayOutputWithContext(context.Context) AnalyticsItemArrayOutput
}

type AnalyticsItemArray []AnalyticsItemInput

func (AnalyticsItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AnalyticsItem)(nil)).Elem()
}

func (i AnalyticsItemArray) ToAnalyticsItemArrayOutput() AnalyticsItemArrayOutput {
	return i.ToAnalyticsItemArrayOutputWithContext(context.Background())
}

func (i AnalyticsItemArray) ToAnalyticsItemArrayOutputWithContext(ctx context.Context) AnalyticsItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsItemArrayOutput)
}

// AnalyticsItemMapInput is an input type that accepts AnalyticsItemMap and AnalyticsItemMapOutput values.
// You can construct a concrete instance of `AnalyticsItemMapInput` via:
//
//	AnalyticsItemMap{ "key": AnalyticsItemArgs{...} }
type AnalyticsItemMapInput interface {
	pulumi.Input

	ToAnalyticsItemMapOutput() AnalyticsItemMapOutput
	ToAnalyticsItemMapOutputWithContext(context.Context) AnalyticsItemMapOutput
}

type AnalyticsItemMap map[string]AnalyticsItemInput

func (AnalyticsItemMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AnalyticsItem)(nil)).Elem()
}

func (i AnalyticsItemMap) ToAnalyticsItemMapOutput() AnalyticsItemMapOutput {
	return i.ToAnalyticsItemMapOutputWithContext(context.Background())
}

func (i AnalyticsItemMap) ToAnalyticsItemMapOutputWithContext(ctx context.Context) AnalyticsItemMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsItemMapOutput)
}

type AnalyticsItemOutput struct{ *pulumi.OutputState }

func (AnalyticsItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyticsItem)(nil)).Elem()
}

func (o AnalyticsItemOutput) ToAnalyticsItemOutput() AnalyticsItemOutput {
	return o
}

func (o AnalyticsItemOutput) ToAnalyticsItemOutputWithContext(ctx context.Context) AnalyticsItemOutput {
	return o
}

// The ID of the Application Insights component on which the Analytics Item exists. Changing this forces a new resource to be created.
func (o AnalyticsItemOutput) ApplicationInsightsId() pulumi.StringOutput {
	return o.ApplyT(func(v *AnalyticsItem) pulumi.StringOutput { return v.ApplicationInsightsId }).(pulumi.StringOutput)
}

// The content for the Analytics Item, for example the query text if `type` is `query`.
func (o AnalyticsItemOutput) Content() pulumi.StringOutput {
	return o.ApplyT(func(v *AnalyticsItem) pulumi.StringOutput { return v.Content }).(pulumi.StringOutput)
}

// The alias to use for the function. Required when `type` is `function`.
func (o AnalyticsItemOutput) FunctionAlias() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalyticsItem) pulumi.StringPtrOutput { return v.FunctionAlias }).(pulumi.StringPtrOutput)
}

// Specifies the name of the Application Insights Analytics Item. Changing this forces a new resource to be created.
func (o AnalyticsItemOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *AnalyticsItem) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The scope for the Analytics Item. Can be `shared` or `user`. Changing this forces a new resource to be created. Must be `shared` for functions.
func (o AnalyticsItemOutput) Scope() pulumi.StringOutput {
	return o.ApplyT(func(v *AnalyticsItem) pulumi.StringOutput { return v.Scope }).(pulumi.StringOutput)
}

// A string containing the time the Analytics Item was created.
func (o AnalyticsItemOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v *AnalyticsItem) pulumi.StringOutput { return v.TimeCreated }).(pulumi.StringOutput)
}

// A string containing the time the Analytics Item was last modified.
func (o AnalyticsItemOutput) TimeModified() pulumi.StringOutput {
	return o.ApplyT(func(v *AnalyticsItem) pulumi.StringOutput { return v.TimeModified }).(pulumi.StringOutput)
}

// The type of Analytics Item to create. Can be one of `query`, `function`, `folder`, `recent`. Changing this forces a new resource to be created.
func (o AnalyticsItemOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *AnalyticsItem) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

// A string indicating the version of the query format
func (o AnalyticsItemOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v *AnalyticsItem) pulumi.StringOutput { return v.Version }).(pulumi.StringOutput)
}

type AnalyticsItemArrayOutput struct{ *pulumi.OutputState }

func (AnalyticsItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AnalyticsItem)(nil)).Elem()
}

func (o AnalyticsItemArrayOutput) ToAnalyticsItemArrayOutput() AnalyticsItemArrayOutput {
	return o
}

func (o AnalyticsItemArrayOutput) ToAnalyticsItemArrayOutputWithContext(ctx context.Context) AnalyticsItemArrayOutput {
	return o
}

func (o AnalyticsItemArrayOutput) Index(i pulumi.IntInput) AnalyticsItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AnalyticsItem {
		return vs[0].([]*AnalyticsItem)[vs[1].(int)]
	}).(AnalyticsItemOutput)
}

type AnalyticsItemMapOutput struct{ *pulumi.OutputState }

func (AnalyticsItemMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AnalyticsItem)(nil)).Elem()
}

func (o AnalyticsItemMapOutput) ToAnalyticsItemMapOutput() AnalyticsItemMapOutput {
	return o
}

func (o AnalyticsItemMapOutput) ToAnalyticsItemMapOutputWithContext(ctx context.Context) AnalyticsItemMapOutput {
	return o
}

func (o AnalyticsItemMapOutput) MapIndex(k pulumi.StringInput) AnalyticsItemOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AnalyticsItem {
		return vs[0].(map[string]*AnalyticsItem)[vs[1].(string)]
	}).(AnalyticsItemOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AnalyticsItemInput)(nil)).Elem(), &AnalyticsItem{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalyticsItemArrayInput)(nil)).Elem(), AnalyticsItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalyticsItemMapInput)(nil)).Elem(), AnalyticsItemMap{})
	pulumi.RegisterOutputType(AnalyticsItemOutput{})
	pulumi.RegisterOutputType(AnalyticsItemArrayOutput{})
	pulumi.RegisterOutputType(AnalyticsItemMapOutput{})
}
