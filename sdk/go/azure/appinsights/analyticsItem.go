// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package appinsights

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Manages an Application Insights Analytics Item component.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-azurerm/blob/master/website/docs/r/application_insights_analytics_item.html.markdown.
type AnalyticsItem struct {
	s *pulumi.ResourceState
}

// NewAnalyticsItem registers a new resource with the given unique name, arguments, and options.
func NewAnalyticsItem(ctx *pulumi.Context,
	name string, args *AnalyticsItemArgs, opts ...pulumi.ResourceOpt) (*AnalyticsItem, error) {
	if args == nil || args.ApplicationInsightsId == nil {
		return nil, errors.New("missing required argument 'ApplicationInsightsId'")
	}
	if args == nil || args.Content == nil {
		return nil, errors.New("missing required argument 'Content'")
	}
	if args == nil || args.Scope == nil {
		return nil, errors.New("missing required argument 'Scope'")
	}
	if args == nil || args.Type == nil {
		return nil, errors.New("missing required argument 'Type'")
	}
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["applicationInsightsId"] = nil
		inputs["content"] = nil
		inputs["functionAlias"] = nil
		inputs["name"] = nil
		inputs["scope"] = nil
		inputs["type"] = nil
	} else {
		inputs["applicationInsightsId"] = args.ApplicationInsightsId
		inputs["content"] = args.Content
		inputs["functionAlias"] = args.FunctionAlias
		inputs["name"] = args.Name
		inputs["scope"] = args.Scope
		inputs["type"] = args.Type
	}
	inputs["timeCreated"] = nil
	inputs["timeModified"] = nil
	inputs["version"] = nil
	s, err := ctx.RegisterResource("azure:appinsights/analyticsItem:AnalyticsItem", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &AnalyticsItem{s: s}, nil
}

// GetAnalyticsItem gets an existing AnalyticsItem resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAnalyticsItem(ctx *pulumi.Context,
	name string, id pulumi.ID, state *AnalyticsItemState, opts ...pulumi.ResourceOpt) (*AnalyticsItem, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["applicationInsightsId"] = state.ApplicationInsightsId
		inputs["content"] = state.Content
		inputs["functionAlias"] = state.FunctionAlias
		inputs["name"] = state.Name
		inputs["scope"] = state.Scope
		inputs["timeCreated"] = state.TimeCreated
		inputs["timeModified"] = state.TimeModified
		inputs["type"] = state.Type
		inputs["version"] = state.Version
	}
	s, err := ctx.ReadResource("azure:appinsights/analyticsItem:AnalyticsItem", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &AnalyticsItem{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *AnalyticsItem) URN() pulumi.URNOutput {
	return r.s.URN()
}

// ID is this resource's unique identifier assigned by its provider.
func (r *AnalyticsItem) ID() pulumi.IDOutput {
	return r.s.ID()
}

// The ID of the Application Insights component on which the Analytics Item exists. Changing this forces a new resource to be created.
func (r *AnalyticsItem) ApplicationInsightsId() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["applicationInsightsId"])
}

// The content for the Analytics Item, for example the query text if `type` is `query`.
func (r *AnalyticsItem) Content() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["content"])
}

// The alias to use for the function. Required when `type` is `function`.
func (r *AnalyticsItem) FunctionAlias() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["functionAlias"])
}

// Specifies the name of the Application Insights Analytics Item. Changing this forces a new resource to be created.
func (r *AnalyticsItem) Name() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["name"])
}

// The scope for the Analytics Item. Can be `shared` or `user`. Changing this forces a new resource to be created. Must be `shared` for functions.
func (r *AnalyticsItem) Scope() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["scope"])
}

// A string containing the time the Analytics Item was created.
func (r *AnalyticsItem) TimeCreated() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["timeCreated"])
}

// A string containing the time the Analytics Item was last modified.
func (r *AnalyticsItem) TimeModified() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["timeModified"])
}

// The type of Analytics Item to create. Can be one of `query`, `function`, `folder`, `recent`. Changing this forces a new resource to be created.
func (r *AnalyticsItem) Type() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["type"])
}

// A string indicating the version of the query format
func (r *AnalyticsItem) Version() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["version"])
}

// Input properties used for looking up and filtering AnalyticsItem resources.
type AnalyticsItemState struct {
	// The ID of the Application Insights component on which the Analytics Item exists. Changing this forces a new resource to be created.
	ApplicationInsightsId interface{}
	// The content for the Analytics Item, for example the query text if `type` is `query`.
	Content interface{}
	// The alias to use for the function. Required when `type` is `function`.
	FunctionAlias interface{}
	// Specifies the name of the Application Insights Analytics Item. Changing this forces a new resource to be created.
	Name interface{}
	// The scope for the Analytics Item. Can be `shared` or `user`. Changing this forces a new resource to be created. Must be `shared` for functions.
	Scope interface{}
	// A string containing the time the Analytics Item was created.
	TimeCreated interface{}
	// A string containing the time the Analytics Item was last modified.
	TimeModified interface{}
	// The type of Analytics Item to create. Can be one of `query`, `function`, `folder`, `recent`. Changing this forces a new resource to be created.
	Type interface{}
	// A string indicating the version of the query format
	Version interface{}
}

// The set of arguments for constructing a AnalyticsItem resource.
type AnalyticsItemArgs struct {
	// The ID of the Application Insights component on which the Analytics Item exists. Changing this forces a new resource to be created.
	ApplicationInsightsId interface{}
	// The content for the Analytics Item, for example the query text if `type` is `query`.
	Content interface{}
	// The alias to use for the function. Required when `type` is `function`.
	FunctionAlias interface{}
	// Specifies the name of the Application Insights Analytics Item. Changing this forces a new resource to be created.
	Name interface{}
	// The scope for the Analytics Item. Can be `shared` or `user`. Changing this forces a new resource to be created. Must be `shared` for functions.
	Scope interface{}
	// The type of Analytics Item to create. Can be one of `query`, `function`, `folder`, `recent`. Changing this forces a new resource to be created.
	Type interface{}
}
