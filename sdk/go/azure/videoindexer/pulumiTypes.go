// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package videoindexer

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type AccountIdentity struct {
	// Specifies a list of user managed identity ids to be assigned. Required if `type` is `UserAssigned`.
	IdentityIds []string `pulumi:"identityIds"`
	PrincipalId *string  `pulumi:"principalId"`
	TenantId    *string  `pulumi:"tenantId"`
	// Specifies the identity type of the Video Indexer Account. Possible values are `SystemAssigned` (where Azure will generate a Service Principal for you), `UserAssigned` where you can specify the Service Principal IDs in the `identityIds` field, and `SystemAssigned, UserAssigned` which assigns both a system managed identity as well as the specified user assigned identities.
	Type string `pulumi:"type"`
}

// AccountIdentityInput is an input type that accepts AccountIdentityArgs and AccountIdentityOutput values.
// You can construct a concrete instance of `AccountIdentityInput` via:
//
//	AccountIdentityArgs{...}
type AccountIdentityInput interface {
	pulumi.Input

	ToAccountIdentityOutput() AccountIdentityOutput
	ToAccountIdentityOutputWithContext(context.Context) AccountIdentityOutput
}

type AccountIdentityArgs struct {
	// Specifies a list of user managed identity ids to be assigned. Required if `type` is `UserAssigned`.
	IdentityIds pulumi.StringArrayInput `pulumi:"identityIds"`
	PrincipalId pulumi.StringPtrInput   `pulumi:"principalId"`
	TenantId    pulumi.StringPtrInput   `pulumi:"tenantId"`
	// Specifies the identity type of the Video Indexer Account. Possible values are `SystemAssigned` (where Azure will generate a Service Principal for you), `UserAssigned` where you can specify the Service Principal IDs in the `identityIds` field, and `SystemAssigned, UserAssigned` which assigns both a system managed identity as well as the specified user assigned identities.
	Type pulumi.StringInput `pulumi:"type"`
}

func (AccountIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountIdentity)(nil)).Elem()
}

func (i AccountIdentityArgs) ToAccountIdentityOutput() AccountIdentityOutput {
	return i.ToAccountIdentityOutputWithContext(context.Background())
}

func (i AccountIdentityArgs) ToAccountIdentityOutputWithContext(ctx context.Context) AccountIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountIdentityOutput)
}

func (i AccountIdentityArgs) ToAccountIdentityPtrOutput() AccountIdentityPtrOutput {
	return i.ToAccountIdentityPtrOutputWithContext(context.Background())
}

func (i AccountIdentityArgs) ToAccountIdentityPtrOutputWithContext(ctx context.Context) AccountIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountIdentityOutput).ToAccountIdentityPtrOutputWithContext(ctx)
}

// AccountIdentityPtrInput is an input type that accepts AccountIdentityArgs, AccountIdentityPtr and AccountIdentityPtrOutput values.
// You can construct a concrete instance of `AccountIdentityPtrInput` via:
//
//	        AccountIdentityArgs{...}
//
//	or:
//
//	        nil
type AccountIdentityPtrInput interface {
	pulumi.Input

	ToAccountIdentityPtrOutput() AccountIdentityPtrOutput
	ToAccountIdentityPtrOutputWithContext(context.Context) AccountIdentityPtrOutput
}

type accountIdentityPtrType AccountIdentityArgs

func AccountIdentityPtr(v *AccountIdentityArgs) AccountIdentityPtrInput {
	return (*accountIdentityPtrType)(v)
}

func (*accountIdentityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AccountIdentity)(nil)).Elem()
}

func (i *accountIdentityPtrType) ToAccountIdentityPtrOutput() AccountIdentityPtrOutput {
	return i.ToAccountIdentityPtrOutputWithContext(context.Background())
}

func (i *accountIdentityPtrType) ToAccountIdentityPtrOutputWithContext(ctx context.Context) AccountIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountIdentityPtrOutput)
}

type AccountIdentityOutput struct{ *pulumi.OutputState }

func (AccountIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountIdentity)(nil)).Elem()
}

func (o AccountIdentityOutput) ToAccountIdentityOutput() AccountIdentityOutput {
	return o
}

func (o AccountIdentityOutput) ToAccountIdentityOutputWithContext(ctx context.Context) AccountIdentityOutput {
	return o
}

func (o AccountIdentityOutput) ToAccountIdentityPtrOutput() AccountIdentityPtrOutput {
	return o.ToAccountIdentityPtrOutputWithContext(context.Background())
}

func (o AccountIdentityOutput) ToAccountIdentityPtrOutputWithContext(ctx context.Context) AccountIdentityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AccountIdentity) *AccountIdentity {
		return &v
	}).(AccountIdentityPtrOutput)
}

// Specifies a list of user managed identity ids to be assigned. Required if `type` is `UserAssigned`.
func (o AccountIdentityOutput) IdentityIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AccountIdentity) []string { return v.IdentityIds }).(pulumi.StringArrayOutput)
}

func (o AccountIdentityOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccountIdentity) *string { return v.PrincipalId }).(pulumi.StringPtrOutput)
}

func (o AccountIdentityOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccountIdentity) *string { return v.TenantId }).(pulumi.StringPtrOutput)
}

// Specifies the identity type of the Video Indexer Account. Possible values are `SystemAssigned` (where Azure will generate a Service Principal for you), `UserAssigned` where you can specify the Service Principal IDs in the `identityIds` field, and `SystemAssigned, UserAssigned` which assigns both a system managed identity as well as the specified user assigned identities.
func (o AccountIdentityOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v AccountIdentity) string { return v.Type }).(pulumi.StringOutput)
}

type AccountIdentityPtrOutput struct{ *pulumi.OutputState }

func (AccountIdentityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AccountIdentity)(nil)).Elem()
}

func (o AccountIdentityPtrOutput) ToAccountIdentityPtrOutput() AccountIdentityPtrOutput {
	return o
}

func (o AccountIdentityPtrOutput) ToAccountIdentityPtrOutputWithContext(ctx context.Context) AccountIdentityPtrOutput {
	return o
}

func (o AccountIdentityPtrOutput) Elem() AccountIdentityOutput {
	return o.ApplyT(func(v *AccountIdentity) AccountIdentity {
		if v != nil {
			return *v
		}
		var ret AccountIdentity
		return ret
	}).(AccountIdentityOutput)
}

// Specifies a list of user managed identity ids to be assigned. Required if `type` is `UserAssigned`.
func (o AccountIdentityPtrOutput) IdentityIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AccountIdentity) []string {
		if v == nil {
			return nil
		}
		return v.IdentityIds
	}).(pulumi.StringArrayOutput)
}

func (o AccountIdentityPtrOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccountIdentity) *string {
		if v == nil {
			return nil
		}
		return v.PrincipalId
	}).(pulumi.StringPtrOutput)
}

func (o AccountIdentityPtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccountIdentity) *string {
		if v == nil {
			return nil
		}
		return v.TenantId
	}).(pulumi.StringPtrOutput)
}

// Specifies the identity type of the Video Indexer Account. Possible values are `SystemAssigned` (where Azure will generate a Service Principal for you), `UserAssigned` where you can specify the Service Principal IDs in the `identityIds` field, and `SystemAssigned, UserAssigned` which assigns both a system managed identity as well as the specified user assigned identities.
func (o AccountIdentityPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccountIdentity) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type AccountStorage struct {
	// The ID of the storage account to be associated with the Video Indexer Account. Changing this forces a new Video Indexer Account to be created.
	StorageAccountId string `pulumi:"storageAccountId"`
	// The reference to the user assigned identity to use to access the Storage Account.
	UserAssignedIdentityId *string `pulumi:"userAssignedIdentityId"`
}

// AccountStorageInput is an input type that accepts AccountStorageArgs and AccountStorageOutput values.
// You can construct a concrete instance of `AccountStorageInput` via:
//
//	AccountStorageArgs{...}
type AccountStorageInput interface {
	pulumi.Input

	ToAccountStorageOutput() AccountStorageOutput
	ToAccountStorageOutputWithContext(context.Context) AccountStorageOutput
}

type AccountStorageArgs struct {
	// The ID of the storage account to be associated with the Video Indexer Account. Changing this forces a new Video Indexer Account to be created.
	StorageAccountId pulumi.StringInput `pulumi:"storageAccountId"`
	// The reference to the user assigned identity to use to access the Storage Account.
	UserAssignedIdentityId pulumi.StringPtrInput `pulumi:"userAssignedIdentityId"`
}

func (AccountStorageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountStorage)(nil)).Elem()
}

func (i AccountStorageArgs) ToAccountStorageOutput() AccountStorageOutput {
	return i.ToAccountStorageOutputWithContext(context.Background())
}

func (i AccountStorageArgs) ToAccountStorageOutputWithContext(ctx context.Context) AccountStorageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountStorageOutput)
}

func (i AccountStorageArgs) ToAccountStoragePtrOutput() AccountStoragePtrOutput {
	return i.ToAccountStoragePtrOutputWithContext(context.Background())
}

func (i AccountStorageArgs) ToAccountStoragePtrOutputWithContext(ctx context.Context) AccountStoragePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountStorageOutput).ToAccountStoragePtrOutputWithContext(ctx)
}

// AccountStoragePtrInput is an input type that accepts AccountStorageArgs, AccountStoragePtr and AccountStoragePtrOutput values.
// You can construct a concrete instance of `AccountStoragePtrInput` via:
//
//	        AccountStorageArgs{...}
//
//	or:
//
//	        nil
type AccountStoragePtrInput interface {
	pulumi.Input

	ToAccountStoragePtrOutput() AccountStoragePtrOutput
	ToAccountStoragePtrOutputWithContext(context.Context) AccountStoragePtrOutput
}

type accountStoragePtrType AccountStorageArgs

func AccountStoragePtr(v *AccountStorageArgs) AccountStoragePtrInput {
	return (*accountStoragePtrType)(v)
}

func (*accountStoragePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AccountStorage)(nil)).Elem()
}

func (i *accountStoragePtrType) ToAccountStoragePtrOutput() AccountStoragePtrOutput {
	return i.ToAccountStoragePtrOutputWithContext(context.Background())
}

func (i *accountStoragePtrType) ToAccountStoragePtrOutputWithContext(ctx context.Context) AccountStoragePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountStoragePtrOutput)
}

type AccountStorageOutput struct{ *pulumi.OutputState }

func (AccountStorageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountStorage)(nil)).Elem()
}

func (o AccountStorageOutput) ToAccountStorageOutput() AccountStorageOutput {
	return o
}

func (o AccountStorageOutput) ToAccountStorageOutputWithContext(ctx context.Context) AccountStorageOutput {
	return o
}

func (o AccountStorageOutput) ToAccountStoragePtrOutput() AccountStoragePtrOutput {
	return o.ToAccountStoragePtrOutputWithContext(context.Background())
}

func (o AccountStorageOutput) ToAccountStoragePtrOutputWithContext(ctx context.Context) AccountStoragePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AccountStorage) *AccountStorage {
		return &v
	}).(AccountStoragePtrOutput)
}

// The ID of the storage account to be associated with the Video Indexer Account. Changing this forces a new Video Indexer Account to be created.
func (o AccountStorageOutput) StorageAccountId() pulumi.StringOutput {
	return o.ApplyT(func(v AccountStorage) string { return v.StorageAccountId }).(pulumi.StringOutput)
}

// The reference to the user assigned identity to use to access the Storage Account.
func (o AccountStorageOutput) UserAssignedIdentityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccountStorage) *string { return v.UserAssignedIdentityId }).(pulumi.StringPtrOutput)
}

type AccountStoragePtrOutput struct{ *pulumi.OutputState }

func (AccountStoragePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AccountStorage)(nil)).Elem()
}

func (o AccountStoragePtrOutput) ToAccountStoragePtrOutput() AccountStoragePtrOutput {
	return o
}

func (o AccountStoragePtrOutput) ToAccountStoragePtrOutputWithContext(ctx context.Context) AccountStoragePtrOutput {
	return o
}

func (o AccountStoragePtrOutput) Elem() AccountStorageOutput {
	return o.ApplyT(func(v *AccountStorage) AccountStorage {
		if v != nil {
			return *v
		}
		var ret AccountStorage
		return ret
	}).(AccountStorageOutput)
}

// The ID of the storage account to be associated with the Video Indexer Account. Changing this forces a new Video Indexer Account to be created.
func (o AccountStoragePtrOutput) StorageAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccountStorage) *string {
		if v == nil {
			return nil
		}
		return &v.StorageAccountId
	}).(pulumi.StringPtrOutput)
}

// The reference to the user assigned identity to use to access the Storage Account.
func (o AccountStoragePtrOutput) UserAssignedIdentityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccountStorage) *string {
		if v == nil {
			return nil
		}
		return v.UserAssignedIdentityId
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AccountIdentityInput)(nil)).Elem(), AccountIdentityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccountIdentityPtrInput)(nil)).Elem(), AccountIdentityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccountStorageInput)(nil)).Elem(), AccountStorageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccountStoragePtrInput)(nil)).Elem(), AccountStorageArgs{})
	pulumi.RegisterOutputType(AccountIdentityOutput{})
	pulumi.RegisterOutputType(AccountIdentityPtrOutput{})
	pulumi.RegisterOutputType(AccountStorageOutput{})
	pulumi.RegisterOutputType(AccountStoragePtrOutput{})
}
