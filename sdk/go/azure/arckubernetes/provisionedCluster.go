// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package arckubernetes

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages an Arc Kubernetes Provisioned Cluster.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/arckubernetes"
//	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/core"
//	"github.com/pulumi/pulumi-azuread/sdk/v5/go/azuread"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			example, err := core.NewResourceGroup(ctx, "example", &core.ResourceGroupArgs{
//				Name:     pulumi.String("example-resources"),
//				Location: pulumi.String("West Europe"),
//			})
//			if err != nil {
//				return err
//			}
//			current, err := core.GetClientConfig(ctx, map[string]interface{}{}, nil)
//			if err != nil {
//				return err
//			}
//			exampleGroup, err := azuread.NewGroup(ctx, "example", &azuread.GroupArgs{
//				DisplayName: pulumi.String("example-adg"),
//				Owners: pulumi.StringArray{
//					pulumi.String(current.ObjectId),
//				},
//				SecurityEnabled: pulumi.Bool(true),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = arckubernetes.NewProvisionedCluster(ctx, "example", &arckubernetes.ProvisionedClusterArgs{
//				Name:              pulumi.String("example-akpc"),
//				ResourceGroupName: example.Name,
//				Location:          example.Location,
//				AzureActiveDirectory: &arckubernetes.ProvisionedClusterAzureActiveDirectoryArgs{
//					AzureRbacEnabled: pulumi.Bool(true),
//					AdminGroupObjectIds: pulumi.StringArray{
//						exampleGroup.ID(),
//					},
//					TenantId: pulumi.String(current.TenantId),
//				},
//				Identity: &arckubernetes.ProvisionedClusterIdentityArgs{
//					Type: pulumi.String("SystemAssigned"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## API Providers
//
// <!-- This section is generated, changes will be overwritten -->
// This resource uses the following Azure API Providers:
//
// * `Microsoft.Kubernetes` - 2024-01-01
//
// ## Import
//
// Arc Kubernetes Provisioned Clusters can be imported using the `resource id`, e.g.
//
// ```sh
// $ pulumi import azure:arckubernetes/provisionedCluster:ProvisionedCluster example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg1/providers/Microsoft.Kubernetes/connectedClusters/cluster1
// ```
type ProvisionedCluster struct {
	pulumi.CustomResourceState

	// The version of the agent running on the cluster resource.
	AgentVersion pulumi.StringOutput `pulumi:"agentVersion"`
	// Whether the Arc agents will be upgraded automatically to the latest version. Defaults to `true`.
	ArcAgentAutoUpgradeEnabled pulumi.BoolPtrOutput `pulumi:"arcAgentAutoUpgradeEnabled"`
	// The version of the Arc agents to be installed on the cluster.
	ArcAgentDesiredVersion pulumi.StringPtrOutput `pulumi:"arcAgentDesiredVersion"`
	// An `azureActiveDirectory` block as defined below.
	AzureActiveDirectory ProvisionedClusterAzureActiveDirectoryPtrOutput `pulumi:"azureActiveDirectory"`
	// The distribution running on this Arc Kubernetes Provisioned Cluster.
	Distribution pulumi.StringOutput `pulumi:"distribution"`
	// An `identity` block as defined below. Changing this forces a new Arc Kubernetes Provisioned Cluster to be created.
	Identity ProvisionedClusterIdentityOutput `pulumi:"identity"`
	// The infrastructure on which the Arc Kubernetes Provisioned Cluster is running on.
	Infrastructure pulumi.StringOutput `pulumi:"infrastructure"`
	// The Kubernetes version of the cluster resource.
	KubernetesVersion pulumi.StringOutput `pulumi:"kubernetesVersion"`
	// The Azure Region where the Arc Kubernetes Provisioned Cluster should exist. Changing this forces a new Arc Kubernetes Provisioned Cluster to be created.
	Location pulumi.StringOutput `pulumi:"location"`
	// The name which should be used for this Arc Kubernetes Provisioned Cluster. Changing this forces a new Arc Kubernetes Provisioned Cluster to be created.
	Name pulumi.StringOutput `pulumi:"name"`
	// The cluster offering.
	Offering pulumi.StringOutput `pulumi:"offering"`
	// The name of the Resource Group where the Arc Kubernetes Provisioned Cluster should exist. Changing this forces a new Arc Kubernetes Provisioned Cluster to be created.
	ResourceGroupName pulumi.StringOutput `pulumi:"resourceGroupName"`
	// A mapping of tags which should be assigned to the Arc Kubernetes Provisioned Cluster.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// The number of CPU cores present in the cluster resource.
	TotalCoreCount pulumi.IntOutput `pulumi:"totalCoreCount"`
	// The number of nodes present in the cluster resource.
	TotalNodeCount pulumi.IntOutput `pulumi:"totalNodeCount"`
}

// NewProvisionedCluster registers a new resource with the given unique name, arguments, and options.
func NewProvisionedCluster(ctx *pulumi.Context,
	name string, args *ProvisionedClusterArgs, opts ...pulumi.ResourceOption) (*ProvisionedCluster, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Identity == nil {
		return nil, errors.New("invalid value for required argument 'Identity'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ProvisionedCluster
	err := ctx.RegisterResource("azure:arckubernetes/provisionedCluster:ProvisionedCluster", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetProvisionedCluster gets an existing ProvisionedCluster resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetProvisionedCluster(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ProvisionedClusterState, opts ...pulumi.ResourceOption) (*ProvisionedCluster, error) {
	var resource ProvisionedCluster
	err := ctx.ReadResource("azure:arckubernetes/provisionedCluster:ProvisionedCluster", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ProvisionedCluster resources.
type provisionedClusterState struct {
	// The version of the agent running on the cluster resource.
	AgentVersion *string `pulumi:"agentVersion"`
	// Whether the Arc agents will be upgraded automatically to the latest version. Defaults to `true`.
	ArcAgentAutoUpgradeEnabled *bool `pulumi:"arcAgentAutoUpgradeEnabled"`
	// The version of the Arc agents to be installed on the cluster.
	ArcAgentDesiredVersion *string `pulumi:"arcAgentDesiredVersion"`
	// An `azureActiveDirectory` block as defined below.
	AzureActiveDirectory *ProvisionedClusterAzureActiveDirectory `pulumi:"azureActiveDirectory"`
	// The distribution running on this Arc Kubernetes Provisioned Cluster.
	Distribution *string `pulumi:"distribution"`
	// An `identity` block as defined below. Changing this forces a new Arc Kubernetes Provisioned Cluster to be created.
	Identity *ProvisionedClusterIdentity `pulumi:"identity"`
	// The infrastructure on which the Arc Kubernetes Provisioned Cluster is running on.
	Infrastructure *string `pulumi:"infrastructure"`
	// The Kubernetes version of the cluster resource.
	KubernetesVersion *string `pulumi:"kubernetesVersion"`
	// The Azure Region where the Arc Kubernetes Provisioned Cluster should exist. Changing this forces a new Arc Kubernetes Provisioned Cluster to be created.
	Location *string `pulumi:"location"`
	// The name which should be used for this Arc Kubernetes Provisioned Cluster. Changing this forces a new Arc Kubernetes Provisioned Cluster to be created.
	Name *string `pulumi:"name"`
	// The cluster offering.
	Offering *string `pulumi:"offering"`
	// The name of the Resource Group where the Arc Kubernetes Provisioned Cluster should exist. Changing this forces a new Arc Kubernetes Provisioned Cluster to be created.
	ResourceGroupName *string `pulumi:"resourceGroupName"`
	// A mapping of tags which should be assigned to the Arc Kubernetes Provisioned Cluster.
	Tags map[string]string `pulumi:"tags"`
	// The number of CPU cores present in the cluster resource.
	TotalCoreCount *int `pulumi:"totalCoreCount"`
	// The number of nodes present in the cluster resource.
	TotalNodeCount *int `pulumi:"totalNodeCount"`
}

type ProvisionedClusterState struct {
	// The version of the agent running on the cluster resource.
	AgentVersion pulumi.StringPtrInput
	// Whether the Arc agents will be upgraded automatically to the latest version. Defaults to `true`.
	ArcAgentAutoUpgradeEnabled pulumi.BoolPtrInput
	// The version of the Arc agents to be installed on the cluster.
	ArcAgentDesiredVersion pulumi.StringPtrInput
	// An `azureActiveDirectory` block as defined below.
	AzureActiveDirectory ProvisionedClusterAzureActiveDirectoryPtrInput
	// The distribution running on this Arc Kubernetes Provisioned Cluster.
	Distribution pulumi.StringPtrInput
	// An `identity` block as defined below. Changing this forces a new Arc Kubernetes Provisioned Cluster to be created.
	Identity ProvisionedClusterIdentityPtrInput
	// The infrastructure on which the Arc Kubernetes Provisioned Cluster is running on.
	Infrastructure pulumi.StringPtrInput
	// The Kubernetes version of the cluster resource.
	KubernetesVersion pulumi.StringPtrInput
	// The Azure Region where the Arc Kubernetes Provisioned Cluster should exist. Changing this forces a new Arc Kubernetes Provisioned Cluster to be created.
	Location pulumi.StringPtrInput
	// The name which should be used for this Arc Kubernetes Provisioned Cluster. Changing this forces a new Arc Kubernetes Provisioned Cluster to be created.
	Name pulumi.StringPtrInput
	// The cluster offering.
	Offering pulumi.StringPtrInput
	// The name of the Resource Group where the Arc Kubernetes Provisioned Cluster should exist. Changing this forces a new Arc Kubernetes Provisioned Cluster to be created.
	ResourceGroupName pulumi.StringPtrInput
	// A mapping of tags which should be assigned to the Arc Kubernetes Provisioned Cluster.
	Tags pulumi.StringMapInput
	// The number of CPU cores present in the cluster resource.
	TotalCoreCount pulumi.IntPtrInput
	// The number of nodes present in the cluster resource.
	TotalNodeCount pulumi.IntPtrInput
}

func (ProvisionedClusterState) ElementType() reflect.Type {
	return reflect.TypeOf((*provisionedClusterState)(nil)).Elem()
}

type provisionedClusterArgs struct {
	// Whether the Arc agents will be upgraded automatically to the latest version. Defaults to `true`.
	ArcAgentAutoUpgradeEnabled *bool `pulumi:"arcAgentAutoUpgradeEnabled"`
	// The version of the Arc agents to be installed on the cluster.
	ArcAgentDesiredVersion *string `pulumi:"arcAgentDesiredVersion"`
	// An `azureActiveDirectory` block as defined below.
	AzureActiveDirectory *ProvisionedClusterAzureActiveDirectory `pulumi:"azureActiveDirectory"`
	// An `identity` block as defined below. Changing this forces a new Arc Kubernetes Provisioned Cluster to be created.
	Identity ProvisionedClusterIdentity `pulumi:"identity"`
	// The Azure Region where the Arc Kubernetes Provisioned Cluster should exist. Changing this forces a new Arc Kubernetes Provisioned Cluster to be created.
	Location *string `pulumi:"location"`
	// The name which should be used for this Arc Kubernetes Provisioned Cluster. Changing this forces a new Arc Kubernetes Provisioned Cluster to be created.
	Name *string `pulumi:"name"`
	// The name of the Resource Group where the Arc Kubernetes Provisioned Cluster should exist. Changing this forces a new Arc Kubernetes Provisioned Cluster to be created.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// A mapping of tags which should be assigned to the Arc Kubernetes Provisioned Cluster.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a ProvisionedCluster resource.
type ProvisionedClusterArgs struct {
	// Whether the Arc agents will be upgraded automatically to the latest version. Defaults to `true`.
	ArcAgentAutoUpgradeEnabled pulumi.BoolPtrInput
	// The version of the Arc agents to be installed on the cluster.
	ArcAgentDesiredVersion pulumi.StringPtrInput
	// An `azureActiveDirectory` block as defined below.
	AzureActiveDirectory ProvisionedClusterAzureActiveDirectoryPtrInput
	// An `identity` block as defined below. Changing this forces a new Arc Kubernetes Provisioned Cluster to be created.
	Identity ProvisionedClusterIdentityInput
	// The Azure Region where the Arc Kubernetes Provisioned Cluster should exist. Changing this forces a new Arc Kubernetes Provisioned Cluster to be created.
	Location pulumi.StringPtrInput
	// The name which should be used for this Arc Kubernetes Provisioned Cluster. Changing this forces a new Arc Kubernetes Provisioned Cluster to be created.
	Name pulumi.StringPtrInput
	// The name of the Resource Group where the Arc Kubernetes Provisioned Cluster should exist. Changing this forces a new Arc Kubernetes Provisioned Cluster to be created.
	ResourceGroupName pulumi.StringInput
	// A mapping of tags which should be assigned to the Arc Kubernetes Provisioned Cluster.
	Tags pulumi.StringMapInput
}

func (ProvisionedClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*provisionedClusterArgs)(nil)).Elem()
}

type ProvisionedClusterInput interface {
	pulumi.Input

	ToProvisionedClusterOutput() ProvisionedClusterOutput
	ToProvisionedClusterOutputWithContext(ctx context.Context) ProvisionedClusterOutput
}

func (*ProvisionedCluster) ElementType() reflect.Type {
	return reflect.TypeOf((**ProvisionedCluster)(nil)).Elem()
}

func (i *ProvisionedCluster) ToProvisionedClusterOutput() ProvisionedClusterOutput {
	return i.ToProvisionedClusterOutputWithContext(context.Background())
}

func (i *ProvisionedCluster) ToProvisionedClusterOutputWithContext(ctx context.Context) ProvisionedClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProvisionedClusterOutput)
}

// ProvisionedClusterArrayInput is an input type that accepts ProvisionedClusterArray and ProvisionedClusterArrayOutput values.
// You can construct a concrete instance of `ProvisionedClusterArrayInput` via:
//
//	ProvisionedClusterArray{ ProvisionedClusterArgs{...} }
type ProvisionedClusterArrayInput interface {
	pulumi.Input

	ToProvisionedClusterArrayOutput() ProvisionedClusterArrayOutput
	ToProvisionedClusterArrayOutputWithContext(context.Context) ProvisionedClusterArrayOutput
}

type ProvisionedClusterArray []ProvisionedClusterInput

func (ProvisionedClusterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ProvisionedCluster)(nil)).Elem()
}

func (i ProvisionedClusterArray) ToProvisionedClusterArrayOutput() ProvisionedClusterArrayOutput {
	return i.ToProvisionedClusterArrayOutputWithContext(context.Background())
}

func (i ProvisionedClusterArray) ToProvisionedClusterArrayOutputWithContext(ctx context.Context) ProvisionedClusterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProvisionedClusterArrayOutput)
}

// ProvisionedClusterMapInput is an input type that accepts ProvisionedClusterMap and ProvisionedClusterMapOutput values.
// You can construct a concrete instance of `ProvisionedClusterMapInput` via:
//
//	ProvisionedClusterMap{ "key": ProvisionedClusterArgs{...} }
type ProvisionedClusterMapInput interface {
	pulumi.Input

	ToProvisionedClusterMapOutput() ProvisionedClusterMapOutput
	ToProvisionedClusterMapOutputWithContext(context.Context) ProvisionedClusterMapOutput
}

type ProvisionedClusterMap map[string]ProvisionedClusterInput

func (ProvisionedClusterMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ProvisionedCluster)(nil)).Elem()
}

func (i ProvisionedClusterMap) ToProvisionedClusterMapOutput() ProvisionedClusterMapOutput {
	return i.ToProvisionedClusterMapOutputWithContext(context.Background())
}

func (i ProvisionedClusterMap) ToProvisionedClusterMapOutputWithContext(ctx context.Context) ProvisionedClusterMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProvisionedClusterMapOutput)
}

type ProvisionedClusterOutput struct{ *pulumi.OutputState }

func (ProvisionedClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProvisionedCluster)(nil)).Elem()
}

func (o ProvisionedClusterOutput) ToProvisionedClusterOutput() ProvisionedClusterOutput {
	return o
}

func (o ProvisionedClusterOutput) ToProvisionedClusterOutputWithContext(ctx context.Context) ProvisionedClusterOutput {
	return o
}

// The version of the agent running on the cluster resource.
func (o ProvisionedClusterOutput) AgentVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *ProvisionedCluster) pulumi.StringOutput { return v.AgentVersion }).(pulumi.StringOutput)
}

// Whether the Arc agents will be upgraded automatically to the latest version. Defaults to `true`.
func (o ProvisionedClusterOutput) ArcAgentAutoUpgradeEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ProvisionedCluster) pulumi.BoolPtrOutput { return v.ArcAgentAutoUpgradeEnabled }).(pulumi.BoolPtrOutput)
}

// The version of the Arc agents to be installed on the cluster.
func (o ProvisionedClusterOutput) ArcAgentDesiredVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProvisionedCluster) pulumi.StringPtrOutput { return v.ArcAgentDesiredVersion }).(pulumi.StringPtrOutput)
}

// An `azureActiveDirectory` block as defined below.
func (o ProvisionedClusterOutput) AzureActiveDirectory() ProvisionedClusterAzureActiveDirectoryPtrOutput {
	return o.ApplyT(func(v *ProvisionedCluster) ProvisionedClusterAzureActiveDirectoryPtrOutput {
		return v.AzureActiveDirectory
	}).(ProvisionedClusterAzureActiveDirectoryPtrOutput)
}

// The distribution running on this Arc Kubernetes Provisioned Cluster.
func (o ProvisionedClusterOutput) Distribution() pulumi.StringOutput {
	return o.ApplyT(func(v *ProvisionedCluster) pulumi.StringOutput { return v.Distribution }).(pulumi.StringOutput)
}

// An `identity` block as defined below. Changing this forces a new Arc Kubernetes Provisioned Cluster to be created.
func (o ProvisionedClusterOutput) Identity() ProvisionedClusterIdentityOutput {
	return o.ApplyT(func(v *ProvisionedCluster) ProvisionedClusterIdentityOutput { return v.Identity }).(ProvisionedClusterIdentityOutput)
}

// The infrastructure on which the Arc Kubernetes Provisioned Cluster is running on.
func (o ProvisionedClusterOutput) Infrastructure() pulumi.StringOutput {
	return o.ApplyT(func(v *ProvisionedCluster) pulumi.StringOutput { return v.Infrastructure }).(pulumi.StringOutput)
}

// The Kubernetes version of the cluster resource.
func (o ProvisionedClusterOutput) KubernetesVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *ProvisionedCluster) pulumi.StringOutput { return v.KubernetesVersion }).(pulumi.StringOutput)
}

// The Azure Region where the Arc Kubernetes Provisioned Cluster should exist. Changing this forces a new Arc Kubernetes Provisioned Cluster to be created.
func (o ProvisionedClusterOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *ProvisionedCluster) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// The name which should be used for this Arc Kubernetes Provisioned Cluster. Changing this forces a new Arc Kubernetes Provisioned Cluster to be created.
func (o ProvisionedClusterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ProvisionedCluster) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The cluster offering.
func (o ProvisionedClusterOutput) Offering() pulumi.StringOutput {
	return o.ApplyT(func(v *ProvisionedCluster) pulumi.StringOutput { return v.Offering }).(pulumi.StringOutput)
}

// The name of the Resource Group where the Arc Kubernetes Provisioned Cluster should exist. Changing this forces a new Arc Kubernetes Provisioned Cluster to be created.
func (o ProvisionedClusterOutput) ResourceGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v *ProvisionedCluster) pulumi.StringOutput { return v.ResourceGroupName }).(pulumi.StringOutput)
}

// A mapping of tags which should be assigned to the Arc Kubernetes Provisioned Cluster.
func (o ProvisionedClusterOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ProvisionedCluster) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// The number of CPU cores present in the cluster resource.
func (o ProvisionedClusterOutput) TotalCoreCount() pulumi.IntOutput {
	return o.ApplyT(func(v *ProvisionedCluster) pulumi.IntOutput { return v.TotalCoreCount }).(pulumi.IntOutput)
}

// The number of nodes present in the cluster resource.
func (o ProvisionedClusterOutput) TotalNodeCount() pulumi.IntOutput {
	return o.ApplyT(func(v *ProvisionedCluster) pulumi.IntOutput { return v.TotalNodeCount }).(pulumi.IntOutput)
}

type ProvisionedClusterArrayOutput struct{ *pulumi.OutputState }

func (ProvisionedClusterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ProvisionedCluster)(nil)).Elem()
}

func (o ProvisionedClusterArrayOutput) ToProvisionedClusterArrayOutput() ProvisionedClusterArrayOutput {
	return o
}

func (o ProvisionedClusterArrayOutput) ToProvisionedClusterArrayOutputWithContext(ctx context.Context) ProvisionedClusterArrayOutput {
	return o
}

func (o ProvisionedClusterArrayOutput) Index(i pulumi.IntInput) ProvisionedClusterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ProvisionedCluster {
		return vs[0].([]*ProvisionedCluster)[vs[1].(int)]
	}).(ProvisionedClusterOutput)
}

type ProvisionedClusterMapOutput struct{ *pulumi.OutputState }

func (ProvisionedClusterMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ProvisionedCluster)(nil)).Elem()
}

func (o ProvisionedClusterMapOutput) ToProvisionedClusterMapOutput() ProvisionedClusterMapOutput {
	return o
}

func (o ProvisionedClusterMapOutput) ToProvisionedClusterMapOutputWithContext(ctx context.Context) ProvisionedClusterMapOutput {
	return o
}

func (o ProvisionedClusterMapOutput) MapIndex(k pulumi.StringInput) ProvisionedClusterOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ProvisionedCluster {
		return vs[0].(map[string]*ProvisionedCluster)[vs[1].(string)]
	}).(ProvisionedClusterOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ProvisionedClusterInput)(nil)).Elem(), &ProvisionedCluster{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProvisionedClusterArrayInput)(nil)).Elem(), ProvisionedClusterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProvisionedClusterMapInput)(nil)).Elem(), ProvisionedClusterMap{})
	pulumi.RegisterOutputType(ProvisionedClusterOutput{})
	pulumi.RegisterOutputType(ProvisionedClusterArrayOutput{})
	pulumi.RegisterOutputType(ProvisionedClusterMapOutput{})
}
