// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package maintenance

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages a maintenance assignment to a virtual machine scale set.
//
// ## Import
//
// Maintenance Assignment can be imported using the `resource id`, e.g.
//
// ```sh
//  $ pulumi import azure:maintenance/assignmentVirtualMachineScaleSet:AssignmentVirtualMachineScaleSet example /subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/resGroup1/providers/microsoft.compute/virtualMachineScaleSets/vmss1/providers/Microsoft.Maintenance/configurationAssignments/assign1
// ```
type AssignmentVirtualMachineScaleSet struct {
	pulumi.CustomResourceState

	// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
	Location pulumi.StringOutput `pulumi:"location"`
	// Specifies the ID of the Maintenance Configuration Resource. Changing this forces a new resource to be created.
	MaintenanceConfigurationId pulumi.StringOutput `pulumi:"maintenanceConfigurationId"`
	// Specifies the Virtual Machine Scale Set ID to which the Maintenance Configuration will be assigned. Changing this forces a new resource to be created.
	VirtualMachineScaleSetId pulumi.StringOutput `pulumi:"virtualMachineScaleSetId"`
}

// NewAssignmentVirtualMachineScaleSet registers a new resource with the given unique name, arguments, and options.
func NewAssignmentVirtualMachineScaleSet(ctx *pulumi.Context,
	name string, args *AssignmentVirtualMachineScaleSetArgs, opts ...pulumi.ResourceOption) (*AssignmentVirtualMachineScaleSet, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.MaintenanceConfigurationId == nil {
		return nil, errors.New("invalid value for required argument 'MaintenanceConfigurationId'")
	}
	if args.VirtualMachineScaleSetId == nil {
		return nil, errors.New("invalid value for required argument 'VirtualMachineScaleSetId'")
	}
	var resource AssignmentVirtualMachineScaleSet
	err := ctx.RegisterResource("azure:maintenance/assignmentVirtualMachineScaleSet:AssignmentVirtualMachineScaleSet", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAssignmentVirtualMachineScaleSet gets an existing AssignmentVirtualMachineScaleSet resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAssignmentVirtualMachineScaleSet(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AssignmentVirtualMachineScaleSetState, opts ...pulumi.ResourceOption) (*AssignmentVirtualMachineScaleSet, error) {
	var resource AssignmentVirtualMachineScaleSet
	err := ctx.ReadResource("azure:maintenance/assignmentVirtualMachineScaleSet:AssignmentVirtualMachineScaleSet", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AssignmentVirtualMachineScaleSet resources.
type assignmentVirtualMachineScaleSetState struct {
	// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
	Location *string `pulumi:"location"`
	// Specifies the ID of the Maintenance Configuration Resource. Changing this forces a new resource to be created.
	MaintenanceConfigurationId *string `pulumi:"maintenanceConfigurationId"`
	// Specifies the Virtual Machine Scale Set ID to which the Maintenance Configuration will be assigned. Changing this forces a new resource to be created.
	VirtualMachineScaleSetId *string `pulumi:"virtualMachineScaleSetId"`
}

type AssignmentVirtualMachineScaleSetState struct {
	// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
	Location pulumi.StringPtrInput
	// Specifies the ID of the Maintenance Configuration Resource. Changing this forces a new resource to be created.
	MaintenanceConfigurationId pulumi.StringPtrInput
	// Specifies the Virtual Machine Scale Set ID to which the Maintenance Configuration will be assigned. Changing this forces a new resource to be created.
	VirtualMachineScaleSetId pulumi.StringPtrInput
}

func (AssignmentVirtualMachineScaleSetState) ElementType() reflect.Type {
	return reflect.TypeOf((*assignmentVirtualMachineScaleSetState)(nil)).Elem()
}

type assignmentVirtualMachineScaleSetArgs struct {
	// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
	Location *string `pulumi:"location"`
	// Specifies the ID of the Maintenance Configuration Resource. Changing this forces a new resource to be created.
	MaintenanceConfigurationId string `pulumi:"maintenanceConfigurationId"`
	// Specifies the Virtual Machine Scale Set ID to which the Maintenance Configuration will be assigned. Changing this forces a new resource to be created.
	VirtualMachineScaleSetId string `pulumi:"virtualMachineScaleSetId"`
}

// The set of arguments for constructing a AssignmentVirtualMachineScaleSet resource.
type AssignmentVirtualMachineScaleSetArgs struct {
	// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
	Location pulumi.StringPtrInput
	// Specifies the ID of the Maintenance Configuration Resource. Changing this forces a new resource to be created.
	MaintenanceConfigurationId pulumi.StringInput
	// Specifies the Virtual Machine Scale Set ID to which the Maintenance Configuration will be assigned. Changing this forces a new resource to be created.
	VirtualMachineScaleSetId pulumi.StringInput
}

func (AssignmentVirtualMachineScaleSetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*assignmentVirtualMachineScaleSetArgs)(nil)).Elem()
}

type AssignmentVirtualMachineScaleSetInput interface {
	pulumi.Input

	ToAssignmentVirtualMachineScaleSetOutput() AssignmentVirtualMachineScaleSetOutput
	ToAssignmentVirtualMachineScaleSetOutputWithContext(ctx context.Context) AssignmentVirtualMachineScaleSetOutput
}

func (*AssignmentVirtualMachineScaleSet) ElementType() reflect.Type {
	return reflect.TypeOf((**AssignmentVirtualMachineScaleSet)(nil)).Elem()
}

func (i *AssignmentVirtualMachineScaleSet) ToAssignmentVirtualMachineScaleSetOutput() AssignmentVirtualMachineScaleSetOutput {
	return i.ToAssignmentVirtualMachineScaleSetOutputWithContext(context.Background())
}

func (i *AssignmentVirtualMachineScaleSet) ToAssignmentVirtualMachineScaleSetOutputWithContext(ctx context.Context) AssignmentVirtualMachineScaleSetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AssignmentVirtualMachineScaleSetOutput)
}

// AssignmentVirtualMachineScaleSetArrayInput is an input type that accepts AssignmentVirtualMachineScaleSetArray and AssignmentVirtualMachineScaleSetArrayOutput values.
// You can construct a concrete instance of `AssignmentVirtualMachineScaleSetArrayInput` via:
//
//          AssignmentVirtualMachineScaleSetArray{ AssignmentVirtualMachineScaleSetArgs{...} }
type AssignmentVirtualMachineScaleSetArrayInput interface {
	pulumi.Input

	ToAssignmentVirtualMachineScaleSetArrayOutput() AssignmentVirtualMachineScaleSetArrayOutput
	ToAssignmentVirtualMachineScaleSetArrayOutputWithContext(context.Context) AssignmentVirtualMachineScaleSetArrayOutput
}

type AssignmentVirtualMachineScaleSetArray []AssignmentVirtualMachineScaleSetInput

func (AssignmentVirtualMachineScaleSetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AssignmentVirtualMachineScaleSet)(nil)).Elem()
}

func (i AssignmentVirtualMachineScaleSetArray) ToAssignmentVirtualMachineScaleSetArrayOutput() AssignmentVirtualMachineScaleSetArrayOutput {
	return i.ToAssignmentVirtualMachineScaleSetArrayOutputWithContext(context.Background())
}

func (i AssignmentVirtualMachineScaleSetArray) ToAssignmentVirtualMachineScaleSetArrayOutputWithContext(ctx context.Context) AssignmentVirtualMachineScaleSetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AssignmentVirtualMachineScaleSetArrayOutput)
}

// AssignmentVirtualMachineScaleSetMapInput is an input type that accepts AssignmentVirtualMachineScaleSetMap and AssignmentVirtualMachineScaleSetMapOutput values.
// You can construct a concrete instance of `AssignmentVirtualMachineScaleSetMapInput` via:
//
//          AssignmentVirtualMachineScaleSetMap{ "key": AssignmentVirtualMachineScaleSetArgs{...} }
type AssignmentVirtualMachineScaleSetMapInput interface {
	pulumi.Input

	ToAssignmentVirtualMachineScaleSetMapOutput() AssignmentVirtualMachineScaleSetMapOutput
	ToAssignmentVirtualMachineScaleSetMapOutputWithContext(context.Context) AssignmentVirtualMachineScaleSetMapOutput
}

type AssignmentVirtualMachineScaleSetMap map[string]AssignmentVirtualMachineScaleSetInput

func (AssignmentVirtualMachineScaleSetMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AssignmentVirtualMachineScaleSet)(nil)).Elem()
}

func (i AssignmentVirtualMachineScaleSetMap) ToAssignmentVirtualMachineScaleSetMapOutput() AssignmentVirtualMachineScaleSetMapOutput {
	return i.ToAssignmentVirtualMachineScaleSetMapOutputWithContext(context.Background())
}

func (i AssignmentVirtualMachineScaleSetMap) ToAssignmentVirtualMachineScaleSetMapOutputWithContext(ctx context.Context) AssignmentVirtualMachineScaleSetMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AssignmentVirtualMachineScaleSetMapOutput)
}

type AssignmentVirtualMachineScaleSetOutput struct{ *pulumi.OutputState }

func (AssignmentVirtualMachineScaleSetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AssignmentVirtualMachineScaleSet)(nil)).Elem()
}

func (o AssignmentVirtualMachineScaleSetOutput) ToAssignmentVirtualMachineScaleSetOutput() AssignmentVirtualMachineScaleSetOutput {
	return o
}

func (o AssignmentVirtualMachineScaleSetOutput) ToAssignmentVirtualMachineScaleSetOutputWithContext(ctx context.Context) AssignmentVirtualMachineScaleSetOutput {
	return o
}

// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
func (o AssignmentVirtualMachineScaleSetOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *AssignmentVirtualMachineScaleSet) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// Specifies the ID of the Maintenance Configuration Resource. Changing this forces a new resource to be created.
func (o AssignmentVirtualMachineScaleSetOutput) MaintenanceConfigurationId() pulumi.StringOutput {
	return o.ApplyT(func(v *AssignmentVirtualMachineScaleSet) pulumi.StringOutput { return v.MaintenanceConfigurationId }).(pulumi.StringOutput)
}

// Specifies the Virtual Machine Scale Set ID to which the Maintenance Configuration will be assigned. Changing this forces a new resource to be created.
func (o AssignmentVirtualMachineScaleSetOutput) VirtualMachineScaleSetId() pulumi.StringOutput {
	return o.ApplyT(func(v *AssignmentVirtualMachineScaleSet) pulumi.StringOutput { return v.VirtualMachineScaleSetId }).(pulumi.StringOutput)
}

type AssignmentVirtualMachineScaleSetArrayOutput struct{ *pulumi.OutputState }

func (AssignmentVirtualMachineScaleSetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AssignmentVirtualMachineScaleSet)(nil)).Elem()
}

func (o AssignmentVirtualMachineScaleSetArrayOutput) ToAssignmentVirtualMachineScaleSetArrayOutput() AssignmentVirtualMachineScaleSetArrayOutput {
	return o
}

func (o AssignmentVirtualMachineScaleSetArrayOutput) ToAssignmentVirtualMachineScaleSetArrayOutputWithContext(ctx context.Context) AssignmentVirtualMachineScaleSetArrayOutput {
	return o
}

func (o AssignmentVirtualMachineScaleSetArrayOutput) Index(i pulumi.IntInput) AssignmentVirtualMachineScaleSetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AssignmentVirtualMachineScaleSet {
		return vs[0].([]*AssignmentVirtualMachineScaleSet)[vs[1].(int)]
	}).(AssignmentVirtualMachineScaleSetOutput)
}

type AssignmentVirtualMachineScaleSetMapOutput struct{ *pulumi.OutputState }

func (AssignmentVirtualMachineScaleSetMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AssignmentVirtualMachineScaleSet)(nil)).Elem()
}

func (o AssignmentVirtualMachineScaleSetMapOutput) ToAssignmentVirtualMachineScaleSetMapOutput() AssignmentVirtualMachineScaleSetMapOutput {
	return o
}

func (o AssignmentVirtualMachineScaleSetMapOutput) ToAssignmentVirtualMachineScaleSetMapOutputWithContext(ctx context.Context) AssignmentVirtualMachineScaleSetMapOutput {
	return o
}

func (o AssignmentVirtualMachineScaleSetMapOutput) MapIndex(k pulumi.StringInput) AssignmentVirtualMachineScaleSetOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AssignmentVirtualMachineScaleSet {
		return vs[0].(map[string]*AssignmentVirtualMachineScaleSet)[vs[1].(string)]
	}).(AssignmentVirtualMachineScaleSetOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AssignmentVirtualMachineScaleSetInput)(nil)).Elem(), &AssignmentVirtualMachineScaleSet{})
	pulumi.RegisterInputType(reflect.TypeOf((*AssignmentVirtualMachineScaleSetArrayInput)(nil)).Elem(), AssignmentVirtualMachineScaleSetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AssignmentVirtualMachineScaleSetMapInput)(nil)).Elem(), AssignmentVirtualMachineScaleSetMap{})
	pulumi.RegisterOutputType(AssignmentVirtualMachineScaleSetOutput{})
	pulumi.RegisterOutputType(AssignmentVirtualMachineScaleSetArrayOutput{})
	pulumi.RegisterOutputType(AssignmentVirtualMachineScaleSetMapOutput{})
}
