// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package maintenance

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages a maintenance assignment to a virtual machine scale set.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-azure/sdk/v4/go/azure/compute"
// 	"github.com/pulumi/pulumi-azure/sdk/v4/go/azure/core"
// 	"github.com/pulumi/pulumi-azure/sdk/v4/go/azure/lb"
// 	"github.com/pulumi/pulumi-azure/sdk/v4/go/azure/maintenance"
// 	"github.com/pulumi/pulumi-azure/sdk/v4/go/azure/network"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		exampleResourceGroup, err := core.NewResourceGroup(ctx, "exampleResourceGroup", &core.ResourceGroupArgs{
// 			Location: pulumi.String("West Europe"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		exampleVirtualNetwork, err := network.NewVirtualNetwork(ctx, "exampleVirtualNetwork", &network.VirtualNetworkArgs{
// 			AddressSpaces: pulumi.StringArray{
// 				pulumi.String("10.0.0.0/16"),
// 			},
// 			Location:          exampleResourceGroup.Location,
// 			ResourceGroupName: exampleResourceGroup.Name,
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		exampleSubnet, err := network.NewSubnet(ctx, "exampleSubnet", &network.SubnetArgs{
// 			ResourceGroupName:  exampleResourceGroup.Name,
// 			VirtualNetworkName: exampleVirtualNetwork.Name,
// 			AddressPrefixes: pulumi.StringArray{
// 				pulumi.String("10.0.2.0/24"),
// 			},
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		_, err = network.NewPublicIp(ctx, "examplePublicIp", &network.PublicIpArgs{
// 			Location:          exampleResourceGroup.Location,
// 			ResourceGroupName: exampleResourceGroup.Name,
// 			AllocationMethod:  pulumi.String("Static"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		_, err = lb.NewLoadBalancer(ctx, "exampleLoadBalancer", &lb.LoadBalancerArgs{
// 			Location:          exampleResourceGroup.Location,
// 			ResourceGroupName: exampleResourceGroup.Name,
// 			FrontendIpConfigurations: lb.LoadBalancerFrontendIpConfigurationArray{
// 				&lb.LoadBalancerFrontendIpConfigurationArgs{
// 					Name:              pulumi.String("internal"),
// 					PublicIpAddressId: pulumi.Any(azurerm_public_ip.Test.Id),
// 				},
// 			},
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		exampleBackendAddressPool, err := lb.NewBackendAddressPool(ctx, "exampleBackendAddressPool", &lb.BackendAddressPoolArgs{
// 			ResourceGroupName: exampleResourceGroup.Name,
// 			LoadbalancerId:    pulumi.Any(azurerm_lb.Test.Id),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		exampleProbe, err := lb.NewProbe(ctx, "exampleProbe", &lb.ProbeArgs{
// 			ResourceGroupName: exampleResourceGroup.Name,
// 			LoadbalancerId:    pulumi.Any(azurerm_lb.Test.Id),
// 			Port:              pulumi.Int(22),
// 			Protocol:          pulumi.String("Tcp"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		_, err = lb.NewRule(ctx, "exampleRule", &lb.RuleArgs{
// 			ResourceGroupName:           exampleResourceGroup.Name,
// 			LoadbalancerId:              pulumi.Any(azurerm_lb.Test.Id),
// 			ProbeId:                     pulumi.Any(azurerm_lb_probe.Test.Id),
// 			BackendAddressPoolId:        pulumi.Any(azurerm_lb_backend_address_pool.Test.Id),
// 			FrontendIpConfigurationName: pulumi.String("internal"),
// 			Protocol:                    pulumi.String("Tcp"),
// 			FrontendPort:                pulumi.Int(22),
// 			BackendPort:                 pulumi.Int(22),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		exampleConfiguration, err := maintenance.NewConfiguration(ctx, "exampleConfiguration", &maintenance.ConfigurationArgs{
// 			ResourceGroupName: exampleResourceGroup.Name,
// 			Location:          exampleResourceGroup.Location,
// 			Scope:             pulumi.String("OSImage"),
// 			Visibility:        pulumi.String("Custom"),
// 			Window: &maintenance.ConfigurationWindowArgs{
// 				StartDateTime:      pulumi.String("2021-12-31 00:00"),
// 				ExpirationDateTime: pulumi.String("9999-12-31 00:00"),
// 				Duration:           pulumi.String("06:00"),
// 				TimeZone:           pulumi.String("Pacific Standard Time"),
// 				RecurEvery:         pulumi.String("1Days"),
// 			},
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		_, err = compute.NewLinuxVirtualMachineScaleSet(ctx, "exampleLinuxVirtualMachineScaleSet", &compute.LinuxVirtualMachineScaleSetArgs{
// 			ResourceGroupName:             exampleResourceGroup.Name,
// 			Location:                      exampleResourceGroup.Location,
// 			Sku:                           pulumi.String("Standard_F2"),
// 			Instances:                     pulumi.Int(1),
// 			AdminUsername:                 pulumi.String("adminuser"),
// 			AdminPassword:                 pulumi.String("P@ssword1234!"),
// 			UpgradeMode:                   pulumi.String("Automatic"),
// 			HealthProbeId:                 exampleProbe.ID(),
// 			DisablePasswordAuthentication: pulumi.Bool(false),
// 			SourceImageReference: &compute.LinuxVirtualMachineScaleSetSourceImageReferenceArgs{
// 				Publisher: pulumi.String("Canonical"),
// 				Offer:     pulumi.String("UbuntuServer"),
// 				Sku:       pulumi.String("16.04-LTS"),
// 				Version:   pulumi.String("latest"),
// 			},
// 			OsDisk: &compute.LinuxVirtualMachineScaleSetOsDiskArgs{
// 				StorageAccountType: pulumi.String("Standard_LRS"),
// 				Caching:            pulumi.String("ReadWrite"),
// 			},
// 			NetworkInterfaces: compute.LinuxVirtualMachineScaleSetNetworkInterfaceArray{
// 				&compute.LinuxVirtualMachineScaleSetNetworkInterfaceArgs{
// 					Name:    pulumi.String("example"),
// 					Primary: pulumi.Bool(true),
// 					IpConfigurations: compute.LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationArray{
// 						&compute.LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationArgs{
// 							Name:     pulumi.String("internal"),
// 							Primary:  pulumi.Bool(true),
// 							SubnetId: exampleSubnet.ID(),
// 							LoadBalancerBackendAddressPoolIds: pulumi.StringArray{
// 								exampleBackendAddressPool.ID(),
// 							},
// 						},
// 					},
// 				},
// 			},
// 			AutomaticOsUpgradePolicy: &compute.LinuxVirtualMachineScaleSetAutomaticOsUpgradePolicyArgs{
// 				DisableAutomaticRollback: pulumi.Bool(true),
// 				EnableAutomaticOsUpgrade: pulumi.Bool(true),
// 			},
// 			RollingUpgradePolicy: &compute.LinuxVirtualMachineScaleSetRollingUpgradePolicyArgs{
// 				MaxBatchInstancePercent:             pulumi.Int(20),
// 				MaxUnhealthyInstancePercent:         pulumi.Int(20),
// 				MaxUnhealthyUpgradedInstancePercent: pulumi.Int(20),
// 				PauseTimeBetweenBatches:             pulumi.String("PT0S"),
// 			},
// 		}, pulumi.DependsOn([]pulumi.Resource{
// 			pulumi.Resource("azurerm_lb_rule.example"),
// 		}))
// 		if err != nil {
// 			return err
// 		}
// 		_, err = maintenance.NewAssignmentVirtualMachineScaleSet(ctx, "exampleAssignmentVirtualMachineScaleSet", &maintenance.AssignmentVirtualMachineScaleSetArgs{
// 			Location:                   exampleResourceGroup.Location,
// 			MaintenanceConfigurationId: exampleConfiguration.ID(),
// 			VirtualMachineScaleSetId:   pulumi.Any(azurerm_linux_virtual_machine.Example.Id),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// Maintenance Assignment can be imported using the `resource id`, e.g.
//
// ```sh
//  $ pulumi import azure:maintenance/assignmentVirtualMachineScaleSet:AssignmentVirtualMachineScaleSet example /subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/resGroup1/providers/microsoft.compute/virtualMachineScaleSets/vmss1/providers/Microsoft.Maintenance/configurationAssignments/assign1
// ```
type AssignmentVirtualMachineScaleSet struct {
	pulumi.CustomResourceState

	// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
	Location pulumi.StringOutput `pulumi:"location"`
	// Specifies the ID of the Maintenance Configuration Resource. Changing this forces a new resource to be created.
	MaintenanceConfigurationId pulumi.StringOutput `pulumi:"maintenanceConfigurationId"`
	// Specifies the Virtual Machine Scale Set ID to which the Maintenance Configuration will be assigned. Changing this forces a new resource to be created.
	VirtualMachineScaleSetId pulumi.StringOutput `pulumi:"virtualMachineScaleSetId"`
}

// NewAssignmentVirtualMachineScaleSet registers a new resource with the given unique name, arguments, and options.
func NewAssignmentVirtualMachineScaleSet(ctx *pulumi.Context,
	name string, args *AssignmentVirtualMachineScaleSetArgs, opts ...pulumi.ResourceOption) (*AssignmentVirtualMachineScaleSet, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.MaintenanceConfigurationId == nil {
		return nil, errors.New("invalid value for required argument 'MaintenanceConfigurationId'")
	}
	if args.VirtualMachineScaleSetId == nil {
		return nil, errors.New("invalid value for required argument 'VirtualMachineScaleSetId'")
	}
	var resource AssignmentVirtualMachineScaleSet
	err := ctx.RegisterResource("azure:maintenance/assignmentVirtualMachineScaleSet:AssignmentVirtualMachineScaleSet", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAssignmentVirtualMachineScaleSet gets an existing AssignmentVirtualMachineScaleSet resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAssignmentVirtualMachineScaleSet(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AssignmentVirtualMachineScaleSetState, opts ...pulumi.ResourceOption) (*AssignmentVirtualMachineScaleSet, error) {
	var resource AssignmentVirtualMachineScaleSet
	err := ctx.ReadResource("azure:maintenance/assignmentVirtualMachineScaleSet:AssignmentVirtualMachineScaleSet", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AssignmentVirtualMachineScaleSet resources.
type assignmentVirtualMachineScaleSetState struct {
	// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
	Location *string `pulumi:"location"`
	// Specifies the ID of the Maintenance Configuration Resource. Changing this forces a new resource to be created.
	MaintenanceConfigurationId *string `pulumi:"maintenanceConfigurationId"`
	// Specifies the Virtual Machine Scale Set ID to which the Maintenance Configuration will be assigned. Changing this forces a new resource to be created.
	VirtualMachineScaleSetId *string `pulumi:"virtualMachineScaleSetId"`
}

type AssignmentVirtualMachineScaleSetState struct {
	// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
	Location pulumi.StringPtrInput
	// Specifies the ID of the Maintenance Configuration Resource. Changing this forces a new resource to be created.
	MaintenanceConfigurationId pulumi.StringPtrInput
	// Specifies the Virtual Machine Scale Set ID to which the Maintenance Configuration will be assigned. Changing this forces a new resource to be created.
	VirtualMachineScaleSetId pulumi.StringPtrInput
}

func (AssignmentVirtualMachineScaleSetState) ElementType() reflect.Type {
	return reflect.TypeOf((*assignmentVirtualMachineScaleSetState)(nil)).Elem()
}

type assignmentVirtualMachineScaleSetArgs struct {
	// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
	Location *string `pulumi:"location"`
	// Specifies the ID of the Maintenance Configuration Resource. Changing this forces a new resource to be created.
	MaintenanceConfigurationId string `pulumi:"maintenanceConfigurationId"`
	// Specifies the Virtual Machine Scale Set ID to which the Maintenance Configuration will be assigned. Changing this forces a new resource to be created.
	VirtualMachineScaleSetId string `pulumi:"virtualMachineScaleSetId"`
}

// The set of arguments for constructing a AssignmentVirtualMachineScaleSet resource.
type AssignmentVirtualMachineScaleSetArgs struct {
	// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
	Location pulumi.StringPtrInput
	// Specifies the ID of the Maintenance Configuration Resource. Changing this forces a new resource to be created.
	MaintenanceConfigurationId pulumi.StringInput
	// Specifies the Virtual Machine Scale Set ID to which the Maintenance Configuration will be assigned. Changing this forces a new resource to be created.
	VirtualMachineScaleSetId pulumi.StringInput
}

func (AssignmentVirtualMachineScaleSetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*assignmentVirtualMachineScaleSetArgs)(nil)).Elem()
}

type AssignmentVirtualMachineScaleSetInput interface {
	pulumi.Input

	ToAssignmentVirtualMachineScaleSetOutput() AssignmentVirtualMachineScaleSetOutput
	ToAssignmentVirtualMachineScaleSetOutputWithContext(ctx context.Context) AssignmentVirtualMachineScaleSetOutput
}

func (*AssignmentVirtualMachineScaleSet) ElementType() reflect.Type {
	return reflect.TypeOf((*AssignmentVirtualMachineScaleSet)(nil))
}

func (i *AssignmentVirtualMachineScaleSet) ToAssignmentVirtualMachineScaleSetOutput() AssignmentVirtualMachineScaleSetOutput {
	return i.ToAssignmentVirtualMachineScaleSetOutputWithContext(context.Background())
}

func (i *AssignmentVirtualMachineScaleSet) ToAssignmentVirtualMachineScaleSetOutputWithContext(ctx context.Context) AssignmentVirtualMachineScaleSetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AssignmentVirtualMachineScaleSetOutput)
}

func (i *AssignmentVirtualMachineScaleSet) ToAssignmentVirtualMachineScaleSetPtrOutput() AssignmentVirtualMachineScaleSetPtrOutput {
	return i.ToAssignmentVirtualMachineScaleSetPtrOutputWithContext(context.Background())
}

func (i *AssignmentVirtualMachineScaleSet) ToAssignmentVirtualMachineScaleSetPtrOutputWithContext(ctx context.Context) AssignmentVirtualMachineScaleSetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AssignmentVirtualMachineScaleSetPtrOutput)
}

type AssignmentVirtualMachineScaleSetPtrInput interface {
	pulumi.Input

	ToAssignmentVirtualMachineScaleSetPtrOutput() AssignmentVirtualMachineScaleSetPtrOutput
	ToAssignmentVirtualMachineScaleSetPtrOutputWithContext(ctx context.Context) AssignmentVirtualMachineScaleSetPtrOutput
}

type assignmentVirtualMachineScaleSetPtrType AssignmentVirtualMachineScaleSetArgs

func (*assignmentVirtualMachineScaleSetPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AssignmentVirtualMachineScaleSet)(nil))
}

func (i *assignmentVirtualMachineScaleSetPtrType) ToAssignmentVirtualMachineScaleSetPtrOutput() AssignmentVirtualMachineScaleSetPtrOutput {
	return i.ToAssignmentVirtualMachineScaleSetPtrOutputWithContext(context.Background())
}

func (i *assignmentVirtualMachineScaleSetPtrType) ToAssignmentVirtualMachineScaleSetPtrOutputWithContext(ctx context.Context) AssignmentVirtualMachineScaleSetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AssignmentVirtualMachineScaleSetPtrOutput)
}

// AssignmentVirtualMachineScaleSetArrayInput is an input type that accepts AssignmentVirtualMachineScaleSetArray and AssignmentVirtualMachineScaleSetArrayOutput values.
// You can construct a concrete instance of `AssignmentVirtualMachineScaleSetArrayInput` via:
//
//          AssignmentVirtualMachineScaleSetArray{ AssignmentVirtualMachineScaleSetArgs{...} }
type AssignmentVirtualMachineScaleSetArrayInput interface {
	pulumi.Input

	ToAssignmentVirtualMachineScaleSetArrayOutput() AssignmentVirtualMachineScaleSetArrayOutput
	ToAssignmentVirtualMachineScaleSetArrayOutputWithContext(context.Context) AssignmentVirtualMachineScaleSetArrayOutput
}

type AssignmentVirtualMachineScaleSetArray []AssignmentVirtualMachineScaleSetInput

func (AssignmentVirtualMachineScaleSetArray) ElementType() reflect.Type {
	return reflect.TypeOf(([]*AssignmentVirtualMachineScaleSet)(nil))
}

func (i AssignmentVirtualMachineScaleSetArray) ToAssignmentVirtualMachineScaleSetArrayOutput() AssignmentVirtualMachineScaleSetArrayOutput {
	return i.ToAssignmentVirtualMachineScaleSetArrayOutputWithContext(context.Background())
}

func (i AssignmentVirtualMachineScaleSetArray) ToAssignmentVirtualMachineScaleSetArrayOutputWithContext(ctx context.Context) AssignmentVirtualMachineScaleSetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AssignmentVirtualMachineScaleSetArrayOutput)
}

// AssignmentVirtualMachineScaleSetMapInput is an input type that accepts AssignmentVirtualMachineScaleSetMap and AssignmentVirtualMachineScaleSetMapOutput values.
// You can construct a concrete instance of `AssignmentVirtualMachineScaleSetMapInput` via:
//
//          AssignmentVirtualMachineScaleSetMap{ "key": AssignmentVirtualMachineScaleSetArgs{...} }
type AssignmentVirtualMachineScaleSetMapInput interface {
	pulumi.Input

	ToAssignmentVirtualMachineScaleSetMapOutput() AssignmentVirtualMachineScaleSetMapOutput
	ToAssignmentVirtualMachineScaleSetMapOutputWithContext(context.Context) AssignmentVirtualMachineScaleSetMapOutput
}

type AssignmentVirtualMachineScaleSetMap map[string]AssignmentVirtualMachineScaleSetInput

func (AssignmentVirtualMachineScaleSetMap) ElementType() reflect.Type {
	return reflect.TypeOf((map[string]*AssignmentVirtualMachineScaleSet)(nil))
}

func (i AssignmentVirtualMachineScaleSetMap) ToAssignmentVirtualMachineScaleSetMapOutput() AssignmentVirtualMachineScaleSetMapOutput {
	return i.ToAssignmentVirtualMachineScaleSetMapOutputWithContext(context.Background())
}

func (i AssignmentVirtualMachineScaleSetMap) ToAssignmentVirtualMachineScaleSetMapOutputWithContext(ctx context.Context) AssignmentVirtualMachineScaleSetMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AssignmentVirtualMachineScaleSetMapOutput)
}

type AssignmentVirtualMachineScaleSetOutput struct {
	*pulumi.OutputState
}

func (AssignmentVirtualMachineScaleSetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AssignmentVirtualMachineScaleSet)(nil))
}

func (o AssignmentVirtualMachineScaleSetOutput) ToAssignmentVirtualMachineScaleSetOutput() AssignmentVirtualMachineScaleSetOutput {
	return o
}

func (o AssignmentVirtualMachineScaleSetOutput) ToAssignmentVirtualMachineScaleSetOutputWithContext(ctx context.Context) AssignmentVirtualMachineScaleSetOutput {
	return o
}

func (o AssignmentVirtualMachineScaleSetOutput) ToAssignmentVirtualMachineScaleSetPtrOutput() AssignmentVirtualMachineScaleSetPtrOutput {
	return o.ToAssignmentVirtualMachineScaleSetPtrOutputWithContext(context.Background())
}

func (o AssignmentVirtualMachineScaleSetOutput) ToAssignmentVirtualMachineScaleSetPtrOutputWithContext(ctx context.Context) AssignmentVirtualMachineScaleSetPtrOutput {
	return o.ApplyT(func(v AssignmentVirtualMachineScaleSet) *AssignmentVirtualMachineScaleSet {
		return &v
	}).(AssignmentVirtualMachineScaleSetPtrOutput)
}

type AssignmentVirtualMachineScaleSetPtrOutput struct {
	*pulumi.OutputState
}

func (AssignmentVirtualMachineScaleSetPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AssignmentVirtualMachineScaleSet)(nil))
}

func (o AssignmentVirtualMachineScaleSetPtrOutput) ToAssignmentVirtualMachineScaleSetPtrOutput() AssignmentVirtualMachineScaleSetPtrOutput {
	return o
}

func (o AssignmentVirtualMachineScaleSetPtrOutput) ToAssignmentVirtualMachineScaleSetPtrOutputWithContext(ctx context.Context) AssignmentVirtualMachineScaleSetPtrOutput {
	return o
}

type AssignmentVirtualMachineScaleSetArrayOutput struct{ *pulumi.OutputState }

func (AssignmentVirtualMachineScaleSetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AssignmentVirtualMachineScaleSet)(nil))
}

func (o AssignmentVirtualMachineScaleSetArrayOutput) ToAssignmentVirtualMachineScaleSetArrayOutput() AssignmentVirtualMachineScaleSetArrayOutput {
	return o
}

func (o AssignmentVirtualMachineScaleSetArrayOutput) ToAssignmentVirtualMachineScaleSetArrayOutputWithContext(ctx context.Context) AssignmentVirtualMachineScaleSetArrayOutput {
	return o
}

func (o AssignmentVirtualMachineScaleSetArrayOutput) Index(i pulumi.IntInput) AssignmentVirtualMachineScaleSetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AssignmentVirtualMachineScaleSet {
		return vs[0].([]AssignmentVirtualMachineScaleSet)[vs[1].(int)]
	}).(AssignmentVirtualMachineScaleSetOutput)
}

type AssignmentVirtualMachineScaleSetMapOutput struct{ *pulumi.OutputState }

func (AssignmentVirtualMachineScaleSetMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]AssignmentVirtualMachineScaleSet)(nil))
}

func (o AssignmentVirtualMachineScaleSetMapOutput) ToAssignmentVirtualMachineScaleSetMapOutput() AssignmentVirtualMachineScaleSetMapOutput {
	return o
}

func (o AssignmentVirtualMachineScaleSetMapOutput) ToAssignmentVirtualMachineScaleSetMapOutputWithContext(ctx context.Context) AssignmentVirtualMachineScaleSetMapOutput {
	return o
}

func (o AssignmentVirtualMachineScaleSetMapOutput) MapIndex(k pulumi.StringInput) AssignmentVirtualMachineScaleSetOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) AssignmentVirtualMachineScaleSet {
		return vs[0].(map[string]AssignmentVirtualMachineScaleSet)[vs[1].(string)]
	}).(AssignmentVirtualMachineScaleSetOutput)
}

func init() {
	pulumi.RegisterOutputType(AssignmentVirtualMachineScaleSetOutput{})
	pulumi.RegisterOutputType(AssignmentVirtualMachineScaleSetPtrOutput{})
	pulumi.RegisterOutputType(AssignmentVirtualMachineScaleSetArrayOutput{})
	pulumi.RegisterOutputType(AssignmentVirtualMachineScaleSetMapOutput{})
}
