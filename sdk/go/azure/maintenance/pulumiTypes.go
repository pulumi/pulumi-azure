// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package maintenance

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ConfigurationWindow struct {
	// The duration of the maintenance window in HH:mm format.
	Duration *string `pulumi:"duration"`
	// Effective expiration date of the maintenance window in YYYY-MM-DD hh:mm format.
	ExpirationDateTime *string `pulumi:"expirationDateTime"`
	// The rate at which a maintenance window is expected to recur. The rate can be expressed as daily, weekly, or monthly schedules.
	RecurEvery *string `pulumi:"recurEvery"`
	// Effective start date of the maintenance window in YYYY-MM-DD hh:mm format.
	StartDateTime string `pulumi:"startDateTime"`
	// The time zone for the maintenance window. A list of timezones can be obtained by executing [System.TimeZoneInfo]::GetSystemTimeZones() in PowerShell.
	TimeZone string `pulumi:"timeZone"`
}

// ConfigurationWindowInput is an input type that accepts ConfigurationWindowArgs and ConfigurationWindowOutput values.
// You can construct a concrete instance of `ConfigurationWindowInput` via:
//
//	ConfigurationWindowArgs{...}
type ConfigurationWindowInput interface {
	pulumi.Input

	ToConfigurationWindowOutput() ConfigurationWindowOutput
	ToConfigurationWindowOutputWithContext(context.Context) ConfigurationWindowOutput
}

type ConfigurationWindowArgs struct {
	// The duration of the maintenance window in HH:mm format.
	Duration pulumi.StringPtrInput `pulumi:"duration"`
	// Effective expiration date of the maintenance window in YYYY-MM-DD hh:mm format.
	ExpirationDateTime pulumi.StringPtrInput `pulumi:"expirationDateTime"`
	// The rate at which a maintenance window is expected to recur. The rate can be expressed as daily, weekly, or monthly schedules.
	RecurEvery pulumi.StringPtrInput `pulumi:"recurEvery"`
	// Effective start date of the maintenance window in YYYY-MM-DD hh:mm format.
	StartDateTime pulumi.StringInput `pulumi:"startDateTime"`
	// The time zone for the maintenance window. A list of timezones can be obtained by executing [System.TimeZoneInfo]::GetSystemTimeZones() in PowerShell.
	TimeZone pulumi.StringInput `pulumi:"timeZone"`
}

func (ConfigurationWindowArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigurationWindow)(nil)).Elem()
}

func (i ConfigurationWindowArgs) ToConfigurationWindowOutput() ConfigurationWindowOutput {
	return i.ToConfigurationWindowOutputWithContext(context.Background())
}

func (i ConfigurationWindowArgs) ToConfigurationWindowOutputWithContext(ctx context.Context) ConfigurationWindowOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationWindowOutput)
}

func (i ConfigurationWindowArgs) ToConfigurationWindowPtrOutput() ConfigurationWindowPtrOutput {
	return i.ToConfigurationWindowPtrOutputWithContext(context.Background())
}

func (i ConfigurationWindowArgs) ToConfigurationWindowPtrOutputWithContext(ctx context.Context) ConfigurationWindowPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationWindowOutput).ToConfigurationWindowPtrOutputWithContext(ctx)
}

// ConfigurationWindowPtrInput is an input type that accepts ConfigurationWindowArgs, ConfigurationWindowPtr and ConfigurationWindowPtrOutput values.
// You can construct a concrete instance of `ConfigurationWindowPtrInput` via:
//
//	        ConfigurationWindowArgs{...}
//
//	or:
//
//	        nil
type ConfigurationWindowPtrInput interface {
	pulumi.Input

	ToConfigurationWindowPtrOutput() ConfigurationWindowPtrOutput
	ToConfigurationWindowPtrOutputWithContext(context.Context) ConfigurationWindowPtrOutput
}

type configurationWindowPtrType ConfigurationWindowArgs

func ConfigurationWindowPtr(v *ConfigurationWindowArgs) ConfigurationWindowPtrInput {
	return (*configurationWindowPtrType)(v)
}

func (*configurationWindowPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfigurationWindow)(nil)).Elem()
}

func (i *configurationWindowPtrType) ToConfigurationWindowPtrOutput() ConfigurationWindowPtrOutput {
	return i.ToConfigurationWindowPtrOutputWithContext(context.Background())
}

func (i *configurationWindowPtrType) ToConfigurationWindowPtrOutputWithContext(ctx context.Context) ConfigurationWindowPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationWindowPtrOutput)
}

type ConfigurationWindowOutput struct{ *pulumi.OutputState }

func (ConfigurationWindowOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigurationWindow)(nil)).Elem()
}

func (o ConfigurationWindowOutput) ToConfigurationWindowOutput() ConfigurationWindowOutput {
	return o
}

func (o ConfigurationWindowOutput) ToConfigurationWindowOutputWithContext(ctx context.Context) ConfigurationWindowOutput {
	return o
}

func (o ConfigurationWindowOutput) ToConfigurationWindowPtrOutput() ConfigurationWindowPtrOutput {
	return o.ToConfigurationWindowPtrOutputWithContext(context.Background())
}

func (o ConfigurationWindowOutput) ToConfigurationWindowPtrOutputWithContext(ctx context.Context) ConfigurationWindowPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConfigurationWindow) *ConfigurationWindow {
		return &v
	}).(ConfigurationWindowPtrOutput)
}

// The duration of the maintenance window in HH:mm format.
func (o ConfigurationWindowOutput) Duration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigurationWindow) *string { return v.Duration }).(pulumi.StringPtrOutput)
}

// Effective expiration date of the maintenance window in YYYY-MM-DD hh:mm format.
func (o ConfigurationWindowOutput) ExpirationDateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigurationWindow) *string { return v.ExpirationDateTime }).(pulumi.StringPtrOutput)
}

// The rate at which a maintenance window is expected to recur. The rate can be expressed as daily, weekly, or monthly schedules.
func (o ConfigurationWindowOutput) RecurEvery() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigurationWindow) *string { return v.RecurEvery }).(pulumi.StringPtrOutput)
}

// Effective start date of the maintenance window in YYYY-MM-DD hh:mm format.
func (o ConfigurationWindowOutput) StartDateTime() pulumi.StringOutput {
	return o.ApplyT(func(v ConfigurationWindow) string { return v.StartDateTime }).(pulumi.StringOutput)
}

// The time zone for the maintenance window. A list of timezones can be obtained by executing [System.TimeZoneInfo]::GetSystemTimeZones() in PowerShell.
func (o ConfigurationWindowOutput) TimeZone() pulumi.StringOutput {
	return o.ApplyT(func(v ConfigurationWindow) string { return v.TimeZone }).(pulumi.StringOutput)
}

type ConfigurationWindowPtrOutput struct{ *pulumi.OutputState }

func (ConfigurationWindowPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfigurationWindow)(nil)).Elem()
}

func (o ConfigurationWindowPtrOutput) ToConfigurationWindowPtrOutput() ConfigurationWindowPtrOutput {
	return o
}

func (o ConfigurationWindowPtrOutput) ToConfigurationWindowPtrOutputWithContext(ctx context.Context) ConfigurationWindowPtrOutput {
	return o
}

func (o ConfigurationWindowPtrOutput) Elem() ConfigurationWindowOutput {
	return o.ApplyT(func(v *ConfigurationWindow) ConfigurationWindow {
		if v != nil {
			return *v
		}
		var ret ConfigurationWindow
		return ret
	}).(ConfigurationWindowOutput)
}

// The duration of the maintenance window in HH:mm format.
func (o ConfigurationWindowPtrOutput) Duration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConfigurationWindow) *string {
		if v == nil {
			return nil
		}
		return v.Duration
	}).(pulumi.StringPtrOutput)
}

// Effective expiration date of the maintenance window in YYYY-MM-DD hh:mm format.
func (o ConfigurationWindowPtrOutput) ExpirationDateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConfigurationWindow) *string {
		if v == nil {
			return nil
		}
		return v.ExpirationDateTime
	}).(pulumi.StringPtrOutput)
}

// The rate at which a maintenance window is expected to recur. The rate can be expressed as daily, weekly, or monthly schedules.
func (o ConfigurationWindowPtrOutput) RecurEvery() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConfigurationWindow) *string {
		if v == nil {
			return nil
		}
		return v.RecurEvery
	}).(pulumi.StringPtrOutput)
}

// Effective start date of the maintenance window in YYYY-MM-DD hh:mm format.
func (o ConfigurationWindowPtrOutput) StartDateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConfigurationWindow) *string {
		if v == nil {
			return nil
		}
		return &v.StartDateTime
	}).(pulumi.StringPtrOutput)
}

// The time zone for the maintenance window. A list of timezones can be obtained by executing [System.TimeZoneInfo]::GetSystemTimeZones() in PowerShell.
func (o ConfigurationWindowPtrOutput) TimeZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConfigurationWindow) *string {
		if v == nil {
			return nil
		}
		return &v.TimeZone
	}).(pulumi.StringPtrOutput)
}

type GetConfigurationWindow struct {
	// The duration of the maintenance window.
	Duration string `pulumi:"duration"`
	// Effective expiration date of the maintenance window.
	ExpirationDateTime string `pulumi:"expirationDateTime"`
	// The rate at which a maintenance window is expected to recur.
	RecurEvery string `pulumi:"recurEvery"`
	// Effective start date of the maintenance window.
	StartDateTime string `pulumi:"startDateTime"`
	// The time zone for the maintenance window.
	TimeZone string `pulumi:"timeZone"`
}

// GetConfigurationWindowInput is an input type that accepts GetConfigurationWindowArgs and GetConfigurationWindowOutput values.
// You can construct a concrete instance of `GetConfigurationWindowInput` via:
//
//	GetConfigurationWindowArgs{...}
type GetConfigurationWindowInput interface {
	pulumi.Input

	ToGetConfigurationWindowOutput() GetConfigurationWindowOutput
	ToGetConfigurationWindowOutputWithContext(context.Context) GetConfigurationWindowOutput
}

type GetConfigurationWindowArgs struct {
	// The duration of the maintenance window.
	Duration pulumi.StringInput `pulumi:"duration"`
	// Effective expiration date of the maintenance window.
	ExpirationDateTime pulumi.StringInput `pulumi:"expirationDateTime"`
	// The rate at which a maintenance window is expected to recur.
	RecurEvery pulumi.StringInput `pulumi:"recurEvery"`
	// Effective start date of the maintenance window.
	StartDateTime pulumi.StringInput `pulumi:"startDateTime"`
	// The time zone for the maintenance window.
	TimeZone pulumi.StringInput `pulumi:"timeZone"`
}

func (GetConfigurationWindowArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConfigurationWindow)(nil)).Elem()
}

func (i GetConfigurationWindowArgs) ToGetConfigurationWindowOutput() GetConfigurationWindowOutput {
	return i.ToGetConfigurationWindowOutputWithContext(context.Background())
}

func (i GetConfigurationWindowArgs) ToGetConfigurationWindowOutputWithContext(ctx context.Context) GetConfigurationWindowOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConfigurationWindowOutput)
}

// GetConfigurationWindowArrayInput is an input type that accepts GetConfigurationWindowArray and GetConfigurationWindowArrayOutput values.
// You can construct a concrete instance of `GetConfigurationWindowArrayInput` via:
//
//	GetConfigurationWindowArray{ GetConfigurationWindowArgs{...} }
type GetConfigurationWindowArrayInput interface {
	pulumi.Input

	ToGetConfigurationWindowArrayOutput() GetConfigurationWindowArrayOutput
	ToGetConfigurationWindowArrayOutputWithContext(context.Context) GetConfigurationWindowArrayOutput
}

type GetConfigurationWindowArray []GetConfigurationWindowInput

func (GetConfigurationWindowArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConfigurationWindow)(nil)).Elem()
}

func (i GetConfigurationWindowArray) ToGetConfigurationWindowArrayOutput() GetConfigurationWindowArrayOutput {
	return i.ToGetConfigurationWindowArrayOutputWithContext(context.Background())
}

func (i GetConfigurationWindowArray) ToGetConfigurationWindowArrayOutputWithContext(ctx context.Context) GetConfigurationWindowArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConfigurationWindowArrayOutput)
}

type GetConfigurationWindowOutput struct{ *pulumi.OutputState }

func (GetConfigurationWindowOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConfigurationWindow)(nil)).Elem()
}

func (o GetConfigurationWindowOutput) ToGetConfigurationWindowOutput() GetConfigurationWindowOutput {
	return o
}

func (o GetConfigurationWindowOutput) ToGetConfigurationWindowOutputWithContext(ctx context.Context) GetConfigurationWindowOutput {
	return o
}

// The duration of the maintenance window.
func (o GetConfigurationWindowOutput) Duration() pulumi.StringOutput {
	return o.ApplyT(func(v GetConfigurationWindow) string { return v.Duration }).(pulumi.StringOutput)
}

// Effective expiration date of the maintenance window.
func (o GetConfigurationWindowOutput) ExpirationDateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetConfigurationWindow) string { return v.ExpirationDateTime }).(pulumi.StringOutput)
}

// The rate at which a maintenance window is expected to recur.
func (o GetConfigurationWindowOutput) RecurEvery() pulumi.StringOutput {
	return o.ApplyT(func(v GetConfigurationWindow) string { return v.RecurEvery }).(pulumi.StringOutput)
}

// Effective start date of the maintenance window.
func (o GetConfigurationWindowOutput) StartDateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetConfigurationWindow) string { return v.StartDateTime }).(pulumi.StringOutput)
}

// The time zone for the maintenance window.
func (o GetConfigurationWindowOutput) TimeZone() pulumi.StringOutput {
	return o.ApplyT(func(v GetConfigurationWindow) string { return v.TimeZone }).(pulumi.StringOutput)
}

type GetConfigurationWindowArrayOutput struct{ *pulumi.OutputState }

func (GetConfigurationWindowArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConfigurationWindow)(nil)).Elem()
}

func (o GetConfigurationWindowArrayOutput) ToGetConfigurationWindowArrayOutput() GetConfigurationWindowArrayOutput {
	return o
}

func (o GetConfigurationWindowArrayOutput) ToGetConfigurationWindowArrayOutputWithContext(ctx context.Context) GetConfigurationWindowArrayOutput {
	return o
}

func (o GetConfigurationWindowArrayOutput) Index(i pulumi.IntInput) GetConfigurationWindowOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetConfigurationWindow {
		return vs[0].([]GetConfigurationWindow)[vs[1].(int)]
	}).(GetConfigurationWindowOutput)
}

type GetPublicConfigurationsConfig struct {
	// A description of the Public Maintenance Configuration.
	Description string `pulumi:"description"`
	// The duration of the Public Maintenance Configuration window.
	Duration string `pulumi:"duration"`
	// The id of the Public Maintenance Configuration.
	Id string `pulumi:"id"`
	// The Azure location to filter the list of Public Maintenance Configurations against.
	Location string `pulumi:"location"`
	// The scope of the Public Maintenance Configuration.
	MaintenanceScope string `pulumi:"maintenanceScope"`
	// The name of the Public Maintenance Configuration.
	Name string `pulumi:"name"`
	// The recurring window to filter the list of Public Maintenance Configurations against. Possible values are `Monday-Thursday` and `Friday-Sunday`
	RecurEvery string `pulumi:"recurEvery"`
	// The time zone for the maintenance window.
	TimeZone string `pulumi:"timeZone"`
}

// GetPublicConfigurationsConfigInput is an input type that accepts GetPublicConfigurationsConfigArgs and GetPublicConfigurationsConfigOutput values.
// You can construct a concrete instance of `GetPublicConfigurationsConfigInput` via:
//
//	GetPublicConfigurationsConfigArgs{...}
type GetPublicConfigurationsConfigInput interface {
	pulumi.Input

	ToGetPublicConfigurationsConfigOutput() GetPublicConfigurationsConfigOutput
	ToGetPublicConfigurationsConfigOutputWithContext(context.Context) GetPublicConfigurationsConfigOutput
}

type GetPublicConfigurationsConfigArgs struct {
	// A description of the Public Maintenance Configuration.
	Description pulumi.StringInput `pulumi:"description"`
	// The duration of the Public Maintenance Configuration window.
	Duration pulumi.StringInput `pulumi:"duration"`
	// The id of the Public Maintenance Configuration.
	Id pulumi.StringInput `pulumi:"id"`
	// The Azure location to filter the list of Public Maintenance Configurations against.
	Location pulumi.StringInput `pulumi:"location"`
	// The scope of the Public Maintenance Configuration.
	MaintenanceScope pulumi.StringInput `pulumi:"maintenanceScope"`
	// The name of the Public Maintenance Configuration.
	Name pulumi.StringInput `pulumi:"name"`
	// The recurring window to filter the list of Public Maintenance Configurations against. Possible values are `Monday-Thursday` and `Friday-Sunday`
	RecurEvery pulumi.StringInput `pulumi:"recurEvery"`
	// The time zone for the maintenance window.
	TimeZone pulumi.StringInput `pulumi:"timeZone"`
}

func (GetPublicConfigurationsConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPublicConfigurationsConfig)(nil)).Elem()
}

func (i GetPublicConfigurationsConfigArgs) ToGetPublicConfigurationsConfigOutput() GetPublicConfigurationsConfigOutput {
	return i.ToGetPublicConfigurationsConfigOutputWithContext(context.Background())
}

func (i GetPublicConfigurationsConfigArgs) ToGetPublicConfigurationsConfigOutputWithContext(ctx context.Context) GetPublicConfigurationsConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPublicConfigurationsConfigOutput)
}

// GetPublicConfigurationsConfigArrayInput is an input type that accepts GetPublicConfigurationsConfigArray and GetPublicConfigurationsConfigArrayOutput values.
// You can construct a concrete instance of `GetPublicConfigurationsConfigArrayInput` via:
//
//	GetPublicConfigurationsConfigArray{ GetPublicConfigurationsConfigArgs{...} }
type GetPublicConfigurationsConfigArrayInput interface {
	pulumi.Input

	ToGetPublicConfigurationsConfigArrayOutput() GetPublicConfigurationsConfigArrayOutput
	ToGetPublicConfigurationsConfigArrayOutputWithContext(context.Context) GetPublicConfigurationsConfigArrayOutput
}

type GetPublicConfigurationsConfigArray []GetPublicConfigurationsConfigInput

func (GetPublicConfigurationsConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPublicConfigurationsConfig)(nil)).Elem()
}

func (i GetPublicConfigurationsConfigArray) ToGetPublicConfigurationsConfigArrayOutput() GetPublicConfigurationsConfigArrayOutput {
	return i.ToGetPublicConfigurationsConfigArrayOutputWithContext(context.Background())
}

func (i GetPublicConfigurationsConfigArray) ToGetPublicConfigurationsConfigArrayOutputWithContext(ctx context.Context) GetPublicConfigurationsConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPublicConfigurationsConfigArrayOutput)
}

type GetPublicConfigurationsConfigOutput struct{ *pulumi.OutputState }

func (GetPublicConfigurationsConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPublicConfigurationsConfig)(nil)).Elem()
}

func (o GetPublicConfigurationsConfigOutput) ToGetPublicConfigurationsConfigOutput() GetPublicConfigurationsConfigOutput {
	return o
}

func (o GetPublicConfigurationsConfigOutput) ToGetPublicConfigurationsConfigOutputWithContext(ctx context.Context) GetPublicConfigurationsConfigOutput {
	return o
}

// A description of the Public Maintenance Configuration.
func (o GetPublicConfigurationsConfigOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetPublicConfigurationsConfig) string { return v.Description }).(pulumi.StringOutput)
}

// The duration of the Public Maintenance Configuration window.
func (o GetPublicConfigurationsConfigOutput) Duration() pulumi.StringOutput {
	return o.ApplyT(func(v GetPublicConfigurationsConfig) string { return v.Duration }).(pulumi.StringOutput)
}

// The id of the Public Maintenance Configuration.
func (o GetPublicConfigurationsConfigOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetPublicConfigurationsConfig) string { return v.Id }).(pulumi.StringOutput)
}

// The Azure location to filter the list of Public Maintenance Configurations against.
func (o GetPublicConfigurationsConfigOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v GetPublicConfigurationsConfig) string { return v.Location }).(pulumi.StringOutput)
}

// The scope of the Public Maintenance Configuration.
func (o GetPublicConfigurationsConfigOutput) MaintenanceScope() pulumi.StringOutput {
	return o.ApplyT(func(v GetPublicConfigurationsConfig) string { return v.MaintenanceScope }).(pulumi.StringOutput)
}

// The name of the Public Maintenance Configuration.
func (o GetPublicConfigurationsConfigOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetPublicConfigurationsConfig) string { return v.Name }).(pulumi.StringOutput)
}

// The recurring window to filter the list of Public Maintenance Configurations against. Possible values are `Monday-Thursday` and `Friday-Sunday`
func (o GetPublicConfigurationsConfigOutput) RecurEvery() pulumi.StringOutput {
	return o.ApplyT(func(v GetPublicConfigurationsConfig) string { return v.RecurEvery }).(pulumi.StringOutput)
}

// The time zone for the maintenance window.
func (o GetPublicConfigurationsConfigOutput) TimeZone() pulumi.StringOutput {
	return o.ApplyT(func(v GetPublicConfigurationsConfig) string { return v.TimeZone }).(pulumi.StringOutput)
}

type GetPublicConfigurationsConfigArrayOutput struct{ *pulumi.OutputState }

func (GetPublicConfigurationsConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPublicConfigurationsConfig)(nil)).Elem()
}

func (o GetPublicConfigurationsConfigArrayOutput) ToGetPublicConfigurationsConfigArrayOutput() GetPublicConfigurationsConfigArrayOutput {
	return o
}

func (o GetPublicConfigurationsConfigArrayOutput) ToGetPublicConfigurationsConfigArrayOutputWithContext(ctx context.Context) GetPublicConfigurationsConfigArrayOutput {
	return o
}

func (o GetPublicConfigurationsConfigArrayOutput) Index(i pulumi.IntInput) GetPublicConfigurationsConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPublicConfigurationsConfig {
		return vs[0].([]GetPublicConfigurationsConfig)[vs[1].(int)]
	}).(GetPublicConfigurationsConfigOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigurationWindowInput)(nil)).Elem(), ConfigurationWindowArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigurationWindowPtrInput)(nil)).Elem(), ConfigurationWindowArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConfigurationWindowInput)(nil)).Elem(), GetConfigurationWindowArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConfigurationWindowArrayInput)(nil)).Elem(), GetConfigurationWindowArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPublicConfigurationsConfigInput)(nil)).Elem(), GetPublicConfigurationsConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPublicConfigurationsConfigArrayInput)(nil)).Elem(), GetPublicConfigurationsConfigArray{})
	pulumi.RegisterOutputType(ConfigurationWindowOutput{})
	pulumi.RegisterOutputType(ConfigurationWindowPtrOutput{})
	pulumi.RegisterOutputType(GetConfigurationWindowOutput{})
	pulumi.RegisterOutputType(GetConfigurationWindowArrayOutput{})
	pulumi.RegisterOutputType(GetPublicConfigurationsConfigOutput{})
	pulumi.RegisterOutputType(GetPublicConfigurationsConfigArrayOutput{})
}
