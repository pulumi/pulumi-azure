// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package databoxedge

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type DeviceDeviceProperty struct {
	// The Data Box Edge/Gateway device local capacity in MB.
	Capacity *int `pulumi:"capacity"`
	// Type of compute roles configured.
	ConfiguredRoleTypes []string `pulumi:"configuredRoleTypes"`
	// The Data Box Edge/Gateway device culture.
	Culture *string `pulumi:"culture"`
	// The device software version number of the device (eg: 1.2.18105.6).
	HcsVersion *string `pulumi:"hcsVersion"`
	// The Data Box Edge/Gateway device model.
	Model *string `pulumi:"model"`
	// The number of nodes in the cluster.
	NodeCount *int `pulumi:"nodeCount"`
	// The Serial Number of Data Box Edge/Gateway device.
	SerialNumber *string `pulumi:"serialNumber"`
	// The Data Box Edge/Gateway device software version.
	SoftwareVersion *string `pulumi:"softwareVersion"`
	// The status of the Data Box Edge/Gateway device.
	Status *string `pulumi:"status"`
	// The Data Box Edge/Gateway device timezone.
	TimeZone *string `pulumi:"timeZone"`
	// The type of the Data Box Edge/Gateway device.
	Type *string `pulumi:"type"`
}

// DeviceDevicePropertyInput is an input type that accepts DeviceDevicePropertyArgs and DeviceDevicePropertyOutput values.
// You can construct a concrete instance of `DeviceDevicePropertyInput` via:
//
//          DeviceDevicePropertyArgs{...}
type DeviceDevicePropertyInput interface {
	pulumi.Input

	ToDeviceDevicePropertyOutput() DeviceDevicePropertyOutput
	ToDeviceDevicePropertyOutputWithContext(context.Context) DeviceDevicePropertyOutput
}

type DeviceDevicePropertyArgs struct {
	// The Data Box Edge/Gateway device local capacity in MB.
	Capacity pulumi.IntPtrInput `pulumi:"capacity"`
	// Type of compute roles configured.
	ConfiguredRoleTypes pulumi.StringArrayInput `pulumi:"configuredRoleTypes"`
	// The Data Box Edge/Gateway device culture.
	Culture pulumi.StringPtrInput `pulumi:"culture"`
	// The device software version number of the device (eg: 1.2.18105.6).
	HcsVersion pulumi.StringPtrInput `pulumi:"hcsVersion"`
	// The Data Box Edge/Gateway device model.
	Model pulumi.StringPtrInput `pulumi:"model"`
	// The number of nodes in the cluster.
	NodeCount pulumi.IntPtrInput `pulumi:"nodeCount"`
	// The Serial Number of Data Box Edge/Gateway device.
	SerialNumber pulumi.StringPtrInput `pulumi:"serialNumber"`
	// The Data Box Edge/Gateway device software version.
	SoftwareVersion pulumi.StringPtrInput `pulumi:"softwareVersion"`
	// The status of the Data Box Edge/Gateway device.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// The Data Box Edge/Gateway device timezone.
	TimeZone pulumi.StringPtrInput `pulumi:"timeZone"`
	// The type of the Data Box Edge/Gateway device.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (DeviceDevicePropertyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeviceDeviceProperty)(nil)).Elem()
}

func (i DeviceDevicePropertyArgs) ToDeviceDevicePropertyOutput() DeviceDevicePropertyOutput {
	return i.ToDeviceDevicePropertyOutputWithContext(context.Background())
}

func (i DeviceDevicePropertyArgs) ToDeviceDevicePropertyOutputWithContext(ctx context.Context) DeviceDevicePropertyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeviceDevicePropertyOutput)
}

// DeviceDevicePropertyArrayInput is an input type that accepts DeviceDevicePropertyArray and DeviceDevicePropertyArrayOutput values.
// You can construct a concrete instance of `DeviceDevicePropertyArrayInput` via:
//
//          DeviceDevicePropertyArray{ DeviceDevicePropertyArgs{...} }
type DeviceDevicePropertyArrayInput interface {
	pulumi.Input

	ToDeviceDevicePropertyArrayOutput() DeviceDevicePropertyArrayOutput
	ToDeviceDevicePropertyArrayOutputWithContext(context.Context) DeviceDevicePropertyArrayOutput
}

type DeviceDevicePropertyArray []DeviceDevicePropertyInput

func (DeviceDevicePropertyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DeviceDeviceProperty)(nil)).Elem()
}

func (i DeviceDevicePropertyArray) ToDeviceDevicePropertyArrayOutput() DeviceDevicePropertyArrayOutput {
	return i.ToDeviceDevicePropertyArrayOutputWithContext(context.Background())
}

func (i DeviceDevicePropertyArray) ToDeviceDevicePropertyArrayOutputWithContext(ctx context.Context) DeviceDevicePropertyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeviceDevicePropertyArrayOutput)
}

type DeviceDevicePropertyOutput struct{ *pulumi.OutputState }

func (DeviceDevicePropertyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeviceDeviceProperty)(nil)).Elem()
}

func (o DeviceDevicePropertyOutput) ToDeviceDevicePropertyOutput() DeviceDevicePropertyOutput {
	return o
}

func (o DeviceDevicePropertyOutput) ToDeviceDevicePropertyOutputWithContext(ctx context.Context) DeviceDevicePropertyOutput {
	return o
}

// The Data Box Edge/Gateway device local capacity in MB.
func (o DeviceDevicePropertyOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DeviceDeviceProperty) *int { return v.Capacity }).(pulumi.IntPtrOutput)
}

// Type of compute roles configured.
func (o DeviceDevicePropertyOutput) ConfiguredRoleTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DeviceDeviceProperty) []string { return v.ConfiguredRoleTypes }).(pulumi.StringArrayOutput)
}

// The Data Box Edge/Gateway device culture.
func (o DeviceDevicePropertyOutput) Culture() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeviceDeviceProperty) *string { return v.Culture }).(pulumi.StringPtrOutput)
}

// The device software version number of the device (eg: 1.2.18105.6).
func (o DeviceDevicePropertyOutput) HcsVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeviceDeviceProperty) *string { return v.HcsVersion }).(pulumi.StringPtrOutput)
}

// The Data Box Edge/Gateway device model.
func (o DeviceDevicePropertyOutput) Model() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeviceDeviceProperty) *string { return v.Model }).(pulumi.StringPtrOutput)
}

// The number of nodes in the cluster.
func (o DeviceDevicePropertyOutput) NodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DeviceDeviceProperty) *int { return v.NodeCount }).(pulumi.IntPtrOutput)
}

// The Serial Number of Data Box Edge/Gateway device.
func (o DeviceDevicePropertyOutput) SerialNumber() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeviceDeviceProperty) *string { return v.SerialNumber }).(pulumi.StringPtrOutput)
}

// The Data Box Edge/Gateway device software version.
func (o DeviceDevicePropertyOutput) SoftwareVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeviceDeviceProperty) *string { return v.SoftwareVersion }).(pulumi.StringPtrOutput)
}

// The status of the Data Box Edge/Gateway device.
func (o DeviceDevicePropertyOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeviceDeviceProperty) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// The Data Box Edge/Gateway device timezone.
func (o DeviceDevicePropertyOutput) TimeZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeviceDeviceProperty) *string { return v.TimeZone }).(pulumi.StringPtrOutput)
}

// The type of the Data Box Edge/Gateway device.
func (o DeviceDevicePropertyOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeviceDeviceProperty) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type DeviceDevicePropertyArrayOutput struct{ *pulumi.OutputState }

func (DeviceDevicePropertyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DeviceDeviceProperty)(nil)).Elem()
}

func (o DeviceDevicePropertyArrayOutput) ToDeviceDevicePropertyArrayOutput() DeviceDevicePropertyArrayOutput {
	return o
}

func (o DeviceDevicePropertyArrayOutput) ToDeviceDevicePropertyArrayOutputWithContext(ctx context.Context) DeviceDevicePropertyArrayOutput {
	return o
}

func (o DeviceDevicePropertyArrayOutput) Index(i pulumi.IntInput) DeviceDevicePropertyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DeviceDeviceProperty {
		return vs[0].([]DeviceDeviceProperty)[vs[1].(int)]
	}).(DeviceDevicePropertyOutput)
}

type OrderContact struct {
	// The name of the company. Changing this forces a new Databox Edge Order to be created.
	CompanyName string `pulumi:"companyName"`
	// A list of email address to send order notification to. Changing this forces a new Databox Edge Order to be created.
	Emails []string `pulumi:"emails"`
	// The contact person name. Changing this forces a new Databox Edge Order to be created.
	Name string `pulumi:"name"`
	// The phone number. Changing this forces a new Databox Edge Order to be created.
	PhoneNumber string `pulumi:"phoneNumber"`
}

// OrderContactInput is an input type that accepts OrderContactArgs and OrderContactOutput values.
// You can construct a concrete instance of `OrderContactInput` via:
//
//          OrderContactArgs{...}
type OrderContactInput interface {
	pulumi.Input

	ToOrderContactOutput() OrderContactOutput
	ToOrderContactOutputWithContext(context.Context) OrderContactOutput
}

type OrderContactArgs struct {
	// The name of the company. Changing this forces a new Databox Edge Order to be created.
	CompanyName pulumi.StringInput `pulumi:"companyName"`
	// A list of email address to send order notification to. Changing this forces a new Databox Edge Order to be created.
	Emails pulumi.StringArrayInput `pulumi:"emails"`
	// The contact person name. Changing this forces a new Databox Edge Order to be created.
	Name pulumi.StringInput `pulumi:"name"`
	// The phone number. Changing this forces a new Databox Edge Order to be created.
	PhoneNumber pulumi.StringInput `pulumi:"phoneNumber"`
}

func (OrderContactArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OrderContact)(nil)).Elem()
}

func (i OrderContactArgs) ToOrderContactOutput() OrderContactOutput {
	return i.ToOrderContactOutputWithContext(context.Background())
}

func (i OrderContactArgs) ToOrderContactOutputWithContext(ctx context.Context) OrderContactOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrderContactOutput)
}

func (i OrderContactArgs) ToOrderContactPtrOutput() OrderContactPtrOutput {
	return i.ToOrderContactPtrOutputWithContext(context.Background())
}

func (i OrderContactArgs) ToOrderContactPtrOutputWithContext(ctx context.Context) OrderContactPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrderContactOutput).ToOrderContactPtrOutputWithContext(ctx)
}

// OrderContactPtrInput is an input type that accepts OrderContactArgs, OrderContactPtr and OrderContactPtrOutput values.
// You can construct a concrete instance of `OrderContactPtrInput` via:
//
//          OrderContactArgs{...}
//
//  or:
//
//          nil
type OrderContactPtrInput interface {
	pulumi.Input

	ToOrderContactPtrOutput() OrderContactPtrOutput
	ToOrderContactPtrOutputWithContext(context.Context) OrderContactPtrOutput
}

type orderContactPtrType OrderContactArgs

func OrderContactPtr(v *OrderContactArgs) OrderContactPtrInput {
	return (*orderContactPtrType)(v)
}

func (*orderContactPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OrderContact)(nil)).Elem()
}

func (i *orderContactPtrType) ToOrderContactPtrOutput() OrderContactPtrOutput {
	return i.ToOrderContactPtrOutputWithContext(context.Background())
}

func (i *orderContactPtrType) ToOrderContactPtrOutputWithContext(ctx context.Context) OrderContactPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrderContactPtrOutput)
}

type OrderContactOutput struct{ *pulumi.OutputState }

func (OrderContactOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrderContact)(nil)).Elem()
}

func (o OrderContactOutput) ToOrderContactOutput() OrderContactOutput {
	return o
}

func (o OrderContactOutput) ToOrderContactOutputWithContext(ctx context.Context) OrderContactOutput {
	return o
}

func (o OrderContactOutput) ToOrderContactPtrOutput() OrderContactPtrOutput {
	return o.ToOrderContactPtrOutputWithContext(context.Background())
}

func (o OrderContactOutput) ToOrderContactPtrOutputWithContext(ctx context.Context) OrderContactPtrOutput {
	return o.ApplyT(func(v OrderContact) *OrderContact {
		return &v
	}).(OrderContactPtrOutput)
}

// The name of the company. Changing this forces a new Databox Edge Order to be created.
func (o OrderContactOutput) CompanyName() pulumi.StringOutput {
	return o.ApplyT(func(v OrderContact) string { return v.CompanyName }).(pulumi.StringOutput)
}

// A list of email address to send order notification to. Changing this forces a new Databox Edge Order to be created.
func (o OrderContactOutput) Emails() pulumi.StringArrayOutput {
	return o.ApplyT(func(v OrderContact) []string { return v.Emails }).(pulumi.StringArrayOutput)
}

// The contact person name. Changing this forces a new Databox Edge Order to be created.
func (o OrderContactOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v OrderContact) string { return v.Name }).(pulumi.StringOutput)
}

// The phone number. Changing this forces a new Databox Edge Order to be created.
func (o OrderContactOutput) PhoneNumber() pulumi.StringOutput {
	return o.ApplyT(func(v OrderContact) string { return v.PhoneNumber }).(pulumi.StringOutput)
}

type OrderContactPtrOutput struct{ *pulumi.OutputState }

func (OrderContactPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OrderContact)(nil)).Elem()
}

func (o OrderContactPtrOutput) ToOrderContactPtrOutput() OrderContactPtrOutput {
	return o
}

func (o OrderContactPtrOutput) ToOrderContactPtrOutputWithContext(ctx context.Context) OrderContactPtrOutput {
	return o
}

func (o OrderContactPtrOutput) Elem() OrderContactOutput {
	return o.ApplyT(func(v *OrderContact) OrderContact { return *v }).(OrderContactOutput)
}

// The name of the company. Changing this forces a new Databox Edge Order to be created.
func (o OrderContactPtrOutput) CompanyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrderContact) *string {
		if v == nil {
			return nil
		}
		return &v.CompanyName
	}).(pulumi.StringPtrOutput)
}

// A list of email address to send order notification to. Changing this forces a new Databox Edge Order to be created.
func (o OrderContactPtrOutput) Emails() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *OrderContact) []string {
		if v == nil {
			return nil
		}
		return v.Emails
	}).(pulumi.StringArrayOutput)
}

// The contact person name. Changing this forces a new Databox Edge Order to be created.
func (o OrderContactPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrderContact) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The phone number. Changing this forces a new Databox Edge Order to be created.
func (o OrderContactPtrOutput) PhoneNumber() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrderContact) *string {
		if v == nil {
			return nil
		}
		return &v.PhoneNumber
	}).(pulumi.StringPtrOutput)
}

type OrderReturnTracking struct {
	// Name of the carrier used in the delivery.
	CarrierName *string `pulumi:"carrierName"`
	// Serial number of the device being tracked.
	SerialNumber *string `pulumi:"serialNumber"`
	// The ID of the tracking.
	TrackingId *string `pulumi:"trackingId"`
	// Tracking URL of the shipment.
	TrackingUrl *string `pulumi:"trackingUrl"`
}

// OrderReturnTrackingInput is an input type that accepts OrderReturnTrackingArgs and OrderReturnTrackingOutput values.
// You can construct a concrete instance of `OrderReturnTrackingInput` via:
//
//          OrderReturnTrackingArgs{...}
type OrderReturnTrackingInput interface {
	pulumi.Input

	ToOrderReturnTrackingOutput() OrderReturnTrackingOutput
	ToOrderReturnTrackingOutputWithContext(context.Context) OrderReturnTrackingOutput
}

type OrderReturnTrackingArgs struct {
	// Name of the carrier used in the delivery.
	CarrierName pulumi.StringPtrInput `pulumi:"carrierName"`
	// Serial number of the device being tracked.
	SerialNumber pulumi.StringPtrInput `pulumi:"serialNumber"`
	// The ID of the tracking.
	TrackingId pulumi.StringPtrInput `pulumi:"trackingId"`
	// Tracking URL of the shipment.
	TrackingUrl pulumi.StringPtrInput `pulumi:"trackingUrl"`
}

func (OrderReturnTrackingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OrderReturnTracking)(nil)).Elem()
}

func (i OrderReturnTrackingArgs) ToOrderReturnTrackingOutput() OrderReturnTrackingOutput {
	return i.ToOrderReturnTrackingOutputWithContext(context.Background())
}

func (i OrderReturnTrackingArgs) ToOrderReturnTrackingOutputWithContext(ctx context.Context) OrderReturnTrackingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrderReturnTrackingOutput)
}

// OrderReturnTrackingArrayInput is an input type that accepts OrderReturnTrackingArray and OrderReturnTrackingArrayOutput values.
// You can construct a concrete instance of `OrderReturnTrackingArrayInput` via:
//
//          OrderReturnTrackingArray{ OrderReturnTrackingArgs{...} }
type OrderReturnTrackingArrayInput interface {
	pulumi.Input

	ToOrderReturnTrackingArrayOutput() OrderReturnTrackingArrayOutput
	ToOrderReturnTrackingArrayOutputWithContext(context.Context) OrderReturnTrackingArrayOutput
}

type OrderReturnTrackingArray []OrderReturnTrackingInput

func (OrderReturnTrackingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OrderReturnTracking)(nil)).Elem()
}

func (i OrderReturnTrackingArray) ToOrderReturnTrackingArrayOutput() OrderReturnTrackingArrayOutput {
	return i.ToOrderReturnTrackingArrayOutputWithContext(context.Background())
}

func (i OrderReturnTrackingArray) ToOrderReturnTrackingArrayOutputWithContext(ctx context.Context) OrderReturnTrackingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrderReturnTrackingArrayOutput)
}

type OrderReturnTrackingOutput struct{ *pulumi.OutputState }

func (OrderReturnTrackingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrderReturnTracking)(nil)).Elem()
}

func (o OrderReturnTrackingOutput) ToOrderReturnTrackingOutput() OrderReturnTrackingOutput {
	return o
}

func (o OrderReturnTrackingOutput) ToOrderReturnTrackingOutputWithContext(ctx context.Context) OrderReturnTrackingOutput {
	return o
}

// Name of the carrier used in the delivery.
func (o OrderReturnTrackingOutput) CarrierName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrderReturnTracking) *string { return v.CarrierName }).(pulumi.StringPtrOutput)
}

// Serial number of the device being tracked.
func (o OrderReturnTrackingOutput) SerialNumber() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrderReturnTracking) *string { return v.SerialNumber }).(pulumi.StringPtrOutput)
}

// The ID of the tracking.
func (o OrderReturnTrackingOutput) TrackingId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrderReturnTracking) *string { return v.TrackingId }).(pulumi.StringPtrOutput)
}

// Tracking URL of the shipment.
func (o OrderReturnTrackingOutput) TrackingUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrderReturnTracking) *string { return v.TrackingUrl }).(pulumi.StringPtrOutput)
}

type OrderReturnTrackingArrayOutput struct{ *pulumi.OutputState }

func (OrderReturnTrackingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OrderReturnTracking)(nil)).Elem()
}

func (o OrderReturnTrackingArrayOutput) ToOrderReturnTrackingArrayOutput() OrderReturnTrackingArrayOutput {
	return o
}

func (o OrderReturnTrackingArrayOutput) ToOrderReturnTrackingArrayOutputWithContext(ctx context.Context) OrderReturnTrackingArrayOutput {
	return o
}

func (o OrderReturnTrackingArrayOutput) Index(i pulumi.IntInput) OrderReturnTrackingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OrderReturnTracking {
		return vs[0].([]OrderReturnTracking)[vs[1].(int)]
	}).(OrderReturnTrackingOutput)
}

type OrderShipmentAddress struct {
	// The list of upto 3 lines for address information. Changing this forces a new Databox Edge Order to be created.
	Addresses []string `pulumi:"addresses"`
	// The city name. Changing this forces a new Databox Edge Order to be created.
	City string `pulumi:"city"`
	// The name of the country to ship the Databox Edge Device to. Valid values are "Algeria", "Argentina", "Australia", "Austria", "Bahamas", "Bahrain", "Bangladesh", "Barbados", "Belgium", "Bermuda", "Bolivia", "Bosnia and Herzegovina", "Brazil", "Bulgaria", "Canada", "Cayman Islands", "Chile", "Colombia", "Costa Rica", "Croatia", "Cyprus", "Czechia", "CÃ´te D'ivoire", "Denmark", "Dominican Republic", "Ecuador", "Egypt", "El Salvador", "Estonia", "Ethiopia", "Finland", "France", "Georgia", "Germany", "Ghana", "Greece", "Guatemala", "Honduras", "Hong Kong SAR", "Hungary", "Iceland", "India", "Indonesia", "Ireland", "Israel", "Italy", "Jamaica", "Japan", "Jordan", "Kazakhstan", "Kenya", "Kuwait", "Kyrgyzstan", "Latvia", "Libya", "Liechtenstein", "Lithuania", "Luxembourg", "Macao SAR", "Malaysia", "Malta", "Mauritius", "Mexico", "Moldova", "Monaco", "Mongolia", "Montenegro", "Morocco", "Namibia", "Nepal", "Netherlands", "New Zealand", "Nicaragua", "Nigeria", "Norway", "Oman", "Pakistan", "Palestinian Authority", "Panama", "Paraguay", "Peru", "Philippines", "Poland", "Portugal", "Puerto Rico", "Qatar", "Republic of Korea", "Romania", "Russia", "Rwanda", "Saint Kitts And Nevis", "Saudi Arabia", "Senegal", "Serbia", "Singapore", "Slovakia", "Slovenia", "South Africa", "Spain", "Sri Lanka", "Sweden", "Switzerland", "Taiwan", "Tajikistan", "Tanzania", "Thailand", "Trinidad And Tobago", "Tunisia", "Turkey", "Turkmenistan", "U.S. Virgin Islands", "Uganda", "Ukraine", "United Arab Emirates", "United Kingdom", "United States", "Uruguay", "Uzbekistan", "Venezuela", "Vietnam", "Yemen", "Zambia" or "Zimbabwe". Changing this forces a new Databox Edge Order to be created.
	Country string `pulumi:"country"`
	// The postal code. Changing this forces a new Databox Edge Order to be created.
	PostalCode string `pulumi:"postalCode"`
	// The name of the state to ship the Databox Edge Device to. Changing this forces a new Databox Edge Order to be created.
	State string `pulumi:"state"`
}

// OrderShipmentAddressInput is an input type that accepts OrderShipmentAddressArgs and OrderShipmentAddressOutput values.
// You can construct a concrete instance of `OrderShipmentAddressInput` via:
//
//          OrderShipmentAddressArgs{...}
type OrderShipmentAddressInput interface {
	pulumi.Input

	ToOrderShipmentAddressOutput() OrderShipmentAddressOutput
	ToOrderShipmentAddressOutputWithContext(context.Context) OrderShipmentAddressOutput
}

type OrderShipmentAddressArgs struct {
	// The list of upto 3 lines for address information. Changing this forces a new Databox Edge Order to be created.
	Addresses pulumi.StringArrayInput `pulumi:"addresses"`
	// The city name. Changing this forces a new Databox Edge Order to be created.
	City pulumi.StringInput `pulumi:"city"`
	// The name of the country to ship the Databox Edge Device to. Valid values are "Algeria", "Argentina", "Australia", "Austria", "Bahamas", "Bahrain", "Bangladesh", "Barbados", "Belgium", "Bermuda", "Bolivia", "Bosnia and Herzegovina", "Brazil", "Bulgaria", "Canada", "Cayman Islands", "Chile", "Colombia", "Costa Rica", "Croatia", "Cyprus", "Czechia", "CÃ´te D'ivoire", "Denmark", "Dominican Republic", "Ecuador", "Egypt", "El Salvador", "Estonia", "Ethiopia", "Finland", "France", "Georgia", "Germany", "Ghana", "Greece", "Guatemala", "Honduras", "Hong Kong SAR", "Hungary", "Iceland", "India", "Indonesia", "Ireland", "Israel", "Italy", "Jamaica", "Japan", "Jordan", "Kazakhstan", "Kenya", "Kuwait", "Kyrgyzstan", "Latvia", "Libya", "Liechtenstein", "Lithuania", "Luxembourg", "Macao SAR", "Malaysia", "Malta", "Mauritius", "Mexico", "Moldova", "Monaco", "Mongolia", "Montenegro", "Morocco", "Namibia", "Nepal", "Netherlands", "New Zealand", "Nicaragua", "Nigeria", "Norway", "Oman", "Pakistan", "Palestinian Authority", "Panama", "Paraguay", "Peru", "Philippines", "Poland", "Portugal", "Puerto Rico", "Qatar", "Republic of Korea", "Romania", "Russia", "Rwanda", "Saint Kitts And Nevis", "Saudi Arabia", "Senegal", "Serbia", "Singapore", "Slovakia", "Slovenia", "South Africa", "Spain", "Sri Lanka", "Sweden", "Switzerland", "Taiwan", "Tajikistan", "Tanzania", "Thailand", "Trinidad And Tobago", "Tunisia", "Turkey", "Turkmenistan", "U.S. Virgin Islands", "Uganda", "Ukraine", "United Arab Emirates", "United Kingdom", "United States", "Uruguay", "Uzbekistan", "Venezuela", "Vietnam", "Yemen", "Zambia" or "Zimbabwe". Changing this forces a new Databox Edge Order to be created.
	Country pulumi.StringInput `pulumi:"country"`
	// The postal code. Changing this forces a new Databox Edge Order to be created.
	PostalCode pulumi.StringInput `pulumi:"postalCode"`
	// The name of the state to ship the Databox Edge Device to. Changing this forces a new Databox Edge Order to be created.
	State pulumi.StringInput `pulumi:"state"`
}

func (OrderShipmentAddressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OrderShipmentAddress)(nil)).Elem()
}

func (i OrderShipmentAddressArgs) ToOrderShipmentAddressOutput() OrderShipmentAddressOutput {
	return i.ToOrderShipmentAddressOutputWithContext(context.Background())
}

func (i OrderShipmentAddressArgs) ToOrderShipmentAddressOutputWithContext(ctx context.Context) OrderShipmentAddressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrderShipmentAddressOutput)
}

func (i OrderShipmentAddressArgs) ToOrderShipmentAddressPtrOutput() OrderShipmentAddressPtrOutput {
	return i.ToOrderShipmentAddressPtrOutputWithContext(context.Background())
}

func (i OrderShipmentAddressArgs) ToOrderShipmentAddressPtrOutputWithContext(ctx context.Context) OrderShipmentAddressPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrderShipmentAddressOutput).ToOrderShipmentAddressPtrOutputWithContext(ctx)
}

// OrderShipmentAddressPtrInput is an input type that accepts OrderShipmentAddressArgs, OrderShipmentAddressPtr and OrderShipmentAddressPtrOutput values.
// You can construct a concrete instance of `OrderShipmentAddressPtrInput` via:
//
//          OrderShipmentAddressArgs{...}
//
//  or:
//
//          nil
type OrderShipmentAddressPtrInput interface {
	pulumi.Input

	ToOrderShipmentAddressPtrOutput() OrderShipmentAddressPtrOutput
	ToOrderShipmentAddressPtrOutputWithContext(context.Context) OrderShipmentAddressPtrOutput
}

type orderShipmentAddressPtrType OrderShipmentAddressArgs

func OrderShipmentAddressPtr(v *OrderShipmentAddressArgs) OrderShipmentAddressPtrInput {
	return (*orderShipmentAddressPtrType)(v)
}

func (*orderShipmentAddressPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OrderShipmentAddress)(nil)).Elem()
}

func (i *orderShipmentAddressPtrType) ToOrderShipmentAddressPtrOutput() OrderShipmentAddressPtrOutput {
	return i.ToOrderShipmentAddressPtrOutputWithContext(context.Background())
}

func (i *orderShipmentAddressPtrType) ToOrderShipmentAddressPtrOutputWithContext(ctx context.Context) OrderShipmentAddressPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrderShipmentAddressPtrOutput)
}

type OrderShipmentAddressOutput struct{ *pulumi.OutputState }

func (OrderShipmentAddressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrderShipmentAddress)(nil)).Elem()
}

func (o OrderShipmentAddressOutput) ToOrderShipmentAddressOutput() OrderShipmentAddressOutput {
	return o
}

func (o OrderShipmentAddressOutput) ToOrderShipmentAddressOutputWithContext(ctx context.Context) OrderShipmentAddressOutput {
	return o
}

func (o OrderShipmentAddressOutput) ToOrderShipmentAddressPtrOutput() OrderShipmentAddressPtrOutput {
	return o.ToOrderShipmentAddressPtrOutputWithContext(context.Background())
}

func (o OrderShipmentAddressOutput) ToOrderShipmentAddressPtrOutputWithContext(ctx context.Context) OrderShipmentAddressPtrOutput {
	return o.ApplyT(func(v OrderShipmentAddress) *OrderShipmentAddress {
		return &v
	}).(OrderShipmentAddressPtrOutput)
}

// The list of upto 3 lines for address information. Changing this forces a new Databox Edge Order to be created.
func (o OrderShipmentAddressOutput) Addresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v OrderShipmentAddress) []string { return v.Addresses }).(pulumi.StringArrayOutput)
}

// The city name. Changing this forces a new Databox Edge Order to be created.
func (o OrderShipmentAddressOutput) City() pulumi.StringOutput {
	return o.ApplyT(func(v OrderShipmentAddress) string { return v.City }).(pulumi.StringOutput)
}

// The name of the country to ship the Databox Edge Device to. Valid values are "Algeria", "Argentina", "Australia", "Austria", "Bahamas", "Bahrain", "Bangladesh", "Barbados", "Belgium", "Bermuda", "Bolivia", "Bosnia and Herzegovina", "Brazil", "Bulgaria", "Canada", "Cayman Islands", "Chile", "Colombia", "Costa Rica", "Croatia", "Cyprus", "Czechia", "CÃ´te D'ivoire", "Denmark", "Dominican Republic", "Ecuador", "Egypt", "El Salvador", "Estonia", "Ethiopia", "Finland", "France", "Georgia", "Germany", "Ghana", "Greece", "Guatemala", "Honduras", "Hong Kong SAR", "Hungary", "Iceland", "India", "Indonesia", "Ireland", "Israel", "Italy", "Jamaica", "Japan", "Jordan", "Kazakhstan", "Kenya", "Kuwait", "Kyrgyzstan", "Latvia", "Libya", "Liechtenstein", "Lithuania", "Luxembourg", "Macao SAR", "Malaysia", "Malta", "Mauritius", "Mexico", "Moldova", "Monaco", "Mongolia", "Montenegro", "Morocco", "Namibia", "Nepal", "Netherlands", "New Zealand", "Nicaragua", "Nigeria", "Norway", "Oman", "Pakistan", "Palestinian Authority", "Panama", "Paraguay", "Peru", "Philippines", "Poland", "Portugal", "Puerto Rico", "Qatar", "Republic of Korea", "Romania", "Russia", "Rwanda", "Saint Kitts And Nevis", "Saudi Arabia", "Senegal", "Serbia", "Singapore", "Slovakia", "Slovenia", "South Africa", "Spain", "Sri Lanka", "Sweden", "Switzerland", "Taiwan", "Tajikistan", "Tanzania", "Thailand", "Trinidad And Tobago", "Tunisia", "Turkey", "Turkmenistan", "U.S. Virgin Islands", "Uganda", "Ukraine", "United Arab Emirates", "United Kingdom", "United States", "Uruguay", "Uzbekistan", "Venezuela", "Vietnam", "Yemen", "Zambia" or "Zimbabwe". Changing this forces a new Databox Edge Order to be created.
func (o OrderShipmentAddressOutput) Country() pulumi.StringOutput {
	return o.ApplyT(func(v OrderShipmentAddress) string { return v.Country }).(pulumi.StringOutput)
}

// The postal code. Changing this forces a new Databox Edge Order to be created.
func (o OrderShipmentAddressOutput) PostalCode() pulumi.StringOutput {
	return o.ApplyT(func(v OrderShipmentAddress) string { return v.PostalCode }).(pulumi.StringOutput)
}

// The name of the state to ship the Databox Edge Device to. Changing this forces a new Databox Edge Order to be created.
func (o OrderShipmentAddressOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v OrderShipmentAddress) string { return v.State }).(pulumi.StringOutput)
}

type OrderShipmentAddressPtrOutput struct{ *pulumi.OutputState }

func (OrderShipmentAddressPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OrderShipmentAddress)(nil)).Elem()
}

func (o OrderShipmentAddressPtrOutput) ToOrderShipmentAddressPtrOutput() OrderShipmentAddressPtrOutput {
	return o
}

func (o OrderShipmentAddressPtrOutput) ToOrderShipmentAddressPtrOutputWithContext(ctx context.Context) OrderShipmentAddressPtrOutput {
	return o
}

func (o OrderShipmentAddressPtrOutput) Elem() OrderShipmentAddressOutput {
	return o.ApplyT(func(v *OrderShipmentAddress) OrderShipmentAddress { return *v }).(OrderShipmentAddressOutput)
}

// The list of upto 3 lines for address information. Changing this forces a new Databox Edge Order to be created.
func (o OrderShipmentAddressPtrOutput) Addresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *OrderShipmentAddress) []string {
		if v == nil {
			return nil
		}
		return v.Addresses
	}).(pulumi.StringArrayOutput)
}

// The city name. Changing this forces a new Databox Edge Order to be created.
func (o OrderShipmentAddressPtrOutput) City() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrderShipmentAddress) *string {
		if v == nil {
			return nil
		}
		return &v.City
	}).(pulumi.StringPtrOutput)
}

// The name of the country to ship the Databox Edge Device to. Valid values are "Algeria", "Argentina", "Australia", "Austria", "Bahamas", "Bahrain", "Bangladesh", "Barbados", "Belgium", "Bermuda", "Bolivia", "Bosnia and Herzegovina", "Brazil", "Bulgaria", "Canada", "Cayman Islands", "Chile", "Colombia", "Costa Rica", "Croatia", "Cyprus", "Czechia", "CÃ´te D'ivoire", "Denmark", "Dominican Republic", "Ecuador", "Egypt", "El Salvador", "Estonia", "Ethiopia", "Finland", "France", "Georgia", "Germany", "Ghana", "Greece", "Guatemala", "Honduras", "Hong Kong SAR", "Hungary", "Iceland", "India", "Indonesia", "Ireland", "Israel", "Italy", "Jamaica", "Japan", "Jordan", "Kazakhstan", "Kenya", "Kuwait", "Kyrgyzstan", "Latvia", "Libya", "Liechtenstein", "Lithuania", "Luxembourg", "Macao SAR", "Malaysia", "Malta", "Mauritius", "Mexico", "Moldova", "Monaco", "Mongolia", "Montenegro", "Morocco", "Namibia", "Nepal", "Netherlands", "New Zealand", "Nicaragua", "Nigeria", "Norway", "Oman", "Pakistan", "Palestinian Authority", "Panama", "Paraguay", "Peru", "Philippines", "Poland", "Portugal", "Puerto Rico", "Qatar", "Republic of Korea", "Romania", "Russia", "Rwanda", "Saint Kitts And Nevis", "Saudi Arabia", "Senegal", "Serbia", "Singapore", "Slovakia", "Slovenia", "South Africa", "Spain", "Sri Lanka", "Sweden", "Switzerland", "Taiwan", "Tajikistan", "Tanzania", "Thailand", "Trinidad And Tobago", "Tunisia", "Turkey", "Turkmenistan", "U.S. Virgin Islands", "Uganda", "Ukraine", "United Arab Emirates", "United Kingdom", "United States", "Uruguay", "Uzbekistan", "Venezuela", "Vietnam", "Yemen", "Zambia" or "Zimbabwe". Changing this forces a new Databox Edge Order to be created.
func (o OrderShipmentAddressPtrOutput) Country() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrderShipmentAddress) *string {
		if v == nil {
			return nil
		}
		return &v.Country
	}).(pulumi.StringPtrOutput)
}

// The postal code. Changing this forces a new Databox Edge Order to be created.
func (o OrderShipmentAddressPtrOutput) PostalCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrderShipmentAddress) *string {
		if v == nil {
			return nil
		}
		return &v.PostalCode
	}).(pulumi.StringPtrOutput)
}

// The name of the state to ship the Databox Edge Device to. Changing this forces a new Databox Edge Order to be created.
func (o OrderShipmentAddressPtrOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrderShipmentAddress) *string {
		if v == nil {
			return nil
		}
		return &v.State
	}).(pulumi.StringPtrOutput)
}

type OrderShipmentHistory struct {
	// Dictionary to hold generic information which is not stored by the already existing properties.
	AdditionalDetails map[string]string `pulumi:"additionalDetails"`
	// Comments related to this status change.
	Comments *string `pulumi:"comments"`
	// Time of status update.
	LastUpdate *string `pulumi:"lastUpdate"`
}

// OrderShipmentHistoryInput is an input type that accepts OrderShipmentHistoryArgs and OrderShipmentHistoryOutput values.
// You can construct a concrete instance of `OrderShipmentHistoryInput` via:
//
//          OrderShipmentHistoryArgs{...}
type OrderShipmentHistoryInput interface {
	pulumi.Input

	ToOrderShipmentHistoryOutput() OrderShipmentHistoryOutput
	ToOrderShipmentHistoryOutputWithContext(context.Context) OrderShipmentHistoryOutput
}

type OrderShipmentHistoryArgs struct {
	// Dictionary to hold generic information which is not stored by the already existing properties.
	AdditionalDetails pulumi.StringMapInput `pulumi:"additionalDetails"`
	// Comments related to this status change.
	Comments pulumi.StringPtrInput `pulumi:"comments"`
	// Time of status update.
	LastUpdate pulumi.StringPtrInput `pulumi:"lastUpdate"`
}

func (OrderShipmentHistoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OrderShipmentHistory)(nil)).Elem()
}

func (i OrderShipmentHistoryArgs) ToOrderShipmentHistoryOutput() OrderShipmentHistoryOutput {
	return i.ToOrderShipmentHistoryOutputWithContext(context.Background())
}

func (i OrderShipmentHistoryArgs) ToOrderShipmentHistoryOutputWithContext(ctx context.Context) OrderShipmentHistoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrderShipmentHistoryOutput)
}

// OrderShipmentHistoryArrayInput is an input type that accepts OrderShipmentHistoryArray and OrderShipmentHistoryArrayOutput values.
// You can construct a concrete instance of `OrderShipmentHistoryArrayInput` via:
//
//          OrderShipmentHistoryArray{ OrderShipmentHistoryArgs{...} }
type OrderShipmentHistoryArrayInput interface {
	pulumi.Input

	ToOrderShipmentHistoryArrayOutput() OrderShipmentHistoryArrayOutput
	ToOrderShipmentHistoryArrayOutputWithContext(context.Context) OrderShipmentHistoryArrayOutput
}

type OrderShipmentHistoryArray []OrderShipmentHistoryInput

func (OrderShipmentHistoryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OrderShipmentHistory)(nil)).Elem()
}

func (i OrderShipmentHistoryArray) ToOrderShipmentHistoryArrayOutput() OrderShipmentHistoryArrayOutput {
	return i.ToOrderShipmentHistoryArrayOutputWithContext(context.Background())
}

func (i OrderShipmentHistoryArray) ToOrderShipmentHistoryArrayOutputWithContext(ctx context.Context) OrderShipmentHistoryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrderShipmentHistoryArrayOutput)
}

type OrderShipmentHistoryOutput struct{ *pulumi.OutputState }

func (OrderShipmentHistoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrderShipmentHistory)(nil)).Elem()
}

func (o OrderShipmentHistoryOutput) ToOrderShipmentHistoryOutput() OrderShipmentHistoryOutput {
	return o
}

func (o OrderShipmentHistoryOutput) ToOrderShipmentHistoryOutputWithContext(ctx context.Context) OrderShipmentHistoryOutput {
	return o
}

// Dictionary to hold generic information which is not stored by the already existing properties.
func (o OrderShipmentHistoryOutput) AdditionalDetails() pulumi.StringMapOutput {
	return o.ApplyT(func(v OrderShipmentHistory) map[string]string { return v.AdditionalDetails }).(pulumi.StringMapOutput)
}

// Comments related to this status change.
func (o OrderShipmentHistoryOutput) Comments() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrderShipmentHistory) *string { return v.Comments }).(pulumi.StringPtrOutput)
}

// Time of status update.
func (o OrderShipmentHistoryOutput) LastUpdate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrderShipmentHistory) *string { return v.LastUpdate }).(pulumi.StringPtrOutput)
}

type OrderShipmentHistoryArrayOutput struct{ *pulumi.OutputState }

func (OrderShipmentHistoryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OrderShipmentHistory)(nil)).Elem()
}

func (o OrderShipmentHistoryArrayOutput) ToOrderShipmentHistoryArrayOutput() OrderShipmentHistoryArrayOutput {
	return o
}

func (o OrderShipmentHistoryArrayOutput) ToOrderShipmentHistoryArrayOutputWithContext(ctx context.Context) OrderShipmentHistoryArrayOutput {
	return o
}

func (o OrderShipmentHistoryArrayOutput) Index(i pulumi.IntInput) OrderShipmentHistoryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OrderShipmentHistory {
		return vs[0].([]OrderShipmentHistory)[vs[1].(int)]
	}).(OrderShipmentHistoryOutput)
}

type OrderShipmentTracking struct {
	// Name of the carrier used in the delivery.
	CarrierName *string `pulumi:"carrierName"`
	// Serial number of the device being tracked.
	SerialNumber *string `pulumi:"serialNumber"`
	// The ID of the tracking.
	TrackingId *string `pulumi:"trackingId"`
	// Tracking URL of the shipment.
	TrackingUrl *string `pulumi:"trackingUrl"`
}

// OrderShipmentTrackingInput is an input type that accepts OrderShipmentTrackingArgs and OrderShipmentTrackingOutput values.
// You can construct a concrete instance of `OrderShipmentTrackingInput` via:
//
//          OrderShipmentTrackingArgs{...}
type OrderShipmentTrackingInput interface {
	pulumi.Input

	ToOrderShipmentTrackingOutput() OrderShipmentTrackingOutput
	ToOrderShipmentTrackingOutputWithContext(context.Context) OrderShipmentTrackingOutput
}

type OrderShipmentTrackingArgs struct {
	// Name of the carrier used in the delivery.
	CarrierName pulumi.StringPtrInput `pulumi:"carrierName"`
	// Serial number of the device being tracked.
	SerialNumber pulumi.StringPtrInput `pulumi:"serialNumber"`
	// The ID of the tracking.
	TrackingId pulumi.StringPtrInput `pulumi:"trackingId"`
	// Tracking URL of the shipment.
	TrackingUrl pulumi.StringPtrInput `pulumi:"trackingUrl"`
}

func (OrderShipmentTrackingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OrderShipmentTracking)(nil)).Elem()
}

func (i OrderShipmentTrackingArgs) ToOrderShipmentTrackingOutput() OrderShipmentTrackingOutput {
	return i.ToOrderShipmentTrackingOutputWithContext(context.Background())
}

func (i OrderShipmentTrackingArgs) ToOrderShipmentTrackingOutputWithContext(ctx context.Context) OrderShipmentTrackingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrderShipmentTrackingOutput)
}

// OrderShipmentTrackingArrayInput is an input type that accepts OrderShipmentTrackingArray and OrderShipmentTrackingArrayOutput values.
// You can construct a concrete instance of `OrderShipmentTrackingArrayInput` via:
//
//          OrderShipmentTrackingArray{ OrderShipmentTrackingArgs{...} }
type OrderShipmentTrackingArrayInput interface {
	pulumi.Input

	ToOrderShipmentTrackingArrayOutput() OrderShipmentTrackingArrayOutput
	ToOrderShipmentTrackingArrayOutputWithContext(context.Context) OrderShipmentTrackingArrayOutput
}

type OrderShipmentTrackingArray []OrderShipmentTrackingInput

func (OrderShipmentTrackingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OrderShipmentTracking)(nil)).Elem()
}

func (i OrderShipmentTrackingArray) ToOrderShipmentTrackingArrayOutput() OrderShipmentTrackingArrayOutput {
	return i.ToOrderShipmentTrackingArrayOutputWithContext(context.Background())
}

func (i OrderShipmentTrackingArray) ToOrderShipmentTrackingArrayOutputWithContext(ctx context.Context) OrderShipmentTrackingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrderShipmentTrackingArrayOutput)
}

type OrderShipmentTrackingOutput struct{ *pulumi.OutputState }

func (OrderShipmentTrackingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrderShipmentTracking)(nil)).Elem()
}

func (o OrderShipmentTrackingOutput) ToOrderShipmentTrackingOutput() OrderShipmentTrackingOutput {
	return o
}

func (o OrderShipmentTrackingOutput) ToOrderShipmentTrackingOutputWithContext(ctx context.Context) OrderShipmentTrackingOutput {
	return o
}

// Name of the carrier used in the delivery.
func (o OrderShipmentTrackingOutput) CarrierName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrderShipmentTracking) *string { return v.CarrierName }).(pulumi.StringPtrOutput)
}

// Serial number of the device being tracked.
func (o OrderShipmentTrackingOutput) SerialNumber() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrderShipmentTracking) *string { return v.SerialNumber }).(pulumi.StringPtrOutput)
}

// The ID of the tracking.
func (o OrderShipmentTrackingOutput) TrackingId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrderShipmentTracking) *string { return v.TrackingId }).(pulumi.StringPtrOutput)
}

// Tracking URL of the shipment.
func (o OrderShipmentTrackingOutput) TrackingUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrderShipmentTracking) *string { return v.TrackingUrl }).(pulumi.StringPtrOutput)
}

type OrderShipmentTrackingArrayOutput struct{ *pulumi.OutputState }

func (OrderShipmentTrackingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OrderShipmentTracking)(nil)).Elem()
}

func (o OrderShipmentTrackingArrayOutput) ToOrderShipmentTrackingArrayOutput() OrderShipmentTrackingArrayOutput {
	return o
}

func (o OrderShipmentTrackingArrayOutput) ToOrderShipmentTrackingArrayOutputWithContext(ctx context.Context) OrderShipmentTrackingArrayOutput {
	return o
}

func (o OrderShipmentTrackingArrayOutput) Index(i pulumi.IntInput) OrderShipmentTrackingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OrderShipmentTracking {
		return vs[0].([]OrderShipmentTracking)[vs[1].(int)]
	}).(OrderShipmentTrackingOutput)
}

type OrderStatus struct {
	// Dictionary to hold generic information which is not stored by the already existing properties.
	AdditionalDetails map[string]string `pulumi:"additionalDetails"`
	// Comments related to this status change.
	Comments *string `pulumi:"comments"`
	// The current status of the order. Possible values include `Untracked`, `AwaitingFulfilment`, `AwaitingPreparation`, `AwaitingShipment`, `Shipped`, `Arriving`, `Delivered`, `ReplacementRequested`, `LostDevice`, `Declined`, `ReturnInitiated`, `AwaitingReturnShipment`, `ShippedBack` or `CollectedAtMicrosoft`.
	Info *string `pulumi:"info"`
	// Time of status update.
	LastUpdate *string `pulumi:"lastUpdate"`
}

// OrderStatusInput is an input type that accepts OrderStatusArgs and OrderStatusOutput values.
// You can construct a concrete instance of `OrderStatusInput` via:
//
//          OrderStatusArgs{...}
type OrderStatusInput interface {
	pulumi.Input

	ToOrderStatusOutput() OrderStatusOutput
	ToOrderStatusOutputWithContext(context.Context) OrderStatusOutput
}

type OrderStatusArgs struct {
	// Dictionary to hold generic information which is not stored by the already existing properties.
	AdditionalDetails pulumi.StringMapInput `pulumi:"additionalDetails"`
	// Comments related to this status change.
	Comments pulumi.StringPtrInput `pulumi:"comments"`
	// The current status of the order. Possible values include `Untracked`, `AwaitingFulfilment`, `AwaitingPreparation`, `AwaitingShipment`, `Shipped`, `Arriving`, `Delivered`, `ReplacementRequested`, `LostDevice`, `Declined`, `ReturnInitiated`, `AwaitingReturnShipment`, `ShippedBack` or `CollectedAtMicrosoft`.
	Info pulumi.StringPtrInput `pulumi:"info"`
	// Time of status update.
	LastUpdate pulumi.StringPtrInput `pulumi:"lastUpdate"`
}

func (OrderStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OrderStatus)(nil)).Elem()
}

func (i OrderStatusArgs) ToOrderStatusOutput() OrderStatusOutput {
	return i.ToOrderStatusOutputWithContext(context.Background())
}

func (i OrderStatusArgs) ToOrderStatusOutputWithContext(ctx context.Context) OrderStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrderStatusOutput)
}

// OrderStatusArrayInput is an input type that accepts OrderStatusArray and OrderStatusArrayOutput values.
// You can construct a concrete instance of `OrderStatusArrayInput` via:
//
//          OrderStatusArray{ OrderStatusArgs{...} }
type OrderStatusArrayInput interface {
	pulumi.Input

	ToOrderStatusArrayOutput() OrderStatusArrayOutput
	ToOrderStatusArrayOutputWithContext(context.Context) OrderStatusArrayOutput
}

type OrderStatusArray []OrderStatusInput

func (OrderStatusArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OrderStatus)(nil)).Elem()
}

func (i OrderStatusArray) ToOrderStatusArrayOutput() OrderStatusArrayOutput {
	return i.ToOrderStatusArrayOutputWithContext(context.Background())
}

func (i OrderStatusArray) ToOrderStatusArrayOutputWithContext(ctx context.Context) OrderStatusArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrderStatusArrayOutput)
}

type OrderStatusOutput struct{ *pulumi.OutputState }

func (OrderStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrderStatus)(nil)).Elem()
}

func (o OrderStatusOutput) ToOrderStatusOutput() OrderStatusOutput {
	return o
}

func (o OrderStatusOutput) ToOrderStatusOutputWithContext(ctx context.Context) OrderStatusOutput {
	return o
}

// Dictionary to hold generic information which is not stored by the already existing properties.
func (o OrderStatusOutput) AdditionalDetails() pulumi.StringMapOutput {
	return o.ApplyT(func(v OrderStatus) map[string]string { return v.AdditionalDetails }).(pulumi.StringMapOutput)
}

// Comments related to this status change.
func (o OrderStatusOutput) Comments() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrderStatus) *string { return v.Comments }).(pulumi.StringPtrOutput)
}

// The current status of the order. Possible values include `Untracked`, `AwaitingFulfilment`, `AwaitingPreparation`, `AwaitingShipment`, `Shipped`, `Arriving`, `Delivered`, `ReplacementRequested`, `LostDevice`, `Declined`, `ReturnInitiated`, `AwaitingReturnShipment`, `ShippedBack` or `CollectedAtMicrosoft`.
func (o OrderStatusOutput) Info() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrderStatus) *string { return v.Info }).(pulumi.StringPtrOutput)
}

// Time of status update.
func (o OrderStatusOutput) LastUpdate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrderStatus) *string { return v.LastUpdate }).(pulumi.StringPtrOutput)
}

type OrderStatusArrayOutput struct{ *pulumi.OutputState }

func (OrderStatusArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OrderStatus)(nil)).Elem()
}

func (o OrderStatusArrayOutput) ToOrderStatusArrayOutput() OrderStatusArrayOutput {
	return o
}

func (o OrderStatusArrayOutput) ToOrderStatusArrayOutputWithContext(ctx context.Context) OrderStatusArrayOutput {
	return o
}

func (o OrderStatusArrayOutput) Index(i pulumi.IntInput) OrderStatusOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OrderStatus {
		return vs[0].([]OrderStatus)[vs[1].(int)]
	}).(OrderStatusOutput)
}

func init() {
	pulumi.RegisterOutputType(DeviceDevicePropertyOutput{})
	pulumi.RegisterOutputType(DeviceDevicePropertyArrayOutput{})
	pulumi.RegisterOutputType(OrderContactOutput{})
	pulumi.RegisterOutputType(OrderContactPtrOutput{})
	pulumi.RegisterOutputType(OrderReturnTrackingOutput{})
	pulumi.RegisterOutputType(OrderReturnTrackingArrayOutput{})
	pulumi.RegisterOutputType(OrderShipmentAddressOutput{})
	pulumi.RegisterOutputType(OrderShipmentAddressPtrOutput{})
	pulumi.RegisterOutputType(OrderShipmentHistoryOutput{})
	pulumi.RegisterOutputType(OrderShipmentHistoryArrayOutput{})
	pulumi.RegisterOutputType(OrderShipmentTrackingOutput{})
	pulumi.RegisterOutputType(OrderShipmentTrackingArrayOutput{})
	pulumi.RegisterOutputType(OrderStatusOutput{})
	pulumi.RegisterOutputType(OrderStatusArrayOutput{})
}
