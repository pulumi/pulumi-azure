// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package devspace

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type ControllerSku struct {
	// Specifies the name of the DevSpace Controller. Changing this forces a new resource to be created.
	Name string `pulumi:"name"`
	Tier string `pulumi:"tier"`
}

type ControllerSkuInput interface {
	pulumi.Input

	ToControllerSkuOutput() ControllerSkuOutput
	ToControllerSkuOutputWithContext(context.Context) ControllerSkuOutput
}

type ControllerSkuArgs struct {
	// Specifies the name of the DevSpace Controller. Changing this forces a new resource to be created.
	Name pulumi.StringInput `pulumi:"name"`
	Tier pulumi.StringInput `pulumi:"tier"`
}

func (ControllerSkuArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ControllerSku)(nil)).Elem()
}

func (i ControllerSkuArgs) ToControllerSkuOutput() ControllerSkuOutput {
	return i.ToControllerSkuOutputWithContext(context.Background())
}

func (i ControllerSkuArgs) ToControllerSkuOutputWithContext(ctx context.Context) ControllerSkuOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ControllerSkuOutput)
}

func (i ControllerSkuArgs) ToControllerSkuPtrOutput() ControllerSkuPtrOutput {
	return i.ToControllerSkuPtrOutputWithContext(context.Background())
}

func (i ControllerSkuArgs) ToControllerSkuPtrOutputWithContext(ctx context.Context) ControllerSkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ControllerSkuOutput).ToControllerSkuPtrOutputWithContext(ctx)
}

type ControllerSkuPtrInput interface {
	pulumi.Input

	ToControllerSkuPtrOutput() ControllerSkuPtrOutput
	ToControllerSkuPtrOutputWithContext(context.Context) ControllerSkuPtrOutput
}

type controllerSkuPtrType ControllerSkuArgs

func ControllerSkuPtr(v *ControllerSkuArgs) ControllerSkuPtrInput {	return (*controllerSkuPtrType)(v)
}

func (*controllerSkuPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ControllerSku)(nil)).Elem()
}

func (i *controllerSkuPtrType) ToControllerSkuPtrOutput() ControllerSkuPtrOutput {
	return i.ToControllerSkuPtrOutputWithContext(context.Background())
}

func (i *controllerSkuPtrType) ToControllerSkuPtrOutputWithContext(ctx context.Context) ControllerSkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ControllerSkuPtrOutput)
}

type ControllerSkuOutput struct { *pulumi.OutputState }

func (ControllerSkuOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ControllerSku)(nil)).Elem()
}

func (o ControllerSkuOutput) ToControllerSkuOutput() ControllerSkuOutput {
	return o
}

func (o ControllerSkuOutput) ToControllerSkuOutputWithContext(ctx context.Context) ControllerSkuOutput {
	return o
}

func (o ControllerSkuOutput) ToControllerSkuPtrOutput() ControllerSkuPtrOutput {
	return o.ToControllerSkuPtrOutputWithContext(context.Background())
}

func (o ControllerSkuOutput) ToControllerSkuPtrOutputWithContext(ctx context.Context) ControllerSkuPtrOutput {
	return o.ApplyT(func(v ControllerSku) *ControllerSku {
		return &v
	}).(ControllerSkuPtrOutput)
}
// Specifies the name of the DevSpace Controller. Changing this forces a new resource to be created.
func (o ControllerSkuOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func (v ControllerSku) string { return v.Name }).(pulumi.StringOutput)
}

func (o ControllerSkuOutput) Tier() pulumi.StringOutput {
	return o.ApplyT(func (v ControllerSku) string { return v.Tier }).(pulumi.StringOutput)
}

type ControllerSkuPtrOutput struct { *pulumi.OutputState}

func (ControllerSkuPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ControllerSku)(nil)).Elem()
}

func (o ControllerSkuPtrOutput) ToControllerSkuPtrOutput() ControllerSkuPtrOutput {
	return o
}

func (o ControllerSkuPtrOutput) ToControllerSkuPtrOutputWithContext(ctx context.Context) ControllerSkuPtrOutput {
	return o
}

func (o ControllerSkuPtrOutput) Elem() ControllerSkuOutput {
	return o.ApplyT(func (v *ControllerSku) ControllerSku { return *v }).(ControllerSkuOutput)
}

// Specifies the name of the DevSpace Controller. Changing this forces a new resource to be created.
func (o ControllerSkuPtrOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func (v ControllerSku) string { return v.Name }).(pulumi.StringOutput)
}

func (o ControllerSkuPtrOutput) Tier() pulumi.StringOutput {
	return o.ApplyT(func (v ControllerSku) string { return v.Tier }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(ControllerSkuOutput{})
	pulumi.RegisterOutputType(ControllerSkuPtrOutput{})
}
