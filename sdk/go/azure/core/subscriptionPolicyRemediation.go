// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package core

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type SubscriptionPolicyRemediation struct {
	pulumi.CustomResourceState

	FailurePercentage   pulumi.Float64PtrOutput  `pulumi:"failurePercentage"`
	LocationFilters     pulumi.StringArrayOutput `pulumi:"locationFilters"`
	Name                pulumi.StringOutput      `pulumi:"name"`
	ParallelDeployments pulumi.IntPtrOutput      `pulumi:"parallelDeployments"`
	PolicyAssignmentId  pulumi.StringOutput      `pulumi:"policyAssignmentId"`
	// Deprecated: `policy_definition_id` will be removed in version 4.0 of the AzureRM Provider in favour of `policy_definition_reference_id`.
	PolicyDefinitionId          pulumi.StringPtrOutput `pulumi:"policyDefinitionId"`
	PolicyDefinitionReferenceId pulumi.StringPtrOutput `pulumi:"policyDefinitionReferenceId"`
	ResourceCount               pulumi.IntPtrOutput    `pulumi:"resourceCount"`
	ResourceDiscoveryMode       pulumi.StringPtrOutput `pulumi:"resourceDiscoveryMode"`
	SubscriptionId              pulumi.StringOutput    `pulumi:"subscriptionId"`
}

// NewSubscriptionPolicyRemediation registers a new resource with the given unique name, arguments, and options.
func NewSubscriptionPolicyRemediation(ctx *pulumi.Context,
	name string, args *SubscriptionPolicyRemediationArgs, opts ...pulumi.ResourceOption) (*SubscriptionPolicyRemediation, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.PolicyAssignmentId == nil {
		return nil, errors.New("invalid value for required argument 'PolicyAssignmentId'")
	}
	if args.SubscriptionId == nil {
		return nil, errors.New("invalid value for required argument 'SubscriptionId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource SubscriptionPolicyRemediation
	err := ctx.RegisterResource("azure:core/subscriptionPolicyRemediation:SubscriptionPolicyRemediation", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSubscriptionPolicyRemediation gets an existing SubscriptionPolicyRemediation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSubscriptionPolicyRemediation(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SubscriptionPolicyRemediationState, opts ...pulumi.ResourceOption) (*SubscriptionPolicyRemediation, error) {
	var resource SubscriptionPolicyRemediation
	err := ctx.ReadResource("azure:core/subscriptionPolicyRemediation:SubscriptionPolicyRemediation", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SubscriptionPolicyRemediation resources.
type subscriptionPolicyRemediationState struct {
	FailurePercentage   *float64 `pulumi:"failurePercentage"`
	LocationFilters     []string `pulumi:"locationFilters"`
	Name                *string  `pulumi:"name"`
	ParallelDeployments *int     `pulumi:"parallelDeployments"`
	PolicyAssignmentId  *string  `pulumi:"policyAssignmentId"`
	// Deprecated: `policy_definition_id` will be removed in version 4.0 of the AzureRM Provider in favour of `policy_definition_reference_id`.
	PolicyDefinitionId          *string `pulumi:"policyDefinitionId"`
	PolicyDefinitionReferenceId *string `pulumi:"policyDefinitionReferenceId"`
	ResourceCount               *int    `pulumi:"resourceCount"`
	ResourceDiscoveryMode       *string `pulumi:"resourceDiscoveryMode"`
	SubscriptionId              *string `pulumi:"subscriptionId"`
}

type SubscriptionPolicyRemediationState struct {
	FailurePercentage   pulumi.Float64PtrInput
	LocationFilters     pulumi.StringArrayInput
	Name                pulumi.StringPtrInput
	ParallelDeployments pulumi.IntPtrInput
	PolicyAssignmentId  pulumi.StringPtrInput
	// Deprecated: `policy_definition_id` will be removed in version 4.0 of the AzureRM Provider in favour of `policy_definition_reference_id`.
	PolicyDefinitionId          pulumi.StringPtrInput
	PolicyDefinitionReferenceId pulumi.StringPtrInput
	ResourceCount               pulumi.IntPtrInput
	ResourceDiscoveryMode       pulumi.StringPtrInput
	SubscriptionId              pulumi.StringPtrInput
}

func (SubscriptionPolicyRemediationState) ElementType() reflect.Type {
	return reflect.TypeOf((*subscriptionPolicyRemediationState)(nil)).Elem()
}

type subscriptionPolicyRemediationArgs struct {
	FailurePercentage   *float64 `pulumi:"failurePercentage"`
	LocationFilters     []string `pulumi:"locationFilters"`
	Name                *string  `pulumi:"name"`
	ParallelDeployments *int     `pulumi:"parallelDeployments"`
	PolicyAssignmentId  string   `pulumi:"policyAssignmentId"`
	// Deprecated: `policy_definition_id` will be removed in version 4.0 of the AzureRM Provider in favour of `policy_definition_reference_id`.
	PolicyDefinitionId          *string `pulumi:"policyDefinitionId"`
	PolicyDefinitionReferenceId *string `pulumi:"policyDefinitionReferenceId"`
	ResourceCount               *int    `pulumi:"resourceCount"`
	ResourceDiscoveryMode       *string `pulumi:"resourceDiscoveryMode"`
	SubscriptionId              string  `pulumi:"subscriptionId"`
}

// The set of arguments for constructing a SubscriptionPolicyRemediation resource.
type SubscriptionPolicyRemediationArgs struct {
	FailurePercentage   pulumi.Float64PtrInput
	LocationFilters     pulumi.StringArrayInput
	Name                pulumi.StringPtrInput
	ParallelDeployments pulumi.IntPtrInput
	PolicyAssignmentId  pulumi.StringInput
	// Deprecated: `policy_definition_id` will be removed in version 4.0 of the AzureRM Provider in favour of `policy_definition_reference_id`.
	PolicyDefinitionId          pulumi.StringPtrInput
	PolicyDefinitionReferenceId pulumi.StringPtrInput
	ResourceCount               pulumi.IntPtrInput
	ResourceDiscoveryMode       pulumi.StringPtrInput
	SubscriptionId              pulumi.StringInput
}

func (SubscriptionPolicyRemediationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*subscriptionPolicyRemediationArgs)(nil)).Elem()
}

type SubscriptionPolicyRemediationInput interface {
	pulumi.Input

	ToSubscriptionPolicyRemediationOutput() SubscriptionPolicyRemediationOutput
	ToSubscriptionPolicyRemediationOutputWithContext(ctx context.Context) SubscriptionPolicyRemediationOutput
}

func (*SubscriptionPolicyRemediation) ElementType() reflect.Type {
	return reflect.TypeOf((**SubscriptionPolicyRemediation)(nil)).Elem()
}

func (i *SubscriptionPolicyRemediation) ToSubscriptionPolicyRemediationOutput() SubscriptionPolicyRemediationOutput {
	return i.ToSubscriptionPolicyRemediationOutputWithContext(context.Background())
}

func (i *SubscriptionPolicyRemediation) ToSubscriptionPolicyRemediationOutputWithContext(ctx context.Context) SubscriptionPolicyRemediationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriptionPolicyRemediationOutput)
}

// SubscriptionPolicyRemediationArrayInput is an input type that accepts SubscriptionPolicyRemediationArray and SubscriptionPolicyRemediationArrayOutput values.
// You can construct a concrete instance of `SubscriptionPolicyRemediationArrayInput` via:
//
//	SubscriptionPolicyRemediationArray{ SubscriptionPolicyRemediationArgs{...} }
type SubscriptionPolicyRemediationArrayInput interface {
	pulumi.Input

	ToSubscriptionPolicyRemediationArrayOutput() SubscriptionPolicyRemediationArrayOutput
	ToSubscriptionPolicyRemediationArrayOutputWithContext(context.Context) SubscriptionPolicyRemediationArrayOutput
}

type SubscriptionPolicyRemediationArray []SubscriptionPolicyRemediationInput

func (SubscriptionPolicyRemediationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SubscriptionPolicyRemediation)(nil)).Elem()
}

func (i SubscriptionPolicyRemediationArray) ToSubscriptionPolicyRemediationArrayOutput() SubscriptionPolicyRemediationArrayOutput {
	return i.ToSubscriptionPolicyRemediationArrayOutputWithContext(context.Background())
}

func (i SubscriptionPolicyRemediationArray) ToSubscriptionPolicyRemediationArrayOutputWithContext(ctx context.Context) SubscriptionPolicyRemediationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriptionPolicyRemediationArrayOutput)
}

// SubscriptionPolicyRemediationMapInput is an input type that accepts SubscriptionPolicyRemediationMap and SubscriptionPolicyRemediationMapOutput values.
// You can construct a concrete instance of `SubscriptionPolicyRemediationMapInput` via:
//
//	SubscriptionPolicyRemediationMap{ "key": SubscriptionPolicyRemediationArgs{...} }
type SubscriptionPolicyRemediationMapInput interface {
	pulumi.Input

	ToSubscriptionPolicyRemediationMapOutput() SubscriptionPolicyRemediationMapOutput
	ToSubscriptionPolicyRemediationMapOutputWithContext(context.Context) SubscriptionPolicyRemediationMapOutput
}

type SubscriptionPolicyRemediationMap map[string]SubscriptionPolicyRemediationInput

func (SubscriptionPolicyRemediationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SubscriptionPolicyRemediation)(nil)).Elem()
}

func (i SubscriptionPolicyRemediationMap) ToSubscriptionPolicyRemediationMapOutput() SubscriptionPolicyRemediationMapOutput {
	return i.ToSubscriptionPolicyRemediationMapOutputWithContext(context.Background())
}

func (i SubscriptionPolicyRemediationMap) ToSubscriptionPolicyRemediationMapOutputWithContext(ctx context.Context) SubscriptionPolicyRemediationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriptionPolicyRemediationMapOutput)
}

type SubscriptionPolicyRemediationOutput struct{ *pulumi.OutputState }

func (SubscriptionPolicyRemediationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SubscriptionPolicyRemediation)(nil)).Elem()
}

func (o SubscriptionPolicyRemediationOutput) ToSubscriptionPolicyRemediationOutput() SubscriptionPolicyRemediationOutput {
	return o
}

func (o SubscriptionPolicyRemediationOutput) ToSubscriptionPolicyRemediationOutputWithContext(ctx context.Context) SubscriptionPolicyRemediationOutput {
	return o
}

func (o SubscriptionPolicyRemediationOutput) FailurePercentage() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *SubscriptionPolicyRemediation) pulumi.Float64PtrOutput { return v.FailurePercentage }).(pulumi.Float64PtrOutput)
}

func (o SubscriptionPolicyRemediationOutput) LocationFilters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SubscriptionPolicyRemediation) pulumi.StringArrayOutput { return v.LocationFilters }).(pulumi.StringArrayOutput)
}

func (o SubscriptionPolicyRemediationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *SubscriptionPolicyRemediation) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o SubscriptionPolicyRemediationOutput) ParallelDeployments() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SubscriptionPolicyRemediation) pulumi.IntPtrOutput { return v.ParallelDeployments }).(pulumi.IntPtrOutput)
}

func (o SubscriptionPolicyRemediationOutput) PolicyAssignmentId() pulumi.StringOutput {
	return o.ApplyT(func(v *SubscriptionPolicyRemediation) pulumi.StringOutput { return v.PolicyAssignmentId }).(pulumi.StringOutput)
}

// Deprecated: `policy_definition_id` will be removed in version 4.0 of the AzureRM Provider in favour of `policy_definition_reference_id`.
func (o SubscriptionPolicyRemediationOutput) PolicyDefinitionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubscriptionPolicyRemediation) pulumi.StringPtrOutput { return v.PolicyDefinitionId }).(pulumi.StringPtrOutput)
}

func (o SubscriptionPolicyRemediationOutput) PolicyDefinitionReferenceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubscriptionPolicyRemediation) pulumi.StringPtrOutput { return v.PolicyDefinitionReferenceId }).(pulumi.StringPtrOutput)
}

func (o SubscriptionPolicyRemediationOutput) ResourceCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SubscriptionPolicyRemediation) pulumi.IntPtrOutput { return v.ResourceCount }).(pulumi.IntPtrOutput)
}

func (o SubscriptionPolicyRemediationOutput) ResourceDiscoveryMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubscriptionPolicyRemediation) pulumi.StringPtrOutput { return v.ResourceDiscoveryMode }).(pulumi.StringPtrOutput)
}

func (o SubscriptionPolicyRemediationOutput) SubscriptionId() pulumi.StringOutput {
	return o.ApplyT(func(v *SubscriptionPolicyRemediation) pulumi.StringOutput { return v.SubscriptionId }).(pulumi.StringOutput)
}

type SubscriptionPolicyRemediationArrayOutput struct{ *pulumi.OutputState }

func (SubscriptionPolicyRemediationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SubscriptionPolicyRemediation)(nil)).Elem()
}

func (o SubscriptionPolicyRemediationArrayOutput) ToSubscriptionPolicyRemediationArrayOutput() SubscriptionPolicyRemediationArrayOutput {
	return o
}

func (o SubscriptionPolicyRemediationArrayOutput) ToSubscriptionPolicyRemediationArrayOutputWithContext(ctx context.Context) SubscriptionPolicyRemediationArrayOutput {
	return o
}

func (o SubscriptionPolicyRemediationArrayOutput) Index(i pulumi.IntInput) SubscriptionPolicyRemediationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SubscriptionPolicyRemediation {
		return vs[0].([]*SubscriptionPolicyRemediation)[vs[1].(int)]
	}).(SubscriptionPolicyRemediationOutput)
}

type SubscriptionPolicyRemediationMapOutput struct{ *pulumi.OutputState }

func (SubscriptionPolicyRemediationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SubscriptionPolicyRemediation)(nil)).Elem()
}

func (o SubscriptionPolicyRemediationMapOutput) ToSubscriptionPolicyRemediationMapOutput() SubscriptionPolicyRemediationMapOutput {
	return o
}

func (o SubscriptionPolicyRemediationMapOutput) ToSubscriptionPolicyRemediationMapOutputWithContext(ctx context.Context) SubscriptionPolicyRemediationMapOutput {
	return o
}

func (o SubscriptionPolicyRemediationMapOutput) MapIndex(k pulumi.StringInput) SubscriptionPolicyRemediationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SubscriptionPolicyRemediation {
		return vs[0].(map[string]*SubscriptionPolicyRemediation)[vs[1].(string)]
	}).(SubscriptionPolicyRemediationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SubscriptionPolicyRemediationInput)(nil)).Elem(), &SubscriptionPolicyRemediation{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubscriptionPolicyRemediationArrayInput)(nil)).Elem(), SubscriptionPolicyRemediationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubscriptionPolicyRemediationMapInput)(nil)).Elem(), SubscriptionPolicyRemediationMap{})
	pulumi.RegisterOutputType(SubscriptionPolicyRemediationOutput{})
	pulumi.RegisterOutputType(SubscriptionPolicyRemediationArrayOutput{})
	pulumi.RegisterOutputType(SubscriptionPolicyRemediationMapOutput{})
}
