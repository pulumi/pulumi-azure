// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package core

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type CustomProviderAction struct {
	// Specifies the endpoint of the action.
	Endpoint string `pulumi:"endpoint"`
	// Specifies the name of the action.
	Name string `pulumi:"name"`
}

// CustomProviderActionInput is an input type that accepts CustomProviderActionArgs and CustomProviderActionOutput values.
// You can construct a concrete instance of `CustomProviderActionInput` via:
//
//	CustomProviderActionArgs{...}
type CustomProviderActionInput interface {
	pulumi.Input

	ToCustomProviderActionOutput() CustomProviderActionOutput
	ToCustomProviderActionOutputWithContext(context.Context) CustomProviderActionOutput
}

type CustomProviderActionArgs struct {
	// Specifies the endpoint of the action.
	Endpoint pulumi.StringInput `pulumi:"endpoint"`
	// Specifies the name of the action.
	Name pulumi.StringInput `pulumi:"name"`
}

func (CustomProviderActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomProviderAction)(nil)).Elem()
}

func (i CustomProviderActionArgs) ToCustomProviderActionOutput() CustomProviderActionOutput {
	return i.ToCustomProviderActionOutputWithContext(context.Background())
}

func (i CustomProviderActionArgs) ToCustomProviderActionOutputWithContext(ctx context.Context) CustomProviderActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomProviderActionOutput)
}

// CustomProviderActionArrayInput is an input type that accepts CustomProviderActionArray and CustomProviderActionArrayOutput values.
// You can construct a concrete instance of `CustomProviderActionArrayInput` via:
//
//	CustomProviderActionArray{ CustomProviderActionArgs{...} }
type CustomProviderActionArrayInput interface {
	pulumi.Input

	ToCustomProviderActionArrayOutput() CustomProviderActionArrayOutput
	ToCustomProviderActionArrayOutputWithContext(context.Context) CustomProviderActionArrayOutput
}

type CustomProviderActionArray []CustomProviderActionInput

func (CustomProviderActionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CustomProviderAction)(nil)).Elem()
}

func (i CustomProviderActionArray) ToCustomProviderActionArrayOutput() CustomProviderActionArrayOutput {
	return i.ToCustomProviderActionArrayOutputWithContext(context.Background())
}

func (i CustomProviderActionArray) ToCustomProviderActionArrayOutputWithContext(ctx context.Context) CustomProviderActionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomProviderActionArrayOutput)
}

type CustomProviderActionOutput struct{ *pulumi.OutputState }

func (CustomProviderActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomProviderAction)(nil)).Elem()
}

func (o CustomProviderActionOutput) ToCustomProviderActionOutput() CustomProviderActionOutput {
	return o
}

func (o CustomProviderActionOutput) ToCustomProviderActionOutputWithContext(ctx context.Context) CustomProviderActionOutput {
	return o
}

// Specifies the endpoint of the action.
func (o CustomProviderActionOutput) Endpoint() pulumi.StringOutput {
	return o.ApplyT(func(v CustomProviderAction) string { return v.Endpoint }).(pulumi.StringOutput)
}

// Specifies the name of the action.
func (o CustomProviderActionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v CustomProviderAction) string { return v.Name }).(pulumi.StringOutput)
}

type CustomProviderActionArrayOutput struct{ *pulumi.OutputState }

func (CustomProviderActionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CustomProviderAction)(nil)).Elem()
}

func (o CustomProviderActionArrayOutput) ToCustomProviderActionArrayOutput() CustomProviderActionArrayOutput {
	return o
}

func (o CustomProviderActionArrayOutput) ToCustomProviderActionArrayOutputWithContext(ctx context.Context) CustomProviderActionArrayOutput {
	return o
}

func (o CustomProviderActionArrayOutput) Index(i pulumi.IntInput) CustomProviderActionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CustomProviderAction {
		return vs[0].([]CustomProviderAction)[vs[1].(int)]
	}).(CustomProviderActionOutput)
}

type CustomProviderResourceType struct {
	// Specifies the endpoint of the route definition.
	Endpoint string `pulumi:"endpoint"`
	// Specifies the name of the route definition.
	Name string `pulumi:"name"`
	// The routing type that is supported for the resource request. Valid values are `Proxy` and `Proxy,Cache`. Defaults to `Proxy`.
	RoutingType *string `pulumi:"routingType"`
}

// CustomProviderResourceTypeInput is an input type that accepts CustomProviderResourceTypeArgs and CustomProviderResourceTypeOutput values.
// You can construct a concrete instance of `CustomProviderResourceTypeInput` via:
//
//	CustomProviderResourceTypeArgs{...}
type CustomProviderResourceTypeInput interface {
	pulumi.Input

	ToCustomProviderResourceTypeOutput() CustomProviderResourceTypeOutput
	ToCustomProviderResourceTypeOutputWithContext(context.Context) CustomProviderResourceTypeOutput
}

type CustomProviderResourceTypeArgs struct {
	// Specifies the endpoint of the route definition.
	Endpoint pulumi.StringInput `pulumi:"endpoint"`
	// Specifies the name of the route definition.
	Name pulumi.StringInput `pulumi:"name"`
	// The routing type that is supported for the resource request. Valid values are `Proxy` and `Proxy,Cache`. Defaults to `Proxy`.
	RoutingType pulumi.StringPtrInput `pulumi:"routingType"`
}

func (CustomProviderResourceTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomProviderResourceType)(nil)).Elem()
}

func (i CustomProviderResourceTypeArgs) ToCustomProviderResourceTypeOutput() CustomProviderResourceTypeOutput {
	return i.ToCustomProviderResourceTypeOutputWithContext(context.Background())
}

func (i CustomProviderResourceTypeArgs) ToCustomProviderResourceTypeOutputWithContext(ctx context.Context) CustomProviderResourceTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomProviderResourceTypeOutput)
}

// CustomProviderResourceTypeArrayInput is an input type that accepts CustomProviderResourceTypeArray and CustomProviderResourceTypeArrayOutput values.
// You can construct a concrete instance of `CustomProviderResourceTypeArrayInput` via:
//
//	CustomProviderResourceTypeArray{ CustomProviderResourceTypeArgs{...} }
type CustomProviderResourceTypeArrayInput interface {
	pulumi.Input

	ToCustomProviderResourceTypeArrayOutput() CustomProviderResourceTypeArrayOutput
	ToCustomProviderResourceTypeArrayOutputWithContext(context.Context) CustomProviderResourceTypeArrayOutput
}

type CustomProviderResourceTypeArray []CustomProviderResourceTypeInput

func (CustomProviderResourceTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CustomProviderResourceType)(nil)).Elem()
}

func (i CustomProviderResourceTypeArray) ToCustomProviderResourceTypeArrayOutput() CustomProviderResourceTypeArrayOutput {
	return i.ToCustomProviderResourceTypeArrayOutputWithContext(context.Background())
}

func (i CustomProviderResourceTypeArray) ToCustomProviderResourceTypeArrayOutputWithContext(ctx context.Context) CustomProviderResourceTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomProviderResourceTypeArrayOutput)
}

type CustomProviderResourceTypeOutput struct{ *pulumi.OutputState }

func (CustomProviderResourceTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomProviderResourceType)(nil)).Elem()
}

func (o CustomProviderResourceTypeOutput) ToCustomProviderResourceTypeOutput() CustomProviderResourceTypeOutput {
	return o
}

func (o CustomProviderResourceTypeOutput) ToCustomProviderResourceTypeOutputWithContext(ctx context.Context) CustomProviderResourceTypeOutput {
	return o
}

// Specifies the endpoint of the route definition.
func (o CustomProviderResourceTypeOutput) Endpoint() pulumi.StringOutput {
	return o.ApplyT(func(v CustomProviderResourceType) string { return v.Endpoint }).(pulumi.StringOutput)
}

// Specifies the name of the route definition.
func (o CustomProviderResourceTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v CustomProviderResourceType) string { return v.Name }).(pulumi.StringOutput)
}

// The routing type that is supported for the resource request. Valid values are `Proxy` and `Proxy,Cache`. Defaults to `Proxy`.
func (o CustomProviderResourceTypeOutput) RoutingType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomProviderResourceType) *string { return v.RoutingType }).(pulumi.StringPtrOutput)
}

type CustomProviderResourceTypeArrayOutput struct{ *pulumi.OutputState }

func (CustomProviderResourceTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CustomProviderResourceType)(nil)).Elem()
}

func (o CustomProviderResourceTypeArrayOutput) ToCustomProviderResourceTypeArrayOutput() CustomProviderResourceTypeArrayOutput {
	return o
}

func (o CustomProviderResourceTypeArrayOutput) ToCustomProviderResourceTypeArrayOutputWithContext(ctx context.Context) CustomProviderResourceTypeArrayOutput {
	return o
}

func (o CustomProviderResourceTypeArrayOutput) Index(i pulumi.IntInput) CustomProviderResourceTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CustomProviderResourceType {
		return vs[0].([]CustomProviderResourceType)[vs[1].(int)]
	}).(CustomProviderResourceTypeOutput)
}

type CustomProviderValidation struct {
	// The endpoint where the validation specification is located.
	Specification string `pulumi:"specification"`
}

// CustomProviderValidationInput is an input type that accepts CustomProviderValidationArgs and CustomProviderValidationOutput values.
// You can construct a concrete instance of `CustomProviderValidationInput` via:
//
//	CustomProviderValidationArgs{...}
type CustomProviderValidationInput interface {
	pulumi.Input

	ToCustomProviderValidationOutput() CustomProviderValidationOutput
	ToCustomProviderValidationOutputWithContext(context.Context) CustomProviderValidationOutput
}

type CustomProviderValidationArgs struct {
	// The endpoint where the validation specification is located.
	Specification pulumi.StringInput `pulumi:"specification"`
}

func (CustomProviderValidationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomProviderValidation)(nil)).Elem()
}

func (i CustomProviderValidationArgs) ToCustomProviderValidationOutput() CustomProviderValidationOutput {
	return i.ToCustomProviderValidationOutputWithContext(context.Background())
}

func (i CustomProviderValidationArgs) ToCustomProviderValidationOutputWithContext(ctx context.Context) CustomProviderValidationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomProviderValidationOutput)
}

// CustomProviderValidationArrayInput is an input type that accepts CustomProviderValidationArray and CustomProviderValidationArrayOutput values.
// You can construct a concrete instance of `CustomProviderValidationArrayInput` via:
//
//	CustomProviderValidationArray{ CustomProviderValidationArgs{...} }
type CustomProviderValidationArrayInput interface {
	pulumi.Input

	ToCustomProviderValidationArrayOutput() CustomProviderValidationArrayOutput
	ToCustomProviderValidationArrayOutputWithContext(context.Context) CustomProviderValidationArrayOutput
}

type CustomProviderValidationArray []CustomProviderValidationInput

func (CustomProviderValidationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CustomProviderValidation)(nil)).Elem()
}

func (i CustomProviderValidationArray) ToCustomProviderValidationArrayOutput() CustomProviderValidationArrayOutput {
	return i.ToCustomProviderValidationArrayOutputWithContext(context.Background())
}

func (i CustomProviderValidationArray) ToCustomProviderValidationArrayOutputWithContext(ctx context.Context) CustomProviderValidationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomProviderValidationArrayOutput)
}

type CustomProviderValidationOutput struct{ *pulumi.OutputState }

func (CustomProviderValidationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomProviderValidation)(nil)).Elem()
}

func (o CustomProviderValidationOutput) ToCustomProviderValidationOutput() CustomProviderValidationOutput {
	return o
}

func (o CustomProviderValidationOutput) ToCustomProviderValidationOutputWithContext(ctx context.Context) CustomProviderValidationOutput {
	return o
}

// The endpoint where the validation specification is located.
func (o CustomProviderValidationOutput) Specification() pulumi.StringOutput {
	return o.ApplyT(func(v CustomProviderValidation) string { return v.Specification }).(pulumi.StringOutput)
}

type CustomProviderValidationArrayOutput struct{ *pulumi.OutputState }

func (CustomProviderValidationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CustomProviderValidation)(nil)).Elem()
}

func (o CustomProviderValidationArrayOutput) ToCustomProviderValidationArrayOutput() CustomProviderValidationArrayOutput {
	return o
}

func (o CustomProviderValidationArrayOutput) ToCustomProviderValidationArrayOutputWithContext(ctx context.Context) CustomProviderValidationArrayOutput {
	return o
}

func (o CustomProviderValidationArrayOutput) Index(i pulumi.IntInput) CustomProviderValidationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CustomProviderValidation {
		return vs[0].([]CustomProviderValidation)[vs[1].(int)]
	}).(CustomProviderValidationOutput)
}

type ResourceDeploymentScriptAzureCliContainer struct {
	// Container group name, if not specified then the name will get auto-generated. For more information, please refer to the [Container Configuration](https://learn.microsoft.com/en-us/rest/api/resources/deployment-scripts/create?tabs=HTTP#containerconfiguration) documentation.
	ContainerGroupName *string `pulumi:"containerGroupName"`
}

// ResourceDeploymentScriptAzureCliContainerInput is an input type that accepts ResourceDeploymentScriptAzureCliContainerArgs and ResourceDeploymentScriptAzureCliContainerOutput values.
// You can construct a concrete instance of `ResourceDeploymentScriptAzureCliContainerInput` via:
//
//	ResourceDeploymentScriptAzureCliContainerArgs{...}
type ResourceDeploymentScriptAzureCliContainerInput interface {
	pulumi.Input

	ToResourceDeploymentScriptAzureCliContainerOutput() ResourceDeploymentScriptAzureCliContainerOutput
	ToResourceDeploymentScriptAzureCliContainerOutputWithContext(context.Context) ResourceDeploymentScriptAzureCliContainerOutput
}

type ResourceDeploymentScriptAzureCliContainerArgs struct {
	// Container group name, if not specified then the name will get auto-generated. For more information, please refer to the [Container Configuration](https://learn.microsoft.com/en-us/rest/api/resources/deployment-scripts/create?tabs=HTTP#containerconfiguration) documentation.
	ContainerGroupName pulumi.StringPtrInput `pulumi:"containerGroupName"`
}

func (ResourceDeploymentScriptAzureCliContainerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceDeploymentScriptAzureCliContainer)(nil)).Elem()
}

func (i ResourceDeploymentScriptAzureCliContainerArgs) ToResourceDeploymentScriptAzureCliContainerOutput() ResourceDeploymentScriptAzureCliContainerOutput {
	return i.ToResourceDeploymentScriptAzureCliContainerOutputWithContext(context.Background())
}

func (i ResourceDeploymentScriptAzureCliContainerArgs) ToResourceDeploymentScriptAzureCliContainerOutputWithContext(ctx context.Context) ResourceDeploymentScriptAzureCliContainerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceDeploymentScriptAzureCliContainerOutput)
}

func (i ResourceDeploymentScriptAzureCliContainerArgs) ToResourceDeploymentScriptAzureCliContainerPtrOutput() ResourceDeploymentScriptAzureCliContainerPtrOutput {
	return i.ToResourceDeploymentScriptAzureCliContainerPtrOutputWithContext(context.Background())
}

func (i ResourceDeploymentScriptAzureCliContainerArgs) ToResourceDeploymentScriptAzureCliContainerPtrOutputWithContext(ctx context.Context) ResourceDeploymentScriptAzureCliContainerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceDeploymentScriptAzureCliContainerOutput).ToResourceDeploymentScriptAzureCliContainerPtrOutputWithContext(ctx)
}

// ResourceDeploymentScriptAzureCliContainerPtrInput is an input type that accepts ResourceDeploymentScriptAzureCliContainerArgs, ResourceDeploymentScriptAzureCliContainerPtr and ResourceDeploymentScriptAzureCliContainerPtrOutput values.
// You can construct a concrete instance of `ResourceDeploymentScriptAzureCliContainerPtrInput` via:
//
//	        ResourceDeploymentScriptAzureCliContainerArgs{...}
//
//	or:
//
//	        nil
type ResourceDeploymentScriptAzureCliContainerPtrInput interface {
	pulumi.Input

	ToResourceDeploymentScriptAzureCliContainerPtrOutput() ResourceDeploymentScriptAzureCliContainerPtrOutput
	ToResourceDeploymentScriptAzureCliContainerPtrOutputWithContext(context.Context) ResourceDeploymentScriptAzureCliContainerPtrOutput
}

type resourceDeploymentScriptAzureCliContainerPtrType ResourceDeploymentScriptAzureCliContainerArgs

func ResourceDeploymentScriptAzureCliContainerPtr(v *ResourceDeploymentScriptAzureCliContainerArgs) ResourceDeploymentScriptAzureCliContainerPtrInput {
	return (*resourceDeploymentScriptAzureCliContainerPtrType)(v)
}

func (*resourceDeploymentScriptAzureCliContainerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceDeploymentScriptAzureCliContainer)(nil)).Elem()
}

func (i *resourceDeploymentScriptAzureCliContainerPtrType) ToResourceDeploymentScriptAzureCliContainerPtrOutput() ResourceDeploymentScriptAzureCliContainerPtrOutput {
	return i.ToResourceDeploymentScriptAzureCliContainerPtrOutputWithContext(context.Background())
}

func (i *resourceDeploymentScriptAzureCliContainerPtrType) ToResourceDeploymentScriptAzureCliContainerPtrOutputWithContext(ctx context.Context) ResourceDeploymentScriptAzureCliContainerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceDeploymentScriptAzureCliContainerPtrOutput)
}

type ResourceDeploymentScriptAzureCliContainerOutput struct{ *pulumi.OutputState }

func (ResourceDeploymentScriptAzureCliContainerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceDeploymentScriptAzureCliContainer)(nil)).Elem()
}

func (o ResourceDeploymentScriptAzureCliContainerOutput) ToResourceDeploymentScriptAzureCliContainerOutput() ResourceDeploymentScriptAzureCliContainerOutput {
	return o
}

func (o ResourceDeploymentScriptAzureCliContainerOutput) ToResourceDeploymentScriptAzureCliContainerOutputWithContext(ctx context.Context) ResourceDeploymentScriptAzureCliContainerOutput {
	return o
}

func (o ResourceDeploymentScriptAzureCliContainerOutput) ToResourceDeploymentScriptAzureCliContainerPtrOutput() ResourceDeploymentScriptAzureCliContainerPtrOutput {
	return o.ToResourceDeploymentScriptAzureCliContainerPtrOutputWithContext(context.Background())
}

func (o ResourceDeploymentScriptAzureCliContainerOutput) ToResourceDeploymentScriptAzureCliContainerPtrOutputWithContext(ctx context.Context) ResourceDeploymentScriptAzureCliContainerPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ResourceDeploymentScriptAzureCliContainer) *ResourceDeploymentScriptAzureCliContainer {
		return &v
	}).(ResourceDeploymentScriptAzureCliContainerPtrOutput)
}

// Container group name, if not specified then the name will get auto-generated. For more information, please refer to the [Container Configuration](https://learn.microsoft.com/en-us/rest/api/resources/deployment-scripts/create?tabs=HTTP#containerconfiguration) documentation.
func (o ResourceDeploymentScriptAzureCliContainerOutput) ContainerGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceDeploymentScriptAzureCliContainer) *string { return v.ContainerGroupName }).(pulumi.StringPtrOutput)
}

type ResourceDeploymentScriptAzureCliContainerPtrOutput struct{ *pulumi.OutputState }

func (ResourceDeploymentScriptAzureCliContainerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceDeploymentScriptAzureCliContainer)(nil)).Elem()
}

func (o ResourceDeploymentScriptAzureCliContainerPtrOutput) ToResourceDeploymentScriptAzureCliContainerPtrOutput() ResourceDeploymentScriptAzureCliContainerPtrOutput {
	return o
}

func (o ResourceDeploymentScriptAzureCliContainerPtrOutput) ToResourceDeploymentScriptAzureCliContainerPtrOutputWithContext(ctx context.Context) ResourceDeploymentScriptAzureCliContainerPtrOutput {
	return o
}

func (o ResourceDeploymentScriptAzureCliContainerPtrOutput) Elem() ResourceDeploymentScriptAzureCliContainerOutput {
	return o.ApplyT(func(v *ResourceDeploymentScriptAzureCliContainer) ResourceDeploymentScriptAzureCliContainer {
		if v != nil {
			return *v
		}
		var ret ResourceDeploymentScriptAzureCliContainer
		return ret
	}).(ResourceDeploymentScriptAzureCliContainerOutput)
}

// Container group name, if not specified then the name will get auto-generated. For more information, please refer to the [Container Configuration](https://learn.microsoft.com/en-us/rest/api/resources/deployment-scripts/create?tabs=HTTP#containerconfiguration) documentation.
func (o ResourceDeploymentScriptAzureCliContainerPtrOutput) ContainerGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceDeploymentScriptAzureCliContainer) *string {
		if v == nil {
			return nil
		}
		return v.ContainerGroupName
	}).(pulumi.StringPtrOutput)
}

type ResourceDeploymentScriptAzureCliEnvironmentVariable struct {
	// Specifies the name of the environment variable.
	Name string `pulumi:"name"`
	// Specifies the value of the secure environment variable.
	SecureValue *string `pulumi:"secureValue"`
	// Specifies the value of the environment variable.
	Value *string `pulumi:"value"`
}

// ResourceDeploymentScriptAzureCliEnvironmentVariableInput is an input type that accepts ResourceDeploymentScriptAzureCliEnvironmentVariableArgs and ResourceDeploymentScriptAzureCliEnvironmentVariableOutput values.
// You can construct a concrete instance of `ResourceDeploymentScriptAzureCliEnvironmentVariableInput` via:
//
//	ResourceDeploymentScriptAzureCliEnvironmentVariableArgs{...}
type ResourceDeploymentScriptAzureCliEnvironmentVariableInput interface {
	pulumi.Input

	ToResourceDeploymentScriptAzureCliEnvironmentVariableOutput() ResourceDeploymentScriptAzureCliEnvironmentVariableOutput
	ToResourceDeploymentScriptAzureCliEnvironmentVariableOutputWithContext(context.Context) ResourceDeploymentScriptAzureCliEnvironmentVariableOutput
}

type ResourceDeploymentScriptAzureCliEnvironmentVariableArgs struct {
	// Specifies the name of the environment variable.
	Name pulumi.StringInput `pulumi:"name"`
	// Specifies the value of the secure environment variable.
	SecureValue pulumi.StringPtrInput `pulumi:"secureValue"`
	// Specifies the value of the environment variable.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (ResourceDeploymentScriptAzureCliEnvironmentVariableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceDeploymentScriptAzureCliEnvironmentVariable)(nil)).Elem()
}

func (i ResourceDeploymentScriptAzureCliEnvironmentVariableArgs) ToResourceDeploymentScriptAzureCliEnvironmentVariableOutput() ResourceDeploymentScriptAzureCliEnvironmentVariableOutput {
	return i.ToResourceDeploymentScriptAzureCliEnvironmentVariableOutputWithContext(context.Background())
}

func (i ResourceDeploymentScriptAzureCliEnvironmentVariableArgs) ToResourceDeploymentScriptAzureCliEnvironmentVariableOutputWithContext(ctx context.Context) ResourceDeploymentScriptAzureCliEnvironmentVariableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceDeploymentScriptAzureCliEnvironmentVariableOutput)
}

// ResourceDeploymentScriptAzureCliEnvironmentVariableArrayInput is an input type that accepts ResourceDeploymentScriptAzureCliEnvironmentVariableArray and ResourceDeploymentScriptAzureCliEnvironmentVariableArrayOutput values.
// You can construct a concrete instance of `ResourceDeploymentScriptAzureCliEnvironmentVariableArrayInput` via:
//
//	ResourceDeploymentScriptAzureCliEnvironmentVariableArray{ ResourceDeploymentScriptAzureCliEnvironmentVariableArgs{...} }
type ResourceDeploymentScriptAzureCliEnvironmentVariableArrayInput interface {
	pulumi.Input

	ToResourceDeploymentScriptAzureCliEnvironmentVariableArrayOutput() ResourceDeploymentScriptAzureCliEnvironmentVariableArrayOutput
	ToResourceDeploymentScriptAzureCliEnvironmentVariableArrayOutputWithContext(context.Context) ResourceDeploymentScriptAzureCliEnvironmentVariableArrayOutput
}

type ResourceDeploymentScriptAzureCliEnvironmentVariableArray []ResourceDeploymentScriptAzureCliEnvironmentVariableInput

func (ResourceDeploymentScriptAzureCliEnvironmentVariableArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResourceDeploymentScriptAzureCliEnvironmentVariable)(nil)).Elem()
}

func (i ResourceDeploymentScriptAzureCliEnvironmentVariableArray) ToResourceDeploymentScriptAzureCliEnvironmentVariableArrayOutput() ResourceDeploymentScriptAzureCliEnvironmentVariableArrayOutput {
	return i.ToResourceDeploymentScriptAzureCliEnvironmentVariableArrayOutputWithContext(context.Background())
}

func (i ResourceDeploymentScriptAzureCliEnvironmentVariableArray) ToResourceDeploymentScriptAzureCliEnvironmentVariableArrayOutputWithContext(ctx context.Context) ResourceDeploymentScriptAzureCliEnvironmentVariableArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceDeploymentScriptAzureCliEnvironmentVariableArrayOutput)
}

type ResourceDeploymentScriptAzureCliEnvironmentVariableOutput struct{ *pulumi.OutputState }

func (ResourceDeploymentScriptAzureCliEnvironmentVariableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceDeploymentScriptAzureCliEnvironmentVariable)(nil)).Elem()
}

func (o ResourceDeploymentScriptAzureCliEnvironmentVariableOutput) ToResourceDeploymentScriptAzureCliEnvironmentVariableOutput() ResourceDeploymentScriptAzureCliEnvironmentVariableOutput {
	return o
}

func (o ResourceDeploymentScriptAzureCliEnvironmentVariableOutput) ToResourceDeploymentScriptAzureCliEnvironmentVariableOutputWithContext(ctx context.Context) ResourceDeploymentScriptAzureCliEnvironmentVariableOutput {
	return o
}

// Specifies the name of the environment variable.
func (o ResourceDeploymentScriptAzureCliEnvironmentVariableOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceDeploymentScriptAzureCliEnvironmentVariable) string { return v.Name }).(pulumi.StringOutput)
}

// Specifies the value of the secure environment variable.
func (o ResourceDeploymentScriptAzureCliEnvironmentVariableOutput) SecureValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceDeploymentScriptAzureCliEnvironmentVariable) *string { return v.SecureValue }).(pulumi.StringPtrOutput)
}

// Specifies the value of the environment variable.
func (o ResourceDeploymentScriptAzureCliEnvironmentVariableOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceDeploymentScriptAzureCliEnvironmentVariable) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ResourceDeploymentScriptAzureCliEnvironmentVariableArrayOutput struct{ *pulumi.OutputState }

func (ResourceDeploymentScriptAzureCliEnvironmentVariableArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResourceDeploymentScriptAzureCliEnvironmentVariable)(nil)).Elem()
}

func (o ResourceDeploymentScriptAzureCliEnvironmentVariableArrayOutput) ToResourceDeploymentScriptAzureCliEnvironmentVariableArrayOutput() ResourceDeploymentScriptAzureCliEnvironmentVariableArrayOutput {
	return o
}

func (o ResourceDeploymentScriptAzureCliEnvironmentVariableArrayOutput) ToResourceDeploymentScriptAzureCliEnvironmentVariableArrayOutputWithContext(ctx context.Context) ResourceDeploymentScriptAzureCliEnvironmentVariableArrayOutput {
	return o
}

func (o ResourceDeploymentScriptAzureCliEnvironmentVariableArrayOutput) Index(i pulumi.IntInput) ResourceDeploymentScriptAzureCliEnvironmentVariableOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ResourceDeploymentScriptAzureCliEnvironmentVariable {
		return vs[0].([]ResourceDeploymentScriptAzureCliEnvironmentVariable)[vs[1].(int)]
	}).(ResourceDeploymentScriptAzureCliEnvironmentVariableOutput)
}

type ResourceDeploymentScriptAzureCliIdentity struct {
	// Specifies the list of user-assigned managed identity IDs associated with the resource. Changing this forces a new resource to be created.
	IdentityIds []string `pulumi:"identityIds"`
	// Type of the managed identity. The only possible value is `UserAssigned`. Changing this forces a new resource to be created.
	Type string `pulumi:"type"`
}

// ResourceDeploymentScriptAzureCliIdentityInput is an input type that accepts ResourceDeploymentScriptAzureCliIdentityArgs and ResourceDeploymentScriptAzureCliIdentityOutput values.
// You can construct a concrete instance of `ResourceDeploymentScriptAzureCliIdentityInput` via:
//
//	ResourceDeploymentScriptAzureCliIdentityArgs{...}
type ResourceDeploymentScriptAzureCliIdentityInput interface {
	pulumi.Input

	ToResourceDeploymentScriptAzureCliIdentityOutput() ResourceDeploymentScriptAzureCliIdentityOutput
	ToResourceDeploymentScriptAzureCliIdentityOutputWithContext(context.Context) ResourceDeploymentScriptAzureCliIdentityOutput
}

type ResourceDeploymentScriptAzureCliIdentityArgs struct {
	// Specifies the list of user-assigned managed identity IDs associated with the resource. Changing this forces a new resource to be created.
	IdentityIds pulumi.StringArrayInput `pulumi:"identityIds"`
	// Type of the managed identity. The only possible value is `UserAssigned`. Changing this forces a new resource to be created.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ResourceDeploymentScriptAzureCliIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceDeploymentScriptAzureCliIdentity)(nil)).Elem()
}

func (i ResourceDeploymentScriptAzureCliIdentityArgs) ToResourceDeploymentScriptAzureCliIdentityOutput() ResourceDeploymentScriptAzureCliIdentityOutput {
	return i.ToResourceDeploymentScriptAzureCliIdentityOutputWithContext(context.Background())
}

func (i ResourceDeploymentScriptAzureCliIdentityArgs) ToResourceDeploymentScriptAzureCliIdentityOutputWithContext(ctx context.Context) ResourceDeploymentScriptAzureCliIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceDeploymentScriptAzureCliIdentityOutput)
}

func (i ResourceDeploymentScriptAzureCliIdentityArgs) ToResourceDeploymentScriptAzureCliIdentityPtrOutput() ResourceDeploymentScriptAzureCliIdentityPtrOutput {
	return i.ToResourceDeploymentScriptAzureCliIdentityPtrOutputWithContext(context.Background())
}

func (i ResourceDeploymentScriptAzureCliIdentityArgs) ToResourceDeploymentScriptAzureCliIdentityPtrOutputWithContext(ctx context.Context) ResourceDeploymentScriptAzureCliIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceDeploymentScriptAzureCliIdentityOutput).ToResourceDeploymentScriptAzureCliIdentityPtrOutputWithContext(ctx)
}

// ResourceDeploymentScriptAzureCliIdentityPtrInput is an input type that accepts ResourceDeploymentScriptAzureCliIdentityArgs, ResourceDeploymentScriptAzureCliIdentityPtr and ResourceDeploymentScriptAzureCliIdentityPtrOutput values.
// You can construct a concrete instance of `ResourceDeploymentScriptAzureCliIdentityPtrInput` via:
//
//	        ResourceDeploymentScriptAzureCliIdentityArgs{...}
//
//	or:
//
//	        nil
type ResourceDeploymentScriptAzureCliIdentityPtrInput interface {
	pulumi.Input

	ToResourceDeploymentScriptAzureCliIdentityPtrOutput() ResourceDeploymentScriptAzureCliIdentityPtrOutput
	ToResourceDeploymentScriptAzureCliIdentityPtrOutputWithContext(context.Context) ResourceDeploymentScriptAzureCliIdentityPtrOutput
}

type resourceDeploymentScriptAzureCliIdentityPtrType ResourceDeploymentScriptAzureCliIdentityArgs

func ResourceDeploymentScriptAzureCliIdentityPtr(v *ResourceDeploymentScriptAzureCliIdentityArgs) ResourceDeploymentScriptAzureCliIdentityPtrInput {
	return (*resourceDeploymentScriptAzureCliIdentityPtrType)(v)
}

func (*resourceDeploymentScriptAzureCliIdentityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceDeploymentScriptAzureCliIdentity)(nil)).Elem()
}

func (i *resourceDeploymentScriptAzureCliIdentityPtrType) ToResourceDeploymentScriptAzureCliIdentityPtrOutput() ResourceDeploymentScriptAzureCliIdentityPtrOutput {
	return i.ToResourceDeploymentScriptAzureCliIdentityPtrOutputWithContext(context.Background())
}

func (i *resourceDeploymentScriptAzureCliIdentityPtrType) ToResourceDeploymentScriptAzureCliIdentityPtrOutputWithContext(ctx context.Context) ResourceDeploymentScriptAzureCliIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceDeploymentScriptAzureCliIdentityPtrOutput)
}

type ResourceDeploymentScriptAzureCliIdentityOutput struct{ *pulumi.OutputState }

func (ResourceDeploymentScriptAzureCliIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceDeploymentScriptAzureCliIdentity)(nil)).Elem()
}

func (o ResourceDeploymentScriptAzureCliIdentityOutput) ToResourceDeploymentScriptAzureCliIdentityOutput() ResourceDeploymentScriptAzureCliIdentityOutput {
	return o
}

func (o ResourceDeploymentScriptAzureCliIdentityOutput) ToResourceDeploymentScriptAzureCliIdentityOutputWithContext(ctx context.Context) ResourceDeploymentScriptAzureCliIdentityOutput {
	return o
}

func (o ResourceDeploymentScriptAzureCliIdentityOutput) ToResourceDeploymentScriptAzureCliIdentityPtrOutput() ResourceDeploymentScriptAzureCliIdentityPtrOutput {
	return o.ToResourceDeploymentScriptAzureCliIdentityPtrOutputWithContext(context.Background())
}

func (o ResourceDeploymentScriptAzureCliIdentityOutput) ToResourceDeploymentScriptAzureCliIdentityPtrOutputWithContext(ctx context.Context) ResourceDeploymentScriptAzureCliIdentityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ResourceDeploymentScriptAzureCliIdentity) *ResourceDeploymentScriptAzureCliIdentity {
		return &v
	}).(ResourceDeploymentScriptAzureCliIdentityPtrOutput)
}

// Specifies the list of user-assigned managed identity IDs associated with the resource. Changing this forces a new resource to be created.
func (o ResourceDeploymentScriptAzureCliIdentityOutput) IdentityIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ResourceDeploymentScriptAzureCliIdentity) []string { return v.IdentityIds }).(pulumi.StringArrayOutput)
}

// Type of the managed identity. The only possible value is `UserAssigned`. Changing this forces a new resource to be created.
func (o ResourceDeploymentScriptAzureCliIdentityOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceDeploymentScriptAzureCliIdentity) string { return v.Type }).(pulumi.StringOutput)
}

type ResourceDeploymentScriptAzureCliIdentityPtrOutput struct{ *pulumi.OutputState }

func (ResourceDeploymentScriptAzureCliIdentityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceDeploymentScriptAzureCliIdentity)(nil)).Elem()
}

func (o ResourceDeploymentScriptAzureCliIdentityPtrOutput) ToResourceDeploymentScriptAzureCliIdentityPtrOutput() ResourceDeploymentScriptAzureCliIdentityPtrOutput {
	return o
}

func (o ResourceDeploymentScriptAzureCliIdentityPtrOutput) ToResourceDeploymentScriptAzureCliIdentityPtrOutputWithContext(ctx context.Context) ResourceDeploymentScriptAzureCliIdentityPtrOutput {
	return o
}

func (o ResourceDeploymentScriptAzureCliIdentityPtrOutput) Elem() ResourceDeploymentScriptAzureCliIdentityOutput {
	return o.ApplyT(func(v *ResourceDeploymentScriptAzureCliIdentity) ResourceDeploymentScriptAzureCliIdentity {
		if v != nil {
			return *v
		}
		var ret ResourceDeploymentScriptAzureCliIdentity
		return ret
	}).(ResourceDeploymentScriptAzureCliIdentityOutput)
}

// Specifies the list of user-assigned managed identity IDs associated with the resource. Changing this forces a new resource to be created.
func (o ResourceDeploymentScriptAzureCliIdentityPtrOutput) IdentityIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ResourceDeploymentScriptAzureCliIdentity) []string {
		if v == nil {
			return nil
		}
		return v.IdentityIds
	}).(pulumi.StringArrayOutput)
}

// Type of the managed identity. The only possible value is `UserAssigned`. Changing this forces a new resource to be created.
func (o ResourceDeploymentScriptAzureCliIdentityPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceDeploymentScriptAzureCliIdentity) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type ResourceDeploymentScriptAzureCliStorageAccount struct {
	// Specifies the storage account access key.
	Key string `pulumi:"key"`
	// Specifies the storage account name.
	Name string `pulumi:"name"`
}

// ResourceDeploymentScriptAzureCliStorageAccountInput is an input type that accepts ResourceDeploymentScriptAzureCliStorageAccountArgs and ResourceDeploymentScriptAzureCliStorageAccountOutput values.
// You can construct a concrete instance of `ResourceDeploymentScriptAzureCliStorageAccountInput` via:
//
//	ResourceDeploymentScriptAzureCliStorageAccountArgs{...}
type ResourceDeploymentScriptAzureCliStorageAccountInput interface {
	pulumi.Input

	ToResourceDeploymentScriptAzureCliStorageAccountOutput() ResourceDeploymentScriptAzureCliStorageAccountOutput
	ToResourceDeploymentScriptAzureCliStorageAccountOutputWithContext(context.Context) ResourceDeploymentScriptAzureCliStorageAccountOutput
}

type ResourceDeploymentScriptAzureCliStorageAccountArgs struct {
	// Specifies the storage account access key.
	Key pulumi.StringInput `pulumi:"key"`
	// Specifies the storage account name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (ResourceDeploymentScriptAzureCliStorageAccountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceDeploymentScriptAzureCliStorageAccount)(nil)).Elem()
}

func (i ResourceDeploymentScriptAzureCliStorageAccountArgs) ToResourceDeploymentScriptAzureCliStorageAccountOutput() ResourceDeploymentScriptAzureCliStorageAccountOutput {
	return i.ToResourceDeploymentScriptAzureCliStorageAccountOutputWithContext(context.Background())
}

func (i ResourceDeploymentScriptAzureCliStorageAccountArgs) ToResourceDeploymentScriptAzureCliStorageAccountOutputWithContext(ctx context.Context) ResourceDeploymentScriptAzureCliStorageAccountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceDeploymentScriptAzureCliStorageAccountOutput)
}

func (i ResourceDeploymentScriptAzureCliStorageAccountArgs) ToResourceDeploymentScriptAzureCliStorageAccountPtrOutput() ResourceDeploymentScriptAzureCliStorageAccountPtrOutput {
	return i.ToResourceDeploymentScriptAzureCliStorageAccountPtrOutputWithContext(context.Background())
}

func (i ResourceDeploymentScriptAzureCliStorageAccountArgs) ToResourceDeploymentScriptAzureCliStorageAccountPtrOutputWithContext(ctx context.Context) ResourceDeploymentScriptAzureCliStorageAccountPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceDeploymentScriptAzureCliStorageAccountOutput).ToResourceDeploymentScriptAzureCliStorageAccountPtrOutputWithContext(ctx)
}

// ResourceDeploymentScriptAzureCliStorageAccountPtrInput is an input type that accepts ResourceDeploymentScriptAzureCliStorageAccountArgs, ResourceDeploymentScriptAzureCliStorageAccountPtr and ResourceDeploymentScriptAzureCliStorageAccountPtrOutput values.
// You can construct a concrete instance of `ResourceDeploymentScriptAzureCliStorageAccountPtrInput` via:
//
//	        ResourceDeploymentScriptAzureCliStorageAccountArgs{...}
//
//	or:
//
//	        nil
type ResourceDeploymentScriptAzureCliStorageAccountPtrInput interface {
	pulumi.Input

	ToResourceDeploymentScriptAzureCliStorageAccountPtrOutput() ResourceDeploymentScriptAzureCliStorageAccountPtrOutput
	ToResourceDeploymentScriptAzureCliStorageAccountPtrOutputWithContext(context.Context) ResourceDeploymentScriptAzureCliStorageAccountPtrOutput
}

type resourceDeploymentScriptAzureCliStorageAccountPtrType ResourceDeploymentScriptAzureCliStorageAccountArgs

func ResourceDeploymentScriptAzureCliStorageAccountPtr(v *ResourceDeploymentScriptAzureCliStorageAccountArgs) ResourceDeploymentScriptAzureCliStorageAccountPtrInput {
	return (*resourceDeploymentScriptAzureCliStorageAccountPtrType)(v)
}

func (*resourceDeploymentScriptAzureCliStorageAccountPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceDeploymentScriptAzureCliStorageAccount)(nil)).Elem()
}

func (i *resourceDeploymentScriptAzureCliStorageAccountPtrType) ToResourceDeploymentScriptAzureCliStorageAccountPtrOutput() ResourceDeploymentScriptAzureCliStorageAccountPtrOutput {
	return i.ToResourceDeploymentScriptAzureCliStorageAccountPtrOutputWithContext(context.Background())
}

func (i *resourceDeploymentScriptAzureCliStorageAccountPtrType) ToResourceDeploymentScriptAzureCliStorageAccountPtrOutputWithContext(ctx context.Context) ResourceDeploymentScriptAzureCliStorageAccountPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceDeploymentScriptAzureCliStorageAccountPtrOutput)
}

type ResourceDeploymentScriptAzureCliStorageAccountOutput struct{ *pulumi.OutputState }

func (ResourceDeploymentScriptAzureCliStorageAccountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceDeploymentScriptAzureCliStorageAccount)(nil)).Elem()
}

func (o ResourceDeploymentScriptAzureCliStorageAccountOutput) ToResourceDeploymentScriptAzureCliStorageAccountOutput() ResourceDeploymentScriptAzureCliStorageAccountOutput {
	return o
}

func (o ResourceDeploymentScriptAzureCliStorageAccountOutput) ToResourceDeploymentScriptAzureCliStorageAccountOutputWithContext(ctx context.Context) ResourceDeploymentScriptAzureCliStorageAccountOutput {
	return o
}

func (o ResourceDeploymentScriptAzureCliStorageAccountOutput) ToResourceDeploymentScriptAzureCliStorageAccountPtrOutput() ResourceDeploymentScriptAzureCliStorageAccountPtrOutput {
	return o.ToResourceDeploymentScriptAzureCliStorageAccountPtrOutputWithContext(context.Background())
}

func (o ResourceDeploymentScriptAzureCliStorageAccountOutput) ToResourceDeploymentScriptAzureCliStorageAccountPtrOutputWithContext(ctx context.Context) ResourceDeploymentScriptAzureCliStorageAccountPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ResourceDeploymentScriptAzureCliStorageAccount) *ResourceDeploymentScriptAzureCliStorageAccount {
		return &v
	}).(ResourceDeploymentScriptAzureCliStorageAccountPtrOutput)
}

// Specifies the storage account access key.
func (o ResourceDeploymentScriptAzureCliStorageAccountOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceDeploymentScriptAzureCliStorageAccount) string { return v.Key }).(pulumi.StringOutput)
}

// Specifies the storage account name.
func (o ResourceDeploymentScriptAzureCliStorageAccountOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceDeploymentScriptAzureCliStorageAccount) string { return v.Name }).(pulumi.StringOutput)
}

type ResourceDeploymentScriptAzureCliStorageAccountPtrOutput struct{ *pulumi.OutputState }

func (ResourceDeploymentScriptAzureCliStorageAccountPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceDeploymentScriptAzureCliStorageAccount)(nil)).Elem()
}

func (o ResourceDeploymentScriptAzureCliStorageAccountPtrOutput) ToResourceDeploymentScriptAzureCliStorageAccountPtrOutput() ResourceDeploymentScriptAzureCliStorageAccountPtrOutput {
	return o
}

func (o ResourceDeploymentScriptAzureCliStorageAccountPtrOutput) ToResourceDeploymentScriptAzureCliStorageAccountPtrOutputWithContext(ctx context.Context) ResourceDeploymentScriptAzureCliStorageAccountPtrOutput {
	return o
}

func (o ResourceDeploymentScriptAzureCliStorageAccountPtrOutput) Elem() ResourceDeploymentScriptAzureCliStorageAccountOutput {
	return o.ApplyT(func(v *ResourceDeploymentScriptAzureCliStorageAccount) ResourceDeploymentScriptAzureCliStorageAccount {
		if v != nil {
			return *v
		}
		var ret ResourceDeploymentScriptAzureCliStorageAccount
		return ret
	}).(ResourceDeploymentScriptAzureCliStorageAccountOutput)
}

// Specifies the storage account access key.
func (o ResourceDeploymentScriptAzureCliStorageAccountPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceDeploymentScriptAzureCliStorageAccount) *string {
		if v == nil {
			return nil
		}
		return &v.Key
	}).(pulumi.StringPtrOutput)
}

// Specifies the storage account name.
func (o ResourceDeploymentScriptAzureCliStorageAccountPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceDeploymentScriptAzureCliStorageAccount) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

type ResourceDeploymentScriptPowerShellContainer struct {
	// Container group name, if not specified then the name will get auto-generated. For more information, please refer to the [Container Configuration](https://learn.microsoft.com/en-us/rest/api/resources/deployment-scripts/create?tabs=HTTP#containerconfiguration) documentation.
	ContainerGroupName *string `pulumi:"containerGroupName"`
}

// ResourceDeploymentScriptPowerShellContainerInput is an input type that accepts ResourceDeploymentScriptPowerShellContainerArgs and ResourceDeploymentScriptPowerShellContainerOutput values.
// You can construct a concrete instance of `ResourceDeploymentScriptPowerShellContainerInput` via:
//
//	ResourceDeploymentScriptPowerShellContainerArgs{...}
type ResourceDeploymentScriptPowerShellContainerInput interface {
	pulumi.Input

	ToResourceDeploymentScriptPowerShellContainerOutput() ResourceDeploymentScriptPowerShellContainerOutput
	ToResourceDeploymentScriptPowerShellContainerOutputWithContext(context.Context) ResourceDeploymentScriptPowerShellContainerOutput
}

type ResourceDeploymentScriptPowerShellContainerArgs struct {
	// Container group name, if not specified then the name will get auto-generated. For more information, please refer to the [Container Configuration](https://learn.microsoft.com/en-us/rest/api/resources/deployment-scripts/create?tabs=HTTP#containerconfiguration) documentation.
	ContainerGroupName pulumi.StringPtrInput `pulumi:"containerGroupName"`
}

func (ResourceDeploymentScriptPowerShellContainerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceDeploymentScriptPowerShellContainer)(nil)).Elem()
}

func (i ResourceDeploymentScriptPowerShellContainerArgs) ToResourceDeploymentScriptPowerShellContainerOutput() ResourceDeploymentScriptPowerShellContainerOutput {
	return i.ToResourceDeploymentScriptPowerShellContainerOutputWithContext(context.Background())
}

func (i ResourceDeploymentScriptPowerShellContainerArgs) ToResourceDeploymentScriptPowerShellContainerOutputWithContext(ctx context.Context) ResourceDeploymentScriptPowerShellContainerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceDeploymentScriptPowerShellContainerOutput)
}

func (i ResourceDeploymentScriptPowerShellContainerArgs) ToResourceDeploymentScriptPowerShellContainerPtrOutput() ResourceDeploymentScriptPowerShellContainerPtrOutput {
	return i.ToResourceDeploymentScriptPowerShellContainerPtrOutputWithContext(context.Background())
}

func (i ResourceDeploymentScriptPowerShellContainerArgs) ToResourceDeploymentScriptPowerShellContainerPtrOutputWithContext(ctx context.Context) ResourceDeploymentScriptPowerShellContainerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceDeploymentScriptPowerShellContainerOutput).ToResourceDeploymentScriptPowerShellContainerPtrOutputWithContext(ctx)
}

// ResourceDeploymentScriptPowerShellContainerPtrInput is an input type that accepts ResourceDeploymentScriptPowerShellContainerArgs, ResourceDeploymentScriptPowerShellContainerPtr and ResourceDeploymentScriptPowerShellContainerPtrOutput values.
// You can construct a concrete instance of `ResourceDeploymentScriptPowerShellContainerPtrInput` via:
//
//	        ResourceDeploymentScriptPowerShellContainerArgs{...}
//
//	or:
//
//	        nil
type ResourceDeploymentScriptPowerShellContainerPtrInput interface {
	pulumi.Input

	ToResourceDeploymentScriptPowerShellContainerPtrOutput() ResourceDeploymentScriptPowerShellContainerPtrOutput
	ToResourceDeploymentScriptPowerShellContainerPtrOutputWithContext(context.Context) ResourceDeploymentScriptPowerShellContainerPtrOutput
}

type resourceDeploymentScriptPowerShellContainerPtrType ResourceDeploymentScriptPowerShellContainerArgs

func ResourceDeploymentScriptPowerShellContainerPtr(v *ResourceDeploymentScriptPowerShellContainerArgs) ResourceDeploymentScriptPowerShellContainerPtrInput {
	return (*resourceDeploymentScriptPowerShellContainerPtrType)(v)
}

func (*resourceDeploymentScriptPowerShellContainerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceDeploymentScriptPowerShellContainer)(nil)).Elem()
}

func (i *resourceDeploymentScriptPowerShellContainerPtrType) ToResourceDeploymentScriptPowerShellContainerPtrOutput() ResourceDeploymentScriptPowerShellContainerPtrOutput {
	return i.ToResourceDeploymentScriptPowerShellContainerPtrOutputWithContext(context.Background())
}

func (i *resourceDeploymentScriptPowerShellContainerPtrType) ToResourceDeploymentScriptPowerShellContainerPtrOutputWithContext(ctx context.Context) ResourceDeploymentScriptPowerShellContainerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceDeploymentScriptPowerShellContainerPtrOutput)
}

type ResourceDeploymentScriptPowerShellContainerOutput struct{ *pulumi.OutputState }

func (ResourceDeploymentScriptPowerShellContainerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceDeploymentScriptPowerShellContainer)(nil)).Elem()
}

func (o ResourceDeploymentScriptPowerShellContainerOutput) ToResourceDeploymentScriptPowerShellContainerOutput() ResourceDeploymentScriptPowerShellContainerOutput {
	return o
}

func (o ResourceDeploymentScriptPowerShellContainerOutput) ToResourceDeploymentScriptPowerShellContainerOutputWithContext(ctx context.Context) ResourceDeploymentScriptPowerShellContainerOutput {
	return o
}

func (o ResourceDeploymentScriptPowerShellContainerOutput) ToResourceDeploymentScriptPowerShellContainerPtrOutput() ResourceDeploymentScriptPowerShellContainerPtrOutput {
	return o.ToResourceDeploymentScriptPowerShellContainerPtrOutputWithContext(context.Background())
}

func (o ResourceDeploymentScriptPowerShellContainerOutput) ToResourceDeploymentScriptPowerShellContainerPtrOutputWithContext(ctx context.Context) ResourceDeploymentScriptPowerShellContainerPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ResourceDeploymentScriptPowerShellContainer) *ResourceDeploymentScriptPowerShellContainer {
		return &v
	}).(ResourceDeploymentScriptPowerShellContainerPtrOutput)
}

// Container group name, if not specified then the name will get auto-generated. For more information, please refer to the [Container Configuration](https://learn.microsoft.com/en-us/rest/api/resources/deployment-scripts/create?tabs=HTTP#containerconfiguration) documentation.
func (o ResourceDeploymentScriptPowerShellContainerOutput) ContainerGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceDeploymentScriptPowerShellContainer) *string { return v.ContainerGroupName }).(pulumi.StringPtrOutput)
}

type ResourceDeploymentScriptPowerShellContainerPtrOutput struct{ *pulumi.OutputState }

func (ResourceDeploymentScriptPowerShellContainerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceDeploymentScriptPowerShellContainer)(nil)).Elem()
}

func (o ResourceDeploymentScriptPowerShellContainerPtrOutput) ToResourceDeploymentScriptPowerShellContainerPtrOutput() ResourceDeploymentScriptPowerShellContainerPtrOutput {
	return o
}

func (o ResourceDeploymentScriptPowerShellContainerPtrOutput) ToResourceDeploymentScriptPowerShellContainerPtrOutputWithContext(ctx context.Context) ResourceDeploymentScriptPowerShellContainerPtrOutput {
	return o
}

func (o ResourceDeploymentScriptPowerShellContainerPtrOutput) Elem() ResourceDeploymentScriptPowerShellContainerOutput {
	return o.ApplyT(func(v *ResourceDeploymentScriptPowerShellContainer) ResourceDeploymentScriptPowerShellContainer {
		if v != nil {
			return *v
		}
		var ret ResourceDeploymentScriptPowerShellContainer
		return ret
	}).(ResourceDeploymentScriptPowerShellContainerOutput)
}

// Container group name, if not specified then the name will get auto-generated. For more information, please refer to the [Container Configuration](https://learn.microsoft.com/en-us/rest/api/resources/deployment-scripts/create?tabs=HTTP#containerconfiguration) documentation.
func (o ResourceDeploymentScriptPowerShellContainerPtrOutput) ContainerGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceDeploymentScriptPowerShellContainer) *string {
		if v == nil {
			return nil
		}
		return v.ContainerGroupName
	}).(pulumi.StringPtrOutput)
}

type ResourceDeploymentScriptPowerShellEnvironmentVariable struct {
	// Specifies the name of the environment variable.
	Name string `pulumi:"name"`
	// Specifies the value of the secure environment variable.
	SecureValue *string `pulumi:"secureValue"`
	// Specifies the value of the environment variable.
	Value *string `pulumi:"value"`
}

// ResourceDeploymentScriptPowerShellEnvironmentVariableInput is an input type that accepts ResourceDeploymentScriptPowerShellEnvironmentVariableArgs and ResourceDeploymentScriptPowerShellEnvironmentVariableOutput values.
// You can construct a concrete instance of `ResourceDeploymentScriptPowerShellEnvironmentVariableInput` via:
//
//	ResourceDeploymentScriptPowerShellEnvironmentVariableArgs{...}
type ResourceDeploymentScriptPowerShellEnvironmentVariableInput interface {
	pulumi.Input

	ToResourceDeploymentScriptPowerShellEnvironmentVariableOutput() ResourceDeploymentScriptPowerShellEnvironmentVariableOutput
	ToResourceDeploymentScriptPowerShellEnvironmentVariableOutputWithContext(context.Context) ResourceDeploymentScriptPowerShellEnvironmentVariableOutput
}

type ResourceDeploymentScriptPowerShellEnvironmentVariableArgs struct {
	// Specifies the name of the environment variable.
	Name pulumi.StringInput `pulumi:"name"`
	// Specifies the value of the secure environment variable.
	SecureValue pulumi.StringPtrInput `pulumi:"secureValue"`
	// Specifies the value of the environment variable.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (ResourceDeploymentScriptPowerShellEnvironmentVariableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceDeploymentScriptPowerShellEnvironmentVariable)(nil)).Elem()
}

func (i ResourceDeploymentScriptPowerShellEnvironmentVariableArgs) ToResourceDeploymentScriptPowerShellEnvironmentVariableOutput() ResourceDeploymentScriptPowerShellEnvironmentVariableOutput {
	return i.ToResourceDeploymentScriptPowerShellEnvironmentVariableOutputWithContext(context.Background())
}

func (i ResourceDeploymentScriptPowerShellEnvironmentVariableArgs) ToResourceDeploymentScriptPowerShellEnvironmentVariableOutputWithContext(ctx context.Context) ResourceDeploymentScriptPowerShellEnvironmentVariableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceDeploymentScriptPowerShellEnvironmentVariableOutput)
}

// ResourceDeploymentScriptPowerShellEnvironmentVariableArrayInput is an input type that accepts ResourceDeploymentScriptPowerShellEnvironmentVariableArray and ResourceDeploymentScriptPowerShellEnvironmentVariableArrayOutput values.
// You can construct a concrete instance of `ResourceDeploymentScriptPowerShellEnvironmentVariableArrayInput` via:
//
//	ResourceDeploymentScriptPowerShellEnvironmentVariableArray{ ResourceDeploymentScriptPowerShellEnvironmentVariableArgs{...} }
type ResourceDeploymentScriptPowerShellEnvironmentVariableArrayInput interface {
	pulumi.Input

	ToResourceDeploymentScriptPowerShellEnvironmentVariableArrayOutput() ResourceDeploymentScriptPowerShellEnvironmentVariableArrayOutput
	ToResourceDeploymentScriptPowerShellEnvironmentVariableArrayOutputWithContext(context.Context) ResourceDeploymentScriptPowerShellEnvironmentVariableArrayOutput
}

type ResourceDeploymentScriptPowerShellEnvironmentVariableArray []ResourceDeploymentScriptPowerShellEnvironmentVariableInput

func (ResourceDeploymentScriptPowerShellEnvironmentVariableArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResourceDeploymentScriptPowerShellEnvironmentVariable)(nil)).Elem()
}

func (i ResourceDeploymentScriptPowerShellEnvironmentVariableArray) ToResourceDeploymentScriptPowerShellEnvironmentVariableArrayOutput() ResourceDeploymentScriptPowerShellEnvironmentVariableArrayOutput {
	return i.ToResourceDeploymentScriptPowerShellEnvironmentVariableArrayOutputWithContext(context.Background())
}

func (i ResourceDeploymentScriptPowerShellEnvironmentVariableArray) ToResourceDeploymentScriptPowerShellEnvironmentVariableArrayOutputWithContext(ctx context.Context) ResourceDeploymentScriptPowerShellEnvironmentVariableArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceDeploymentScriptPowerShellEnvironmentVariableArrayOutput)
}

type ResourceDeploymentScriptPowerShellEnvironmentVariableOutput struct{ *pulumi.OutputState }

func (ResourceDeploymentScriptPowerShellEnvironmentVariableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceDeploymentScriptPowerShellEnvironmentVariable)(nil)).Elem()
}

func (o ResourceDeploymentScriptPowerShellEnvironmentVariableOutput) ToResourceDeploymentScriptPowerShellEnvironmentVariableOutput() ResourceDeploymentScriptPowerShellEnvironmentVariableOutput {
	return o
}

func (o ResourceDeploymentScriptPowerShellEnvironmentVariableOutput) ToResourceDeploymentScriptPowerShellEnvironmentVariableOutputWithContext(ctx context.Context) ResourceDeploymentScriptPowerShellEnvironmentVariableOutput {
	return o
}

// Specifies the name of the environment variable.
func (o ResourceDeploymentScriptPowerShellEnvironmentVariableOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceDeploymentScriptPowerShellEnvironmentVariable) string { return v.Name }).(pulumi.StringOutput)
}

// Specifies the value of the secure environment variable.
func (o ResourceDeploymentScriptPowerShellEnvironmentVariableOutput) SecureValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceDeploymentScriptPowerShellEnvironmentVariable) *string { return v.SecureValue }).(pulumi.StringPtrOutput)
}

// Specifies the value of the environment variable.
func (o ResourceDeploymentScriptPowerShellEnvironmentVariableOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceDeploymentScriptPowerShellEnvironmentVariable) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ResourceDeploymentScriptPowerShellEnvironmentVariableArrayOutput struct{ *pulumi.OutputState }

func (ResourceDeploymentScriptPowerShellEnvironmentVariableArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResourceDeploymentScriptPowerShellEnvironmentVariable)(nil)).Elem()
}

func (o ResourceDeploymentScriptPowerShellEnvironmentVariableArrayOutput) ToResourceDeploymentScriptPowerShellEnvironmentVariableArrayOutput() ResourceDeploymentScriptPowerShellEnvironmentVariableArrayOutput {
	return o
}

func (o ResourceDeploymentScriptPowerShellEnvironmentVariableArrayOutput) ToResourceDeploymentScriptPowerShellEnvironmentVariableArrayOutputWithContext(ctx context.Context) ResourceDeploymentScriptPowerShellEnvironmentVariableArrayOutput {
	return o
}

func (o ResourceDeploymentScriptPowerShellEnvironmentVariableArrayOutput) Index(i pulumi.IntInput) ResourceDeploymentScriptPowerShellEnvironmentVariableOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ResourceDeploymentScriptPowerShellEnvironmentVariable {
		return vs[0].([]ResourceDeploymentScriptPowerShellEnvironmentVariable)[vs[1].(int)]
	}).(ResourceDeploymentScriptPowerShellEnvironmentVariableOutput)
}

type ResourceDeploymentScriptPowerShellIdentity struct {
	// Specifies the list of user-assigned managed identity IDs associated with the resource. Changing this forces a new resource to be created.
	IdentityIds []string `pulumi:"identityIds"`
	// Type of the managed identity. The only possible value is `UserAssigned`. Changing this forces a new resource to be created.
	Type string `pulumi:"type"`
}

// ResourceDeploymentScriptPowerShellIdentityInput is an input type that accepts ResourceDeploymentScriptPowerShellIdentityArgs and ResourceDeploymentScriptPowerShellIdentityOutput values.
// You can construct a concrete instance of `ResourceDeploymentScriptPowerShellIdentityInput` via:
//
//	ResourceDeploymentScriptPowerShellIdentityArgs{...}
type ResourceDeploymentScriptPowerShellIdentityInput interface {
	pulumi.Input

	ToResourceDeploymentScriptPowerShellIdentityOutput() ResourceDeploymentScriptPowerShellIdentityOutput
	ToResourceDeploymentScriptPowerShellIdentityOutputWithContext(context.Context) ResourceDeploymentScriptPowerShellIdentityOutput
}

type ResourceDeploymentScriptPowerShellIdentityArgs struct {
	// Specifies the list of user-assigned managed identity IDs associated with the resource. Changing this forces a new resource to be created.
	IdentityIds pulumi.StringArrayInput `pulumi:"identityIds"`
	// Type of the managed identity. The only possible value is `UserAssigned`. Changing this forces a new resource to be created.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ResourceDeploymentScriptPowerShellIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceDeploymentScriptPowerShellIdentity)(nil)).Elem()
}

func (i ResourceDeploymentScriptPowerShellIdentityArgs) ToResourceDeploymentScriptPowerShellIdentityOutput() ResourceDeploymentScriptPowerShellIdentityOutput {
	return i.ToResourceDeploymentScriptPowerShellIdentityOutputWithContext(context.Background())
}

func (i ResourceDeploymentScriptPowerShellIdentityArgs) ToResourceDeploymentScriptPowerShellIdentityOutputWithContext(ctx context.Context) ResourceDeploymentScriptPowerShellIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceDeploymentScriptPowerShellIdentityOutput)
}

func (i ResourceDeploymentScriptPowerShellIdentityArgs) ToResourceDeploymentScriptPowerShellIdentityPtrOutput() ResourceDeploymentScriptPowerShellIdentityPtrOutput {
	return i.ToResourceDeploymentScriptPowerShellIdentityPtrOutputWithContext(context.Background())
}

func (i ResourceDeploymentScriptPowerShellIdentityArgs) ToResourceDeploymentScriptPowerShellIdentityPtrOutputWithContext(ctx context.Context) ResourceDeploymentScriptPowerShellIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceDeploymentScriptPowerShellIdentityOutput).ToResourceDeploymentScriptPowerShellIdentityPtrOutputWithContext(ctx)
}

// ResourceDeploymentScriptPowerShellIdentityPtrInput is an input type that accepts ResourceDeploymentScriptPowerShellIdentityArgs, ResourceDeploymentScriptPowerShellIdentityPtr and ResourceDeploymentScriptPowerShellIdentityPtrOutput values.
// You can construct a concrete instance of `ResourceDeploymentScriptPowerShellIdentityPtrInput` via:
//
//	        ResourceDeploymentScriptPowerShellIdentityArgs{...}
//
//	or:
//
//	        nil
type ResourceDeploymentScriptPowerShellIdentityPtrInput interface {
	pulumi.Input

	ToResourceDeploymentScriptPowerShellIdentityPtrOutput() ResourceDeploymentScriptPowerShellIdentityPtrOutput
	ToResourceDeploymentScriptPowerShellIdentityPtrOutputWithContext(context.Context) ResourceDeploymentScriptPowerShellIdentityPtrOutput
}

type resourceDeploymentScriptPowerShellIdentityPtrType ResourceDeploymentScriptPowerShellIdentityArgs

func ResourceDeploymentScriptPowerShellIdentityPtr(v *ResourceDeploymentScriptPowerShellIdentityArgs) ResourceDeploymentScriptPowerShellIdentityPtrInput {
	return (*resourceDeploymentScriptPowerShellIdentityPtrType)(v)
}

func (*resourceDeploymentScriptPowerShellIdentityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceDeploymentScriptPowerShellIdentity)(nil)).Elem()
}

func (i *resourceDeploymentScriptPowerShellIdentityPtrType) ToResourceDeploymentScriptPowerShellIdentityPtrOutput() ResourceDeploymentScriptPowerShellIdentityPtrOutput {
	return i.ToResourceDeploymentScriptPowerShellIdentityPtrOutputWithContext(context.Background())
}

func (i *resourceDeploymentScriptPowerShellIdentityPtrType) ToResourceDeploymentScriptPowerShellIdentityPtrOutputWithContext(ctx context.Context) ResourceDeploymentScriptPowerShellIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceDeploymentScriptPowerShellIdentityPtrOutput)
}

type ResourceDeploymentScriptPowerShellIdentityOutput struct{ *pulumi.OutputState }

func (ResourceDeploymentScriptPowerShellIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceDeploymentScriptPowerShellIdentity)(nil)).Elem()
}

func (o ResourceDeploymentScriptPowerShellIdentityOutput) ToResourceDeploymentScriptPowerShellIdentityOutput() ResourceDeploymentScriptPowerShellIdentityOutput {
	return o
}

func (o ResourceDeploymentScriptPowerShellIdentityOutput) ToResourceDeploymentScriptPowerShellIdentityOutputWithContext(ctx context.Context) ResourceDeploymentScriptPowerShellIdentityOutput {
	return o
}

func (o ResourceDeploymentScriptPowerShellIdentityOutput) ToResourceDeploymentScriptPowerShellIdentityPtrOutput() ResourceDeploymentScriptPowerShellIdentityPtrOutput {
	return o.ToResourceDeploymentScriptPowerShellIdentityPtrOutputWithContext(context.Background())
}

func (o ResourceDeploymentScriptPowerShellIdentityOutput) ToResourceDeploymentScriptPowerShellIdentityPtrOutputWithContext(ctx context.Context) ResourceDeploymentScriptPowerShellIdentityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ResourceDeploymentScriptPowerShellIdentity) *ResourceDeploymentScriptPowerShellIdentity {
		return &v
	}).(ResourceDeploymentScriptPowerShellIdentityPtrOutput)
}

// Specifies the list of user-assigned managed identity IDs associated with the resource. Changing this forces a new resource to be created.
func (o ResourceDeploymentScriptPowerShellIdentityOutput) IdentityIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ResourceDeploymentScriptPowerShellIdentity) []string { return v.IdentityIds }).(pulumi.StringArrayOutput)
}

// Type of the managed identity. The only possible value is `UserAssigned`. Changing this forces a new resource to be created.
func (o ResourceDeploymentScriptPowerShellIdentityOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceDeploymentScriptPowerShellIdentity) string { return v.Type }).(pulumi.StringOutput)
}

type ResourceDeploymentScriptPowerShellIdentityPtrOutput struct{ *pulumi.OutputState }

func (ResourceDeploymentScriptPowerShellIdentityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceDeploymentScriptPowerShellIdentity)(nil)).Elem()
}

func (o ResourceDeploymentScriptPowerShellIdentityPtrOutput) ToResourceDeploymentScriptPowerShellIdentityPtrOutput() ResourceDeploymentScriptPowerShellIdentityPtrOutput {
	return o
}

func (o ResourceDeploymentScriptPowerShellIdentityPtrOutput) ToResourceDeploymentScriptPowerShellIdentityPtrOutputWithContext(ctx context.Context) ResourceDeploymentScriptPowerShellIdentityPtrOutput {
	return o
}

func (o ResourceDeploymentScriptPowerShellIdentityPtrOutput) Elem() ResourceDeploymentScriptPowerShellIdentityOutput {
	return o.ApplyT(func(v *ResourceDeploymentScriptPowerShellIdentity) ResourceDeploymentScriptPowerShellIdentity {
		if v != nil {
			return *v
		}
		var ret ResourceDeploymentScriptPowerShellIdentity
		return ret
	}).(ResourceDeploymentScriptPowerShellIdentityOutput)
}

// Specifies the list of user-assigned managed identity IDs associated with the resource. Changing this forces a new resource to be created.
func (o ResourceDeploymentScriptPowerShellIdentityPtrOutput) IdentityIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ResourceDeploymentScriptPowerShellIdentity) []string {
		if v == nil {
			return nil
		}
		return v.IdentityIds
	}).(pulumi.StringArrayOutput)
}

// Type of the managed identity. The only possible value is `UserAssigned`. Changing this forces a new resource to be created.
func (o ResourceDeploymentScriptPowerShellIdentityPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceDeploymentScriptPowerShellIdentity) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type ResourceDeploymentScriptPowerShellStorageAccount struct {
	// Specifies the storage account access key.
	Key string `pulumi:"key"`
	// Specifies the storage account name.
	Name string `pulumi:"name"`
}

// ResourceDeploymentScriptPowerShellStorageAccountInput is an input type that accepts ResourceDeploymentScriptPowerShellStorageAccountArgs and ResourceDeploymentScriptPowerShellStorageAccountOutput values.
// You can construct a concrete instance of `ResourceDeploymentScriptPowerShellStorageAccountInput` via:
//
//	ResourceDeploymentScriptPowerShellStorageAccountArgs{...}
type ResourceDeploymentScriptPowerShellStorageAccountInput interface {
	pulumi.Input

	ToResourceDeploymentScriptPowerShellStorageAccountOutput() ResourceDeploymentScriptPowerShellStorageAccountOutput
	ToResourceDeploymentScriptPowerShellStorageAccountOutputWithContext(context.Context) ResourceDeploymentScriptPowerShellStorageAccountOutput
}

type ResourceDeploymentScriptPowerShellStorageAccountArgs struct {
	// Specifies the storage account access key.
	Key pulumi.StringInput `pulumi:"key"`
	// Specifies the storage account name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (ResourceDeploymentScriptPowerShellStorageAccountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceDeploymentScriptPowerShellStorageAccount)(nil)).Elem()
}

func (i ResourceDeploymentScriptPowerShellStorageAccountArgs) ToResourceDeploymentScriptPowerShellStorageAccountOutput() ResourceDeploymentScriptPowerShellStorageAccountOutput {
	return i.ToResourceDeploymentScriptPowerShellStorageAccountOutputWithContext(context.Background())
}

func (i ResourceDeploymentScriptPowerShellStorageAccountArgs) ToResourceDeploymentScriptPowerShellStorageAccountOutputWithContext(ctx context.Context) ResourceDeploymentScriptPowerShellStorageAccountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceDeploymentScriptPowerShellStorageAccountOutput)
}

func (i ResourceDeploymentScriptPowerShellStorageAccountArgs) ToResourceDeploymentScriptPowerShellStorageAccountPtrOutput() ResourceDeploymentScriptPowerShellStorageAccountPtrOutput {
	return i.ToResourceDeploymentScriptPowerShellStorageAccountPtrOutputWithContext(context.Background())
}

func (i ResourceDeploymentScriptPowerShellStorageAccountArgs) ToResourceDeploymentScriptPowerShellStorageAccountPtrOutputWithContext(ctx context.Context) ResourceDeploymentScriptPowerShellStorageAccountPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceDeploymentScriptPowerShellStorageAccountOutput).ToResourceDeploymentScriptPowerShellStorageAccountPtrOutputWithContext(ctx)
}

// ResourceDeploymentScriptPowerShellStorageAccountPtrInput is an input type that accepts ResourceDeploymentScriptPowerShellStorageAccountArgs, ResourceDeploymentScriptPowerShellStorageAccountPtr and ResourceDeploymentScriptPowerShellStorageAccountPtrOutput values.
// You can construct a concrete instance of `ResourceDeploymentScriptPowerShellStorageAccountPtrInput` via:
//
//	        ResourceDeploymentScriptPowerShellStorageAccountArgs{...}
//
//	or:
//
//	        nil
type ResourceDeploymentScriptPowerShellStorageAccountPtrInput interface {
	pulumi.Input

	ToResourceDeploymentScriptPowerShellStorageAccountPtrOutput() ResourceDeploymentScriptPowerShellStorageAccountPtrOutput
	ToResourceDeploymentScriptPowerShellStorageAccountPtrOutputWithContext(context.Context) ResourceDeploymentScriptPowerShellStorageAccountPtrOutput
}

type resourceDeploymentScriptPowerShellStorageAccountPtrType ResourceDeploymentScriptPowerShellStorageAccountArgs

func ResourceDeploymentScriptPowerShellStorageAccountPtr(v *ResourceDeploymentScriptPowerShellStorageAccountArgs) ResourceDeploymentScriptPowerShellStorageAccountPtrInput {
	return (*resourceDeploymentScriptPowerShellStorageAccountPtrType)(v)
}

func (*resourceDeploymentScriptPowerShellStorageAccountPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceDeploymentScriptPowerShellStorageAccount)(nil)).Elem()
}

func (i *resourceDeploymentScriptPowerShellStorageAccountPtrType) ToResourceDeploymentScriptPowerShellStorageAccountPtrOutput() ResourceDeploymentScriptPowerShellStorageAccountPtrOutput {
	return i.ToResourceDeploymentScriptPowerShellStorageAccountPtrOutputWithContext(context.Background())
}

func (i *resourceDeploymentScriptPowerShellStorageAccountPtrType) ToResourceDeploymentScriptPowerShellStorageAccountPtrOutputWithContext(ctx context.Context) ResourceDeploymentScriptPowerShellStorageAccountPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceDeploymentScriptPowerShellStorageAccountPtrOutput)
}

type ResourceDeploymentScriptPowerShellStorageAccountOutput struct{ *pulumi.OutputState }

func (ResourceDeploymentScriptPowerShellStorageAccountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceDeploymentScriptPowerShellStorageAccount)(nil)).Elem()
}

func (o ResourceDeploymentScriptPowerShellStorageAccountOutput) ToResourceDeploymentScriptPowerShellStorageAccountOutput() ResourceDeploymentScriptPowerShellStorageAccountOutput {
	return o
}

func (o ResourceDeploymentScriptPowerShellStorageAccountOutput) ToResourceDeploymentScriptPowerShellStorageAccountOutputWithContext(ctx context.Context) ResourceDeploymentScriptPowerShellStorageAccountOutput {
	return o
}

func (o ResourceDeploymentScriptPowerShellStorageAccountOutput) ToResourceDeploymentScriptPowerShellStorageAccountPtrOutput() ResourceDeploymentScriptPowerShellStorageAccountPtrOutput {
	return o.ToResourceDeploymentScriptPowerShellStorageAccountPtrOutputWithContext(context.Background())
}

func (o ResourceDeploymentScriptPowerShellStorageAccountOutput) ToResourceDeploymentScriptPowerShellStorageAccountPtrOutputWithContext(ctx context.Context) ResourceDeploymentScriptPowerShellStorageAccountPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ResourceDeploymentScriptPowerShellStorageAccount) *ResourceDeploymentScriptPowerShellStorageAccount {
		return &v
	}).(ResourceDeploymentScriptPowerShellStorageAccountPtrOutput)
}

// Specifies the storage account access key.
func (o ResourceDeploymentScriptPowerShellStorageAccountOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceDeploymentScriptPowerShellStorageAccount) string { return v.Key }).(pulumi.StringOutput)
}

// Specifies the storage account name.
func (o ResourceDeploymentScriptPowerShellStorageAccountOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceDeploymentScriptPowerShellStorageAccount) string { return v.Name }).(pulumi.StringOutput)
}

type ResourceDeploymentScriptPowerShellStorageAccountPtrOutput struct{ *pulumi.OutputState }

func (ResourceDeploymentScriptPowerShellStorageAccountPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceDeploymentScriptPowerShellStorageAccount)(nil)).Elem()
}

func (o ResourceDeploymentScriptPowerShellStorageAccountPtrOutput) ToResourceDeploymentScriptPowerShellStorageAccountPtrOutput() ResourceDeploymentScriptPowerShellStorageAccountPtrOutput {
	return o
}

func (o ResourceDeploymentScriptPowerShellStorageAccountPtrOutput) ToResourceDeploymentScriptPowerShellStorageAccountPtrOutputWithContext(ctx context.Context) ResourceDeploymentScriptPowerShellStorageAccountPtrOutput {
	return o
}

func (o ResourceDeploymentScriptPowerShellStorageAccountPtrOutput) Elem() ResourceDeploymentScriptPowerShellStorageAccountOutput {
	return o.ApplyT(func(v *ResourceDeploymentScriptPowerShellStorageAccount) ResourceDeploymentScriptPowerShellStorageAccount {
		if v != nil {
			return *v
		}
		var ret ResourceDeploymentScriptPowerShellStorageAccount
		return ret
	}).(ResourceDeploymentScriptPowerShellStorageAccountOutput)
}

// Specifies the storage account access key.
func (o ResourceDeploymentScriptPowerShellStorageAccountPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceDeploymentScriptPowerShellStorageAccount) *string {
		if v == nil {
			return nil
		}
		return &v.Key
	}).(pulumi.StringPtrOutput)
}

// Specifies the storage account name.
func (o ResourceDeploymentScriptPowerShellStorageAccountPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceDeploymentScriptPowerShellStorageAccount) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

type ResourceGroupCostManagementExportExportDataOptions struct {
	// The time frame for pulling data for the query. If custom, then a specific time period must be provided. Possible values include: `WeekToDate`, `MonthToDate`, `BillingMonthToDate`, `TheLast7Days`, `TheLastMonth`, `TheLastBillingMonth`, `Custom`.
	TimeFrame string `pulumi:"timeFrame"`
	// The type of the query. Possible values are `ActualCost`, `AmortizedCost` and `Usage`.
	Type string `pulumi:"type"`
}

// ResourceGroupCostManagementExportExportDataOptionsInput is an input type that accepts ResourceGroupCostManagementExportExportDataOptionsArgs and ResourceGroupCostManagementExportExportDataOptionsOutput values.
// You can construct a concrete instance of `ResourceGroupCostManagementExportExportDataOptionsInput` via:
//
//	ResourceGroupCostManagementExportExportDataOptionsArgs{...}
type ResourceGroupCostManagementExportExportDataOptionsInput interface {
	pulumi.Input

	ToResourceGroupCostManagementExportExportDataOptionsOutput() ResourceGroupCostManagementExportExportDataOptionsOutput
	ToResourceGroupCostManagementExportExportDataOptionsOutputWithContext(context.Context) ResourceGroupCostManagementExportExportDataOptionsOutput
}

type ResourceGroupCostManagementExportExportDataOptionsArgs struct {
	// The time frame for pulling data for the query. If custom, then a specific time period must be provided. Possible values include: `WeekToDate`, `MonthToDate`, `BillingMonthToDate`, `TheLast7Days`, `TheLastMonth`, `TheLastBillingMonth`, `Custom`.
	TimeFrame pulumi.StringInput `pulumi:"timeFrame"`
	// The type of the query. Possible values are `ActualCost`, `AmortizedCost` and `Usage`.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ResourceGroupCostManagementExportExportDataOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceGroupCostManagementExportExportDataOptions)(nil)).Elem()
}

func (i ResourceGroupCostManagementExportExportDataOptionsArgs) ToResourceGroupCostManagementExportExportDataOptionsOutput() ResourceGroupCostManagementExportExportDataOptionsOutput {
	return i.ToResourceGroupCostManagementExportExportDataOptionsOutputWithContext(context.Background())
}

func (i ResourceGroupCostManagementExportExportDataOptionsArgs) ToResourceGroupCostManagementExportExportDataOptionsOutputWithContext(ctx context.Context) ResourceGroupCostManagementExportExportDataOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceGroupCostManagementExportExportDataOptionsOutput)
}

func (i ResourceGroupCostManagementExportExportDataOptionsArgs) ToResourceGroupCostManagementExportExportDataOptionsPtrOutput() ResourceGroupCostManagementExportExportDataOptionsPtrOutput {
	return i.ToResourceGroupCostManagementExportExportDataOptionsPtrOutputWithContext(context.Background())
}

func (i ResourceGroupCostManagementExportExportDataOptionsArgs) ToResourceGroupCostManagementExportExportDataOptionsPtrOutputWithContext(ctx context.Context) ResourceGroupCostManagementExportExportDataOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceGroupCostManagementExportExportDataOptionsOutput).ToResourceGroupCostManagementExportExportDataOptionsPtrOutputWithContext(ctx)
}

// ResourceGroupCostManagementExportExportDataOptionsPtrInput is an input type that accepts ResourceGroupCostManagementExportExportDataOptionsArgs, ResourceGroupCostManagementExportExportDataOptionsPtr and ResourceGroupCostManagementExportExportDataOptionsPtrOutput values.
// You can construct a concrete instance of `ResourceGroupCostManagementExportExportDataOptionsPtrInput` via:
//
//	        ResourceGroupCostManagementExportExportDataOptionsArgs{...}
//
//	or:
//
//	        nil
type ResourceGroupCostManagementExportExportDataOptionsPtrInput interface {
	pulumi.Input

	ToResourceGroupCostManagementExportExportDataOptionsPtrOutput() ResourceGroupCostManagementExportExportDataOptionsPtrOutput
	ToResourceGroupCostManagementExportExportDataOptionsPtrOutputWithContext(context.Context) ResourceGroupCostManagementExportExportDataOptionsPtrOutput
}

type resourceGroupCostManagementExportExportDataOptionsPtrType ResourceGroupCostManagementExportExportDataOptionsArgs

func ResourceGroupCostManagementExportExportDataOptionsPtr(v *ResourceGroupCostManagementExportExportDataOptionsArgs) ResourceGroupCostManagementExportExportDataOptionsPtrInput {
	return (*resourceGroupCostManagementExportExportDataOptionsPtrType)(v)
}

func (*resourceGroupCostManagementExportExportDataOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceGroupCostManagementExportExportDataOptions)(nil)).Elem()
}

func (i *resourceGroupCostManagementExportExportDataOptionsPtrType) ToResourceGroupCostManagementExportExportDataOptionsPtrOutput() ResourceGroupCostManagementExportExportDataOptionsPtrOutput {
	return i.ToResourceGroupCostManagementExportExportDataOptionsPtrOutputWithContext(context.Background())
}

func (i *resourceGroupCostManagementExportExportDataOptionsPtrType) ToResourceGroupCostManagementExportExportDataOptionsPtrOutputWithContext(ctx context.Context) ResourceGroupCostManagementExportExportDataOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceGroupCostManagementExportExportDataOptionsPtrOutput)
}

type ResourceGroupCostManagementExportExportDataOptionsOutput struct{ *pulumi.OutputState }

func (ResourceGroupCostManagementExportExportDataOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceGroupCostManagementExportExportDataOptions)(nil)).Elem()
}

func (o ResourceGroupCostManagementExportExportDataOptionsOutput) ToResourceGroupCostManagementExportExportDataOptionsOutput() ResourceGroupCostManagementExportExportDataOptionsOutput {
	return o
}

func (o ResourceGroupCostManagementExportExportDataOptionsOutput) ToResourceGroupCostManagementExportExportDataOptionsOutputWithContext(ctx context.Context) ResourceGroupCostManagementExportExportDataOptionsOutput {
	return o
}

func (o ResourceGroupCostManagementExportExportDataOptionsOutput) ToResourceGroupCostManagementExportExportDataOptionsPtrOutput() ResourceGroupCostManagementExportExportDataOptionsPtrOutput {
	return o.ToResourceGroupCostManagementExportExportDataOptionsPtrOutputWithContext(context.Background())
}

func (o ResourceGroupCostManagementExportExportDataOptionsOutput) ToResourceGroupCostManagementExportExportDataOptionsPtrOutputWithContext(ctx context.Context) ResourceGroupCostManagementExportExportDataOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ResourceGroupCostManagementExportExportDataOptions) *ResourceGroupCostManagementExportExportDataOptions {
		return &v
	}).(ResourceGroupCostManagementExportExportDataOptionsPtrOutput)
}

// The time frame for pulling data for the query. If custom, then a specific time period must be provided. Possible values include: `WeekToDate`, `MonthToDate`, `BillingMonthToDate`, `TheLast7Days`, `TheLastMonth`, `TheLastBillingMonth`, `Custom`.
func (o ResourceGroupCostManagementExportExportDataOptionsOutput) TimeFrame() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceGroupCostManagementExportExportDataOptions) string { return v.TimeFrame }).(pulumi.StringOutput)
}

// The type of the query. Possible values are `ActualCost`, `AmortizedCost` and `Usage`.
func (o ResourceGroupCostManagementExportExportDataOptionsOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceGroupCostManagementExportExportDataOptions) string { return v.Type }).(pulumi.StringOutput)
}

type ResourceGroupCostManagementExportExportDataOptionsPtrOutput struct{ *pulumi.OutputState }

func (ResourceGroupCostManagementExportExportDataOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceGroupCostManagementExportExportDataOptions)(nil)).Elem()
}

func (o ResourceGroupCostManagementExportExportDataOptionsPtrOutput) ToResourceGroupCostManagementExportExportDataOptionsPtrOutput() ResourceGroupCostManagementExportExportDataOptionsPtrOutput {
	return o
}

func (o ResourceGroupCostManagementExportExportDataOptionsPtrOutput) ToResourceGroupCostManagementExportExportDataOptionsPtrOutputWithContext(ctx context.Context) ResourceGroupCostManagementExportExportDataOptionsPtrOutput {
	return o
}

func (o ResourceGroupCostManagementExportExportDataOptionsPtrOutput) Elem() ResourceGroupCostManagementExportExportDataOptionsOutput {
	return o.ApplyT(func(v *ResourceGroupCostManagementExportExportDataOptions) ResourceGroupCostManagementExportExportDataOptions {
		if v != nil {
			return *v
		}
		var ret ResourceGroupCostManagementExportExportDataOptions
		return ret
	}).(ResourceGroupCostManagementExportExportDataOptionsOutput)
}

// The time frame for pulling data for the query. If custom, then a specific time period must be provided. Possible values include: `WeekToDate`, `MonthToDate`, `BillingMonthToDate`, `TheLast7Days`, `TheLastMonth`, `TheLastBillingMonth`, `Custom`.
func (o ResourceGroupCostManagementExportExportDataOptionsPtrOutput) TimeFrame() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceGroupCostManagementExportExportDataOptions) *string {
		if v == nil {
			return nil
		}
		return &v.TimeFrame
	}).(pulumi.StringPtrOutput)
}

// The type of the query. Possible values are `ActualCost`, `AmortizedCost` and `Usage`.
func (o ResourceGroupCostManagementExportExportDataOptionsPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceGroupCostManagementExportExportDataOptions) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type ResourceGroupCostManagementExportExportDataStorageLocation struct {
	// The Resource Manager ID of the container where exports will be uploaded. Changing this forces a new resource to be created.
	ContainerId string `pulumi:"containerId"`
	// The path of the directory where exports will be uploaded. Changing this forces a new resource to be created.
	//
	// > **Note:** The Resource Manager ID of a Storage Container is exposed via the `resourceManagerId` attribute of the `storage.Container` resource.
	RootFolderPath string `pulumi:"rootFolderPath"`
}

// ResourceGroupCostManagementExportExportDataStorageLocationInput is an input type that accepts ResourceGroupCostManagementExportExportDataStorageLocationArgs and ResourceGroupCostManagementExportExportDataStorageLocationOutput values.
// You can construct a concrete instance of `ResourceGroupCostManagementExportExportDataStorageLocationInput` via:
//
//	ResourceGroupCostManagementExportExportDataStorageLocationArgs{...}
type ResourceGroupCostManagementExportExportDataStorageLocationInput interface {
	pulumi.Input

	ToResourceGroupCostManagementExportExportDataStorageLocationOutput() ResourceGroupCostManagementExportExportDataStorageLocationOutput
	ToResourceGroupCostManagementExportExportDataStorageLocationOutputWithContext(context.Context) ResourceGroupCostManagementExportExportDataStorageLocationOutput
}

type ResourceGroupCostManagementExportExportDataStorageLocationArgs struct {
	// The Resource Manager ID of the container where exports will be uploaded. Changing this forces a new resource to be created.
	ContainerId pulumi.StringInput `pulumi:"containerId"`
	// The path of the directory where exports will be uploaded. Changing this forces a new resource to be created.
	//
	// > **Note:** The Resource Manager ID of a Storage Container is exposed via the `resourceManagerId` attribute of the `storage.Container` resource.
	RootFolderPath pulumi.StringInput `pulumi:"rootFolderPath"`
}

func (ResourceGroupCostManagementExportExportDataStorageLocationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceGroupCostManagementExportExportDataStorageLocation)(nil)).Elem()
}

func (i ResourceGroupCostManagementExportExportDataStorageLocationArgs) ToResourceGroupCostManagementExportExportDataStorageLocationOutput() ResourceGroupCostManagementExportExportDataStorageLocationOutput {
	return i.ToResourceGroupCostManagementExportExportDataStorageLocationOutputWithContext(context.Background())
}

func (i ResourceGroupCostManagementExportExportDataStorageLocationArgs) ToResourceGroupCostManagementExportExportDataStorageLocationOutputWithContext(ctx context.Context) ResourceGroupCostManagementExportExportDataStorageLocationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceGroupCostManagementExportExportDataStorageLocationOutput)
}

func (i ResourceGroupCostManagementExportExportDataStorageLocationArgs) ToResourceGroupCostManagementExportExportDataStorageLocationPtrOutput() ResourceGroupCostManagementExportExportDataStorageLocationPtrOutput {
	return i.ToResourceGroupCostManagementExportExportDataStorageLocationPtrOutputWithContext(context.Background())
}

func (i ResourceGroupCostManagementExportExportDataStorageLocationArgs) ToResourceGroupCostManagementExportExportDataStorageLocationPtrOutputWithContext(ctx context.Context) ResourceGroupCostManagementExportExportDataStorageLocationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceGroupCostManagementExportExportDataStorageLocationOutput).ToResourceGroupCostManagementExportExportDataStorageLocationPtrOutputWithContext(ctx)
}

// ResourceGroupCostManagementExportExportDataStorageLocationPtrInput is an input type that accepts ResourceGroupCostManagementExportExportDataStorageLocationArgs, ResourceGroupCostManagementExportExportDataStorageLocationPtr and ResourceGroupCostManagementExportExportDataStorageLocationPtrOutput values.
// You can construct a concrete instance of `ResourceGroupCostManagementExportExportDataStorageLocationPtrInput` via:
//
//	        ResourceGroupCostManagementExportExportDataStorageLocationArgs{...}
//
//	or:
//
//	        nil
type ResourceGroupCostManagementExportExportDataStorageLocationPtrInput interface {
	pulumi.Input

	ToResourceGroupCostManagementExportExportDataStorageLocationPtrOutput() ResourceGroupCostManagementExportExportDataStorageLocationPtrOutput
	ToResourceGroupCostManagementExportExportDataStorageLocationPtrOutputWithContext(context.Context) ResourceGroupCostManagementExportExportDataStorageLocationPtrOutput
}

type resourceGroupCostManagementExportExportDataStorageLocationPtrType ResourceGroupCostManagementExportExportDataStorageLocationArgs

func ResourceGroupCostManagementExportExportDataStorageLocationPtr(v *ResourceGroupCostManagementExportExportDataStorageLocationArgs) ResourceGroupCostManagementExportExportDataStorageLocationPtrInput {
	return (*resourceGroupCostManagementExportExportDataStorageLocationPtrType)(v)
}

func (*resourceGroupCostManagementExportExportDataStorageLocationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceGroupCostManagementExportExportDataStorageLocation)(nil)).Elem()
}

func (i *resourceGroupCostManagementExportExportDataStorageLocationPtrType) ToResourceGroupCostManagementExportExportDataStorageLocationPtrOutput() ResourceGroupCostManagementExportExportDataStorageLocationPtrOutput {
	return i.ToResourceGroupCostManagementExportExportDataStorageLocationPtrOutputWithContext(context.Background())
}

func (i *resourceGroupCostManagementExportExportDataStorageLocationPtrType) ToResourceGroupCostManagementExportExportDataStorageLocationPtrOutputWithContext(ctx context.Context) ResourceGroupCostManagementExportExportDataStorageLocationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceGroupCostManagementExportExportDataStorageLocationPtrOutput)
}

type ResourceGroupCostManagementExportExportDataStorageLocationOutput struct{ *pulumi.OutputState }

func (ResourceGroupCostManagementExportExportDataStorageLocationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceGroupCostManagementExportExportDataStorageLocation)(nil)).Elem()
}

func (o ResourceGroupCostManagementExportExportDataStorageLocationOutput) ToResourceGroupCostManagementExportExportDataStorageLocationOutput() ResourceGroupCostManagementExportExportDataStorageLocationOutput {
	return o
}

func (o ResourceGroupCostManagementExportExportDataStorageLocationOutput) ToResourceGroupCostManagementExportExportDataStorageLocationOutputWithContext(ctx context.Context) ResourceGroupCostManagementExportExportDataStorageLocationOutput {
	return o
}

func (o ResourceGroupCostManagementExportExportDataStorageLocationOutput) ToResourceGroupCostManagementExportExportDataStorageLocationPtrOutput() ResourceGroupCostManagementExportExportDataStorageLocationPtrOutput {
	return o.ToResourceGroupCostManagementExportExportDataStorageLocationPtrOutputWithContext(context.Background())
}

func (o ResourceGroupCostManagementExportExportDataStorageLocationOutput) ToResourceGroupCostManagementExportExportDataStorageLocationPtrOutputWithContext(ctx context.Context) ResourceGroupCostManagementExportExportDataStorageLocationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ResourceGroupCostManagementExportExportDataStorageLocation) *ResourceGroupCostManagementExportExportDataStorageLocation {
		return &v
	}).(ResourceGroupCostManagementExportExportDataStorageLocationPtrOutput)
}

// The Resource Manager ID of the container where exports will be uploaded. Changing this forces a new resource to be created.
func (o ResourceGroupCostManagementExportExportDataStorageLocationOutput) ContainerId() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceGroupCostManagementExportExportDataStorageLocation) string { return v.ContainerId }).(pulumi.StringOutput)
}

// The path of the directory where exports will be uploaded. Changing this forces a new resource to be created.
//
// > **Note:** The Resource Manager ID of a Storage Container is exposed via the `resourceManagerId` attribute of the `storage.Container` resource.
func (o ResourceGroupCostManagementExportExportDataStorageLocationOutput) RootFolderPath() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceGroupCostManagementExportExportDataStorageLocation) string { return v.RootFolderPath }).(pulumi.StringOutput)
}

type ResourceGroupCostManagementExportExportDataStorageLocationPtrOutput struct{ *pulumi.OutputState }

func (ResourceGroupCostManagementExportExportDataStorageLocationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceGroupCostManagementExportExportDataStorageLocation)(nil)).Elem()
}

func (o ResourceGroupCostManagementExportExportDataStorageLocationPtrOutput) ToResourceGroupCostManagementExportExportDataStorageLocationPtrOutput() ResourceGroupCostManagementExportExportDataStorageLocationPtrOutput {
	return o
}

func (o ResourceGroupCostManagementExportExportDataStorageLocationPtrOutput) ToResourceGroupCostManagementExportExportDataStorageLocationPtrOutputWithContext(ctx context.Context) ResourceGroupCostManagementExportExportDataStorageLocationPtrOutput {
	return o
}

func (o ResourceGroupCostManagementExportExportDataStorageLocationPtrOutput) Elem() ResourceGroupCostManagementExportExportDataStorageLocationOutput {
	return o.ApplyT(func(v *ResourceGroupCostManagementExportExportDataStorageLocation) ResourceGroupCostManagementExportExportDataStorageLocation {
		if v != nil {
			return *v
		}
		var ret ResourceGroupCostManagementExportExportDataStorageLocation
		return ret
	}).(ResourceGroupCostManagementExportExportDataStorageLocationOutput)
}

// The Resource Manager ID of the container where exports will be uploaded. Changing this forces a new resource to be created.
func (o ResourceGroupCostManagementExportExportDataStorageLocationPtrOutput) ContainerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceGroupCostManagementExportExportDataStorageLocation) *string {
		if v == nil {
			return nil
		}
		return &v.ContainerId
	}).(pulumi.StringPtrOutput)
}

// The path of the directory where exports will be uploaded. Changing this forces a new resource to be created.
//
// > **Note:** The Resource Manager ID of a Storage Container is exposed via the `resourceManagerId` attribute of the `storage.Container` resource.
func (o ResourceGroupCostManagementExportExportDataStorageLocationPtrOutput) RootFolderPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceGroupCostManagementExportExportDataStorageLocation) *string {
		if v == nil {
			return nil
		}
		return &v.RootFolderPath
	}).(pulumi.StringPtrOutput)
}

type ResourceGroupCostManagementViewDataset struct {
	// One or more `aggregation` blocks as defined above.
	Aggregations []ResourceGroupCostManagementViewDatasetAggregation `pulumi:"aggregations"`
	// The granularity of rows in the report. Possible values are `Daily` and `Monthly`.
	Granularity string `pulumi:"granularity"`
	// One or more `grouping` blocks as defined below.
	Groupings []ResourceGroupCostManagementViewDatasetGrouping `pulumi:"groupings"`
	// One or more `sorting` blocks as defined below, containing the order by expression to be used in the report
	Sortings []ResourceGroupCostManagementViewDatasetSorting `pulumi:"sortings"`
}

// ResourceGroupCostManagementViewDatasetInput is an input type that accepts ResourceGroupCostManagementViewDatasetArgs and ResourceGroupCostManagementViewDatasetOutput values.
// You can construct a concrete instance of `ResourceGroupCostManagementViewDatasetInput` via:
//
//	ResourceGroupCostManagementViewDatasetArgs{...}
type ResourceGroupCostManagementViewDatasetInput interface {
	pulumi.Input

	ToResourceGroupCostManagementViewDatasetOutput() ResourceGroupCostManagementViewDatasetOutput
	ToResourceGroupCostManagementViewDatasetOutputWithContext(context.Context) ResourceGroupCostManagementViewDatasetOutput
}

type ResourceGroupCostManagementViewDatasetArgs struct {
	// One or more `aggregation` blocks as defined above.
	Aggregations ResourceGroupCostManagementViewDatasetAggregationArrayInput `pulumi:"aggregations"`
	// The granularity of rows in the report. Possible values are `Daily` and `Monthly`.
	Granularity pulumi.StringInput `pulumi:"granularity"`
	// One or more `grouping` blocks as defined below.
	Groupings ResourceGroupCostManagementViewDatasetGroupingArrayInput `pulumi:"groupings"`
	// One or more `sorting` blocks as defined below, containing the order by expression to be used in the report
	Sortings ResourceGroupCostManagementViewDatasetSortingArrayInput `pulumi:"sortings"`
}

func (ResourceGroupCostManagementViewDatasetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceGroupCostManagementViewDataset)(nil)).Elem()
}

func (i ResourceGroupCostManagementViewDatasetArgs) ToResourceGroupCostManagementViewDatasetOutput() ResourceGroupCostManagementViewDatasetOutput {
	return i.ToResourceGroupCostManagementViewDatasetOutputWithContext(context.Background())
}

func (i ResourceGroupCostManagementViewDatasetArgs) ToResourceGroupCostManagementViewDatasetOutputWithContext(ctx context.Context) ResourceGroupCostManagementViewDatasetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceGroupCostManagementViewDatasetOutput)
}

func (i ResourceGroupCostManagementViewDatasetArgs) ToResourceGroupCostManagementViewDatasetPtrOutput() ResourceGroupCostManagementViewDatasetPtrOutput {
	return i.ToResourceGroupCostManagementViewDatasetPtrOutputWithContext(context.Background())
}

func (i ResourceGroupCostManagementViewDatasetArgs) ToResourceGroupCostManagementViewDatasetPtrOutputWithContext(ctx context.Context) ResourceGroupCostManagementViewDatasetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceGroupCostManagementViewDatasetOutput).ToResourceGroupCostManagementViewDatasetPtrOutputWithContext(ctx)
}

// ResourceGroupCostManagementViewDatasetPtrInput is an input type that accepts ResourceGroupCostManagementViewDatasetArgs, ResourceGroupCostManagementViewDatasetPtr and ResourceGroupCostManagementViewDatasetPtrOutput values.
// You can construct a concrete instance of `ResourceGroupCostManagementViewDatasetPtrInput` via:
//
//	        ResourceGroupCostManagementViewDatasetArgs{...}
//
//	or:
//
//	        nil
type ResourceGroupCostManagementViewDatasetPtrInput interface {
	pulumi.Input

	ToResourceGroupCostManagementViewDatasetPtrOutput() ResourceGroupCostManagementViewDatasetPtrOutput
	ToResourceGroupCostManagementViewDatasetPtrOutputWithContext(context.Context) ResourceGroupCostManagementViewDatasetPtrOutput
}

type resourceGroupCostManagementViewDatasetPtrType ResourceGroupCostManagementViewDatasetArgs

func ResourceGroupCostManagementViewDatasetPtr(v *ResourceGroupCostManagementViewDatasetArgs) ResourceGroupCostManagementViewDatasetPtrInput {
	return (*resourceGroupCostManagementViewDatasetPtrType)(v)
}

func (*resourceGroupCostManagementViewDatasetPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceGroupCostManagementViewDataset)(nil)).Elem()
}

func (i *resourceGroupCostManagementViewDatasetPtrType) ToResourceGroupCostManagementViewDatasetPtrOutput() ResourceGroupCostManagementViewDatasetPtrOutput {
	return i.ToResourceGroupCostManagementViewDatasetPtrOutputWithContext(context.Background())
}

func (i *resourceGroupCostManagementViewDatasetPtrType) ToResourceGroupCostManagementViewDatasetPtrOutputWithContext(ctx context.Context) ResourceGroupCostManagementViewDatasetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceGroupCostManagementViewDatasetPtrOutput)
}

type ResourceGroupCostManagementViewDatasetOutput struct{ *pulumi.OutputState }

func (ResourceGroupCostManagementViewDatasetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceGroupCostManagementViewDataset)(nil)).Elem()
}

func (o ResourceGroupCostManagementViewDatasetOutput) ToResourceGroupCostManagementViewDatasetOutput() ResourceGroupCostManagementViewDatasetOutput {
	return o
}

func (o ResourceGroupCostManagementViewDatasetOutput) ToResourceGroupCostManagementViewDatasetOutputWithContext(ctx context.Context) ResourceGroupCostManagementViewDatasetOutput {
	return o
}

func (o ResourceGroupCostManagementViewDatasetOutput) ToResourceGroupCostManagementViewDatasetPtrOutput() ResourceGroupCostManagementViewDatasetPtrOutput {
	return o.ToResourceGroupCostManagementViewDatasetPtrOutputWithContext(context.Background())
}

func (o ResourceGroupCostManagementViewDatasetOutput) ToResourceGroupCostManagementViewDatasetPtrOutputWithContext(ctx context.Context) ResourceGroupCostManagementViewDatasetPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ResourceGroupCostManagementViewDataset) *ResourceGroupCostManagementViewDataset {
		return &v
	}).(ResourceGroupCostManagementViewDatasetPtrOutput)
}

// One or more `aggregation` blocks as defined above.
func (o ResourceGroupCostManagementViewDatasetOutput) Aggregations() ResourceGroupCostManagementViewDatasetAggregationArrayOutput {
	return o.ApplyT(func(v ResourceGroupCostManagementViewDataset) []ResourceGroupCostManagementViewDatasetAggregation {
		return v.Aggregations
	}).(ResourceGroupCostManagementViewDatasetAggregationArrayOutput)
}

// The granularity of rows in the report. Possible values are `Daily` and `Monthly`.
func (o ResourceGroupCostManagementViewDatasetOutput) Granularity() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceGroupCostManagementViewDataset) string { return v.Granularity }).(pulumi.StringOutput)
}

// One or more `grouping` blocks as defined below.
func (o ResourceGroupCostManagementViewDatasetOutput) Groupings() ResourceGroupCostManagementViewDatasetGroupingArrayOutput {
	return o.ApplyT(func(v ResourceGroupCostManagementViewDataset) []ResourceGroupCostManagementViewDatasetGrouping {
		return v.Groupings
	}).(ResourceGroupCostManagementViewDatasetGroupingArrayOutput)
}

// One or more `sorting` blocks as defined below, containing the order by expression to be used in the report
func (o ResourceGroupCostManagementViewDatasetOutput) Sortings() ResourceGroupCostManagementViewDatasetSortingArrayOutput {
	return o.ApplyT(func(v ResourceGroupCostManagementViewDataset) []ResourceGroupCostManagementViewDatasetSorting {
		return v.Sortings
	}).(ResourceGroupCostManagementViewDatasetSortingArrayOutput)
}

type ResourceGroupCostManagementViewDatasetPtrOutput struct{ *pulumi.OutputState }

func (ResourceGroupCostManagementViewDatasetPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceGroupCostManagementViewDataset)(nil)).Elem()
}

func (o ResourceGroupCostManagementViewDatasetPtrOutput) ToResourceGroupCostManagementViewDatasetPtrOutput() ResourceGroupCostManagementViewDatasetPtrOutput {
	return o
}

func (o ResourceGroupCostManagementViewDatasetPtrOutput) ToResourceGroupCostManagementViewDatasetPtrOutputWithContext(ctx context.Context) ResourceGroupCostManagementViewDatasetPtrOutput {
	return o
}

func (o ResourceGroupCostManagementViewDatasetPtrOutput) Elem() ResourceGroupCostManagementViewDatasetOutput {
	return o.ApplyT(func(v *ResourceGroupCostManagementViewDataset) ResourceGroupCostManagementViewDataset {
		if v != nil {
			return *v
		}
		var ret ResourceGroupCostManagementViewDataset
		return ret
	}).(ResourceGroupCostManagementViewDatasetOutput)
}

// One or more `aggregation` blocks as defined above.
func (o ResourceGroupCostManagementViewDatasetPtrOutput) Aggregations() ResourceGroupCostManagementViewDatasetAggregationArrayOutput {
	return o.ApplyT(func(v *ResourceGroupCostManagementViewDataset) []ResourceGroupCostManagementViewDatasetAggregation {
		if v == nil {
			return nil
		}
		return v.Aggregations
	}).(ResourceGroupCostManagementViewDatasetAggregationArrayOutput)
}

// The granularity of rows in the report. Possible values are `Daily` and `Monthly`.
func (o ResourceGroupCostManagementViewDatasetPtrOutput) Granularity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceGroupCostManagementViewDataset) *string {
		if v == nil {
			return nil
		}
		return &v.Granularity
	}).(pulumi.StringPtrOutput)
}

// One or more `grouping` blocks as defined below.
func (o ResourceGroupCostManagementViewDatasetPtrOutput) Groupings() ResourceGroupCostManagementViewDatasetGroupingArrayOutput {
	return o.ApplyT(func(v *ResourceGroupCostManagementViewDataset) []ResourceGroupCostManagementViewDatasetGrouping {
		if v == nil {
			return nil
		}
		return v.Groupings
	}).(ResourceGroupCostManagementViewDatasetGroupingArrayOutput)
}

// One or more `sorting` blocks as defined below, containing the order by expression to be used in the report
func (o ResourceGroupCostManagementViewDatasetPtrOutput) Sortings() ResourceGroupCostManagementViewDatasetSortingArrayOutput {
	return o.ApplyT(func(v *ResourceGroupCostManagementViewDataset) []ResourceGroupCostManagementViewDatasetSorting {
		if v == nil {
			return nil
		}
		return v.Sortings
	}).(ResourceGroupCostManagementViewDatasetSortingArrayOutput)
}

type ResourceGroupCostManagementViewDatasetAggregation struct {
	// The name of the column to aggregate. Changing this forces a new Cost Management View for a Resource Group to be created.
	ColumnName string `pulumi:"columnName"`
	// The name which should be used for this aggregation. Changing this forces a new Cost Management View for a Resource Group to be created.
	Name string `pulumi:"name"`
}

// ResourceGroupCostManagementViewDatasetAggregationInput is an input type that accepts ResourceGroupCostManagementViewDatasetAggregationArgs and ResourceGroupCostManagementViewDatasetAggregationOutput values.
// You can construct a concrete instance of `ResourceGroupCostManagementViewDatasetAggregationInput` via:
//
//	ResourceGroupCostManagementViewDatasetAggregationArgs{...}
type ResourceGroupCostManagementViewDatasetAggregationInput interface {
	pulumi.Input

	ToResourceGroupCostManagementViewDatasetAggregationOutput() ResourceGroupCostManagementViewDatasetAggregationOutput
	ToResourceGroupCostManagementViewDatasetAggregationOutputWithContext(context.Context) ResourceGroupCostManagementViewDatasetAggregationOutput
}

type ResourceGroupCostManagementViewDatasetAggregationArgs struct {
	// The name of the column to aggregate. Changing this forces a new Cost Management View for a Resource Group to be created.
	ColumnName pulumi.StringInput `pulumi:"columnName"`
	// The name which should be used for this aggregation. Changing this forces a new Cost Management View for a Resource Group to be created.
	Name pulumi.StringInput `pulumi:"name"`
}

func (ResourceGroupCostManagementViewDatasetAggregationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceGroupCostManagementViewDatasetAggregation)(nil)).Elem()
}

func (i ResourceGroupCostManagementViewDatasetAggregationArgs) ToResourceGroupCostManagementViewDatasetAggregationOutput() ResourceGroupCostManagementViewDatasetAggregationOutput {
	return i.ToResourceGroupCostManagementViewDatasetAggregationOutputWithContext(context.Background())
}

func (i ResourceGroupCostManagementViewDatasetAggregationArgs) ToResourceGroupCostManagementViewDatasetAggregationOutputWithContext(ctx context.Context) ResourceGroupCostManagementViewDatasetAggregationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceGroupCostManagementViewDatasetAggregationOutput)
}

// ResourceGroupCostManagementViewDatasetAggregationArrayInput is an input type that accepts ResourceGroupCostManagementViewDatasetAggregationArray and ResourceGroupCostManagementViewDatasetAggregationArrayOutput values.
// You can construct a concrete instance of `ResourceGroupCostManagementViewDatasetAggregationArrayInput` via:
//
//	ResourceGroupCostManagementViewDatasetAggregationArray{ ResourceGroupCostManagementViewDatasetAggregationArgs{...} }
type ResourceGroupCostManagementViewDatasetAggregationArrayInput interface {
	pulumi.Input

	ToResourceGroupCostManagementViewDatasetAggregationArrayOutput() ResourceGroupCostManagementViewDatasetAggregationArrayOutput
	ToResourceGroupCostManagementViewDatasetAggregationArrayOutputWithContext(context.Context) ResourceGroupCostManagementViewDatasetAggregationArrayOutput
}

type ResourceGroupCostManagementViewDatasetAggregationArray []ResourceGroupCostManagementViewDatasetAggregationInput

func (ResourceGroupCostManagementViewDatasetAggregationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResourceGroupCostManagementViewDatasetAggregation)(nil)).Elem()
}

func (i ResourceGroupCostManagementViewDatasetAggregationArray) ToResourceGroupCostManagementViewDatasetAggregationArrayOutput() ResourceGroupCostManagementViewDatasetAggregationArrayOutput {
	return i.ToResourceGroupCostManagementViewDatasetAggregationArrayOutputWithContext(context.Background())
}

func (i ResourceGroupCostManagementViewDatasetAggregationArray) ToResourceGroupCostManagementViewDatasetAggregationArrayOutputWithContext(ctx context.Context) ResourceGroupCostManagementViewDatasetAggregationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceGroupCostManagementViewDatasetAggregationArrayOutput)
}

type ResourceGroupCostManagementViewDatasetAggregationOutput struct{ *pulumi.OutputState }

func (ResourceGroupCostManagementViewDatasetAggregationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceGroupCostManagementViewDatasetAggregation)(nil)).Elem()
}

func (o ResourceGroupCostManagementViewDatasetAggregationOutput) ToResourceGroupCostManagementViewDatasetAggregationOutput() ResourceGroupCostManagementViewDatasetAggregationOutput {
	return o
}

func (o ResourceGroupCostManagementViewDatasetAggregationOutput) ToResourceGroupCostManagementViewDatasetAggregationOutputWithContext(ctx context.Context) ResourceGroupCostManagementViewDatasetAggregationOutput {
	return o
}

// The name of the column to aggregate. Changing this forces a new Cost Management View for a Resource Group to be created.
func (o ResourceGroupCostManagementViewDatasetAggregationOutput) ColumnName() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceGroupCostManagementViewDatasetAggregation) string { return v.ColumnName }).(pulumi.StringOutput)
}

// The name which should be used for this aggregation. Changing this forces a new Cost Management View for a Resource Group to be created.
func (o ResourceGroupCostManagementViewDatasetAggregationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceGroupCostManagementViewDatasetAggregation) string { return v.Name }).(pulumi.StringOutput)
}

type ResourceGroupCostManagementViewDatasetAggregationArrayOutput struct{ *pulumi.OutputState }

func (ResourceGroupCostManagementViewDatasetAggregationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResourceGroupCostManagementViewDatasetAggregation)(nil)).Elem()
}

func (o ResourceGroupCostManagementViewDatasetAggregationArrayOutput) ToResourceGroupCostManagementViewDatasetAggregationArrayOutput() ResourceGroupCostManagementViewDatasetAggregationArrayOutput {
	return o
}

func (o ResourceGroupCostManagementViewDatasetAggregationArrayOutput) ToResourceGroupCostManagementViewDatasetAggregationArrayOutputWithContext(ctx context.Context) ResourceGroupCostManagementViewDatasetAggregationArrayOutput {
	return o
}

func (o ResourceGroupCostManagementViewDatasetAggregationArrayOutput) Index(i pulumi.IntInput) ResourceGroupCostManagementViewDatasetAggregationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ResourceGroupCostManagementViewDatasetAggregation {
		return vs[0].([]ResourceGroupCostManagementViewDatasetAggregation)[vs[1].(int)]
	}).(ResourceGroupCostManagementViewDatasetAggregationOutput)
}

type ResourceGroupCostManagementViewDatasetGrouping struct {
	// The name of the column to group.
	Name string `pulumi:"name"`
	// The type of the column. Possible values are `Dimension` and `TagKey`.
	Type string `pulumi:"type"`
}

// ResourceGroupCostManagementViewDatasetGroupingInput is an input type that accepts ResourceGroupCostManagementViewDatasetGroupingArgs and ResourceGroupCostManagementViewDatasetGroupingOutput values.
// You can construct a concrete instance of `ResourceGroupCostManagementViewDatasetGroupingInput` via:
//
//	ResourceGroupCostManagementViewDatasetGroupingArgs{...}
type ResourceGroupCostManagementViewDatasetGroupingInput interface {
	pulumi.Input

	ToResourceGroupCostManagementViewDatasetGroupingOutput() ResourceGroupCostManagementViewDatasetGroupingOutput
	ToResourceGroupCostManagementViewDatasetGroupingOutputWithContext(context.Context) ResourceGroupCostManagementViewDatasetGroupingOutput
}

type ResourceGroupCostManagementViewDatasetGroupingArgs struct {
	// The name of the column to group.
	Name pulumi.StringInput `pulumi:"name"`
	// The type of the column. Possible values are `Dimension` and `TagKey`.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ResourceGroupCostManagementViewDatasetGroupingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceGroupCostManagementViewDatasetGrouping)(nil)).Elem()
}

func (i ResourceGroupCostManagementViewDatasetGroupingArgs) ToResourceGroupCostManagementViewDatasetGroupingOutput() ResourceGroupCostManagementViewDatasetGroupingOutput {
	return i.ToResourceGroupCostManagementViewDatasetGroupingOutputWithContext(context.Background())
}

func (i ResourceGroupCostManagementViewDatasetGroupingArgs) ToResourceGroupCostManagementViewDatasetGroupingOutputWithContext(ctx context.Context) ResourceGroupCostManagementViewDatasetGroupingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceGroupCostManagementViewDatasetGroupingOutput)
}

// ResourceGroupCostManagementViewDatasetGroupingArrayInput is an input type that accepts ResourceGroupCostManagementViewDatasetGroupingArray and ResourceGroupCostManagementViewDatasetGroupingArrayOutput values.
// You can construct a concrete instance of `ResourceGroupCostManagementViewDatasetGroupingArrayInput` via:
//
//	ResourceGroupCostManagementViewDatasetGroupingArray{ ResourceGroupCostManagementViewDatasetGroupingArgs{...} }
type ResourceGroupCostManagementViewDatasetGroupingArrayInput interface {
	pulumi.Input

	ToResourceGroupCostManagementViewDatasetGroupingArrayOutput() ResourceGroupCostManagementViewDatasetGroupingArrayOutput
	ToResourceGroupCostManagementViewDatasetGroupingArrayOutputWithContext(context.Context) ResourceGroupCostManagementViewDatasetGroupingArrayOutput
}

type ResourceGroupCostManagementViewDatasetGroupingArray []ResourceGroupCostManagementViewDatasetGroupingInput

func (ResourceGroupCostManagementViewDatasetGroupingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResourceGroupCostManagementViewDatasetGrouping)(nil)).Elem()
}

func (i ResourceGroupCostManagementViewDatasetGroupingArray) ToResourceGroupCostManagementViewDatasetGroupingArrayOutput() ResourceGroupCostManagementViewDatasetGroupingArrayOutput {
	return i.ToResourceGroupCostManagementViewDatasetGroupingArrayOutputWithContext(context.Background())
}

func (i ResourceGroupCostManagementViewDatasetGroupingArray) ToResourceGroupCostManagementViewDatasetGroupingArrayOutputWithContext(ctx context.Context) ResourceGroupCostManagementViewDatasetGroupingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceGroupCostManagementViewDatasetGroupingArrayOutput)
}

type ResourceGroupCostManagementViewDatasetGroupingOutput struct{ *pulumi.OutputState }

func (ResourceGroupCostManagementViewDatasetGroupingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceGroupCostManagementViewDatasetGrouping)(nil)).Elem()
}

func (o ResourceGroupCostManagementViewDatasetGroupingOutput) ToResourceGroupCostManagementViewDatasetGroupingOutput() ResourceGroupCostManagementViewDatasetGroupingOutput {
	return o
}

func (o ResourceGroupCostManagementViewDatasetGroupingOutput) ToResourceGroupCostManagementViewDatasetGroupingOutputWithContext(ctx context.Context) ResourceGroupCostManagementViewDatasetGroupingOutput {
	return o
}

// The name of the column to group.
func (o ResourceGroupCostManagementViewDatasetGroupingOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceGroupCostManagementViewDatasetGrouping) string { return v.Name }).(pulumi.StringOutput)
}

// The type of the column. Possible values are `Dimension` and `TagKey`.
func (o ResourceGroupCostManagementViewDatasetGroupingOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceGroupCostManagementViewDatasetGrouping) string { return v.Type }).(pulumi.StringOutput)
}

type ResourceGroupCostManagementViewDatasetGroupingArrayOutput struct{ *pulumi.OutputState }

func (ResourceGroupCostManagementViewDatasetGroupingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResourceGroupCostManagementViewDatasetGrouping)(nil)).Elem()
}

func (o ResourceGroupCostManagementViewDatasetGroupingArrayOutput) ToResourceGroupCostManagementViewDatasetGroupingArrayOutput() ResourceGroupCostManagementViewDatasetGroupingArrayOutput {
	return o
}

func (o ResourceGroupCostManagementViewDatasetGroupingArrayOutput) ToResourceGroupCostManagementViewDatasetGroupingArrayOutputWithContext(ctx context.Context) ResourceGroupCostManagementViewDatasetGroupingArrayOutput {
	return o
}

func (o ResourceGroupCostManagementViewDatasetGroupingArrayOutput) Index(i pulumi.IntInput) ResourceGroupCostManagementViewDatasetGroupingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ResourceGroupCostManagementViewDatasetGrouping {
		return vs[0].([]ResourceGroupCostManagementViewDatasetGrouping)[vs[1].(int)]
	}).(ResourceGroupCostManagementViewDatasetGroupingOutput)
}

type ResourceGroupCostManagementViewDatasetSorting struct {
	// Direction of sort. Possible values are `Ascending` and `Descending`.
	Direction string `pulumi:"direction"`
	// The name of the column to sort.
	Name string `pulumi:"name"`
}

// ResourceGroupCostManagementViewDatasetSortingInput is an input type that accepts ResourceGroupCostManagementViewDatasetSortingArgs and ResourceGroupCostManagementViewDatasetSortingOutput values.
// You can construct a concrete instance of `ResourceGroupCostManagementViewDatasetSortingInput` via:
//
//	ResourceGroupCostManagementViewDatasetSortingArgs{...}
type ResourceGroupCostManagementViewDatasetSortingInput interface {
	pulumi.Input

	ToResourceGroupCostManagementViewDatasetSortingOutput() ResourceGroupCostManagementViewDatasetSortingOutput
	ToResourceGroupCostManagementViewDatasetSortingOutputWithContext(context.Context) ResourceGroupCostManagementViewDatasetSortingOutput
}

type ResourceGroupCostManagementViewDatasetSortingArgs struct {
	// Direction of sort. Possible values are `Ascending` and `Descending`.
	Direction pulumi.StringInput `pulumi:"direction"`
	// The name of the column to sort.
	Name pulumi.StringInput `pulumi:"name"`
}

func (ResourceGroupCostManagementViewDatasetSortingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceGroupCostManagementViewDatasetSorting)(nil)).Elem()
}

func (i ResourceGroupCostManagementViewDatasetSortingArgs) ToResourceGroupCostManagementViewDatasetSortingOutput() ResourceGroupCostManagementViewDatasetSortingOutput {
	return i.ToResourceGroupCostManagementViewDatasetSortingOutputWithContext(context.Background())
}

func (i ResourceGroupCostManagementViewDatasetSortingArgs) ToResourceGroupCostManagementViewDatasetSortingOutputWithContext(ctx context.Context) ResourceGroupCostManagementViewDatasetSortingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceGroupCostManagementViewDatasetSortingOutput)
}

// ResourceGroupCostManagementViewDatasetSortingArrayInput is an input type that accepts ResourceGroupCostManagementViewDatasetSortingArray and ResourceGroupCostManagementViewDatasetSortingArrayOutput values.
// You can construct a concrete instance of `ResourceGroupCostManagementViewDatasetSortingArrayInput` via:
//
//	ResourceGroupCostManagementViewDatasetSortingArray{ ResourceGroupCostManagementViewDatasetSortingArgs{...} }
type ResourceGroupCostManagementViewDatasetSortingArrayInput interface {
	pulumi.Input

	ToResourceGroupCostManagementViewDatasetSortingArrayOutput() ResourceGroupCostManagementViewDatasetSortingArrayOutput
	ToResourceGroupCostManagementViewDatasetSortingArrayOutputWithContext(context.Context) ResourceGroupCostManagementViewDatasetSortingArrayOutput
}

type ResourceGroupCostManagementViewDatasetSortingArray []ResourceGroupCostManagementViewDatasetSortingInput

func (ResourceGroupCostManagementViewDatasetSortingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResourceGroupCostManagementViewDatasetSorting)(nil)).Elem()
}

func (i ResourceGroupCostManagementViewDatasetSortingArray) ToResourceGroupCostManagementViewDatasetSortingArrayOutput() ResourceGroupCostManagementViewDatasetSortingArrayOutput {
	return i.ToResourceGroupCostManagementViewDatasetSortingArrayOutputWithContext(context.Background())
}

func (i ResourceGroupCostManagementViewDatasetSortingArray) ToResourceGroupCostManagementViewDatasetSortingArrayOutputWithContext(ctx context.Context) ResourceGroupCostManagementViewDatasetSortingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceGroupCostManagementViewDatasetSortingArrayOutput)
}

type ResourceGroupCostManagementViewDatasetSortingOutput struct{ *pulumi.OutputState }

func (ResourceGroupCostManagementViewDatasetSortingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceGroupCostManagementViewDatasetSorting)(nil)).Elem()
}

func (o ResourceGroupCostManagementViewDatasetSortingOutput) ToResourceGroupCostManagementViewDatasetSortingOutput() ResourceGroupCostManagementViewDatasetSortingOutput {
	return o
}

func (o ResourceGroupCostManagementViewDatasetSortingOutput) ToResourceGroupCostManagementViewDatasetSortingOutputWithContext(ctx context.Context) ResourceGroupCostManagementViewDatasetSortingOutput {
	return o
}

// Direction of sort. Possible values are `Ascending` and `Descending`.
func (o ResourceGroupCostManagementViewDatasetSortingOutput) Direction() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceGroupCostManagementViewDatasetSorting) string { return v.Direction }).(pulumi.StringOutput)
}

// The name of the column to sort.
func (o ResourceGroupCostManagementViewDatasetSortingOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceGroupCostManagementViewDatasetSorting) string { return v.Name }).(pulumi.StringOutput)
}

type ResourceGroupCostManagementViewDatasetSortingArrayOutput struct{ *pulumi.OutputState }

func (ResourceGroupCostManagementViewDatasetSortingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResourceGroupCostManagementViewDatasetSorting)(nil)).Elem()
}

func (o ResourceGroupCostManagementViewDatasetSortingArrayOutput) ToResourceGroupCostManagementViewDatasetSortingArrayOutput() ResourceGroupCostManagementViewDatasetSortingArrayOutput {
	return o
}

func (o ResourceGroupCostManagementViewDatasetSortingArrayOutput) ToResourceGroupCostManagementViewDatasetSortingArrayOutputWithContext(ctx context.Context) ResourceGroupCostManagementViewDatasetSortingArrayOutput {
	return o
}

func (o ResourceGroupCostManagementViewDatasetSortingArrayOutput) Index(i pulumi.IntInput) ResourceGroupCostManagementViewDatasetSortingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ResourceGroupCostManagementViewDatasetSorting {
		return vs[0].([]ResourceGroupCostManagementViewDatasetSorting)[vs[1].(int)]
	}).(ResourceGroupCostManagementViewDatasetSortingOutput)
}

type ResourceGroupCostManagementViewKpi struct {
	// KPI type. Possible values are `Budget` and `Forecast`.
	Type string `pulumi:"type"`
}

// ResourceGroupCostManagementViewKpiInput is an input type that accepts ResourceGroupCostManagementViewKpiArgs and ResourceGroupCostManagementViewKpiOutput values.
// You can construct a concrete instance of `ResourceGroupCostManagementViewKpiInput` via:
//
//	ResourceGroupCostManagementViewKpiArgs{...}
type ResourceGroupCostManagementViewKpiInput interface {
	pulumi.Input

	ToResourceGroupCostManagementViewKpiOutput() ResourceGroupCostManagementViewKpiOutput
	ToResourceGroupCostManagementViewKpiOutputWithContext(context.Context) ResourceGroupCostManagementViewKpiOutput
}

type ResourceGroupCostManagementViewKpiArgs struct {
	// KPI type. Possible values are `Budget` and `Forecast`.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ResourceGroupCostManagementViewKpiArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceGroupCostManagementViewKpi)(nil)).Elem()
}

func (i ResourceGroupCostManagementViewKpiArgs) ToResourceGroupCostManagementViewKpiOutput() ResourceGroupCostManagementViewKpiOutput {
	return i.ToResourceGroupCostManagementViewKpiOutputWithContext(context.Background())
}

func (i ResourceGroupCostManagementViewKpiArgs) ToResourceGroupCostManagementViewKpiOutputWithContext(ctx context.Context) ResourceGroupCostManagementViewKpiOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceGroupCostManagementViewKpiOutput)
}

// ResourceGroupCostManagementViewKpiArrayInput is an input type that accepts ResourceGroupCostManagementViewKpiArray and ResourceGroupCostManagementViewKpiArrayOutput values.
// You can construct a concrete instance of `ResourceGroupCostManagementViewKpiArrayInput` via:
//
//	ResourceGroupCostManagementViewKpiArray{ ResourceGroupCostManagementViewKpiArgs{...} }
type ResourceGroupCostManagementViewKpiArrayInput interface {
	pulumi.Input

	ToResourceGroupCostManagementViewKpiArrayOutput() ResourceGroupCostManagementViewKpiArrayOutput
	ToResourceGroupCostManagementViewKpiArrayOutputWithContext(context.Context) ResourceGroupCostManagementViewKpiArrayOutput
}

type ResourceGroupCostManagementViewKpiArray []ResourceGroupCostManagementViewKpiInput

func (ResourceGroupCostManagementViewKpiArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResourceGroupCostManagementViewKpi)(nil)).Elem()
}

func (i ResourceGroupCostManagementViewKpiArray) ToResourceGroupCostManagementViewKpiArrayOutput() ResourceGroupCostManagementViewKpiArrayOutput {
	return i.ToResourceGroupCostManagementViewKpiArrayOutputWithContext(context.Background())
}

func (i ResourceGroupCostManagementViewKpiArray) ToResourceGroupCostManagementViewKpiArrayOutputWithContext(ctx context.Context) ResourceGroupCostManagementViewKpiArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceGroupCostManagementViewKpiArrayOutput)
}

type ResourceGroupCostManagementViewKpiOutput struct{ *pulumi.OutputState }

func (ResourceGroupCostManagementViewKpiOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceGroupCostManagementViewKpi)(nil)).Elem()
}

func (o ResourceGroupCostManagementViewKpiOutput) ToResourceGroupCostManagementViewKpiOutput() ResourceGroupCostManagementViewKpiOutput {
	return o
}

func (o ResourceGroupCostManagementViewKpiOutput) ToResourceGroupCostManagementViewKpiOutputWithContext(ctx context.Context) ResourceGroupCostManagementViewKpiOutput {
	return o
}

// KPI type. Possible values are `Budget` and `Forecast`.
func (o ResourceGroupCostManagementViewKpiOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceGroupCostManagementViewKpi) string { return v.Type }).(pulumi.StringOutput)
}

type ResourceGroupCostManagementViewKpiArrayOutput struct{ *pulumi.OutputState }

func (ResourceGroupCostManagementViewKpiArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResourceGroupCostManagementViewKpi)(nil)).Elem()
}

func (o ResourceGroupCostManagementViewKpiArrayOutput) ToResourceGroupCostManagementViewKpiArrayOutput() ResourceGroupCostManagementViewKpiArrayOutput {
	return o
}

func (o ResourceGroupCostManagementViewKpiArrayOutput) ToResourceGroupCostManagementViewKpiArrayOutputWithContext(ctx context.Context) ResourceGroupCostManagementViewKpiArrayOutput {
	return o
}

func (o ResourceGroupCostManagementViewKpiArrayOutput) Index(i pulumi.IntInput) ResourceGroupCostManagementViewKpiOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ResourceGroupCostManagementViewKpi {
		return vs[0].([]ResourceGroupCostManagementViewKpi)[vs[1].(int)]
	}).(ResourceGroupCostManagementViewKpiOutput)
}

type ResourceGroupCostManagementViewPivot struct {
	// The name of the column which should be used for this sub-view in the Cost Analysis UI.
	Name string `pulumi:"name"`
	// The data type to show in this sub-view. Possible values are `Dimension` and `TagKey`.
	Type string `pulumi:"type"`
}

// ResourceGroupCostManagementViewPivotInput is an input type that accepts ResourceGroupCostManagementViewPivotArgs and ResourceGroupCostManagementViewPivotOutput values.
// You can construct a concrete instance of `ResourceGroupCostManagementViewPivotInput` via:
//
//	ResourceGroupCostManagementViewPivotArgs{...}
type ResourceGroupCostManagementViewPivotInput interface {
	pulumi.Input

	ToResourceGroupCostManagementViewPivotOutput() ResourceGroupCostManagementViewPivotOutput
	ToResourceGroupCostManagementViewPivotOutputWithContext(context.Context) ResourceGroupCostManagementViewPivotOutput
}

type ResourceGroupCostManagementViewPivotArgs struct {
	// The name of the column which should be used for this sub-view in the Cost Analysis UI.
	Name pulumi.StringInput `pulumi:"name"`
	// The data type to show in this sub-view. Possible values are `Dimension` and `TagKey`.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ResourceGroupCostManagementViewPivotArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceGroupCostManagementViewPivot)(nil)).Elem()
}

func (i ResourceGroupCostManagementViewPivotArgs) ToResourceGroupCostManagementViewPivotOutput() ResourceGroupCostManagementViewPivotOutput {
	return i.ToResourceGroupCostManagementViewPivotOutputWithContext(context.Background())
}

func (i ResourceGroupCostManagementViewPivotArgs) ToResourceGroupCostManagementViewPivotOutputWithContext(ctx context.Context) ResourceGroupCostManagementViewPivotOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceGroupCostManagementViewPivotOutput)
}

// ResourceGroupCostManagementViewPivotArrayInput is an input type that accepts ResourceGroupCostManagementViewPivotArray and ResourceGroupCostManagementViewPivotArrayOutput values.
// You can construct a concrete instance of `ResourceGroupCostManagementViewPivotArrayInput` via:
//
//	ResourceGroupCostManagementViewPivotArray{ ResourceGroupCostManagementViewPivotArgs{...} }
type ResourceGroupCostManagementViewPivotArrayInput interface {
	pulumi.Input

	ToResourceGroupCostManagementViewPivotArrayOutput() ResourceGroupCostManagementViewPivotArrayOutput
	ToResourceGroupCostManagementViewPivotArrayOutputWithContext(context.Context) ResourceGroupCostManagementViewPivotArrayOutput
}

type ResourceGroupCostManagementViewPivotArray []ResourceGroupCostManagementViewPivotInput

func (ResourceGroupCostManagementViewPivotArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResourceGroupCostManagementViewPivot)(nil)).Elem()
}

func (i ResourceGroupCostManagementViewPivotArray) ToResourceGroupCostManagementViewPivotArrayOutput() ResourceGroupCostManagementViewPivotArrayOutput {
	return i.ToResourceGroupCostManagementViewPivotArrayOutputWithContext(context.Background())
}

func (i ResourceGroupCostManagementViewPivotArray) ToResourceGroupCostManagementViewPivotArrayOutputWithContext(ctx context.Context) ResourceGroupCostManagementViewPivotArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceGroupCostManagementViewPivotArrayOutput)
}

type ResourceGroupCostManagementViewPivotOutput struct{ *pulumi.OutputState }

func (ResourceGroupCostManagementViewPivotOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceGroupCostManagementViewPivot)(nil)).Elem()
}

func (o ResourceGroupCostManagementViewPivotOutput) ToResourceGroupCostManagementViewPivotOutput() ResourceGroupCostManagementViewPivotOutput {
	return o
}

func (o ResourceGroupCostManagementViewPivotOutput) ToResourceGroupCostManagementViewPivotOutputWithContext(ctx context.Context) ResourceGroupCostManagementViewPivotOutput {
	return o
}

// The name of the column which should be used for this sub-view in the Cost Analysis UI.
func (o ResourceGroupCostManagementViewPivotOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceGroupCostManagementViewPivot) string { return v.Name }).(pulumi.StringOutput)
}

// The data type to show in this sub-view. Possible values are `Dimension` and `TagKey`.
func (o ResourceGroupCostManagementViewPivotOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceGroupCostManagementViewPivot) string { return v.Type }).(pulumi.StringOutput)
}

type ResourceGroupCostManagementViewPivotArrayOutput struct{ *pulumi.OutputState }

func (ResourceGroupCostManagementViewPivotArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResourceGroupCostManagementViewPivot)(nil)).Elem()
}

func (o ResourceGroupCostManagementViewPivotArrayOutput) ToResourceGroupCostManagementViewPivotArrayOutput() ResourceGroupCostManagementViewPivotArrayOutput {
	return o
}

func (o ResourceGroupCostManagementViewPivotArrayOutput) ToResourceGroupCostManagementViewPivotArrayOutputWithContext(ctx context.Context) ResourceGroupCostManagementViewPivotArrayOutput {
	return o
}

func (o ResourceGroupCostManagementViewPivotArrayOutput) Index(i pulumi.IntInput) ResourceGroupCostManagementViewPivotOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ResourceGroupCostManagementViewPivot {
		return vs[0].([]ResourceGroupCostManagementViewPivot)[vs[1].(int)]
	}).(ResourceGroupCostManagementViewPivotOutput)
}

type ResourceGroupPolicyAssignmentIdentity struct {
	// A list of User Managed Identity IDs which should be assigned to the Policy Definition.
	//
	// > **NOTE:** This is required when `type` is set to `UserAssigned`.
	IdentityIds []string `pulumi:"identityIds"`
	// The Principal ID of the Policy Assignment for this Resource Group.
	PrincipalId *string `pulumi:"principalId"`
	// The Tenant ID of the Policy Assignment for this Resource Group.
	TenantId *string `pulumi:"tenantId"`
	// The Type of Managed Identity which should be added to this Policy Definition. Possible values are `SystemAssigned` and `UserAssigned`.
	Type string `pulumi:"type"`
}

// ResourceGroupPolicyAssignmentIdentityInput is an input type that accepts ResourceGroupPolicyAssignmentIdentityArgs and ResourceGroupPolicyAssignmentIdentityOutput values.
// You can construct a concrete instance of `ResourceGroupPolicyAssignmentIdentityInput` via:
//
//	ResourceGroupPolicyAssignmentIdentityArgs{...}
type ResourceGroupPolicyAssignmentIdentityInput interface {
	pulumi.Input

	ToResourceGroupPolicyAssignmentIdentityOutput() ResourceGroupPolicyAssignmentIdentityOutput
	ToResourceGroupPolicyAssignmentIdentityOutputWithContext(context.Context) ResourceGroupPolicyAssignmentIdentityOutput
}

type ResourceGroupPolicyAssignmentIdentityArgs struct {
	// A list of User Managed Identity IDs which should be assigned to the Policy Definition.
	//
	// > **NOTE:** This is required when `type` is set to `UserAssigned`.
	IdentityIds pulumi.StringArrayInput `pulumi:"identityIds"`
	// The Principal ID of the Policy Assignment for this Resource Group.
	PrincipalId pulumi.StringPtrInput `pulumi:"principalId"`
	// The Tenant ID of the Policy Assignment for this Resource Group.
	TenantId pulumi.StringPtrInput `pulumi:"tenantId"`
	// The Type of Managed Identity which should be added to this Policy Definition. Possible values are `SystemAssigned` and `UserAssigned`.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ResourceGroupPolicyAssignmentIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceGroupPolicyAssignmentIdentity)(nil)).Elem()
}

func (i ResourceGroupPolicyAssignmentIdentityArgs) ToResourceGroupPolicyAssignmentIdentityOutput() ResourceGroupPolicyAssignmentIdentityOutput {
	return i.ToResourceGroupPolicyAssignmentIdentityOutputWithContext(context.Background())
}

func (i ResourceGroupPolicyAssignmentIdentityArgs) ToResourceGroupPolicyAssignmentIdentityOutputWithContext(ctx context.Context) ResourceGroupPolicyAssignmentIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceGroupPolicyAssignmentIdentityOutput)
}

func (i ResourceGroupPolicyAssignmentIdentityArgs) ToResourceGroupPolicyAssignmentIdentityPtrOutput() ResourceGroupPolicyAssignmentIdentityPtrOutput {
	return i.ToResourceGroupPolicyAssignmentIdentityPtrOutputWithContext(context.Background())
}

func (i ResourceGroupPolicyAssignmentIdentityArgs) ToResourceGroupPolicyAssignmentIdentityPtrOutputWithContext(ctx context.Context) ResourceGroupPolicyAssignmentIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceGroupPolicyAssignmentIdentityOutput).ToResourceGroupPolicyAssignmentIdentityPtrOutputWithContext(ctx)
}

// ResourceGroupPolicyAssignmentIdentityPtrInput is an input type that accepts ResourceGroupPolicyAssignmentIdentityArgs, ResourceGroupPolicyAssignmentIdentityPtr and ResourceGroupPolicyAssignmentIdentityPtrOutput values.
// You can construct a concrete instance of `ResourceGroupPolicyAssignmentIdentityPtrInput` via:
//
//	        ResourceGroupPolicyAssignmentIdentityArgs{...}
//
//	or:
//
//	        nil
type ResourceGroupPolicyAssignmentIdentityPtrInput interface {
	pulumi.Input

	ToResourceGroupPolicyAssignmentIdentityPtrOutput() ResourceGroupPolicyAssignmentIdentityPtrOutput
	ToResourceGroupPolicyAssignmentIdentityPtrOutputWithContext(context.Context) ResourceGroupPolicyAssignmentIdentityPtrOutput
}

type resourceGroupPolicyAssignmentIdentityPtrType ResourceGroupPolicyAssignmentIdentityArgs

func ResourceGroupPolicyAssignmentIdentityPtr(v *ResourceGroupPolicyAssignmentIdentityArgs) ResourceGroupPolicyAssignmentIdentityPtrInput {
	return (*resourceGroupPolicyAssignmentIdentityPtrType)(v)
}

func (*resourceGroupPolicyAssignmentIdentityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceGroupPolicyAssignmentIdentity)(nil)).Elem()
}

func (i *resourceGroupPolicyAssignmentIdentityPtrType) ToResourceGroupPolicyAssignmentIdentityPtrOutput() ResourceGroupPolicyAssignmentIdentityPtrOutput {
	return i.ToResourceGroupPolicyAssignmentIdentityPtrOutputWithContext(context.Background())
}

func (i *resourceGroupPolicyAssignmentIdentityPtrType) ToResourceGroupPolicyAssignmentIdentityPtrOutputWithContext(ctx context.Context) ResourceGroupPolicyAssignmentIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceGroupPolicyAssignmentIdentityPtrOutput)
}

type ResourceGroupPolicyAssignmentIdentityOutput struct{ *pulumi.OutputState }

func (ResourceGroupPolicyAssignmentIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceGroupPolicyAssignmentIdentity)(nil)).Elem()
}

func (o ResourceGroupPolicyAssignmentIdentityOutput) ToResourceGroupPolicyAssignmentIdentityOutput() ResourceGroupPolicyAssignmentIdentityOutput {
	return o
}

func (o ResourceGroupPolicyAssignmentIdentityOutput) ToResourceGroupPolicyAssignmentIdentityOutputWithContext(ctx context.Context) ResourceGroupPolicyAssignmentIdentityOutput {
	return o
}

func (o ResourceGroupPolicyAssignmentIdentityOutput) ToResourceGroupPolicyAssignmentIdentityPtrOutput() ResourceGroupPolicyAssignmentIdentityPtrOutput {
	return o.ToResourceGroupPolicyAssignmentIdentityPtrOutputWithContext(context.Background())
}

func (o ResourceGroupPolicyAssignmentIdentityOutput) ToResourceGroupPolicyAssignmentIdentityPtrOutputWithContext(ctx context.Context) ResourceGroupPolicyAssignmentIdentityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ResourceGroupPolicyAssignmentIdentity) *ResourceGroupPolicyAssignmentIdentity {
		return &v
	}).(ResourceGroupPolicyAssignmentIdentityPtrOutput)
}

// A list of User Managed Identity IDs which should be assigned to the Policy Definition.
//
// > **NOTE:** This is required when `type` is set to `UserAssigned`.
func (o ResourceGroupPolicyAssignmentIdentityOutput) IdentityIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ResourceGroupPolicyAssignmentIdentity) []string { return v.IdentityIds }).(pulumi.StringArrayOutput)
}

// The Principal ID of the Policy Assignment for this Resource Group.
func (o ResourceGroupPolicyAssignmentIdentityOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceGroupPolicyAssignmentIdentity) *string { return v.PrincipalId }).(pulumi.StringPtrOutput)
}

// The Tenant ID of the Policy Assignment for this Resource Group.
func (o ResourceGroupPolicyAssignmentIdentityOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceGroupPolicyAssignmentIdentity) *string { return v.TenantId }).(pulumi.StringPtrOutput)
}

// The Type of Managed Identity which should be added to this Policy Definition. Possible values are `SystemAssigned` and `UserAssigned`.
func (o ResourceGroupPolicyAssignmentIdentityOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceGroupPolicyAssignmentIdentity) string { return v.Type }).(pulumi.StringOutput)
}

type ResourceGroupPolicyAssignmentIdentityPtrOutput struct{ *pulumi.OutputState }

func (ResourceGroupPolicyAssignmentIdentityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceGroupPolicyAssignmentIdentity)(nil)).Elem()
}

func (o ResourceGroupPolicyAssignmentIdentityPtrOutput) ToResourceGroupPolicyAssignmentIdentityPtrOutput() ResourceGroupPolicyAssignmentIdentityPtrOutput {
	return o
}

func (o ResourceGroupPolicyAssignmentIdentityPtrOutput) ToResourceGroupPolicyAssignmentIdentityPtrOutputWithContext(ctx context.Context) ResourceGroupPolicyAssignmentIdentityPtrOutput {
	return o
}

func (o ResourceGroupPolicyAssignmentIdentityPtrOutput) Elem() ResourceGroupPolicyAssignmentIdentityOutput {
	return o.ApplyT(func(v *ResourceGroupPolicyAssignmentIdentity) ResourceGroupPolicyAssignmentIdentity {
		if v != nil {
			return *v
		}
		var ret ResourceGroupPolicyAssignmentIdentity
		return ret
	}).(ResourceGroupPolicyAssignmentIdentityOutput)
}

// A list of User Managed Identity IDs which should be assigned to the Policy Definition.
//
// > **NOTE:** This is required when `type` is set to `UserAssigned`.
func (o ResourceGroupPolicyAssignmentIdentityPtrOutput) IdentityIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ResourceGroupPolicyAssignmentIdentity) []string {
		if v == nil {
			return nil
		}
		return v.IdentityIds
	}).(pulumi.StringArrayOutput)
}

// The Principal ID of the Policy Assignment for this Resource Group.
func (o ResourceGroupPolicyAssignmentIdentityPtrOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceGroupPolicyAssignmentIdentity) *string {
		if v == nil {
			return nil
		}
		return v.PrincipalId
	}).(pulumi.StringPtrOutput)
}

// The Tenant ID of the Policy Assignment for this Resource Group.
func (o ResourceGroupPolicyAssignmentIdentityPtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceGroupPolicyAssignmentIdentity) *string {
		if v == nil {
			return nil
		}
		return v.TenantId
	}).(pulumi.StringPtrOutput)
}

// The Type of Managed Identity which should be added to this Policy Definition. Possible values are `SystemAssigned` and `UserAssigned`.
func (o ResourceGroupPolicyAssignmentIdentityPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceGroupPolicyAssignmentIdentity) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type ResourceGroupPolicyAssignmentNonComplianceMessage struct {
	// The non-compliance message text. When assigning policy sets (initiatives), unless `policyDefinitionReferenceId` is specified then this message will be the default for all policies.
	Content string `pulumi:"content"`
	// When assigning policy sets (initiatives), this is the ID of the policy definition that the non-compliance message applies to.
	PolicyDefinitionReferenceId *string `pulumi:"policyDefinitionReferenceId"`
}

// ResourceGroupPolicyAssignmentNonComplianceMessageInput is an input type that accepts ResourceGroupPolicyAssignmentNonComplianceMessageArgs and ResourceGroupPolicyAssignmentNonComplianceMessageOutput values.
// You can construct a concrete instance of `ResourceGroupPolicyAssignmentNonComplianceMessageInput` via:
//
//	ResourceGroupPolicyAssignmentNonComplianceMessageArgs{...}
type ResourceGroupPolicyAssignmentNonComplianceMessageInput interface {
	pulumi.Input

	ToResourceGroupPolicyAssignmentNonComplianceMessageOutput() ResourceGroupPolicyAssignmentNonComplianceMessageOutput
	ToResourceGroupPolicyAssignmentNonComplianceMessageOutputWithContext(context.Context) ResourceGroupPolicyAssignmentNonComplianceMessageOutput
}

type ResourceGroupPolicyAssignmentNonComplianceMessageArgs struct {
	// The non-compliance message text. When assigning policy sets (initiatives), unless `policyDefinitionReferenceId` is specified then this message will be the default for all policies.
	Content pulumi.StringInput `pulumi:"content"`
	// When assigning policy sets (initiatives), this is the ID of the policy definition that the non-compliance message applies to.
	PolicyDefinitionReferenceId pulumi.StringPtrInput `pulumi:"policyDefinitionReferenceId"`
}

func (ResourceGroupPolicyAssignmentNonComplianceMessageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceGroupPolicyAssignmentNonComplianceMessage)(nil)).Elem()
}

func (i ResourceGroupPolicyAssignmentNonComplianceMessageArgs) ToResourceGroupPolicyAssignmentNonComplianceMessageOutput() ResourceGroupPolicyAssignmentNonComplianceMessageOutput {
	return i.ToResourceGroupPolicyAssignmentNonComplianceMessageOutputWithContext(context.Background())
}

func (i ResourceGroupPolicyAssignmentNonComplianceMessageArgs) ToResourceGroupPolicyAssignmentNonComplianceMessageOutputWithContext(ctx context.Context) ResourceGroupPolicyAssignmentNonComplianceMessageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceGroupPolicyAssignmentNonComplianceMessageOutput)
}

// ResourceGroupPolicyAssignmentNonComplianceMessageArrayInput is an input type that accepts ResourceGroupPolicyAssignmentNonComplianceMessageArray and ResourceGroupPolicyAssignmentNonComplianceMessageArrayOutput values.
// You can construct a concrete instance of `ResourceGroupPolicyAssignmentNonComplianceMessageArrayInput` via:
//
//	ResourceGroupPolicyAssignmentNonComplianceMessageArray{ ResourceGroupPolicyAssignmentNonComplianceMessageArgs{...} }
type ResourceGroupPolicyAssignmentNonComplianceMessageArrayInput interface {
	pulumi.Input

	ToResourceGroupPolicyAssignmentNonComplianceMessageArrayOutput() ResourceGroupPolicyAssignmentNonComplianceMessageArrayOutput
	ToResourceGroupPolicyAssignmentNonComplianceMessageArrayOutputWithContext(context.Context) ResourceGroupPolicyAssignmentNonComplianceMessageArrayOutput
}

type ResourceGroupPolicyAssignmentNonComplianceMessageArray []ResourceGroupPolicyAssignmentNonComplianceMessageInput

func (ResourceGroupPolicyAssignmentNonComplianceMessageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResourceGroupPolicyAssignmentNonComplianceMessage)(nil)).Elem()
}

func (i ResourceGroupPolicyAssignmentNonComplianceMessageArray) ToResourceGroupPolicyAssignmentNonComplianceMessageArrayOutput() ResourceGroupPolicyAssignmentNonComplianceMessageArrayOutput {
	return i.ToResourceGroupPolicyAssignmentNonComplianceMessageArrayOutputWithContext(context.Background())
}

func (i ResourceGroupPolicyAssignmentNonComplianceMessageArray) ToResourceGroupPolicyAssignmentNonComplianceMessageArrayOutputWithContext(ctx context.Context) ResourceGroupPolicyAssignmentNonComplianceMessageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceGroupPolicyAssignmentNonComplianceMessageArrayOutput)
}

type ResourceGroupPolicyAssignmentNonComplianceMessageOutput struct{ *pulumi.OutputState }

func (ResourceGroupPolicyAssignmentNonComplianceMessageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceGroupPolicyAssignmentNonComplianceMessage)(nil)).Elem()
}

func (o ResourceGroupPolicyAssignmentNonComplianceMessageOutput) ToResourceGroupPolicyAssignmentNonComplianceMessageOutput() ResourceGroupPolicyAssignmentNonComplianceMessageOutput {
	return o
}

func (o ResourceGroupPolicyAssignmentNonComplianceMessageOutput) ToResourceGroupPolicyAssignmentNonComplianceMessageOutputWithContext(ctx context.Context) ResourceGroupPolicyAssignmentNonComplianceMessageOutput {
	return o
}

// The non-compliance message text. When assigning policy sets (initiatives), unless `policyDefinitionReferenceId` is specified then this message will be the default for all policies.
func (o ResourceGroupPolicyAssignmentNonComplianceMessageOutput) Content() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceGroupPolicyAssignmentNonComplianceMessage) string { return v.Content }).(pulumi.StringOutput)
}

// When assigning policy sets (initiatives), this is the ID of the policy definition that the non-compliance message applies to.
func (o ResourceGroupPolicyAssignmentNonComplianceMessageOutput) PolicyDefinitionReferenceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceGroupPolicyAssignmentNonComplianceMessage) *string {
		return v.PolicyDefinitionReferenceId
	}).(pulumi.StringPtrOutput)
}

type ResourceGroupPolicyAssignmentNonComplianceMessageArrayOutput struct{ *pulumi.OutputState }

func (ResourceGroupPolicyAssignmentNonComplianceMessageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResourceGroupPolicyAssignmentNonComplianceMessage)(nil)).Elem()
}

func (o ResourceGroupPolicyAssignmentNonComplianceMessageArrayOutput) ToResourceGroupPolicyAssignmentNonComplianceMessageArrayOutput() ResourceGroupPolicyAssignmentNonComplianceMessageArrayOutput {
	return o
}

func (o ResourceGroupPolicyAssignmentNonComplianceMessageArrayOutput) ToResourceGroupPolicyAssignmentNonComplianceMessageArrayOutputWithContext(ctx context.Context) ResourceGroupPolicyAssignmentNonComplianceMessageArrayOutput {
	return o
}

func (o ResourceGroupPolicyAssignmentNonComplianceMessageArrayOutput) Index(i pulumi.IntInput) ResourceGroupPolicyAssignmentNonComplianceMessageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ResourceGroupPolicyAssignmentNonComplianceMessage {
		return vs[0].([]ResourceGroupPolicyAssignmentNonComplianceMessage)[vs[1].(int)]
	}).(ResourceGroupPolicyAssignmentNonComplianceMessageOutput)
}

type ResourceGroupPolicyAssignmentOverride struct {
	// One or more `overrideSelector` block as defined below.
	Selectors []ResourceGroupPolicyAssignmentOverrideSelector `pulumi:"selectors"`
	// Specifies the value to override the policy property. Possible values for `policyEffect` override listed [policy effects](https://learn.microsoft.com/en-us/azure/governance/policy/concepts/effects).
	Value string `pulumi:"value"`
}

// ResourceGroupPolicyAssignmentOverrideInput is an input type that accepts ResourceGroupPolicyAssignmentOverrideArgs and ResourceGroupPolicyAssignmentOverrideOutput values.
// You can construct a concrete instance of `ResourceGroupPolicyAssignmentOverrideInput` via:
//
//	ResourceGroupPolicyAssignmentOverrideArgs{...}
type ResourceGroupPolicyAssignmentOverrideInput interface {
	pulumi.Input

	ToResourceGroupPolicyAssignmentOverrideOutput() ResourceGroupPolicyAssignmentOverrideOutput
	ToResourceGroupPolicyAssignmentOverrideOutputWithContext(context.Context) ResourceGroupPolicyAssignmentOverrideOutput
}

type ResourceGroupPolicyAssignmentOverrideArgs struct {
	// One or more `overrideSelector` block as defined below.
	Selectors ResourceGroupPolicyAssignmentOverrideSelectorArrayInput `pulumi:"selectors"`
	// Specifies the value to override the policy property. Possible values for `policyEffect` override listed [policy effects](https://learn.microsoft.com/en-us/azure/governance/policy/concepts/effects).
	Value pulumi.StringInput `pulumi:"value"`
}

func (ResourceGroupPolicyAssignmentOverrideArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceGroupPolicyAssignmentOverride)(nil)).Elem()
}

func (i ResourceGroupPolicyAssignmentOverrideArgs) ToResourceGroupPolicyAssignmentOverrideOutput() ResourceGroupPolicyAssignmentOverrideOutput {
	return i.ToResourceGroupPolicyAssignmentOverrideOutputWithContext(context.Background())
}

func (i ResourceGroupPolicyAssignmentOverrideArgs) ToResourceGroupPolicyAssignmentOverrideOutputWithContext(ctx context.Context) ResourceGroupPolicyAssignmentOverrideOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceGroupPolicyAssignmentOverrideOutput)
}

// ResourceGroupPolicyAssignmentOverrideArrayInput is an input type that accepts ResourceGroupPolicyAssignmentOverrideArray and ResourceGroupPolicyAssignmentOverrideArrayOutput values.
// You can construct a concrete instance of `ResourceGroupPolicyAssignmentOverrideArrayInput` via:
//
//	ResourceGroupPolicyAssignmentOverrideArray{ ResourceGroupPolicyAssignmentOverrideArgs{...} }
type ResourceGroupPolicyAssignmentOverrideArrayInput interface {
	pulumi.Input

	ToResourceGroupPolicyAssignmentOverrideArrayOutput() ResourceGroupPolicyAssignmentOverrideArrayOutput
	ToResourceGroupPolicyAssignmentOverrideArrayOutputWithContext(context.Context) ResourceGroupPolicyAssignmentOverrideArrayOutput
}

type ResourceGroupPolicyAssignmentOverrideArray []ResourceGroupPolicyAssignmentOverrideInput

func (ResourceGroupPolicyAssignmentOverrideArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResourceGroupPolicyAssignmentOverride)(nil)).Elem()
}

func (i ResourceGroupPolicyAssignmentOverrideArray) ToResourceGroupPolicyAssignmentOverrideArrayOutput() ResourceGroupPolicyAssignmentOverrideArrayOutput {
	return i.ToResourceGroupPolicyAssignmentOverrideArrayOutputWithContext(context.Background())
}

func (i ResourceGroupPolicyAssignmentOverrideArray) ToResourceGroupPolicyAssignmentOverrideArrayOutputWithContext(ctx context.Context) ResourceGroupPolicyAssignmentOverrideArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceGroupPolicyAssignmentOverrideArrayOutput)
}

type ResourceGroupPolicyAssignmentOverrideOutput struct{ *pulumi.OutputState }

func (ResourceGroupPolicyAssignmentOverrideOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceGroupPolicyAssignmentOverride)(nil)).Elem()
}

func (o ResourceGroupPolicyAssignmentOverrideOutput) ToResourceGroupPolicyAssignmentOverrideOutput() ResourceGroupPolicyAssignmentOverrideOutput {
	return o
}

func (o ResourceGroupPolicyAssignmentOverrideOutput) ToResourceGroupPolicyAssignmentOverrideOutputWithContext(ctx context.Context) ResourceGroupPolicyAssignmentOverrideOutput {
	return o
}

// One or more `overrideSelector` block as defined below.
func (o ResourceGroupPolicyAssignmentOverrideOutput) Selectors() ResourceGroupPolicyAssignmentOverrideSelectorArrayOutput {
	return o.ApplyT(func(v ResourceGroupPolicyAssignmentOverride) []ResourceGroupPolicyAssignmentOverrideSelector {
		return v.Selectors
	}).(ResourceGroupPolicyAssignmentOverrideSelectorArrayOutput)
}

// Specifies the value to override the policy property. Possible values for `policyEffect` override listed [policy effects](https://learn.microsoft.com/en-us/azure/governance/policy/concepts/effects).
func (o ResourceGroupPolicyAssignmentOverrideOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceGroupPolicyAssignmentOverride) string { return v.Value }).(pulumi.StringOutput)
}

type ResourceGroupPolicyAssignmentOverrideArrayOutput struct{ *pulumi.OutputState }

func (ResourceGroupPolicyAssignmentOverrideArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResourceGroupPolicyAssignmentOverride)(nil)).Elem()
}

func (o ResourceGroupPolicyAssignmentOverrideArrayOutput) ToResourceGroupPolicyAssignmentOverrideArrayOutput() ResourceGroupPolicyAssignmentOverrideArrayOutput {
	return o
}

func (o ResourceGroupPolicyAssignmentOverrideArrayOutput) ToResourceGroupPolicyAssignmentOverrideArrayOutputWithContext(ctx context.Context) ResourceGroupPolicyAssignmentOverrideArrayOutput {
	return o
}

func (o ResourceGroupPolicyAssignmentOverrideArrayOutput) Index(i pulumi.IntInput) ResourceGroupPolicyAssignmentOverrideOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ResourceGroupPolicyAssignmentOverride {
		return vs[0].([]ResourceGroupPolicyAssignmentOverride)[vs[1].(int)]
	}).(ResourceGroupPolicyAssignmentOverrideOutput)
}

type ResourceGroupPolicyAssignmentOverrideSelector struct {
	// Specify the list of policy reference id values to filter in. Cannot be used with `notIn`.
	Ins []string `pulumi:"ins"`
	// Specifies which characteristic will narrow down the set of evaluated resources. Possible values are `resourceLocation`, `resourceType` and `resourceWithoutLocation`.
	Kind *string `pulumi:"kind"`
	// Specify the list of policy reference id values to filter out. Cannot be used with `in`.
	NotIns []string `pulumi:"notIns"`
}

// ResourceGroupPolicyAssignmentOverrideSelectorInput is an input type that accepts ResourceGroupPolicyAssignmentOverrideSelectorArgs and ResourceGroupPolicyAssignmentOverrideSelectorOutput values.
// You can construct a concrete instance of `ResourceGroupPolicyAssignmentOverrideSelectorInput` via:
//
//	ResourceGroupPolicyAssignmentOverrideSelectorArgs{...}
type ResourceGroupPolicyAssignmentOverrideSelectorInput interface {
	pulumi.Input

	ToResourceGroupPolicyAssignmentOverrideSelectorOutput() ResourceGroupPolicyAssignmentOverrideSelectorOutput
	ToResourceGroupPolicyAssignmentOverrideSelectorOutputWithContext(context.Context) ResourceGroupPolicyAssignmentOverrideSelectorOutput
}

type ResourceGroupPolicyAssignmentOverrideSelectorArgs struct {
	// Specify the list of policy reference id values to filter in. Cannot be used with `notIn`.
	Ins pulumi.StringArrayInput `pulumi:"ins"`
	// Specifies which characteristic will narrow down the set of evaluated resources. Possible values are `resourceLocation`, `resourceType` and `resourceWithoutLocation`.
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Specify the list of policy reference id values to filter out. Cannot be used with `in`.
	NotIns pulumi.StringArrayInput `pulumi:"notIns"`
}

func (ResourceGroupPolicyAssignmentOverrideSelectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceGroupPolicyAssignmentOverrideSelector)(nil)).Elem()
}

func (i ResourceGroupPolicyAssignmentOverrideSelectorArgs) ToResourceGroupPolicyAssignmentOverrideSelectorOutput() ResourceGroupPolicyAssignmentOverrideSelectorOutput {
	return i.ToResourceGroupPolicyAssignmentOverrideSelectorOutputWithContext(context.Background())
}

func (i ResourceGroupPolicyAssignmentOverrideSelectorArgs) ToResourceGroupPolicyAssignmentOverrideSelectorOutputWithContext(ctx context.Context) ResourceGroupPolicyAssignmentOverrideSelectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceGroupPolicyAssignmentOverrideSelectorOutput)
}

// ResourceGroupPolicyAssignmentOverrideSelectorArrayInput is an input type that accepts ResourceGroupPolicyAssignmentOverrideSelectorArray and ResourceGroupPolicyAssignmentOverrideSelectorArrayOutput values.
// You can construct a concrete instance of `ResourceGroupPolicyAssignmentOverrideSelectorArrayInput` via:
//
//	ResourceGroupPolicyAssignmentOverrideSelectorArray{ ResourceGroupPolicyAssignmentOverrideSelectorArgs{...} }
type ResourceGroupPolicyAssignmentOverrideSelectorArrayInput interface {
	pulumi.Input

	ToResourceGroupPolicyAssignmentOverrideSelectorArrayOutput() ResourceGroupPolicyAssignmentOverrideSelectorArrayOutput
	ToResourceGroupPolicyAssignmentOverrideSelectorArrayOutputWithContext(context.Context) ResourceGroupPolicyAssignmentOverrideSelectorArrayOutput
}

type ResourceGroupPolicyAssignmentOverrideSelectorArray []ResourceGroupPolicyAssignmentOverrideSelectorInput

func (ResourceGroupPolicyAssignmentOverrideSelectorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResourceGroupPolicyAssignmentOverrideSelector)(nil)).Elem()
}

func (i ResourceGroupPolicyAssignmentOverrideSelectorArray) ToResourceGroupPolicyAssignmentOverrideSelectorArrayOutput() ResourceGroupPolicyAssignmentOverrideSelectorArrayOutput {
	return i.ToResourceGroupPolicyAssignmentOverrideSelectorArrayOutputWithContext(context.Background())
}

func (i ResourceGroupPolicyAssignmentOverrideSelectorArray) ToResourceGroupPolicyAssignmentOverrideSelectorArrayOutputWithContext(ctx context.Context) ResourceGroupPolicyAssignmentOverrideSelectorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceGroupPolicyAssignmentOverrideSelectorArrayOutput)
}

type ResourceGroupPolicyAssignmentOverrideSelectorOutput struct{ *pulumi.OutputState }

func (ResourceGroupPolicyAssignmentOverrideSelectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceGroupPolicyAssignmentOverrideSelector)(nil)).Elem()
}

func (o ResourceGroupPolicyAssignmentOverrideSelectorOutput) ToResourceGroupPolicyAssignmentOverrideSelectorOutput() ResourceGroupPolicyAssignmentOverrideSelectorOutput {
	return o
}

func (o ResourceGroupPolicyAssignmentOverrideSelectorOutput) ToResourceGroupPolicyAssignmentOverrideSelectorOutputWithContext(ctx context.Context) ResourceGroupPolicyAssignmentOverrideSelectorOutput {
	return o
}

// Specify the list of policy reference id values to filter in. Cannot be used with `notIn`.
func (o ResourceGroupPolicyAssignmentOverrideSelectorOutput) Ins() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ResourceGroupPolicyAssignmentOverrideSelector) []string { return v.Ins }).(pulumi.StringArrayOutput)
}

// Specifies which characteristic will narrow down the set of evaluated resources. Possible values are `resourceLocation`, `resourceType` and `resourceWithoutLocation`.
func (o ResourceGroupPolicyAssignmentOverrideSelectorOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceGroupPolicyAssignmentOverrideSelector) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Specify the list of policy reference id values to filter out. Cannot be used with `in`.
func (o ResourceGroupPolicyAssignmentOverrideSelectorOutput) NotIns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ResourceGroupPolicyAssignmentOverrideSelector) []string { return v.NotIns }).(pulumi.StringArrayOutput)
}

type ResourceGroupPolicyAssignmentOverrideSelectorArrayOutput struct{ *pulumi.OutputState }

func (ResourceGroupPolicyAssignmentOverrideSelectorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResourceGroupPolicyAssignmentOverrideSelector)(nil)).Elem()
}

func (o ResourceGroupPolicyAssignmentOverrideSelectorArrayOutput) ToResourceGroupPolicyAssignmentOverrideSelectorArrayOutput() ResourceGroupPolicyAssignmentOverrideSelectorArrayOutput {
	return o
}

func (o ResourceGroupPolicyAssignmentOverrideSelectorArrayOutput) ToResourceGroupPolicyAssignmentOverrideSelectorArrayOutputWithContext(ctx context.Context) ResourceGroupPolicyAssignmentOverrideSelectorArrayOutput {
	return o
}

func (o ResourceGroupPolicyAssignmentOverrideSelectorArrayOutput) Index(i pulumi.IntInput) ResourceGroupPolicyAssignmentOverrideSelectorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ResourceGroupPolicyAssignmentOverrideSelector {
		return vs[0].([]ResourceGroupPolicyAssignmentOverrideSelector)[vs[1].(int)]
	}).(ResourceGroupPolicyAssignmentOverrideSelectorOutput)
}

type ResourceGroupPolicyAssignmentResourceSelector struct {
	// Specifies a name for the resource selector.
	Name *string `pulumi:"name"`
	// One or more `resourceSelector` block as defined below.
	Selectors []ResourceGroupPolicyAssignmentResourceSelectorSelector `pulumi:"selectors"`
}

// ResourceGroupPolicyAssignmentResourceSelectorInput is an input type that accepts ResourceGroupPolicyAssignmentResourceSelectorArgs and ResourceGroupPolicyAssignmentResourceSelectorOutput values.
// You can construct a concrete instance of `ResourceGroupPolicyAssignmentResourceSelectorInput` via:
//
//	ResourceGroupPolicyAssignmentResourceSelectorArgs{...}
type ResourceGroupPolicyAssignmentResourceSelectorInput interface {
	pulumi.Input

	ToResourceGroupPolicyAssignmentResourceSelectorOutput() ResourceGroupPolicyAssignmentResourceSelectorOutput
	ToResourceGroupPolicyAssignmentResourceSelectorOutputWithContext(context.Context) ResourceGroupPolicyAssignmentResourceSelectorOutput
}

type ResourceGroupPolicyAssignmentResourceSelectorArgs struct {
	// Specifies a name for the resource selector.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// One or more `resourceSelector` block as defined below.
	Selectors ResourceGroupPolicyAssignmentResourceSelectorSelectorArrayInput `pulumi:"selectors"`
}

func (ResourceGroupPolicyAssignmentResourceSelectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceGroupPolicyAssignmentResourceSelector)(nil)).Elem()
}

func (i ResourceGroupPolicyAssignmentResourceSelectorArgs) ToResourceGroupPolicyAssignmentResourceSelectorOutput() ResourceGroupPolicyAssignmentResourceSelectorOutput {
	return i.ToResourceGroupPolicyAssignmentResourceSelectorOutputWithContext(context.Background())
}

func (i ResourceGroupPolicyAssignmentResourceSelectorArgs) ToResourceGroupPolicyAssignmentResourceSelectorOutputWithContext(ctx context.Context) ResourceGroupPolicyAssignmentResourceSelectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceGroupPolicyAssignmentResourceSelectorOutput)
}

// ResourceGroupPolicyAssignmentResourceSelectorArrayInput is an input type that accepts ResourceGroupPolicyAssignmentResourceSelectorArray and ResourceGroupPolicyAssignmentResourceSelectorArrayOutput values.
// You can construct a concrete instance of `ResourceGroupPolicyAssignmentResourceSelectorArrayInput` via:
//
//	ResourceGroupPolicyAssignmentResourceSelectorArray{ ResourceGroupPolicyAssignmentResourceSelectorArgs{...} }
type ResourceGroupPolicyAssignmentResourceSelectorArrayInput interface {
	pulumi.Input

	ToResourceGroupPolicyAssignmentResourceSelectorArrayOutput() ResourceGroupPolicyAssignmentResourceSelectorArrayOutput
	ToResourceGroupPolicyAssignmentResourceSelectorArrayOutputWithContext(context.Context) ResourceGroupPolicyAssignmentResourceSelectorArrayOutput
}

type ResourceGroupPolicyAssignmentResourceSelectorArray []ResourceGroupPolicyAssignmentResourceSelectorInput

func (ResourceGroupPolicyAssignmentResourceSelectorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResourceGroupPolicyAssignmentResourceSelector)(nil)).Elem()
}

func (i ResourceGroupPolicyAssignmentResourceSelectorArray) ToResourceGroupPolicyAssignmentResourceSelectorArrayOutput() ResourceGroupPolicyAssignmentResourceSelectorArrayOutput {
	return i.ToResourceGroupPolicyAssignmentResourceSelectorArrayOutputWithContext(context.Background())
}

func (i ResourceGroupPolicyAssignmentResourceSelectorArray) ToResourceGroupPolicyAssignmentResourceSelectorArrayOutputWithContext(ctx context.Context) ResourceGroupPolicyAssignmentResourceSelectorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceGroupPolicyAssignmentResourceSelectorArrayOutput)
}

type ResourceGroupPolicyAssignmentResourceSelectorOutput struct{ *pulumi.OutputState }

func (ResourceGroupPolicyAssignmentResourceSelectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceGroupPolicyAssignmentResourceSelector)(nil)).Elem()
}

func (o ResourceGroupPolicyAssignmentResourceSelectorOutput) ToResourceGroupPolicyAssignmentResourceSelectorOutput() ResourceGroupPolicyAssignmentResourceSelectorOutput {
	return o
}

func (o ResourceGroupPolicyAssignmentResourceSelectorOutput) ToResourceGroupPolicyAssignmentResourceSelectorOutputWithContext(ctx context.Context) ResourceGroupPolicyAssignmentResourceSelectorOutput {
	return o
}

// Specifies a name for the resource selector.
func (o ResourceGroupPolicyAssignmentResourceSelectorOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceGroupPolicyAssignmentResourceSelector) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// One or more `resourceSelector` block as defined below.
func (o ResourceGroupPolicyAssignmentResourceSelectorOutput) Selectors() ResourceGroupPolicyAssignmentResourceSelectorSelectorArrayOutput {
	return o.ApplyT(func(v ResourceGroupPolicyAssignmentResourceSelector) []ResourceGroupPolicyAssignmentResourceSelectorSelector {
		return v.Selectors
	}).(ResourceGroupPolicyAssignmentResourceSelectorSelectorArrayOutput)
}

type ResourceGroupPolicyAssignmentResourceSelectorArrayOutput struct{ *pulumi.OutputState }

func (ResourceGroupPolicyAssignmentResourceSelectorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResourceGroupPolicyAssignmentResourceSelector)(nil)).Elem()
}

func (o ResourceGroupPolicyAssignmentResourceSelectorArrayOutput) ToResourceGroupPolicyAssignmentResourceSelectorArrayOutput() ResourceGroupPolicyAssignmentResourceSelectorArrayOutput {
	return o
}

func (o ResourceGroupPolicyAssignmentResourceSelectorArrayOutput) ToResourceGroupPolicyAssignmentResourceSelectorArrayOutputWithContext(ctx context.Context) ResourceGroupPolicyAssignmentResourceSelectorArrayOutput {
	return o
}

func (o ResourceGroupPolicyAssignmentResourceSelectorArrayOutput) Index(i pulumi.IntInput) ResourceGroupPolicyAssignmentResourceSelectorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ResourceGroupPolicyAssignmentResourceSelector {
		return vs[0].([]ResourceGroupPolicyAssignmentResourceSelector)[vs[1].(int)]
	}).(ResourceGroupPolicyAssignmentResourceSelectorOutput)
}

type ResourceGroupPolicyAssignmentResourceSelectorSelector struct {
	// Specify the list of policy reference id values to filter in. Cannot be used with `notIn`.
	Ins []string `pulumi:"ins"`
	// Specifies which characteristic will narrow down the set of evaluated resources. Possible values are `resourceLocation`, `resourceType` and `resourceWithoutLocation`.
	Kind string `pulumi:"kind"`
	// Specify the list of policy reference id values to filter out. Cannot be used with `in`.
	NotIns []string `pulumi:"notIns"`
}

// ResourceGroupPolicyAssignmentResourceSelectorSelectorInput is an input type that accepts ResourceGroupPolicyAssignmentResourceSelectorSelectorArgs and ResourceGroupPolicyAssignmentResourceSelectorSelectorOutput values.
// You can construct a concrete instance of `ResourceGroupPolicyAssignmentResourceSelectorSelectorInput` via:
//
//	ResourceGroupPolicyAssignmentResourceSelectorSelectorArgs{...}
type ResourceGroupPolicyAssignmentResourceSelectorSelectorInput interface {
	pulumi.Input

	ToResourceGroupPolicyAssignmentResourceSelectorSelectorOutput() ResourceGroupPolicyAssignmentResourceSelectorSelectorOutput
	ToResourceGroupPolicyAssignmentResourceSelectorSelectorOutputWithContext(context.Context) ResourceGroupPolicyAssignmentResourceSelectorSelectorOutput
}

type ResourceGroupPolicyAssignmentResourceSelectorSelectorArgs struct {
	// Specify the list of policy reference id values to filter in. Cannot be used with `notIn`.
	Ins pulumi.StringArrayInput `pulumi:"ins"`
	// Specifies which characteristic will narrow down the set of evaluated resources. Possible values are `resourceLocation`, `resourceType` and `resourceWithoutLocation`.
	Kind pulumi.StringInput `pulumi:"kind"`
	// Specify the list of policy reference id values to filter out. Cannot be used with `in`.
	NotIns pulumi.StringArrayInput `pulumi:"notIns"`
}

func (ResourceGroupPolicyAssignmentResourceSelectorSelectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceGroupPolicyAssignmentResourceSelectorSelector)(nil)).Elem()
}

func (i ResourceGroupPolicyAssignmentResourceSelectorSelectorArgs) ToResourceGroupPolicyAssignmentResourceSelectorSelectorOutput() ResourceGroupPolicyAssignmentResourceSelectorSelectorOutput {
	return i.ToResourceGroupPolicyAssignmentResourceSelectorSelectorOutputWithContext(context.Background())
}

func (i ResourceGroupPolicyAssignmentResourceSelectorSelectorArgs) ToResourceGroupPolicyAssignmentResourceSelectorSelectorOutputWithContext(ctx context.Context) ResourceGroupPolicyAssignmentResourceSelectorSelectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceGroupPolicyAssignmentResourceSelectorSelectorOutput)
}

// ResourceGroupPolicyAssignmentResourceSelectorSelectorArrayInput is an input type that accepts ResourceGroupPolicyAssignmentResourceSelectorSelectorArray and ResourceGroupPolicyAssignmentResourceSelectorSelectorArrayOutput values.
// You can construct a concrete instance of `ResourceGroupPolicyAssignmentResourceSelectorSelectorArrayInput` via:
//
//	ResourceGroupPolicyAssignmentResourceSelectorSelectorArray{ ResourceGroupPolicyAssignmentResourceSelectorSelectorArgs{...} }
type ResourceGroupPolicyAssignmentResourceSelectorSelectorArrayInput interface {
	pulumi.Input

	ToResourceGroupPolicyAssignmentResourceSelectorSelectorArrayOutput() ResourceGroupPolicyAssignmentResourceSelectorSelectorArrayOutput
	ToResourceGroupPolicyAssignmentResourceSelectorSelectorArrayOutputWithContext(context.Context) ResourceGroupPolicyAssignmentResourceSelectorSelectorArrayOutput
}

type ResourceGroupPolicyAssignmentResourceSelectorSelectorArray []ResourceGroupPolicyAssignmentResourceSelectorSelectorInput

func (ResourceGroupPolicyAssignmentResourceSelectorSelectorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResourceGroupPolicyAssignmentResourceSelectorSelector)(nil)).Elem()
}

func (i ResourceGroupPolicyAssignmentResourceSelectorSelectorArray) ToResourceGroupPolicyAssignmentResourceSelectorSelectorArrayOutput() ResourceGroupPolicyAssignmentResourceSelectorSelectorArrayOutput {
	return i.ToResourceGroupPolicyAssignmentResourceSelectorSelectorArrayOutputWithContext(context.Background())
}

func (i ResourceGroupPolicyAssignmentResourceSelectorSelectorArray) ToResourceGroupPolicyAssignmentResourceSelectorSelectorArrayOutputWithContext(ctx context.Context) ResourceGroupPolicyAssignmentResourceSelectorSelectorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceGroupPolicyAssignmentResourceSelectorSelectorArrayOutput)
}

type ResourceGroupPolicyAssignmentResourceSelectorSelectorOutput struct{ *pulumi.OutputState }

func (ResourceGroupPolicyAssignmentResourceSelectorSelectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceGroupPolicyAssignmentResourceSelectorSelector)(nil)).Elem()
}

func (o ResourceGroupPolicyAssignmentResourceSelectorSelectorOutput) ToResourceGroupPolicyAssignmentResourceSelectorSelectorOutput() ResourceGroupPolicyAssignmentResourceSelectorSelectorOutput {
	return o
}

func (o ResourceGroupPolicyAssignmentResourceSelectorSelectorOutput) ToResourceGroupPolicyAssignmentResourceSelectorSelectorOutputWithContext(ctx context.Context) ResourceGroupPolicyAssignmentResourceSelectorSelectorOutput {
	return o
}

// Specify the list of policy reference id values to filter in. Cannot be used with `notIn`.
func (o ResourceGroupPolicyAssignmentResourceSelectorSelectorOutput) Ins() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ResourceGroupPolicyAssignmentResourceSelectorSelector) []string { return v.Ins }).(pulumi.StringArrayOutput)
}

// Specifies which characteristic will narrow down the set of evaluated resources. Possible values are `resourceLocation`, `resourceType` and `resourceWithoutLocation`.
func (o ResourceGroupPolicyAssignmentResourceSelectorSelectorOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceGroupPolicyAssignmentResourceSelectorSelector) string { return v.Kind }).(pulumi.StringOutput)
}

// Specify the list of policy reference id values to filter out. Cannot be used with `in`.
func (o ResourceGroupPolicyAssignmentResourceSelectorSelectorOutput) NotIns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ResourceGroupPolicyAssignmentResourceSelectorSelector) []string { return v.NotIns }).(pulumi.StringArrayOutput)
}

type ResourceGroupPolicyAssignmentResourceSelectorSelectorArrayOutput struct{ *pulumi.OutputState }

func (ResourceGroupPolicyAssignmentResourceSelectorSelectorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResourceGroupPolicyAssignmentResourceSelectorSelector)(nil)).Elem()
}

func (o ResourceGroupPolicyAssignmentResourceSelectorSelectorArrayOutput) ToResourceGroupPolicyAssignmentResourceSelectorSelectorArrayOutput() ResourceGroupPolicyAssignmentResourceSelectorSelectorArrayOutput {
	return o
}

func (o ResourceGroupPolicyAssignmentResourceSelectorSelectorArrayOutput) ToResourceGroupPolicyAssignmentResourceSelectorSelectorArrayOutputWithContext(ctx context.Context) ResourceGroupPolicyAssignmentResourceSelectorSelectorArrayOutput {
	return o
}

func (o ResourceGroupPolicyAssignmentResourceSelectorSelectorArrayOutput) Index(i pulumi.IntInput) ResourceGroupPolicyAssignmentResourceSelectorSelectorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ResourceGroupPolicyAssignmentResourceSelectorSelector {
		return vs[0].([]ResourceGroupPolicyAssignmentResourceSelectorSelector)[vs[1].(int)]
	}).(ResourceGroupPolicyAssignmentResourceSelectorSelectorOutput)
}

type ResourcePolicyAssignmentIdentity struct {
	// A list of User Managed Identity IDs which should be assigned to the Policy Definition.
	//
	// > **NOTE:** This is required when `type` is set to `UserAssigned`.
	IdentityIds []string `pulumi:"identityIds"`
	// The Principal ID of the Policy Assignment for this Resource.
	PrincipalId *string `pulumi:"principalId"`
	// The Tenant ID of the Policy Assignment for this Resource.
	TenantId *string `pulumi:"tenantId"`
	// The Type of Managed Identity which should be added to this Policy Definition. Possible values are `SystemAssigned` and `UserAssigned`.
	Type string `pulumi:"type"`
}

// ResourcePolicyAssignmentIdentityInput is an input type that accepts ResourcePolicyAssignmentIdentityArgs and ResourcePolicyAssignmentIdentityOutput values.
// You can construct a concrete instance of `ResourcePolicyAssignmentIdentityInput` via:
//
//	ResourcePolicyAssignmentIdentityArgs{...}
type ResourcePolicyAssignmentIdentityInput interface {
	pulumi.Input

	ToResourcePolicyAssignmentIdentityOutput() ResourcePolicyAssignmentIdentityOutput
	ToResourcePolicyAssignmentIdentityOutputWithContext(context.Context) ResourcePolicyAssignmentIdentityOutput
}

type ResourcePolicyAssignmentIdentityArgs struct {
	// A list of User Managed Identity IDs which should be assigned to the Policy Definition.
	//
	// > **NOTE:** This is required when `type` is set to `UserAssigned`.
	IdentityIds pulumi.StringArrayInput `pulumi:"identityIds"`
	// The Principal ID of the Policy Assignment for this Resource.
	PrincipalId pulumi.StringPtrInput `pulumi:"principalId"`
	// The Tenant ID of the Policy Assignment for this Resource.
	TenantId pulumi.StringPtrInput `pulumi:"tenantId"`
	// The Type of Managed Identity which should be added to this Policy Definition. Possible values are `SystemAssigned` and `UserAssigned`.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ResourcePolicyAssignmentIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourcePolicyAssignmentIdentity)(nil)).Elem()
}

func (i ResourcePolicyAssignmentIdentityArgs) ToResourcePolicyAssignmentIdentityOutput() ResourcePolicyAssignmentIdentityOutput {
	return i.ToResourcePolicyAssignmentIdentityOutputWithContext(context.Background())
}

func (i ResourcePolicyAssignmentIdentityArgs) ToResourcePolicyAssignmentIdentityOutputWithContext(ctx context.Context) ResourcePolicyAssignmentIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourcePolicyAssignmentIdentityOutput)
}

func (i ResourcePolicyAssignmentIdentityArgs) ToResourcePolicyAssignmentIdentityPtrOutput() ResourcePolicyAssignmentIdentityPtrOutput {
	return i.ToResourcePolicyAssignmentIdentityPtrOutputWithContext(context.Background())
}

func (i ResourcePolicyAssignmentIdentityArgs) ToResourcePolicyAssignmentIdentityPtrOutputWithContext(ctx context.Context) ResourcePolicyAssignmentIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourcePolicyAssignmentIdentityOutput).ToResourcePolicyAssignmentIdentityPtrOutputWithContext(ctx)
}

// ResourcePolicyAssignmentIdentityPtrInput is an input type that accepts ResourcePolicyAssignmentIdentityArgs, ResourcePolicyAssignmentIdentityPtr and ResourcePolicyAssignmentIdentityPtrOutput values.
// You can construct a concrete instance of `ResourcePolicyAssignmentIdentityPtrInput` via:
//
//	        ResourcePolicyAssignmentIdentityArgs{...}
//
//	or:
//
//	        nil
type ResourcePolicyAssignmentIdentityPtrInput interface {
	pulumi.Input

	ToResourcePolicyAssignmentIdentityPtrOutput() ResourcePolicyAssignmentIdentityPtrOutput
	ToResourcePolicyAssignmentIdentityPtrOutputWithContext(context.Context) ResourcePolicyAssignmentIdentityPtrOutput
}

type resourcePolicyAssignmentIdentityPtrType ResourcePolicyAssignmentIdentityArgs

func ResourcePolicyAssignmentIdentityPtr(v *ResourcePolicyAssignmentIdentityArgs) ResourcePolicyAssignmentIdentityPtrInput {
	return (*resourcePolicyAssignmentIdentityPtrType)(v)
}

func (*resourcePolicyAssignmentIdentityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourcePolicyAssignmentIdentity)(nil)).Elem()
}

func (i *resourcePolicyAssignmentIdentityPtrType) ToResourcePolicyAssignmentIdentityPtrOutput() ResourcePolicyAssignmentIdentityPtrOutput {
	return i.ToResourcePolicyAssignmentIdentityPtrOutputWithContext(context.Background())
}

func (i *resourcePolicyAssignmentIdentityPtrType) ToResourcePolicyAssignmentIdentityPtrOutputWithContext(ctx context.Context) ResourcePolicyAssignmentIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourcePolicyAssignmentIdentityPtrOutput)
}

type ResourcePolicyAssignmentIdentityOutput struct{ *pulumi.OutputState }

func (ResourcePolicyAssignmentIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourcePolicyAssignmentIdentity)(nil)).Elem()
}

func (o ResourcePolicyAssignmentIdentityOutput) ToResourcePolicyAssignmentIdentityOutput() ResourcePolicyAssignmentIdentityOutput {
	return o
}

func (o ResourcePolicyAssignmentIdentityOutput) ToResourcePolicyAssignmentIdentityOutputWithContext(ctx context.Context) ResourcePolicyAssignmentIdentityOutput {
	return o
}

func (o ResourcePolicyAssignmentIdentityOutput) ToResourcePolicyAssignmentIdentityPtrOutput() ResourcePolicyAssignmentIdentityPtrOutput {
	return o.ToResourcePolicyAssignmentIdentityPtrOutputWithContext(context.Background())
}

func (o ResourcePolicyAssignmentIdentityOutput) ToResourcePolicyAssignmentIdentityPtrOutputWithContext(ctx context.Context) ResourcePolicyAssignmentIdentityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ResourcePolicyAssignmentIdentity) *ResourcePolicyAssignmentIdentity {
		return &v
	}).(ResourcePolicyAssignmentIdentityPtrOutput)
}

// A list of User Managed Identity IDs which should be assigned to the Policy Definition.
//
// > **NOTE:** This is required when `type` is set to `UserAssigned`.
func (o ResourcePolicyAssignmentIdentityOutput) IdentityIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ResourcePolicyAssignmentIdentity) []string { return v.IdentityIds }).(pulumi.StringArrayOutput)
}

// The Principal ID of the Policy Assignment for this Resource.
func (o ResourcePolicyAssignmentIdentityOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourcePolicyAssignmentIdentity) *string { return v.PrincipalId }).(pulumi.StringPtrOutput)
}

// The Tenant ID of the Policy Assignment for this Resource.
func (o ResourcePolicyAssignmentIdentityOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourcePolicyAssignmentIdentity) *string { return v.TenantId }).(pulumi.StringPtrOutput)
}

// The Type of Managed Identity which should be added to this Policy Definition. Possible values are `SystemAssigned` and `UserAssigned`.
func (o ResourcePolicyAssignmentIdentityOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ResourcePolicyAssignmentIdentity) string { return v.Type }).(pulumi.StringOutput)
}

type ResourcePolicyAssignmentIdentityPtrOutput struct{ *pulumi.OutputState }

func (ResourcePolicyAssignmentIdentityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourcePolicyAssignmentIdentity)(nil)).Elem()
}

func (o ResourcePolicyAssignmentIdentityPtrOutput) ToResourcePolicyAssignmentIdentityPtrOutput() ResourcePolicyAssignmentIdentityPtrOutput {
	return o
}

func (o ResourcePolicyAssignmentIdentityPtrOutput) ToResourcePolicyAssignmentIdentityPtrOutputWithContext(ctx context.Context) ResourcePolicyAssignmentIdentityPtrOutput {
	return o
}

func (o ResourcePolicyAssignmentIdentityPtrOutput) Elem() ResourcePolicyAssignmentIdentityOutput {
	return o.ApplyT(func(v *ResourcePolicyAssignmentIdentity) ResourcePolicyAssignmentIdentity {
		if v != nil {
			return *v
		}
		var ret ResourcePolicyAssignmentIdentity
		return ret
	}).(ResourcePolicyAssignmentIdentityOutput)
}

// A list of User Managed Identity IDs which should be assigned to the Policy Definition.
//
// > **NOTE:** This is required when `type` is set to `UserAssigned`.
func (o ResourcePolicyAssignmentIdentityPtrOutput) IdentityIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ResourcePolicyAssignmentIdentity) []string {
		if v == nil {
			return nil
		}
		return v.IdentityIds
	}).(pulumi.StringArrayOutput)
}

// The Principal ID of the Policy Assignment for this Resource.
func (o ResourcePolicyAssignmentIdentityPtrOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourcePolicyAssignmentIdentity) *string {
		if v == nil {
			return nil
		}
		return v.PrincipalId
	}).(pulumi.StringPtrOutput)
}

// The Tenant ID of the Policy Assignment for this Resource.
func (o ResourcePolicyAssignmentIdentityPtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourcePolicyAssignmentIdentity) *string {
		if v == nil {
			return nil
		}
		return v.TenantId
	}).(pulumi.StringPtrOutput)
}

// The Type of Managed Identity which should be added to this Policy Definition. Possible values are `SystemAssigned` and `UserAssigned`.
func (o ResourcePolicyAssignmentIdentityPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourcePolicyAssignmentIdentity) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type ResourcePolicyAssignmentNonComplianceMessage struct {
	// The non-compliance message text. When assigning policy sets (initiatives), unless `policyDefinitionReferenceId` is specified then this message will be the default for all policies.
	Content string `pulumi:"content"`
	// When assigning policy sets (initiatives), this is the ID of the policy definition that the non-compliance message applies to.
	PolicyDefinitionReferenceId *string `pulumi:"policyDefinitionReferenceId"`
}

// ResourcePolicyAssignmentNonComplianceMessageInput is an input type that accepts ResourcePolicyAssignmentNonComplianceMessageArgs and ResourcePolicyAssignmentNonComplianceMessageOutput values.
// You can construct a concrete instance of `ResourcePolicyAssignmentNonComplianceMessageInput` via:
//
//	ResourcePolicyAssignmentNonComplianceMessageArgs{...}
type ResourcePolicyAssignmentNonComplianceMessageInput interface {
	pulumi.Input

	ToResourcePolicyAssignmentNonComplianceMessageOutput() ResourcePolicyAssignmentNonComplianceMessageOutput
	ToResourcePolicyAssignmentNonComplianceMessageOutputWithContext(context.Context) ResourcePolicyAssignmentNonComplianceMessageOutput
}

type ResourcePolicyAssignmentNonComplianceMessageArgs struct {
	// The non-compliance message text. When assigning policy sets (initiatives), unless `policyDefinitionReferenceId` is specified then this message will be the default for all policies.
	Content pulumi.StringInput `pulumi:"content"`
	// When assigning policy sets (initiatives), this is the ID of the policy definition that the non-compliance message applies to.
	PolicyDefinitionReferenceId pulumi.StringPtrInput `pulumi:"policyDefinitionReferenceId"`
}

func (ResourcePolicyAssignmentNonComplianceMessageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourcePolicyAssignmentNonComplianceMessage)(nil)).Elem()
}

func (i ResourcePolicyAssignmentNonComplianceMessageArgs) ToResourcePolicyAssignmentNonComplianceMessageOutput() ResourcePolicyAssignmentNonComplianceMessageOutput {
	return i.ToResourcePolicyAssignmentNonComplianceMessageOutputWithContext(context.Background())
}

func (i ResourcePolicyAssignmentNonComplianceMessageArgs) ToResourcePolicyAssignmentNonComplianceMessageOutputWithContext(ctx context.Context) ResourcePolicyAssignmentNonComplianceMessageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourcePolicyAssignmentNonComplianceMessageOutput)
}

// ResourcePolicyAssignmentNonComplianceMessageArrayInput is an input type that accepts ResourcePolicyAssignmentNonComplianceMessageArray and ResourcePolicyAssignmentNonComplianceMessageArrayOutput values.
// You can construct a concrete instance of `ResourcePolicyAssignmentNonComplianceMessageArrayInput` via:
//
//	ResourcePolicyAssignmentNonComplianceMessageArray{ ResourcePolicyAssignmentNonComplianceMessageArgs{...} }
type ResourcePolicyAssignmentNonComplianceMessageArrayInput interface {
	pulumi.Input

	ToResourcePolicyAssignmentNonComplianceMessageArrayOutput() ResourcePolicyAssignmentNonComplianceMessageArrayOutput
	ToResourcePolicyAssignmentNonComplianceMessageArrayOutputWithContext(context.Context) ResourcePolicyAssignmentNonComplianceMessageArrayOutput
}

type ResourcePolicyAssignmentNonComplianceMessageArray []ResourcePolicyAssignmentNonComplianceMessageInput

func (ResourcePolicyAssignmentNonComplianceMessageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResourcePolicyAssignmentNonComplianceMessage)(nil)).Elem()
}

func (i ResourcePolicyAssignmentNonComplianceMessageArray) ToResourcePolicyAssignmentNonComplianceMessageArrayOutput() ResourcePolicyAssignmentNonComplianceMessageArrayOutput {
	return i.ToResourcePolicyAssignmentNonComplianceMessageArrayOutputWithContext(context.Background())
}

func (i ResourcePolicyAssignmentNonComplianceMessageArray) ToResourcePolicyAssignmentNonComplianceMessageArrayOutputWithContext(ctx context.Context) ResourcePolicyAssignmentNonComplianceMessageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourcePolicyAssignmentNonComplianceMessageArrayOutput)
}

type ResourcePolicyAssignmentNonComplianceMessageOutput struct{ *pulumi.OutputState }

func (ResourcePolicyAssignmentNonComplianceMessageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourcePolicyAssignmentNonComplianceMessage)(nil)).Elem()
}

func (o ResourcePolicyAssignmentNonComplianceMessageOutput) ToResourcePolicyAssignmentNonComplianceMessageOutput() ResourcePolicyAssignmentNonComplianceMessageOutput {
	return o
}

func (o ResourcePolicyAssignmentNonComplianceMessageOutput) ToResourcePolicyAssignmentNonComplianceMessageOutputWithContext(ctx context.Context) ResourcePolicyAssignmentNonComplianceMessageOutput {
	return o
}

// The non-compliance message text. When assigning policy sets (initiatives), unless `policyDefinitionReferenceId` is specified then this message will be the default for all policies.
func (o ResourcePolicyAssignmentNonComplianceMessageOutput) Content() pulumi.StringOutput {
	return o.ApplyT(func(v ResourcePolicyAssignmentNonComplianceMessage) string { return v.Content }).(pulumi.StringOutput)
}

// When assigning policy sets (initiatives), this is the ID of the policy definition that the non-compliance message applies to.
func (o ResourcePolicyAssignmentNonComplianceMessageOutput) PolicyDefinitionReferenceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourcePolicyAssignmentNonComplianceMessage) *string { return v.PolicyDefinitionReferenceId }).(pulumi.StringPtrOutput)
}

type ResourcePolicyAssignmentNonComplianceMessageArrayOutput struct{ *pulumi.OutputState }

func (ResourcePolicyAssignmentNonComplianceMessageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResourcePolicyAssignmentNonComplianceMessage)(nil)).Elem()
}

func (o ResourcePolicyAssignmentNonComplianceMessageArrayOutput) ToResourcePolicyAssignmentNonComplianceMessageArrayOutput() ResourcePolicyAssignmentNonComplianceMessageArrayOutput {
	return o
}

func (o ResourcePolicyAssignmentNonComplianceMessageArrayOutput) ToResourcePolicyAssignmentNonComplianceMessageArrayOutputWithContext(ctx context.Context) ResourcePolicyAssignmentNonComplianceMessageArrayOutput {
	return o
}

func (o ResourcePolicyAssignmentNonComplianceMessageArrayOutput) Index(i pulumi.IntInput) ResourcePolicyAssignmentNonComplianceMessageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ResourcePolicyAssignmentNonComplianceMessage {
		return vs[0].([]ResourcePolicyAssignmentNonComplianceMessage)[vs[1].(int)]
	}).(ResourcePolicyAssignmentNonComplianceMessageOutput)
}

type ResourcePolicyAssignmentOverride struct {
	// One or more `overrideSelector` block as defined below.
	Selectors []ResourcePolicyAssignmentOverrideSelector `pulumi:"selectors"`
	// Specifies the value to override the policy property. Possible values for `policyEffect` override listed [policy effects](https://learn.microsoft.com/en-us/azure/governance/policy/concepts/effects).
	Value string `pulumi:"value"`
}

// ResourcePolicyAssignmentOverrideInput is an input type that accepts ResourcePolicyAssignmentOverrideArgs and ResourcePolicyAssignmentOverrideOutput values.
// You can construct a concrete instance of `ResourcePolicyAssignmentOverrideInput` via:
//
//	ResourcePolicyAssignmentOverrideArgs{...}
type ResourcePolicyAssignmentOverrideInput interface {
	pulumi.Input

	ToResourcePolicyAssignmentOverrideOutput() ResourcePolicyAssignmentOverrideOutput
	ToResourcePolicyAssignmentOverrideOutputWithContext(context.Context) ResourcePolicyAssignmentOverrideOutput
}

type ResourcePolicyAssignmentOverrideArgs struct {
	// One or more `overrideSelector` block as defined below.
	Selectors ResourcePolicyAssignmentOverrideSelectorArrayInput `pulumi:"selectors"`
	// Specifies the value to override the policy property. Possible values for `policyEffect` override listed [policy effects](https://learn.microsoft.com/en-us/azure/governance/policy/concepts/effects).
	Value pulumi.StringInput `pulumi:"value"`
}

func (ResourcePolicyAssignmentOverrideArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourcePolicyAssignmentOverride)(nil)).Elem()
}

func (i ResourcePolicyAssignmentOverrideArgs) ToResourcePolicyAssignmentOverrideOutput() ResourcePolicyAssignmentOverrideOutput {
	return i.ToResourcePolicyAssignmentOverrideOutputWithContext(context.Background())
}

func (i ResourcePolicyAssignmentOverrideArgs) ToResourcePolicyAssignmentOverrideOutputWithContext(ctx context.Context) ResourcePolicyAssignmentOverrideOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourcePolicyAssignmentOverrideOutput)
}

// ResourcePolicyAssignmentOverrideArrayInput is an input type that accepts ResourcePolicyAssignmentOverrideArray and ResourcePolicyAssignmentOverrideArrayOutput values.
// You can construct a concrete instance of `ResourcePolicyAssignmentOverrideArrayInput` via:
//
//	ResourcePolicyAssignmentOverrideArray{ ResourcePolicyAssignmentOverrideArgs{...} }
type ResourcePolicyAssignmentOverrideArrayInput interface {
	pulumi.Input

	ToResourcePolicyAssignmentOverrideArrayOutput() ResourcePolicyAssignmentOverrideArrayOutput
	ToResourcePolicyAssignmentOverrideArrayOutputWithContext(context.Context) ResourcePolicyAssignmentOverrideArrayOutput
}

type ResourcePolicyAssignmentOverrideArray []ResourcePolicyAssignmentOverrideInput

func (ResourcePolicyAssignmentOverrideArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResourcePolicyAssignmentOverride)(nil)).Elem()
}

func (i ResourcePolicyAssignmentOverrideArray) ToResourcePolicyAssignmentOverrideArrayOutput() ResourcePolicyAssignmentOverrideArrayOutput {
	return i.ToResourcePolicyAssignmentOverrideArrayOutputWithContext(context.Background())
}

func (i ResourcePolicyAssignmentOverrideArray) ToResourcePolicyAssignmentOverrideArrayOutputWithContext(ctx context.Context) ResourcePolicyAssignmentOverrideArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourcePolicyAssignmentOverrideArrayOutput)
}

type ResourcePolicyAssignmentOverrideOutput struct{ *pulumi.OutputState }

func (ResourcePolicyAssignmentOverrideOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourcePolicyAssignmentOverride)(nil)).Elem()
}

func (o ResourcePolicyAssignmentOverrideOutput) ToResourcePolicyAssignmentOverrideOutput() ResourcePolicyAssignmentOverrideOutput {
	return o
}

func (o ResourcePolicyAssignmentOverrideOutput) ToResourcePolicyAssignmentOverrideOutputWithContext(ctx context.Context) ResourcePolicyAssignmentOverrideOutput {
	return o
}

// One or more `overrideSelector` block as defined below.
func (o ResourcePolicyAssignmentOverrideOutput) Selectors() ResourcePolicyAssignmentOverrideSelectorArrayOutput {
	return o.ApplyT(func(v ResourcePolicyAssignmentOverride) []ResourcePolicyAssignmentOverrideSelector {
		return v.Selectors
	}).(ResourcePolicyAssignmentOverrideSelectorArrayOutput)
}

// Specifies the value to override the policy property. Possible values for `policyEffect` override listed [policy effects](https://learn.microsoft.com/en-us/azure/governance/policy/concepts/effects).
func (o ResourcePolicyAssignmentOverrideOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ResourcePolicyAssignmentOverride) string { return v.Value }).(pulumi.StringOutput)
}

type ResourcePolicyAssignmentOverrideArrayOutput struct{ *pulumi.OutputState }

func (ResourcePolicyAssignmentOverrideArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResourcePolicyAssignmentOverride)(nil)).Elem()
}

func (o ResourcePolicyAssignmentOverrideArrayOutput) ToResourcePolicyAssignmentOverrideArrayOutput() ResourcePolicyAssignmentOverrideArrayOutput {
	return o
}

func (o ResourcePolicyAssignmentOverrideArrayOutput) ToResourcePolicyAssignmentOverrideArrayOutputWithContext(ctx context.Context) ResourcePolicyAssignmentOverrideArrayOutput {
	return o
}

func (o ResourcePolicyAssignmentOverrideArrayOutput) Index(i pulumi.IntInput) ResourcePolicyAssignmentOverrideOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ResourcePolicyAssignmentOverride {
		return vs[0].([]ResourcePolicyAssignmentOverride)[vs[1].(int)]
	}).(ResourcePolicyAssignmentOverrideOutput)
}

type ResourcePolicyAssignmentOverrideSelector struct {
	// Specify the list of policy reference id values to filter in. Cannot be used with `notIn`.
	Ins []string `pulumi:"ins"`
	// Specifies which characteristic will narrow down the set of evaluated resources. Possible values are `resourceLocation`, `resourceType` and `resourceWithoutLocation`.
	Kind *string `pulumi:"kind"`
	// Specify the list of policy reference id values to filter out. Cannot be used with `in`.
	NotIns []string `pulumi:"notIns"`
}

// ResourcePolicyAssignmentOverrideSelectorInput is an input type that accepts ResourcePolicyAssignmentOverrideSelectorArgs and ResourcePolicyAssignmentOverrideSelectorOutput values.
// You can construct a concrete instance of `ResourcePolicyAssignmentOverrideSelectorInput` via:
//
//	ResourcePolicyAssignmentOverrideSelectorArgs{...}
type ResourcePolicyAssignmentOverrideSelectorInput interface {
	pulumi.Input

	ToResourcePolicyAssignmentOverrideSelectorOutput() ResourcePolicyAssignmentOverrideSelectorOutput
	ToResourcePolicyAssignmentOverrideSelectorOutputWithContext(context.Context) ResourcePolicyAssignmentOverrideSelectorOutput
}

type ResourcePolicyAssignmentOverrideSelectorArgs struct {
	// Specify the list of policy reference id values to filter in. Cannot be used with `notIn`.
	Ins pulumi.StringArrayInput `pulumi:"ins"`
	// Specifies which characteristic will narrow down the set of evaluated resources. Possible values are `resourceLocation`, `resourceType` and `resourceWithoutLocation`.
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Specify the list of policy reference id values to filter out. Cannot be used with `in`.
	NotIns pulumi.StringArrayInput `pulumi:"notIns"`
}

func (ResourcePolicyAssignmentOverrideSelectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourcePolicyAssignmentOverrideSelector)(nil)).Elem()
}

func (i ResourcePolicyAssignmentOverrideSelectorArgs) ToResourcePolicyAssignmentOverrideSelectorOutput() ResourcePolicyAssignmentOverrideSelectorOutput {
	return i.ToResourcePolicyAssignmentOverrideSelectorOutputWithContext(context.Background())
}

func (i ResourcePolicyAssignmentOverrideSelectorArgs) ToResourcePolicyAssignmentOverrideSelectorOutputWithContext(ctx context.Context) ResourcePolicyAssignmentOverrideSelectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourcePolicyAssignmentOverrideSelectorOutput)
}

// ResourcePolicyAssignmentOverrideSelectorArrayInput is an input type that accepts ResourcePolicyAssignmentOverrideSelectorArray and ResourcePolicyAssignmentOverrideSelectorArrayOutput values.
// You can construct a concrete instance of `ResourcePolicyAssignmentOverrideSelectorArrayInput` via:
//
//	ResourcePolicyAssignmentOverrideSelectorArray{ ResourcePolicyAssignmentOverrideSelectorArgs{...} }
type ResourcePolicyAssignmentOverrideSelectorArrayInput interface {
	pulumi.Input

	ToResourcePolicyAssignmentOverrideSelectorArrayOutput() ResourcePolicyAssignmentOverrideSelectorArrayOutput
	ToResourcePolicyAssignmentOverrideSelectorArrayOutputWithContext(context.Context) ResourcePolicyAssignmentOverrideSelectorArrayOutput
}

type ResourcePolicyAssignmentOverrideSelectorArray []ResourcePolicyAssignmentOverrideSelectorInput

func (ResourcePolicyAssignmentOverrideSelectorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResourcePolicyAssignmentOverrideSelector)(nil)).Elem()
}

func (i ResourcePolicyAssignmentOverrideSelectorArray) ToResourcePolicyAssignmentOverrideSelectorArrayOutput() ResourcePolicyAssignmentOverrideSelectorArrayOutput {
	return i.ToResourcePolicyAssignmentOverrideSelectorArrayOutputWithContext(context.Background())
}

func (i ResourcePolicyAssignmentOverrideSelectorArray) ToResourcePolicyAssignmentOverrideSelectorArrayOutputWithContext(ctx context.Context) ResourcePolicyAssignmentOverrideSelectorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourcePolicyAssignmentOverrideSelectorArrayOutput)
}

type ResourcePolicyAssignmentOverrideSelectorOutput struct{ *pulumi.OutputState }

func (ResourcePolicyAssignmentOverrideSelectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourcePolicyAssignmentOverrideSelector)(nil)).Elem()
}

func (o ResourcePolicyAssignmentOverrideSelectorOutput) ToResourcePolicyAssignmentOverrideSelectorOutput() ResourcePolicyAssignmentOverrideSelectorOutput {
	return o
}

func (o ResourcePolicyAssignmentOverrideSelectorOutput) ToResourcePolicyAssignmentOverrideSelectorOutputWithContext(ctx context.Context) ResourcePolicyAssignmentOverrideSelectorOutput {
	return o
}

// Specify the list of policy reference id values to filter in. Cannot be used with `notIn`.
func (o ResourcePolicyAssignmentOverrideSelectorOutput) Ins() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ResourcePolicyAssignmentOverrideSelector) []string { return v.Ins }).(pulumi.StringArrayOutput)
}

// Specifies which characteristic will narrow down the set of evaluated resources. Possible values are `resourceLocation`, `resourceType` and `resourceWithoutLocation`.
func (o ResourcePolicyAssignmentOverrideSelectorOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourcePolicyAssignmentOverrideSelector) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Specify the list of policy reference id values to filter out. Cannot be used with `in`.
func (o ResourcePolicyAssignmentOverrideSelectorOutput) NotIns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ResourcePolicyAssignmentOverrideSelector) []string { return v.NotIns }).(pulumi.StringArrayOutput)
}

type ResourcePolicyAssignmentOverrideSelectorArrayOutput struct{ *pulumi.OutputState }

func (ResourcePolicyAssignmentOverrideSelectorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResourcePolicyAssignmentOverrideSelector)(nil)).Elem()
}

func (o ResourcePolicyAssignmentOverrideSelectorArrayOutput) ToResourcePolicyAssignmentOverrideSelectorArrayOutput() ResourcePolicyAssignmentOverrideSelectorArrayOutput {
	return o
}

func (o ResourcePolicyAssignmentOverrideSelectorArrayOutput) ToResourcePolicyAssignmentOverrideSelectorArrayOutputWithContext(ctx context.Context) ResourcePolicyAssignmentOverrideSelectorArrayOutput {
	return o
}

func (o ResourcePolicyAssignmentOverrideSelectorArrayOutput) Index(i pulumi.IntInput) ResourcePolicyAssignmentOverrideSelectorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ResourcePolicyAssignmentOverrideSelector {
		return vs[0].([]ResourcePolicyAssignmentOverrideSelector)[vs[1].(int)]
	}).(ResourcePolicyAssignmentOverrideSelectorOutput)
}

type ResourcePolicyAssignmentResourceSelector struct {
	// Specifies a name for the resource selector.
	Name *string `pulumi:"name"`
	// One or more `resourceSelector` block as defined below.
	Selectors []ResourcePolicyAssignmentResourceSelectorSelector `pulumi:"selectors"`
}

// ResourcePolicyAssignmentResourceSelectorInput is an input type that accepts ResourcePolicyAssignmentResourceSelectorArgs and ResourcePolicyAssignmentResourceSelectorOutput values.
// You can construct a concrete instance of `ResourcePolicyAssignmentResourceSelectorInput` via:
//
//	ResourcePolicyAssignmentResourceSelectorArgs{...}
type ResourcePolicyAssignmentResourceSelectorInput interface {
	pulumi.Input

	ToResourcePolicyAssignmentResourceSelectorOutput() ResourcePolicyAssignmentResourceSelectorOutput
	ToResourcePolicyAssignmentResourceSelectorOutputWithContext(context.Context) ResourcePolicyAssignmentResourceSelectorOutput
}

type ResourcePolicyAssignmentResourceSelectorArgs struct {
	// Specifies a name for the resource selector.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// One or more `resourceSelector` block as defined below.
	Selectors ResourcePolicyAssignmentResourceSelectorSelectorArrayInput `pulumi:"selectors"`
}

func (ResourcePolicyAssignmentResourceSelectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourcePolicyAssignmentResourceSelector)(nil)).Elem()
}

func (i ResourcePolicyAssignmentResourceSelectorArgs) ToResourcePolicyAssignmentResourceSelectorOutput() ResourcePolicyAssignmentResourceSelectorOutput {
	return i.ToResourcePolicyAssignmentResourceSelectorOutputWithContext(context.Background())
}

func (i ResourcePolicyAssignmentResourceSelectorArgs) ToResourcePolicyAssignmentResourceSelectorOutputWithContext(ctx context.Context) ResourcePolicyAssignmentResourceSelectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourcePolicyAssignmentResourceSelectorOutput)
}

// ResourcePolicyAssignmentResourceSelectorArrayInput is an input type that accepts ResourcePolicyAssignmentResourceSelectorArray and ResourcePolicyAssignmentResourceSelectorArrayOutput values.
// You can construct a concrete instance of `ResourcePolicyAssignmentResourceSelectorArrayInput` via:
//
//	ResourcePolicyAssignmentResourceSelectorArray{ ResourcePolicyAssignmentResourceSelectorArgs{...} }
type ResourcePolicyAssignmentResourceSelectorArrayInput interface {
	pulumi.Input

	ToResourcePolicyAssignmentResourceSelectorArrayOutput() ResourcePolicyAssignmentResourceSelectorArrayOutput
	ToResourcePolicyAssignmentResourceSelectorArrayOutputWithContext(context.Context) ResourcePolicyAssignmentResourceSelectorArrayOutput
}

type ResourcePolicyAssignmentResourceSelectorArray []ResourcePolicyAssignmentResourceSelectorInput

func (ResourcePolicyAssignmentResourceSelectorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResourcePolicyAssignmentResourceSelector)(nil)).Elem()
}

func (i ResourcePolicyAssignmentResourceSelectorArray) ToResourcePolicyAssignmentResourceSelectorArrayOutput() ResourcePolicyAssignmentResourceSelectorArrayOutput {
	return i.ToResourcePolicyAssignmentResourceSelectorArrayOutputWithContext(context.Background())
}

func (i ResourcePolicyAssignmentResourceSelectorArray) ToResourcePolicyAssignmentResourceSelectorArrayOutputWithContext(ctx context.Context) ResourcePolicyAssignmentResourceSelectorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourcePolicyAssignmentResourceSelectorArrayOutput)
}

type ResourcePolicyAssignmentResourceSelectorOutput struct{ *pulumi.OutputState }

func (ResourcePolicyAssignmentResourceSelectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourcePolicyAssignmentResourceSelector)(nil)).Elem()
}

func (o ResourcePolicyAssignmentResourceSelectorOutput) ToResourcePolicyAssignmentResourceSelectorOutput() ResourcePolicyAssignmentResourceSelectorOutput {
	return o
}

func (o ResourcePolicyAssignmentResourceSelectorOutput) ToResourcePolicyAssignmentResourceSelectorOutputWithContext(ctx context.Context) ResourcePolicyAssignmentResourceSelectorOutput {
	return o
}

// Specifies a name for the resource selector.
func (o ResourcePolicyAssignmentResourceSelectorOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourcePolicyAssignmentResourceSelector) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// One or more `resourceSelector` block as defined below.
func (o ResourcePolicyAssignmentResourceSelectorOutput) Selectors() ResourcePolicyAssignmentResourceSelectorSelectorArrayOutput {
	return o.ApplyT(func(v ResourcePolicyAssignmentResourceSelector) []ResourcePolicyAssignmentResourceSelectorSelector {
		return v.Selectors
	}).(ResourcePolicyAssignmentResourceSelectorSelectorArrayOutput)
}

type ResourcePolicyAssignmentResourceSelectorArrayOutput struct{ *pulumi.OutputState }

func (ResourcePolicyAssignmentResourceSelectorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResourcePolicyAssignmentResourceSelector)(nil)).Elem()
}

func (o ResourcePolicyAssignmentResourceSelectorArrayOutput) ToResourcePolicyAssignmentResourceSelectorArrayOutput() ResourcePolicyAssignmentResourceSelectorArrayOutput {
	return o
}

func (o ResourcePolicyAssignmentResourceSelectorArrayOutput) ToResourcePolicyAssignmentResourceSelectorArrayOutputWithContext(ctx context.Context) ResourcePolicyAssignmentResourceSelectorArrayOutput {
	return o
}

func (o ResourcePolicyAssignmentResourceSelectorArrayOutput) Index(i pulumi.IntInput) ResourcePolicyAssignmentResourceSelectorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ResourcePolicyAssignmentResourceSelector {
		return vs[0].([]ResourcePolicyAssignmentResourceSelector)[vs[1].(int)]
	}).(ResourcePolicyAssignmentResourceSelectorOutput)
}

type ResourcePolicyAssignmentResourceSelectorSelector struct {
	// Specify the list of policy reference id values to filter in. Cannot be used with `notIn`.
	Ins []string `pulumi:"ins"`
	// Specifies which characteristic will narrow down the set of evaluated resources. Possible values are `resourceLocation`, `resourceType` and `resourceWithoutLocation`.
	Kind string `pulumi:"kind"`
	// Specify the list of policy reference id values to filter out. Cannot be used with `in`.
	NotIns []string `pulumi:"notIns"`
}

// ResourcePolicyAssignmentResourceSelectorSelectorInput is an input type that accepts ResourcePolicyAssignmentResourceSelectorSelectorArgs and ResourcePolicyAssignmentResourceSelectorSelectorOutput values.
// You can construct a concrete instance of `ResourcePolicyAssignmentResourceSelectorSelectorInput` via:
//
//	ResourcePolicyAssignmentResourceSelectorSelectorArgs{...}
type ResourcePolicyAssignmentResourceSelectorSelectorInput interface {
	pulumi.Input

	ToResourcePolicyAssignmentResourceSelectorSelectorOutput() ResourcePolicyAssignmentResourceSelectorSelectorOutput
	ToResourcePolicyAssignmentResourceSelectorSelectorOutputWithContext(context.Context) ResourcePolicyAssignmentResourceSelectorSelectorOutput
}

type ResourcePolicyAssignmentResourceSelectorSelectorArgs struct {
	// Specify the list of policy reference id values to filter in. Cannot be used with `notIn`.
	Ins pulumi.StringArrayInput `pulumi:"ins"`
	// Specifies which characteristic will narrow down the set of evaluated resources. Possible values are `resourceLocation`, `resourceType` and `resourceWithoutLocation`.
	Kind pulumi.StringInput `pulumi:"kind"`
	// Specify the list of policy reference id values to filter out. Cannot be used with `in`.
	NotIns pulumi.StringArrayInput `pulumi:"notIns"`
}

func (ResourcePolicyAssignmentResourceSelectorSelectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourcePolicyAssignmentResourceSelectorSelector)(nil)).Elem()
}

func (i ResourcePolicyAssignmentResourceSelectorSelectorArgs) ToResourcePolicyAssignmentResourceSelectorSelectorOutput() ResourcePolicyAssignmentResourceSelectorSelectorOutput {
	return i.ToResourcePolicyAssignmentResourceSelectorSelectorOutputWithContext(context.Background())
}

func (i ResourcePolicyAssignmentResourceSelectorSelectorArgs) ToResourcePolicyAssignmentResourceSelectorSelectorOutputWithContext(ctx context.Context) ResourcePolicyAssignmentResourceSelectorSelectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourcePolicyAssignmentResourceSelectorSelectorOutput)
}

// ResourcePolicyAssignmentResourceSelectorSelectorArrayInput is an input type that accepts ResourcePolicyAssignmentResourceSelectorSelectorArray and ResourcePolicyAssignmentResourceSelectorSelectorArrayOutput values.
// You can construct a concrete instance of `ResourcePolicyAssignmentResourceSelectorSelectorArrayInput` via:
//
//	ResourcePolicyAssignmentResourceSelectorSelectorArray{ ResourcePolicyAssignmentResourceSelectorSelectorArgs{...} }
type ResourcePolicyAssignmentResourceSelectorSelectorArrayInput interface {
	pulumi.Input

	ToResourcePolicyAssignmentResourceSelectorSelectorArrayOutput() ResourcePolicyAssignmentResourceSelectorSelectorArrayOutput
	ToResourcePolicyAssignmentResourceSelectorSelectorArrayOutputWithContext(context.Context) ResourcePolicyAssignmentResourceSelectorSelectorArrayOutput
}

type ResourcePolicyAssignmentResourceSelectorSelectorArray []ResourcePolicyAssignmentResourceSelectorSelectorInput

func (ResourcePolicyAssignmentResourceSelectorSelectorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResourcePolicyAssignmentResourceSelectorSelector)(nil)).Elem()
}

func (i ResourcePolicyAssignmentResourceSelectorSelectorArray) ToResourcePolicyAssignmentResourceSelectorSelectorArrayOutput() ResourcePolicyAssignmentResourceSelectorSelectorArrayOutput {
	return i.ToResourcePolicyAssignmentResourceSelectorSelectorArrayOutputWithContext(context.Background())
}

func (i ResourcePolicyAssignmentResourceSelectorSelectorArray) ToResourcePolicyAssignmentResourceSelectorSelectorArrayOutputWithContext(ctx context.Context) ResourcePolicyAssignmentResourceSelectorSelectorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourcePolicyAssignmentResourceSelectorSelectorArrayOutput)
}

type ResourcePolicyAssignmentResourceSelectorSelectorOutput struct{ *pulumi.OutputState }

func (ResourcePolicyAssignmentResourceSelectorSelectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourcePolicyAssignmentResourceSelectorSelector)(nil)).Elem()
}

func (o ResourcePolicyAssignmentResourceSelectorSelectorOutput) ToResourcePolicyAssignmentResourceSelectorSelectorOutput() ResourcePolicyAssignmentResourceSelectorSelectorOutput {
	return o
}

func (o ResourcePolicyAssignmentResourceSelectorSelectorOutput) ToResourcePolicyAssignmentResourceSelectorSelectorOutputWithContext(ctx context.Context) ResourcePolicyAssignmentResourceSelectorSelectorOutput {
	return o
}

// Specify the list of policy reference id values to filter in. Cannot be used with `notIn`.
func (o ResourcePolicyAssignmentResourceSelectorSelectorOutput) Ins() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ResourcePolicyAssignmentResourceSelectorSelector) []string { return v.Ins }).(pulumi.StringArrayOutput)
}

// Specifies which characteristic will narrow down the set of evaluated resources. Possible values are `resourceLocation`, `resourceType` and `resourceWithoutLocation`.
func (o ResourcePolicyAssignmentResourceSelectorSelectorOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v ResourcePolicyAssignmentResourceSelectorSelector) string { return v.Kind }).(pulumi.StringOutput)
}

// Specify the list of policy reference id values to filter out. Cannot be used with `in`.
func (o ResourcePolicyAssignmentResourceSelectorSelectorOutput) NotIns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ResourcePolicyAssignmentResourceSelectorSelector) []string { return v.NotIns }).(pulumi.StringArrayOutput)
}

type ResourcePolicyAssignmentResourceSelectorSelectorArrayOutput struct{ *pulumi.OutputState }

func (ResourcePolicyAssignmentResourceSelectorSelectorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResourcePolicyAssignmentResourceSelectorSelector)(nil)).Elem()
}

func (o ResourcePolicyAssignmentResourceSelectorSelectorArrayOutput) ToResourcePolicyAssignmentResourceSelectorSelectorArrayOutput() ResourcePolicyAssignmentResourceSelectorSelectorArrayOutput {
	return o
}

func (o ResourcePolicyAssignmentResourceSelectorSelectorArrayOutput) ToResourcePolicyAssignmentResourceSelectorSelectorArrayOutputWithContext(ctx context.Context) ResourcePolicyAssignmentResourceSelectorSelectorArrayOutput {
	return o
}

func (o ResourcePolicyAssignmentResourceSelectorSelectorArrayOutput) Index(i pulumi.IntInput) ResourcePolicyAssignmentResourceSelectorSelectorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ResourcePolicyAssignmentResourceSelectorSelector {
		return vs[0].([]ResourcePolicyAssignmentResourceSelectorSelector)[vs[1].(int)]
	}).(ResourcePolicyAssignmentResourceSelectorSelectorOutput)
}

type ResourceProviderRegistrationFeature struct {
	Name string `pulumi:"name"`
	// Should this feature be Registered or Unregistered?
	Registered bool `pulumi:"registered"`
}

// ResourceProviderRegistrationFeatureInput is an input type that accepts ResourceProviderRegistrationFeatureArgs and ResourceProviderRegistrationFeatureOutput values.
// You can construct a concrete instance of `ResourceProviderRegistrationFeatureInput` via:
//
//	ResourceProviderRegistrationFeatureArgs{...}
type ResourceProviderRegistrationFeatureInput interface {
	pulumi.Input

	ToResourceProviderRegistrationFeatureOutput() ResourceProviderRegistrationFeatureOutput
	ToResourceProviderRegistrationFeatureOutputWithContext(context.Context) ResourceProviderRegistrationFeatureOutput
}

type ResourceProviderRegistrationFeatureArgs struct {
	Name pulumi.StringInput `pulumi:"name"`
	// Should this feature be Registered or Unregistered?
	Registered pulumi.BoolInput `pulumi:"registered"`
}

func (ResourceProviderRegistrationFeatureArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceProviderRegistrationFeature)(nil)).Elem()
}

func (i ResourceProviderRegistrationFeatureArgs) ToResourceProviderRegistrationFeatureOutput() ResourceProviderRegistrationFeatureOutput {
	return i.ToResourceProviderRegistrationFeatureOutputWithContext(context.Background())
}

func (i ResourceProviderRegistrationFeatureArgs) ToResourceProviderRegistrationFeatureOutputWithContext(ctx context.Context) ResourceProviderRegistrationFeatureOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceProviderRegistrationFeatureOutput)
}

// ResourceProviderRegistrationFeatureArrayInput is an input type that accepts ResourceProviderRegistrationFeatureArray and ResourceProviderRegistrationFeatureArrayOutput values.
// You can construct a concrete instance of `ResourceProviderRegistrationFeatureArrayInput` via:
//
//	ResourceProviderRegistrationFeatureArray{ ResourceProviderRegistrationFeatureArgs{...} }
type ResourceProviderRegistrationFeatureArrayInput interface {
	pulumi.Input

	ToResourceProviderRegistrationFeatureArrayOutput() ResourceProviderRegistrationFeatureArrayOutput
	ToResourceProviderRegistrationFeatureArrayOutputWithContext(context.Context) ResourceProviderRegistrationFeatureArrayOutput
}

type ResourceProviderRegistrationFeatureArray []ResourceProviderRegistrationFeatureInput

func (ResourceProviderRegistrationFeatureArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResourceProviderRegistrationFeature)(nil)).Elem()
}

func (i ResourceProviderRegistrationFeatureArray) ToResourceProviderRegistrationFeatureArrayOutput() ResourceProviderRegistrationFeatureArrayOutput {
	return i.ToResourceProviderRegistrationFeatureArrayOutputWithContext(context.Background())
}

func (i ResourceProviderRegistrationFeatureArray) ToResourceProviderRegistrationFeatureArrayOutputWithContext(ctx context.Context) ResourceProviderRegistrationFeatureArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceProviderRegistrationFeatureArrayOutput)
}

type ResourceProviderRegistrationFeatureOutput struct{ *pulumi.OutputState }

func (ResourceProviderRegistrationFeatureOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceProviderRegistrationFeature)(nil)).Elem()
}

func (o ResourceProviderRegistrationFeatureOutput) ToResourceProviderRegistrationFeatureOutput() ResourceProviderRegistrationFeatureOutput {
	return o
}

func (o ResourceProviderRegistrationFeatureOutput) ToResourceProviderRegistrationFeatureOutputWithContext(ctx context.Context) ResourceProviderRegistrationFeatureOutput {
	return o
}

func (o ResourceProviderRegistrationFeatureOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceProviderRegistrationFeature) string { return v.Name }).(pulumi.StringOutput)
}

// Should this feature be Registered or Unregistered?
func (o ResourceProviderRegistrationFeatureOutput) Registered() pulumi.BoolOutput {
	return o.ApplyT(func(v ResourceProviderRegistrationFeature) bool { return v.Registered }).(pulumi.BoolOutput)
}

type ResourceProviderRegistrationFeatureArrayOutput struct{ *pulumi.OutputState }

func (ResourceProviderRegistrationFeatureArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResourceProviderRegistrationFeature)(nil)).Elem()
}

func (o ResourceProviderRegistrationFeatureArrayOutput) ToResourceProviderRegistrationFeatureArrayOutput() ResourceProviderRegistrationFeatureArrayOutput {
	return o
}

func (o ResourceProviderRegistrationFeatureArrayOutput) ToResourceProviderRegistrationFeatureArrayOutputWithContext(ctx context.Context) ResourceProviderRegistrationFeatureArrayOutput {
	return o
}

func (o ResourceProviderRegistrationFeatureArrayOutput) Index(i pulumi.IntInput) ResourceProviderRegistrationFeatureOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ResourceProviderRegistrationFeature {
		return vs[0].([]ResourceProviderRegistrationFeature)[vs[1].(int)]
	}).(ResourceProviderRegistrationFeatureOutput)
}

type SubscriptionCostManagementExportExportDataOptions struct {
	// The time frame for pulling data for the query. If custom, then a specific time period must be provided. Possible values include: `WeekToDate`, `MonthToDate`, `BillingMonthToDate`, `TheLast7Days`, `TheLastMonth`, `TheLastBillingMonth`, `Custom`.
	TimeFrame string `pulumi:"timeFrame"`
	// The type of the query. Possible values are `ActualCost`, `AmortizedCost` and `Usage`.
	Type string `pulumi:"type"`
}

// SubscriptionCostManagementExportExportDataOptionsInput is an input type that accepts SubscriptionCostManagementExportExportDataOptionsArgs and SubscriptionCostManagementExportExportDataOptionsOutput values.
// You can construct a concrete instance of `SubscriptionCostManagementExportExportDataOptionsInput` via:
//
//	SubscriptionCostManagementExportExportDataOptionsArgs{...}
type SubscriptionCostManagementExportExportDataOptionsInput interface {
	pulumi.Input

	ToSubscriptionCostManagementExportExportDataOptionsOutput() SubscriptionCostManagementExportExportDataOptionsOutput
	ToSubscriptionCostManagementExportExportDataOptionsOutputWithContext(context.Context) SubscriptionCostManagementExportExportDataOptionsOutput
}

type SubscriptionCostManagementExportExportDataOptionsArgs struct {
	// The time frame for pulling data for the query. If custom, then a specific time period must be provided. Possible values include: `WeekToDate`, `MonthToDate`, `BillingMonthToDate`, `TheLast7Days`, `TheLastMonth`, `TheLastBillingMonth`, `Custom`.
	TimeFrame pulumi.StringInput `pulumi:"timeFrame"`
	// The type of the query. Possible values are `ActualCost`, `AmortizedCost` and `Usage`.
	Type pulumi.StringInput `pulumi:"type"`
}

func (SubscriptionCostManagementExportExportDataOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubscriptionCostManagementExportExportDataOptions)(nil)).Elem()
}

func (i SubscriptionCostManagementExportExportDataOptionsArgs) ToSubscriptionCostManagementExportExportDataOptionsOutput() SubscriptionCostManagementExportExportDataOptionsOutput {
	return i.ToSubscriptionCostManagementExportExportDataOptionsOutputWithContext(context.Background())
}

func (i SubscriptionCostManagementExportExportDataOptionsArgs) ToSubscriptionCostManagementExportExportDataOptionsOutputWithContext(ctx context.Context) SubscriptionCostManagementExportExportDataOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriptionCostManagementExportExportDataOptionsOutput)
}

func (i SubscriptionCostManagementExportExportDataOptionsArgs) ToSubscriptionCostManagementExportExportDataOptionsPtrOutput() SubscriptionCostManagementExportExportDataOptionsPtrOutput {
	return i.ToSubscriptionCostManagementExportExportDataOptionsPtrOutputWithContext(context.Background())
}

func (i SubscriptionCostManagementExportExportDataOptionsArgs) ToSubscriptionCostManagementExportExportDataOptionsPtrOutputWithContext(ctx context.Context) SubscriptionCostManagementExportExportDataOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriptionCostManagementExportExportDataOptionsOutput).ToSubscriptionCostManagementExportExportDataOptionsPtrOutputWithContext(ctx)
}

// SubscriptionCostManagementExportExportDataOptionsPtrInput is an input type that accepts SubscriptionCostManagementExportExportDataOptionsArgs, SubscriptionCostManagementExportExportDataOptionsPtr and SubscriptionCostManagementExportExportDataOptionsPtrOutput values.
// You can construct a concrete instance of `SubscriptionCostManagementExportExportDataOptionsPtrInput` via:
//
//	        SubscriptionCostManagementExportExportDataOptionsArgs{...}
//
//	or:
//
//	        nil
type SubscriptionCostManagementExportExportDataOptionsPtrInput interface {
	pulumi.Input

	ToSubscriptionCostManagementExportExportDataOptionsPtrOutput() SubscriptionCostManagementExportExportDataOptionsPtrOutput
	ToSubscriptionCostManagementExportExportDataOptionsPtrOutputWithContext(context.Context) SubscriptionCostManagementExportExportDataOptionsPtrOutput
}

type subscriptionCostManagementExportExportDataOptionsPtrType SubscriptionCostManagementExportExportDataOptionsArgs

func SubscriptionCostManagementExportExportDataOptionsPtr(v *SubscriptionCostManagementExportExportDataOptionsArgs) SubscriptionCostManagementExportExportDataOptionsPtrInput {
	return (*subscriptionCostManagementExportExportDataOptionsPtrType)(v)
}

func (*subscriptionCostManagementExportExportDataOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SubscriptionCostManagementExportExportDataOptions)(nil)).Elem()
}

func (i *subscriptionCostManagementExportExportDataOptionsPtrType) ToSubscriptionCostManagementExportExportDataOptionsPtrOutput() SubscriptionCostManagementExportExportDataOptionsPtrOutput {
	return i.ToSubscriptionCostManagementExportExportDataOptionsPtrOutputWithContext(context.Background())
}

func (i *subscriptionCostManagementExportExportDataOptionsPtrType) ToSubscriptionCostManagementExportExportDataOptionsPtrOutputWithContext(ctx context.Context) SubscriptionCostManagementExportExportDataOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriptionCostManagementExportExportDataOptionsPtrOutput)
}

type SubscriptionCostManagementExportExportDataOptionsOutput struct{ *pulumi.OutputState }

func (SubscriptionCostManagementExportExportDataOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubscriptionCostManagementExportExportDataOptions)(nil)).Elem()
}

func (o SubscriptionCostManagementExportExportDataOptionsOutput) ToSubscriptionCostManagementExportExportDataOptionsOutput() SubscriptionCostManagementExportExportDataOptionsOutput {
	return o
}

func (o SubscriptionCostManagementExportExportDataOptionsOutput) ToSubscriptionCostManagementExportExportDataOptionsOutputWithContext(ctx context.Context) SubscriptionCostManagementExportExportDataOptionsOutput {
	return o
}

func (o SubscriptionCostManagementExportExportDataOptionsOutput) ToSubscriptionCostManagementExportExportDataOptionsPtrOutput() SubscriptionCostManagementExportExportDataOptionsPtrOutput {
	return o.ToSubscriptionCostManagementExportExportDataOptionsPtrOutputWithContext(context.Background())
}

func (o SubscriptionCostManagementExportExportDataOptionsOutput) ToSubscriptionCostManagementExportExportDataOptionsPtrOutputWithContext(ctx context.Context) SubscriptionCostManagementExportExportDataOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SubscriptionCostManagementExportExportDataOptions) *SubscriptionCostManagementExportExportDataOptions {
		return &v
	}).(SubscriptionCostManagementExportExportDataOptionsPtrOutput)
}

// The time frame for pulling data for the query. If custom, then a specific time period must be provided. Possible values include: `WeekToDate`, `MonthToDate`, `BillingMonthToDate`, `TheLast7Days`, `TheLastMonth`, `TheLastBillingMonth`, `Custom`.
func (o SubscriptionCostManagementExportExportDataOptionsOutput) TimeFrame() pulumi.StringOutput {
	return o.ApplyT(func(v SubscriptionCostManagementExportExportDataOptions) string { return v.TimeFrame }).(pulumi.StringOutput)
}

// The type of the query. Possible values are `ActualCost`, `AmortizedCost` and `Usage`.
func (o SubscriptionCostManagementExportExportDataOptionsOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v SubscriptionCostManagementExportExportDataOptions) string { return v.Type }).(pulumi.StringOutput)
}

type SubscriptionCostManagementExportExportDataOptionsPtrOutput struct{ *pulumi.OutputState }

func (SubscriptionCostManagementExportExportDataOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SubscriptionCostManagementExportExportDataOptions)(nil)).Elem()
}

func (o SubscriptionCostManagementExportExportDataOptionsPtrOutput) ToSubscriptionCostManagementExportExportDataOptionsPtrOutput() SubscriptionCostManagementExportExportDataOptionsPtrOutput {
	return o
}

func (o SubscriptionCostManagementExportExportDataOptionsPtrOutput) ToSubscriptionCostManagementExportExportDataOptionsPtrOutputWithContext(ctx context.Context) SubscriptionCostManagementExportExportDataOptionsPtrOutput {
	return o
}

func (o SubscriptionCostManagementExportExportDataOptionsPtrOutput) Elem() SubscriptionCostManagementExportExportDataOptionsOutput {
	return o.ApplyT(func(v *SubscriptionCostManagementExportExportDataOptions) SubscriptionCostManagementExportExportDataOptions {
		if v != nil {
			return *v
		}
		var ret SubscriptionCostManagementExportExportDataOptions
		return ret
	}).(SubscriptionCostManagementExportExportDataOptionsOutput)
}

// The time frame for pulling data for the query. If custom, then a specific time period must be provided. Possible values include: `WeekToDate`, `MonthToDate`, `BillingMonthToDate`, `TheLast7Days`, `TheLastMonth`, `TheLastBillingMonth`, `Custom`.
func (o SubscriptionCostManagementExportExportDataOptionsPtrOutput) TimeFrame() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubscriptionCostManagementExportExportDataOptions) *string {
		if v == nil {
			return nil
		}
		return &v.TimeFrame
	}).(pulumi.StringPtrOutput)
}

// The type of the query. Possible values are `ActualCost`, `AmortizedCost` and `Usage`.
func (o SubscriptionCostManagementExportExportDataOptionsPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubscriptionCostManagementExportExportDataOptions) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type SubscriptionCostManagementExportExportDataStorageLocation struct {
	// The Resource Manager ID of the container where exports will be uploaded. Changing this forces a new resource to be created.
	ContainerId string `pulumi:"containerId"`
	// The path of the directory where exports will be uploaded. Changing this forces a new resource to be created.
	//
	// > **Note:** The Resource Manager ID of a Storage Container is exposed via the `resourceManagerId` attribute of the `storage.Container` resource.
	RootFolderPath string `pulumi:"rootFolderPath"`
}

// SubscriptionCostManagementExportExportDataStorageLocationInput is an input type that accepts SubscriptionCostManagementExportExportDataStorageLocationArgs and SubscriptionCostManagementExportExportDataStorageLocationOutput values.
// You can construct a concrete instance of `SubscriptionCostManagementExportExportDataStorageLocationInput` via:
//
//	SubscriptionCostManagementExportExportDataStorageLocationArgs{...}
type SubscriptionCostManagementExportExportDataStorageLocationInput interface {
	pulumi.Input

	ToSubscriptionCostManagementExportExportDataStorageLocationOutput() SubscriptionCostManagementExportExportDataStorageLocationOutput
	ToSubscriptionCostManagementExportExportDataStorageLocationOutputWithContext(context.Context) SubscriptionCostManagementExportExportDataStorageLocationOutput
}

type SubscriptionCostManagementExportExportDataStorageLocationArgs struct {
	// The Resource Manager ID of the container where exports will be uploaded. Changing this forces a new resource to be created.
	ContainerId pulumi.StringInput `pulumi:"containerId"`
	// The path of the directory where exports will be uploaded. Changing this forces a new resource to be created.
	//
	// > **Note:** The Resource Manager ID of a Storage Container is exposed via the `resourceManagerId` attribute of the `storage.Container` resource.
	RootFolderPath pulumi.StringInput `pulumi:"rootFolderPath"`
}

func (SubscriptionCostManagementExportExportDataStorageLocationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubscriptionCostManagementExportExportDataStorageLocation)(nil)).Elem()
}

func (i SubscriptionCostManagementExportExportDataStorageLocationArgs) ToSubscriptionCostManagementExportExportDataStorageLocationOutput() SubscriptionCostManagementExportExportDataStorageLocationOutput {
	return i.ToSubscriptionCostManagementExportExportDataStorageLocationOutputWithContext(context.Background())
}

func (i SubscriptionCostManagementExportExportDataStorageLocationArgs) ToSubscriptionCostManagementExportExportDataStorageLocationOutputWithContext(ctx context.Context) SubscriptionCostManagementExportExportDataStorageLocationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriptionCostManagementExportExportDataStorageLocationOutput)
}

func (i SubscriptionCostManagementExportExportDataStorageLocationArgs) ToSubscriptionCostManagementExportExportDataStorageLocationPtrOutput() SubscriptionCostManagementExportExportDataStorageLocationPtrOutput {
	return i.ToSubscriptionCostManagementExportExportDataStorageLocationPtrOutputWithContext(context.Background())
}

func (i SubscriptionCostManagementExportExportDataStorageLocationArgs) ToSubscriptionCostManagementExportExportDataStorageLocationPtrOutputWithContext(ctx context.Context) SubscriptionCostManagementExportExportDataStorageLocationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriptionCostManagementExportExportDataStorageLocationOutput).ToSubscriptionCostManagementExportExportDataStorageLocationPtrOutputWithContext(ctx)
}

// SubscriptionCostManagementExportExportDataStorageLocationPtrInput is an input type that accepts SubscriptionCostManagementExportExportDataStorageLocationArgs, SubscriptionCostManagementExportExportDataStorageLocationPtr and SubscriptionCostManagementExportExportDataStorageLocationPtrOutput values.
// You can construct a concrete instance of `SubscriptionCostManagementExportExportDataStorageLocationPtrInput` via:
//
//	        SubscriptionCostManagementExportExportDataStorageLocationArgs{...}
//
//	or:
//
//	        nil
type SubscriptionCostManagementExportExportDataStorageLocationPtrInput interface {
	pulumi.Input

	ToSubscriptionCostManagementExportExportDataStorageLocationPtrOutput() SubscriptionCostManagementExportExportDataStorageLocationPtrOutput
	ToSubscriptionCostManagementExportExportDataStorageLocationPtrOutputWithContext(context.Context) SubscriptionCostManagementExportExportDataStorageLocationPtrOutput
}

type subscriptionCostManagementExportExportDataStorageLocationPtrType SubscriptionCostManagementExportExportDataStorageLocationArgs

func SubscriptionCostManagementExportExportDataStorageLocationPtr(v *SubscriptionCostManagementExportExportDataStorageLocationArgs) SubscriptionCostManagementExportExportDataStorageLocationPtrInput {
	return (*subscriptionCostManagementExportExportDataStorageLocationPtrType)(v)
}

func (*subscriptionCostManagementExportExportDataStorageLocationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SubscriptionCostManagementExportExportDataStorageLocation)(nil)).Elem()
}

func (i *subscriptionCostManagementExportExportDataStorageLocationPtrType) ToSubscriptionCostManagementExportExportDataStorageLocationPtrOutput() SubscriptionCostManagementExportExportDataStorageLocationPtrOutput {
	return i.ToSubscriptionCostManagementExportExportDataStorageLocationPtrOutputWithContext(context.Background())
}

func (i *subscriptionCostManagementExportExportDataStorageLocationPtrType) ToSubscriptionCostManagementExportExportDataStorageLocationPtrOutputWithContext(ctx context.Context) SubscriptionCostManagementExportExportDataStorageLocationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriptionCostManagementExportExportDataStorageLocationPtrOutput)
}

type SubscriptionCostManagementExportExportDataStorageLocationOutput struct{ *pulumi.OutputState }

func (SubscriptionCostManagementExportExportDataStorageLocationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubscriptionCostManagementExportExportDataStorageLocation)(nil)).Elem()
}

func (o SubscriptionCostManagementExportExportDataStorageLocationOutput) ToSubscriptionCostManagementExportExportDataStorageLocationOutput() SubscriptionCostManagementExportExportDataStorageLocationOutput {
	return o
}

func (o SubscriptionCostManagementExportExportDataStorageLocationOutput) ToSubscriptionCostManagementExportExportDataStorageLocationOutputWithContext(ctx context.Context) SubscriptionCostManagementExportExportDataStorageLocationOutput {
	return o
}

func (o SubscriptionCostManagementExportExportDataStorageLocationOutput) ToSubscriptionCostManagementExportExportDataStorageLocationPtrOutput() SubscriptionCostManagementExportExportDataStorageLocationPtrOutput {
	return o.ToSubscriptionCostManagementExportExportDataStorageLocationPtrOutputWithContext(context.Background())
}

func (o SubscriptionCostManagementExportExportDataStorageLocationOutput) ToSubscriptionCostManagementExportExportDataStorageLocationPtrOutputWithContext(ctx context.Context) SubscriptionCostManagementExportExportDataStorageLocationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SubscriptionCostManagementExportExportDataStorageLocation) *SubscriptionCostManagementExportExportDataStorageLocation {
		return &v
	}).(SubscriptionCostManagementExportExportDataStorageLocationPtrOutput)
}

// The Resource Manager ID of the container where exports will be uploaded. Changing this forces a new resource to be created.
func (o SubscriptionCostManagementExportExportDataStorageLocationOutput) ContainerId() pulumi.StringOutput {
	return o.ApplyT(func(v SubscriptionCostManagementExportExportDataStorageLocation) string { return v.ContainerId }).(pulumi.StringOutput)
}

// The path of the directory where exports will be uploaded. Changing this forces a new resource to be created.
//
// > **Note:** The Resource Manager ID of a Storage Container is exposed via the `resourceManagerId` attribute of the `storage.Container` resource.
func (o SubscriptionCostManagementExportExportDataStorageLocationOutput) RootFolderPath() pulumi.StringOutput {
	return o.ApplyT(func(v SubscriptionCostManagementExportExportDataStorageLocation) string { return v.RootFolderPath }).(pulumi.StringOutput)
}

type SubscriptionCostManagementExportExportDataStorageLocationPtrOutput struct{ *pulumi.OutputState }

func (SubscriptionCostManagementExportExportDataStorageLocationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SubscriptionCostManagementExportExportDataStorageLocation)(nil)).Elem()
}

func (o SubscriptionCostManagementExportExportDataStorageLocationPtrOutput) ToSubscriptionCostManagementExportExportDataStorageLocationPtrOutput() SubscriptionCostManagementExportExportDataStorageLocationPtrOutput {
	return o
}

func (o SubscriptionCostManagementExportExportDataStorageLocationPtrOutput) ToSubscriptionCostManagementExportExportDataStorageLocationPtrOutputWithContext(ctx context.Context) SubscriptionCostManagementExportExportDataStorageLocationPtrOutput {
	return o
}

func (o SubscriptionCostManagementExportExportDataStorageLocationPtrOutput) Elem() SubscriptionCostManagementExportExportDataStorageLocationOutput {
	return o.ApplyT(func(v *SubscriptionCostManagementExportExportDataStorageLocation) SubscriptionCostManagementExportExportDataStorageLocation {
		if v != nil {
			return *v
		}
		var ret SubscriptionCostManagementExportExportDataStorageLocation
		return ret
	}).(SubscriptionCostManagementExportExportDataStorageLocationOutput)
}

// The Resource Manager ID of the container where exports will be uploaded. Changing this forces a new resource to be created.
func (o SubscriptionCostManagementExportExportDataStorageLocationPtrOutput) ContainerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubscriptionCostManagementExportExportDataStorageLocation) *string {
		if v == nil {
			return nil
		}
		return &v.ContainerId
	}).(pulumi.StringPtrOutput)
}

// The path of the directory where exports will be uploaded. Changing this forces a new resource to be created.
//
// > **Note:** The Resource Manager ID of a Storage Container is exposed via the `resourceManagerId` attribute of the `storage.Container` resource.
func (o SubscriptionCostManagementExportExportDataStorageLocationPtrOutput) RootFolderPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubscriptionCostManagementExportExportDataStorageLocation) *string {
		if v == nil {
			return nil
		}
		return &v.RootFolderPath
	}).(pulumi.StringPtrOutput)
}

type SubscriptionCostManagementViewDataset struct {
	// One or more `aggregation` blocks as defined above.
	Aggregations []SubscriptionCostManagementViewDatasetAggregation `pulumi:"aggregations"`
	// The granularity of rows in the report. Possible values are `Daily` and `Monthly`.
	Granularity string `pulumi:"granularity"`
	// One or more `grouping` blocks as defined below.
	Groupings []SubscriptionCostManagementViewDatasetGrouping `pulumi:"groupings"`
	// One or more `sorting` blocks as defined below, containing the order by expression to be used in the report
	Sortings []SubscriptionCostManagementViewDatasetSorting `pulumi:"sortings"`
}

// SubscriptionCostManagementViewDatasetInput is an input type that accepts SubscriptionCostManagementViewDatasetArgs and SubscriptionCostManagementViewDatasetOutput values.
// You can construct a concrete instance of `SubscriptionCostManagementViewDatasetInput` via:
//
//	SubscriptionCostManagementViewDatasetArgs{...}
type SubscriptionCostManagementViewDatasetInput interface {
	pulumi.Input

	ToSubscriptionCostManagementViewDatasetOutput() SubscriptionCostManagementViewDatasetOutput
	ToSubscriptionCostManagementViewDatasetOutputWithContext(context.Context) SubscriptionCostManagementViewDatasetOutput
}

type SubscriptionCostManagementViewDatasetArgs struct {
	// One or more `aggregation` blocks as defined above.
	Aggregations SubscriptionCostManagementViewDatasetAggregationArrayInput `pulumi:"aggregations"`
	// The granularity of rows in the report. Possible values are `Daily` and `Monthly`.
	Granularity pulumi.StringInput `pulumi:"granularity"`
	// One or more `grouping` blocks as defined below.
	Groupings SubscriptionCostManagementViewDatasetGroupingArrayInput `pulumi:"groupings"`
	// One or more `sorting` blocks as defined below, containing the order by expression to be used in the report
	Sortings SubscriptionCostManagementViewDatasetSortingArrayInput `pulumi:"sortings"`
}

func (SubscriptionCostManagementViewDatasetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubscriptionCostManagementViewDataset)(nil)).Elem()
}

func (i SubscriptionCostManagementViewDatasetArgs) ToSubscriptionCostManagementViewDatasetOutput() SubscriptionCostManagementViewDatasetOutput {
	return i.ToSubscriptionCostManagementViewDatasetOutputWithContext(context.Background())
}

func (i SubscriptionCostManagementViewDatasetArgs) ToSubscriptionCostManagementViewDatasetOutputWithContext(ctx context.Context) SubscriptionCostManagementViewDatasetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriptionCostManagementViewDatasetOutput)
}

func (i SubscriptionCostManagementViewDatasetArgs) ToSubscriptionCostManagementViewDatasetPtrOutput() SubscriptionCostManagementViewDatasetPtrOutput {
	return i.ToSubscriptionCostManagementViewDatasetPtrOutputWithContext(context.Background())
}

func (i SubscriptionCostManagementViewDatasetArgs) ToSubscriptionCostManagementViewDatasetPtrOutputWithContext(ctx context.Context) SubscriptionCostManagementViewDatasetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriptionCostManagementViewDatasetOutput).ToSubscriptionCostManagementViewDatasetPtrOutputWithContext(ctx)
}

// SubscriptionCostManagementViewDatasetPtrInput is an input type that accepts SubscriptionCostManagementViewDatasetArgs, SubscriptionCostManagementViewDatasetPtr and SubscriptionCostManagementViewDatasetPtrOutput values.
// You can construct a concrete instance of `SubscriptionCostManagementViewDatasetPtrInput` via:
//
//	        SubscriptionCostManagementViewDatasetArgs{...}
//
//	or:
//
//	        nil
type SubscriptionCostManagementViewDatasetPtrInput interface {
	pulumi.Input

	ToSubscriptionCostManagementViewDatasetPtrOutput() SubscriptionCostManagementViewDatasetPtrOutput
	ToSubscriptionCostManagementViewDatasetPtrOutputWithContext(context.Context) SubscriptionCostManagementViewDatasetPtrOutput
}

type subscriptionCostManagementViewDatasetPtrType SubscriptionCostManagementViewDatasetArgs

func SubscriptionCostManagementViewDatasetPtr(v *SubscriptionCostManagementViewDatasetArgs) SubscriptionCostManagementViewDatasetPtrInput {
	return (*subscriptionCostManagementViewDatasetPtrType)(v)
}

func (*subscriptionCostManagementViewDatasetPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SubscriptionCostManagementViewDataset)(nil)).Elem()
}

func (i *subscriptionCostManagementViewDatasetPtrType) ToSubscriptionCostManagementViewDatasetPtrOutput() SubscriptionCostManagementViewDatasetPtrOutput {
	return i.ToSubscriptionCostManagementViewDatasetPtrOutputWithContext(context.Background())
}

func (i *subscriptionCostManagementViewDatasetPtrType) ToSubscriptionCostManagementViewDatasetPtrOutputWithContext(ctx context.Context) SubscriptionCostManagementViewDatasetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriptionCostManagementViewDatasetPtrOutput)
}

type SubscriptionCostManagementViewDatasetOutput struct{ *pulumi.OutputState }

func (SubscriptionCostManagementViewDatasetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubscriptionCostManagementViewDataset)(nil)).Elem()
}

func (o SubscriptionCostManagementViewDatasetOutput) ToSubscriptionCostManagementViewDatasetOutput() SubscriptionCostManagementViewDatasetOutput {
	return o
}

func (o SubscriptionCostManagementViewDatasetOutput) ToSubscriptionCostManagementViewDatasetOutputWithContext(ctx context.Context) SubscriptionCostManagementViewDatasetOutput {
	return o
}

func (o SubscriptionCostManagementViewDatasetOutput) ToSubscriptionCostManagementViewDatasetPtrOutput() SubscriptionCostManagementViewDatasetPtrOutput {
	return o.ToSubscriptionCostManagementViewDatasetPtrOutputWithContext(context.Background())
}

func (o SubscriptionCostManagementViewDatasetOutput) ToSubscriptionCostManagementViewDatasetPtrOutputWithContext(ctx context.Context) SubscriptionCostManagementViewDatasetPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SubscriptionCostManagementViewDataset) *SubscriptionCostManagementViewDataset {
		return &v
	}).(SubscriptionCostManagementViewDatasetPtrOutput)
}

// One or more `aggregation` blocks as defined above.
func (o SubscriptionCostManagementViewDatasetOutput) Aggregations() SubscriptionCostManagementViewDatasetAggregationArrayOutput {
	return o.ApplyT(func(v SubscriptionCostManagementViewDataset) []SubscriptionCostManagementViewDatasetAggregation {
		return v.Aggregations
	}).(SubscriptionCostManagementViewDatasetAggregationArrayOutput)
}

// The granularity of rows in the report. Possible values are `Daily` and `Monthly`.
func (o SubscriptionCostManagementViewDatasetOutput) Granularity() pulumi.StringOutput {
	return o.ApplyT(func(v SubscriptionCostManagementViewDataset) string { return v.Granularity }).(pulumi.StringOutput)
}

// One or more `grouping` blocks as defined below.
func (o SubscriptionCostManagementViewDatasetOutput) Groupings() SubscriptionCostManagementViewDatasetGroupingArrayOutput {
	return o.ApplyT(func(v SubscriptionCostManagementViewDataset) []SubscriptionCostManagementViewDatasetGrouping {
		return v.Groupings
	}).(SubscriptionCostManagementViewDatasetGroupingArrayOutput)
}

// One or more `sorting` blocks as defined below, containing the order by expression to be used in the report
func (o SubscriptionCostManagementViewDatasetOutput) Sortings() SubscriptionCostManagementViewDatasetSortingArrayOutput {
	return o.ApplyT(func(v SubscriptionCostManagementViewDataset) []SubscriptionCostManagementViewDatasetSorting {
		return v.Sortings
	}).(SubscriptionCostManagementViewDatasetSortingArrayOutput)
}

type SubscriptionCostManagementViewDatasetPtrOutput struct{ *pulumi.OutputState }

func (SubscriptionCostManagementViewDatasetPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SubscriptionCostManagementViewDataset)(nil)).Elem()
}

func (o SubscriptionCostManagementViewDatasetPtrOutput) ToSubscriptionCostManagementViewDatasetPtrOutput() SubscriptionCostManagementViewDatasetPtrOutput {
	return o
}

func (o SubscriptionCostManagementViewDatasetPtrOutput) ToSubscriptionCostManagementViewDatasetPtrOutputWithContext(ctx context.Context) SubscriptionCostManagementViewDatasetPtrOutput {
	return o
}

func (o SubscriptionCostManagementViewDatasetPtrOutput) Elem() SubscriptionCostManagementViewDatasetOutput {
	return o.ApplyT(func(v *SubscriptionCostManagementViewDataset) SubscriptionCostManagementViewDataset {
		if v != nil {
			return *v
		}
		var ret SubscriptionCostManagementViewDataset
		return ret
	}).(SubscriptionCostManagementViewDatasetOutput)
}

// One or more `aggregation` blocks as defined above.
func (o SubscriptionCostManagementViewDatasetPtrOutput) Aggregations() SubscriptionCostManagementViewDatasetAggregationArrayOutput {
	return o.ApplyT(func(v *SubscriptionCostManagementViewDataset) []SubscriptionCostManagementViewDatasetAggregation {
		if v == nil {
			return nil
		}
		return v.Aggregations
	}).(SubscriptionCostManagementViewDatasetAggregationArrayOutput)
}

// The granularity of rows in the report. Possible values are `Daily` and `Monthly`.
func (o SubscriptionCostManagementViewDatasetPtrOutput) Granularity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubscriptionCostManagementViewDataset) *string {
		if v == nil {
			return nil
		}
		return &v.Granularity
	}).(pulumi.StringPtrOutput)
}

// One or more `grouping` blocks as defined below.
func (o SubscriptionCostManagementViewDatasetPtrOutput) Groupings() SubscriptionCostManagementViewDatasetGroupingArrayOutput {
	return o.ApplyT(func(v *SubscriptionCostManagementViewDataset) []SubscriptionCostManagementViewDatasetGrouping {
		if v == nil {
			return nil
		}
		return v.Groupings
	}).(SubscriptionCostManagementViewDatasetGroupingArrayOutput)
}

// One or more `sorting` blocks as defined below, containing the order by expression to be used in the report
func (o SubscriptionCostManagementViewDatasetPtrOutput) Sortings() SubscriptionCostManagementViewDatasetSortingArrayOutput {
	return o.ApplyT(func(v *SubscriptionCostManagementViewDataset) []SubscriptionCostManagementViewDatasetSorting {
		if v == nil {
			return nil
		}
		return v.Sortings
	}).(SubscriptionCostManagementViewDatasetSortingArrayOutput)
}

type SubscriptionCostManagementViewDatasetAggregation struct {
	// The name of the column to aggregate. Changing this forces a new Cost Management View for a Subscription to be created.
	ColumnName string `pulumi:"columnName"`
	// The name which should be used for this aggregation. Changing this forces a new Cost Management View for a Subscription to be created.
	Name string `pulumi:"name"`
}

// SubscriptionCostManagementViewDatasetAggregationInput is an input type that accepts SubscriptionCostManagementViewDatasetAggregationArgs and SubscriptionCostManagementViewDatasetAggregationOutput values.
// You can construct a concrete instance of `SubscriptionCostManagementViewDatasetAggregationInput` via:
//
//	SubscriptionCostManagementViewDatasetAggregationArgs{...}
type SubscriptionCostManagementViewDatasetAggregationInput interface {
	pulumi.Input

	ToSubscriptionCostManagementViewDatasetAggregationOutput() SubscriptionCostManagementViewDatasetAggregationOutput
	ToSubscriptionCostManagementViewDatasetAggregationOutputWithContext(context.Context) SubscriptionCostManagementViewDatasetAggregationOutput
}

type SubscriptionCostManagementViewDatasetAggregationArgs struct {
	// The name of the column to aggregate. Changing this forces a new Cost Management View for a Subscription to be created.
	ColumnName pulumi.StringInput `pulumi:"columnName"`
	// The name which should be used for this aggregation. Changing this forces a new Cost Management View for a Subscription to be created.
	Name pulumi.StringInput `pulumi:"name"`
}

func (SubscriptionCostManagementViewDatasetAggregationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubscriptionCostManagementViewDatasetAggregation)(nil)).Elem()
}

func (i SubscriptionCostManagementViewDatasetAggregationArgs) ToSubscriptionCostManagementViewDatasetAggregationOutput() SubscriptionCostManagementViewDatasetAggregationOutput {
	return i.ToSubscriptionCostManagementViewDatasetAggregationOutputWithContext(context.Background())
}

func (i SubscriptionCostManagementViewDatasetAggregationArgs) ToSubscriptionCostManagementViewDatasetAggregationOutputWithContext(ctx context.Context) SubscriptionCostManagementViewDatasetAggregationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriptionCostManagementViewDatasetAggregationOutput)
}

// SubscriptionCostManagementViewDatasetAggregationArrayInput is an input type that accepts SubscriptionCostManagementViewDatasetAggregationArray and SubscriptionCostManagementViewDatasetAggregationArrayOutput values.
// You can construct a concrete instance of `SubscriptionCostManagementViewDatasetAggregationArrayInput` via:
//
//	SubscriptionCostManagementViewDatasetAggregationArray{ SubscriptionCostManagementViewDatasetAggregationArgs{...} }
type SubscriptionCostManagementViewDatasetAggregationArrayInput interface {
	pulumi.Input

	ToSubscriptionCostManagementViewDatasetAggregationArrayOutput() SubscriptionCostManagementViewDatasetAggregationArrayOutput
	ToSubscriptionCostManagementViewDatasetAggregationArrayOutputWithContext(context.Context) SubscriptionCostManagementViewDatasetAggregationArrayOutput
}

type SubscriptionCostManagementViewDatasetAggregationArray []SubscriptionCostManagementViewDatasetAggregationInput

func (SubscriptionCostManagementViewDatasetAggregationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubscriptionCostManagementViewDatasetAggregation)(nil)).Elem()
}

func (i SubscriptionCostManagementViewDatasetAggregationArray) ToSubscriptionCostManagementViewDatasetAggregationArrayOutput() SubscriptionCostManagementViewDatasetAggregationArrayOutput {
	return i.ToSubscriptionCostManagementViewDatasetAggregationArrayOutputWithContext(context.Background())
}

func (i SubscriptionCostManagementViewDatasetAggregationArray) ToSubscriptionCostManagementViewDatasetAggregationArrayOutputWithContext(ctx context.Context) SubscriptionCostManagementViewDatasetAggregationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriptionCostManagementViewDatasetAggregationArrayOutput)
}

type SubscriptionCostManagementViewDatasetAggregationOutput struct{ *pulumi.OutputState }

func (SubscriptionCostManagementViewDatasetAggregationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubscriptionCostManagementViewDatasetAggregation)(nil)).Elem()
}

func (o SubscriptionCostManagementViewDatasetAggregationOutput) ToSubscriptionCostManagementViewDatasetAggregationOutput() SubscriptionCostManagementViewDatasetAggregationOutput {
	return o
}

func (o SubscriptionCostManagementViewDatasetAggregationOutput) ToSubscriptionCostManagementViewDatasetAggregationOutputWithContext(ctx context.Context) SubscriptionCostManagementViewDatasetAggregationOutput {
	return o
}

// The name of the column to aggregate. Changing this forces a new Cost Management View for a Subscription to be created.
func (o SubscriptionCostManagementViewDatasetAggregationOutput) ColumnName() pulumi.StringOutput {
	return o.ApplyT(func(v SubscriptionCostManagementViewDatasetAggregation) string { return v.ColumnName }).(pulumi.StringOutput)
}

// The name which should be used for this aggregation. Changing this forces a new Cost Management View for a Subscription to be created.
func (o SubscriptionCostManagementViewDatasetAggregationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v SubscriptionCostManagementViewDatasetAggregation) string { return v.Name }).(pulumi.StringOutput)
}

type SubscriptionCostManagementViewDatasetAggregationArrayOutput struct{ *pulumi.OutputState }

func (SubscriptionCostManagementViewDatasetAggregationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubscriptionCostManagementViewDatasetAggregation)(nil)).Elem()
}

func (o SubscriptionCostManagementViewDatasetAggregationArrayOutput) ToSubscriptionCostManagementViewDatasetAggregationArrayOutput() SubscriptionCostManagementViewDatasetAggregationArrayOutput {
	return o
}

func (o SubscriptionCostManagementViewDatasetAggregationArrayOutput) ToSubscriptionCostManagementViewDatasetAggregationArrayOutputWithContext(ctx context.Context) SubscriptionCostManagementViewDatasetAggregationArrayOutput {
	return o
}

func (o SubscriptionCostManagementViewDatasetAggregationArrayOutput) Index(i pulumi.IntInput) SubscriptionCostManagementViewDatasetAggregationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubscriptionCostManagementViewDatasetAggregation {
		return vs[0].([]SubscriptionCostManagementViewDatasetAggregation)[vs[1].(int)]
	}).(SubscriptionCostManagementViewDatasetAggregationOutput)
}

type SubscriptionCostManagementViewDatasetGrouping struct {
	// The name of the column to group.
	Name string `pulumi:"name"`
	// The type of the column. Possible values are `Dimension` and `TagKey`.
	Type string `pulumi:"type"`
}

// SubscriptionCostManagementViewDatasetGroupingInput is an input type that accepts SubscriptionCostManagementViewDatasetGroupingArgs and SubscriptionCostManagementViewDatasetGroupingOutput values.
// You can construct a concrete instance of `SubscriptionCostManagementViewDatasetGroupingInput` via:
//
//	SubscriptionCostManagementViewDatasetGroupingArgs{...}
type SubscriptionCostManagementViewDatasetGroupingInput interface {
	pulumi.Input

	ToSubscriptionCostManagementViewDatasetGroupingOutput() SubscriptionCostManagementViewDatasetGroupingOutput
	ToSubscriptionCostManagementViewDatasetGroupingOutputWithContext(context.Context) SubscriptionCostManagementViewDatasetGroupingOutput
}

type SubscriptionCostManagementViewDatasetGroupingArgs struct {
	// The name of the column to group.
	Name pulumi.StringInput `pulumi:"name"`
	// The type of the column. Possible values are `Dimension` and `TagKey`.
	Type pulumi.StringInput `pulumi:"type"`
}

func (SubscriptionCostManagementViewDatasetGroupingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubscriptionCostManagementViewDatasetGrouping)(nil)).Elem()
}

func (i SubscriptionCostManagementViewDatasetGroupingArgs) ToSubscriptionCostManagementViewDatasetGroupingOutput() SubscriptionCostManagementViewDatasetGroupingOutput {
	return i.ToSubscriptionCostManagementViewDatasetGroupingOutputWithContext(context.Background())
}

func (i SubscriptionCostManagementViewDatasetGroupingArgs) ToSubscriptionCostManagementViewDatasetGroupingOutputWithContext(ctx context.Context) SubscriptionCostManagementViewDatasetGroupingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriptionCostManagementViewDatasetGroupingOutput)
}

// SubscriptionCostManagementViewDatasetGroupingArrayInput is an input type that accepts SubscriptionCostManagementViewDatasetGroupingArray and SubscriptionCostManagementViewDatasetGroupingArrayOutput values.
// You can construct a concrete instance of `SubscriptionCostManagementViewDatasetGroupingArrayInput` via:
//
//	SubscriptionCostManagementViewDatasetGroupingArray{ SubscriptionCostManagementViewDatasetGroupingArgs{...} }
type SubscriptionCostManagementViewDatasetGroupingArrayInput interface {
	pulumi.Input

	ToSubscriptionCostManagementViewDatasetGroupingArrayOutput() SubscriptionCostManagementViewDatasetGroupingArrayOutput
	ToSubscriptionCostManagementViewDatasetGroupingArrayOutputWithContext(context.Context) SubscriptionCostManagementViewDatasetGroupingArrayOutput
}

type SubscriptionCostManagementViewDatasetGroupingArray []SubscriptionCostManagementViewDatasetGroupingInput

func (SubscriptionCostManagementViewDatasetGroupingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubscriptionCostManagementViewDatasetGrouping)(nil)).Elem()
}

func (i SubscriptionCostManagementViewDatasetGroupingArray) ToSubscriptionCostManagementViewDatasetGroupingArrayOutput() SubscriptionCostManagementViewDatasetGroupingArrayOutput {
	return i.ToSubscriptionCostManagementViewDatasetGroupingArrayOutputWithContext(context.Background())
}

func (i SubscriptionCostManagementViewDatasetGroupingArray) ToSubscriptionCostManagementViewDatasetGroupingArrayOutputWithContext(ctx context.Context) SubscriptionCostManagementViewDatasetGroupingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriptionCostManagementViewDatasetGroupingArrayOutput)
}

type SubscriptionCostManagementViewDatasetGroupingOutput struct{ *pulumi.OutputState }

func (SubscriptionCostManagementViewDatasetGroupingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubscriptionCostManagementViewDatasetGrouping)(nil)).Elem()
}

func (o SubscriptionCostManagementViewDatasetGroupingOutput) ToSubscriptionCostManagementViewDatasetGroupingOutput() SubscriptionCostManagementViewDatasetGroupingOutput {
	return o
}

func (o SubscriptionCostManagementViewDatasetGroupingOutput) ToSubscriptionCostManagementViewDatasetGroupingOutputWithContext(ctx context.Context) SubscriptionCostManagementViewDatasetGroupingOutput {
	return o
}

// The name of the column to group.
func (o SubscriptionCostManagementViewDatasetGroupingOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v SubscriptionCostManagementViewDatasetGrouping) string { return v.Name }).(pulumi.StringOutput)
}

// The type of the column. Possible values are `Dimension` and `TagKey`.
func (o SubscriptionCostManagementViewDatasetGroupingOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v SubscriptionCostManagementViewDatasetGrouping) string { return v.Type }).(pulumi.StringOutput)
}

type SubscriptionCostManagementViewDatasetGroupingArrayOutput struct{ *pulumi.OutputState }

func (SubscriptionCostManagementViewDatasetGroupingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubscriptionCostManagementViewDatasetGrouping)(nil)).Elem()
}

func (o SubscriptionCostManagementViewDatasetGroupingArrayOutput) ToSubscriptionCostManagementViewDatasetGroupingArrayOutput() SubscriptionCostManagementViewDatasetGroupingArrayOutput {
	return o
}

func (o SubscriptionCostManagementViewDatasetGroupingArrayOutput) ToSubscriptionCostManagementViewDatasetGroupingArrayOutputWithContext(ctx context.Context) SubscriptionCostManagementViewDatasetGroupingArrayOutput {
	return o
}

func (o SubscriptionCostManagementViewDatasetGroupingArrayOutput) Index(i pulumi.IntInput) SubscriptionCostManagementViewDatasetGroupingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubscriptionCostManagementViewDatasetGrouping {
		return vs[0].([]SubscriptionCostManagementViewDatasetGrouping)[vs[1].(int)]
	}).(SubscriptionCostManagementViewDatasetGroupingOutput)
}

type SubscriptionCostManagementViewDatasetSorting struct {
	// Direction of sort. Possible values are `Ascending` and `Descending`.
	Direction string `pulumi:"direction"`
	// The name of the column to sort.
	Name string `pulumi:"name"`
}

// SubscriptionCostManagementViewDatasetSortingInput is an input type that accepts SubscriptionCostManagementViewDatasetSortingArgs and SubscriptionCostManagementViewDatasetSortingOutput values.
// You can construct a concrete instance of `SubscriptionCostManagementViewDatasetSortingInput` via:
//
//	SubscriptionCostManagementViewDatasetSortingArgs{...}
type SubscriptionCostManagementViewDatasetSortingInput interface {
	pulumi.Input

	ToSubscriptionCostManagementViewDatasetSortingOutput() SubscriptionCostManagementViewDatasetSortingOutput
	ToSubscriptionCostManagementViewDatasetSortingOutputWithContext(context.Context) SubscriptionCostManagementViewDatasetSortingOutput
}

type SubscriptionCostManagementViewDatasetSortingArgs struct {
	// Direction of sort. Possible values are `Ascending` and `Descending`.
	Direction pulumi.StringInput `pulumi:"direction"`
	// The name of the column to sort.
	Name pulumi.StringInput `pulumi:"name"`
}

func (SubscriptionCostManagementViewDatasetSortingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubscriptionCostManagementViewDatasetSorting)(nil)).Elem()
}

func (i SubscriptionCostManagementViewDatasetSortingArgs) ToSubscriptionCostManagementViewDatasetSortingOutput() SubscriptionCostManagementViewDatasetSortingOutput {
	return i.ToSubscriptionCostManagementViewDatasetSortingOutputWithContext(context.Background())
}

func (i SubscriptionCostManagementViewDatasetSortingArgs) ToSubscriptionCostManagementViewDatasetSortingOutputWithContext(ctx context.Context) SubscriptionCostManagementViewDatasetSortingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriptionCostManagementViewDatasetSortingOutput)
}

// SubscriptionCostManagementViewDatasetSortingArrayInput is an input type that accepts SubscriptionCostManagementViewDatasetSortingArray and SubscriptionCostManagementViewDatasetSortingArrayOutput values.
// You can construct a concrete instance of `SubscriptionCostManagementViewDatasetSortingArrayInput` via:
//
//	SubscriptionCostManagementViewDatasetSortingArray{ SubscriptionCostManagementViewDatasetSortingArgs{...} }
type SubscriptionCostManagementViewDatasetSortingArrayInput interface {
	pulumi.Input

	ToSubscriptionCostManagementViewDatasetSortingArrayOutput() SubscriptionCostManagementViewDatasetSortingArrayOutput
	ToSubscriptionCostManagementViewDatasetSortingArrayOutputWithContext(context.Context) SubscriptionCostManagementViewDatasetSortingArrayOutput
}

type SubscriptionCostManagementViewDatasetSortingArray []SubscriptionCostManagementViewDatasetSortingInput

func (SubscriptionCostManagementViewDatasetSortingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubscriptionCostManagementViewDatasetSorting)(nil)).Elem()
}

func (i SubscriptionCostManagementViewDatasetSortingArray) ToSubscriptionCostManagementViewDatasetSortingArrayOutput() SubscriptionCostManagementViewDatasetSortingArrayOutput {
	return i.ToSubscriptionCostManagementViewDatasetSortingArrayOutputWithContext(context.Background())
}

func (i SubscriptionCostManagementViewDatasetSortingArray) ToSubscriptionCostManagementViewDatasetSortingArrayOutputWithContext(ctx context.Context) SubscriptionCostManagementViewDatasetSortingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriptionCostManagementViewDatasetSortingArrayOutput)
}

type SubscriptionCostManagementViewDatasetSortingOutput struct{ *pulumi.OutputState }

func (SubscriptionCostManagementViewDatasetSortingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubscriptionCostManagementViewDatasetSorting)(nil)).Elem()
}

func (o SubscriptionCostManagementViewDatasetSortingOutput) ToSubscriptionCostManagementViewDatasetSortingOutput() SubscriptionCostManagementViewDatasetSortingOutput {
	return o
}

func (o SubscriptionCostManagementViewDatasetSortingOutput) ToSubscriptionCostManagementViewDatasetSortingOutputWithContext(ctx context.Context) SubscriptionCostManagementViewDatasetSortingOutput {
	return o
}

// Direction of sort. Possible values are `Ascending` and `Descending`.
func (o SubscriptionCostManagementViewDatasetSortingOutput) Direction() pulumi.StringOutput {
	return o.ApplyT(func(v SubscriptionCostManagementViewDatasetSorting) string { return v.Direction }).(pulumi.StringOutput)
}

// The name of the column to sort.
func (o SubscriptionCostManagementViewDatasetSortingOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v SubscriptionCostManagementViewDatasetSorting) string { return v.Name }).(pulumi.StringOutput)
}

type SubscriptionCostManagementViewDatasetSortingArrayOutput struct{ *pulumi.OutputState }

func (SubscriptionCostManagementViewDatasetSortingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubscriptionCostManagementViewDatasetSorting)(nil)).Elem()
}

func (o SubscriptionCostManagementViewDatasetSortingArrayOutput) ToSubscriptionCostManagementViewDatasetSortingArrayOutput() SubscriptionCostManagementViewDatasetSortingArrayOutput {
	return o
}

func (o SubscriptionCostManagementViewDatasetSortingArrayOutput) ToSubscriptionCostManagementViewDatasetSortingArrayOutputWithContext(ctx context.Context) SubscriptionCostManagementViewDatasetSortingArrayOutput {
	return o
}

func (o SubscriptionCostManagementViewDatasetSortingArrayOutput) Index(i pulumi.IntInput) SubscriptionCostManagementViewDatasetSortingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubscriptionCostManagementViewDatasetSorting {
		return vs[0].([]SubscriptionCostManagementViewDatasetSorting)[vs[1].(int)]
	}).(SubscriptionCostManagementViewDatasetSortingOutput)
}

type SubscriptionCostManagementViewKpi struct {
	// KPI type. Possible values are `Budget` and `Forecast`.
	Type string `pulumi:"type"`
}

// SubscriptionCostManagementViewKpiInput is an input type that accepts SubscriptionCostManagementViewKpiArgs and SubscriptionCostManagementViewKpiOutput values.
// You can construct a concrete instance of `SubscriptionCostManagementViewKpiInput` via:
//
//	SubscriptionCostManagementViewKpiArgs{...}
type SubscriptionCostManagementViewKpiInput interface {
	pulumi.Input

	ToSubscriptionCostManagementViewKpiOutput() SubscriptionCostManagementViewKpiOutput
	ToSubscriptionCostManagementViewKpiOutputWithContext(context.Context) SubscriptionCostManagementViewKpiOutput
}

type SubscriptionCostManagementViewKpiArgs struct {
	// KPI type. Possible values are `Budget` and `Forecast`.
	Type pulumi.StringInput `pulumi:"type"`
}

func (SubscriptionCostManagementViewKpiArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubscriptionCostManagementViewKpi)(nil)).Elem()
}

func (i SubscriptionCostManagementViewKpiArgs) ToSubscriptionCostManagementViewKpiOutput() SubscriptionCostManagementViewKpiOutput {
	return i.ToSubscriptionCostManagementViewKpiOutputWithContext(context.Background())
}

func (i SubscriptionCostManagementViewKpiArgs) ToSubscriptionCostManagementViewKpiOutputWithContext(ctx context.Context) SubscriptionCostManagementViewKpiOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriptionCostManagementViewKpiOutput)
}

// SubscriptionCostManagementViewKpiArrayInput is an input type that accepts SubscriptionCostManagementViewKpiArray and SubscriptionCostManagementViewKpiArrayOutput values.
// You can construct a concrete instance of `SubscriptionCostManagementViewKpiArrayInput` via:
//
//	SubscriptionCostManagementViewKpiArray{ SubscriptionCostManagementViewKpiArgs{...} }
type SubscriptionCostManagementViewKpiArrayInput interface {
	pulumi.Input

	ToSubscriptionCostManagementViewKpiArrayOutput() SubscriptionCostManagementViewKpiArrayOutput
	ToSubscriptionCostManagementViewKpiArrayOutputWithContext(context.Context) SubscriptionCostManagementViewKpiArrayOutput
}

type SubscriptionCostManagementViewKpiArray []SubscriptionCostManagementViewKpiInput

func (SubscriptionCostManagementViewKpiArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubscriptionCostManagementViewKpi)(nil)).Elem()
}

func (i SubscriptionCostManagementViewKpiArray) ToSubscriptionCostManagementViewKpiArrayOutput() SubscriptionCostManagementViewKpiArrayOutput {
	return i.ToSubscriptionCostManagementViewKpiArrayOutputWithContext(context.Background())
}

func (i SubscriptionCostManagementViewKpiArray) ToSubscriptionCostManagementViewKpiArrayOutputWithContext(ctx context.Context) SubscriptionCostManagementViewKpiArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriptionCostManagementViewKpiArrayOutput)
}

type SubscriptionCostManagementViewKpiOutput struct{ *pulumi.OutputState }

func (SubscriptionCostManagementViewKpiOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubscriptionCostManagementViewKpi)(nil)).Elem()
}

func (o SubscriptionCostManagementViewKpiOutput) ToSubscriptionCostManagementViewKpiOutput() SubscriptionCostManagementViewKpiOutput {
	return o
}

func (o SubscriptionCostManagementViewKpiOutput) ToSubscriptionCostManagementViewKpiOutputWithContext(ctx context.Context) SubscriptionCostManagementViewKpiOutput {
	return o
}

// KPI type. Possible values are `Budget` and `Forecast`.
func (o SubscriptionCostManagementViewKpiOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v SubscriptionCostManagementViewKpi) string { return v.Type }).(pulumi.StringOutput)
}

type SubscriptionCostManagementViewKpiArrayOutput struct{ *pulumi.OutputState }

func (SubscriptionCostManagementViewKpiArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubscriptionCostManagementViewKpi)(nil)).Elem()
}

func (o SubscriptionCostManagementViewKpiArrayOutput) ToSubscriptionCostManagementViewKpiArrayOutput() SubscriptionCostManagementViewKpiArrayOutput {
	return o
}

func (o SubscriptionCostManagementViewKpiArrayOutput) ToSubscriptionCostManagementViewKpiArrayOutputWithContext(ctx context.Context) SubscriptionCostManagementViewKpiArrayOutput {
	return o
}

func (o SubscriptionCostManagementViewKpiArrayOutput) Index(i pulumi.IntInput) SubscriptionCostManagementViewKpiOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubscriptionCostManagementViewKpi {
		return vs[0].([]SubscriptionCostManagementViewKpi)[vs[1].(int)]
	}).(SubscriptionCostManagementViewKpiOutput)
}

type SubscriptionCostManagementViewPivot struct {
	// The name of the column which should be used for this sub-view in the Cost Analysis UI.
	Name string `pulumi:"name"`
	// The data type to show in this sub-view. Possible values are `Dimension` and `TagKey`.
	Type string `pulumi:"type"`
}

// SubscriptionCostManagementViewPivotInput is an input type that accepts SubscriptionCostManagementViewPivotArgs and SubscriptionCostManagementViewPivotOutput values.
// You can construct a concrete instance of `SubscriptionCostManagementViewPivotInput` via:
//
//	SubscriptionCostManagementViewPivotArgs{...}
type SubscriptionCostManagementViewPivotInput interface {
	pulumi.Input

	ToSubscriptionCostManagementViewPivotOutput() SubscriptionCostManagementViewPivotOutput
	ToSubscriptionCostManagementViewPivotOutputWithContext(context.Context) SubscriptionCostManagementViewPivotOutput
}

type SubscriptionCostManagementViewPivotArgs struct {
	// The name of the column which should be used for this sub-view in the Cost Analysis UI.
	Name pulumi.StringInput `pulumi:"name"`
	// The data type to show in this sub-view. Possible values are `Dimension` and `TagKey`.
	Type pulumi.StringInput `pulumi:"type"`
}

func (SubscriptionCostManagementViewPivotArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubscriptionCostManagementViewPivot)(nil)).Elem()
}

func (i SubscriptionCostManagementViewPivotArgs) ToSubscriptionCostManagementViewPivotOutput() SubscriptionCostManagementViewPivotOutput {
	return i.ToSubscriptionCostManagementViewPivotOutputWithContext(context.Background())
}

func (i SubscriptionCostManagementViewPivotArgs) ToSubscriptionCostManagementViewPivotOutputWithContext(ctx context.Context) SubscriptionCostManagementViewPivotOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriptionCostManagementViewPivotOutput)
}

// SubscriptionCostManagementViewPivotArrayInput is an input type that accepts SubscriptionCostManagementViewPivotArray and SubscriptionCostManagementViewPivotArrayOutput values.
// You can construct a concrete instance of `SubscriptionCostManagementViewPivotArrayInput` via:
//
//	SubscriptionCostManagementViewPivotArray{ SubscriptionCostManagementViewPivotArgs{...} }
type SubscriptionCostManagementViewPivotArrayInput interface {
	pulumi.Input

	ToSubscriptionCostManagementViewPivotArrayOutput() SubscriptionCostManagementViewPivotArrayOutput
	ToSubscriptionCostManagementViewPivotArrayOutputWithContext(context.Context) SubscriptionCostManagementViewPivotArrayOutput
}

type SubscriptionCostManagementViewPivotArray []SubscriptionCostManagementViewPivotInput

func (SubscriptionCostManagementViewPivotArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubscriptionCostManagementViewPivot)(nil)).Elem()
}

func (i SubscriptionCostManagementViewPivotArray) ToSubscriptionCostManagementViewPivotArrayOutput() SubscriptionCostManagementViewPivotArrayOutput {
	return i.ToSubscriptionCostManagementViewPivotArrayOutputWithContext(context.Background())
}

func (i SubscriptionCostManagementViewPivotArray) ToSubscriptionCostManagementViewPivotArrayOutputWithContext(ctx context.Context) SubscriptionCostManagementViewPivotArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriptionCostManagementViewPivotArrayOutput)
}

type SubscriptionCostManagementViewPivotOutput struct{ *pulumi.OutputState }

func (SubscriptionCostManagementViewPivotOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubscriptionCostManagementViewPivot)(nil)).Elem()
}

func (o SubscriptionCostManagementViewPivotOutput) ToSubscriptionCostManagementViewPivotOutput() SubscriptionCostManagementViewPivotOutput {
	return o
}

func (o SubscriptionCostManagementViewPivotOutput) ToSubscriptionCostManagementViewPivotOutputWithContext(ctx context.Context) SubscriptionCostManagementViewPivotOutput {
	return o
}

// The name of the column which should be used for this sub-view in the Cost Analysis UI.
func (o SubscriptionCostManagementViewPivotOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v SubscriptionCostManagementViewPivot) string { return v.Name }).(pulumi.StringOutput)
}

// The data type to show in this sub-view. Possible values are `Dimension` and `TagKey`.
func (o SubscriptionCostManagementViewPivotOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v SubscriptionCostManagementViewPivot) string { return v.Type }).(pulumi.StringOutput)
}

type SubscriptionCostManagementViewPivotArrayOutput struct{ *pulumi.OutputState }

func (SubscriptionCostManagementViewPivotArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubscriptionCostManagementViewPivot)(nil)).Elem()
}

func (o SubscriptionCostManagementViewPivotArrayOutput) ToSubscriptionCostManagementViewPivotArrayOutput() SubscriptionCostManagementViewPivotArrayOutput {
	return o
}

func (o SubscriptionCostManagementViewPivotArrayOutput) ToSubscriptionCostManagementViewPivotArrayOutputWithContext(ctx context.Context) SubscriptionCostManagementViewPivotArrayOutput {
	return o
}

func (o SubscriptionCostManagementViewPivotArrayOutput) Index(i pulumi.IntInput) SubscriptionCostManagementViewPivotOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubscriptionCostManagementViewPivot {
		return vs[0].([]SubscriptionCostManagementViewPivot)[vs[1].(int)]
	}).(SubscriptionCostManagementViewPivotOutput)
}

type SubscriptionPolicyAssignmentIdentity struct {
	// A list of User Managed Identity IDs which should be assigned to the Policy Definition.
	//
	// > **NOTE:** This is required when `type` is set to `UserAssigned`.
	IdentityIds []string `pulumi:"identityIds"`
	// The Principal ID of the Policy Assignment for this Subscription.
	PrincipalId *string `pulumi:"principalId"`
	// The Tenant ID of the Policy Assignment for this Subscription.
	TenantId *string `pulumi:"tenantId"`
	// The Type of Managed Identity which should be added to this Policy Definition. Possible values are `SystemAssigned` or `UserAssigned`.
	Type string `pulumi:"type"`
}

// SubscriptionPolicyAssignmentIdentityInput is an input type that accepts SubscriptionPolicyAssignmentIdentityArgs and SubscriptionPolicyAssignmentIdentityOutput values.
// You can construct a concrete instance of `SubscriptionPolicyAssignmentIdentityInput` via:
//
//	SubscriptionPolicyAssignmentIdentityArgs{...}
type SubscriptionPolicyAssignmentIdentityInput interface {
	pulumi.Input

	ToSubscriptionPolicyAssignmentIdentityOutput() SubscriptionPolicyAssignmentIdentityOutput
	ToSubscriptionPolicyAssignmentIdentityOutputWithContext(context.Context) SubscriptionPolicyAssignmentIdentityOutput
}

type SubscriptionPolicyAssignmentIdentityArgs struct {
	// A list of User Managed Identity IDs which should be assigned to the Policy Definition.
	//
	// > **NOTE:** This is required when `type` is set to `UserAssigned`.
	IdentityIds pulumi.StringArrayInput `pulumi:"identityIds"`
	// The Principal ID of the Policy Assignment for this Subscription.
	PrincipalId pulumi.StringPtrInput `pulumi:"principalId"`
	// The Tenant ID of the Policy Assignment for this Subscription.
	TenantId pulumi.StringPtrInput `pulumi:"tenantId"`
	// The Type of Managed Identity which should be added to this Policy Definition. Possible values are `SystemAssigned` or `UserAssigned`.
	Type pulumi.StringInput `pulumi:"type"`
}

func (SubscriptionPolicyAssignmentIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubscriptionPolicyAssignmentIdentity)(nil)).Elem()
}

func (i SubscriptionPolicyAssignmentIdentityArgs) ToSubscriptionPolicyAssignmentIdentityOutput() SubscriptionPolicyAssignmentIdentityOutput {
	return i.ToSubscriptionPolicyAssignmentIdentityOutputWithContext(context.Background())
}

func (i SubscriptionPolicyAssignmentIdentityArgs) ToSubscriptionPolicyAssignmentIdentityOutputWithContext(ctx context.Context) SubscriptionPolicyAssignmentIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriptionPolicyAssignmentIdentityOutput)
}

func (i SubscriptionPolicyAssignmentIdentityArgs) ToSubscriptionPolicyAssignmentIdentityPtrOutput() SubscriptionPolicyAssignmentIdentityPtrOutput {
	return i.ToSubscriptionPolicyAssignmentIdentityPtrOutputWithContext(context.Background())
}

func (i SubscriptionPolicyAssignmentIdentityArgs) ToSubscriptionPolicyAssignmentIdentityPtrOutputWithContext(ctx context.Context) SubscriptionPolicyAssignmentIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriptionPolicyAssignmentIdentityOutput).ToSubscriptionPolicyAssignmentIdentityPtrOutputWithContext(ctx)
}

// SubscriptionPolicyAssignmentIdentityPtrInput is an input type that accepts SubscriptionPolicyAssignmentIdentityArgs, SubscriptionPolicyAssignmentIdentityPtr and SubscriptionPolicyAssignmentIdentityPtrOutput values.
// You can construct a concrete instance of `SubscriptionPolicyAssignmentIdentityPtrInput` via:
//
//	        SubscriptionPolicyAssignmentIdentityArgs{...}
//
//	or:
//
//	        nil
type SubscriptionPolicyAssignmentIdentityPtrInput interface {
	pulumi.Input

	ToSubscriptionPolicyAssignmentIdentityPtrOutput() SubscriptionPolicyAssignmentIdentityPtrOutput
	ToSubscriptionPolicyAssignmentIdentityPtrOutputWithContext(context.Context) SubscriptionPolicyAssignmentIdentityPtrOutput
}

type subscriptionPolicyAssignmentIdentityPtrType SubscriptionPolicyAssignmentIdentityArgs

func SubscriptionPolicyAssignmentIdentityPtr(v *SubscriptionPolicyAssignmentIdentityArgs) SubscriptionPolicyAssignmentIdentityPtrInput {
	return (*subscriptionPolicyAssignmentIdentityPtrType)(v)
}

func (*subscriptionPolicyAssignmentIdentityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SubscriptionPolicyAssignmentIdentity)(nil)).Elem()
}

func (i *subscriptionPolicyAssignmentIdentityPtrType) ToSubscriptionPolicyAssignmentIdentityPtrOutput() SubscriptionPolicyAssignmentIdentityPtrOutput {
	return i.ToSubscriptionPolicyAssignmentIdentityPtrOutputWithContext(context.Background())
}

func (i *subscriptionPolicyAssignmentIdentityPtrType) ToSubscriptionPolicyAssignmentIdentityPtrOutputWithContext(ctx context.Context) SubscriptionPolicyAssignmentIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriptionPolicyAssignmentIdentityPtrOutput)
}

type SubscriptionPolicyAssignmentIdentityOutput struct{ *pulumi.OutputState }

func (SubscriptionPolicyAssignmentIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubscriptionPolicyAssignmentIdentity)(nil)).Elem()
}

func (o SubscriptionPolicyAssignmentIdentityOutput) ToSubscriptionPolicyAssignmentIdentityOutput() SubscriptionPolicyAssignmentIdentityOutput {
	return o
}

func (o SubscriptionPolicyAssignmentIdentityOutput) ToSubscriptionPolicyAssignmentIdentityOutputWithContext(ctx context.Context) SubscriptionPolicyAssignmentIdentityOutput {
	return o
}

func (o SubscriptionPolicyAssignmentIdentityOutput) ToSubscriptionPolicyAssignmentIdentityPtrOutput() SubscriptionPolicyAssignmentIdentityPtrOutput {
	return o.ToSubscriptionPolicyAssignmentIdentityPtrOutputWithContext(context.Background())
}

func (o SubscriptionPolicyAssignmentIdentityOutput) ToSubscriptionPolicyAssignmentIdentityPtrOutputWithContext(ctx context.Context) SubscriptionPolicyAssignmentIdentityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SubscriptionPolicyAssignmentIdentity) *SubscriptionPolicyAssignmentIdentity {
		return &v
	}).(SubscriptionPolicyAssignmentIdentityPtrOutput)
}

// A list of User Managed Identity IDs which should be assigned to the Policy Definition.
//
// > **NOTE:** This is required when `type` is set to `UserAssigned`.
func (o SubscriptionPolicyAssignmentIdentityOutput) IdentityIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SubscriptionPolicyAssignmentIdentity) []string { return v.IdentityIds }).(pulumi.StringArrayOutput)
}

// The Principal ID of the Policy Assignment for this Subscription.
func (o SubscriptionPolicyAssignmentIdentityOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubscriptionPolicyAssignmentIdentity) *string { return v.PrincipalId }).(pulumi.StringPtrOutput)
}

// The Tenant ID of the Policy Assignment for this Subscription.
func (o SubscriptionPolicyAssignmentIdentityOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubscriptionPolicyAssignmentIdentity) *string { return v.TenantId }).(pulumi.StringPtrOutput)
}

// The Type of Managed Identity which should be added to this Policy Definition. Possible values are `SystemAssigned` or `UserAssigned`.
func (o SubscriptionPolicyAssignmentIdentityOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v SubscriptionPolicyAssignmentIdentity) string { return v.Type }).(pulumi.StringOutput)
}

type SubscriptionPolicyAssignmentIdentityPtrOutput struct{ *pulumi.OutputState }

func (SubscriptionPolicyAssignmentIdentityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SubscriptionPolicyAssignmentIdentity)(nil)).Elem()
}

func (o SubscriptionPolicyAssignmentIdentityPtrOutput) ToSubscriptionPolicyAssignmentIdentityPtrOutput() SubscriptionPolicyAssignmentIdentityPtrOutput {
	return o
}

func (o SubscriptionPolicyAssignmentIdentityPtrOutput) ToSubscriptionPolicyAssignmentIdentityPtrOutputWithContext(ctx context.Context) SubscriptionPolicyAssignmentIdentityPtrOutput {
	return o
}

func (o SubscriptionPolicyAssignmentIdentityPtrOutput) Elem() SubscriptionPolicyAssignmentIdentityOutput {
	return o.ApplyT(func(v *SubscriptionPolicyAssignmentIdentity) SubscriptionPolicyAssignmentIdentity {
		if v != nil {
			return *v
		}
		var ret SubscriptionPolicyAssignmentIdentity
		return ret
	}).(SubscriptionPolicyAssignmentIdentityOutput)
}

// A list of User Managed Identity IDs which should be assigned to the Policy Definition.
//
// > **NOTE:** This is required when `type` is set to `UserAssigned`.
func (o SubscriptionPolicyAssignmentIdentityPtrOutput) IdentityIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SubscriptionPolicyAssignmentIdentity) []string {
		if v == nil {
			return nil
		}
		return v.IdentityIds
	}).(pulumi.StringArrayOutput)
}

// The Principal ID of the Policy Assignment for this Subscription.
func (o SubscriptionPolicyAssignmentIdentityPtrOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubscriptionPolicyAssignmentIdentity) *string {
		if v == nil {
			return nil
		}
		return v.PrincipalId
	}).(pulumi.StringPtrOutput)
}

// The Tenant ID of the Policy Assignment for this Subscription.
func (o SubscriptionPolicyAssignmentIdentityPtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubscriptionPolicyAssignmentIdentity) *string {
		if v == nil {
			return nil
		}
		return v.TenantId
	}).(pulumi.StringPtrOutput)
}

// The Type of Managed Identity which should be added to this Policy Definition. Possible values are `SystemAssigned` or `UserAssigned`.
func (o SubscriptionPolicyAssignmentIdentityPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubscriptionPolicyAssignmentIdentity) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type SubscriptionPolicyAssignmentNonComplianceMessage struct {
	// The non-compliance message text. When assigning policy sets (initiatives), unless `policyDefinitionReferenceId` is specified then this message will be the default for all policies.
	Content string `pulumi:"content"`
	// When assigning policy sets (initiatives), this is the ID of the policy definition that the non-compliance message applies to.
	PolicyDefinitionReferenceId *string `pulumi:"policyDefinitionReferenceId"`
}

// SubscriptionPolicyAssignmentNonComplianceMessageInput is an input type that accepts SubscriptionPolicyAssignmentNonComplianceMessageArgs and SubscriptionPolicyAssignmentNonComplianceMessageOutput values.
// You can construct a concrete instance of `SubscriptionPolicyAssignmentNonComplianceMessageInput` via:
//
//	SubscriptionPolicyAssignmentNonComplianceMessageArgs{...}
type SubscriptionPolicyAssignmentNonComplianceMessageInput interface {
	pulumi.Input

	ToSubscriptionPolicyAssignmentNonComplianceMessageOutput() SubscriptionPolicyAssignmentNonComplianceMessageOutput
	ToSubscriptionPolicyAssignmentNonComplianceMessageOutputWithContext(context.Context) SubscriptionPolicyAssignmentNonComplianceMessageOutput
}

type SubscriptionPolicyAssignmentNonComplianceMessageArgs struct {
	// The non-compliance message text. When assigning policy sets (initiatives), unless `policyDefinitionReferenceId` is specified then this message will be the default for all policies.
	Content pulumi.StringInput `pulumi:"content"`
	// When assigning policy sets (initiatives), this is the ID of the policy definition that the non-compliance message applies to.
	PolicyDefinitionReferenceId pulumi.StringPtrInput `pulumi:"policyDefinitionReferenceId"`
}

func (SubscriptionPolicyAssignmentNonComplianceMessageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubscriptionPolicyAssignmentNonComplianceMessage)(nil)).Elem()
}

func (i SubscriptionPolicyAssignmentNonComplianceMessageArgs) ToSubscriptionPolicyAssignmentNonComplianceMessageOutput() SubscriptionPolicyAssignmentNonComplianceMessageOutput {
	return i.ToSubscriptionPolicyAssignmentNonComplianceMessageOutputWithContext(context.Background())
}

func (i SubscriptionPolicyAssignmentNonComplianceMessageArgs) ToSubscriptionPolicyAssignmentNonComplianceMessageOutputWithContext(ctx context.Context) SubscriptionPolicyAssignmentNonComplianceMessageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriptionPolicyAssignmentNonComplianceMessageOutput)
}

// SubscriptionPolicyAssignmentNonComplianceMessageArrayInput is an input type that accepts SubscriptionPolicyAssignmentNonComplianceMessageArray and SubscriptionPolicyAssignmentNonComplianceMessageArrayOutput values.
// You can construct a concrete instance of `SubscriptionPolicyAssignmentNonComplianceMessageArrayInput` via:
//
//	SubscriptionPolicyAssignmentNonComplianceMessageArray{ SubscriptionPolicyAssignmentNonComplianceMessageArgs{...} }
type SubscriptionPolicyAssignmentNonComplianceMessageArrayInput interface {
	pulumi.Input

	ToSubscriptionPolicyAssignmentNonComplianceMessageArrayOutput() SubscriptionPolicyAssignmentNonComplianceMessageArrayOutput
	ToSubscriptionPolicyAssignmentNonComplianceMessageArrayOutputWithContext(context.Context) SubscriptionPolicyAssignmentNonComplianceMessageArrayOutput
}

type SubscriptionPolicyAssignmentNonComplianceMessageArray []SubscriptionPolicyAssignmentNonComplianceMessageInput

func (SubscriptionPolicyAssignmentNonComplianceMessageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubscriptionPolicyAssignmentNonComplianceMessage)(nil)).Elem()
}

func (i SubscriptionPolicyAssignmentNonComplianceMessageArray) ToSubscriptionPolicyAssignmentNonComplianceMessageArrayOutput() SubscriptionPolicyAssignmentNonComplianceMessageArrayOutput {
	return i.ToSubscriptionPolicyAssignmentNonComplianceMessageArrayOutputWithContext(context.Background())
}

func (i SubscriptionPolicyAssignmentNonComplianceMessageArray) ToSubscriptionPolicyAssignmentNonComplianceMessageArrayOutputWithContext(ctx context.Context) SubscriptionPolicyAssignmentNonComplianceMessageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriptionPolicyAssignmentNonComplianceMessageArrayOutput)
}

type SubscriptionPolicyAssignmentNonComplianceMessageOutput struct{ *pulumi.OutputState }

func (SubscriptionPolicyAssignmentNonComplianceMessageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubscriptionPolicyAssignmentNonComplianceMessage)(nil)).Elem()
}

func (o SubscriptionPolicyAssignmentNonComplianceMessageOutput) ToSubscriptionPolicyAssignmentNonComplianceMessageOutput() SubscriptionPolicyAssignmentNonComplianceMessageOutput {
	return o
}

func (o SubscriptionPolicyAssignmentNonComplianceMessageOutput) ToSubscriptionPolicyAssignmentNonComplianceMessageOutputWithContext(ctx context.Context) SubscriptionPolicyAssignmentNonComplianceMessageOutput {
	return o
}

// The non-compliance message text. When assigning policy sets (initiatives), unless `policyDefinitionReferenceId` is specified then this message will be the default for all policies.
func (o SubscriptionPolicyAssignmentNonComplianceMessageOutput) Content() pulumi.StringOutput {
	return o.ApplyT(func(v SubscriptionPolicyAssignmentNonComplianceMessage) string { return v.Content }).(pulumi.StringOutput)
}

// When assigning policy sets (initiatives), this is the ID of the policy definition that the non-compliance message applies to.
func (o SubscriptionPolicyAssignmentNonComplianceMessageOutput) PolicyDefinitionReferenceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubscriptionPolicyAssignmentNonComplianceMessage) *string { return v.PolicyDefinitionReferenceId }).(pulumi.StringPtrOutput)
}

type SubscriptionPolicyAssignmentNonComplianceMessageArrayOutput struct{ *pulumi.OutputState }

func (SubscriptionPolicyAssignmentNonComplianceMessageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubscriptionPolicyAssignmentNonComplianceMessage)(nil)).Elem()
}

func (o SubscriptionPolicyAssignmentNonComplianceMessageArrayOutput) ToSubscriptionPolicyAssignmentNonComplianceMessageArrayOutput() SubscriptionPolicyAssignmentNonComplianceMessageArrayOutput {
	return o
}

func (o SubscriptionPolicyAssignmentNonComplianceMessageArrayOutput) ToSubscriptionPolicyAssignmentNonComplianceMessageArrayOutputWithContext(ctx context.Context) SubscriptionPolicyAssignmentNonComplianceMessageArrayOutput {
	return o
}

func (o SubscriptionPolicyAssignmentNonComplianceMessageArrayOutput) Index(i pulumi.IntInput) SubscriptionPolicyAssignmentNonComplianceMessageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubscriptionPolicyAssignmentNonComplianceMessage {
		return vs[0].([]SubscriptionPolicyAssignmentNonComplianceMessage)[vs[1].(int)]
	}).(SubscriptionPolicyAssignmentNonComplianceMessageOutput)
}

type SubscriptionPolicyAssignmentOverride struct {
	// One or more `overrideSelector` block as defined below.
	Selectors []SubscriptionPolicyAssignmentOverrideSelector `pulumi:"selectors"`
	// Specifies the value to override the policy property. Possible values for `policyEffect` override listed [policy effects](https://learn.microsoft.com/en-us/azure/governance/policy/concepts/effects).
	Value string `pulumi:"value"`
}

// SubscriptionPolicyAssignmentOverrideInput is an input type that accepts SubscriptionPolicyAssignmentOverrideArgs and SubscriptionPolicyAssignmentOverrideOutput values.
// You can construct a concrete instance of `SubscriptionPolicyAssignmentOverrideInput` via:
//
//	SubscriptionPolicyAssignmentOverrideArgs{...}
type SubscriptionPolicyAssignmentOverrideInput interface {
	pulumi.Input

	ToSubscriptionPolicyAssignmentOverrideOutput() SubscriptionPolicyAssignmentOverrideOutput
	ToSubscriptionPolicyAssignmentOverrideOutputWithContext(context.Context) SubscriptionPolicyAssignmentOverrideOutput
}

type SubscriptionPolicyAssignmentOverrideArgs struct {
	// One or more `overrideSelector` block as defined below.
	Selectors SubscriptionPolicyAssignmentOverrideSelectorArrayInput `pulumi:"selectors"`
	// Specifies the value to override the policy property. Possible values for `policyEffect` override listed [policy effects](https://learn.microsoft.com/en-us/azure/governance/policy/concepts/effects).
	Value pulumi.StringInput `pulumi:"value"`
}

func (SubscriptionPolicyAssignmentOverrideArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubscriptionPolicyAssignmentOverride)(nil)).Elem()
}

func (i SubscriptionPolicyAssignmentOverrideArgs) ToSubscriptionPolicyAssignmentOverrideOutput() SubscriptionPolicyAssignmentOverrideOutput {
	return i.ToSubscriptionPolicyAssignmentOverrideOutputWithContext(context.Background())
}

func (i SubscriptionPolicyAssignmentOverrideArgs) ToSubscriptionPolicyAssignmentOverrideOutputWithContext(ctx context.Context) SubscriptionPolicyAssignmentOverrideOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriptionPolicyAssignmentOverrideOutput)
}

// SubscriptionPolicyAssignmentOverrideArrayInput is an input type that accepts SubscriptionPolicyAssignmentOverrideArray and SubscriptionPolicyAssignmentOverrideArrayOutput values.
// You can construct a concrete instance of `SubscriptionPolicyAssignmentOverrideArrayInput` via:
//
//	SubscriptionPolicyAssignmentOverrideArray{ SubscriptionPolicyAssignmentOverrideArgs{...} }
type SubscriptionPolicyAssignmentOverrideArrayInput interface {
	pulumi.Input

	ToSubscriptionPolicyAssignmentOverrideArrayOutput() SubscriptionPolicyAssignmentOverrideArrayOutput
	ToSubscriptionPolicyAssignmentOverrideArrayOutputWithContext(context.Context) SubscriptionPolicyAssignmentOverrideArrayOutput
}

type SubscriptionPolicyAssignmentOverrideArray []SubscriptionPolicyAssignmentOverrideInput

func (SubscriptionPolicyAssignmentOverrideArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubscriptionPolicyAssignmentOverride)(nil)).Elem()
}

func (i SubscriptionPolicyAssignmentOverrideArray) ToSubscriptionPolicyAssignmentOverrideArrayOutput() SubscriptionPolicyAssignmentOverrideArrayOutput {
	return i.ToSubscriptionPolicyAssignmentOverrideArrayOutputWithContext(context.Background())
}

func (i SubscriptionPolicyAssignmentOverrideArray) ToSubscriptionPolicyAssignmentOverrideArrayOutputWithContext(ctx context.Context) SubscriptionPolicyAssignmentOverrideArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriptionPolicyAssignmentOverrideArrayOutput)
}

type SubscriptionPolicyAssignmentOverrideOutput struct{ *pulumi.OutputState }

func (SubscriptionPolicyAssignmentOverrideOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubscriptionPolicyAssignmentOverride)(nil)).Elem()
}

func (o SubscriptionPolicyAssignmentOverrideOutput) ToSubscriptionPolicyAssignmentOverrideOutput() SubscriptionPolicyAssignmentOverrideOutput {
	return o
}

func (o SubscriptionPolicyAssignmentOverrideOutput) ToSubscriptionPolicyAssignmentOverrideOutputWithContext(ctx context.Context) SubscriptionPolicyAssignmentOverrideOutput {
	return o
}

// One or more `overrideSelector` block as defined below.
func (o SubscriptionPolicyAssignmentOverrideOutput) Selectors() SubscriptionPolicyAssignmentOverrideSelectorArrayOutput {
	return o.ApplyT(func(v SubscriptionPolicyAssignmentOverride) []SubscriptionPolicyAssignmentOverrideSelector {
		return v.Selectors
	}).(SubscriptionPolicyAssignmentOverrideSelectorArrayOutput)
}

// Specifies the value to override the policy property. Possible values for `policyEffect` override listed [policy effects](https://learn.microsoft.com/en-us/azure/governance/policy/concepts/effects).
func (o SubscriptionPolicyAssignmentOverrideOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v SubscriptionPolicyAssignmentOverride) string { return v.Value }).(pulumi.StringOutput)
}

type SubscriptionPolicyAssignmentOverrideArrayOutput struct{ *pulumi.OutputState }

func (SubscriptionPolicyAssignmentOverrideArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubscriptionPolicyAssignmentOverride)(nil)).Elem()
}

func (o SubscriptionPolicyAssignmentOverrideArrayOutput) ToSubscriptionPolicyAssignmentOverrideArrayOutput() SubscriptionPolicyAssignmentOverrideArrayOutput {
	return o
}

func (o SubscriptionPolicyAssignmentOverrideArrayOutput) ToSubscriptionPolicyAssignmentOverrideArrayOutputWithContext(ctx context.Context) SubscriptionPolicyAssignmentOverrideArrayOutput {
	return o
}

func (o SubscriptionPolicyAssignmentOverrideArrayOutput) Index(i pulumi.IntInput) SubscriptionPolicyAssignmentOverrideOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubscriptionPolicyAssignmentOverride {
		return vs[0].([]SubscriptionPolicyAssignmentOverride)[vs[1].(int)]
	}).(SubscriptionPolicyAssignmentOverrideOutput)
}

type SubscriptionPolicyAssignmentOverrideSelector struct {
	// Specify the list of policy reference id values to filter in. Cannot be used with `notIn`.
	Ins []string `pulumi:"ins"`
	// Specifies which characteristic will narrow down the set of evaluated resources. Possible values are `resourceLocation`, `resourceType` and `resourceWithoutLocation`.
	Kind *string `pulumi:"kind"`
	// Specify the list of policy reference id values to filter out. Cannot be used with `in`.
	NotIns []string `pulumi:"notIns"`
}

// SubscriptionPolicyAssignmentOverrideSelectorInput is an input type that accepts SubscriptionPolicyAssignmentOverrideSelectorArgs and SubscriptionPolicyAssignmentOverrideSelectorOutput values.
// You can construct a concrete instance of `SubscriptionPolicyAssignmentOverrideSelectorInput` via:
//
//	SubscriptionPolicyAssignmentOverrideSelectorArgs{...}
type SubscriptionPolicyAssignmentOverrideSelectorInput interface {
	pulumi.Input

	ToSubscriptionPolicyAssignmentOverrideSelectorOutput() SubscriptionPolicyAssignmentOverrideSelectorOutput
	ToSubscriptionPolicyAssignmentOverrideSelectorOutputWithContext(context.Context) SubscriptionPolicyAssignmentOverrideSelectorOutput
}

type SubscriptionPolicyAssignmentOverrideSelectorArgs struct {
	// Specify the list of policy reference id values to filter in. Cannot be used with `notIn`.
	Ins pulumi.StringArrayInput `pulumi:"ins"`
	// Specifies which characteristic will narrow down the set of evaluated resources. Possible values are `resourceLocation`, `resourceType` and `resourceWithoutLocation`.
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Specify the list of policy reference id values to filter out. Cannot be used with `in`.
	NotIns pulumi.StringArrayInput `pulumi:"notIns"`
}

func (SubscriptionPolicyAssignmentOverrideSelectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubscriptionPolicyAssignmentOverrideSelector)(nil)).Elem()
}

func (i SubscriptionPolicyAssignmentOverrideSelectorArgs) ToSubscriptionPolicyAssignmentOverrideSelectorOutput() SubscriptionPolicyAssignmentOverrideSelectorOutput {
	return i.ToSubscriptionPolicyAssignmentOverrideSelectorOutputWithContext(context.Background())
}

func (i SubscriptionPolicyAssignmentOverrideSelectorArgs) ToSubscriptionPolicyAssignmentOverrideSelectorOutputWithContext(ctx context.Context) SubscriptionPolicyAssignmentOverrideSelectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriptionPolicyAssignmentOverrideSelectorOutput)
}

// SubscriptionPolicyAssignmentOverrideSelectorArrayInput is an input type that accepts SubscriptionPolicyAssignmentOverrideSelectorArray and SubscriptionPolicyAssignmentOverrideSelectorArrayOutput values.
// You can construct a concrete instance of `SubscriptionPolicyAssignmentOverrideSelectorArrayInput` via:
//
//	SubscriptionPolicyAssignmentOverrideSelectorArray{ SubscriptionPolicyAssignmentOverrideSelectorArgs{...} }
type SubscriptionPolicyAssignmentOverrideSelectorArrayInput interface {
	pulumi.Input

	ToSubscriptionPolicyAssignmentOverrideSelectorArrayOutput() SubscriptionPolicyAssignmentOverrideSelectorArrayOutput
	ToSubscriptionPolicyAssignmentOverrideSelectorArrayOutputWithContext(context.Context) SubscriptionPolicyAssignmentOverrideSelectorArrayOutput
}

type SubscriptionPolicyAssignmentOverrideSelectorArray []SubscriptionPolicyAssignmentOverrideSelectorInput

func (SubscriptionPolicyAssignmentOverrideSelectorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubscriptionPolicyAssignmentOverrideSelector)(nil)).Elem()
}

func (i SubscriptionPolicyAssignmentOverrideSelectorArray) ToSubscriptionPolicyAssignmentOverrideSelectorArrayOutput() SubscriptionPolicyAssignmentOverrideSelectorArrayOutput {
	return i.ToSubscriptionPolicyAssignmentOverrideSelectorArrayOutputWithContext(context.Background())
}

func (i SubscriptionPolicyAssignmentOverrideSelectorArray) ToSubscriptionPolicyAssignmentOverrideSelectorArrayOutputWithContext(ctx context.Context) SubscriptionPolicyAssignmentOverrideSelectorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriptionPolicyAssignmentOverrideSelectorArrayOutput)
}

type SubscriptionPolicyAssignmentOverrideSelectorOutput struct{ *pulumi.OutputState }

func (SubscriptionPolicyAssignmentOverrideSelectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubscriptionPolicyAssignmentOverrideSelector)(nil)).Elem()
}

func (o SubscriptionPolicyAssignmentOverrideSelectorOutput) ToSubscriptionPolicyAssignmentOverrideSelectorOutput() SubscriptionPolicyAssignmentOverrideSelectorOutput {
	return o
}

func (o SubscriptionPolicyAssignmentOverrideSelectorOutput) ToSubscriptionPolicyAssignmentOverrideSelectorOutputWithContext(ctx context.Context) SubscriptionPolicyAssignmentOverrideSelectorOutput {
	return o
}

// Specify the list of policy reference id values to filter in. Cannot be used with `notIn`.
func (o SubscriptionPolicyAssignmentOverrideSelectorOutput) Ins() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SubscriptionPolicyAssignmentOverrideSelector) []string { return v.Ins }).(pulumi.StringArrayOutput)
}

// Specifies which characteristic will narrow down the set of evaluated resources. Possible values are `resourceLocation`, `resourceType` and `resourceWithoutLocation`.
func (o SubscriptionPolicyAssignmentOverrideSelectorOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubscriptionPolicyAssignmentOverrideSelector) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Specify the list of policy reference id values to filter out. Cannot be used with `in`.
func (o SubscriptionPolicyAssignmentOverrideSelectorOutput) NotIns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SubscriptionPolicyAssignmentOverrideSelector) []string { return v.NotIns }).(pulumi.StringArrayOutput)
}

type SubscriptionPolicyAssignmentOverrideSelectorArrayOutput struct{ *pulumi.OutputState }

func (SubscriptionPolicyAssignmentOverrideSelectorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubscriptionPolicyAssignmentOverrideSelector)(nil)).Elem()
}

func (o SubscriptionPolicyAssignmentOverrideSelectorArrayOutput) ToSubscriptionPolicyAssignmentOverrideSelectorArrayOutput() SubscriptionPolicyAssignmentOverrideSelectorArrayOutput {
	return o
}

func (o SubscriptionPolicyAssignmentOverrideSelectorArrayOutput) ToSubscriptionPolicyAssignmentOverrideSelectorArrayOutputWithContext(ctx context.Context) SubscriptionPolicyAssignmentOverrideSelectorArrayOutput {
	return o
}

func (o SubscriptionPolicyAssignmentOverrideSelectorArrayOutput) Index(i pulumi.IntInput) SubscriptionPolicyAssignmentOverrideSelectorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubscriptionPolicyAssignmentOverrideSelector {
		return vs[0].([]SubscriptionPolicyAssignmentOverrideSelector)[vs[1].(int)]
	}).(SubscriptionPolicyAssignmentOverrideSelectorOutput)
}

type SubscriptionPolicyAssignmentResourceSelector struct {
	// Specifies a name for the resource selector.
	Name *string `pulumi:"name"`
	// One or more `resourceSelector` block as defined below.
	Selectors []SubscriptionPolicyAssignmentResourceSelectorSelector `pulumi:"selectors"`
}

// SubscriptionPolicyAssignmentResourceSelectorInput is an input type that accepts SubscriptionPolicyAssignmentResourceSelectorArgs and SubscriptionPolicyAssignmentResourceSelectorOutput values.
// You can construct a concrete instance of `SubscriptionPolicyAssignmentResourceSelectorInput` via:
//
//	SubscriptionPolicyAssignmentResourceSelectorArgs{...}
type SubscriptionPolicyAssignmentResourceSelectorInput interface {
	pulumi.Input

	ToSubscriptionPolicyAssignmentResourceSelectorOutput() SubscriptionPolicyAssignmentResourceSelectorOutput
	ToSubscriptionPolicyAssignmentResourceSelectorOutputWithContext(context.Context) SubscriptionPolicyAssignmentResourceSelectorOutput
}

type SubscriptionPolicyAssignmentResourceSelectorArgs struct {
	// Specifies a name for the resource selector.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// One or more `resourceSelector` block as defined below.
	Selectors SubscriptionPolicyAssignmentResourceSelectorSelectorArrayInput `pulumi:"selectors"`
}

func (SubscriptionPolicyAssignmentResourceSelectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubscriptionPolicyAssignmentResourceSelector)(nil)).Elem()
}

func (i SubscriptionPolicyAssignmentResourceSelectorArgs) ToSubscriptionPolicyAssignmentResourceSelectorOutput() SubscriptionPolicyAssignmentResourceSelectorOutput {
	return i.ToSubscriptionPolicyAssignmentResourceSelectorOutputWithContext(context.Background())
}

func (i SubscriptionPolicyAssignmentResourceSelectorArgs) ToSubscriptionPolicyAssignmentResourceSelectorOutputWithContext(ctx context.Context) SubscriptionPolicyAssignmentResourceSelectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriptionPolicyAssignmentResourceSelectorOutput)
}

// SubscriptionPolicyAssignmentResourceSelectorArrayInput is an input type that accepts SubscriptionPolicyAssignmentResourceSelectorArray and SubscriptionPolicyAssignmentResourceSelectorArrayOutput values.
// You can construct a concrete instance of `SubscriptionPolicyAssignmentResourceSelectorArrayInput` via:
//
//	SubscriptionPolicyAssignmentResourceSelectorArray{ SubscriptionPolicyAssignmentResourceSelectorArgs{...} }
type SubscriptionPolicyAssignmentResourceSelectorArrayInput interface {
	pulumi.Input

	ToSubscriptionPolicyAssignmentResourceSelectorArrayOutput() SubscriptionPolicyAssignmentResourceSelectorArrayOutput
	ToSubscriptionPolicyAssignmentResourceSelectorArrayOutputWithContext(context.Context) SubscriptionPolicyAssignmentResourceSelectorArrayOutput
}

type SubscriptionPolicyAssignmentResourceSelectorArray []SubscriptionPolicyAssignmentResourceSelectorInput

func (SubscriptionPolicyAssignmentResourceSelectorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubscriptionPolicyAssignmentResourceSelector)(nil)).Elem()
}

func (i SubscriptionPolicyAssignmentResourceSelectorArray) ToSubscriptionPolicyAssignmentResourceSelectorArrayOutput() SubscriptionPolicyAssignmentResourceSelectorArrayOutput {
	return i.ToSubscriptionPolicyAssignmentResourceSelectorArrayOutputWithContext(context.Background())
}

func (i SubscriptionPolicyAssignmentResourceSelectorArray) ToSubscriptionPolicyAssignmentResourceSelectorArrayOutputWithContext(ctx context.Context) SubscriptionPolicyAssignmentResourceSelectorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriptionPolicyAssignmentResourceSelectorArrayOutput)
}

type SubscriptionPolicyAssignmentResourceSelectorOutput struct{ *pulumi.OutputState }

func (SubscriptionPolicyAssignmentResourceSelectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubscriptionPolicyAssignmentResourceSelector)(nil)).Elem()
}

func (o SubscriptionPolicyAssignmentResourceSelectorOutput) ToSubscriptionPolicyAssignmentResourceSelectorOutput() SubscriptionPolicyAssignmentResourceSelectorOutput {
	return o
}

func (o SubscriptionPolicyAssignmentResourceSelectorOutput) ToSubscriptionPolicyAssignmentResourceSelectorOutputWithContext(ctx context.Context) SubscriptionPolicyAssignmentResourceSelectorOutput {
	return o
}

// Specifies a name for the resource selector.
func (o SubscriptionPolicyAssignmentResourceSelectorOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubscriptionPolicyAssignmentResourceSelector) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// One or more `resourceSelector` block as defined below.
func (o SubscriptionPolicyAssignmentResourceSelectorOutput) Selectors() SubscriptionPolicyAssignmentResourceSelectorSelectorArrayOutput {
	return o.ApplyT(func(v SubscriptionPolicyAssignmentResourceSelector) []SubscriptionPolicyAssignmentResourceSelectorSelector {
		return v.Selectors
	}).(SubscriptionPolicyAssignmentResourceSelectorSelectorArrayOutput)
}

type SubscriptionPolicyAssignmentResourceSelectorArrayOutput struct{ *pulumi.OutputState }

func (SubscriptionPolicyAssignmentResourceSelectorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubscriptionPolicyAssignmentResourceSelector)(nil)).Elem()
}

func (o SubscriptionPolicyAssignmentResourceSelectorArrayOutput) ToSubscriptionPolicyAssignmentResourceSelectorArrayOutput() SubscriptionPolicyAssignmentResourceSelectorArrayOutput {
	return o
}

func (o SubscriptionPolicyAssignmentResourceSelectorArrayOutput) ToSubscriptionPolicyAssignmentResourceSelectorArrayOutputWithContext(ctx context.Context) SubscriptionPolicyAssignmentResourceSelectorArrayOutput {
	return o
}

func (o SubscriptionPolicyAssignmentResourceSelectorArrayOutput) Index(i pulumi.IntInput) SubscriptionPolicyAssignmentResourceSelectorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubscriptionPolicyAssignmentResourceSelector {
		return vs[0].([]SubscriptionPolicyAssignmentResourceSelector)[vs[1].(int)]
	}).(SubscriptionPolicyAssignmentResourceSelectorOutput)
}

type SubscriptionPolicyAssignmentResourceSelectorSelector struct {
	// Specify the list of policy reference id values to filter in. Cannot be used with `notIn`.
	Ins []string `pulumi:"ins"`
	// Specifies which characteristic will narrow down the set of evaluated resources. Possible values are `resourceLocation`, `resourceType` and `resourceWithoutLocation`.
	Kind string `pulumi:"kind"`
	// Specify the list of policy reference id values to filter out. Cannot be used with `in`.
	NotIns []string `pulumi:"notIns"`
}

// SubscriptionPolicyAssignmentResourceSelectorSelectorInput is an input type that accepts SubscriptionPolicyAssignmentResourceSelectorSelectorArgs and SubscriptionPolicyAssignmentResourceSelectorSelectorOutput values.
// You can construct a concrete instance of `SubscriptionPolicyAssignmentResourceSelectorSelectorInput` via:
//
//	SubscriptionPolicyAssignmentResourceSelectorSelectorArgs{...}
type SubscriptionPolicyAssignmentResourceSelectorSelectorInput interface {
	pulumi.Input

	ToSubscriptionPolicyAssignmentResourceSelectorSelectorOutput() SubscriptionPolicyAssignmentResourceSelectorSelectorOutput
	ToSubscriptionPolicyAssignmentResourceSelectorSelectorOutputWithContext(context.Context) SubscriptionPolicyAssignmentResourceSelectorSelectorOutput
}

type SubscriptionPolicyAssignmentResourceSelectorSelectorArgs struct {
	// Specify the list of policy reference id values to filter in. Cannot be used with `notIn`.
	Ins pulumi.StringArrayInput `pulumi:"ins"`
	// Specifies which characteristic will narrow down the set of evaluated resources. Possible values are `resourceLocation`, `resourceType` and `resourceWithoutLocation`.
	Kind pulumi.StringInput `pulumi:"kind"`
	// Specify the list of policy reference id values to filter out. Cannot be used with `in`.
	NotIns pulumi.StringArrayInput `pulumi:"notIns"`
}

func (SubscriptionPolicyAssignmentResourceSelectorSelectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubscriptionPolicyAssignmentResourceSelectorSelector)(nil)).Elem()
}

func (i SubscriptionPolicyAssignmentResourceSelectorSelectorArgs) ToSubscriptionPolicyAssignmentResourceSelectorSelectorOutput() SubscriptionPolicyAssignmentResourceSelectorSelectorOutput {
	return i.ToSubscriptionPolicyAssignmentResourceSelectorSelectorOutputWithContext(context.Background())
}

func (i SubscriptionPolicyAssignmentResourceSelectorSelectorArgs) ToSubscriptionPolicyAssignmentResourceSelectorSelectorOutputWithContext(ctx context.Context) SubscriptionPolicyAssignmentResourceSelectorSelectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriptionPolicyAssignmentResourceSelectorSelectorOutput)
}

// SubscriptionPolicyAssignmentResourceSelectorSelectorArrayInput is an input type that accepts SubscriptionPolicyAssignmentResourceSelectorSelectorArray and SubscriptionPolicyAssignmentResourceSelectorSelectorArrayOutput values.
// You can construct a concrete instance of `SubscriptionPolicyAssignmentResourceSelectorSelectorArrayInput` via:
//
//	SubscriptionPolicyAssignmentResourceSelectorSelectorArray{ SubscriptionPolicyAssignmentResourceSelectorSelectorArgs{...} }
type SubscriptionPolicyAssignmentResourceSelectorSelectorArrayInput interface {
	pulumi.Input

	ToSubscriptionPolicyAssignmentResourceSelectorSelectorArrayOutput() SubscriptionPolicyAssignmentResourceSelectorSelectorArrayOutput
	ToSubscriptionPolicyAssignmentResourceSelectorSelectorArrayOutputWithContext(context.Context) SubscriptionPolicyAssignmentResourceSelectorSelectorArrayOutput
}

type SubscriptionPolicyAssignmentResourceSelectorSelectorArray []SubscriptionPolicyAssignmentResourceSelectorSelectorInput

func (SubscriptionPolicyAssignmentResourceSelectorSelectorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubscriptionPolicyAssignmentResourceSelectorSelector)(nil)).Elem()
}

func (i SubscriptionPolicyAssignmentResourceSelectorSelectorArray) ToSubscriptionPolicyAssignmentResourceSelectorSelectorArrayOutput() SubscriptionPolicyAssignmentResourceSelectorSelectorArrayOutput {
	return i.ToSubscriptionPolicyAssignmentResourceSelectorSelectorArrayOutputWithContext(context.Background())
}

func (i SubscriptionPolicyAssignmentResourceSelectorSelectorArray) ToSubscriptionPolicyAssignmentResourceSelectorSelectorArrayOutputWithContext(ctx context.Context) SubscriptionPolicyAssignmentResourceSelectorSelectorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriptionPolicyAssignmentResourceSelectorSelectorArrayOutput)
}

type SubscriptionPolicyAssignmentResourceSelectorSelectorOutput struct{ *pulumi.OutputState }

func (SubscriptionPolicyAssignmentResourceSelectorSelectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubscriptionPolicyAssignmentResourceSelectorSelector)(nil)).Elem()
}

func (o SubscriptionPolicyAssignmentResourceSelectorSelectorOutput) ToSubscriptionPolicyAssignmentResourceSelectorSelectorOutput() SubscriptionPolicyAssignmentResourceSelectorSelectorOutput {
	return o
}

func (o SubscriptionPolicyAssignmentResourceSelectorSelectorOutput) ToSubscriptionPolicyAssignmentResourceSelectorSelectorOutputWithContext(ctx context.Context) SubscriptionPolicyAssignmentResourceSelectorSelectorOutput {
	return o
}

// Specify the list of policy reference id values to filter in. Cannot be used with `notIn`.
func (o SubscriptionPolicyAssignmentResourceSelectorSelectorOutput) Ins() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SubscriptionPolicyAssignmentResourceSelectorSelector) []string { return v.Ins }).(pulumi.StringArrayOutput)
}

// Specifies which characteristic will narrow down the set of evaluated resources. Possible values are `resourceLocation`, `resourceType` and `resourceWithoutLocation`.
func (o SubscriptionPolicyAssignmentResourceSelectorSelectorOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v SubscriptionPolicyAssignmentResourceSelectorSelector) string { return v.Kind }).(pulumi.StringOutput)
}

// Specify the list of policy reference id values to filter out. Cannot be used with `in`.
func (o SubscriptionPolicyAssignmentResourceSelectorSelectorOutput) NotIns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SubscriptionPolicyAssignmentResourceSelectorSelector) []string { return v.NotIns }).(pulumi.StringArrayOutput)
}

type SubscriptionPolicyAssignmentResourceSelectorSelectorArrayOutput struct{ *pulumi.OutputState }

func (SubscriptionPolicyAssignmentResourceSelectorSelectorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubscriptionPolicyAssignmentResourceSelectorSelector)(nil)).Elem()
}

func (o SubscriptionPolicyAssignmentResourceSelectorSelectorArrayOutput) ToSubscriptionPolicyAssignmentResourceSelectorSelectorArrayOutput() SubscriptionPolicyAssignmentResourceSelectorSelectorArrayOutput {
	return o
}

func (o SubscriptionPolicyAssignmentResourceSelectorSelectorArrayOutput) ToSubscriptionPolicyAssignmentResourceSelectorSelectorArrayOutputWithContext(ctx context.Context) SubscriptionPolicyAssignmentResourceSelectorSelectorArrayOutput {
	return o
}

func (o SubscriptionPolicyAssignmentResourceSelectorSelectorArrayOutput) Index(i pulumi.IntInput) SubscriptionPolicyAssignmentResourceSelectorSelectorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubscriptionPolicyAssignmentResourceSelectorSelector {
		return vs[0].([]SubscriptionPolicyAssignmentResourceSelectorSelector)[vs[1].(int)]
	}).(SubscriptionPolicyAssignmentResourceSelectorSelectorOutput)
}

type GetResourcesResource struct {
	// The ID of this Resource.
	Id string `pulumi:"id"`
	// The Azure Region in which this Resource exists.
	Location string `pulumi:"location"`
	// The name of the Resource.
	Name string `pulumi:"name"`
	// The name of the Resource group where the Resources are located.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// A map of tags assigned to this Resource.
	Tags map[string]string `pulumi:"tags"`
	// The Resource Type of the Resources you want to list (e.g. `Microsoft.Network/virtualNetworks`). A resource type's name follows the format: `{resource-provider}/{resource-type}`. The resource type for a key vault is `Microsoft.KeyVault/vaults`. A full list of available Resource Providers can be found [here](https://docs.microsoft.com/azure/azure-resource-manager/azure-services-resource-providers). A full list of Resources Types can be found [here](https://learn.microsoft.com/en-us/azure/templates/#find-resources).
	Type string `pulumi:"type"`
}

// GetResourcesResourceInput is an input type that accepts GetResourcesResourceArgs and GetResourcesResourceOutput values.
// You can construct a concrete instance of `GetResourcesResourceInput` via:
//
//	GetResourcesResourceArgs{...}
type GetResourcesResourceInput interface {
	pulumi.Input

	ToGetResourcesResourceOutput() GetResourcesResourceOutput
	ToGetResourcesResourceOutputWithContext(context.Context) GetResourcesResourceOutput
}

type GetResourcesResourceArgs struct {
	// The ID of this Resource.
	Id pulumi.StringInput `pulumi:"id"`
	// The Azure Region in which this Resource exists.
	Location pulumi.StringInput `pulumi:"location"`
	// The name of the Resource.
	Name pulumi.StringInput `pulumi:"name"`
	// The name of the Resource group where the Resources are located.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
	// A map of tags assigned to this Resource.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// The Resource Type of the Resources you want to list (e.g. `Microsoft.Network/virtualNetworks`). A resource type's name follows the format: `{resource-provider}/{resource-type}`. The resource type for a key vault is `Microsoft.KeyVault/vaults`. A full list of available Resource Providers can be found [here](https://docs.microsoft.com/azure/azure-resource-manager/azure-services-resource-providers). A full list of Resources Types can be found [here](https://learn.microsoft.com/en-us/azure/templates/#find-resources).
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetResourcesResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResourcesResource)(nil)).Elem()
}

func (i GetResourcesResourceArgs) ToGetResourcesResourceOutput() GetResourcesResourceOutput {
	return i.ToGetResourcesResourceOutputWithContext(context.Background())
}

func (i GetResourcesResourceArgs) ToGetResourcesResourceOutputWithContext(ctx context.Context) GetResourcesResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetResourcesResourceOutput)
}

// GetResourcesResourceArrayInput is an input type that accepts GetResourcesResourceArray and GetResourcesResourceArrayOutput values.
// You can construct a concrete instance of `GetResourcesResourceArrayInput` via:
//
//	GetResourcesResourceArray{ GetResourcesResourceArgs{...} }
type GetResourcesResourceArrayInput interface {
	pulumi.Input

	ToGetResourcesResourceArrayOutput() GetResourcesResourceArrayOutput
	ToGetResourcesResourceArrayOutputWithContext(context.Context) GetResourcesResourceArrayOutput
}

type GetResourcesResourceArray []GetResourcesResourceInput

func (GetResourcesResourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetResourcesResource)(nil)).Elem()
}

func (i GetResourcesResourceArray) ToGetResourcesResourceArrayOutput() GetResourcesResourceArrayOutput {
	return i.ToGetResourcesResourceArrayOutputWithContext(context.Background())
}

func (i GetResourcesResourceArray) ToGetResourcesResourceArrayOutputWithContext(ctx context.Context) GetResourcesResourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetResourcesResourceArrayOutput)
}

type GetResourcesResourceOutput struct{ *pulumi.OutputState }

func (GetResourcesResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResourcesResource)(nil)).Elem()
}

func (o GetResourcesResourceOutput) ToGetResourcesResourceOutput() GetResourcesResourceOutput {
	return o
}

func (o GetResourcesResourceOutput) ToGetResourcesResourceOutputWithContext(ctx context.Context) GetResourcesResourceOutput {
	return o
}

// The ID of this Resource.
func (o GetResourcesResourceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetResourcesResource) string { return v.Id }).(pulumi.StringOutput)
}

// The Azure Region in which this Resource exists.
func (o GetResourcesResourceOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v GetResourcesResource) string { return v.Location }).(pulumi.StringOutput)
}

// The name of the Resource.
func (o GetResourcesResourceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetResourcesResource) string { return v.Name }).(pulumi.StringOutput)
}

// The name of the Resource group where the Resources are located.
func (o GetResourcesResourceOutput) ResourceGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v GetResourcesResource) string { return v.ResourceGroupName }).(pulumi.StringOutput)
}

// A map of tags assigned to this Resource.
func (o GetResourcesResourceOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetResourcesResource) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The Resource Type of the Resources you want to list (e.g. `Microsoft.Network/virtualNetworks`). A resource type's name follows the format: `{resource-provider}/{resource-type}`. The resource type for a key vault is `Microsoft.KeyVault/vaults`. A full list of available Resource Providers can be found [here](https://docs.microsoft.com/azure/azure-resource-manager/azure-services-resource-providers). A full list of Resources Types can be found [here](https://learn.microsoft.com/en-us/azure/templates/#find-resources).
func (o GetResourcesResourceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetResourcesResource) string { return v.Type }).(pulumi.StringOutput)
}

type GetResourcesResourceArrayOutput struct{ *pulumi.OutputState }

func (GetResourcesResourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetResourcesResource)(nil)).Elem()
}

func (o GetResourcesResourceArrayOutput) ToGetResourcesResourceArrayOutput() GetResourcesResourceArrayOutput {
	return o
}

func (o GetResourcesResourceArrayOutput) ToGetResourcesResourceArrayOutputWithContext(ctx context.Context) GetResourcesResourceArrayOutput {
	return o
}

func (o GetResourcesResourceArrayOutput) Index(i pulumi.IntInput) GetResourcesResourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetResourcesResource {
		return vs[0].([]GetResourcesResource)[vs[1].(int)]
	}).(GetResourcesResourceOutput)
}

type GetSubscriptionsSubscription struct {
	// The subscription display name.
	DisplayName string `pulumi:"displayName"`
	// The ID of this subscription.
	Id string `pulumi:"id"`
	// The subscription location placement ID.
	LocationPlacementId string `pulumi:"locationPlacementId"`
	// The subscription quota ID.
	QuotaId string `pulumi:"quotaId"`
	// The subscription spending limit.
	SpendingLimit string `pulumi:"spendingLimit"`
	// The subscription state. Possible values are Enabled, Warned, PastDue, Disabled, and Deleted.
	State string `pulumi:"state"`
	// The subscription GUID.
	SubscriptionId string `pulumi:"subscriptionId"`
	// A mapping of tags assigned to the resource.
	Tags map[string]string `pulumi:"tags"`
	// The subscription tenant ID.
	TenantId string `pulumi:"tenantId"`
}

// GetSubscriptionsSubscriptionInput is an input type that accepts GetSubscriptionsSubscriptionArgs and GetSubscriptionsSubscriptionOutput values.
// You can construct a concrete instance of `GetSubscriptionsSubscriptionInput` via:
//
//	GetSubscriptionsSubscriptionArgs{...}
type GetSubscriptionsSubscriptionInput interface {
	pulumi.Input

	ToGetSubscriptionsSubscriptionOutput() GetSubscriptionsSubscriptionOutput
	ToGetSubscriptionsSubscriptionOutputWithContext(context.Context) GetSubscriptionsSubscriptionOutput
}

type GetSubscriptionsSubscriptionArgs struct {
	// The subscription display name.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// The ID of this subscription.
	Id pulumi.StringInput `pulumi:"id"`
	// The subscription location placement ID.
	LocationPlacementId pulumi.StringInput `pulumi:"locationPlacementId"`
	// The subscription quota ID.
	QuotaId pulumi.StringInput `pulumi:"quotaId"`
	// The subscription spending limit.
	SpendingLimit pulumi.StringInput `pulumi:"spendingLimit"`
	// The subscription state. Possible values are Enabled, Warned, PastDue, Disabled, and Deleted.
	State pulumi.StringInput `pulumi:"state"`
	// The subscription GUID.
	SubscriptionId pulumi.StringInput `pulumi:"subscriptionId"`
	// A mapping of tags assigned to the resource.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// The subscription tenant ID.
	TenantId pulumi.StringInput `pulumi:"tenantId"`
}

func (GetSubscriptionsSubscriptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubscriptionsSubscription)(nil)).Elem()
}

func (i GetSubscriptionsSubscriptionArgs) ToGetSubscriptionsSubscriptionOutput() GetSubscriptionsSubscriptionOutput {
	return i.ToGetSubscriptionsSubscriptionOutputWithContext(context.Background())
}

func (i GetSubscriptionsSubscriptionArgs) ToGetSubscriptionsSubscriptionOutputWithContext(ctx context.Context) GetSubscriptionsSubscriptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSubscriptionsSubscriptionOutput)
}

// GetSubscriptionsSubscriptionArrayInput is an input type that accepts GetSubscriptionsSubscriptionArray and GetSubscriptionsSubscriptionArrayOutput values.
// You can construct a concrete instance of `GetSubscriptionsSubscriptionArrayInput` via:
//
//	GetSubscriptionsSubscriptionArray{ GetSubscriptionsSubscriptionArgs{...} }
type GetSubscriptionsSubscriptionArrayInput interface {
	pulumi.Input

	ToGetSubscriptionsSubscriptionArrayOutput() GetSubscriptionsSubscriptionArrayOutput
	ToGetSubscriptionsSubscriptionArrayOutputWithContext(context.Context) GetSubscriptionsSubscriptionArrayOutput
}

type GetSubscriptionsSubscriptionArray []GetSubscriptionsSubscriptionInput

func (GetSubscriptionsSubscriptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSubscriptionsSubscription)(nil)).Elem()
}

func (i GetSubscriptionsSubscriptionArray) ToGetSubscriptionsSubscriptionArrayOutput() GetSubscriptionsSubscriptionArrayOutput {
	return i.ToGetSubscriptionsSubscriptionArrayOutputWithContext(context.Background())
}

func (i GetSubscriptionsSubscriptionArray) ToGetSubscriptionsSubscriptionArrayOutputWithContext(ctx context.Context) GetSubscriptionsSubscriptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSubscriptionsSubscriptionArrayOutput)
}

type GetSubscriptionsSubscriptionOutput struct{ *pulumi.OutputState }

func (GetSubscriptionsSubscriptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubscriptionsSubscription)(nil)).Elem()
}

func (o GetSubscriptionsSubscriptionOutput) ToGetSubscriptionsSubscriptionOutput() GetSubscriptionsSubscriptionOutput {
	return o
}

func (o GetSubscriptionsSubscriptionOutput) ToGetSubscriptionsSubscriptionOutputWithContext(ctx context.Context) GetSubscriptionsSubscriptionOutput {
	return o
}

// The subscription display name.
func (o GetSubscriptionsSubscriptionOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubscriptionsSubscription) string { return v.DisplayName }).(pulumi.StringOutput)
}

// The ID of this subscription.
func (o GetSubscriptionsSubscriptionOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubscriptionsSubscription) string { return v.Id }).(pulumi.StringOutput)
}

// The subscription location placement ID.
func (o GetSubscriptionsSubscriptionOutput) LocationPlacementId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubscriptionsSubscription) string { return v.LocationPlacementId }).(pulumi.StringOutput)
}

// The subscription quota ID.
func (o GetSubscriptionsSubscriptionOutput) QuotaId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubscriptionsSubscription) string { return v.QuotaId }).(pulumi.StringOutput)
}

// The subscription spending limit.
func (o GetSubscriptionsSubscriptionOutput) SpendingLimit() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubscriptionsSubscription) string { return v.SpendingLimit }).(pulumi.StringOutput)
}

// The subscription state. Possible values are Enabled, Warned, PastDue, Disabled, and Deleted.
func (o GetSubscriptionsSubscriptionOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubscriptionsSubscription) string { return v.State }).(pulumi.StringOutput)
}

// The subscription GUID.
func (o GetSubscriptionsSubscriptionOutput) SubscriptionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubscriptionsSubscription) string { return v.SubscriptionId }).(pulumi.StringOutput)
}

// A mapping of tags assigned to the resource.
func (o GetSubscriptionsSubscriptionOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetSubscriptionsSubscription) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The subscription tenant ID.
func (o GetSubscriptionsSubscriptionOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubscriptionsSubscription) string { return v.TenantId }).(pulumi.StringOutput)
}

type GetSubscriptionsSubscriptionArrayOutput struct{ *pulumi.OutputState }

func (GetSubscriptionsSubscriptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSubscriptionsSubscription)(nil)).Elem()
}

func (o GetSubscriptionsSubscriptionArrayOutput) ToGetSubscriptionsSubscriptionArrayOutput() GetSubscriptionsSubscriptionArrayOutput {
	return o
}

func (o GetSubscriptionsSubscriptionArrayOutput) ToGetSubscriptionsSubscriptionArrayOutputWithContext(ctx context.Context) GetSubscriptionsSubscriptionArrayOutput {
	return o
}

func (o GetSubscriptionsSubscriptionArrayOutput) Index(i pulumi.IntInput) GetSubscriptionsSubscriptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSubscriptionsSubscription {
		return vs[0].([]GetSubscriptionsSubscription)[vs[1].(int)]
	}).(GetSubscriptionsSubscriptionOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CustomProviderActionInput)(nil)).Elem(), CustomProviderActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomProviderActionArrayInput)(nil)).Elem(), CustomProviderActionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomProviderResourceTypeInput)(nil)).Elem(), CustomProviderResourceTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomProviderResourceTypeArrayInput)(nil)).Elem(), CustomProviderResourceTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomProviderValidationInput)(nil)).Elem(), CustomProviderValidationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomProviderValidationArrayInput)(nil)).Elem(), CustomProviderValidationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceDeploymentScriptAzureCliContainerInput)(nil)).Elem(), ResourceDeploymentScriptAzureCliContainerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceDeploymentScriptAzureCliContainerPtrInput)(nil)).Elem(), ResourceDeploymentScriptAzureCliContainerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceDeploymentScriptAzureCliEnvironmentVariableInput)(nil)).Elem(), ResourceDeploymentScriptAzureCliEnvironmentVariableArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceDeploymentScriptAzureCliEnvironmentVariableArrayInput)(nil)).Elem(), ResourceDeploymentScriptAzureCliEnvironmentVariableArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceDeploymentScriptAzureCliIdentityInput)(nil)).Elem(), ResourceDeploymentScriptAzureCliIdentityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceDeploymentScriptAzureCliIdentityPtrInput)(nil)).Elem(), ResourceDeploymentScriptAzureCliIdentityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceDeploymentScriptAzureCliStorageAccountInput)(nil)).Elem(), ResourceDeploymentScriptAzureCliStorageAccountArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceDeploymentScriptAzureCliStorageAccountPtrInput)(nil)).Elem(), ResourceDeploymentScriptAzureCliStorageAccountArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceDeploymentScriptPowerShellContainerInput)(nil)).Elem(), ResourceDeploymentScriptPowerShellContainerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceDeploymentScriptPowerShellContainerPtrInput)(nil)).Elem(), ResourceDeploymentScriptPowerShellContainerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceDeploymentScriptPowerShellEnvironmentVariableInput)(nil)).Elem(), ResourceDeploymentScriptPowerShellEnvironmentVariableArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceDeploymentScriptPowerShellEnvironmentVariableArrayInput)(nil)).Elem(), ResourceDeploymentScriptPowerShellEnvironmentVariableArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceDeploymentScriptPowerShellIdentityInput)(nil)).Elem(), ResourceDeploymentScriptPowerShellIdentityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceDeploymentScriptPowerShellIdentityPtrInput)(nil)).Elem(), ResourceDeploymentScriptPowerShellIdentityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceDeploymentScriptPowerShellStorageAccountInput)(nil)).Elem(), ResourceDeploymentScriptPowerShellStorageAccountArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceDeploymentScriptPowerShellStorageAccountPtrInput)(nil)).Elem(), ResourceDeploymentScriptPowerShellStorageAccountArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceGroupCostManagementExportExportDataOptionsInput)(nil)).Elem(), ResourceGroupCostManagementExportExportDataOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceGroupCostManagementExportExportDataOptionsPtrInput)(nil)).Elem(), ResourceGroupCostManagementExportExportDataOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceGroupCostManagementExportExportDataStorageLocationInput)(nil)).Elem(), ResourceGroupCostManagementExportExportDataStorageLocationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceGroupCostManagementExportExportDataStorageLocationPtrInput)(nil)).Elem(), ResourceGroupCostManagementExportExportDataStorageLocationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceGroupCostManagementViewDatasetInput)(nil)).Elem(), ResourceGroupCostManagementViewDatasetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceGroupCostManagementViewDatasetPtrInput)(nil)).Elem(), ResourceGroupCostManagementViewDatasetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceGroupCostManagementViewDatasetAggregationInput)(nil)).Elem(), ResourceGroupCostManagementViewDatasetAggregationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceGroupCostManagementViewDatasetAggregationArrayInput)(nil)).Elem(), ResourceGroupCostManagementViewDatasetAggregationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceGroupCostManagementViewDatasetGroupingInput)(nil)).Elem(), ResourceGroupCostManagementViewDatasetGroupingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceGroupCostManagementViewDatasetGroupingArrayInput)(nil)).Elem(), ResourceGroupCostManagementViewDatasetGroupingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceGroupCostManagementViewDatasetSortingInput)(nil)).Elem(), ResourceGroupCostManagementViewDatasetSortingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceGroupCostManagementViewDatasetSortingArrayInput)(nil)).Elem(), ResourceGroupCostManagementViewDatasetSortingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceGroupCostManagementViewKpiInput)(nil)).Elem(), ResourceGroupCostManagementViewKpiArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceGroupCostManagementViewKpiArrayInput)(nil)).Elem(), ResourceGroupCostManagementViewKpiArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceGroupCostManagementViewPivotInput)(nil)).Elem(), ResourceGroupCostManagementViewPivotArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceGroupCostManagementViewPivotArrayInput)(nil)).Elem(), ResourceGroupCostManagementViewPivotArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceGroupPolicyAssignmentIdentityInput)(nil)).Elem(), ResourceGroupPolicyAssignmentIdentityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceGroupPolicyAssignmentIdentityPtrInput)(nil)).Elem(), ResourceGroupPolicyAssignmentIdentityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceGroupPolicyAssignmentNonComplianceMessageInput)(nil)).Elem(), ResourceGroupPolicyAssignmentNonComplianceMessageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceGroupPolicyAssignmentNonComplianceMessageArrayInput)(nil)).Elem(), ResourceGroupPolicyAssignmentNonComplianceMessageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceGroupPolicyAssignmentOverrideInput)(nil)).Elem(), ResourceGroupPolicyAssignmentOverrideArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceGroupPolicyAssignmentOverrideArrayInput)(nil)).Elem(), ResourceGroupPolicyAssignmentOverrideArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceGroupPolicyAssignmentOverrideSelectorInput)(nil)).Elem(), ResourceGroupPolicyAssignmentOverrideSelectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceGroupPolicyAssignmentOverrideSelectorArrayInput)(nil)).Elem(), ResourceGroupPolicyAssignmentOverrideSelectorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceGroupPolicyAssignmentResourceSelectorInput)(nil)).Elem(), ResourceGroupPolicyAssignmentResourceSelectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceGroupPolicyAssignmentResourceSelectorArrayInput)(nil)).Elem(), ResourceGroupPolicyAssignmentResourceSelectorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceGroupPolicyAssignmentResourceSelectorSelectorInput)(nil)).Elem(), ResourceGroupPolicyAssignmentResourceSelectorSelectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceGroupPolicyAssignmentResourceSelectorSelectorArrayInput)(nil)).Elem(), ResourceGroupPolicyAssignmentResourceSelectorSelectorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourcePolicyAssignmentIdentityInput)(nil)).Elem(), ResourcePolicyAssignmentIdentityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourcePolicyAssignmentIdentityPtrInput)(nil)).Elem(), ResourcePolicyAssignmentIdentityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourcePolicyAssignmentNonComplianceMessageInput)(nil)).Elem(), ResourcePolicyAssignmentNonComplianceMessageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourcePolicyAssignmentNonComplianceMessageArrayInput)(nil)).Elem(), ResourcePolicyAssignmentNonComplianceMessageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourcePolicyAssignmentOverrideInput)(nil)).Elem(), ResourcePolicyAssignmentOverrideArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourcePolicyAssignmentOverrideArrayInput)(nil)).Elem(), ResourcePolicyAssignmentOverrideArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourcePolicyAssignmentOverrideSelectorInput)(nil)).Elem(), ResourcePolicyAssignmentOverrideSelectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourcePolicyAssignmentOverrideSelectorArrayInput)(nil)).Elem(), ResourcePolicyAssignmentOverrideSelectorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourcePolicyAssignmentResourceSelectorInput)(nil)).Elem(), ResourcePolicyAssignmentResourceSelectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourcePolicyAssignmentResourceSelectorArrayInput)(nil)).Elem(), ResourcePolicyAssignmentResourceSelectorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourcePolicyAssignmentResourceSelectorSelectorInput)(nil)).Elem(), ResourcePolicyAssignmentResourceSelectorSelectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourcePolicyAssignmentResourceSelectorSelectorArrayInput)(nil)).Elem(), ResourcePolicyAssignmentResourceSelectorSelectorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceProviderRegistrationFeatureInput)(nil)).Elem(), ResourceProviderRegistrationFeatureArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceProviderRegistrationFeatureArrayInput)(nil)).Elem(), ResourceProviderRegistrationFeatureArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubscriptionCostManagementExportExportDataOptionsInput)(nil)).Elem(), SubscriptionCostManagementExportExportDataOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubscriptionCostManagementExportExportDataOptionsPtrInput)(nil)).Elem(), SubscriptionCostManagementExportExportDataOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubscriptionCostManagementExportExportDataStorageLocationInput)(nil)).Elem(), SubscriptionCostManagementExportExportDataStorageLocationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubscriptionCostManagementExportExportDataStorageLocationPtrInput)(nil)).Elem(), SubscriptionCostManagementExportExportDataStorageLocationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubscriptionCostManagementViewDatasetInput)(nil)).Elem(), SubscriptionCostManagementViewDatasetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubscriptionCostManagementViewDatasetPtrInput)(nil)).Elem(), SubscriptionCostManagementViewDatasetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubscriptionCostManagementViewDatasetAggregationInput)(nil)).Elem(), SubscriptionCostManagementViewDatasetAggregationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubscriptionCostManagementViewDatasetAggregationArrayInput)(nil)).Elem(), SubscriptionCostManagementViewDatasetAggregationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubscriptionCostManagementViewDatasetGroupingInput)(nil)).Elem(), SubscriptionCostManagementViewDatasetGroupingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubscriptionCostManagementViewDatasetGroupingArrayInput)(nil)).Elem(), SubscriptionCostManagementViewDatasetGroupingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubscriptionCostManagementViewDatasetSortingInput)(nil)).Elem(), SubscriptionCostManagementViewDatasetSortingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubscriptionCostManagementViewDatasetSortingArrayInput)(nil)).Elem(), SubscriptionCostManagementViewDatasetSortingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubscriptionCostManagementViewKpiInput)(nil)).Elem(), SubscriptionCostManagementViewKpiArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubscriptionCostManagementViewKpiArrayInput)(nil)).Elem(), SubscriptionCostManagementViewKpiArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubscriptionCostManagementViewPivotInput)(nil)).Elem(), SubscriptionCostManagementViewPivotArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubscriptionCostManagementViewPivotArrayInput)(nil)).Elem(), SubscriptionCostManagementViewPivotArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubscriptionPolicyAssignmentIdentityInput)(nil)).Elem(), SubscriptionPolicyAssignmentIdentityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubscriptionPolicyAssignmentIdentityPtrInput)(nil)).Elem(), SubscriptionPolicyAssignmentIdentityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubscriptionPolicyAssignmentNonComplianceMessageInput)(nil)).Elem(), SubscriptionPolicyAssignmentNonComplianceMessageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubscriptionPolicyAssignmentNonComplianceMessageArrayInput)(nil)).Elem(), SubscriptionPolicyAssignmentNonComplianceMessageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubscriptionPolicyAssignmentOverrideInput)(nil)).Elem(), SubscriptionPolicyAssignmentOverrideArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubscriptionPolicyAssignmentOverrideArrayInput)(nil)).Elem(), SubscriptionPolicyAssignmentOverrideArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubscriptionPolicyAssignmentOverrideSelectorInput)(nil)).Elem(), SubscriptionPolicyAssignmentOverrideSelectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubscriptionPolicyAssignmentOverrideSelectorArrayInput)(nil)).Elem(), SubscriptionPolicyAssignmentOverrideSelectorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubscriptionPolicyAssignmentResourceSelectorInput)(nil)).Elem(), SubscriptionPolicyAssignmentResourceSelectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubscriptionPolicyAssignmentResourceSelectorArrayInput)(nil)).Elem(), SubscriptionPolicyAssignmentResourceSelectorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubscriptionPolicyAssignmentResourceSelectorSelectorInput)(nil)).Elem(), SubscriptionPolicyAssignmentResourceSelectorSelectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubscriptionPolicyAssignmentResourceSelectorSelectorArrayInput)(nil)).Elem(), SubscriptionPolicyAssignmentResourceSelectorSelectorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetResourcesResourceInput)(nil)).Elem(), GetResourcesResourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetResourcesResourceArrayInput)(nil)).Elem(), GetResourcesResourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSubscriptionsSubscriptionInput)(nil)).Elem(), GetSubscriptionsSubscriptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSubscriptionsSubscriptionArrayInput)(nil)).Elem(), GetSubscriptionsSubscriptionArray{})
	pulumi.RegisterOutputType(CustomProviderActionOutput{})
	pulumi.RegisterOutputType(CustomProviderActionArrayOutput{})
	pulumi.RegisterOutputType(CustomProviderResourceTypeOutput{})
	pulumi.RegisterOutputType(CustomProviderResourceTypeArrayOutput{})
	pulumi.RegisterOutputType(CustomProviderValidationOutput{})
	pulumi.RegisterOutputType(CustomProviderValidationArrayOutput{})
	pulumi.RegisterOutputType(ResourceDeploymentScriptAzureCliContainerOutput{})
	pulumi.RegisterOutputType(ResourceDeploymentScriptAzureCliContainerPtrOutput{})
	pulumi.RegisterOutputType(ResourceDeploymentScriptAzureCliEnvironmentVariableOutput{})
	pulumi.RegisterOutputType(ResourceDeploymentScriptAzureCliEnvironmentVariableArrayOutput{})
	pulumi.RegisterOutputType(ResourceDeploymentScriptAzureCliIdentityOutput{})
	pulumi.RegisterOutputType(ResourceDeploymentScriptAzureCliIdentityPtrOutput{})
	pulumi.RegisterOutputType(ResourceDeploymentScriptAzureCliStorageAccountOutput{})
	pulumi.RegisterOutputType(ResourceDeploymentScriptAzureCliStorageAccountPtrOutput{})
	pulumi.RegisterOutputType(ResourceDeploymentScriptPowerShellContainerOutput{})
	pulumi.RegisterOutputType(ResourceDeploymentScriptPowerShellContainerPtrOutput{})
	pulumi.RegisterOutputType(ResourceDeploymentScriptPowerShellEnvironmentVariableOutput{})
	pulumi.RegisterOutputType(ResourceDeploymentScriptPowerShellEnvironmentVariableArrayOutput{})
	pulumi.RegisterOutputType(ResourceDeploymentScriptPowerShellIdentityOutput{})
	pulumi.RegisterOutputType(ResourceDeploymentScriptPowerShellIdentityPtrOutput{})
	pulumi.RegisterOutputType(ResourceDeploymentScriptPowerShellStorageAccountOutput{})
	pulumi.RegisterOutputType(ResourceDeploymentScriptPowerShellStorageAccountPtrOutput{})
	pulumi.RegisterOutputType(ResourceGroupCostManagementExportExportDataOptionsOutput{})
	pulumi.RegisterOutputType(ResourceGroupCostManagementExportExportDataOptionsPtrOutput{})
	pulumi.RegisterOutputType(ResourceGroupCostManagementExportExportDataStorageLocationOutput{})
	pulumi.RegisterOutputType(ResourceGroupCostManagementExportExportDataStorageLocationPtrOutput{})
	pulumi.RegisterOutputType(ResourceGroupCostManagementViewDatasetOutput{})
	pulumi.RegisterOutputType(ResourceGroupCostManagementViewDatasetPtrOutput{})
	pulumi.RegisterOutputType(ResourceGroupCostManagementViewDatasetAggregationOutput{})
	pulumi.RegisterOutputType(ResourceGroupCostManagementViewDatasetAggregationArrayOutput{})
	pulumi.RegisterOutputType(ResourceGroupCostManagementViewDatasetGroupingOutput{})
	pulumi.RegisterOutputType(ResourceGroupCostManagementViewDatasetGroupingArrayOutput{})
	pulumi.RegisterOutputType(ResourceGroupCostManagementViewDatasetSortingOutput{})
	pulumi.RegisterOutputType(ResourceGroupCostManagementViewDatasetSortingArrayOutput{})
	pulumi.RegisterOutputType(ResourceGroupCostManagementViewKpiOutput{})
	pulumi.RegisterOutputType(ResourceGroupCostManagementViewKpiArrayOutput{})
	pulumi.RegisterOutputType(ResourceGroupCostManagementViewPivotOutput{})
	pulumi.RegisterOutputType(ResourceGroupCostManagementViewPivotArrayOutput{})
	pulumi.RegisterOutputType(ResourceGroupPolicyAssignmentIdentityOutput{})
	pulumi.RegisterOutputType(ResourceGroupPolicyAssignmentIdentityPtrOutput{})
	pulumi.RegisterOutputType(ResourceGroupPolicyAssignmentNonComplianceMessageOutput{})
	pulumi.RegisterOutputType(ResourceGroupPolicyAssignmentNonComplianceMessageArrayOutput{})
	pulumi.RegisterOutputType(ResourceGroupPolicyAssignmentOverrideOutput{})
	pulumi.RegisterOutputType(ResourceGroupPolicyAssignmentOverrideArrayOutput{})
	pulumi.RegisterOutputType(ResourceGroupPolicyAssignmentOverrideSelectorOutput{})
	pulumi.RegisterOutputType(ResourceGroupPolicyAssignmentOverrideSelectorArrayOutput{})
	pulumi.RegisterOutputType(ResourceGroupPolicyAssignmentResourceSelectorOutput{})
	pulumi.RegisterOutputType(ResourceGroupPolicyAssignmentResourceSelectorArrayOutput{})
	pulumi.RegisterOutputType(ResourceGroupPolicyAssignmentResourceSelectorSelectorOutput{})
	pulumi.RegisterOutputType(ResourceGroupPolicyAssignmentResourceSelectorSelectorArrayOutput{})
	pulumi.RegisterOutputType(ResourcePolicyAssignmentIdentityOutput{})
	pulumi.RegisterOutputType(ResourcePolicyAssignmentIdentityPtrOutput{})
	pulumi.RegisterOutputType(ResourcePolicyAssignmentNonComplianceMessageOutput{})
	pulumi.RegisterOutputType(ResourcePolicyAssignmentNonComplianceMessageArrayOutput{})
	pulumi.RegisterOutputType(ResourcePolicyAssignmentOverrideOutput{})
	pulumi.RegisterOutputType(ResourcePolicyAssignmentOverrideArrayOutput{})
	pulumi.RegisterOutputType(ResourcePolicyAssignmentOverrideSelectorOutput{})
	pulumi.RegisterOutputType(ResourcePolicyAssignmentOverrideSelectorArrayOutput{})
	pulumi.RegisterOutputType(ResourcePolicyAssignmentResourceSelectorOutput{})
	pulumi.RegisterOutputType(ResourcePolicyAssignmentResourceSelectorArrayOutput{})
	pulumi.RegisterOutputType(ResourcePolicyAssignmentResourceSelectorSelectorOutput{})
	pulumi.RegisterOutputType(ResourcePolicyAssignmentResourceSelectorSelectorArrayOutput{})
	pulumi.RegisterOutputType(ResourceProviderRegistrationFeatureOutput{})
	pulumi.RegisterOutputType(ResourceProviderRegistrationFeatureArrayOutput{})
	pulumi.RegisterOutputType(SubscriptionCostManagementExportExportDataOptionsOutput{})
	pulumi.RegisterOutputType(SubscriptionCostManagementExportExportDataOptionsPtrOutput{})
	pulumi.RegisterOutputType(SubscriptionCostManagementExportExportDataStorageLocationOutput{})
	pulumi.RegisterOutputType(SubscriptionCostManagementExportExportDataStorageLocationPtrOutput{})
	pulumi.RegisterOutputType(SubscriptionCostManagementViewDatasetOutput{})
	pulumi.RegisterOutputType(SubscriptionCostManagementViewDatasetPtrOutput{})
	pulumi.RegisterOutputType(SubscriptionCostManagementViewDatasetAggregationOutput{})
	pulumi.RegisterOutputType(SubscriptionCostManagementViewDatasetAggregationArrayOutput{})
	pulumi.RegisterOutputType(SubscriptionCostManagementViewDatasetGroupingOutput{})
	pulumi.RegisterOutputType(SubscriptionCostManagementViewDatasetGroupingArrayOutput{})
	pulumi.RegisterOutputType(SubscriptionCostManagementViewDatasetSortingOutput{})
	pulumi.RegisterOutputType(SubscriptionCostManagementViewDatasetSortingArrayOutput{})
	pulumi.RegisterOutputType(SubscriptionCostManagementViewKpiOutput{})
	pulumi.RegisterOutputType(SubscriptionCostManagementViewKpiArrayOutput{})
	pulumi.RegisterOutputType(SubscriptionCostManagementViewPivotOutput{})
	pulumi.RegisterOutputType(SubscriptionCostManagementViewPivotArrayOutput{})
	pulumi.RegisterOutputType(SubscriptionPolicyAssignmentIdentityOutput{})
	pulumi.RegisterOutputType(SubscriptionPolicyAssignmentIdentityPtrOutput{})
	pulumi.RegisterOutputType(SubscriptionPolicyAssignmentNonComplianceMessageOutput{})
	pulumi.RegisterOutputType(SubscriptionPolicyAssignmentNonComplianceMessageArrayOutput{})
	pulumi.RegisterOutputType(SubscriptionPolicyAssignmentOverrideOutput{})
	pulumi.RegisterOutputType(SubscriptionPolicyAssignmentOverrideArrayOutput{})
	pulumi.RegisterOutputType(SubscriptionPolicyAssignmentOverrideSelectorOutput{})
	pulumi.RegisterOutputType(SubscriptionPolicyAssignmentOverrideSelectorArrayOutput{})
	pulumi.RegisterOutputType(SubscriptionPolicyAssignmentResourceSelectorOutput{})
	pulumi.RegisterOutputType(SubscriptionPolicyAssignmentResourceSelectorArrayOutput{})
	pulumi.RegisterOutputType(SubscriptionPolicyAssignmentResourceSelectorSelectorOutput{})
	pulumi.RegisterOutputType(SubscriptionPolicyAssignmentResourceSelectorSelectorArrayOutput{})
	pulumi.RegisterOutputType(GetResourcesResourceOutput{})
	pulumi.RegisterOutputType(GetResourcesResourceArrayOutput{})
	pulumi.RegisterOutputType(GetSubscriptionsSubscriptionOutput{})
	pulumi.RegisterOutputType(GetSubscriptionsSubscriptionArrayOutput{})
}
