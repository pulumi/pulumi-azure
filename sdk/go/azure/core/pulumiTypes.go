// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package core

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type GetResourcesResource struct {
	// The ID of this Resource.
	Id string `pulumi:"id"`
	// The Azure Region in which this Resource exists.
	Location string `pulumi:"location"`
	// The name of the Resource.
	Name string `pulumi:"name"`
	// A map of tags assigned to this Resource.
	Tags map[string]string `pulumi:"tags"`
	// The Resource Type of the Resources you want to list (e.g. `Microsoft.Network/virtualNetworks`). A full list of available Resource Types can be found [here](https://docs.microsoft.com/en-us/azure/azure-resource-manager/azure-services-resource-providers).
	Type string `pulumi:"type"`
}

type GetResourcesResourceInput interface {
	pulumi.Input

	ToGetResourcesResourceOutput() GetResourcesResourceOutput
	ToGetResourcesResourceOutputWithContext(context.Context) GetResourcesResourceOutput
}

type GetResourcesResourceArgs struct {
	// The ID of this Resource.
	Id pulumi.StringInput `pulumi:"id"`
	// The Azure Region in which this Resource exists.
	Location pulumi.StringInput `pulumi:"location"`
	// The name of the Resource.
	Name pulumi.StringInput `pulumi:"name"`
	// A map of tags assigned to this Resource.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// The Resource Type of the Resources you want to list (e.g. `Microsoft.Network/virtualNetworks`). A full list of available Resource Types can be found [here](https://docs.microsoft.com/en-us/azure/azure-resource-manager/azure-services-resource-providers).
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetResourcesResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResourcesResource)(nil)).Elem()
}

func (i GetResourcesResourceArgs) ToGetResourcesResourceOutput() GetResourcesResourceOutput {
	return i.ToGetResourcesResourceOutputWithContext(context.Background())
}

func (i GetResourcesResourceArgs) ToGetResourcesResourceOutputWithContext(ctx context.Context) GetResourcesResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetResourcesResourceOutput)
}

type GetResourcesResourceArrayInput interface {
	pulumi.Input

	ToGetResourcesResourceArrayOutput() GetResourcesResourceArrayOutput
	ToGetResourcesResourceArrayOutputWithContext(context.Context) GetResourcesResourceArrayOutput
}

type GetResourcesResourceArray []GetResourcesResourceInput

func (GetResourcesResourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetResourcesResource)(nil)).Elem()
}

func (i GetResourcesResourceArray) ToGetResourcesResourceArrayOutput() GetResourcesResourceArrayOutput {
	return i.ToGetResourcesResourceArrayOutputWithContext(context.Background())
}

func (i GetResourcesResourceArray) ToGetResourcesResourceArrayOutputWithContext(ctx context.Context) GetResourcesResourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetResourcesResourceArrayOutput)
}

type GetResourcesResourceOutput struct{ *pulumi.OutputState }

func (GetResourcesResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResourcesResource)(nil)).Elem()
}

func (o GetResourcesResourceOutput) ToGetResourcesResourceOutput() GetResourcesResourceOutput {
	return o
}

func (o GetResourcesResourceOutput) ToGetResourcesResourceOutputWithContext(ctx context.Context) GetResourcesResourceOutput {
	return o
}

// The ID of this Resource.
func (o GetResourcesResourceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetResourcesResource) string { return v.Id }).(pulumi.StringOutput)
}

// The Azure Region in which this Resource exists.
func (o GetResourcesResourceOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v GetResourcesResource) string { return v.Location }).(pulumi.StringOutput)
}

// The name of the Resource.
func (o GetResourcesResourceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetResourcesResource) string { return v.Name }).(pulumi.StringOutput)
}

// A map of tags assigned to this Resource.
func (o GetResourcesResourceOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetResourcesResource) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The Resource Type of the Resources you want to list (e.g. `Microsoft.Network/virtualNetworks`). A full list of available Resource Types can be found [here](https://docs.microsoft.com/en-us/azure/azure-resource-manager/azure-services-resource-providers).
func (o GetResourcesResourceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetResourcesResource) string { return v.Type }).(pulumi.StringOutput)
}

type GetResourcesResourceArrayOutput struct{ *pulumi.OutputState }

func (GetResourcesResourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetResourcesResource)(nil)).Elem()
}

func (o GetResourcesResourceArrayOutput) ToGetResourcesResourceArrayOutput() GetResourcesResourceArrayOutput {
	return o
}

func (o GetResourcesResourceArrayOutput) ToGetResourcesResourceArrayOutputWithContext(ctx context.Context) GetResourcesResourceArrayOutput {
	return o
}

func (o GetResourcesResourceArrayOutput) Index(i pulumi.IntInput) GetResourcesResourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetResourcesResource {
		return vs[0].([]GetResourcesResource)[vs[1].(int)]
	}).(GetResourcesResourceOutput)
}

type GetSubscriptionsSubscription struct {
	// The subscription display name.
	DisplayName string `pulumi:"displayName"`
	// The subscription location placement ID.
	LocationPlacementId string `pulumi:"locationPlacementId"`
	// The subscription quota ID.
	QuotaId string `pulumi:"quotaId"`
	// The subscription spending limit.
	SpendingLimit string `pulumi:"spendingLimit"`
	// The subscription state. Possible values are Enabled, Warned, PastDue, Disabled, and Deleted.
	State string `pulumi:"state"`
	// The subscription GUID.
	SubscriptionId string `pulumi:"subscriptionId"`
	// The subscription tenant ID.
	TenantId string `pulumi:"tenantId"`
}

type GetSubscriptionsSubscriptionInput interface {
	pulumi.Input

	ToGetSubscriptionsSubscriptionOutput() GetSubscriptionsSubscriptionOutput
	ToGetSubscriptionsSubscriptionOutputWithContext(context.Context) GetSubscriptionsSubscriptionOutput
}

type GetSubscriptionsSubscriptionArgs struct {
	// The subscription display name.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// The subscription location placement ID.
	LocationPlacementId pulumi.StringInput `pulumi:"locationPlacementId"`
	// The subscription quota ID.
	QuotaId pulumi.StringInput `pulumi:"quotaId"`
	// The subscription spending limit.
	SpendingLimit pulumi.StringInput `pulumi:"spendingLimit"`
	// The subscription state. Possible values are Enabled, Warned, PastDue, Disabled, and Deleted.
	State pulumi.StringInput `pulumi:"state"`
	// The subscription GUID.
	SubscriptionId pulumi.StringInput `pulumi:"subscriptionId"`
	// The subscription tenant ID.
	TenantId pulumi.StringInput `pulumi:"tenantId"`
}

func (GetSubscriptionsSubscriptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubscriptionsSubscription)(nil)).Elem()
}

func (i GetSubscriptionsSubscriptionArgs) ToGetSubscriptionsSubscriptionOutput() GetSubscriptionsSubscriptionOutput {
	return i.ToGetSubscriptionsSubscriptionOutputWithContext(context.Background())
}

func (i GetSubscriptionsSubscriptionArgs) ToGetSubscriptionsSubscriptionOutputWithContext(ctx context.Context) GetSubscriptionsSubscriptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSubscriptionsSubscriptionOutput)
}

type GetSubscriptionsSubscriptionArrayInput interface {
	pulumi.Input

	ToGetSubscriptionsSubscriptionArrayOutput() GetSubscriptionsSubscriptionArrayOutput
	ToGetSubscriptionsSubscriptionArrayOutputWithContext(context.Context) GetSubscriptionsSubscriptionArrayOutput
}

type GetSubscriptionsSubscriptionArray []GetSubscriptionsSubscriptionInput

func (GetSubscriptionsSubscriptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSubscriptionsSubscription)(nil)).Elem()
}

func (i GetSubscriptionsSubscriptionArray) ToGetSubscriptionsSubscriptionArrayOutput() GetSubscriptionsSubscriptionArrayOutput {
	return i.ToGetSubscriptionsSubscriptionArrayOutputWithContext(context.Background())
}

func (i GetSubscriptionsSubscriptionArray) ToGetSubscriptionsSubscriptionArrayOutputWithContext(ctx context.Context) GetSubscriptionsSubscriptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSubscriptionsSubscriptionArrayOutput)
}

type GetSubscriptionsSubscriptionOutput struct{ *pulumi.OutputState }

func (GetSubscriptionsSubscriptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubscriptionsSubscription)(nil)).Elem()
}

func (o GetSubscriptionsSubscriptionOutput) ToGetSubscriptionsSubscriptionOutput() GetSubscriptionsSubscriptionOutput {
	return o
}

func (o GetSubscriptionsSubscriptionOutput) ToGetSubscriptionsSubscriptionOutputWithContext(ctx context.Context) GetSubscriptionsSubscriptionOutput {
	return o
}

// The subscription display name.
func (o GetSubscriptionsSubscriptionOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubscriptionsSubscription) string { return v.DisplayName }).(pulumi.StringOutput)
}

// The subscription location placement ID.
func (o GetSubscriptionsSubscriptionOutput) LocationPlacementId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubscriptionsSubscription) string { return v.LocationPlacementId }).(pulumi.StringOutput)
}

// The subscription quota ID.
func (o GetSubscriptionsSubscriptionOutput) QuotaId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubscriptionsSubscription) string { return v.QuotaId }).(pulumi.StringOutput)
}

// The subscription spending limit.
func (o GetSubscriptionsSubscriptionOutput) SpendingLimit() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubscriptionsSubscription) string { return v.SpendingLimit }).(pulumi.StringOutput)
}

// The subscription state. Possible values are Enabled, Warned, PastDue, Disabled, and Deleted.
func (o GetSubscriptionsSubscriptionOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubscriptionsSubscription) string { return v.State }).(pulumi.StringOutput)
}

// The subscription GUID.
func (o GetSubscriptionsSubscriptionOutput) SubscriptionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubscriptionsSubscription) string { return v.SubscriptionId }).(pulumi.StringOutput)
}

// The subscription tenant ID.
func (o GetSubscriptionsSubscriptionOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubscriptionsSubscription) string { return v.TenantId }).(pulumi.StringOutput)
}

type GetSubscriptionsSubscriptionArrayOutput struct{ *pulumi.OutputState }

func (GetSubscriptionsSubscriptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSubscriptionsSubscription)(nil)).Elem()
}

func (o GetSubscriptionsSubscriptionArrayOutput) ToGetSubscriptionsSubscriptionArrayOutput() GetSubscriptionsSubscriptionArrayOutput {
	return o
}

func (o GetSubscriptionsSubscriptionArrayOutput) ToGetSubscriptionsSubscriptionArrayOutputWithContext(ctx context.Context) GetSubscriptionsSubscriptionArrayOutput {
	return o
}

func (o GetSubscriptionsSubscriptionArrayOutput) Index(i pulumi.IntInput) GetSubscriptionsSubscriptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSubscriptionsSubscription {
		return vs[0].([]GetSubscriptionsSubscription)[vs[1].(int)]
	}).(GetSubscriptionsSubscriptionOutput)
}

func init() {
	pulumi.RegisterOutputType(GetResourcesResourceOutput{})
	pulumi.RegisterOutputType(GetResourcesResourceArrayOutput{})
	pulumi.RegisterOutputType(GetSubscriptionsSubscriptionOutput{})
	pulumi.RegisterOutputType(GetSubscriptionsSubscriptionArrayOutput{})
}
