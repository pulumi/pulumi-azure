// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package core

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Manages an Azure Custom Provider.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-azure/sdk/v3/go/azure/core"
// 	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		exampleResourceGroup, err := core.NewResourceGroup(ctx, "exampleResourceGroup", &core.ResourceGroupArgs{
// 			Location: pulumi.String("northeurope"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		_, err = core.NewCustomProvider(ctx, "exampleCustomProvider", &core.CustomProviderArgs{
// 			Location:          exampleResourceGroup.Location,
// 			ResourceGroupName: exampleResourceGroup.Name,
// 			ResourceTypes: core.CustomProviderResourceTypeArray{
// 				&core.CustomProviderResourceTypeArgs{
// 					Name:     pulumi.String("dEf1"),
// 					Endpoint: pulumi.String("https://testendpoint.com/"),
// 				},
// 			},
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// Custom Provider can be imported using the `resource id`, e.g.
//
// ```sh
//  $ pulumi import azure:core/customProvider:CustomProvider example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/example/providers/Microsoft.CustomProviders/resourceProviders/example
// ```
type CustomProvider struct {
	pulumi.CustomResourceState

	// Any number of `action` block as defined below. One of `resourceType` or `action` must be specified.
	Actions CustomProviderActionArrayOutput `pulumi:"actions"`
	// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
	Location pulumi.StringOutput `pulumi:"location"`
	// Specifies the name of the Custom Provider. Changing this forces a new resource to be created.
	Name pulumi.StringOutput `pulumi:"name"`
	// The name of the resource group in which to create the Custom Provider.
	ResourceGroupName pulumi.StringOutput `pulumi:"resourceGroupName"`
	// Any number of `resourceType` block as defined below. One of `resourceType` or `action` must be specified.
	ResourceTypes CustomProviderResourceTypeArrayOutput `pulumi:"resourceTypes"`
	// A mapping of tags to assign to the resource.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// Any number of `validation` block as defined below.
	Validations CustomProviderValidationArrayOutput `pulumi:"validations"`
}

// NewCustomProvider registers a new resource with the given unique name, arguments, and options.
func NewCustomProvider(ctx *pulumi.Context,
	name string, args *CustomProviderArgs, opts ...pulumi.ResourceOption) (*CustomProvider, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	var resource CustomProvider
	err := ctx.RegisterResource("azure:core/customProvider:CustomProvider", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCustomProvider gets an existing CustomProvider resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCustomProvider(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CustomProviderState, opts ...pulumi.ResourceOption) (*CustomProvider, error) {
	var resource CustomProvider
	err := ctx.ReadResource("azure:core/customProvider:CustomProvider", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CustomProvider resources.
type customProviderState struct {
	// Any number of `action` block as defined below. One of `resourceType` or `action` must be specified.
	Actions []CustomProviderAction `pulumi:"actions"`
	// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
	Location *string `pulumi:"location"`
	// Specifies the name of the Custom Provider. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// The name of the resource group in which to create the Custom Provider.
	ResourceGroupName *string `pulumi:"resourceGroupName"`
	// Any number of `resourceType` block as defined below. One of `resourceType` or `action` must be specified.
	ResourceTypes []CustomProviderResourceType `pulumi:"resourceTypes"`
	// A mapping of tags to assign to the resource.
	Tags map[string]string `pulumi:"tags"`
	// Any number of `validation` block as defined below.
	Validations []CustomProviderValidation `pulumi:"validations"`
}

type CustomProviderState struct {
	// Any number of `action` block as defined below. One of `resourceType` or `action` must be specified.
	Actions CustomProviderActionArrayInput
	// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
	Location pulumi.StringPtrInput
	// Specifies the name of the Custom Provider. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// The name of the resource group in which to create the Custom Provider.
	ResourceGroupName pulumi.StringPtrInput
	// Any number of `resourceType` block as defined below. One of `resourceType` or `action` must be specified.
	ResourceTypes CustomProviderResourceTypeArrayInput
	// A mapping of tags to assign to the resource.
	Tags pulumi.StringMapInput
	// Any number of `validation` block as defined below.
	Validations CustomProviderValidationArrayInput
}

func (CustomProviderState) ElementType() reflect.Type {
	return reflect.TypeOf((*customProviderState)(nil)).Elem()
}

type customProviderArgs struct {
	// Any number of `action` block as defined below. One of `resourceType` or `action` must be specified.
	Actions []CustomProviderAction `pulumi:"actions"`
	// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
	Location *string `pulumi:"location"`
	// Specifies the name of the Custom Provider. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// The name of the resource group in which to create the Custom Provider.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Any number of `resourceType` block as defined below. One of `resourceType` or `action` must be specified.
	ResourceTypes []CustomProviderResourceType `pulumi:"resourceTypes"`
	// A mapping of tags to assign to the resource.
	Tags map[string]string `pulumi:"tags"`
	// Any number of `validation` block as defined below.
	Validations []CustomProviderValidation `pulumi:"validations"`
}

// The set of arguments for constructing a CustomProvider resource.
type CustomProviderArgs struct {
	// Any number of `action` block as defined below. One of `resourceType` or `action` must be specified.
	Actions CustomProviderActionArrayInput
	// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
	Location pulumi.StringPtrInput
	// Specifies the name of the Custom Provider. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// The name of the resource group in which to create the Custom Provider.
	ResourceGroupName pulumi.StringInput
	// Any number of `resourceType` block as defined below. One of `resourceType` or `action` must be specified.
	ResourceTypes CustomProviderResourceTypeArrayInput
	// A mapping of tags to assign to the resource.
	Tags pulumi.StringMapInput
	// Any number of `validation` block as defined below.
	Validations CustomProviderValidationArrayInput
}

func (CustomProviderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*customProviderArgs)(nil)).Elem()
}

type CustomProviderInput interface {
	pulumi.Input

	ToCustomProviderOutput() CustomProviderOutput
	ToCustomProviderOutputWithContext(ctx context.Context) CustomProviderOutput
}

func (*CustomProvider) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomProvider)(nil))
}

func (i *CustomProvider) ToCustomProviderOutput() CustomProviderOutput {
	return i.ToCustomProviderOutputWithContext(context.Background())
}

func (i *CustomProvider) ToCustomProviderOutputWithContext(ctx context.Context) CustomProviderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomProviderOutput)
}

func (i *CustomProvider) ToCustomProviderPtrOutput() CustomProviderPtrOutput {
	return i.ToCustomProviderPtrOutputWithContext(context.Background())
}

func (i *CustomProvider) ToCustomProviderPtrOutputWithContext(ctx context.Context) CustomProviderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomProviderPtrOutput)
}

type CustomProviderPtrInput interface {
	pulumi.Input

	ToCustomProviderPtrOutput() CustomProviderPtrOutput
	ToCustomProviderPtrOutputWithContext(ctx context.Context) CustomProviderPtrOutput
}

type customProviderPtrType CustomProviderArgs

func (*customProviderPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomProvider)(nil))
}

func (i *customProviderPtrType) ToCustomProviderPtrOutput() CustomProviderPtrOutput {
	return i.ToCustomProviderPtrOutputWithContext(context.Background())
}

func (i *customProviderPtrType) ToCustomProviderPtrOutputWithContext(ctx context.Context) CustomProviderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomProviderPtrOutput)
}

// CustomProviderArrayInput is an input type that accepts CustomProviderArray and CustomProviderArrayOutput values.
// You can construct a concrete instance of `CustomProviderArrayInput` via:
//
//          CustomProviderArray{ CustomProviderArgs{...} }
type CustomProviderArrayInput interface {
	pulumi.Input

	ToCustomProviderArrayOutput() CustomProviderArrayOutput
	ToCustomProviderArrayOutputWithContext(context.Context) CustomProviderArrayOutput
}

type CustomProviderArray []CustomProviderInput

func (CustomProviderArray) ElementType() reflect.Type {
	return reflect.TypeOf(([]*CustomProvider)(nil))
}

func (i CustomProviderArray) ToCustomProviderArrayOutput() CustomProviderArrayOutput {
	return i.ToCustomProviderArrayOutputWithContext(context.Background())
}

func (i CustomProviderArray) ToCustomProviderArrayOutputWithContext(ctx context.Context) CustomProviderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomProviderArrayOutput)
}

// CustomProviderMapInput is an input type that accepts CustomProviderMap and CustomProviderMapOutput values.
// You can construct a concrete instance of `CustomProviderMapInput` via:
//
//          CustomProviderMap{ "key": CustomProviderArgs{...} }
type CustomProviderMapInput interface {
	pulumi.Input

	ToCustomProviderMapOutput() CustomProviderMapOutput
	ToCustomProviderMapOutputWithContext(context.Context) CustomProviderMapOutput
}

type CustomProviderMap map[string]CustomProviderInput

func (CustomProviderMap) ElementType() reflect.Type {
	return reflect.TypeOf((map[string]*CustomProvider)(nil))
}

func (i CustomProviderMap) ToCustomProviderMapOutput() CustomProviderMapOutput {
	return i.ToCustomProviderMapOutputWithContext(context.Background())
}

func (i CustomProviderMap) ToCustomProviderMapOutputWithContext(ctx context.Context) CustomProviderMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomProviderMapOutput)
}

type CustomProviderOutput struct {
	*pulumi.OutputState
}

func (CustomProviderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomProvider)(nil))
}

func (o CustomProviderOutput) ToCustomProviderOutput() CustomProviderOutput {
	return o
}

func (o CustomProviderOutput) ToCustomProviderOutputWithContext(ctx context.Context) CustomProviderOutput {
	return o
}

func (o CustomProviderOutput) ToCustomProviderPtrOutput() CustomProviderPtrOutput {
	return o.ToCustomProviderPtrOutputWithContext(context.Background())
}

func (o CustomProviderOutput) ToCustomProviderPtrOutputWithContext(ctx context.Context) CustomProviderPtrOutput {
	return o.ApplyT(func(v CustomProvider) *CustomProvider {
		return &v
	}).(CustomProviderPtrOutput)
}

type CustomProviderPtrOutput struct {
	*pulumi.OutputState
}

func (CustomProviderPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomProvider)(nil))
}

func (o CustomProviderPtrOutput) ToCustomProviderPtrOutput() CustomProviderPtrOutput {
	return o
}

func (o CustomProviderPtrOutput) ToCustomProviderPtrOutputWithContext(ctx context.Context) CustomProviderPtrOutput {
	return o
}

type CustomProviderArrayOutput struct{ *pulumi.OutputState }

func (CustomProviderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CustomProvider)(nil))
}

func (o CustomProviderArrayOutput) ToCustomProviderArrayOutput() CustomProviderArrayOutput {
	return o
}

func (o CustomProviderArrayOutput) ToCustomProviderArrayOutputWithContext(ctx context.Context) CustomProviderArrayOutput {
	return o
}

func (o CustomProviderArrayOutput) Index(i pulumi.IntInput) CustomProviderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CustomProvider {
		return vs[0].([]CustomProvider)[vs[1].(int)]
	}).(CustomProviderOutput)
}

type CustomProviderMapOutput struct{ *pulumi.OutputState }

func (CustomProviderMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]CustomProvider)(nil))
}

func (o CustomProviderMapOutput) ToCustomProviderMapOutput() CustomProviderMapOutput {
	return o
}

func (o CustomProviderMapOutput) ToCustomProviderMapOutputWithContext(ctx context.Context) CustomProviderMapOutput {
	return o
}

func (o CustomProviderMapOutput) MapIndex(k pulumi.StringInput) CustomProviderOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) CustomProvider {
		return vs[0].(map[string]CustomProvider)[vs[1].(string)]
	}).(CustomProviderOutput)
}

func init() {
	pulumi.RegisterOutputType(CustomProviderOutput{})
	pulumi.RegisterOutputType(CustomProviderPtrOutput{})
	pulumi.RegisterOutputType(CustomProviderArrayOutput{})
	pulumi.RegisterOutputType(CustomProviderMapOutput{})
}
