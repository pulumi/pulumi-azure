// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package core

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source return the available Extended Locations for a specific Azure Region.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/core"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := core.GetExtendedLocations(ctx, &core.GetExtendedLocationsArgs{
//				Location: "West Europe",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetExtendedLocations(ctx *pulumi.Context, args *GetExtendedLocationsArgs, opts ...pulumi.InvokeOption) (*GetExtendedLocationsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetExtendedLocationsResult
	err := ctx.Invoke("azure:core/getExtendedLocations:getExtendedLocations", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getExtendedLocations.
type GetExtendedLocationsArgs struct {
	// The Azure location to retrieve the Extended Locations for.
	Location string `pulumi:"location"`
}

// A collection of values returned by getExtendedLocations.
type GetExtendedLocationsResult struct {
	// The available extended locations for the Azure Location.
	ExtendedLocations []string `pulumi:"extendedLocations"`
	// The provider-assigned unique ID for this managed resource.
	Id       string `pulumi:"id"`
	Location string `pulumi:"location"`
}

func GetExtendedLocationsOutput(ctx *pulumi.Context, args GetExtendedLocationsOutputArgs, opts ...pulumi.InvokeOption) GetExtendedLocationsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetExtendedLocationsResult, error) {
			args := v.(GetExtendedLocationsArgs)
			r, err := GetExtendedLocations(ctx, &args, opts...)
			var s GetExtendedLocationsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetExtendedLocationsResultOutput)
}

// A collection of arguments for invoking getExtendedLocations.
type GetExtendedLocationsOutputArgs struct {
	// The Azure location to retrieve the Extended Locations for.
	Location pulumi.StringInput `pulumi:"location"`
}

func (GetExtendedLocationsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetExtendedLocationsArgs)(nil)).Elem()
}

// A collection of values returned by getExtendedLocations.
type GetExtendedLocationsResultOutput struct{ *pulumi.OutputState }

func (GetExtendedLocationsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetExtendedLocationsResult)(nil)).Elem()
}

func (o GetExtendedLocationsResultOutput) ToGetExtendedLocationsResultOutput() GetExtendedLocationsResultOutput {
	return o
}

func (o GetExtendedLocationsResultOutput) ToGetExtendedLocationsResultOutputWithContext(ctx context.Context) GetExtendedLocationsResultOutput {
	return o
}

// The available extended locations for the Azure Location.
func (o GetExtendedLocationsResultOutput) ExtendedLocations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetExtendedLocationsResult) []string { return v.ExtendedLocations }).(pulumi.StringArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetExtendedLocationsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetExtendedLocationsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetExtendedLocationsResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v GetExtendedLocationsResult) string { return v.Location }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetExtendedLocationsResultOutput{})
}
