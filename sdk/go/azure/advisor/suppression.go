// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package advisor

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type Suppression struct {
	pulumi.CustomResourceState

	Name             pulumi.StringOutput    `pulumi:"name"`
	RecommendationId pulumi.StringOutput    `pulumi:"recommendationId"`
	ResourceId       pulumi.StringOutput    `pulumi:"resourceId"`
	SuppressionId    pulumi.StringOutput    `pulumi:"suppressionId"`
	Ttl              pulumi.StringPtrOutput `pulumi:"ttl"`
}

// NewSuppression registers a new resource with the given unique name, arguments, and options.
func NewSuppression(ctx *pulumi.Context,
	name string, args *SuppressionArgs, opts ...pulumi.ResourceOption) (*Suppression, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.RecommendationId == nil {
		return nil, errors.New("invalid value for required argument 'RecommendationId'")
	}
	if args.ResourceId == nil {
		return nil, errors.New("invalid value for required argument 'ResourceId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Suppression
	err := ctx.RegisterResource("azure:advisor/suppression:Suppression", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSuppression gets an existing Suppression resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSuppression(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SuppressionState, opts ...pulumi.ResourceOption) (*Suppression, error) {
	var resource Suppression
	err := ctx.ReadResource("azure:advisor/suppression:Suppression", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Suppression resources.
type suppressionState struct {
	Name             *string `pulumi:"name"`
	RecommendationId *string `pulumi:"recommendationId"`
	ResourceId       *string `pulumi:"resourceId"`
	SuppressionId    *string `pulumi:"suppressionId"`
	Ttl              *string `pulumi:"ttl"`
}

type SuppressionState struct {
	Name             pulumi.StringPtrInput
	RecommendationId pulumi.StringPtrInput
	ResourceId       pulumi.StringPtrInput
	SuppressionId    pulumi.StringPtrInput
	Ttl              pulumi.StringPtrInput
}

func (SuppressionState) ElementType() reflect.Type {
	return reflect.TypeOf((*suppressionState)(nil)).Elem()
}

type suppressionArgs struct {
	Name             *string `pulumi:"name"`
	RecommendationId string  `pulumi:"recommendationId"`
	ResourceId       string  `pulumi:"resourceId"`
	Ttl              *string `pulumi:"ttl"`
}

// The set of arguments for constructing a Suppression resource.
type SuppressionArgs struct {
	Name             pulumi.StringPtrInput
	RecommendationId pulumi.StringInput
	ResourceId       pulumi.StringInput
	Ttl              pulumi.StringPtrInput
}

func (SuppressionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*suppressionArgs)(nil)).Elem()
}

type SuppressionInput interface {
	pulumi.Input

	ToSuppressionOutput() SuppressionOutput
	ToSuppressionOutputWithContext(ctx context.Context) SuppressionOutput
}

func (*Suppression) ElementType() reflect.Type {
	return reflect.TypeOf((**Suppression)(nil)).Elem()
}

func (i *Suppression) ToSuppressionOutput() SuppressionOutput {
	return i.ToSuppressionOutputWithContext(context.Background())
}

func (i *Suppression) ToSuppressionOutputWithContext(ctx context.Context) SuppressionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SuppressionOutput)
}

// SuppressionArrayInput is an input type that accepts SuppressionArray and SuppressionArrayOutput values.
// You can construct a concrete instance of `SuppressionArrayInput` via:
//
//	SuppressionArray{ SuppressionArgs{...} }
type SuppressionArrayInput interface {
	pulumi.Input

	ToSuppressionArrayOutput() SuppressionArrayOutput
	ToSuppressionArrayOutputWithContext(context.Context) SuppressionArrayOutput
}

type SuppressionArray []SuppressionInput

func (SuppressionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Suppression)(nil)).Elem()
}

func (i SuppressionArray) ToSuppressionArrayOutput() SuppressionArrayOutput {
	return i.ToSuppressionArrayOutputWithContext(context.Background())
}

func (i SuppressionArray) ToSuppressionArrayOutputWithContext(ctx context.Context) SuppressionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SuppressionArrayOutput)
}

// SuppressionMapInput is an input type that accepts SuppressionMap and SuppressionMapOutput values.
// You can construct a concrete instance of `SuppressionMapInput` via:
//
//	SuppressionMap{ "key": SuppressionArgs{...} }
type SuppressionMapInput interface {
	pulumi.Input

	ToSuppressionMapOutput() SuppressionMapOutput
	ToSuppressionMapOutputWithContext(context.Context) SuppressionMapOutput
}

type SuppressionMap map[string]SuppressionInput

func (SuppressionMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Suppression)(nil)).Elem()
}

func (i SuppressionMap) ToSuppressionMapOutput() SuppressionMapOutput {
	return i.ToSuppressionMapOutputWithContext(context.Background())
}

func (i SuppressionMap) ToSuppressionMapOutputWithContext(ctx context.Context) SuppressionMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SuppressionMapOutput)
}

type SuppressionOutput struct{ *pulumi.OutputState }

func (SuppressionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Suppression)(nil)).Elem()
}

func (o SuppressionOutput) ToSuppressionOutput() SuppressionOutput {
	return o
}

func (o SuppressionOutput) ToSuppressionOutputWithContext(ctx context.Context) SuppressionOutput {
	return o
}

func (o SuppressionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Suppression) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o SuppressionOutput) RecommendationId() pulumi.StringOutput {
	return o.ApplyT(func(v *Suppression) pulumi.StringOutput { return v.RecommendationId }).(pulumi.StringOutput)
}

func (o SuppressionOutput) ResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v *Suppression) pulumi.StringOutput { return v.ResourceId }).(pulumi.StringOutput)
}

func (o SuppressionOutput) SuppressionId() pulumi.StringOutput {
	return o.ApplyT(func(v *Suppression) pulumi.StringOutput { return v.SuppressionId }).(pulumi.StringOutput)
}

func (o SuppressionOutput) Ttl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Suppression) pulumi.StringPtrOutput { return v.Ttl }).(pulumi.StringPtrOutput)
}

type SuppressionArrayOutput struct{ *pulumi.OutputState }

func (SuppressionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Suppression)(nil)).Elem()
}

func (o SuppressionArrayOutput) ToSuppressionArrayOutput() SuppressionArrayOutput {
	return o
}

func (o SuppressionArrayOutput) ToSuppressionArrayOutputWithContext(ctx context.Context) SuppressionArrayOutput {
	return o
}

func (o SuppressionArrayOutput) Index(i pulumi.IntInput) SuppressionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Suppression {
		return vs[0].([]*Suppression)[vs[1].(int)]
	}).(SuppressionOutput)
}

type SuppressionMapOutput struct{ *pulumi.OutputState }

func (SuppressionMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Suppression)(nil)).Elem()
}

func (o SuppressionMapOutput) ToSuppressionMapOutput() SuppressionMapOutput {
	return o
}

func (o SuppressionMapOutput) ToSuppressionMapOutputWithContext(ctx context.Context) SuppressionMapOutput {
	return o
}

func (o SuppressionMapOutput) MapIndex(k pulumi.StringInput) SuppressionOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Suppression {
		return vs[0].(map[string]*Suppression)[vs[1].(string)]
	}).(SuppressionOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SuppressionInput)(nil)).Elem(), &Suppression{})
	pulumi.RegisterInputType(reflect.TypeOf((*SuppressionArrayInput)(nil)).Elem(), SuppressionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SuppressionMapInput)(nil)).Elem(), SuppressionMap{})
	pulumi.RegisterOutputType(SuppressionOutput{})
	pulumi.RegisterOutputType(SuppressionArrayOutput{})
	pulumi.RegisterOutputType(SuppressionMapOutput{})
}
