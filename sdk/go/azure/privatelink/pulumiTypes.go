// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package privatelink

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type EndpointPrivateServiceConnection struct {
	// Does the Private Endpoint require Manual Approval from the remote resource owner? Changing this forces a new resource to be created.
	IsManualConnection bool `pulumi:"isManualConnection"`
	// Specifies the Name of the Private Service Connection. Changing this forces a new resource to be created.
	Name string `pulumi:"name"`
	// The ID of the Private Link Enabled Remote Resource which this Private Endpoint should be connected to. Changing this forces a new resource to be created.
	PrivateConnectionResourceId string `pulumi:"privateConnectionResourceId"`
	// A message passed to the owner of the remote resource when the private endpoint attempts to establish the connection to the remote resource. The request message can be a maximum of `140` characters in length. Only valid if `isManualConnection` is set to `true`.
	RequestMessage *string `pulumi:"requestMessage"`
	// A list of subresource names which the Private Endpoint is able to connect to. `subresourceNames` corresponds to `groupId`. Changing this forces a new resource to be created.
	SubresourceNames []string `pulumi:"subresourceNames"`
}

type EndpointPrivateServiceConnectionInput interface {
	pulumi.Input

	ToEndpointPrivateServiceConnectionOutput() EndpointPrivateServiceConnectionOutput
	ToEndpointPrivateServiceConnectionOutputWithContext(context.Context) EndpointPrivateServiceConnectionOutput
}

type EndpointPrivateServiceConnectionArgs struct {
	// Does the Private Endpoint require Manual Approval from the remote resource owner? Changing this forces a new resource to be created.
	IsManualConnection pulumi.BoolInput `pulumi:"isManualConnection"`
	// Specifies the Name of the Private Service Connection. Changing this forces a new resource to be created.
	Name pulumi.StringInput `pulumi:"name"`
	// The ID of the Private Link Enabled Remote Resource which this Private Endpoint should be connected to. Changing this forces a new resource to be created.
	PrivateConnectionResourceId pulumi.StringInput `pulumi:"privateConnectionResourceId"`
	// A message passed to the owner of the remote resource when the private endpoint attempts to establish the connection to the remote resource. The request message can be a maximum of `140` characters in length. Only valid if `isManualConnection` is set to `true`.
	RequestMessage pulumi.StringPtrInput `pulumi:"requestMessage"`
	// A list of subresource names which the Private Endpoint is able to connect to. `subresourceNames` corresponds to `groupId`. Changing this forces a new resource to be created.
	SubresourceNames pulumi.StringArrayInput `pulumi:"subresourceNames"`
}

func (EndpointPrivateServiceConnectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointPrivateServiceConnection)(nil)).Elem()
}

func (i EndpointPrivateServiceConnectionArgs) ToEndpointPrivateServiceConnectionOutput() EndpointPrivateServiceConnectionOutput {
	return i.ToEndpointPrivateServiceConnectionOutputWithContext(context.Background())
}

func (i EndpointPrivateServiceConnectionArgs) ToEndpointPrivateServiceConnectionOutputWithContext(ctx context.Context) EndpointPrivateServiceConnectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointPrivateServiceConnectionOutput)
}

func (i EndpointPrivateServiceConnectionArgs) ToEndpointPrivateServiceConnectionPtrOutput() EndpointPrivateServiceConnectionPtrOutput {
	return i.ToEndpointPrivateServiceConnectionPtrOutputWithContext(context.Background())
}

func (i EndpointPrivateServiceConnectionArgs) ToEndpointPrivateServiceConnectionPtrOutputWithContext(ctx context.Context) EndpointPrivateServiceConnectionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointPrivateServiceConnectionOutput).ToEndpointPrivateServiceConnectionPtrOutputWithContext(ctx)
}

type EndpointPrivateServiceConnectionPtrInput interface {
	pulumi.Input

	ToEndpointPrivateServiceConnectionPtrOutput() EndpointPrivateServiceConnectionPtrOutput
	ToEndpointPrivateServiceConnectionPtrOutputWithContext(context.Context) EndpointPrivateServiceConnectionPtrOutput
}

type endpointPrivateServiceConnectionPtrType EndpointPrivateServiceConnectionArgs

func EndpointPrivateServiceConnectionPtr(v *EndpointPrivateServiceConnectionArgs) EndpointPrivateServiceConnectionPtrInput {	return (*endpointPrivateServiceConnectionPtrType)(v)
}

func (*endpointPrivateServiceConnectionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointPrivateServiceConnection)(nil)).Elem()
}

func (i *endpointPrivateServiceConnectionPtrType) ToEndpointPrivateServiceConnectionPtrOutput() EndpointPrivateServiceConnectionPtrOutput {
	return i.ToEndpointPrivateServiceConnectionPtrOutputWithContext(context.Background())
}

func (i *endpointPrivateServiceConnectionPtrType) ToEndpointPrivateServiceConnectionPtrOutputWithContext(ctx context.Context) EndpointPrivateServiceConnectionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointPrivateServiceConnectionPtrOutput)
}

type EndpointPrivateServiceConnectionOutput struct { *pulumi.OutputState }

func (EndpointPrivateServiceConnectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointPrivateServiceConnection)(nil)).Elem()
}

func (o EndpointPrivateServiceConnectionOutput) ToEndpointPrivateServiceConnectionOutput() EndpointPrivateServiceConnectionOutput {
	return o
}

func (o EndpointPrivateServiceConnectionOutput) ToEndpointPrivateServiceConnectionOutputWithContext(ctx context.Context) EndpointPrivateServiceConnectionOutput {
	return o
}

func (o EndpointPrivateServiceConnectionOutput) ToEndpointPrivateServiceConnectionPtrOutput() EndpointPrivateServiceConnectionPtrOutput {
	return o.ToEndpointPrivateServiceConnectionPtrOutputWithContext(context.Background())
}

func (o EndpointPrivateServiceConnectionOutput) ToEndpointPrivateServiceConnectionPtrOutputWithContext(ctx context.Context) EndpointPrivateServiceConnectionPtrOutput {
	return o.ApplyT(func(v EndpointPrivateServiceConnection) *EndpointPrivateServiceConnection {
		return &v
	}).(EndpointPrivateServiceConnectionPtrOutput)
}
// Does the Private Endpoint require Manual Approval from the remote resource owner? Changing this forces a new resource to be created.
func (o EndpointPrivateServiceConnectionOutput) IsManualConnection() pulumi.BoolOutput {
	return o.ApplyT(func (v EndpointPrivateServiceConnection) bool { return v.IsManualConnection }).(pulumi.BoolOutput)
}

// Specifies the Name of the Private Service Connection. Changing this forces a new resource to be created.
func (o EndpointPrivateServiceConnectionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func (v EndpointPrivateServiceConnection) string { return v.Name }).(pulumi.StringOutput)
}

// The ID of the Private Link Enabled Remote Resource which this Private Endpoint should be connected to. Changing this forces a new resource to be created.
func (o EndpointPrivateServiceConnectionOutput) PrivateConnectionResourceId() pulumi.StringOutput {
	return o.ApplyT(func (v EndpointPrivateServiceConnection) string { return v.PrivateConnectionResourceId }).(pulumi.StringOutput)
}

// A message passed to the owner of the remote resource when the private endpoint attempts to establish the connection to the remote resource. The request message can be a maximum of `140` characters in length. Only valid if `isManualConnection` is set to `true`.
func (o EndpointPrivateServiceConnectionOutput) RequestMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func (v EndpointPrivateServiceConnection) *string { return v.RequestMessage }).(pulumi.StringPtrOutput)
}

// A list of subresource names which the Private Endpoint is able to connect to. `subresourceNames` corresponds to `groupId`. Changing this forces a new resource to be created.
func (o EndpointPrivateServiceConnectionOutput) SubresourceNames() pulumi.StringArrayOutput {
	return o.ApplyT(func (v EndpointPrivateServiceConnection) []string { return v.SubresourceNames }).(pulumi.StringArrayOutput)
}

type EndpointPrivateServiceConnectionPtrOutput struct { *pulumi.OutputState}

func (EndpointPrivateServiceConnectionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointPrivateServiceConnection)(nil)).Elem()
}

func (o EndpointPrivateServiceConnectionPtrOutput) ToEndpointPrivateServiceConnectionPtrOutput() EndpointPrivateServiceConnectionPtrOutput {
	return o
}

func (o EndpointPrivateServiceConnectionPtrOutput) ToEndpointPrivateServiceConnectionPtrOutputWithContext(ctx context.Context) EndpointPrivateServiceConnectionPtrOutput {
	return o
}

func (o EndpointPrivateServiceConnectionPtrOutput) Elem() EndpointPrivateServiceConnectionOutput {
	return o.ApplyT(func (v *EndpointPrivateServiceConnection) EndpointPrivateServiceConnection { return *v }).(EndpointPrivateServiceConnectionOutput)
}

// Does the Private Endpoint require Manual Approval from the remote resource owner? Changing this forces a new resource to be created.
func (o EndpointPrivateServiceConnectionPtrOutput) IsManualConnection() pulumi.BoolOutput {
	return o.ApplyT(func (v EndpointPrivateServiceConnection) bool { return v.IsManualConnection }).(pulumi.BoolOutput)
}

// Specifies the Name of the Private Service Connection. Changing this forces a new resource to be created.
func (o EndpointPrivateServiceConnectionPtrOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func (v EndpointPrivateServiceConnection) string { return v.Name }).(pulumi.StringOutput)
}

// The ID of the Private Link Enabled Remote Resource which this Private Endpoint should be connected to. Changing this forces a new resource to be created.
func (o EndpointPrivateServiceConnectionPtrOutput) PrivateConnectionResourceId() pulumi.StringOutput {
	return o.ApplyT(func (v EndpointPrivateServiceConnection) string { return v.PrivateConnectionResourceId }).(pulumi.StringOutput)
}

// A message passed to the owner of the remote resource when the private endpoint attempts to establish the connection to the remote resource. The request message can be a maximum of `140` characters in length. Only valid if `isManualConnection` is set to `true`.
func (o EndpointPrivateServiceConnectionPtrOutput) RequestMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func (v EndpointPrivateServiceConnection) *string { return v.RequestMessage }).(pulumi.StringPtrOutput)
}

// A list of subresource names which the Private Endpoint is able to connect to. `subresourceNames` corresponds to `groupId`. Changing this forces a new resource to be created.
func (o EndpointPrivateServiceConnectionPtrOutput) SubresourceNames() pulumi.StringArrayOutput {
	return o.ApplyT(func (v EndpointPrivateServiceConnection) []string { return v.SubresourceNames }).(pulumi.StringArrayOutput)
}

type GetEndpointConnectionPrivateServiceConnection struct {
	// Specifies the Name of the private endpoint.
	Name string `pulumi:"name"`
	// The private IP address associated with the private endpoint, note that you will have a private IP address assigned to the private endpoint even if the connection request was `Rejected`.
	PrivateIpAddress string `pulumi:"privateIpAddress"`
	// Possible values are as follows:
	// Value | Meaning
	// -- | --
	// `Auto-Approved` | The remote resource owner has added you to the `Auto-Approved` RBAC permission list for the remote resource, all private endpoint connection requests will be automatically `Approved`.
	// `Deleted state` | The resource owner has `Rejected` the private endpoint connection request and has removed your private endpoint request from the remote resource.
	// `request/response message` | If you submitted a manual private endpoint connection request, while in the `Pending` status the `requestResponse` will display the same text from your `requestMessage` in the `privateServiceConnection` block above. If the private endpoint connection request was `Rejected` by the owner of the remote resource, the text for the rejection will be displayed as the `requestResponse` text, if the private endpoint connection request was `Approved` by the owner of the remote resource, the text for the approval will be displayed as the `requestResponse` text
	RequestResponse string `pulumi:"requestResponse"`
	// The current status of the private endpoint request, possible values will be `Pending`, `Approved`, `Rejected`, or `Disconnected`.
	Status string `pulumi:"status"`
}

type GetEndpointConnectionPrivateServiceConnectionInput interface {
	pulumi.Input

	ToGetEndpointConnectionPrivateServiceConnectionOutput() GetEndpointConnectionPrivateServiceConnectionOutput
	ToGetEndpointConnectionPrivateServiceConnectionOutputWithContext(context.Context) GetEndpointConnectionPrivateServiceConnectionOutput
}

type GetEndpointConnectionPrivateServiceConnectionArgs struct {
	// Specifies the Name of the private endpoint.
	Name pulumi.StringInput `pulumi:"name"`
	// The private IP address associated with the private endpoint, note that you will have a private IP address assigned to the private endpoint even if the connection request was `Rejected`.
	PrivateIpAddress pulumi.StringInput `pulumi:"privateIpAddress"`
	// Possible values are as follows:
	// Value | Meaning
	// -- | --
	// `Auto-Approved` | The remote resource owner has added you to the `Auto-Approved` RBAC permission list for the remote resource, all private endpoint connection requests will be automatically `Approved`.
	// `Deleted state` | The resource owner has `Rejected` the private endpoint connection request and has removed your private endpoint request from the remote resource.
	// `request/response message` | If you submitted a manual private endpoint connection request, while in the `Pending` status the `requestResponse` will display the same text from your `requestMessage` in the `privateServiceConnection` block above. If the private endpoint connection request was `Rejected` by the owner of the remote resource, the text for the rejection will be displayed as the `requestResponse` text, if the private endpoint connection request was `Approved` by the owner of the remote resource, the text for the approval will be displayed as the `requestResponse` text
	RequestResponse pulumi.StringInput `pulumi:"requestResponse"`
	// The current status of the private endpoint request, possible values will be `Pending`, `Approved`, `Rejected`, or `Disconnected`.
	Status pulumi.StringInput `pulumi:"status"`
}

func (GetEndpointConnectionPrivateServiceConnectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEndpointConnectionPrivateServiceConnection)(nil)).Elem()
}

func (i GetEndpointConnectionPrivateServiceConnectionArgs) ToGetEndpointConnectionPrivateServiceConnectionOutput() GetEndpointConnectionPrivateServiceConnectionOutput {
	return i.ToGetEndpointConnectionPrivateServiceConnectionOutputWithContext(context.Background())
}

func (i GetEndpointConnectionPrivateServiceConnectionArgs) ToGetEndpointConnectionPrivateServiceConnectionOutputWithContext(ctx context.Context) GetEndpointConnectionPrivateServiceConnectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEndpointConnectionPrivateServiceConnectionOutput)
}

type GetEndpointConnectionPrivateServiceConnectionArrayInput interface {
	pulumi.Input

	ToGetEndpointConnectionPrivateServiceConnectionArrayOutput() GetEndpointConnectionPrivateServiceConnectionArrayOutput
	ToGetEndpointConnectionPrivateServiceConnectionArrayOutputWithContext(context.Context) GetEndpointConnectionPrivateServiceConnectionArrayOutput
}

type GetEndpointConnectionPrivateServiceConnectionArray []GetEndpointConnectionPrivateServiceConnectionInput

func (GetEndpointConnectionPrivateServiceConnectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEndpointConnectionPrivateServiceConnection)(nil)).Elem()
}

func (i GetEndpointConnectionPrivateServiceConnectionArray) ToGetEndpointConnectionPrivateServiceConnectionArrayOutput() GetEndpointConnectionPrivateServiceConnectionArrayOutput {
	return i.ToGetEndpointConnectionPrivateServiceConnectionArrayOutputWithContext(context.Background())
}

func (i GetEndpointConnectionPrivateServiceConnectionArray) ToGetEndpointConnectionPrivateServiceConnectionArrayOutputWithContext(ctx context.Context) GetEndpointConnectionPrivateServiceConnectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEndpointConnectionPrivateServiceConnectionArrayOutput)
}

type GetEndpointConnectionPrivateServiceConnectionOutput struct { *pulumi.OutputState }

func (GetEndpointConnectionPrivateServiceConnectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEndpointConnectionPrivateServiceConnection)(nil)).Elem()
}

func (o GetEndpointConnectionPrivateServiceConnectionOutput) ToGetEndpointConnectionPrivateServiceConnectionOutput() GetEndpointConnectionPrivateServiceConnectionOutput {
	return o
}

func (o GetEndpointConnectionPrivateServiceConnectionOutput) ToGetEndpointConnectionPrivateServiceConnectionOutputWithContext(ctx context.Context) GetEndpointConnectionPrivateServiceConnectionOutput {
	return o
}

// Specifies the Name of the private endpoint.
func (o GetEndpointConnectionPrivateServiceConnectionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func (v GetEndpointConnectionPrivateServiceConnection) string { return v.Name }).(pulumi.StringOutput)
}

// The private IP address associated with the private endpoint, note that you will have a private IP address assigned to the private endpoint even if the connection request was `Rejected`.
func (o GetEndpointConnectionPrivateServiceConnectionOutput) PrivateIpAddress() pulumi.StringOutput {
	return o.ApplyT(func (v GetEndpointConnectionPrivateServiceConnection) string { return v.PrivateIpAddress }).(pulumi.StringOutput)
}

// Possible values are as follows:
// Value | Meaning
// -- | --
// `Auto-Approved` | The remote resource owner has added you to the `Auto-Approved` RBAC permission list for the remote resource, all private endpoint connection requests will be automatically `Approved`.
// `Deleted state` | The resource owner has `Rejected` the private endpoint connection request and has removed your private endpoint request from the remote resource.
// `request/response message` | If you submitted a manual private endpoint connection request, while in the `Pending` status the `requestResponse` will display the same text from your `requestMessage` in the `privateServiceConnection` block above. If the private endpoint connection request was `Rejected` by the owner of the remote resource, the text for the rejection will be displayed as the `requestResponse` text, if the private endpoint connection request was `Approved` by the owner of the remote resource, the text for the approval will be displayed as the `requestResponse` text
func (o GetEndpointConnectionPrivateServiceConnectionOutput) RequestResponse() pulumi.StringOutput {
	return o.ApplyT(func (v GetEndpointConnectionPrivateServiceConnection) string { return v.RequestResponse }).(pulumi.StringOutput)
}

// The current status of the private endpoint request, possible values will be `Pending`, `Approved`, `Rejected`, or `Disconnected`.
func (o GetEndpointConnectionPrivateServiceConnectionOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func (v GetEndpointConnectionPrivateServiceConnection) string { return v.Status }).(pulumi.StringOutput)
}

type GetEndpointConnectionPrivateServiceConnectionArrayOutput struct { *pulumi.OutputState}

func (GetEndpointConnectionPrivateServiceConnectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEndpointConnectionPrivateServiceConnection)(nil)).Elem()
}

func (o GetEndpointConnectionPrivateServiceConnectionArrayOutput) ToGetEndpointConnectionPrivateServiceConnectionArrayOutput() GetEndpointConnectionPrivateServiceConnectionArrayOutput {
	return o
}

func (o GetEndpointConnectionPrivateServiceConnectionArrayOutput) ToGetEndpointConnectionPrivateServiceConnectionArrayOutputWithContext(ctx context.Context) GetEndpointConnectionPrivateServiceConnectionArrayOutput {
	return o
}

func (o GetEndpointConnectionPrivateServiceConnectionArrayOutput) Index(i pulumi.IntInput) GetEndpointConnectionPrivateServiceConnectionOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) GetEndpointConnectionPrivateServiceConnection {
		return vs[0].([]GetEndpointConnectionPrivateServiceConnection)[vs[1].(int)]
	}).(GetEndpointConnectionPrivateServiceConnectionOutput)
}

type GetServiceEndpointConnectionsPrivateEndpointConnection struct {
	// A message indicating if changes on the service provider require any updates or not.
	ActionRequired string `pulumi:"actionRequired"`
	// The resource id of the private link service connection between the private link service and the private link endpoint.
	ConnectionId string `pulumi:"connectionId"`
	// The name of the connection between the private link service and the private link endpoint.
	ConnectionName string `pulumi:"connectionName"`
	// The request for approval message or the reason for rejection message.
	Description string `pulumi:"description"`
	// The resource id of the private link endpoint.
	PrivateEndpointId string `pulumi:"privateEndpointId"`
	// The name of the private link endpoint.
	PrivateEndpointName string `pulumi:"privateEndpointName"`
	// Indicates the state of the connection between the private link service and the private link endpoint, possible values are `Pending`, `Approved` or `Rejected`.
	Status string `pulumi:"status"`
}

type GetServiceEndpointConnectionsPrivateEndpointConnectionInput interface {
	pulumi.Input

	ToGetServiceEndpointConnectionsPrivateEndpointConnectionOutput() GetServiceEndpointConnectionsPrivateEndpointConnectionOutput
	ToGetServiceEndpointConnectionsPrivateEndpointConnectionOutputWithContext(context.Context) GetServiceEndpointConnectionsPrivateEndpointConnectionOutput
}

type GetServiceEndpointConnectionsPrivateEndpointConnectionArgs struct {
	// A message indicating if changes on the service provider require any updates or not.
	ActionRequired pulumi.StringInput `pulumi:"actionRequired"`
	// The resource id of the private link service connection between the private link service and the private link endpoint.
	ConnectionId pulumi.StringInput `pulumi:"connectionId"`
	// The name of the connection between the private link service and the private link endpoint.
	ConnectionName pulumi.StringInput `pulumi:"connectionName"`
	// The request for approval message or the reason for rejection message.
	Description pulumi.StringInput `pulumi:"description"`
	// The resource id of the private link endpoint.
	PrivateEndpointId pulumi.StringInput `pulumi:"privateEndpointId"`
	// The name of the private link endpoint.
	PrivateEndpointName pulumi.StringInput `pulumi:"privateEndpointName"`
	// Indicates the state of the connection between the private link service and the private link endpoint, possible values are `Pending`, `Approved` or `Rejected`.
	Status pulumi.StringInput `pulumi:"status"`
}

func (GetServiceEndpointConnectionsPrivateEndpointConnectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceEndpointConnectionsPrivateEndpointConnection)(nil)).Elem()
}

func (i GetServiceEndpointConnectionsPrivateEndpointConnectionArgs) ToGetServiceEndpointConnectionsPrivateEndpointConnectionOutput() GetServiceEndpointConnectionsPrivateEndpointConnectionOutput {
	return i.ToGetServiceEndpointConnectionsPrivateEndpointConnectionOutputWithContext(context.Background())
}

func (i GetServiceEndpointConnectionsPrivateEndpointConnectionArgs) ToGetServiceEndpointConnectionsPrivateEndpointConnectionOutputWithContext(ctx context.Context) GetServiceEndpointConnectionsPrivateEndpointConnectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceEndpointConnectionsPrivateEndpointConnectionOutput)
}

type GetServiceEndpointConnectionsPrivateEndpointConnectionArrayInput interface {
	pulumi.Input

	ToGetServiceEndpointConnectionsPrivateEndpointConnectionArrayOutput() GetServiceEndpointConnectionsPrivateEndpointConnectionArrayOutput
	ToGetServiceEndpointConnectionsPrivateEndpointConnectionArrayOutputWithContext(context.Context) GetServiceEndpointConnectionsPrivateEndpointConnectionArrayOutput
}

type GetServiceEndpointConnectionsPrivateEndpointConnectionArray []GetServiceEndpointConnectionsPrivateEndpointConnectionInput

func (GetServiceEndpointConnectionsPrivateEndpointConnectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServiceEndpointConnectionsPrivateEndpointConnection)(nil)).Elem()
}

func (i GetServiceEndpointConnectionsPrivateEndpointConnectionArray) ToGetServiceEndpointConnectionsPrivateEndpointConnectionArrayOutput() GetServiceEndpointConnectionsPrivateEndpointConnectionArrayOutput {
	return i.ToGetServiceEndpointConnectionsPrivateEndpointConnectionArrayOutputWithContext(context.Background())
}

func (i GetServiceEndpointConnectionsPrivateEndpointConnectionArray) ToGetServiceEndpointConnectionsPrivateEndpointConnectionArrayOutputWithContext(ctx context.Context) GetServiceEndpointConnectionsPrivateEndpointConnectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceEndpointConnectionsPrivateEndpointConnectionArrayOutput)
}

type GetServiceEndpointConnectionsPrivateEndpointConnectionOutput struct { *pulumi.OutputState }

func (GetServiceEndpointConnectionsPrivateEndpointConnectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceEndpointConnectionsPrivateEndpointConnection)(nil)).Elem()
}

func (o GetServiceEndpointConnectionsPrivateEndpointConnectionOutput) ToGetServiceEndpointConnectionsPrivateEndpointConnectionOutput() GetServiceEndpointConnectionsPrivateEndpointConnectionOutput {
	return o
}

func (o GetServiceEndpointConnectionsPrivateEndpointConnectionOutput) ToGetServiceEndpointConnectionsPrivateEndpointConnectionOutputWithContext(ctx context.Context) GetServiceEndpointConnectionsPrivateEndpointConnectionOutput {
	return o
}

// A message indicating if changes on the service provider require any updates or not.
func (o GetServiceEndpointConnectionsPrivateEndpointConnectionOutput) ActionRequired() pulumi.StringOutput {
	return o.ApplyT(func (v GetServiceEndpointConnectionsPrivateEndpointConnection) string { return v.ActionRequired }).(pulumi.StringOutput)
}

// The resource id of the private link service connection between the private link service and the private link endpoint.
func (o GetServiceEndpointConnectionsPrivateEndpointConnectionOutput) ConnectionId() pulumi.StringOutput {
	return o.ApplyT(func (v GetServiceEndpointConnectionsPrivateEndpointConnection) string { return v.ConnectionId }).(pulumi.StringOutput)
}

// The name of the connection between the private link service and the private link endpoint.
func (o GetServiceEndpointConnectionsPrivateEndpointConnectionOutput) ConnectionName() pulumi.StringOutput {
	return o.ApplyT(func (v GetServiceEndpointConnectionsPrivateEndpointConnection) string { return v.ConnectionName }).(pulumi.StringOutput)
}

// The request for approval message or the reason for rejection message.
func (o GetServiceEndpointConnectionsPrivateEndpointConnectionOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func (v GetServiceEndpointConnectionsPrivateEndpointConnection) string { return v.Description }).(pulumi.StringOutput)
}

// The resource id of the private link endpoint.
func (o GetServiceEndpointConnectionsPrivateEndpointConnectionOutput) PrivateEndpointId() pulumi.StringOutput {
	return o.ApplyT(func (v GetServiceEndpointConnectionsPrivateEndpointConnection) string { return v.PrivateEndpointId }).(pulumi.StringOutput)
}

// The name of the private link endpoint.
func (o GetServiceEndpointConnectionsPrivateEndpointConnectionOutput) PrivateEndpointName() pulumi.StringOutput {
	return o.ApplyT(func (v GetServiceEndpointConnectionsPrivateEndpointConnection) string { return v.PrivateEndpointName }).(pulumi.StringOutput)
}

// Indicates the state of the connection between the private link service and the private link endpoint, possible values are `Pending`, `Approved` or `Rejected`.
func (o GetServiceEndpointConnectionsPrivateEndpointConnectionOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func (v GetServiceEndpointConnectionsPrivateEndpointConnection) string { return v.Status }).(pulumi.StringOutput)
}

type GetServiceEndpointConnectionsPrivateEndpointConnectionArrayOutput struct { *pulumi.OutputState}

func (GetServiceEndpointConnectionsPrivateEndpointConnectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServiceEndpointConnectionsPrivateEndpointConnection)(nil)).Elem()
}

func (o GetServiceEndpointConnectionsPrivateEndpointConnectionArrayOutput) ToGetServiceEndpointConnectionsPrivateEndpointConnectionArrayOutput() GetServiceEndpointConnectionsPrivateEndpointConnectionArrayOutput {
	return o
}

func (o GetServiceEndpointConnectionsPrivateEndpointConnectionArrayOutput) ToGetServiceEndpointConnectionsPrivateEndpointConnectionArrayOutputWithContext(ctx context.Context) GetServiceEndpointConnectionsPrivateEndpointConnectionArrayOutput {
	return o
}

func (o GetServiceEndpointConnectionsPrivateEndpointConnectionArrayOutput) Index(i pulumi.IntInput) GetServiceEndpointConnectionsPrivateEndpointConnectionOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) GetServiceEndpointConnectionsPrivateEndpointConnection {
		return vs[0].([]GetServiceEndpointConnectionsPrivateEndpointConnection)[vs[1].(int)]
	}).(GetServiceEndpointConnectionsPrivateEndpointConnectionOutput)
}

type GetServiceNatIpConfiguration struct {
	// The name of the private link service.
	Name string `pulumi:"name"`
	// Value that indicates if the IP configuration is the primary configuration or not.
	Primary bool `pulumi:"primary"`
	// The private IP address of the NAT IP configuration.
	PrivateIpAddress string `pulumi:"privateIpAddress"`
	// The version of the IP Protocol.
	PrivateIpAddressVersion string `pulumi:"privateIpAddressVersion"`
	// The ID of the subnet to be used by the service.
	SubnetId string `pulumi:"subnetId"`
}

type GetServiceNatIpConfigurationInput interface {
	pulumi.Input

	ToGetServiceNatIpConfigurationOutput() GetServiceNatIpConfigurationOutput
	ToGetServiceNatIpConfigurationOutputWithContext(context.Context) GetServiceNatIpConfigurationOutput
}

type GetServiceNatIpConfigurationArgs struct {
	// The name of the private link service.
	Name pulumi.StringInput `pulumi:"name"`
	// Value that indicates if the IP configuration is the primary configuration or not.
	Primary pulumi.BoolInput `pulumi:"primary"`
	// The private IP address of the NAT IP configuration.
	PrivateIpAddress pulumi.StringInput `pulumi:"privateIpAddress"`
	// The version of the IP Protocol.
	PrivateIpAddressVersion pulumi.StringInput `pulumi:"privateIpAddressVersion"`
	// The ID of the subnet to be used by the service.
	SubnetId pulumi.StringInput `pulumi:"subnetId"`
}

func (GetServiceNatIpConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceNatIpConfiguration)(nil)).Elem()
}

func (i GetServiceNatIpConfigurationArgs) ToGetServiceNatIpConfigurationOutput() GetServiceNatIpConfigurationOutput {
	return i.ToGetServiceNatIpConfigurationOutputWithContext(context.Background())
}

func (i GetServiceNatIpConfigurationArgs) ToGetServiceNatIpConfigurationOutputWithContext(ctx context.Context) GetServiceNatIpConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceNatIpConfigurationOutput)
}

type GetServiceNatIpConfigurationArrayInput interface {
	pulumi.Input

	ToGetServiceNatIpConfigurationArrayOutput() GetServiceNatIpConfigurationArrayOutput
	ToGetServiceNatIpConfigurationArrayOutputWithContext(context.Context) GetServiceNatIpConfigurationArrayOutput
}

type GetServiceNatIpConfigurationArray []GetServiceNatIpConfigurationInput

func (GetServiceNatIpConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServiceNatIpConfiguration)(nil)).Elem()
}

func (i GetServiceNatIpConfigurationArray) ToGetServiceNatIpConfigurationArrayOutput() GetServiceNatIpConfigurationArrayOutput {
	return i.ToGetServiceNatIpConfigurationArrayOutputWithContext(context.Background())
}

func (i GetServiceNatIpConfigurationArray) ToGetServiceNatIpConfigurationArrayOutputWithContext(ctx context.Context) GetServiceNatIpConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceNatIpConfigurationArrayOutput)
}

type GetServiceNatIpConfigurationOutput struct { *pulumi.OutputState }

func (GetServiceNatIpConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceNatIpConfiguration)(nil)).Elem()
}

func (o GetServiceNatIpConfigurationOutput) ToGetServiceNatIpConfigurationOutput() GetServiceNatIpConfigurationOutput {
	return o
}

func (o GetServiceNatIpConfigurationOutput) ToGetServiceNatIpConfigurationOutputWithContext(ctx context.Context) GetServiceNatIpConfigurationOutput {
	return o
}

// The name of the private link service.
func (o GetServiceNatIpConfigurationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func (v GetServiceNatIpConfiguration) string { return v.Name }).(pulumi.StringOutput)
}

// Value that indicates if the IP configuration is the primary configuration or not.
func (o GetServiceNatIpConfigurationOutput) Primary() pulumi.BoolOutput {
	return o.ApplyT(func (v GetServiceNatIpConfiguration) bool { return v.Primary }).(pulumi.BoolOutput)
}

// The private IP address of the NAT IP configuration.
func (o GetServiceNatIpConfigurationOutput) PrivateIpAddress() pulumi.StringOutput {
	return o.ApplyT(func (v GetServiceNatIpConfiguration) string { return v.PrivateIpAddress }).(pulumi.StringOutput)
}

// The version of the IP Protocol.
func (o GetServiceNatIpConfigurationOutput) PrivateIpAddressVersion() pulumi.StringOutput {
	return o.ApplyT(func (v GetServiceNatIpConfiguration) string { return v.PrivateIpAddressVersion }).(pulumi.StringOutput)
}

// The ID of the subnet to be used by the service.
func (o GetServiceNatIpConfigurationOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func (v GetServiceNatIpConfiguration) string { return v.SubnetId }).(pulumi.StringOutput)
}

type GetServiceNatIpConfigurationArrayOutput struct { *pulumi.OutputState}

func (GetServiceNatIpConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServiceNatIpConfiguration)(nil)).Elem()
}

func (o GetServiceNatIpConfigurationArrayOutput) ToGetServiceNatIpConfigurationArrayOutput() GetServiceNatIpConfigurationArrayOutput {
	return o
}

func (o GetServiceNatIpConfigurationArrayOutput) ToGetServiceNatIpConfigurationArrayOutputWithContext(ctx context.Context) GetServiceNatIpConfigurationArrayOutput {
	return o
}

func (o GetServiceNatIpConfigurationArrayOutput) Index(i pulumi.IntInput) GetServiceNatIpConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) GetServiceNatIpConfiguration {
		return vs[0].([]GetServiceNatIpConfiguration)[vs[1].(int)]
	}).(GetServiceNatIpConfigurationOutput)
}

func init() {
	pulumi.RegisterOutputType(EndpointPrivateServiceConnectionOutput{})
	pulumi.RegisterOutputType(EndpointPrivateServiceConnectionPtrOutput{})
	pulumi.RegisterOutputType(GetEndpointConnectionPrivateServiceConnectionOutput{})
	pulumi.RegisterOutputType(GetEndpointConnectionPrivateServiceConnectionArrayOutput{})
	pulumi.RegisterOutputType(GetServiceEndpointConnectionsPrivateEndpointConnectionOutput{})
	pulumi.RegisterOutputType(GetServiceEndpointConnectionsPrivateEndpointConnectionArrayOutput{})
	pulumi.RegisterOutputType(GetServiceNatIpConfigurationOutput{})
	pulumi.RegisterOutputType(GetServiceNatIpConfigurationArrayOutput{})
}
