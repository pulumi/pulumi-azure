// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package loganalytics

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages a Table in a Log Analytics (formally Operational Insights) Workspace.
//
// > **Note:** This resource does not create or destroy tables. This resource is used to update attributes (currently only retention_in_days) of the tables created when a Log Analytics Workspace is created. Deleting an loganalytics.WorkspaceTable resource will not delete the table. Instead, the table's retentionInDays field will be set to the value of operationalinsights.AnalyticsWorkspace retention_in_days
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/core"
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/loganalytics"
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/operationalinsights"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			exampleResourceGroup, err := core.NewResourceGroup(ctx, "exampleResourceGroup", &core.ResourceGroupArgs{
//				Location: pulumi.String("West Europe"),
//			})
//			if err != nil {
//				return err
//			}
//			exampleAnalyticsWorkspace, err := operationalinsights.NewAnalyticsWorkspace(ctx, "exampleAnalyticsWorkspace", &operationalinsights.AnalyticsWorkspaceArgs{
//				Location:          exampleResourceGroup.Location,
//				ResourceGroupName: exampleResourceGroup.Name,
//				Sku:               pulumi.String("PerGB2018"),
//				RetentionInDays:   pulumi.Int(30),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = loganalytics.NewWorkspaceTable(ctx, "exampleWorkspaceTable", &loganalytics.WorkspaceTableArgs{
//				WorkspaceId:     exampleAnalyticsWorkspace.ID(),
//				RetentionInDays: pulumi.Int(60),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type WorkspaceTable struct {
	pulumi.CustomResourceState

	// Specifies the name of a table in a Log Analytics Workspace.
	Name pulumi.StringOutput `pulumi:"name"`
	// Specify the system how to handle and charge the logs ingested to the table. Possible values are `Analytics` and `Basic`. Defaults to `Analytics`.
	//
	// > **Note:** The `name` of tables currently supported by the `Basic` plan can be found [here](https://learn.microsoft.com/en-us/azure/azure-monitor/logs/basic-logs-configure?tabs=portal-1#supported-tables).
	Plan pulumi.StringPtrOutput `pulumi:"plan"`
	// The table's retention in days. Possible values are either 7 (Free Tier only) or range between 30 and 730.
	//
	// > **Note:** `retentionInDays` will revert back to the value of operationalinsights.AnalyticsWorkspace retention_in_days when a loganalytics.WorkspaceTable is deleted.
	//
	// > **Note:** The `retentionInDays` cannot be specified when `plan` is `Basic` because the retention is fixed at eight days.
	RetentionInDays pulumi.IntPtrOutput `pulumi:"retentionInDays"`
	// The object ID of the Log Analytics Workspace that contains the table.
	WorkspaceId pulumi.StringOutput `pulumi:"workspaceId"`
}

// NewWorkspaceTable registers a new resource with the given unique name, arguments, and options.
func NewWorkspaceTable(ctx *pulumi.Context,
	name string, args *WorkspaceTableArgs, opts ...pulumi.ResourceOption) (*WorkspaceTable, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.WorkspaceId == nil {
		return nil, errors.New("invalid value for required argument 'WorkspaceId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource WorkspaceTable
	err := ctx.RegisterResource("azure:loganalytics/workspaceTable:WorkspaceTable", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWorkspaceTable gets an existing WorkspaceTable resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWorkspaceTable(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WorkspaceTableState, opts ...pulumi.ResourceOption) (*WorkspaceTable, error) {
	var resource WorkspaceTable
	err := ctx.ReadResource("azure:loganalytics/workspaceTable:WorkspaceTable", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering WorkspaceTable resources.
type workspaceTableState struct {
	// Specifies the name of a table in a Log Analytics Workspace.
	Name *string `pulumi:"name"`
	// Specify the system how to handle and charge the logs ingested to the table. Possible values are `Analytics` and `Basic`. Defaults to `Analytics`.
	//
	// > **Note:** The `name` of tables currently supported by the `Basic` plan can be found [here](https://learn.microsoft.com/en-us/azure/azure-monitor/logs/basic-logs-configure?tabs=portal-1#supported-tables).
	Plan *string `pulumi:"plan"`
	// The table's retention in days. Possible values are either 7 (Free Tier only) or range between 30 and 730.
	//
	// > **Note:** `retentionInDays` will revert back to the value of operationalinsights.AnalyticsWorkspace retention_in_days when a loganalytics.WorkspaceTable is deleted.
	//
	// > **Note:** The `retentionInDays` cannot be specified when `plan` is `Basic` because the retention is fixed at eight days.
	RetentionInDays *int `pulumi:"retentionInDays"`
	// The object ID of the Log Analytics Workspace that contains the table.
	WorkspaceId *string `pulumi:"workspaceId"`
}

type WorkspaceTableState struct {
	// Specifies the name of a table in a Log Analytics Workspace.
	Name pulumi.StringPtrInput
	// Specify the system how to handle and charge the logs ingested to the table. Possible values are `Analytics` and `Basic`. Defaults to `Analytics`.
	//
	// > **Note:** The `name` of tables currently supported by the `Basic` plan can be found [here](https://learn.microsoft.com/en-us/azure/azure-monitor/logs/basic-logs-configure?tabs=portal-1#supported-tables).
	Plan pulumi.StringPtrInput
	// The table's retention in days. Possible values are either 7 (Free Tier only) or range between 30 and 730.
	//
	// > **Note:** `retentionInDays` will revert back to the value of operationalinsights.AnalyticsWorkspace retention_in_days when a loganalytics.WorkspaceTable is deleted.
	//
	// > **Note:** The `retentionInDays` cannot be specified when `plan` is `Basic` because the retention is fixed at eight days.
	RetentionInDays pulumi.IntPtrInput
	// The object ID of the Log Analytics Workspace that contains the table.
	WorkspaceId pulumi.StringPtrInput
}

func (WorkspaceTableState) ElementType() reflect.Type {
	return reflect.TypeOf((*workspaceTableState)(nil)).Elem()
}

type workspaceTableArgs struct {
	// Specifies the name of a table in a Log Analytics Workspace.
	Name *string `pulumi:"name"`
	// Specify the system how to handle and charge the logs ingested to the table. Possible values are `Analytics` and `Basic`. Defaults to `Analytics`.
	//
	// > **Note:** The `name` of tables currently supported by the `Basic` plan can be found [here](https://learn.microsoft.com/en-us/azure/azure-monitor/logs/basic-logs-configure?tabs=portal-1#supported-tables).
	Plan *string `pulumi:"plan"`
	// The table's retention in days. Possible values are either 7 (Free Tier only) or range between 30 and 730.
	//
	// > **Note:** `retentionInDays` will revert back to the value of operationalinsights.AnalyticsWorkspace retention_in_days when a loganalytics.WorkspaceTable is deleted.
	//
	// > **Note:** The `retentionInDays` cannot be specified when `plan` is `Basic` because the retention is fixed at eight days.
	RetentionInDays *int `pulumi:"retentionInDays"`
	// The object ID of the Log Analytics Workspace that contains the table.
	WorkspaceId string `pulumi:"workspaceId"`
}

// The set of arguments for constructing a WorkspaceTable resource.
type WorkspaceTableArgs struct {
	// Specifies the name of a table in a Log Analytics Workspace.
	Name pulumi.StringPtrInput
	// Specify the system how to handle and charge the logs ingested to the table. Possible values are `Analytics` and `Basic`. Defaults to `Analytics`.
	//
	// > **Note:** The `name` of tables currently supported by the `Basic` plan can be found [here](https://learn.microsoft.com/en-us/azure/azure-monitor/logs/basic-logs-configure?tabs=portal-1#supported-tables).
	Plan pulumi.StringPtrInput
	// The table's retention in days. Possible values are either 7 (Free Tier only) or range between 30 and 730.
	//
	// > **Note:** `retentionInDays` will revert back to the value of operationalinsights.AnalyticsWorkspace retention_in_days when a loganalytics.WorkspaceTable is deleted.
	//
	// > **Note:** The `retentionInDays` cannot be specified when `plan` is `Basic` because the retention is fixed at eight days.
	RetentionInDays pulumi.IntPtrInput
	// The object ID of the Log Analytics Workspace that contains the table.
	WorkspaceId pulumi.StringInput
}

func (WorkspaceTableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*workspaceTableArgs)(nil)).Elem()
}

type WorkspaceTableInput interface {
	pulumi.Input

	ToWorkspaceTableOutput() WorkspaceTableOutput
	ToWorkspaceTableOutputWithContext(ctx context.Context) WorkspaceTableOutput
}

func (*WorkspaceTable) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspaceTable)(nil)).Elem()
}

func (i *WorkspaceTable) ToWorkspaceTableOutput() WorkspaceTableOutput {
	return i.ToWorkspaceTableOutputWithContext(context.Background())
}

func (i *WorkspaceTable) ToWorkspaceTableOutputWithContext(ctx context.Context) WorkspaceTableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceTableOutput)
}

// WorkspaceTableArrayInput is an input type that accepts WorkspaceTableArray and WorkspaceTableArrayOutput values.
// You can construct a concrete instance of `WorkspaceTableArrayInput` via:
//
//	WorkspaceTableArray{ WorkspaceTableArgs{...} }
type WorkspaceTableArrayInput interface {
	pulumi.Input

	ToWorkspaceTableArrayOutput() WorkspaceTableArrayOutput
	ToWorkspaceTableArrayOutputWithContext(context.Context) WorkspaceTableArrayOutput
}

type WorkspaceTableArray []WorkspaceTableInput

func (WorkspaceTableArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WorkspaceTable)(nil)).Elem()
}

func (i WorkspaceTableArray) ToWorkspaceTableArrayOutput() WorkspaceTableArrayOutput {
	return i.ToWorkspaceTableArrayOutputWithContext(context.Background())
}

func (i WorkspaceTableArray) ToWorkspaceTableArrayOutputWithContext(ctx context.Context) WorkspaceTableArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceTableArrayOutput)
}

// WorkspaceTableMapInput is an input type that accepts WorkspaceTableMap and WorkspaceTableMapOutput values.
// You can construct a concrete instance of `WorkspaceTableMapInput` via:
//
//	WorkspaceTableMap{ "key": WorkspaceTableArgs{...} }
type WorkspaceTableMapInput interface {
	pulumi.Input

	ToWorkspaceTableMapOutput() WorkspaceTableMapOutput
	ToWorkspaceTableMapOutputWithContext(context.Context) WorkspaceTableMapOutput
}

type WorkspaceTableMap map[string]WorkspaceTableInput

func (WorkspaceTableMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WorkspaceTable)(nil)).Elem()
}

func (i WorkspaceTableMap) ToWorkspaceTableMapOutput() WorkspaceTableMapOutput {
	return i.ToWorkspaceTableMapOutputWithContext(context.Background())
}

func (i WorkspaceTableMap) ToWorkspaceTableMapOutputWithContext(ctx context.Context) WorkspaceTableMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceTableMapOutput)
}

type WorkspaceTableOutput struct{ *pulumi.OutputState }

func (WorkspaceTableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspaceTable)(nil)).Elem()
}

func (o WorkspaceTableOutput) ToWorkspaceTableOutput() WorkspaceTableOutput {
	return o
}

func (o WorkspaceTableOutput) ToWorkspaceTableOutputWithContext(ctx context.Context) WorkspaceTableOutput {
	return o
}

// Specifies the name of a table in a Log Analytics Workspace.
func (o WorkspaceTableOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkspaceTable) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Specify the system how to handle and charge the logs ingested to the table. Possible values are `Analytics` and `Basic`. Defaults to `Analytics`.
//
// > **Note:** The `name` of tables currently supported by the `Basic` plan can be found [here](https://learn.microsoft.com/en-us/azure/azure-monitor/logs/basic-logs-configure?tabs=portal-1#supported-tables).
func (o WorkspaceTableOutput) Plan() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceTable) pulumi.StringPtrOutput { return v.Plan }).(pulumi.StringPtrOutput)
}

// The table's retention in days. Possible values are either 7 (Free Tier only) or range between 30 and 730.
//
// > **Note:** `retentionInDays` will revert back to the value of operationalinsights.AnalyticsWorkspace retention_in_days when a loganalytics.WorkspaceTable is deleted.
//
// > **Note:** The `retentionInDays` cannot be specified when `plan` is `Basic` because the retention is fixed at eight days.
func (o WorkspaceTableOutput) RetentionInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WorkspaceTable) pulumi.IntPtrOutput { return v.RetentionInDays }).(pulumi.IntPtrOutput)
}

// The object ID of the Log Analytics Workspace that contains the table.
func (o WorkspaceTableOutput) WorkspaceId() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkspaceTable) pulumi.StringOutput { return v.WorkspaceId }).(pulumi.StringOutput)
}

type WorkspaceTableArrayOutput struct{ *pulumi.OutputState }

func (WorkspaceTableArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WorkspaceTable)(nil)).Elem()
}

func (o WorkspaceTableArrayOutput) ToWorkspaceTableArrayOutput() WorkspaceTableArrayOutput {
	return o
}

func (o WorkspaceTableArrayOutput) ToWorkspaceTableArrayOutputWithContext(ctx context.Context) WorkspaceTableArrayOutput {
	return o
}

func (o WorkspaceTableArrayOutput) Index(i pulumi.IntInput) WorkspaceTableOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *WorkspaceTable {
		return vs[0].([]*WorkspaceTable)[vs[1].(int)]
	}).(WorkspaceTableOutput)
}

type WorkspaceTableMapOutput struct{ *pulumi.OutputState }

func (WorkspaceTableMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WorkspaceTable)(nil)).Elem()
}

func (o WorkspaceTableMapOutput) ToWorkspaceTableMapOutput() WorkspaceTableMapOutput {
	return o
}

func (o WorkspaceTableMapOutput) ToWorkspaceTableMapOutputWithContext(ctx context.Context) WorkspaceTableMapOutput {
	return o
}

func (o WorkspaceTableMapOutput) MapIndex(k pulumi.StringInput) WorkspaceTableOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *WorkspaceTable {
		return vs[0].(map[string]*WorkspaceTable)[vs[1].(string)]
	}).(WorkspaceTableOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceTableInput)(nil)).Elem(), &WorkspaceTable{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceTableArrayInput)(nil)).Elem(), WorkspaceTableArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceTableMapInput)(nil)).Elem(), WorkspaceTableMap{})
	pulumi.RegisterOutputType(WorkspaceTableOutput{})
	pulumi.RegisterOutputType(WorkspaceTableArrayOutput{})
	pulumi.RegisterOutputType(WorkspaceTableMapOutput{})
}
