// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package elasticsan

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to access information about an existing Elastic SAN.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/elasticsan"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			example, err := elasticsan.Get(ctx, &elasticsan.GetArgs{
//				Name:              "existing",
//				ResourceGroupName: "existing",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("id", example.Id)
//			return nil
//		})
//	}
//
// ```
func Get(ctx *pulumi.Context, args *GetArgs, opts ...pulumi.InvokeOption) (*GetResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetResult
	err := ctx.Invoke("azure:elasticsan/get:get", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking get.
type GetArgs struct {
	// The name of this Elastic SAN.
	Name string `pulumi:"name"`
	// The name of the Resource Group where the Elastic SAN exists.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// A collection of values returned by get.
type GetResult struct {
	// The base size of the Elastic SAN resource in TiB.
	BaseSizeInTib int `pulumi:"baseSizeInTib"`
	// The base size of the Elastic SAN resource in TiB.
	ExtendedSizeInTib int `pulumi:"extendedSizeInTib"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The Azure Region where the Elastic SAN exists.
	Location string `pulumi:"location"`
	// The SKU name.
	Name              string `pulumi:"name"`
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// A `sku` block as defined below.
	Skus []GetSkus `pulumi:"skus"`
	// A mapping of tags assigned to the Elastic SAN.
	Tags map[string]string `pulumi:"tags"`
	// Total Provisioned IOps of the Elastic SAN resource.
	TotalIops int `pulumi:"totalIops"`
	// Total Provisioned MBps Elastic SAN resource.
	TotalMbps int `pulumi:"totalMbps"`
	// Total size of the Elastic SAN resource in TB.
	TotalSizeInTib int `pulumi:"totalSizeInTib"`
	// Total size of the provisioned Volumes in GiB.
	TotalVolumeSizeInGib int `pulumi:"totalVolumeSizeInGib"`
	// Total number of volume groups in this Elastic SAN resource.
	VolumeGroupCount int `pulumi:"volumeGroupCount"`
	// Logical zone for the Elastic SAN resource.
	Zones []string `pulumi:"zones"`
}

func GetOutput(ctx *pulumi.Context, args GetOutputArgs, opts ...pulumi.InvokeOption) GetResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetResult, error) {
			args := v.(GetArgs)
			r, err := Get(ctx, &args, opts...)
			var s GetResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetResultOutput)
}

// A collection of arguments for invoking get.
type GetOutputArgs struct {
	// The name of this Elastic SAN.
	Name pulumi.StringInput `pulumi:"name"`
	// The name of the Resource Group where the Elastic SAN exists.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (GetOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetArgs)(nil)).Elem()
}

// A collection of values returned by get.
type GetResultOutput struct{ *pulumi.OutputState }

func (GetResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResult)(nil)).Elem()
}

func (o GetResultOutput) ToGetResultOutput() GetResultOutput {
	return o
}

func (o GetResultOutput) ToGetResultOutputWithContext(ctx context.Context) GetResultOutput {
	return o
}

// The base size of the Elastic SAN resource in TiB.
func (o GetResultOutput) BaseSizeInTib() pulumi.IntOutput {
	return o.ApplyT(func(v GetResult) int { return v.BaseSizeInTib }).(pulumi.IntOutput)
}

// The base size of the Elastic SAN resource in TiB.
func (o GetResultOutput) ExtendedSizeInTib() pulumi.IntOutput {
	return o.ApplyT(func(v GetResult) int { return v.ExtendedSizeInTib }).(pulumi.IntOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetResult) string { return v.Id }).(pulumi.StringOutput)
}

// The Azure Region where the Elastic SAN exists.
func (o GetResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v GetResult) string { return v.Location }).(pulumi.StringOutput)
}

// The SKU name.
func (o GetResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetResultOutput) ResourceGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v GetResult) string { return v.ResourceGroupName }).(pulumi.StringOutput)
}

// A `sku` block as defined below.
func (o GetResultOutput) Skus() GetSkusArrayOutput {
	return o.ApplyT(func(v GetResult) []GetSkus { return v.Skus }).(GetSkusArrayOutput)
}

// A mapping of tags assigned to the Elastic SAN.
func (o GetResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Total Provisioned IOps of the Elastic SAN resource.
func (o GetResultOutput) TotalIops() pulumi.IntOutput {
	return o.ApplyT(func(v GetResult) int { return v.TotalIops }).(pulumi.IntOutput)
}

// Total Provisioned MBps Elastic SAN resource.
func (o GetResultOutput) TotalMbps() pulumi.IntOutput {
	return o.ApplyT(func(v GetResult) int { return v.TotalMbps }).(pulumi.IntOutput)
}

// Total size of the Elastic SAN resource in TB.
func (o GetResultOutput) TotalSizeInTib() pulumi.IntOutput {
	return o.ApplyT(func(v GetResult) int { return v.TotalSizeInTib }).(pulumi.IntOutput)
}

// Total size of the provisioned Volumes in GiB.
func (o GetResultOutput) TotalVolumeSizeInGib() pulumi.IntOutput {
	return o.ApplyT(func(v GetResult) int { return v.TotalVolumeSizeInGib }).(pulumi.IntOutput)
}

// Total number of volume groups in this Elastic SAN resource.
func (o GetResultOutput) VolumeGroupCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetResult) int { return v.VolumeGroupCount }).(pulumi.IntOutput)
}

// Logical zone for the Elastic SAN resource.
func (o GetResultOutput) Zones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetResult) []string { return v.Zones }).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetResultOutput{})
}
