// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package consumption

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type BudgetManagementGroupFilter struct {
	// One or more `dimension` blocks as defined below to filter the budget on.
	Dimensions []BudgetManagementGroupFilterDimension `pulumi:"dimensions"`
	// One or more `tag` blocks as defined below to filter the budget on.
	Tags []BudgetManagementGroupFilterTag `pulumi:"tags"`
}

// BudgetManagementGroupFilterInput is an input type that accepts BudgetManagementGroupFilterArgs and BudgetManagementGroupFilterOutput values.
// You can construct a concrete instance of `BudgetManagementGroupFilterInput` via:
//
//	BudgetManagementGroupFilterArgs{...}
type BudgetManagementGroupFilterInput interface {
	pulumi.Input

	ToBudgetManagementGroupFilterOutput() BudgetManagementGroupFilterOutput
	ToBudgetManagementGroupFilterOutputWithContext(context.Context) BudgetManagementGroupFilterOutput
}

type BudgetManagementGroupFilterArgs struct {
	// One or more `dimension` blocks as defined below to filter the budget on.
	Dimensions BudgetManagementGroupFilterDimensionArrayInput `pulumi:"dimensions"`
	// One or more `tag` blocks as defined below to filter the budget on.
	Tags BudgetManagementGroupFilterTagArrayInput `pulumi:"tags"`
}

func (BudgetManagementGroupFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BudgetManagementGroupFilter)(nil)).Elem()
}

func (i BudgetManagementGroupFilterArgs) ToBudgetManagementGroupFilterOutput() BudgetManagementGroupFilterOutput {
	return i.ToBudgetManagementGroupFilterOutputWithContext(context.Background())
}

func (i BudgetManagementGroupFilterArgs) ToBudgetManagementGroupFilterOutputWithContext(ctx context.Context) BudgetManagementGroupFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BudgetManagementGroupFilterOutput)
}

func (i BudgetManagementGroupFilterArgs) ToBudgetManagementGroupFilterPtrOutput() BudgetManagementGroupFilterPtrOutput {
	return i.ToBudgetManagementGroupFilterPtrOutputWithContext(context.Background())
}

func (i BudgetManagementGroupFilterArgs) ToBudgetManagementGroupFilterPtrOutputWithContext(ctx context.Context) BudgetManagementGroupFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BudgetManagementGroupFilterOutput).ToBudgetManagementGroupFilterPtrOutputWithContext(ctx)
}

// BudgetManagementGroupFilterPtrInput is an input type that accepts BudgetManagementGroupFilterArgs, BudgetManagementGroupFilterPtr and BudgetManagementGroupFilterPtrOutput values.
// You can construct a concrete instance of `BudgetManagementGroupFilterPtrInput` via:
//
//	        BudgetManagementGroupFilterArgs{...}
//
//	or:
//
//	        nil
type BudgetManagementGroupFilterPtrInput interface {
	pulumi.Input

	ToBudgetManagementGroupFilterPtrOutput() BudgetManagementGroupFilterPtrOutput
	ToBudgetManagementGroupFilterPtrOutputWithContext(context.Context) BudgetManagementGroupFilterPtrOutput
}

type budgetManagementGroupFilterPtrType BudgetManagementGroupFilterArgs

func BudgetManagementGroupFilterPtr(v *BudgetManagementGroupFilterArgs) BudgetManagementGroupFilterPtrInput {
	return (*budgetManagementGroupFilterPtrType)(v)
}

func (*budgetManagementGroupFilterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BudgetManagementGroupFilter)(nil)).Elem()
}

func (i *budgetManagementGroupFilterPtrType) ToBudgetManagementGroupFilterPtrOutput() BudgetManagementGroupFilterPtrOutput {
	return i.ToBudgetManagementGroupFilterPtrOutputWithContext(context.Background())
}

func (i *budgetManagementGroupFilterPtrType) ToBudgetManagementGroupFilterPtrOutputWithContext(ctx context.Context) BudgetManagementGroupFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BudgetManagementGroupFilterPtrOutput)
}

type BudgetManagementGroupFilterOutput struct{ *pulumi.OutputState }

func (BudgetManagementGroupFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BudgetManagementGroupFilter)(nil)).Elem()
}

func (o BudgetManagementGroupFilterOutput) ToBudgetManagementGroupFilterOutput() BudgetManagementGroupFilterOutput {
	return o
}

func (o BudgetManagementGroupFilterOutput) ToBudgetManagementGroupFilterOutputWithContext(ctx context.Context) BudgetManagementGroupFilterOutput {
	return o
}

func (o BudgetManagementGroupFilterOutput) ToBudgetManagementGroupFilterPtrOutput() BudgetManagementGroupFilterPtrOutput {
	return o.ToBudgetManagementGroupFilterPtrOutputWithContext(context.Background())
}

func (o BudgetManagementGroupFilterOutput) ToBudgetManagementGroupFilterPtrOutputWithContext(ctx context.Context) BudgetManagementGroupFilterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BudgetManagementGroupFilter) *BudgetManagementGroupFilter {
		return &v
	}).(BudgetManagementGroupFilterPtrOutput)
}

// One or more `dimension` blocks as defined below to filter the budget on.
func (o BudgetManagementGroupFilterOutput) Dimensions() BudgetManagementGroupFilterDimensionArrayOutput {
	return o.ApplyT(func(v BudgetManagementGroupFilter) []BudgetManagementGroupFilterDimension { return v.Dimensions }).(BudgetManagementGroupFilterDimensionArrayOutput)
}

// One or more `tag` blocks as defined below to filter the budget on.
func (o BudgetManagementGroupFilterOutput) Tags() BudgetManagementGroupFilterTagArrayOutput {
	return o.ApplyT(func(v BudgetManagementGroupFilter) []BudgetManagementGroupFilterTag { return v.Tags }).(BudgetManagementGroupFilterTagArrayOutput)
}

type BudgetManagementGroupFilterPtrOutput struct{ *pulumi.OutputState }

func (BudgetManagementGroupFilterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BudgetManagementGroupFilter)(nil)).Elem()
}

func (o BudgetManagementGroupFilterPtrOutput) ToBudgetManagementGroupFilterPtrOutput() BudgetManagementGroupFilterPtrOutput {
	return o
}

func (o BudgetManagementGroupFilterPtrOutput) ToBudgetManagementGroupFilterPtrOutputWithContext(ctx context.Context) BudgetManagementGroupFilterPtrOutput {
	return o
}

func (o BudgetManagementGroupFilterPtrOutput) Elem() BudgetManagementGroupFilterOutput {
	return o.ApplyT(func(v *BudgetManagementGroupFilter) BudgetManagementGroupFilter {
		if v != nil {
			return *v
		}
		var ret BudgetManagementGroupFilter
		return ret
	}).(BudgetManagementGroupFilterOutput)
}

// One or more `dimension` blocks as defined below to filter the budget on.
func (o BudgetManagementGroupFilterPtrOutput) Dimensions() BudgetManagementGroupFilterDimensionArrayOutput {
	return o.ApplyT(func(v *BudgetManagementGroupFilter) []BudgetManagementGroupFilterDimension {
		if v == nil {
			return nil
		}
		return v.Dimensions
	}).(BudgetManagementGroupFilterDimensionArrayOutput)
}

// One or more `tag` blocks as defined below to filter the budget on.
func (o BudgetManagementGroupFilterPtrOutput) Tags() BudgetManagementGroupFilterTagArrayOutput {
	return o.ApplyT(func(v *BudgetManagementGroupFilter) []BudgetManagementGroupFilterTag {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(BudgetManagementGroupFilterTagArrayOutput)
}

type BudgetManagementGroupFilterDimension struct {
	// The name of the column to use for the filter. The allowed values are `ChargeType`, `Frequency`, `InvoiceId`, `Meter`, `MeterCategory`, `MeterSubCategory`, `PartNumber`, `PricingModel`, `Product`, `ProductOrderId`, `ProductOrderName`, `PublisherType`, `ReservationId`, `ReservationName`, `ResourceGroupName`, `ResourceGuid`, `ResourceId`, `ResourceLocation`, `ResourceType`, `ServiceFamily`, `ServiceName`, `SubscriptionID`, `SubscriptionName`, `UnitOfMeasure`.
	Name string `pulumi:"name"`
	// The operator to use for comparison. The allowed values are `In`. Defaults to `In`.
	Operator *string `pulumi:"operator"`
	// Specifies a list of values for the column.
	Values []string `pulumi:"values"`
}

// BudgetManagementGroupFilterDimensionInput is an input type that accepts BudgetManagementGroupFilterDimensionArgs and BudgetManagementGroupFilterDimensionOutput values.
// You can construct a concrete instance of `BudgetManagementGroupFilterDimensionInput` via:
//
//	BudgetManagementGroupFilterDimensionArgs{...}
type BudgetManagementGroupFilterDimensionInput interface {
	pulumi.Input

	ToBudgetManagementGroupFilterDimensionOutput() BudgetManagementGroupFilterDimensionOutput
	ToBudgetManagementGroupFilterDimensionOutputWithContext(context.Context) BudgetManagementGroupFilterDimensionOutput
}

type BudgetManagementGroupFilterDimensionArgs struct {
	// The name of the column to use for the filter. The allowed values are `ChargeType`, `Frequency`, `InvoiceId`, `Meter`, `MeterCategory`, `MeterSubCategory`, `PartNumber`, `PricingModel`, `Product`, `ProductOrderId`, `ProductOrderName`, `PublisherType`, `ReservationId`, `ReservationName`, `ResourceGroupName`, `ResourceGuid`, `ResourceId`, `ResourceLocation`, `ResourceType`, `ServiceFamily`, `ServiceName`, `SubscriptionID`, `SubscriptionName`, `UnitOfMeasure`.
	Name pulumi.StringInput `pulumi:"name"`
	// The operator to use for comparison. The allowed values are `In`. Defaults to `In`.
	Operator pulumi.StringPtrInput `pulumi:"operator"`
	// Specifies a list of values for the column.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (BudgetManagementGroupFilterDimensionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BudgetManagementGroupFilterDimension)(nil)).Elem()
}

func (i BudgetManagementGroupFilterDimensionArgs) ToBudgetManagementGroupFilterDimensionOutput() BudgetManagementGroupFilterDimensionOutput {
	return i.ToBudgetManagementGroupFilterDimensionOutputWithContext(context.Background())
}

func (i BudgetManagementGroupFilterDimensionArgs) ToBudgetManagementGroupFilterDimensionOutputWithContext(ctx context.Context) BudgetManagementGroupFilterDimensionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BudgetManagementGroupFilterDimensionOutput)
}

// BudgetManagementGroupFilterDimensionArrayInput is an input type that accepts BudgetManagementGroupFilterDimensionArray and BudgetManagementGroupFilterDimensionArrayOutput values.
// You can construct a concrete instance of `BudgetManagementGroupFilterDimensionArrayInput` via:
//
//	BudgetManagementGroupFilterDimensionArray{ BudgetManagementGroupFilterDimensionArgs{...} }
type BudgetManagementGroupFilterDimensionArrayInput interface {
	pulumi.Input

	ToBudgetManagementGroupFilterDimensionArrayOutput() BudgetManagementGroupFilterDimensionArrayOutput
	ToBudgetManagementGroupFilterDimensionArrayOutputWithContext(context.Context) BudgetManagementGroupFilterDimensionArrayOutput
}

type BudgetManagementGroupFilterDimensionArray []BudgetManagementGroupFilterDimensionInput

func (BudgetManagementGroupFilterDimensionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BudgetManagementGroupFilterDimension)(nil)).Elem()
}

func (i BudgetManagementGroupFilterDimensionArray) ToBudgetManagementGroupFilterDimensionArrayOutput() BudgetManagementGroupFilterDimensionArrayOutput {
	return i.ToBudgetManagementGroupFilterDimensionArrayOutputWithContext(context.Background())
}

func (i BudgetManagementGroupFilterDimensionArray) ToBudgetManagementGroupFilterDimensionArrayOutputWithContext(ctx context.Context) BudgetManagementGroupFilterDimensionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BudgetManagementGroupFilterDimensionArrayOutput)
}

type BudgetManagementGroupFilterDimensionOutput struct{ *pulumi.OutputState }

func (BudgetManagementGroupFilterDimensionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BudgetManagementGroupFilterDimension)(nil)).Elem()
}

func (o BudgetManagementGroupFilterDimensionOutput) ToBudgetManagementGroupFilterDimensionOutput() BudgetManagementGroupFilterDimensionOutput {
	return o
}

func (o BudgetManagementGroupFilterDimensionOutput) ToBudgetManagementGroupFilterDimensionOutputWithContext(ctx context.Context) BudgetManagementGroupFilterDimensionOutput {
	return o
}

// The name of the column to use for the filter. The allowed values are `ChargeType`, `Frequency`, `InvoiceId`, `Meter`, `MeterCategory`, `MeterSubCategory`, `PartNumber`, `PricingModel`, `Product`, `ProductOrderId`, `ProductOrderName`, `PublisherType`, `ReservationId`, `ReservationName`, `ResourceGroupName`, `ResourceGuid`, `ResourceId`, `ResourceLocation`, `ResourceType`, `ServiceFamily`, `ServiceName`, `SubscriptionID`, `SubscriptionName`, `UnitOfMeasure`.
func (o BudgetManagementGroupFilterDimensionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v BudgetManagementGroupFilterDimension) string { return v.Name }).(pulumi.StringOutput)
}

// The operator to use for comparison. The allowed values are `In`. Defaults to `In`.
func (o BudgetManagementGroupFilterDimensionOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BudgetManagementGroupFilterDimension) *string { return v.Operator }).(pulumi.StringPtrOutput)
}

// Specifies a list of values for the column.
func (o BudgetManagementGroupFilterDimensionOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BudgetManagementGroupFilterDimension) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type BudgetManagementGroupFilterDimensionArrayOutput struct{ *pulumi.OutputState }

func (BudgetManagementGroupFilterDimensionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BudgetManagementGroupFilterDimension)(nil)).Elem()
}

func (o BudgetManagementGroupFilterDimensionArrayOutput) ToBudgetManagementGroupFilterDimensionArrayOutput() BudgetManagementGroupFilterDimensionArrayOutput {
	return o
}

func (o BudgetManagementGroupFilterDimensionArrayOutput) ToBudgetManagementGroupFilterDimensionArrayOutputWithContext(ctx context.Context) BudgetManagementGroupFilterDimensionArrayOutput {
	return o
}

func (o BudgetManagementGroupFilterDimensionArrayOutput) Index(i pulumi.IntInput) BudgetManagementGroupFilterDimensionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BudgetManagementGroupFilterDimension {
		return vs[0].([]BudgetManagementGroupFilterDimension)[vs[1].(int)]
	}).(BudgetManagementGroupFilterDimensionOutput)
}

type BudgetManagementGroupFilterTag struct {
	// The name of the tag to use for the filter.
	Name string `pulumi:"name"`
	// The operator to use for comparison. The allowed values are `In`. Defaults to `In`.
	Operator *string `pulumi:"operator"`
	// Specifies a list of values for the tag.
	Values []string `pulumi:"values"`
}

// BudgetManagementGroupFilterTagInput is an input type that accepts BudgetManagementGroupFilterTagArgs and BudgetManagementGroupFilterTagOutput values.
// You can construct a concrete instance of `BudgetManagementGroupFilterTagInput` via:
//
//	BudgetManagementGroupFilterTagArgs{...}
type BudgetManagementGroupFilterTagInput interface {
	pulumi.Input

	ToBudgetManagementGroupFilterTagOutput() BudgetManagementGroupFilterTagOutput
	ToBudgetManagementGroupFilterTagOutputWithContext(context.Context) BudgetManagementGroupFilterTagOutput
}

type BudgetManagementGroupFilterTagArgs struct {
	// The name of the tag to use for the filter.
	Name pulumi.StringInput `pulumi:"name"`
	// The operator to use for comparison. The allowed values are `In`. Defaults to `In`.
	Operator pulumi.StringPtrInput `pulumi:"operator"`
	// Specifies a list of values for the tag.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (BudgetManagementGroupFilterTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BudgetManagementGroupFilterTag)(nil)).Elem()
}

func (i BudgetManagementGroupFilterTagArgs) ToBudgetManagementGroupFilterTagOutput() BudgetManagementGroupFilterTagOutput {
	return i.ToBudgetManagementGroupFilterTagOutputWithContext(context.Background())
}

func (i BudgetManagementGroupFilterTagArgs) ToBudgetManagementGroupFilterTagOutputWithContext(ctx context.Context) BudgetManagementGroupFilterTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BudgetManagementGroupFilterTagOutput)
}

// BudgetManagementGroupFilterTagArrayInput is an input type that accepts BudgetManagementGroupFilterTagArray and BudgetManagementGroupFilterTagArrayOutput values.
// You can construct a concrete instance of `BudgetManagementGroupFilterTagArrayInput` via:
//
//	BudgetManagementGroupFilterTagArray{ BudgetManagementGroupFilterTagArgs{...} }
type BudgetManagementGroupFilterTagArrayInput interface {
	pulumi.Input

	ToBudgetManagementGroupFilterTagArrayOutput() BudgetManagementGroupFilterTagArrayOutput
	ToBudgetManagementGroupFilterTagArrayOutputWithContext(context.Context) BudgetManagementGroupFilterTagArrayOutput
}

type BudgetManagementGroupFilterTagArray []BudgetManagementGroupFilterTagInput

func (BudgetManagementGroupFilterTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BudgetManagementGroupFilterTag)(nil)).Elem()
}

func (i BudgetManagementGroupFilterTagArray) ToBudgetManagementGroupFilterTagArrayOutput() BudgetManagementGroupFilterTagArrayOutput {
	return i.ToBudgetManagementGroupFilterTagArrayOutputWithContext(context.Background())
}

func (i BudgetManagementGroupFilterTagArray) ToBudgetManagementGroupFilterTagArrayOutputWithContext(ctx context.Context) BudgetManagementGroupFilterTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BudgetManagementGroupFilterTagArrayOutput)
}

type BudgetManagementGroupFilterTagOutput struct{ *pulumi.OutputState }

func (BudgetManagementGroupFilterTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BudgetManagementGroupFilterTag)(nil)).Elem()
}

func (o BudgetManagementGroupFilterTagOutput) ToBudgetManagementGroupFilterTagOutput() BudgetManagementGroupFilterTagOutput {
	return o
}

func (o BudgetManagementGroupFilterTagOutput) ToBudgetManagementGroupFilterTagOutputWithContext(ctx context.Context) BudgetManagementGroupFilterTagOutput {
	return o
}

// The name of the tag to use for the filter.
func (o BudgetManagementGroupFilterTagOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v BudgetManagementGroupFilterTag) string { return v.Name }).(pulumi.StringOutput)
}

// The operator to use for comparison. The allowed values are `In`. Defaults to `In`.
func (o BudgetManagementGroupFilterTagOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BudgetManagementGroupFilterTag) *string { return v.Operator }).(pulumi.StringPtrOutput)
}

// Specifies a list of values for the tag.
func (o BudgetManagementGroupFilterTagOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BudgetManagementGroupFilterTag) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type BudgetManagementGroupFilterTagArrayOutput struct{ *pulumi.OutputState }

func (BudgetManagementGroupFilterTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BudgetManagementGroupFilterTag)(nil)).Elem()
}

func (o BudgetManagementGroupFilterTagArrayOutput) ToBudgetManagementGroupFilterTagArrayOutput() BudgetManagementGroupFilterTagArrayOutput {
	return o
}

func (o BudgetManagementGroupFilterTagArrayOutput) ToBudgetManagementGroupFilterTagArrayOutputWithContext(ctx context.Context) BudgetManagementGroupFilterTagArrayOutput {
	return o
}

func (o BudgetManagementGroupFilterTagArrayOutput) Index(i pulumi.IntInput) BudgetManagementGroupFilterTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BudgetManagementGroupFilterTag {
		return vs[0].([]BudgetManagementGroupFilterTag)[vs[1].(int)]
	}).(BudgetManagementGroupFilterTagOutput)
}

type BudgetManagementGroupNotification struct {
	// Specifies a list of email addresses to send the budget notification to when the threshold is exceeded.
	ContactEmails []string `pulumi:"contactEmails"`
	// Should the notification be enabled? Defaults to `true`.
	Enabled *bool `pulumi:"enabled"`
	// The comparison operator for the notification. Must be one of `EqualTo`, `GreaterThan`, or `GreaterThanOrEqualTo`.
	Operator string `pulumi:"operator"`
	// Threshold value associated with a notification. Notification is sent when the cost exceeded the threshold. It is always percent and has to be between 0 and 1000.
	Threshold int `pulumi:"threshold"`
	// The type of threshold for the notification. This determines whether the notification is triggered by forecasted costs or actual costs. The allowed values are `Actual` and `Forecasted`. Default is `Actual`.
	ThresholdType *string `pulumi:"thresholdType"`
}

// BudgetManagementGroupNotificationInput is an input type that accepts BudgetManagementGroupNotificationArgs and BudgetManagementGroupNotificationOutput values.
// You can construct a concrete instance of `BudgetManagementGroupNotificationInput` via:
//
//	BudgetManagementGroupNotificationArgs{...}
type BudgetManagementGroupNotificationInput interface {
	pulumi.Input

	ToBudgetManagementGroupNotificationOutput() BudgetManagementGroupNotificationOutput
	ToBudgetManagementGroupNotificationOutputWithContext(context.Context) BudgetManagementGroupNotificationOutput
}

type BudgetManagementGroupNotificationArgs struct {
	// Specifies a list of email addresses to send the budget notification to when the threshold is exceeded.
	ContactEmails pulumi.StringArrayInput `pulumi:"contactEmails"`
	// Should the notification be enabled? Defaults to `true`.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// The comparison operator for the notification. Must be one of `EqualTo`, `GreaterThan`, or `GreaterThanOrEqualTo`.
	Operator pulumi.StringInput `pulumi:"operator"`
	// Threshold value associated with a notification. Notification is sent when the cost exceeded the threshold. It is always percent and has to be between 0 and 1000.
	Threshold pulumi.IntInput `pulumi:"threshold"`
	// The type of threshold for the notification. This determines whether the notification is triggered by forecasted costs or actual costs. The allowed values are `Actual` and `Forecasted`. Default is `Actual`.
	ThresholdType pulumi.StringPtrInput `pulumi:"thresholdType"`
}

func (BudgetManagementGroupNotificationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BudgetManagementGroupNotification)(nil)).Elem()
}

func (i BudgetManagementGroupNotificationArgs) ToBudgetManagementGroupNotificationOutput() BudgetManagementGroupNotificationOutput {
	return i.ToBudgetManagementGroupNotificationOutputWithContext(context.Background())
}

func (i BudgetManagementGroupNotificationArgs) ToBudgetManagementGroupNotificationOutputWithContext(ctx context.Context) BudgetManagementGroupNotificationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BudgetManagementGroupNotificationOutput)
}

// BudgetManagementGroupNotificationArrayInput is an input type that accepts BudgetManagementGroupNotificationArray and BudgetManagementGroupNotificationArrayOutput values.
// You can construct a concrete instance of `BudgetManagementGroupNotificationArrayInput` via:
//
//	BudgetManagementGroupNotificationArray{ BudgetManagementGroupNotificationArgs{...} }
type BudgetManagementGroupNotificationArrayInput interface {
	pulumi.Input

	ToBudgetManagementGroupNotificationArrayOutput() BudgetManagementGroupNotificationArrayOutput
	ToBudgetManagementGroupNotificationArrayOutputWithContext(context.Context) BudgetManagementGroupNotificationArrayOutput
}

type BudgetManagementGroupNotificationArray []BudgetManagementGroupNotificationInput

func (BudgetManagementGroupNotificationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BudgetManagementGroupNotification)(nil)).Elem()
}

func (i BudgetManagementGroupNotificationArray) ToBudgetManagementGroupNotificationArrayOutput() BudgetManagementGroupNotificationArrayOutput {
	return i.ToBudgetManagementGroupNotificationArrayOutputWithContext(context.Background())
}

func (i BudgetManagementGroupNotificationArray) ToBudgetManagementGroupNotificationArrayOutputWithContext(ctx context.Context) BudgetManagementGroupNotificationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BudgetManagementGroupNotificationArrayOutput)
}

type BudgetManagementGroupNotificationOutput struct{ *pulumi.OutputState }

func (BudgetManagementGroupNotificationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BudgetManagementGroupNotification)(nil)).Elem()
}

func (o BudgetManagementGroupNotificationOutput) ToBudgetManagementGroupNotificationOutput() BudgetManagementGroupNotificationOutput {
	return o
}

func (o BudgetManagementGroupNotificationOutput) ToBudgetManagementGroupNotificationOutputWithContext(ctx context.Context) BudgetManagementGroupNotificationOutput {
	return o
}

// Specifies a list of email addresses to send the budget notification to when the threshold is exceeded.
func (o BudgetManagementGroupNotificationOutput) ContactEmails() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BudgetManagementGroupNotification) []string { return v.ContactEmails }).(pulumi.StringArrayOutput)
}

// Should the notification be enabled? Defaults to `true`.
func (o BudgetManagementGroupNotificationOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BudgetManagementGroupNotification) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// The comparison operator for the notification. Must be one of `EqualTo`, `GreaterThan`, or `GreaterThanOrEqualTo`.
func (o BudgetManagementGroupNotificationOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v BudgetManagementGroupNotification) string { return v.Operator }).(pulumi.StringOutput)
}

// Threshold value associated with a notification. Notification is sent when the cost exceeded the threshold. It is always percent and has to be between 0 and 1000.
func (o BudgetManagementGroupNotificationOutput) Threshold() pulumi.IntOutput {
	return o.ApplyT(func(v BudgetManagementGroupNotification) int { return v.Threshold }).(pulumi.IntOutput)
}

// The type of threshold for the notification. This determines whether the notification is triggered by forecasted costs or actual costs. The allowed values are `Actual` and `Forecasted`. Default is `Actual`.
func (o BudgetManagementGroupNotificationOutput) ThresholdType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BudgetManagementGroupNotification) *string { return v.ThresholdType }).(pulumi.StringPtrOutput)
}

type BudgetManagementGroupNotificationArrayOutput struct{ *pulumi.OutputState }

func (BudgetManagementGroupNotificationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BudgetManagementGroupNotification)(nil)).Elem()
}

func (o BudgetManagementGroupNotificationArrayOutput) ToBudgetManagementGroupNotificationArrayOutput() BudgetManagementGroupNotificationArrayOutput {
	return o
}

func (o BudgetManagementGroupNotificationArrayOutput) ToBudgetManagementGroupNotificationArrayOutputWithContext(ctx context.Context) BudgetManagementGroupNotificationArrayOutput {
	return o
}

func (o BudgetManagementGroupNotificationArrayOutput) Index(i pulumi.IntInput) BudgetManagementGroupNotificationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BudgetManagementGroupNotification {
		return vs[0].([]BudgetManagementGroupNotification)[vs[1].(int)]
	}).(BudgetManagementGroupNotificationOutput)
}

type BudgetManagementGroupTimePeriod struct {
	// The end date for the budget. If not set this will be 10 years after the start date.
	EndDate *string `pulumi:"endDate"`
	// The start date for the budget. The start date must be first of the month and should be less than the end date. Budget start date must be on or after June 1, 2017. Future start date should not be more than twelve months. Past start date should be selected within the timegrain period. Changing this forces a new resource to be created.
	StartDate string `pulumi:"startDate"`
}

// BudgetManagementGroupTimePeriodInput is an input type that accepts BudgetManagementGroupTimePeriodArgs and BudgetManagementGroupTimePeriodOutput values.
// You can construct a concrete instance of `BudgetManagementGroupTimePeriodInput` via:
//
//	BudgetManagementGroupTimePeriodArgs{...}
type BudgetManagementGroupTimePeriodInput interface {
	pulumi.Input

	ToBudgetManagementGroupTimePeriodOutput() BudgetManagementGroupTimePeriodOutput
	ToBudgetManagementGroupTimePeriodOutputWithContext(context.Context) BudgetManagementGroupTimePeriodOutput
}

type BudgetManagementGroupTimePeriodArgs struct {
	// The end date for the budget. If not set this will be 10 years after the start date.
	EndDate pulumi.StringPtrInput `pulumi:"endDate"`
	// The start date for the budget. The start date must be first of the month and should be less than the end date. Budget start date must be on or after June 1, 2017. Future start date should not be more than twelve months. Past start date should be selected within the timegrain period. Changing this forces a new resource to be created.
	StartDate pulumi.StringInput `pulumi:"startDate"`
}

func (BudgetManagementGroupTimePeriodArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BudgetManagementGroupTimePeriod)(nil)).Elem()
}

func (i BudgetManagementGroupTimePeriodArgs) ToBudgetManagementGroupTimePeriodOutput() BudgetManagementGroupTimePeriodOutput {
	return i.ToBudgetManagementGroupTimePeriodOutputWithContext(context.Background())
}

func (i BudgetManagementGroupTimePeriodArgs) ToBudgetManagementGroupTimePeriodOutputWithContext(ctx context.Context) BudgetManagementGroupTimePeriodOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BudgetManagementGroupTimePeriodOutput)
}

func (i BudgetManagementGroupTimePeriodArgs) ToBudgetManagementGroupTimePeriodPtrOutput() BudgetManagementGroupTimePeriodPtrOutput {
	return i.ToBudgetManagementGroupTimePeriodPtrOutputWithContext(context.Background())
}

func (i BudgetManagementGroupTimePeriodArgs) ToBudgetManagementGroupTimePeriodPtrOutputWithContext(ctx context.Context) BudgetManagementGroupTimePeriodPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BudgetManagementGroupTimePeriodOutput).ToBudgetManagementGroupTimePeriodPtrOutputWithContext(ctx)
}

// BudgetManagementGroupTimePeriodPtrInput is an input type that accepts BudgetManagementGroupTimePeriodArgs, BudgetManagementGroupTimePeriodPtr and BudgetManagementGroupTimePeriodPtrOutput values.
// You can construct a concrete instance of `BudgetManagementGroupTimePeriodPtrInput` via:
//
//	        BudgetManagementGroupTimePeriodArgs{...}
//
//	or:
//
//	        nil
type BudgetManagementGroupTimePeriodPtrInput interface {
	pulumi.Input

	ToBudgetManagementGroupTimePeriodPtrOutput() BudgetManagementGroupTimePeriodPtrOutput
	ToBudgetManagementGroupTimePeriodPtrOutputWithContext(context.Context) BudgetManagementGroupTimePeriodPtrOutput
}

type budgetManagementGroupTimePeriodPtrType BudgetManagementGroupTimePeriodArgs

func BudgetManagementGroupTimePeriodPtr(v *BudgetManagementGroupTimePeriodArgs) BudgetManagementGroupTimePeriodPtrInput {
	return (*budgetManagementGroupTimePeriodPtrType)(v)
}

func (*budgetManagementGroupTimePeriodPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BudgetManagementGroupTimePeriod)(nil)).Elem()
}

func (i *budgetManagementGroupTimePeriodPtrType) ToBudgetManagementGroupTimePeriodPtrOutput() BudgetManagementGroupTimePeriodPtrOutput {
	return i.ToBudgetManagementGroupTimePeriodPtrOutputWithContext(context.Background())
}

func (i *budgetManagementGroupTimePeriodPtrType) ToBudgetManagementGroupTimePeriodPtrOutputWithContext(ctx context.Context) BudgetManagementGroupTimePeriodPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BudgetManagementGroupTimePeriodPtrOutput)
}

type BudgetManagementGroupTimePeriodOutput struct{ *pulumi.OutputState }

func (BudgetManagementGroupTimePeriodOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BudgetManagementGroupTimePeriod)(nil)).Elem()
}

func (o BudgetManagementGroupTimePeriodOutput) ToBudgetManagementGroupTimePeriodOutput() BudgetManagementGroupTimePeriodOutput {
	return o
}

func (o BudgetManagementGroupTimePeriodOutput) ToBudgetManagementGroupTimePeriodOutputWithContext(ctx context.Context) BudgetManagementGroupTimePeriodOutput {
	return o
}

func (o BudgetManagementGroupTimePeriodOutput) ToBudgetManagementGroupTimePeriodPtrOutput() BudgetManagementGroupTimePeriodPtrOutput {
	return o.ToBudgetManagementGroupTimePeriodPtrOutputWithContext(context.Background())
}

func (o BudgetManagementGroupTimePeriodOutput) ToBudgetManagementGroupTimePeriodPtrOutputWithContext(ctx context.Context) BudgetManagementGroupTimePeriodPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BudgetManagementGroupTimePeriod) *BudgetManagementGroupTimePeriod {
		return &v
	}).(BudgetManagementGroupTimePeriodPtrOutput)
}

// The end date for the budget. If not set this will be 10 years after the start date.
func (o BudgetManagementGroupTimePeriodOutput) EndDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BudgetManagementGroupTimePeriod) *string { return v.EndDate }).(pulumi.StringPtrOutput)
}

// The start date for the budget. The start date must be first of the month and should be less than the end date. Budget start date must be on or after June 1, 2017. Future start date should not be more than twelve months. Past start date should be selected within the timegrain period. Changing this forces a new resource to be created.
func (o BudgetManagementGroupTimePeriodOutput) StartDate() pulumi.StringOutput {
	return o.ApplyT(func(v BudgetManagementGroupTimePeriod) string { return v.StartDate }).(pulumi.StringOutput)
}

type BudgetManagementGroupTimePeriodPtrOutput struct{ *pulumi.OutputState }

func (BudgetManagementGroupTimePeriodPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BudgetManagementGroupTimePeriod)(nil)).Elem()
}

func (o BudgetManagementGroupTimePeriodPtrOutput) ToBudgetManagementGroupTimePeriodPtrOutput() BudgetManagementGroupTimePeriodPtrOutput {
	return o
}

func (o BudgetManagementGroupTimePeriodPtrOutput) ToBudgetManagementGroupTimePeriodPtrOutputWithContext(ctx context.Context) BudgetManagementGroupTimePeriodPtrOutput {
	return o
}

func (o BudgetManagementGroupTimePeriodPtrOutput) Elem() BudgetManagementGroupTimePeriodOutput {
	return o.ApplyT(func(v *BudgetManagementGroupTimePeriod) BudgetManagementGroupTimePeriod {
		if v != nil {
			return *v
		}
		var ret BudgetManagementGroupTimePeriod
		return ret
	}).(BudgetManagementGroupTimePeriodOutput)
}

// The end date for the budget. If not set this will be 10 years after the start date.
func (o BudgetManagementGroupTimePeriodPtrOutput) EndDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BudgetManagementGroupTimePeriod) *string {
		if v == nil {
			return nil
		}
		return v.EndDate
	}).(pulumi.StringPtrOutput)
}

// The start date for the budget. The start date must be first of the month and should be less than the end date. Budget start date must be on or after June 1, 2017. Future start date should not be more than twelve months. Past start date should be selected within the timegrain period. Changing this forces a new resource to be created.
func (o BudgetManagementGroupTimePeriodPtrOutput) StartDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BudgetManagementGroupTimePeriod) *string {
		if v == nil {
			return nil
		}
		return &v.StartDate
	}).(pulumi.StringPtrOutput)
}

type BudgetResourceGroupFilter struct {
	// One or more `dimension` blocks as defined below to filter the budget on.
	Dimensions []BudgetResourceGroupFilterDimension `pulumi:"dimensions"`
	// One or more `tag` blocks as defined below to filter the budget on.
	Tags []BudgetResourceGroupFilterTag `pulumi:"tags"`
}

// BudgetResourceGroupFilterInput is an input type that accepts BudgetResourceGroupFilterArgs and BudgetResourceGroupFilterOutput values.
// You can construct a concrete instance of `BudgetResourceGroupFilterInput` via:
//
//	BudgetResourceGroupFilterArgs{...}
type BudgetResourceGroupFilterInput interface {
	pulumi.Input

	ToBudgetResourceGroupFilterOutput() BudgetResourceGroupFilterOutput
	ToBudgetResourceGroupFilterOutputWithContext(context.Context) BudgetResourceGroupFilterOutput
}

type BudgetResourceGroupFilterArgs struct {
	// One or more `dimension` blocks as defined below to filter the budget on.
	Dimensions BudgetResourceGroupFilterDimensionArrayInput `pulumi:"dimensions"`
	// One or more `tag` blocks as defined below to filter the budget on.
	Tags BudgetResourceGroupFilterTagArrayInput `pulumi:"tags"`
}

func (BudgetResourceGroupFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BudgetResourceGroupFilter)(nil)).Elem()
}

func (i BudgetResourceGroupFilterArgs) ToBudgetResourceGroupFilterOutput() BudgetResourceGroupFilterOutput {
	return i.ToBudgetResourceGroupFilterOutputWithContext(context.Background())
}

func (i BudgetResourceGroupFilterArgs) ToBudgetResourceGroupFilterOutputWithContext(ctx context.Context) BudgetResourceGroupFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BudgetResourceGroupFilterOutput)
}

func (i BudgetResourceGroupFilterArgs) ToBudgetResourceGroupFilterPtrOutput() BudgetResourceGroupFilterPtrOutput {
	return i.ToBudgetResourceGroupFilterPtrOutputWithContext(context.Background())
}

func (i BudgetResourceGroupFilterArgs) ToBudgetResourceGroupFilterPtrOutputWithContext(ctx context.Context) BudgetResourceGroupFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BudgetResourceGroupFilterOutput).ToBudgetResourceGroupFilterPtrOutputWithContext(ctx)
}

// BudgetResourceGroupFilterPtrInput is an input type that accepts BudgetResourceGroupFilterArgs, BudgetResourceGroupFilterPtr and BudgetResourceGroupFilterPtrOutput values.
// You can construct a concrete instance of `BudgetResourceGroupFilterPtrInput` via:
//
//	        BudgetResourceGroupFilterArgs{...}
//
//	or:
//
//	        nil
type BudgetResourceGroupFilterPtrInput interface {
	pulumi.Input

	ToBudgetResourceGroupFilterPtrOutput() BudgetResourceGroupFilterPtrOutput
	ToBudgetResourceGroupFilterPtrOutputWithContext(context.Context) BudgetResourceGroupFilterPtrOutput
}

type budgetResourceGroupFilterPtrType BudgetResourceGroupFilterArgs

func BudgetResourceGroupFilterPtr(v *BudgetResourceGroupFilterArgs) BudgetResourceGroupFilterPtrInput {
	return (*budgetResourceGroupFilterPtrType)(v)
}

func (*budgetResourceGroupFilterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BudgetResourceGroupFilter)(nil)).Elem()
}

func (i *budgetResourceGroupFilterPtrType) ToBudgetResourceGroupFilterPtrOutput() BudgetResourceGroupFilterPtrOutput {
	return i.ToBudgetResourceGroupFilterPtrOutputWithContext(context.Background())
}

func (i *budgetResourceGroupFilterPtrType) ToBudgetResourceGroupFilterPtrOutputWithContext(ctx context.Context) BudgetResourceGroupFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BudgetResourceGroupFilterPtrOutput)
}

type BudgetResourceGroupFilterOutput struct{ *pulumi.OutputState }

func (BudgetResourceGroupFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BudgetResourceGroupFilter)(nil)).Elem()
}

func (o BudgetResourceGroupFilterOutput) ToBudgetResourceGroupFilterOutput() BudgetResourceGroupFilterOutput {
	return o
}

func (o BudgetResourceGroupFilterOutput) ToBudgetResourceGroupFilterOutputWithContext(ctx context.Context) BudgetResourceGroupFilterOutput {
	return o
}

func (o BudgetResourceGroupFilterOutput) ToBudgetResourceGroupFilterPtrOutput() BudgetResourceGroupFilterPtrOutput {
	return o.ToBudgetResourceGroupFilterPtrOutputWithContext(context.Background())
}

func (o BudgetResourceGroupFilterOutput) ToBudgetResourceGroupFilterPtrOutputWithContext(ctx context.Context) BudgetResourceGroupFilterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BudgetResourceGroupFilter) *BudgetResourceGroupFilter {
		return &v
	}).(BudgetResourceGroupFilterPtrOutput)
}

// One or more `dimension` blocks as defined below to filter the budget on.
func (o BudgetResourceGroupFilterOutput) Dimensions() BudgetResourceGroupFilterDimensionArrayOutput {
	return o.ApplyT(func(v BudgetResourceGroupFilter) []BudgetResourceGroupFilterDimension { return v.Dimensions }).(BudgetResourceGroupFilterDimensionArrayOutput)
}

// One or more `tag` blocks as defined below to filter the budget on.
func (o BudgetResourceGroupFilterOutput) Tags() BudgetResourceGroupFilterTagArrayOutput {
	return o.ApplyT(func(v BudgetResourceGroupFilter) []BudgetResourceGroupFilterTag { return v.Tags }).(BudgetResourceGroupFilterTagArrayOutput)
}

type BudgetResourceGroupFilterPtrOutput struct{ *pulumi.OutputState }

func (BudgetResourceGroupFilterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BudgetResourceGroupFilter)(nil)).Elem()
}

func (o BudgetResourceGroupFilterPtrOutput) ToBudgetResourceGroupFilterPtrOutput() BudgetResourceGroupFilterPtrOutput {
	return o
}

func (o BudgetResourceGroupFilterPtrOutput) ToBudgetResourceGroupFilterPtrOutputWithContext(ctx context.Context) BudgetResourceGroupFilterPtrOutput {
	return o
}

func (o BudgetResourceGroupFilterPtrOutput) Elem() BudgetResourceGroupFilterOutput {
	return o.ApplyT(func(v *BudgetResourceGroupFilter) BudgetResourceGroupFilter {
		if v != nil {
			return *v
		}
		var ret BudgetResourceGroupFilter
		return ret
	}).(BudgetResourceGroupFilterOutput)
}

// One or more `dimension` blocks as defined below to filter the budget on.
func (o BudgetResourceGroupFilterPtrOutput) Dimensions() BudgetResourceGroupFilterDimensionArrayOutput {
	return o.ApplyT(func(v *BudgetResourceGroupFilter) []BudgetResourceGroupFilterDimension {
		if v == nil {
			return nil
		}
		return v.Dimensions
	}).(BudgetResourceGroupFilterDimensionArrayOutput)
}

// One or more `tag` blocks as defined below to filter the budget on.
func (o BudgetResourceGroupFilterPtrOutput) Tags() BudgetResourceGroupFilterTagArrayOutput {
	return o.ApplyT(func(v *BudgetResourceGroupFilter) []BudgetResourceGroupFilterTag {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(BudgetResourceGroupFilterTagArrayOutput)
}

type BudgetResourceGroupFilterDimension struct {
	// The name of the column to use for the filter. The allowed values are `ChargeType`, `Frequency`, `InvoiceId`, `Meter`, `MeterCategory`, `MeterSubCategory`, `PartNumber`, `PricingModel`, `Product`, `ProductOrderId`, `ProductOrderName`, `PublisherType`, `ReservationId`, `ReservationName`, `ResourceGroupName`, `ResourceGuid`, `ResourceId`, `ResourceLocation`, `ResourceType`, `ServiceFamily`, `ServiceName`, `SubscriptionID`, `SubscriptionName`, `UnitOfMeasure`.
	Name string `pulumi:"name"`
	// The operator to use for comparison. The allowed values are `In`. Defaults to `In`.
	Operator *string `pulumi:"operator"`
	// Specifies a list of values for the column.
	Values []string `pulumi:"values"`
}

// BudgetResourceGroupFilterDimensionInput is an input type that accepts BudgetResourceGroupFilterDimensionArgs and BudgetResourceGroupFilterDimensionOutput values.
// You can construct a concrete instance of `BudgetResourceGroupFilterDimensionInput` via:
//
//	BudgetResourceGroupFilterDimensionArgs{...}
type BudgetResourceGroupFilterDimensionInput interface {
	pulumi.Input

	ToBudgetResourceGroupFilterDimensionOutput() BudgetResourceGroupFilterDimensionOutput
	ToBudgetResourceGroupFilterDimensionOutputWithContext(context.Context) BudgetResourceGroupFilterDimensionOutput
}

type BudgetResourceGroupFilterDimensionArgs struct {
	// The name of the column to use for the filter. The allowed values are `ChargeType`, `Frequency`, `InvoiceId`, `Meter`, `MeterCategory`, `MeterSubCategory`, `PartNumber`, `PricingModel`, `Product`, `ProductOrderId`, `ProductOrderName`, `PublisherType`, `ReservationId`, `ReservationName`, `ResourceGroupName`, `ResourceGuid`, `ResourceId`, `ResourceLocation`, `ResourceType`, `ServiceFamily`, `ServiceName`, `SubscriptionID`, `SubscriptionName`, `UnitOfMeasure`.
	Name pulumi.StringInput `pulumi:"name"`
	// The operator to use for comparison. The allowed values are `In`. Defaults to `In`.
	Operator pulumi.StringPtrInput `pulumi:"operator"`
	// Specifies a list of values for the column.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (BudgetResourceGroupFilterDimensionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BudgetResourceGroupFilterDimension)(nil)).Elem()
}

func (i BudgetResourceGroupFilterDimensionArgs) ToBudgetResourceGroupFilterDimensionOutput() BudgetResourceGroupFilterDimensionOutput {
	return i.ToBudgetResourceGroupFilterDimensionOutputWithContext(context.Background())
}

func (i BudgetResourceGroupFilterDimensionArgs) ToBudgetResourceGroupFilterDimensionOutputWithContext(ctx context.Context) BudgetResourceGroupFilterDimensionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BudgetResourceGroupFilterDimensionOutput)
}

// BudgetResourceGroupFilterDimensionArrayInput is an input type that accepts BudgetResourceGroupFilterDimensionArray and BudgetResourceGroupFilterDimensionArrayOutput values.
// You can construct a concrete instance of `BudgetResourceGroupFilterDimensionArrayInput` via:
//
//	BudgetResourceGroupFilterDimensionArray{ BudgetResourceGroupFilterDimensionArgs{...} }
type BudgetResourceGroupFilterDimensionArrayInput interface {
	pulumi.Input

	ToBudgetResourceGroupFilterDimensionArrayOutput() BudgetResourceGroupFilterDimensionArrayOutput
	ToBudgetResourceGroupFilterDimensionArrayOutputWithContext(context.Context) BudgetResourceGroupFilterDimensionArrayOutput
}

type BudgetResourceGroupFilterDimensionArray []BudgetResourceGroupFilterDimensionInput

func (BudgetResourceGroupFilterDimensionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BudgetResourceGroupFilterDimension)(nil)).Elem()
}

func (i BudgetResourceGroupFilterDimensionArray) ToBudgetResourceGroupFilterDimensionArrayOutput() BudgetResourceGroupFilterDimensionArrayOutput {
	return i.ToBudgetResourceGroupFilterDimensionArrayOutputWithContext(context.Background())
}

func (i BudgetResourceGroupFilterDimensionArray) ToBudgetResourceGroupFilterDimensionArrayOutputWithContext(ctx context.Context) BudgetResourceGroupFilterDimensionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BudgetResourceGroupFilterDimensionArrayOutput)
}

type BudgetResourceGroupFilterDimensionOutput struct{ *pulumi.OutputState }

func (BudgetResourceGroupFilterDimensionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BudgetResourceGroupFilterDimension)(nil)).Elem()
}

func (o BudgetResourceGroupFilterDimensionOutput) ToBudgetResourceGroupFilterDimensionOutput() BudgetResourceGroupFilterDimensionOutput {
	return o
}

func (o BudgetResourceGroupFilterDimensionOutput) ToBudgetResourceGroupFilterDimensionOutputWithContext(ctx context.Context) BudgetResourceGroupFilterDimensionOutput {
	return o
}

// The name of the column to use for the filter. The allowed values are `ChargeType`, `Frequency`, `InvoiceId`, `Meter`, `MeterCategory`, `MeterSubCategory`, `PartNumber`, `PricingModel`, `Product`, `ProductOrderId`, `ProductOrderName`, `PublisherType`, `ReservationId`, `ReservationName`, `ResourceGroupName`, `ResourceGuid`, `ResourceId`, `ResourceLocation`, `ResourceType`, `ServiceFamily`, `ServiceName`, `SubscriptionID`, `SubscriptionName`, `UnitOfMeasure`.
func (o BudgetResourceGroupFilterDimensionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v BudgetResourceGroupFilterDimension) string { return v.Name }).(pulumi.StringOutput)
}

// The operator to use for comparison. The allowed values are `In`. Defaults to `In`.
func (o BudgetResourceGroupFilterDimensionOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BudgetResourceGroupFilterDimension) *string { return v.Operator }).(pulumi.StringPtrOutput)
}

// Specifies a list of values for the column.
func (o BudgetResourceGroupFilterDimensionOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BudgetResourceGroupFilterDimension) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type BudgetResourceGroupFilterDimensionArrayOutput struct{ *pulumi.OutputState }

func (BudgetResourceGroupFilterDimensionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BudgetResourceGroupFilterDimension)(nil)).Elem()
}

func (o BudgetResourceGroupFilterDimensionArrayOutput) ToBudgetResourceGroupFilterDimensionArrayOutput() BudgetResourceGroupFilterDimensionArrayOutput {
	return o
}

func (o BudgetResourceGroupFilterDimensionArrayOutput) ToBudgetResourceGroupFilterDimensionArrayOutputWithContext(ctx context.Context) BudgetResourceGroupFilterDimensionArrayOutput {
	return o
}

func (o BudgetResourceGroupFilterDimensionArrayOutput) Index(i pulumi.IntInput) BudgetResourceGroupFilterDimensionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BudgetResourceGroupFilterDimension {
		return vs[0].([]BudgetResourceGroupFilterDimension)[vs[1].(int)]
	}).(BudgetResourceGroupFilterDimensionOutput)
}

type BudgetResourceGroupFilterTag struct {
	// The name of the tag to use for the filter.
	Name string `pulumi:"name"`
	// The operator to use for comparison. The allowed values are `In`. Defaults to `In`.
	Operator *string `pulumi:"operator"`
	// Specifies a list of values for the tag.
	Values []string `pulumi:"values"`
}

// BudgetResourceGroupFilterTagInput is an input type that accepts BudgetResourceGroupFilterTagArgs and BudgetResourceGroupFilterTagOutput values.
// You can construct a concrete instance of `BudgetResourceGroupFilterTagInput` via:
//
//	BudgetResourceGroupFilterTagArgs{...}
type BudgetResourceGroupFilterTagInput interface {
	pulumi.Input

	ToBudgetResourceGroupFilterTagOutput() BudgetResourceGroupFilterTagOutput
	ToBudgetResourceGroupFilterTagOutputWithContext(context.Context) BudgetResourceGroupFilterTagOutput
}

type BudgetResourceGroupFilterTagArgs struct {
	// The name of the tag to use for the filter.
	Name pulumi.StringInput `pulumi:"name"`
	// The operator to use for comparison. The allowed values are `In`. Defaults to `In`.
	Operator pulumi.StringPtrInput `pulumi:"operator"`
	// Specifies a list of values for the tag.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (BudgetResourceGroupFilterTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BudgetResourceGroupFilterTag)(nil)).Elem()
}

func (i BudgetResourceGroupFilterTagArgs) ToBudgetResourceGroupFilterTagOutput() BudgetResourceGroupFilterTagOutput {
	return i.ToBudgetResourceGroupFilterTagOutputWithContext(context.Background())
}

func (i BudgetResourceGroupFilterTagArgs) ToBudgetResourceGroupFilterTagOutputWithContext(ctx context.Context) BudgetResourceGroupFilterTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BudgetResourceGroupFilterTagOutput)
}

// BudgetResourceGroupFilterTagArrayInput is an input type that accepts BudgetResourceGroupFilterTagArray and BudgetResourceGroupFilterTagArrayOutput values.
// You can construct a concrete instance of `BudgetResourceGroupFilterTagArrayInput` via:
//
//	BudgetResourceGroupFilterTagArray{ BudgetResourceGroupFilterTagArgs{...} }
type BudgetResourceGroupFilterTagArrayInput interface {
	pulumi.Input

	ToBudgetResourceGroupFilterTagArrayOutput() BudgetResourceGroupFilterTagArrayOutput
	ToBudgetResourceGroupFilterTagArrayOutputWithContext(context.Context) BudgetResourceGroupFilterTagArrayOutput
}

type BudgetResourceGroupFilterTagArray []BudgetResourceGroupFilterTagInput

func (BudgetResourceGroupFilterTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BudgetResourceGroupFilterTag)(nil)).Elem()
}

func (i BudgetResourceGroupFilterTagArray) ToBudgetResourceGroupFilterTagArrayOutput() BudgetResourceGroupFilterTagArrayOutput {
	return i.ToBudgetResourceGroupFilterTagArrayOutputWithContext(context.Background())
}

func (i BudgetResourceGroupFilterTagArray) ToBudgetResourceGroupFilterTagArrayOutputWithContext(ctx context.Context) BudgetResourceGroupFilterTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BudgetResourceGroupFilterTagArrayOutput)
}

type BudgetResourceGroupFilterTagOutput struct{ *pulumi.OutputState }

func (BudgetResourceGroupFilterTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BudgetResourceGroupFilterTag)(nil)).Elem()
}

func (o BudgetResourceGroupFilterTagOutput) ToBudgetResourceGroupFilterTagOutput() BudgetResourceGroupFilterTagOutput {
	return o
}

func (o BudgetResourceGroupFilterTagOutput) ToBudgetResourceGroupFilterTagOutputWithContext(ctx context.Context) BudgetResourceGroupFilterTagOutput {
	return o
}

// The name of the tag to use for the filter.
func (o BudgetResourceGroupFilterTagOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v BudgetResourceGroupFilterTag) string { return v.Name }).(pulumi.StringOutput)
}

// The operator to use for comparison. The allowed values are `In`. Defaults to `In`.
func (o BudgetResourceGroupFilterTagOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BudgetResourceGroupFilterTag) *string { return v.Operator }).(pulumi.StringPtrOutput)
}

// Specifies a list of values for the tag.
func (o BudgetResourceGroupFilterTagOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BudgetResourceGroupFilterTag) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type BudgetResourceGroupFilterTagArrayOutput struct{ *pulumi.OutputState }

func (BudgetResourceGroupFilterTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BudgetResourceGroupFilterTag)(nil)).Elem()
}

func (o BudgetResourceGroupFilterTagArrayOutput) ToBudgetResourceGroupFilterTagArrayOutput() BudgetResourceGroupFilterTagArrayOutput {
	return o
}

func (o BudgetResourceGroupFilterTagArrayOutput) ToBudgetResourceGroupFilterTagArrayOutputWithContext(ctx context.Context) BudgetResourceGroupFilterTagArrayOutput {
	return o
}

func (o BudgetResourceGroupFilterTagArrayOutput) Index(i pulumi.IntInput) BudgetResourceGroupFilterTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BudgetResourceGroupFilterTag {
		return vs[0].([]BudgetResourceGroupFilterTag)[vs[1].(int)]
	}).(BudgetResourceGroupFilterTagOutput)
}

type BudgetResourceGroupNotification struct {
	// Specifies a list of email addresses to send the budget notification to when the threshold is exceeded.
	ContactEmails []string `pulumi:"contactEmails"`
	// Specifies a list of Action Group IDs to send the budget notification to when the threshold is exceeded.
	ContactGroups []string `pulumi:"contactGroups"`
	// Specifies a list of contact roles to send the budget notification to when the threshold is exceeded.
	ContactRoles []string `pulumi:"contactRoles"`
	// Should the notification be enabled? Defaults to `true`.
	//
	// > **Note:** A `notification` block cannot have all of `contactEmails`, `contactRoles`, and `contactGroups` empty. This means that at least one of the three must be specified.
	Enabled *bool `pulumi:"enabled"`
	// The comparison operator for the notification. Must be one of `EqualTo`, `GreaterThan`, or `GreaterThanOrEqualTo`.
	Operator string `pulumi:"operator"`
	// Threshold value associated with a notification. Notification is sent when the cost exceeded the threshold. It is always percent and has to be between 0 and 1000.
	Threshold int `pulumi:"threshold"`
	// The type of threshold for the notification. This determines whether the notification is triggered by forecasted costs or actual costs. The allowed values are `Actual` and `Forecasted`. Default is `Actual`.
	ThresholdType *string `pulumi:"thresholdType"`
}

// BudgetResourceGroupNotificationInput is an input type that accepts BudgetResourceGroupNotificationArgs and BudgetResourceGroupNotificationOutput values.
// You can construct a concrete instance of `BudgetResourceGroupNotificationInput` via:
//
//	BudgetResourceGroupNotificationArgs{...}
type BudgetResourceGroupNotificationInput interface {
	pulumi.Input

	ToBudgetResourceGroupNotificationOutput() BudgetResourceGroupNotificationOutput
	ToBudgetResourceGroupNotificationOutputWithContext(context.Context) BudgetResourceGroupNotificationOutput
}

type BudgetResourceGroupNotificationArgs struct {
	// Specifies a list of email addresses to send the budget notification to when the threshold is exceeded.
	ContactEmails pulumi.StringArrayInput `pulumi:"contactEmails"`
	// Specifies a list of Action Group IDs to send the budget notification to when the threshold is exceeded.
	ContactGroups pulumi.StringArrayInput `pulumi:"contactGroups"`
	// Specifies a list of contact roles to send the budget notification to when the threshold is exceeded.
	ContactRoles pulumi.StringArrayInput `pulumi:"contactRoles"`
	// Should the notification be enabled? Defaults to `true`.
	//
	// > **Note:** A `notification` block cannot have all of `contactEmails`, `contactRoles`, and `contactGroups` empty. This means that at least one of the three must be specified.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// The comparison operator for the notification. Must be one of `EqualTo`, `GreaterThan`, or `GreaterThanOrEqualTo`.
	Operator pulumi.StringInput `pulumi:"operator"`
	// Threshold value associated with a notification. Notification is sent when the cost exceeded the threshold. It is always percent and has to be between 0 and 1000.
	Threshold pulumi.IntInput `pulumi:"threshold"`
	// The type of threshold for the notification. This determines whether the notification is triggered by forecasted costs or actual costs. The allowed values are `Actual` and `Forecasted`. Default is `Actual`.
	ThresholdType pulumi.StringPtrInput `pulumi:"thresholdType"`
}

func (BudgetResourceGroupNotificationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BudgetResourceGroupNotification)(nil)).Elem()
}

func (i BudgetResourceGroupNotificationArgs) ToBudgetResourceGroupNotificationOutput() BudgetResourceGroupNotificationOutput {
	return i.ToBudgetResourceGroupNotificationOutputWithContext(context.Background())
}

func (i BudgetResourceGroupNotificationArgs) ToBudgetResourceGroupNotificationOutputWithContext(ctx context.Context) BudgetResourceGroupNotificationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BudgetResourceGroupNotificationOutput)
}

// BudgetResourceGroupNotificationArrayInput is an input type that accepts BudgetResourceGroupNotificationArray and BudgetResourceGroupNotificationArrayOutput values.
// You can construct a concrete instance of `BudgetResourceGroupNotificationArrayInput` via:
//
//	BudgetResourceGroupNotificationArray{ BudgetResourceGroupNotificationArgs{...} }
type BudgetResourceGroupNotificationArrayInput interface {
	pulumi.Input

	ToBudgetResourceGroupNotificationArrayOutput() BudgetResourceGroupNotificationArrayOutput
	ToBudgetResourceGroupNotificationArrayOutputWithContext(context.Context) BudgetResourceGroupNotificationArrayOutput
}

type BudgetResourceGroupNotificationArray []BudgetResourceGroupNotificationInput

func (BudgetResourceGroupNotificationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BudgetResourceGroupNotification)(nil)).Elem()
}

func (i BudgetResourceGroupNotificationArray) ToBudgetResourceGroupNotificationArrayOutput() BudgetResourceGroupNotificationArrayOutput {
	return i.ToBudgetResourceGroupNotificationArrayOutputWithContext(context.Background())
}

func (i BudgetResourceGroupNotificationArray) ToBudgetResourceGroupNotificationArrayOutputWithContext(ctx context.Context) BudgetResourceGroupNotificationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BudgetResourceGroupNotificationArrayOutput)
}

type BudgetResourceGroupNotificationOutput struct{ *pulumi.OutputState }

func (BudgetResourceGroupNotificationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BudgetResourceGroupNotification)(nil)).Elem()
}

func (o BudgetResourceGroupNotificationOutput) ToBudgetResourceGroupNotificationOutput() BudgetResourceGroupNotificationOutput {
	return o
}

func (o BudgetResourceGroupNotificationOutput) ToBudgetResourceGroupNotificationOutputWithContext(ctx context.Context) BudgetResourceGroupNotificationOutput {
	return o
}

// Specifies a list of email addresses to send the budget notification to when the threshold is exceeded.
func (o BudgetResourceGroupNotificationOutput) ContactEmails() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BudgetResourceGroupNotification) []string { return v.ContactEmails }).(pulumi.StringArrayOutput)
}

// Specifies a list of Action Group IDs to send the budget notification to when the threshold is exceeded.
func (o BudgetResourceGroupNotificationOutput) ContactGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BudgetResourceGroupNotification) []string { return v.ContactGroups }).(pulumi.StringArrayOutput)
}

// Specifies a list of contact roles to send the budget notification to when the threshold is exceeded.
func (o BudgetResourceGroupNotificationOutput) ContactRoles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BudgetResourceGroupNotification) []string { return v.ContactRoles }).(pulumi.StringArrayOutput)
}

// Should the notification be enabled? Defaults to `true`.
//
// > **Note:** A `notification` block cannot have all of `contactEmails`, `contactRoles`, and `contactGroups` empty. This means that at least one of the three must be specified.
func (o BudgetResourceGroupNotificationOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BudgetResourceGroupNotification) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// The comparison operator for the notification. Must be one of `EqualTo`, `GreaterThan`, or `GreaterThanOrEqualTo`.
func (o BudgetResourceGroupNotificationOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v BudgetResourceGroupNotification) string { return v.Operator }).(pulumi.StringOutput)
}

// Threshold value associated with a notification. Notification is sent when the cost exceeded the threshold. It is always percent and has to be between 0 and 1000.
func (o BudgetResourceGroupNotificationOutput) Threshold() pulumi.IntOutput {
	return o.ApplyT(func(v BudgetResourceGroupNotification) int { return v.Threshold }).(pulumi.IntOutput)
}

// The type of threshold for the notification. This determines whether the notification is triggered by forecasted costs or actual costs. The allowed values are `Actual` and `Forecasted`. Default is `Actual`.
func (o BudgetResourceGroupNotificationOutput) ThresholdType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BudgetResourceGroupNotification) *string { return v.ThresholdType }).(pulumi.StringPtrOutput)
}

type BudgetResourceGroupNotificationArrayOutput struct{ *pulumi.OutputState }

func (BudgetResourceGroupNotificationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BudgetResourceGroupNotification)(nil)).Elem()
}

func (o BudgetResourceGroupNotificationArrayOutput) ToBudgetResourceGroupNotificationArrayOutput() BudgetResourceGroupNotificationArrayOutput {
	return o
}

func (o BudgetResourceGroupNotificationArrayOutput) ToBudgetResourceGroupNotificationArrayOutputWithContext(ctx context.Context) BudgetResourceGroupNotificationArrayOutput {
	return o
}

func (o BudgetResourceGroupNotificationArrayOutput) Index(i pulumi.IntInput) BudgetResourceGroupNotificationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BudgetResourceGroupNotification {
		return vs[0].([]BudgetResourceGroupNotification)[vs[1].(int)]
	}).(BudgetResourceGroupNotificationOutput)
}

type BudgetResourceGroupTimePeriod struct {
	// The end date for the budget. If not set this will be 10 years after the start date.
	EndDate *string `pulumi:"endDate"`
	// The start date for the budget. The start date must be first of the month and should be less than the end date. Budget start date must be on or after June 1, 2017. Future start date should not be more than twelve months. Past start date should be selected within the timegrain period. Changing this forces a new Resource Group Consumption Budget to be created.
	StartDate string `pulumi:"startDate"`
}

// BudgetResourceGroupTimePeriodInput is an input type that accepts BudgetResourceGroupTimePeriodArgs and BudgetResourceGroupTimePeriodOutput values.
// You can construct a concrete instance of `BudgetResourceGroupTimePeriodInput` via:
//
//	BudgetResourceGroupTimePeriodArgs{...}
type BudgetResourceGroupTimePeriodInput interface {
	pulumi.Input

	ToBudgetResourceGroupTimePeriodOutput() BudgetResourceGroupTimePeriodOutput
	ToBudgetResourceGroupTimePeriodOutputWithContext(context.Context) BudgetResourceGroupTimePeriodOutput
}

type BudgetResourceGroupTimePeriodArgs struct {
	// The end date for the budget. If not set this will be 10 years after the start date.
	EndDate pulumi.StringPtrInput `pulumi:"endDate"`
	// The start date for the budget. The start date must be first of the month and should be less than the end date. Budget start date must be on or after June 1, 2017. Future start date should not be more than twelve months. Past start date should be selected within the timegrain period. Changing this forces a new Resource Group Consumption Budget to be created.
	StartDate pulumi.StringInput `pulumi:"startDate"`
}

func (BudgetResourceGroupTimePeriodArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BudgetResourceGroupTimePeriod)(nil)).Elem()
}

func (i BudgetResourceGroupTimePeriodArgs) ToBudgetResourceGroupTimePeriodOutput() BudgetResourceGroupTimePeriodOutput {
	return i.ToBudgetResourceGroupTimePeriodOutputWithContext(context.Background())
}

func (i BudgetResourceGroupTimePeriodArgs) ToBudgetResourceGroupTimePeriodOutputWithContext(ctx context.Context) BudgetResourceGroupTimePeriodOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BudgetResourceGroupTimePeriodOutput)
}

func (i BudgetResourceGroupTimePeriodArgs) ToBudgetResourceGroupTimePeriodPtrOutput() BudgetResourceGroupTimePeriodPtrOutput {
	return i.ToBudgetResourceGroupTimePeriodPtrOutputWithContext(context.Background())
}

func (i BudgetResourceGroupTimePeriodArgs) ToBudgetResourceGroupTimePeriodPtrOutputWithContext(ctx context.Context) BudgetResourceGroupTimePeriodPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BudgetResourceGroupTimePeriodOutput).ToBudgetResourceGroupTimePeriodPtrOutputWithContext(ctx)
}

// BudgetResourceGroupTimePeriodPtrInput is an input type that accepts BudgetResourceGroupTimePeriodArgs, BudgetResourceGroupTimePeriodPtr and BudgetResourceGroupTimePeriodPtrOutput values.
// You can construct a concrete instance of `BudgetResourceGroupTimePeriodPtrInput` via:
//
//	        BudgetResourceGroupTimePeriodArgs{...}
//
//	or:
//
//	        nil
type BudgetResourceGroupTimePeriodPtrInput interface {
	pulumi.Input

	ToBudgetResourceGroupTimePeriodPtrOutput() BudgetResourceGroupTimePeriodPtrOutput
	ToBudgetResourceGroupTimePeriodPtrOutputWithContext(context.Context) BudgetResourceGroupTimePeriodPtrOutput
}

type budgetResourceGroupTimePeriodPtrType BudgetResourceGroupTimePeriodArgs

func BudgetResourceGroupTimePeriodPtr(v *BudgetResourceGroupTimePeriodArgs) BudgetResourceGroupTimePeriodPtrInput {
	return (*budgetResourceGroupTimePeriodPtrType)(v)
}

func (*budgetResourceGroupTimePeriodPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BudgetResourceGroupTimePeriod)(nil)).Elem()
}

func (i *budgetResourceGroupTimePeriodPtrType) ToBudgetResourceGroupTimePeriodPtrOutput() BudgetResourceGroupTimePeriodPtrOutput {
	return i.ToBudgetResourceGroupTimePeriodPtrOutputWithContext(context.Background())
}

func (i *budgetResourceGroupTimePeriodPtrType) ToBudgetResourceGroupTimePeriodPtrOutputWithContext(ctx context.Context) BudgetResourceGroupTimePeriodPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BudgetResourceGroupTimePeriodPtrOutput)
}

type BudgetResourceGroupTimePeriodOutput struct{ *pulumi.OutputState }

func (BudgetResourceGroupTimePeriodOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BudgetResourceGroupTimePeriod)(nil)).Elem()
}

func (o BudgetResourceGroupTimePeriodOutput) ToBudgetResourceGroupTimePeriodOutput() BudgetResourceGroupTimePeriodOutput {
	return o
}

func (o BudgetResourceGroupTimePeriodOutput) ToBudgetResourceGroupTimePeriodOutputWithContext(ctx context.Context) BudgetResourceGroupTimePeriodOutput {
	return o
}

func (o BudgetResourceGroupTimePeriodOutput) ToBudgetResourceGroupTimePeriodPtrOutput() BudgetResourceGroupTimePeriodPtrOutput {
	return o.ToBudgetResourceGroupTimePeriodPtrOutputWithContext(context.Background())
}

func (o BudgetResourceGroupTimePeriodOutput) ToBudgetResourceGroupTimePeriodPtrOutputWithContext(ctx context.Context) BudgetResourceGroupTimePeriodPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BudgetResourceGroupTimePeriod) *BudgetResourceGroupTimePeriod {
		return &v
	}).(BudgetResourceGroupTimePeriodPtrOutput)
}

// The end date for the budget. If not set this will be 10 years after the start date.
func (o BudgetResourceGroupTimePeriodOutput) EndDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BudgetResourceGroupTimePeriod) *string { return v.EndDate }).(pulumi.StringPtrOutput)
}

// The start date for the budget. The start date must be first of the month and should be less than the end date. Budget start date must be on or after June 1, 2017. Future start date should not be more than twelve months. Past start date should be selected within the timegrain period. Changing this forces a new Resource Group Consumption Budget to be created.
func (o BudgetResourceGroupTimePeriodOutput) StartDate() pulumi.StringOutput {
	return o.ApplyT(func(v BudgetResourceGroupTimePeriod) string { return v.StartDate }).(pulumi.StringOutput)
}

type BudgetResourceGroupTimePeriodPtrOutput struct{ *pulumi.OutputState }

func (BudgetResourceGroupTimePeriodPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BudgetResourceGroupTimePeriod)(nil)).Elem()
}

func (o BudgetResourceGroupTimePeriodPtrOutput) ToBudgetResourceGroupTimePeriodPtrOutput() BudgetResourceGroupTimePeriodPtrOutput {
	return o
}

func (o BudgetResourceGroupTimePeriodPtrOutput) ToBudgetResourceGroupTimePeriodPtrOutputWithContext(ctx context.Context) BudgetResourceGroupTimePeriodPtrOutput {
	return o
}

func (o BudgetResourceGroupTimePeriodPtrOutput) Elem() BudgetResourceGroupTimePeriodOutput {
	return o.ApplyT(func(v *BudgetResourceGroupTimePeriod) BudgetResourceGroupTimePeriod {
		if v != nil {
			return *v
		}
		var ret BudgetResourceGroupTimePeriod
		return ret
	}).(BudgetResourceGroupTimePeriodOutput)
}

// The end date for the budget. If not set this will be 10 years after the start date.
func (o BudgetResourceGroupTimePeriodPtrOutput) EndDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BudgetResourceGroupTimePeriod) *string {
		if v == nil {
			return nil
		}
		return v.EndDate
	}).(pulumi.StringPtrOutput)
}

// The start date for the budget. The start date must be first of the month and should be less than the end date. Budget start date must be on or after June 1, 2017. Future start date should not be more than twelve months. Past start date should be selected within the timegrain period. Changing this forces a new Resource Group Consumption Budget to be created.
func (o BudgetResourceGroupTimePeriodPtrOutput) StartDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BudgetResourceGroupTimePeriod) *string {
		if v == nil {
			return nil
		}
		return &v.StartDate
	}).(pulumi.StringPtrOutput)
}

type BudgetSubscriptionFilter struct {
	// One or more `dimension` blocks as defined below to filter the budget on.
	Dimensions []BudgetSubscriptionFilterDimension `pulumi:"dimensions"`
	// One or more `tag` blocks as defined below to filter the budget on.
	Tags []BudgetSubscriptionFilterTag `pulumi:"tags"`
}

// BudgetSubscriptionFilterInput is an input type that accepts BudgetSubscriptionFilterArgs and BudgetSubscriptionFilterOutput values.
// You can construct a concrete instance of `BudgetSubscriptionFilterInput` via:
//
//	BudgetSubscriptionFilterArgs{...}
type BudgetSubscriptionFilterInput interface {
	pulumi.Input

	ToBudgetSubscriptionFilterOutput() BudgetSubscriptionFilterOutput
	ToBudgetSubscriptionFilterOutputWithContext(context.Context) BudgetSubscriptionFilterOutput
}

type BudgetSubscriptionFilterArgs struct {
	// One or more `dimension` blocks as defined below to filter the budget on.
	Dimensions BudgetSubscriptionFilterDimensionArrayInput `pulumi:"dimensions"`
	// One or more `tag` blocks as defined below to filter the budget on.
	Tags BudgetSubscriptionFilterTagArrayInput `pulumi:"tags"`
}

func (BudgetSubscriptionFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BudgetSubscriptionFilter)(nil)).Elem()
}

func (i BudgetSubscriptionFilterArgs) ToBudgetSubscriptionFilterOutput() BudgetSubscriptionFilterOutput {
	return i.ToBudgetSubscriptionFilterOutputWithContext(context.Background())
}

func (i BudgetSubscriptionFilterArgs) ToBudgetSubscriptionFilterOutputWithContext(ctx context.Context) BudgetSubscriptionFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BudgetSubscriptionFilterOutput)
}

func (i BudgetSubscriptionFilterArgs) ToBudgetSubscriptionFilterPtrOutput() BudgetSubscriptionFilterPtrOutput {
	return i.ToBudgetSubscriptionFilterPtrOutputWithContext(context.Background())
}

func (i BudgetSubscriptionFilterArgs) ToBudgetSubscriptionFilterPtrOutputWithContext(ctx context.Context) BudgetSubscriptionFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BudgetSubscriptionFilterOutput).ToBudgetSubscriptionFilterPtrOutputWithContext(ctx)
}

// BudgetSubscriptionFilterPtrInput is an input type that accepts BudgetSubscriptionFilterArgs, BudgetSubscriptionFilterPtr and BudgetSubscriptionFilterPtrOutput values.
// You can construct a concrete instance of `BudgetSubscriptionFilterPtrInput` via:
//
//	        BudgetSubscriptionFilterArgs{...}
//
//	or:
//
//	        nil
type BudgetSubscriptionFilterPtrInput interface {
	pulumi.Input

	ToBudgetSubscriptionFilterPtrOutput() BudgetSubscriptionFilterPtrOutput
	ToBudgetSubscriptionFilterPtrOutputWithContext(context.Context) BudgetSubscriptionFilterPtrOutput
}

type budgetSubscriptionFilterPtrType BudgetSubscriptionFilterArgs

func BudgetSubscriptionFilterPtr(v *BudgetSubscriptionFilterArgs) BudgetSubscriptionFilterPtrInput {
	return (*budgetSubscriptionFilterPtrType)(v)
}

func (*budgetSubscriptionFilterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BudgetSubscriptionFilter)(nil)).Elem()
}

func (i *budgetSubscriptionFilterPtrType) ToBudgetSubscriptionFilterPtrOutput() BudgetSubscriptionFilterPtrOutput {
	return i.ToBudgetSubscriptionFilterPtrOutputWithContext(context.Background())
}

func (i *budgetSubscriptionFilterPtrType) ToBudgetSubscriptionFilterPtrOutputWithContext(ctx context.Context) BudgetSubscriptionFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BudgetSubscriptionFilterPtrOutput)
}

type BudgetSubscriptionFilterOutput struct{ *pulumi.OutputState }

func (BudgetSubscriptionFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BudgetSubscriptionFilter)(nil)).Elem()
}

func (o BudgetSubscriptionFilterOutput) ToBudgetSubscriptionFilterOutput() BudgetSubscriptionFilterOutput {
	return o
}

func (o BudgetSubscriptionFilterOutput) ToBudgetSubscriptionFilterOutputWithContext(ctx context.Context) BudgetSubscriptionFilterOutput {
	return o
}

func (o BudgetSubscriptionFilterOutput) ToBudgetSubscriptionFilterPtrOutput() BudgetSubscriptionFilterPtrOutput {
	return o.ToBudgetSubscriptionFilterPtrOutputWithContext(context.Background())
}

func (o BudgetSubscriptionFilterOutput) ToBudgetSubscriptionFilterPtrOutputWithContext(ctx context.Context) BudgetSubscriptionFilterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BudgetSubscriptionFilter) *BudgetSubscriptionFilter {
		return &v
	}).(BudgetSubscriptionFilterPtrOutput)
}

// One or more `dimension` blocks as defined below to filter the budget on.
func (o BudgetSubscriptionFilterOutput) Dimensions() BudgetSubscriptionFilterDimensionArrayOutput {
	return o.ApplyT(func(v BudgetSubscriptionFilter) []BudgetSubscriptionFilterDimension { return v.Dimensions }).(BudgetSubscriptionFilterDimensionArrayOutput)
}

// One or more `tag` blocks as defined below to filter the budget on.
func (o BudgetSubscriptionFilterOutput) Tags() BudgetSubscriptionFilterTagArrayOutput {
	return o.ApplyT(func(v BudgetSubscriptionFilter) []BudgetSubscriptionFilterTag { return v.Tags }).(BudgetSubscriptionFilterTagArrayOutput)
}

type BudgetSubscriptionFilterPtrOutput struct{ *pulumi.OutputState }

func (BudgetSubscriptionFilterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BudgetSubscriptionFilter)(nil)).Elem()
}

func (o BudgetSubscriptionFilterPtrOutput) ToBudgetSubscriptionFilterPtrOutput() BudgetSubscriptionFilterPtrOutput {
	return o
}

func (o BudgetSubscriptionFilterPtrOutput) ToBudgetSubscriptionFilterPtrOutputWithContext(ctx context.Context) BudgetSubscriptionFilterPtrOutput {
	return o
}

func (o BudgetSubscriptionFilterPtrOutput) Elem() BudgetSubscriptionFilterOutput {
	return o.ApplyT(func(v *BudgetSubscriptionFilter) BudgetSubscriptionFilter {
		if v != nil {
			return *v
		}
		var ret BudgetSubscriptionFilter
		return ret
	}).(BudgetSubscriptionFilterOutput)
}

// One or more `dimension` blocks as defined below to filter the budget on.
func (o BudgetSubscriptionFilterPtrOutput) Dimensions() BudgetSubscriptionFilterDimensionArrayOutput {
	return o.ApplyT(func(v *BudgetSubscriptionFilter) []BudgetSubscriptionFilterDimension {
		if v == nil {
			return nil
		}
		return v.Dimensions
	}).(BudgetSubscriptionFilterDimensionArrayOutput)
}

// One or more `tag` blocks as defined below to filter the budget on.
func (o BudgetSubscriptionFilterPtrOutput) Tags() BudgetSubscriptionFilterTagArrayOutput {
	return o.ApplyT(func(v *BudgetSubscriptionFilter) []BudgetSubscriptionFilterTag {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(BudgetSubscriptionFilterTagArrayOutput)
}

type BudgetSubscriptionFilterDimension struct {
	// The name of the column to use for the filter. The allowed values are `ChargeType`, `Frequency`, `InvoiceId`, `Meter`, `MeterCategory`, `MeterSubCategory`, `PartNumber`, `PricingModel`, `Product`, `ProductOrderId`, `ProductOrderName`, `PublisherType`, `ReservationId`, `ReservationName`, `ResourceGroupName`, `ResourceGuid`, `ResourceId`, `ResourceLocation`, `ResourceType`, `ServiceFamily`, `ServiceName`, `SubscriptionID`, `SubscriptionName`, `UnitOfMeasure`.
	Name string `pulumi:"name"`
	// The operator to use for comparison. The allowed values are `In`. Defaults to `In`.
	Operator *string `pulumi:"operator"`
	// Specifies a list of values for the column.
	Values []string `pulumi:"values"`
}

// BudgetSubscriptionFilterDimensionInput is an input type that accepts BudgetSubscriptionFilterDimensionArgs and BudgetSubscriptionFilterDimensionOutput values.
// You can construct a concrete instance of `BudgetSubscriptionFilterDimensionInput` via:
//
//	BudgetSubscriptionFilterDimensionArgs{...}
type BudgetSubscriptionFilterDimensionInput interface {
	pulumi.Input

	ToBudgetSubscriptionFilterDimensionOutput() BudgetSubscriptionFilterDimensionOutput
	ToBudgetSubscriptionFilterDimensionOutputWithContext(context.Context) BudgetSubscriptionFilterDimensionOutput
}

type BudgetSubscriptionFilterDimensionArgs struct {
	// The name of the column to use for the filter. The allowed values are `ChargeType`, `Frequency`, `InvoiceId`, `Meter`, `MeterCategory`, `MeterSubCategory`, `PartNumber`, `PricingModel`, `Product`, `ProductOrderId`, `ProductOrderName`, `PublisherType`, `ReservationId`, `ReservationName`, `ResourceGroupName`, `ResourceGuid`, `ResourceId`, `ResourceLocation`, `ResourceType`, `ServiceFamily`, `ServiceName`, `SubscriptionID`, `SubscriptionName`, `UnitOfMeasure`.
	Name pulumi.StringInput `pulumi:"name"`
	// The operator to use for comparison. The allowed values are `In`. Defaults to `In`.
	Operator pulumi.StringPtrInput `pulumi:"operator"`
	// Specifies a list of values for the column.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (BudgetSubscriptionFilterDimensionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BudgetSubscriptionFilterDimension)(nil)).Elem()
}

func (i BudgetSubscriptionFilterDimensionArgs) ToBudgetSubscriptionFilterDimensionOutput() BudgetSubscriptionFilterDimensionOutput {
	return i.ToBudgetSubscriptionFilterDimensionOutputWithContext(context.Background())
}

func (i BudgetSubscriptionFilterDimensionArgs) ToBudgetSubscriptionFilterDimensionOutputWithContext(ctx context.Context) BudgetSubscriptionFilterDimensionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BudgetSubscriptionFilterDimensionOutput)
}

// BudgetSubscriptionFilterDimensionArrayInput is an input type that accepts BudgetSubscriptionFilterDimensionArray and BudgetSubscriptionFilterDimensionArrayOutput values.
// You can construct a concrete instance of `BudgetSubscriptionFilterDimensionArrayInput` via:
//
//	BudgetSubscriptionFilterDimensionArray{ BudgetSubscriptionFilterDimensionArgs{...} }
type BudgetSubscriptionFilterDimensionArrayInput interface {
	pulumi.Input

	ToBudgetSubscriptionFilterDimensionArrayOutput() BudgetSubscriptionFilterDimensionArrayOutput
	ToBudgetSubscriptionFilterDimensionArrayOutputWithContext(context.Context) BudgetSubscriptionFilterDimensionArrayOutput
}

type BudgetSubscriptionFilterDimensionArray []BudgetSubscriptionFilterDimensionInput

func (BudgetSubscriptionFilterDimensionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BudgetSubscriptionFilterDimension)(nil)).Elem()
}

func (i BudgetSubscriptionFilterDimensionArray) ToBudgetSubscriptionFilterDimensionArrayOutput() BudgetSubscriptionFilterDimensionArrayOutput {
	return i.ToBudgetSubscriptionFilterDimensionArrayOutputWithContext(context.Background())
}

func (i BudgetSubscriptionFilterDimensionArray) ToBudgetSubscriptionFilterDimensionArrayOutputWithContext(ctx context.Context) BudgetSubscriptionFilterDimensionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BudgetSubscriptionFilterDimensionArrayOutput)
}

type BudgetSubscriptionFilterDimensionOutput struct{ *pulumi.OutputState }

func (BudgetSubscriptionFilterDimensionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BudgetSubscriptionFilterDimension)(nil)).Elem()
}

func (o BudgetSubscriptionFilterDimensionOutput) ToBudgetSubscriptionFilterDimensionOutput() BudgetSubscriptionFilterDimensionOutput {
	return o
}

func (o BudgetSubscriptionFilterDimensionOutput) ToBudgetSubscriptionFilterDimensionOutputWithContext(ctx context.Context) BudgetSubscriptionFilterDimensionOutput {
	return o
}

// The name of the column to use for the filter. The allowed values are `ChargeType`, `Frequency`, `InvoiceId`, `Meter`, `MeterCategory`, `MeterSubCategory`, `PartNumber`, `PricingModel`, `Product`, `ProductOrderId`, `ProductOrderName`, `PublisherType`, `ReservationId`, `ReservationName`, `ResourceGroupName`, `ResourceGuid`, `ResourceId`, `ResourceLocation`, `ResourceType`, `ServiceFamily`, `ServiceName`, `SubscriptionID`, `SubscriptionName`, `UnitOfMeasure`.
func (o BudgetSubscriptionFilterDimensionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v BudgetSubscriptionFilterDimension) string { return v.Name }).(pulumi.StringOutput)
}

// The operator to use for comparison. The allowed values are `In`. Defaults to `In`.
func (o BudgetSubscriptionFilterDimensionOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BudgetSubscriptionFilterDimension) *string { return v.Operator }).(pulumi.StringPtrOutput)
}

// Specifies a list of values for the column.
func (o BudgetSubscriptionFilterDimensionOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BudgetSubscriptionFilterDimension) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type BudgetSubscriptionFilterDimensionArrayOutput struct{ *pulumi.OutputState }

func (BudgetSubscriptionFilterDimensionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BudgetSubscriptionFilterDimension)(nil)).Elem()
}

func (o BudgetSubscriptionFilterDimensionArrayOutput) ToBudgetSubscriptionFilterDimensionArrayOutput() BudgetSubscriptionFilterDimensionArrayOutput {
	return o
}

func (o BudgetSubscriptionFilterDimensionArrayOutput) ToBudgetSubscriptionFilterDimensionArrayOutputWithContext(ctx context.Context) BudgetSubscriptionFilterDimensionArrayOutput {
	return o
}

func (o BudgetSubscriptionFilterDimensionArrayOutput) Index(i pulumi.IntInput) BudgetSubscriptionFilterDimensionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BudgetSubscriptionFilterDimension {
		return vs[0].([]BudgetSubscriptionFilterDimension)[vs[1].(int)]
	}).(BudgetSubscriptionFilterDimensionOutput)
}

type BudgetSubscriptionFilterTag struct {
	// The name of the tag to use for the filter.
	Name string `pulumi:"name"`
	// The operator to use for comparison. The allowed values are `In`. Defaults to `In`.
	Operator *string `pulumi:"operator"`
	// Specifies a list of values for the tag.
	Values []string `pulumi:"values"`
}

// BudgetSubscriptionFilterTagInput is an input type that accepts BudgetSubscriptionFilterTagArgs and BudgetSubscriptionFilterTagOutput values.
// You can construct a concrete instance of `BudgetSubscriptionFilterTagInput` via:
//
//	BudgetSubscriptionFilterTagArgs{...}
type BudgetSubscriptionFilterTagInput interface {
	pulumi.Input

	ToBudgetSubscriptionFilterTagOutput() BudgetSubscriptionFilterTagOutput
	ToBudgetSubscriptionFilterTagOutputWithContext(context.Context) BudgetSubscriptionFilterTagOutput
}

type BudgetSubscriptionFilterTagArgs struct {
	// The name of the tag to use for the filter.
	Name pulumi.StringInput `pulumi:"name"`
	// The operator to use for comparison. The allowed values are `In`. Defaults to `In`.
	Operator pulumi.StringPtrInput `pulumi:"operator"`
	// Specifies a list of values for the tag.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (BudgetSubscriptionFilterTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BudgetSubscriptionFilterTag)(nil)).Elem()
}

func (i BudgetSubscriptionFilterTagArgs) ToBudgetSubscriptionFilterTagOutput() BudgetSubscriptionFilterTagOutput {
	return i.ToBudgetSubscriptionFilterTagOutputWithContext(context.Background())
}

func (i BudgetSubscriptionFilterTagArgs) ToBudgetSubscriptionFilterTagOutputWithContext(ctx context.Context) BudgetSubscriptionFilterTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BudgetSubscriptionFilterTagOutput)
}

// BudgetSubscriptionFilterTagArrayInput is an input type that accepts BudgetSubscriptionFilterTagArray and BudgetSubscriptionFilterTagArrayOutput values.
// You can construct a concrete instance of `BudgetSubscriptionFilterTagArrayInput` via:
//
//	BudgetSubscriptionFilterTagArray{ BudgetSubscriptionFilterTagArgs{...} }
type BudgetSubscriptionFilterTagArrayInput interface {
	pulumi.Input

	ToBudgetSubscriptionFilterTagArrayOutput() BudgetSubscriptionFilterTagArrayOutput
	ToBudgetSubscriptionFilterTagArrayOutputWithContext(context.Context) BudgetSubscriptionFilterTagArrayOutput
}

type BudgetSubscriptionFilterTagArray []BudgetSubscriptionFilterTagInput

func (BudgetSubscriptionFilterTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BudgetSubscriptionFilterTag)(nil)).Elem()
}

func (i BudgetSubscriptionFilterTagArray) ToBudgetSubscriptionFilterTagArrayOutput() BudgetSubscriptionFilterTagArrayOutput {
	return i.ToBudgetSubscriptionFilterTagArrayOutputWithContext(context.Background())
}

func (i BudgetSubscriptionFilterTagArray) ToBudgetSubscriptionFilterTagArrayOutputWithContext(ctx context.Context) BudgetSubscriptionFilterTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BudgetSubscriptionFilterTagArrayOutput)
}

type BudgetSubscriptionFilterTagOutput struct{ *pulumi.OutputState }

func (BudgetSubscriptionFilterTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BudgetSubscriptionFilterTag)(nil)).Elem()
}

func (o BudgetSubscriptionFilterTagOutput) ToBudgetSubscriptionFilterTagOutput() BudgetSubscriptionFilterTagOutput {
	return o
}

func (o BudgetSubscriptionFilterTagOutput) ToBudgetSubscriptionFilterTagOutputWithContext(ctx context.Context) BudgetSubscriptionFilterTagOutput {
	return o
}

// The name of the tag to use for the filter.
func (o BudgetSubscriptionFilterTagOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v BudgetSubscriptionFilterTag) string { return v.Name }).(pulumi.StringOutput)
}

// The operator to use for comparison. The allowed values are `In`. Defaults to `In`.
func (o BudgetSubscriptionFilterTagOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BudgetSubscriptionFilterTag) *string { return v.Operator }).(pulumi.StringPtrOutput)
}

// Specifies a list of values for the tag.
func (o BudgetSubscriptionFilterTagOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BudgetSubscriptionFilterTag) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type BudgetSubscriptionFilterTagArrayOutput struct{ *pulumi.OutputState }

func (BudgetSubscriptionFilterTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BudgetSubscriptionFilterTag)(nil)).Elem()
}

func (o BudgetSubscriptionFilterTagArrayOutput) ToBudgetSubscriptionFilterTagArrayOutput() BudgetSubscriptionFilterTagArrayOutput {
	return o
}

func (o BudgetSubscriptionFilterTagArrayOutput) ToBudgetSubscriptionFilterTagArrayOutputWithContext(ctx context.Context) BudgetSubscriptionFilterTagArrayOutput {
	return o
}

func (o BudgetSubscriptionFilterTagArrayOutput) Index(i pulumi.IntInput) BudgetSubscriptionFilterTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BudgetSubscriptionFilterTag {
		return vs[0].([]BudgetSubscriptionFilterTag)[vs[1].(int)]
	}).(BudgetSubscriptionFilterTagOutput)
}

type BudgetSubscriptionNotification struct {
	// Specifies a list of email addresses to send the budget notification to when the threshold is exceeded.
	ContactEmails []string `pulumi:"contactEmails"`
	// Specifies a list of Action Group IDs to send the budget notification to when the threshold is exceeded.
	ContactGroups []string `pulumi:"contactGroups"`
	// Specifies a list of contact roles to send the budget notification to when the threshold is exceeded.
	ContactRoles []string `pulumi:"contactRoles"`
	// Should the notification be enabled? Defaults to `true`.
	//
	// > **Note:** A `notification` block cannot have all of `contactEmails`, `contactRoles`, and `contactGroups` empty. This means that at least one of the three must be specified.
	Enabled *bool `pulumi:"enabled"`
	// The comparison operator for the notification. Must be one of `EqualTo`, `GreaterThan`, or `GreaterThanOrEqualTo`.
	Operator string `pulumi:"operator"`
	// Threshold value associated with a notification. Notification is sent when the cost exceeded the threshold. It is always percent and has to be between 0 and 1000.
	Threshold int `pulumi:"threshold"`
	// The type of threshold for the notification. This determines whether the notification is triggered by forecasted costs or actual costs. The allowed values are `Actual` and `Forecasted`. Default is `Actual`.
	ThresholdType *string `pulumi:"thresholdType"`
}

// BudgetSubscriptionNotificationInput is an input type that accepts BudgetSubscriptionNotificationArgs and BudgetSubscriptionNotificationOutput values.
// You can construct a concrete instance of `BudgetSubscriptionNotificationInput` via:
//
//	BudgetSubscriptionNotificationArgs{...}
type BudgetSubscriptionNotificationInput interface {
	pulumi.Input

	ToBudgetSubscriptionNotificationOutput() BudgetSubscriptionNotificationOutput
	ToBudgetSubscriptionNotificationOutputWithContext(context.Context) BudgetSubscriptionNotificationOutput
}

type BudgetSubscriptionNotificationArgs struct {
	// Specifies a list of email addresses to send the budget notification to when the threshold is exceeded.
	ContactEmails pulumi.StringArrayInput `pulumi:"contactEmails"`
	// Specifies a list of Action Group IDs to send the budget notification to when the threshold is exceeded.
	ContactGroups pulumi.StringArrayInput `pulumi:"contactGroups"`
	// Specifies a list of contact roles to send the budget notification to when the threshold is exceeded.
	ContactRoles pulumi.StringArrayInput `pulumi:"contactRoles"`
	// Should the notification be enabled? Defaults to `true`.
	//
	// > **Note:** A `notification` block cannot have all of `contactEmails`, `contactRoles`, and `contactGroups` empty. This means that at least one of the three must be specified.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// The comparison operator for the notification. Must be one of `EqualTo`, `GreaterThan`, or `GreaterThanOrEqualTo`.
	Operator pulumi.StringInput `pulumi:"operator"`
	// Threshold value associated with a notification. Notification is sent when the cost exceeded the threshold. It is always percent and has to be between 0 and 1000.
	Threshold pulumi.IntInput `pulumi:"threshold"`
	// The type of threshold for the notification. This determines whether the notification is triggered by forecasted costs or actual costs. The allowed values are `Actual` and `Forecasted`. Default is `Actual`.
	ThresholdType pulumi.StringPtrInput `pulumi:"thresholdType"`
}

func (BudgetSubscriptionNotificationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BudgetSubscriptionNotification)(nil)).Elem()
}

func (i BudgetSubscriptionNotificationArgs) ToBudgetSubscriptionNotificationOutput() BudgetSubscriptionNotificationOutput {
	return i.ToBudgetSubscriptionNotificationOutputWithContext(context.Background())
}

func (i BudgetSubscriptionNotificationArgs) ToBudgetSubscriptionNotificationOutputWithContext(ctx context.Context) BudgetSubscriptionNotificationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BudgetSubscriptionNotificationOutput)
}

// BudgetSubscriptionNotificationArrayInput is an input type that accepts BudgetSubscriptionNotificationArray and BudgetSubscriptionNotificationArrayOutput values.
// You can construct a concrete instance of `BudgetSubscriptionNotificationArrayInput` via:
//
//	BudgetSubscriptionNotificationArray{ BudgetSubscriptionNotificationArgs{...} }
type BudgetSubscriptionNotificationArrayInput interface {
	pulumi.Input

	ToBudgetSubscriptionNotificationArrayOutput() BudgetSubscriptionNotificationArrayOutput
	ToBudgetSubscriptionNotificationArrayOutputWithContext(context.Context) BudgetSubscriptionNotificationArrayOutput
}

type BudgetSubscriptionNotificationArray []BudgetSubscriptionNotificationInput

func (BudgetSubscriptionNotificationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BudgetSubscriptionNotification)(nil)).Elem()
}

func (i BudgetSubscriptionNotificationArray) ToBudgetSubscriptionNotificationArrayOutput() BudgetSubscriptionNotificationArrayOutput {
	return i.ToBudgetSubscriptionNotificationArrayOutputWithContext(context.Background())
}

func (i BudgetSubscriptionNotificationArray) ToBudgetSubscriptionNotificationArrayOutputWithContext(ctx context.Context) BudgetSubscriptionNotificationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BudgetSubscriptionNotificationArrayOutput)
}

type BudgetSubscriptionNotificationOutput struct{ *pulumi.OutputState }

func (BudgetSubscriptionNotificationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BudgetSubscriptionNotification)(nil)).Elem()
}

func (o BudgetSubscriptionNotificationOutput) ToBudgetSubscriptionNotificationOutput() BudgetSubscriptionNotificationOutput {
	return o
}

func (o BudgetSubscriptionNotificationOutput) ToBudgetSubscriptionNotificationOutputWithContext(ctx context.Context) BudgetSubscriptionNotificationOutput {
	return o
}

// Specifies a list of email addresses to send the budget notification to when the threshold is exceeded.
func (o BudgetSubscriptionNotificationOutput) ContactEmails() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BudgetSubscriptionNotification) []string { return v.ContactEmails }).(pulumi.StringArrayOutput)
}

// Specifies a list of Action Group IDs to send the budget notification to when the threshold is exceeded.
func (o BudgetSubscriptionNotificationOutput) ContactGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BudgetSubscriptionNotification) []string { return v.ContactGroups }).(pulumi.StringArrayOutput)
}

// Specifies a list of contact roles to send the budget notification to when the threshold is exceeded.
func (o BudgetSubscriptionNotificationOutput) ContactRoles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BudgetSubscriptionNotification) []string { return v.ContactRoles }).(pulumi.StringArrayOutput)
}

// Should the notification be enabled? Defaults to `true`.
//
// > **Note:** A `notification` block cannot have all of `contactEmails`, `contactRoles`, and `contactGroups` empty. This means that at least one of the three must be specified.
func (o BudgetSubscriptionNotificationOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BudgetSubscriptionNotification) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// The comparison operator for the notification. Must be one of `EqualTo`, `GreaterThan`, or `GreaterThanOrEqualTo`.
func (o BudgetSubscriptionNotificationOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v BudgetSubscriptionNotification) string { return v.Operator }).(pulumi.StringOutput)
}

// Threshold value associated with a notification. Notification is sent when the cost exceeded the threshold. It is always percent and has to be between 0 and 1000.
func (o BudgetSubscriptionNotificationOutput) Threshold() pulumi.IntOutput {
	return o.ApplyT(func(v BudgetSubscriptionNotification) int { return v.Threshold }).(pulumi.IntOutput)
}

// The type of threshold for the notification. This determines whether the notification is triggered by forecasted costs or actual costs. The allowed values are `Actual` and `Forecasted`. Default is `Actual`.
func (o BudgetSubscriptionNotificationOutput) ThresholdType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BudgetSubscriptionNotification) *string { return v.ThresholdType }).(pulumi.StringPtrOutput)
}

type BudgetSubscriptionNotificationArrayOutput struct{ *pulumi.OutputState }

func (BudgetSubscriptionNotificationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BudgetSubscriptionNotification)(nil)).Elem()
}

func (o BudgetSubscriptionNotificationArrayOutput) ToBudgetSubscriptionNotificationArrayOutput() BudgetSubscriptionNotificationArrayOutput {
	return o
}

func (o BudgetSubscriptionNotificationArrayOutput) ToBudgetSubscriptionNotificationArrayOutputWithContext(ctx context.Context) BudgetSubscriptionNotificationArrayOutput {
	return o
}

func (o BudgetSubscriptionNotificationArrayOutput) Index(i pulumi.IntInput) BudgetSubscriptionNotificationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BudgetSubscriptionNotification {
		return vs[0].([]BudgetSubscriptionNotification)[vs[1].(int)]
	}).(BudgetSubscriptionNotificationOutput)
}

type BudgetSubscriptionTimePeriod struct {
	// The end date for the budget. If not set this will be 10 years after the start date.
	EndDate *string `pulumi:"endDate"`
	// The start date for the budget. The start date must be first of the month and should be less than the end date. Budget start date must be on or after June 1, 2017. Future start date should not be more than twelve months. Past start date should be selected within the timegrain period. Changing this forces a new Subscription Consumption Budget to be created.
	StartDate string `pulumi:"startDate"`
}

// BudgetSubscriptionTimePeriodInput is an input type that accepts BudgetSubscriptionTimePeriodArgs and BudgetSubscriptionTimePeriodOutput values.
// You can construct a concrete instance of `BudgetSubscriptionTimePeriodInput` via:
//
//	BudgetSubscriptionTimePeriodArgs{...}
type BudgetSubscriptionTimePeriodInput interface {
	pulumi.Input

	ToBudgetSubscriptionTimePeriodOutput() BudgetSubscriptionTimePeriodOutput
	ToBudgetSubscriptionTimePeriodOutputWithContext(context.Context) BudgetSubscriptionTimePeriodOutput
}

type BudgetSubscriptionTimePeriodArgs struct {
	// The end date for the budget. If not set this will be 10 years after the start date.
	EndDate pulumi.StringPtrInput `pulumi:"endDate"`
	// The start date for the budget. The start date must be first of the month and should be less than the end date. Budget start date must be on or after June 1, 2017. Future start date should not be more than twelve months. Past start date should be selected within the timegrain period. Changing this forces a new Subscription Consumption Budget to be created.
	StartDate pulumi.StringInput `pulumi:"startDate"`
}

func (BudgetSubscriptionTimePeriodArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BudgetSubscriptionTimePeriod)(nil)).Elem()
}

func (i BudgetSubscriptionTimePeriodArgs) ToBudgetSubscriptionTimePeriodOutput() BudgetSubscriptionTimePeriodOutput {
	return i.ToBudgetSubscriptionTimePeriodOutputWithContext(context.Background())
}

func (i BudgetSubscriptionTimePeriodArgs) ToBudgetSubscriptionTimePeriodOutputWithContext(ctx context.Context) BudgetSubscriptionTimePeriodOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BudgetSubscriptionTimePeriodOutput)
}

func (i BudgetSubscriptionTimePeriodArgs) ToBudgetSubscriptionTimePeriodPtrOutput() BudgetSubscriptionTimePeriodPtrOutput {
	return i.ToBudgetSubscriptionTimePeriodPtrOutputWithContext(context.Background())
}

func (i BudgetSubscriptionTimePeriodArgs) ToBudgetSubscriptionTimePeriodPtrOutputWithContext(ctx context.Context) BudgetSubscriptionTimePeriodPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BudgetSubscriptionTimePeriodOutput).ToBudgetSubscriptionTimePeriodPtrOutputWithContext(ctx)
}

// BudgetSubscriptionTimePeriodPtrInput is an input type that accepts BudgetSubscriptionTimePeriodArgs, BudgetSubscriptionTimePeriodPtr and BudgetSubscriptionTimePeriodPtrOutput values.
// You can construct a concrete instance of `BudgetSubscriptionTimePeriodPtrInput` via:
//
//	        BudgetSubscriptionTimePeriodArgs{...}
//
//	or:
//
//	        nil
type BudgetSubscriptionTimePeriodPtrInput interface {
	pulumi.Input

	ToBudgetSubscriptionTimePeriodPtrOutput() BudgetSubscriptionTimePeriodPtrOutput
	ToBudgetSubscriptionTimePeriodPtrOutputWithContext(context.Context) BudgetSubscriptionTimePeriodPtrOutput
}

type budgetSubscriptionTimePeriodPtrType BudgetSubscriptionTimePeriodArgs

func BudgetSubscriptionTimePeriodPtr(v *BudgetSubscriptionTimePeriodArgs) BudgetSubscriptionTimePeriodPtrInput {
	return (*budgetSubscriptionTimePeriodPtrType)(v)
}

func (*budgetSubscriptionTimePeriodPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BudgetSubscriptionTimePeriod)(nil)).Elem()
}

func (i *budgetSubscriptionTimePeriodPtrType) ToBudgetSubscriptionTimePeriodPtrOutput() BudgetSubscriptionTimePeriodPtrOutput {
	return i.ToBudgetSubscriptionTimePeriodPtrOutputWithContext(context.Background())
}

func (i *budgetSubscriptionTimePeriodPtrType) ToBudgetSubscriptionTimePeriodPtrOutputWithContext(ctx context.Context) BudgetSubscriptionTimePeriodPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BudgetSubscriptionTimePeriodPtrOutput)
}

type BudgetSubscriptionTimePeriodOutput struct{ *pulumi.OutputState }

func (BudgetSubscriptionTimePeriodOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BudgetSubscriptionTimePeriod)(nil)).Elem()
}

func (o BudgetSubscriptionTimePeriodOutput) ToBudgetSubscriptionTimePeriodOutput() BudgetSubscriptionTimePeriodOutput {
	return o
}

func (o BudgetSubscriptionTimePeriodOutput) ToBudgetSubscriptionTimePeriodOutputWithContext(ctx context.Context) BudgetSubscriptionTimePeriodOutput {
	return o
}

func (o BudgetSubscriptionTimePeriodOutput) ToBudgetSubscriptionTimePeriodPtrOutput() BudgetSubscriptionTimePeriodPtrOutput {
	return o.ToBudgetSubscriptionTimePeriodPtrOutputWithContext(context.Background())
}

func (o BudgetSubscriptionTimePeriodOutput) ToBudgetSubscriptionTimePeriodPtrOutputWithContext(ctx context.Context) BudgetSubscriptionTimePeriodPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BudgetSubscriptionTimePeriod) *BudgetSubscriptionTimePeriod {
		return &v
	}).(BudgetSubscriptionTimePeriodPtrOutput)
}

// The end date for the budget. If not set this will be 10 years after the start date.
func (o BudgetSubscriptionTimePeriodOutput) EndDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BudgetSubscriptionTimePeriod) *string { return v.EndDate }).(pulumi.StringPtrOutput)
}

// The start date for the budget. The start date must be first of the month and should be less than the end date. Budget start date must be on or after June 1, 2017. Future start date should not be more than twelve months. Past start date should be selected within the timegrain period. Changing this forces a new Subscription Consumption Budget to be created.
func (o BudgetSubscriptionTimePeriodOutput) StartDate() pulumi.StringOutput {
	return o.ApplyT(func(v BudgetSubscriptionTimePeriod) string { return v.StartDate }).(pulumi.StringOutput)
}

type BudgetSubscriptionTimePeriodPtrOutput struct{ *pulumi.OutputState }

func (BudgetSubscriptionTimePeriodPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BudgetSubscriptionTimePeriod)(nil)).Elem()
}

func (o BudgetSubscriptionTimePeriodPtrOutput) ToBudgetSubscriptionTimePeriodPtrOutput() BudgetSubscriptionTimePeriodPtrOutput {
	return o
}

func (o BudgetSubscriptionTimePeriodPtrOutput) ToBudgetSubscriptionTimePeriodPtrOutputWithContext(ctx context.Context) BudgetSubscriptionTimePeriodPtrOutput {
	return o
}

func (o BudgetSubscriptionTimePeriodPtrOutput) Elem() BudgetSubscriptionTimePeriodOutput {
	return o.ApplyT(func(v *BudgetSubscriptionTimePeriod) BudgetSubscriptionTimePeriod {
		if v != nil {
			return *v
		}
		var ret BudgetSubscriptionTimePeriod
		return ret
	}).(BudgetSubscriptionTimePeriodOutput)
}

// The end date for the budget. If not set this will be 10 years after the start date.
func (o BudgetSubscriptionTimePeriodPtrOutput) EndDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BudgetSubscriptionTimePeriod) *string {
		if v == nil {
			return nil
		}
		return v.EndDate
	}).(pulumi.StringPtrOutput)
}

// The start date for the budget. The start date must be first of the month and should be less than the end date. Budget start date must be on or after June 1, 2017. Future start date should not be more than twelve months. Past start date should be selected within the timegrain period. Changing this forces a new Subscription Consumption Budget to be created.
func (o BudgetSubscriptionTimePeriodPtrOutput) StartDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BudgetSubscriptionTimePeriod) *string {
		if v == nil {
			return nil
		}
		return &v.StartDate
	}).(pulumi.StringPtrOutput)
}

type GetBudgetResourceGroupFilter struct {
	// A `dimension` block as defined below.
	Dimensions []GetBudgetResourceGroupFilterDimension `pulumi:"dimensions"`
	// A `not` block as defined below.
	Nots []GetBudgetResourceGroupFilterNot `pulumi:"nots"`
	// A `tag` block as defined below.
	Tags []GetBudgetResourceGroupFilterTag `pulumi:"tags"`
}

// GetBudgetResourceGroupFilterInput is an input type that accepts GetBudgetResourceGroupFilterArgs and GetBudgetResourceGroupFilterOutput values.
// You can construct a concrete instance of `GetBudgetResourceGroupFilterInput` via:
//
//	GetBudgetResourceGroupFilterArgs{...}
type GetBudgetResourceGroupFilterInput interface {
	pulumi.Input

	ToGetBudgetResourceGroupFilterOutput() GetBudgetResourceGroupFilterOutput
	ToGetBudgetResourceGroupFilterOutputWithContext(context.Context) GetBudgetResourceGroupFilterOutput
}

type GetBudgetResourceGroupFilterArgs struct {
	// A `dimension` block as defined below.
	Dimensions GetBudgetResourceGroupFilterDimensionArrayInput `pulumi:"dimensions"`
	// A `not` block as defined below.
	Nots GetBudgetResourceGroupFilterNotArrayInput `pulumi:"nots"`
	// A `tag` block as defined below.
	Tags GetBudgetResourceGroupFilterTagArrayInput `pulumi:"tags"`
}

func (GetBudgetResourceGroupFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBudgetResourceGroupFilter)(nil)).Elem()
}

func (i GetBudgetResourceGroupFilterArgs) ToGetBudgetResourceGroupFilterOutput() GetBudgetResourceGroupFilterOutput {
	return i.ToGetBudgetResourceGroupFilterOutputWithContext(context.Background())
}

func (i GetBudgetResourceGroupFilterArgs) ToGetBudgetResourceGroupFilterOutputWithContext(ctx context.Context) GetBudgetResourceGroupFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBudgetResourceGroupFilterOutput)
}

// GetBudgetResourceGroupFilterArrayInput is an input type that accepts GetBudgetResourceGroupFilterArray and GetBudgetResourceGroupFilterArrayOutput values.
// You can construct a concrete instance of `GetBudgetResourceGroupFilterArrayInput` via:
//
//	GetBudgetResourceGroupFilterArray{ GetBudgetResourceGroupFilterArgs{...} }
type GetBudgetResourceGroupFilterArrayInput interface {
	pulumi.Input

	ToGetBudgetResourceGroupFilterArrayOutput() GetBudgetResourceGroupFilterArrayOutput
	ToGetBudgetResourceGroupFilterArrayOutputWithContext(context.Context) GetBudgetResourceGroupFilterArrayOutput
}

type GetBudgetResourceGroupFilterArray []GetBudgetResourceGroupFilterInput

func (GetBudgetResourceGroupFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBudgetResourceGroupFilter)(nil)).Elem()
}

func (i GetBudgetResourceGroupFilterArray) ToGetBudgetResourceGroupFilterArrayOutput() GetBudgetResourceGroupFilterArrayOutput {
	return i.ToGetBudgetResourceGroupFilterArrayOutputWithContext(context.Background())
}

func (i GetBudgetResourceGroupFilterArray) ToGetBudgetResourceGroupFilterArrayOutputWithContext(ctx context.Context) GetBudgetResourceGroupFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBudgetResourceGroupFilterArrayOutput)
}

type GetBudgetResourceGroupFilterOutput struct{ *pulumi.OutputState }

func (GetBudgetResourceGroupFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBudgetResourceGroupFilter)(nil)).Elem()
}

func (o GetBudgetResourceGroupFilterOutput) ToGetBudgetResourceGroupFilterOutput() GetBudgetResourceGroupFilterOutput {
	return o
}

func (o GetBudgetResourceGroupFilterOutput) ToGetBudgetResourceGroupFilterOutputWithContext(ctx context.Context) GetBudgetResourceGroupFilterOutput {
	return o
}

// A `dimension` block as defined below.
func (o GetBudgetResourceGroupFilterOutput) Dimensions() GetBudgetResourceGroupFilterDimensionArrayOutput {
	return o.ApplyT(func(v GetBudgetResourceGroupFilter) []GetBudgetResourceGroupFilterDimension { return v.Dimensions }).(GetBudgetResourceGroupFilterDimensionArrayOutput)
}

// A `not` block as defined below.
func (o GetBudgetResourceGroupFilterOutput) Nots() GetBudgetResourceGroupFilterNotArrayOutput {
	return o.ApplyT(func(v GetBudgetResourceGroupFilter) []GetBudgetResourceGroupFilterNot { return v.Nots }).(GetBudgetResourceGroupFilterNotArrayOutput)
}

// A `tag` block as defined below.
func (o GetBudgetResourceGroupFilterOutput) Tags() GetBudgetResourceGroupFilterTagArrayOutput {
	return o.ApplyT(func(v GetBudgetResourceGroupFilter) []GetBudgetResourceGroupFilterTag { return v.Tags }).(GetBudgetResourceGroupFilterTagArrayOutput)
}

type GetBudgetResourceGroupFilterArrayOutput struct{ *pulumi.OutputState }

func (GetBudgetResourceGroupFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBudgetResourceGroupFilter)(nil)).Elem()
}

func (o GetBudgetResourceGroupFilterArrayOutput) ToGetBudgetResourceGroupFilterArrayOutput() GetBudgetResourceGroupFilterArrayOutput {
	return o
}

func (o GetBudgetResourceGroupFilterArrayOutput) ToGetBudgetResourceGroupFilterArrayOutputWithContext(ctx context.Context) GetBudgetResourceGroupFilterArrayOutput {
	return o
}

func (o GetBudgetResourceGroupFilterArrayOutput) Index(i pulumi.IntInput) GetBudgetResourceGroupFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBudgetResourceGroupFilter {
		return vs[0].([]GetBudgetResourceGroupFilter)[vs[1].(int)]
	}).(GetBudgetResourceGroupFilterOutput)
}

type GetBudgetResourceGroupFilterDimension struct {
	// The name of this Consumption Budget.
	Name string `pulumi:"name"`
	// The operator used for comparison.
	Operator string `pulumi:"operator"`
	// A list of values for the tag.
	Values []string `pulumi:"values"`
}

// GetBudgetResourceGroupFilterDimensionInput is an input type that accepts GetBudgetResourceGroupFilterDimensionArgs and GetBudgetResourceGroupFilterDimensionOutput values.
// You can construct a concrete instance of `GetBudgetResourceGroupFilterDimensionInput` via:
//
//	GetBudgetResourceGroupFilterDimensionArgs{...}
type GetBudgetResourceGroupFilterDimensionInput interface {
	pulumi.Input

	ToGetBudgetResourceGroupFilterDimensionOutput() GetBudgetResourceGroupFilterDimensionOutput
	ToGetBudgetResourceGroupFilterDimensionOutputWithContext(context.Context) GetBudgetResourceGroupFilterDimensionOutput
}

type GetBudgetResourceGroupFilterDimensionArgs struct {
	// The name of this Consumption Budget.
	Name pulumi.StringInput `pulumi:"name"`
	// The operator used for comparison.
	Operator pulumi.StringInput `pulumi:"operator"`
	// A list of values for the tag.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetBudgetResourceGroupFilterDimensionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBudgetResourceGroupFilterDimension)(nil)).Elem()
}

func (i GetBudgetResourceGroupFilterDimensionArgs) ToGetBudgetResourceGroupFilterDimensionOutput() GetBudgetResourceGroupFilterDimensionOutput {
	return i.ToGetBudgetResourceGroupFilterDimensionOutputWithContext(context.Background())
}

func (i GetBudgetResourceGroupFilterDimensionArgs) ToGetBudgetResourceGroupFilterDimensionOutputWithContext(ctx context.Context) GetBudgetResourceGroupFilterDimensionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBudgetResourceGroupFilterDimensionOutput)
}

// GetBudgetResourceGroupFilterDimensionArrayInput is an input type that accepts GetBudgetResourceGroupFilterDimensionArray and GetBudgetResourceGroupFilterDimensionArrayOutput values.
// You can construct a concrete instance of `GetBudgetResourceGroupFilterDimensionArrayInput` via:
//
//	GetBudgetResourceGroupFilterDimensionArray{ GetBudgetResourceGroupFilterDimensionArgs{...} }
type GetBudgetResourceGroupFilterDimensionArrayInput interface {
	pulumi.Input

	ToGetBudgetResourceGroupFilterDimensionArrayOutput() GetBudgetResourceGroupFilterDimensionArrayOutput
	ToGetBudgetResourceGroupFilterDimensionArrayOutputWithContext(context.Context) GetBudgetResourceGroupFilterDimensionArrayOutput
}

type GetBudgetResourceGroupFilterDimensionArray []GetBudgetResourceGroupFilterDimensionInput

func (GetBudgetResourceGroupFilterDimensionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBudgetResourceGroupFilterDimension)(nil)).Elem()
}

func (i GetBudgetResourceGroupFilterDimensionArray) ToGetBudgetResourceGroupFilterDimensionArrayOutput() GetBudgetResourceGroupFilterDimensionArrayOutput {
	return i.ToGetBudgetResourceGroupFilterDimensionArrayOutputWithContext(context.Background())
}

func (i GetBudgetResourceGroupFilterDimensionArray) ToGetBudgetResourceGroupFilterDimensionArrayOutputWithContext(ctx context.Context) GetBudgetResourceGroupFilterDimensionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBudgetResourceGroupFilterDimensionArrayOutput)
}

type GetBudgetResourceGroupFilterDimensionOutput struct{ *pulumi.OutputState }

func (GetBudgetResourceGroupFilterDimensionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBudgetResourceGroupFilterDimension)(nil)).Elem()
}

func (o GetBudgetResourceGroupFilterDimensionOutput) ToGetBudgetResourceGroupFilterDimensionOutput() GetBudgetResourceGroupFilterDimensionOutput {
	return o
}

func (o GetBudgetResourceGroupFilterDimensionOutput) ToGetBudgetResourceGroupFilterDimensionOutputWithContext(ctx context.Context) GetBudgetResourceGroupFilterDimensionOutput {
	return o
}

// The name of this Consumption Budget.
func (o GetBudgetResourceGroupFilterDimensionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetBudgetResourceGroupFilterDimension) string { return v.Name }).(pulumi.StringOutput)
}

// The operator used for comparison.
func (o GetBudgetResourceGroupFilterDimensionOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v GetBudgetResourceGroupFilterDimension) string { return v.Operator }).(pulumi.StringOutput)
}

// A list of values for the tag.
func (o GetBudgetResourceGroupFilterDimensionOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetBudgetResourceGroupFilterDimension) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetBudgetResourceGroupFilterDimensionArrayOutput struct{ *pulumi.OutputState }

func (GetBudgetResourceGroupFilterDimensionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBudgetResourceGroupFilterDimension)(nil)).Elem()
}

func (o GetBudgetResourceGroupFilterDimensionArrayOutput) ToGetBudgetResourceGroupFilterDimensionArrayOutput() GetBudgetResourceGroupFilterDimensionArrayOutput {
	return o
}

func (o GetBudgetResourceGroupFilterDimensionArrayOutput) ToGetBudgetResourceGroupFilterDimensionArrayOutputWithContext(ctx context.Context) GetBudgetResourceGroupFilterDimensionArrayOutput {
	return o
}

func (o GetBudgetResourceGroupFilterDimensionArrayOutput) Index(i pulumi.IntInput) GetBudgetResourceGroupFilterDimensionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBudgetResourceGroupFilterDimension {
		return vs[0].([]GetBudgetResourceGroupFilterDimension)[vs[1].(int)]
	}).(GetBudgetResourceGroupFilterDimensionOutput)
}

type GetBudgetResourceGroupFilterNot struct {
	// A `dimension` block as defined below.
	Dimensions []GetBudgetResourceGroupFilterNotDimension `pulumi:"dimensions"`
	// A `tag` block as defined below.
	Tags []GetBudgetResourceGroupFilterNotTag `pulumi:"tags"`
}

// GetBudgetResourceGroupFilterNotInput is an input type that accepts GetBudgetResourceGroupFilterNotArgs and GetBudgetResourceGroupFilterNotOutput values.
// You can construct a concrete instance of `GetBudgetResourceGroupFilterNotInput` via:
//
//	GetBudgetResourceGroupFilterNotArgs{...}
type GetBudgetResourceGroupFilterNotInput interface {
	pulumi.Input

	ToGetBudgetResourceGroupFilterNotOutput() GetBudgetResourceGroupFilterNotOutput
	ToGetBudgetResourceGroupFilterNotOutputWithContext(context.Context) GetBudgetResourceGroupFilterNotOutput
}

type GetBudgetResourceGroupFilterNotArgs struct {
	// A `dimension` block as defined below.
	Dimensions GetBudgetResourceGroupFilterNotDimensionArrayInput `pulumi:"dimensions"`
	// A `tag` block as defined below.
	Tags GetBudgetResourceGroupFilterNotTagArrayInput `pulumi:"tags"`
}

func (GetBudgetResourceGroupFilterNotArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBudgetResourceGroupFilterNot)(nil)).Elem()
}

func (i GetBudgetResourceGroupFilterNotArgs) ToGetBudgetResourceGroupFilterNotOutput() GetBudgetResourceGroupFilterNotOutput {
	return i.ToGetBudgetResourceGroupFilterNotOutputWithContext(context.Background())
}

func (i GetBudgetResourceGroupFilterNotArgs) ToGetBudgetResourceGroupFilterNotOutputWithContext(ctx context.Context) GetBudgetResourceGroupFilterNotOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBudgetResourceGroupFilterNotOutput)
}

// GetBudgetResourceGroupFilterNotArrayInput is an input type that accepts GetBudgetResourceGroupFilterNotArray and GetBudgetResourceGroupFilterNotArrayOutput values.
// You can construct a concrete instance of `GetBudgetResourceGroupFilterNotArrayInput` via:
//
//	GetBudgetResourceGroupFilterNotArray{ GetBudgetResourceGroupFilterNotArgs{...} }
type GetBudgetResourceGroupFilterNotArrayInput interface {
	pulumi.Input

	ToGetBudgetResourceGroupFilterNotArrayOutput() GetBudgetResourceGroupFilterNotArrayOutput
	ToGetBudgetResourceGroupFilterNotArrayOutputWithContext(context.Context) GetBudgetResourceGroupFilterNotArrayOutput
}

type GetBudgetResourceGroupFilterNotArray []GetBudgetResourceGroupFilterNotInput

func (GetBudgetResourceGroupFilterNotArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBudgetResourceGroupFilterNot)(nil)).Elem()
}

func (i GetBudgetResourceGroupFilterNotArray) ToGetBudgetResourceGroupFilterNotArrayOutput() GetBudgetResourceGroupFilterNotArrayOutput {
	return i.ToGetBudgetResourceGroupFilterNotArrayOutputWithContext(context.Background())
}

func (i GetBudgetResourceGroupFilterNotArray) ToGetBudgetResourceGroupFilterNotArrayOutputWithContext(ctx context.Context) GetBudgetResourceGroupFilterNotArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBudgetResourceGroupFilterNotArrayOutput)
}

type GetBudgetResourceGroupFilterNotOutput struct{ *pulumi.OutputState }

func (GetBudgetResourceGroupFilterNotOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBudgetResourceGroupFilterNot)(nil)).Elem()
}

func (o GetBudgetResourceGroupFilterNotOutput) ToGetBudgetResourceGroupFilterNotOutput() GetBudgetResourceGroupFilterNotOutput {
	return o
}

func (o GetBudgetResourceGroupFilterNotOutput) ToGetBudgetResourceGroupFilterNotOutputWithContext(ctx context.Context) GetBudgetResourceGroupFilterNotOutput {
	return o
}

// A `dimension` block as defined below.
func (o GetBudgetResourceGroupFilterNotOutput) Dimensions() GetBudgetResourceGroupFilterNotDimensionArrayOutput {
	return o.ApplyT(func(v GetBudgetResourceGroupFilterNot) []GetBudgetResourceGroupFilterNotDimension {
		return v.Dimensions
	}).(GetBudgetResourceGroupFilterNotDimensionArrayOutput)
}

// A `tag` block as defined below.
func (o GetBudgetResourceGroupFilterNotOutput) Tags() GetBudgetResourceGroupFilterNotTagArrayOutput {
	return o.ApplyT(func(v GetBudgetResourceGroupFilterNot) []GetBudgetResourceGroupFilterNotTag { return v.Tags }).(GetBudgetResourceGroupFilterNotTagArrayOutput)
}

type GetBudgetResourceGroupFilterNotArrayOutput struct{ *pulumi.OutputState }

func (GetBudgetResourceGroupFilterNotArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBudgetResourceGroupFilterNot)(nil)).Elem()
}

func (o GetBudgetResourceGroupFilterNotArrayOutput) ToGetBudgetResourceGroupFilterNotArrayOutput() GetBudgetResourceGroupFilterNotArrayOutput {
	return o
}

func (o GetBudgetResourceGroupFilterNotArrayOutput) ToGetBudgetResourceGroupFilterNotArrayOutputWithContext(ctx context.Context) GetBudgetResourceGroupFilterNotArrayOutput {
	return o
}

func (o GetBudgetResourceGroupFilterNotArrayOutput) Index(i pulumi.IntInput) GetBudgetResourceGroupFilterNotOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBudgetResourceGroupFilterNot {
		return vs[0].([]GetBudgetResourceGroupFilterNot)[vs[1].(int)]
	}).(GetBudgetResourceGroupFilterNotOutput)
}

type GetBudgetResourceGroupFilterNotDimension struct {
	// The name of this Consumption Budget.
	Name string `pulumi:"name"`
	// The operator used for comparison.
	Operator string `pulumi:"operator"`
	// A list of values for the tag.
	Values []string `pulumi:"values"`
}

// GetBudgetResourceGroupFilterNotDimensionInput is an input type that accepts GetBudgetResourceGroupFilterNotDimensionArgs and GetBudgetResourceGroupFilterNotDimensionOutput values.
// You can construct a concrete instance of `GetBudgetResourceGroupFilterNotDimensionInput` via:
//
//	GetBudgetResourceGroupFilterNotDimensionArgs{...}
type GetBudgetResourceGroupFilterNotDimensionInput interface {
	pulumi.Input

	ToGetBudgetResourceGroupFilterNotDimensionOutput() GetBudgetResourceGroupFilterNotDimensionOutput
	ToGetBudgetResourceGroupFilterNotDimensionOutputWithContext(context.Context) GetBudgetResourceGroupFilterNotDimensionOutput
}

type GetBudgetResourceGroupFilterNotDimensionArgs struct {
	// The name of this Consumption Budget.
	Name pulumi.StringInput `pulumi:"name"`
	// The operator used for comparison.
	Operator pulumi.StringInput `pulumi:"operator"`
	// A list of values for the tag.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetBudgetResourceGroupFilterNotDimensionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBudgetResourceGroupFilterNotDimension)(nil)).Elem()
}

func (i GetBudgetResourceGroupFilterNotDimensionArgs) ToGetBudgetResourceGroupFilterNotDimensionOutput() GetBudgetResourceGroupFilterNotDimensionOutput {
	return i.ToGetBudgetResourceGroupFilterNotDimensionOutputWithContext(context.Background())
}

func (i GetBudgetResourceGroupFilterNotDimensionArgs) ToGetBudgetResourceGroupFilterNotDimensionOutputWithContext(ctx context.Context) GetBudgetResourceGroupFilterNotDimensionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBudgetResourceGroupFilterNotDimensionOutput)
}

// GetBudgetResourceGroupFilterNotDimensionArrayInput is an input type that accepts GetBudgetResourceGroupFilterNotDimensionArray and GetBudgetResourceGroupFilterNotDimensionArrayOutput values.
// You can construct a concrete instance of `GetBudgetResourceGroupFilterNotDimensionArrayInput` via:
//
//	GetBudgetResourceGroupFilterNotDimensionArray{ GetBudgetResourceGroupFilterNotDimensionArgs{...} }
type GetBudgetResourceGroupFilterNotDimensionArrayInput interface {
	pulumi.Input

	ToGetBudgetResourceGroupFilterNotDimensionArrayOutput() GetBudgetResourceGroupFilterNotDimensionArrayOutput
	ToGetBudgetResourceGroupFilterNotDimensionArrayOutputWithContext(context.Context) GetBudgetResourceGroupFilterNotDimensionArrayOutput
}

type GetBudgetResourceGroupFilterNotDimensionArray []GetBudgetResourceGroupFilterNotDimensionInput

func (GetBudgetResourceGroupFilterNotDimensionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBudgetResourceGroupFilterNotDimension)(nil)).Elem()
}

func (i GetBudgetResourceGroupFilterNotDimensionArray) ToGetBudgetResourceGroupFilterNotDimensionArrayOutput() GetBudgetResourceGroupFilterNotDimensionArrayOutput {
	return i.ToGetBudgetResourceGroupFilterNotDimensionArrayOutputWithContext(context.Background())
}

func (i GetBudgetResourceGroupFilterNotDimensionArray) ToGetBudgetResourceGroupFilterNotDimensionArrayOutputWithContext(ctx context.Context) GetBudgetResourceGroupFilterNotDimensionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBudgetResourceGroupFilterNotDimensionArrayOutput)
}

type GetBudgetResourceGroupFilterNotDimensionOutput struct{ *pulumi.OutputState }

func (GetBudgetResourceGroupFilterNotDimensionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBudgetResourceGroupFilterNotDimension)(nil)).Elem()
}

func (o GetBudgetResourceGroupFilterNotDimensionOutput) ToGetBudgetResourceGroupFilterNotDimensionOutput() GetBudgetResourceGroupFilterNotDimensionOutput {
	return o
}

func (o GetBudgetResourceGroupFilterNotDimensionOutput) ToGetBudgetResourceGroupFilterNotDimensionOutputWithContext(ctx context.Context) GetBudgetResourceGroupFilterNotDimensionOutput {
	return o
}

// The name of this Consumption Budget.
func (o GetBudgetResourceGroupFilterNotDimensionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetBudgetResourceGroupFilterNotDimension) string { return v.Name }).(pulumi.StringOutput)
}

// The operator used for comparison.
func (o GetBudgetResourceGroupFilterNotDimensionOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v GetBudgetResourceGroupFilterNotDimension) string { return v.Operator }).(pulumi.StringOutput)
}

// A list of values for the tag.
func (o GetBudgetResourceGroupFilterNotDimensionOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetBudgetResourceGroupFilterNotDimension) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetBudgetResourceGroupFilterNotDimensionArrayOutput struct{ *pulumi.OutputState }

func (GetBudgetResourceGroupFilterNotDimensionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBudgetResourceGroupFilterNotDimension)(nil)).Elem()
}

func (o GetBudgetResourceGroupFilterNotDimensionArrayOutput) ToGetBudgetResourceGroupFilterNotDimensionArrayOutput() GetBudgetResourceGroupFilterNotDimensionArrayOutput {
	return o
}

func (o GetBudgetResourceGroupFilterNotDimensionArrayOutput) ToGetBudgetResourceGroupFilterNotDimensionArrayOutputWithContext(ctx context.Context) GetBudgetResourceGroupFilterNotDimensionArrayOutput {
	return o
}

func (o GetBudgetResourceGroupFilterNotDimensionArrayOutput) Index(i pulumi.IntInput) GetBudgetResourceGroupFilterNotDimensionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBudgetResourceGroupFilterNotDimension {
		return vs[0].([]GetBudgetResourceGroupFilterNotDimension)[vs[1].(int)]
	}).(GetBudgetResourceGroupFilterNotDimensionOutput)
}

type GetBudgetResourceGroupFilterNotTag struct {
	// The name of this Consumption Budget.
	Name string `pulumi:"name"`
	// The operator used for comparison.
	Operator string `pulumi:"operator"`
	// A list of values for the tag.
	Values []string `pulumi:"values"`
}

// GetBudgetResourceGroupFilterNotTagInput is an input type that accepts GetBudgetResourceGroupFilterNotTagArgs and GetBudgetResourceGroupFilterNotTagOutput values.
// You can construct a concrete instance of `GetBudgetResourceGroupFilterNotTagInput` via:
//
//	GetBudgetResourceGroupFilterNotTagArgs{...}
type GetBudgetResourceGroupFilterNotTagInput interface {
	pulumi.Input

	ToGetBudgetResourceGroupFilterNotTagOutput() GetBudgetResourceGroupFilterNotTagOutput
	ToGetBudgetResourceGroupFilterNotTagOutputWithContext(context.Context) GetBudgetResourceGroupFilterNotTagOutput
}

type GetBudgetResourceGroupFilterNotTagArgs struct {
	// The name of this Consumption Budget.
	Name pulumi.StringInput `pulumi:"name"`
	// The operator used for comparison.
	Operator pulumi.StringInput `pulumi:"operator"`
	// A list of values for the tag.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetBudgetResourceGroupFilterNotTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBudgetResourceGroupFilterNotTag)(nil)).Elem()
}

func (i GetBudgetResourceGroupFilterNotTagArgs) ToGetBudgetResourceGroupFilterNotTagOutput() GetBudgetResourceGroupFilterNotTagOutput {
	return i.ToGetBudgetResourceGroupFilterNotTagOutputWithContext(context.Background())
}

func (i GetBudgetResourceGroupFilterNotTagArgs) ToGetBudgetResourceGroupFilterNotTagOutputWithContext(ctx context.Context) GetBudgetResourceGroupFilterNotTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBudgetResourceGroupFilterNotTagOutput)
}

// GetBudgetResourceGroupFilterNotTagArrayInput is an input type that accepts GetBudgetResourceGroupFilterNotTagArray and GetBudgetResourceGroupFilterNotTagArrayOutput values.
// You can construct a concrete instance of `GetBudgetResourceGroupFilterNotTagArrayInput` via:
//
//	GetBudgetResourceGroupFilterNotTagArray{ GetBudgetResourceGroupFilterNotTagArgs{...} }
type GetBudgetResourceGroupFilterNotTagArrayInput interface {
	pulumi.Input

	ToGetBudgetResourceGroupFilterNotTagArrayOutput() GetBudgetResourceGroupFilterNotTagArrayOutput
	ToGetBudgetResourceGroupFilterNotTagArrayOutputWithContext(context.Context) GetBudgetResourceGroupFilterNotTagArrayOutput
}

type GetBudgetResourceGroupFilterNotTagArray []GetBudgetResourceGroupFilterNotTagInput

func (GetBudgetResourceGroupFilterNotTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBudgetResourceGroupFilterNotTag)(nil)).Elem()
}

func (i GetBudgetResourceGroupFilterNotTagArray) ToGetBudgetResourceGroupFilterNotTagArrayOutput() GetBudgetResourceGroupFilterNotTagArrayOutput {
	return i.ToGetBudgetResourceGroupFilterNotTagArrayOutputWithContext(context.Background())
}

func (i GetBudgetResourceGroupFilterNotTagArray) ToGetBudgetResourceGroupFilterNotTagArrayOutputWithContext(ctx context.Context) GetBudgetResourceGroupFilterNotTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBudgetResourceGroupFilterNotTagArrayOutput)
}

type GetBudgetResourceGroupFilterNotTagOutput struct{ *pulumi.OutputState }

func (GetBudgetResourceGroupFilterNotTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBudgetResourceGroupFilterNotTag)(nil)).Elem()
}

func (o GetBudgetResourceGroupFilterNotTagOutput) ToGetBudgetResourceGroupFilterNotTagOutput() GetBudgetResourceGroupFilterNotTagOutput {
	return o
}

func (o GetBudgetResourceGroupFilterNotTagOutput) ToGetBudgetResourceGroupFilterNotTagOutputWithContext(ctx context.Context) GetBudgetResourceGroupFilterNotTagOutput {
	return o
}

// The name of this Consumption Budget.
func (o GetBudgetResourceGroupFilterNotTagOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetBudgetResourceGroupFilterNotTag) string { return v.Name }).(pulumi.StringOutput)
}

// The operator used for comparison.
func (o GetBudgetResourceGroupFilterNotTagOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v GetBudgetResourceGroupFilterNotTag) string { return v.Operator }).(pulumi.StringOutput)
}

// A list of values for the tag.
func (o GetBudgetResourceGroupFilterNotTagOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetBudgetResourceGroupFilterNotTag) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetBudgetResourceGroupFilterNotTagArrayOutput struct{ *pulumi.OutputState }

func (GetBudgetResourceGroupFilterNotTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBudgetResourceGroupFilterNotTag)(nil)).Elem()
}

func (o GetBudgetResourceGroupFilterNotTagArrayOutput) ToGetBudgetResourceGroupFilterNotTagArrayOutput() GetBudgetResourceGroupFilterNotTagArrayOutput {
	return o
}

func (o GetBudgetResourceGroupFilterNotTagArrayOutput) ToGetBudgetResourceGroupFilterNotTagArrayOutputWithContext(ctx context.Context) GetBudgetResourceGroupFilterNotTagArrayOutput {
	return o
}

func (o GetBudgetResourceGroupFilterNotTagArrayOutput) Index(i pulumi.IntInput) GetBudgetResourceGroupFilterNotTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBudgetResourceGroupFilterNotTag {
		return vs[0].([]GetBudgetResourceGroupFilterNotTag)[vs[1].(int)]
	}).(GetBudgetResourceGroupFilterNotTagOutput)
}

type GetBudgetResourceGroupFilterTag struct {
	// The name of this Consumption Budget.
	Name string `pulumi:"name"`
	// The operator used for comparison.
	Operator string `pulumi:"operator"`
	// A list of values for the tag.
	Values []string `pulumi:"values"`
}

// GetBudgetResourceGroupFilterTagInput is an input type that accepts GetBudgetResourceGroupFilterTagArgs and GetBudgetResourceGroupFilterTagOutput values.
// You can construct a concrete instance of `GetBudgetResourceGroupFilterTagInput` via:
//
//	GetBudgetResourceGroupFilterTagArgs{...}
type GetBudgetResourceGroupFilterTagInput interface {
	pulumi.Input

	ToGetBudgetResourceGroupFilterTagOutput() GetBudgetResourceGroupFilterTagOutput
	ToGetBudgetResourceGroupFilterTagOutputWithContext(context.Context) GetBudgetResourceGroupFilterTagOutput
}

type GetBudgetResourceGroupFilterTagArgs struct {
	// The name of this Consumption Budget.
	Name pulumi.StringInput `pulumi:"name"`
	// The operator used for comparison.
	Operator pulumi.StringInput `pulumi:"operator"`
	// A list of values for the tag.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetBudgetResourceGroupFilterTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBudgetResourceGroupFilterTag)(nil)).Elem()
}

func (i GetBudgetResourceGroupFilterTagArgs) ToGetBudgetResourceGroupFilterTagOutput() GetBudgetResourceGroupFilterTagOutput {
	return i.ToGetBudgetResourceGroupFilterTagOutputWithContext(context.Background())
}

func (i GetBudgetResourceGroupFilterTagArgs) ToGetBudgetResourceGroupFilterTagOutputWithContext(ctx context.Context) GetBudgetResourceGroupFilterTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBudgetResourceGroupFilterTagOutput)
}

// GetBudgetResourceGroupFilterTagArrayInput is an input type that accepts GetBudgetResourceGroupFilterTagArray and GetBudgetResourceGroupFilterTagArrayOutput values.
// You can construct a concrete instance of `GetBudgetResourceGroupFilterTagArrayInput` via:
//
//	GetBudgetResourceGroupFilterTagArray{ GetBudgetResourceGroupFilterTagArgs{...} }
type GetBudgetResourceGroupFilterTagArrayInput interface {
	pulumi.Input

	ToGetBudgetResourceGroupFilterTagArrayOutput() GetBudgetResourceGroupFilterTagArrayOutput
	ToGetBudgetResourceGroupFilterTagArrayOutputWithContext(context.Context) GetBudgetResourceGroupFilterTagArrayOutput
}

type GetBudgetResourceGroupFilterTagArray []GetBudgetResourceGroupFilterTagInput

func (GetBudgetResourceGroupFilterTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBudgetResourceGroupFilterTag)(nil)).Elem()
}

func (i GetBudgetResourceGroupFilterTagArray) ToGetBudgetResourceGroupFilterTagArrayOutput() GetBudgetResourceGroupFilterTagArrayOutput {
	return i.ToGetBudgetResourceGroupFilterTagArrayOutputWithContext(context.Background())
}

func (i GetBudgetResourceGroupFilterTagArray) ToGetBudgetResourceGroupFilterTagArrayOutputWithContext(ctx context.Context) GetBudgetResourceGroupFilterTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBudgetResourceGroupFilterTagArrayOutput)
}

type GetBudgetResourceGroupFilterTagOutput struct{ *pulumi.OutputState }

func (GetBudgetResourceGroupFilterTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBudgetResourceGroupFilterTag)(nil)).Elem()
}

func (o GetBudgetResourceGroupFilterTagOutput) ToGetBudgetResourceGroupFilterTagOutput() GetBudgetResourceGroupFilterTagOutput {
	return o
}

func (o GetBudgetResourceGroupFilterTagOutput) ToGetBudgetResourceGroupFilterTagOutputWithContext(ctx context.Context) GetBudgetResourceGroupFilterTagOutput {
	return o
}

// The name of this Consumption Budget.
func (o GetBudgetResourceGroupFilterTagOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetBudgetResourceGroupFilterTag) string { return v.Name }).(pulumi.StringOutput)
}

// The operator used for comparison.
func (o GetBudgetResourceGroupFilterTagOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v GetBudgetResourceGroupFilterTag) string { return v.Operator }).(pulumi.StringOutput)
}

// A list of values for the tag.
func (o GetBudgetResourceGroupFilterTagOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetBudgetResourceGroupFilterTag) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetBudgetResourceGroupFilterTagArrayOutput struct{ *pulumi.OutputState }

func (GetBudgetResourceGroupFilterTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBudgetResourceGroupFilterTag)(nil)).Elem()
}

func (o GetBudgetResourceGroupFilterTagArrayOutput) ToGetBudgetResourceGroupFilterTagArrayOutput() GetBudgetResourceGroupFilterTagArrayOutput {
	return o
}

func (o GetBudgetResourceGroupFilterTagArrayOutput) ToGetBudgetResourceGroupFilterTagArrayOutputWithContext(ctx context.Context) GetBudgetResourceGroupFilterTagArrayOutput {
	return o
}

func (o GetBudgetResourceGroupFilterTagArrayOutput) Index(i pulumi.IntInput) GetBudgetResourceGroupFilterTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBudgetResourceGroupFilterTag {
		return vs[0].([]GetBudgetResourceGroupFilterTag)[vs[1].(int)]
	}).(GetBudgetResourceGroupFilterTagOutput)
}

type GetBudgetResourceGroupNotification struct {
	// A list of email addresses to send the budget notification to when the threshold is exceeded.
	ContactEmails []string `pulumi:"contactEmails"`
	// A list of Action Group IDs to send the budget notification to when the threshold is exceeded.
	ContactGroups []string `pulumi:"contactGroups"`
	// A list of contact roles to send the budget notification to when the threshold is exceeded.
	ContactRoles []string `pulumi:"contactRoles"`
	// Whether the notification is enabled.
	Enabled bool `pulumi:"enabled"`
	// The operator used for comparison.
	Operator string `pulumi:"operator"`
	// Threshold value associated with the notification.
	Threshold     int    `pulumi:"threshold"`
	ThresholdType string `pulumi:"thresholdType"`
}

// GetBudgetResourceGroupNotificationInput is an input type that accepts GetBudgetResourceGroupNotificationArgs and GetBudgetResourceGroupNotificationOutput values.
// You can construct a concrete instance of `GetBudgetResourceGroupNotificationInput` via:
//
//	GetBudgetResourceGroupNotificationArgs{...}
type GetBudgetResourceGroupNotificationInput interface {
	pulumi.Input

	ToGetBudgetResourceGroupNotificationOutput() GetBudgetResourceGroupNotificationOutput
	ToGetBudgetResourceGroupNotificationOutputWithContext(context.Context) GetBudgetResourceGroupNotificationOutput
}

type GetBudgetResourceGroupNotificationArgs struct {
	// A list of email addresses to send the budget notification to when the threshold is exceeded.
	ContactEmails pulumi.StringArrayInput `pulumi:"contactEmails"`
	// A list of Action Group IDs to send the budget notification to when the threshold is exceeded.
	ContactGroups pulumi.StringArrayInput `pulumi:"contactGroups"`
	// A list of contact roles to send the budget notification to when the threshold is exceeded.
	ContactRoles pulumi.StringArrayInput `pulumi:"contactRoles"`
	// Whether the notification is enabled.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// The operator used for comparison.
	Operator pulumi.StringInput `pulumi:"operator"`
	// Threshold value associated with the notification.
	Threshold     pulumi.IntInput    `pulumi:"threshold"`
	ThresholdType pulumi.StringInput `pulumi:"thresholdType"`
}

func (GetBudgetResourceGroupNotificationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBudgetResourceGroupNotification)(nil)).Elem()
}

func (i GetBudgetResourceGroupNotificationArgs) ToGetBudgetResourceGroupNotificationOutput() GetBudgetResourceGroupNotificationOutput {
	return i.ToGetBudgetResourceGroupNotificationOutputWithContext(context.Background())
}

func (i GetBudgetResourceGroupNotificationArgs) ToGetBudgetResourceGroupNotificationOutputWithContext(ctx context.Context) GetBudgetResourceGroupNotificationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBudgetResourceGroupNotificationOutput)
}

// GetBudgetResourceGroupNotificationArrayInput is an input type that accepts GetBudgetResourceGroupNotificationArray and GetBudgetResourceGroupNotificationArrayOutput values.
// You can construct a concrete instance of `GetBudgetResourceGroupNotificationArrayInput` via:
//
//	GetBudgetResourceGroupNotificationArray{ GetBudgetResourceGroupNotificationArgs{...} }
type GetBudgetResourceGroupNotificationArrayInput interface {
	pulumi.Input

	ToGetBudgetResourceGroupNotificationArrayOutput() GetBudgetResourceGroupNotificationArrayOutput
	ToGetBudgetResourceGroupNotificationArrayOutputWithContext(context.Context) GetBudgetResourceGroupNotificationArrayOutput
}

type GetBudgetResourceGroupNotificationArray []GetBudgetResourceGroupNotificationInput

func (GetBudgetResourceGroupNotificationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBudgetResourceGroupNotification)(nil)).Elem()
}

func (i GetBudgetResourceGroupNotificationArray) ToGetBudgetResourceGroupNotificationArrayOutput() GetBudgetResourceGroupNotificationArrayOutput {
	return i.ToGetBudgetResourceGroupNotificationArrayOutputWithContext(context.Background())
}

func (i GetBudgetResourceGroupNotificationArray) ToGetBudgetResourceGroupNotificationArrayOutputWithContext(ctx context.Context) GetBudgetResourceGroupNotificationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBudgetResourceGroupNotificationArrayOutput)
}

type GetBudgetResourceGroupNotificationOutput struct{ *pulumi.OutputState }

func (GetBudgetResourceGroupNotificationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBudgetResourceGroupNotification)(nil)).Elem()
}

func (o GetBudgetResourceGroupNotificationOutput) ToGetBudgetResourceGroupNotificationOutput() GetBudgetResourceGroupNotificationOutput {
	return o
}

func (o GetBudgetResourceGroupNotificationOutput) ToGetBudgetResourceGroupNotificationOutputWithContext(ctx context.Context) GetBudgetResourceGroupNotificationOutput {
	return o
}

// A list of email addresses to send the budget notification to when the threshold is exceeded.
func (o GetBudgetResourceGroupNotificationOutput) ContactEmails() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetBudgetResourceGroupNotification) []string { return v.ContactEmails }).(pulumi.StringArrayOutput)
}

// A list of Action Group IDs to send the budget notification to when the threshold is exceeded.
func (o GetBudgetResourceGroupNotificationOutput) ContactGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetBudgetResourceGroupNotification) []string { return v.ContactGroups }).(pulumi.StringArrayOutput)
}

// A list of contact roles to send the budget notification to when the threshold is exceeded.
func (o GetBudgetResourceGroupNotificationOutput) ContactRoles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetBudgetResourceGroupNotification) []string { return v.ContactRoles }).(pulumi.StringArrayOutput)
}

// Whether the notification is enabled.
func (o GetBudgetResourceGroupNotificationOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetBudgetResourceGroupNotification) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// The operator used for comparison.
func (o GetBudgetResourceGroupNotificationOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v GetBudgetResourceGroupNotification) string { return v.Operator }).(pulumi.StringOutput)
}

// Threshold value associated with the notification.
func (o GetBudgetResourceGroupNotificationOutput) Threshold() pulumi.IntOutput {
	return o.ApplyT(func(v GetBudgetResourceGroupNotification) int { return v.Threshold }).(pulumi.IntOutput)
}

func (o GetBudgetResourceGroupNotificationOutput) ThresholdType() pulumi.StringOutput {
	return o.ApplyT(func(v GetBudgetResourceGroupNotification) string { return v.ThresholdType }).(pulumi.StringOutput)
}

type GetBudgetResourceGroupNotificationArrayOutput struct{ *pulumi.OutputState }

func (GetBudgetResourceGroupNotificationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBudgetResourceGroupNotification)(nil)).Elem()
}

func (o GetBudgetResourceGroupNotificationArrayOutput) ToGetBudgetResourceGroupNotificationArrayOutput() GetBudgetResourceGroupNotificationArrayOutput {
	return o
}

func (o GetBudgetResourceGroupNotificationArrayOutput) ToGetBudgetResourceGroupNotificationArrayOutputWithContext(ctx context.Context) GetBudgetResourceGroupNotificationArrayOutput {
	return o
}

func (o GetBudgetResourceGroupNotificationArrayOutput) Index(i pulumi.IntInput) GetBudgetResourceGroupNotificationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBudgetResourceGroupNotification {
		return vs[0].([]GetBudgetResourceGroupNotification)[vs[1].(int)]
	}).(GetBudgetResourceGroupNotificationOutput)
}

type GetBudgetResourceGroupTimePeriod struct {
	// The end date for the budget.
	EndDate string `pulumi:"endDate"`
	// The start date for the budget.
	StartDate string `pulumi:"startDate"`
}

// GetBudgetResourceGroupTimePeriodInput is an input type that accepts GetBudgetResourceGroupTimePeriodArgs and GetBudgetResourceGroupTimePeriodOutput values.
// You can construct a concrete instance of `GetBudgetResourceGroupTimePeriodInput` via:
//
//	GetBudgetResourceGroupTimePeriodArgs{...}
type GetBudgetResourceGroupTimePeriodInput interface {
	pulumi.Input

	ToGetBudgetResourceGroupTimePeriodOutput() GetBudgetResourceGroupTimePeriodOutput
	ToGetBudgetResourceGroupTimePeriodOutputWithContext(context.Context) GetBudgetResourceGroupTimePeriodOutput
}

type GetBudgetResourceGroupTimePeriodArgs struct {
	// The end date for the budget.
	EndDate pulumi.StringInput `pulumi:"endDate"`
	// The start date for the budget.
	StartDate pulumi.StringInput `pulumi:"startDate"`
}

func (GetBudgetResourceGroupTimePeriodArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBudgetResourceGroupTimePeriod)(nil)).Elem()
}

func (i GetBudgetResourceGroupTimePeriodArgs) ToGetBudgetResourceGroupTimePeriodOutput() GetBudgetResourceGroupTimePeriodOutput {
	return i.ToGetBudgetResourceGroupTimePeriodOutputWithContext(context.Background())
}

func (i GetBudgetResourceGroupTimePeriodArgs) ToGetBudgetResourceGroupTimePeriodOutputWithContext(ctx context.Context) GetBudgetResourceGroupTimePeriodOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBudgetResourceGroupTimePeriodOutput)
}

// GetBudgetResourceGroupTimePeriodArrayInput is an input type that accepts GetBudgetResourceGroupTimePeriodArray and GetBudgetResourceGroupTimePeriodArrayOutput values.
// You can construct a concrete instance of `GetBudgetResourceGroupTimePeriodArrayInput` via:
//
//	GetBudgetResourceGroupTimePeriodArray{ GetBudgetResourceGroupTimePeriodArgs{...} }
type GetBudgetResourceGroupTimePeriodArrayInput interface {
	pulumi.Input

	ToGetBudgetResourceGroupTimePeriodArrayOutput() GetBudgetResourceGroupTimePeriodArrayOutput
	ToGetBudgetResourceGroupTimePeriodArrayOutputWithContext(context.Context) GetBudgetResourceGroupTimePeriodArrayOutput
}

type GetBudgetResourceGroupTimePeriodArray []GetBudgetResourceGroupTimePeriodInput

func (GetBudgetResourceGroupTimePeriodArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBudgetResourceGroupTimePeriod)(nil)).Elem()
}

func (i GetBudgetResourceGroupTimePeriodArray) ToGetBudgetResourceGroupTimePeriodArrayOutput() GetBudgetResourceGroupTimePeriodArrayOutput {
	return i.ToGetBudgetResourceGroupTimePeriodArrayOutputWithContext(context.Background())
}

func (i GetBudgetResourceGroupTimePeriodArray) ToGetBudgetResourceGroupTimePeriodArrayOutputWithContext(ctx context.Context) GetBudgetResourceGroupTimePeriodArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBudgetResourceGroupTimePeriodArrayOutput)
}

type GetBudgetResourceGroupTimePeriodOutput struct{ *pulumi.OutputState }

func (GetBudgetResourceGroupTimePeriodOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBudgetResourceGroupTimePeriod)(nil)).Elem()
}

func (o GetBudgetResourceGroupTimePeriodOutput) ToGetBudgetResourceGroupTimePeriodOutput() GetBudgetResourceGroupTimePeriodOutput {
	return o
}

func (o GetBudgetResourceGroupTimePeriodOutput) ToGetBudgetResourceGroupTimePeriodOutputWithContext(ctx context.Context) GetBudgetResourceGroupTimePeriodOutput {
	return o
}

// The end date for the budget.
func (o GetBudgetResourceGroupTimePeriodOutput) EndDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetBudgetResourceGroupTimePeriod) string { return v.EndDate }).(pulumi.StringOutput)
}

// The start date for the budget.
func (o GetBudgetResourceGroupTimePeriodOutput) StartDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetBudgetResourceGroupTimePeriod) string { return v.StartDate }).(pulumi.StringOutput)
}

type GetBudgetResourceGroupTimePeriodArrayOutput struct{ *pulumi.OutputState }

func (GetBudgetResourceGroupTimePeriodArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBudgetResourceGroupTimePeriod)(nil)).Elem()
}

func (o GetBudgetResourceGroupTimePeriodArrayOutput) ToGetBudgetResourceGroupTimePeriodArrayOutput() GetBudgetResourceGroupTimePeriodArrayOutput {
	return o
}

func (o GetBudgetResourceGroupTimePeriodArrayOutput) ToGetBudgetResourceGroupTimePeriodArrayOutputWithContext(ctx context.Context) GetBudgetResourceGroupTimePeriodArrayOutput {
	return o
}

func (o GetBudgetResourceGroupTimePeriodArrayOutput) Index(i pulumi.IntInput) GetBudgetResourceGroupTimePeriodOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBudgetResourceGroupTimePeriod {
		return vs[0].([]GetBudgetResourceGroupTimePeriod)[vs[1].(int)]
	}).(GetBudgetResourceGroupTimePeriodOutput)
}

type GetBudgetSubscriptionFilter struct {
	// A `dimension` block as defined above.
	Dimensions []GetBudgetSubscriptionFilterDimension `pulumi:"dimensions"`
	// A `not` block as defined below.
	Nots []GetBudgetSubscriptionFilterNot `pulumi:"nots"`
	// A `tag` block as defined below.
	Tags []GetBudgetSubscriptionFilterTag `pulumi:"tags"`
}

// GetBudgetSubscriptionFilterInput is an input type that accepts GetBudgetSubscriptionFilterArgs and GetBudgetSubscriptionFilterOutput values.
// You can construct a concrete instance of `GetBudgetSubscriptionFilterInput` via:
//
//	GetBudgetSubscriptionFilterArgs{...}
type GetBudgetSubscriptionFilterInput interface {
	pulumi.Input

	ToGetBudgetSubscriptionFilterOutput() GetBudgetSubscriptionFilterOutput
	ToGetBudgetSubscriptionFilterOutputWithContext(context.Context) GetBudgetSubscriptionFilterOutput
}

type GetBudgetSubscriptionFilterArgs struct {
	// A `dimension` block as defined above.
	Dimensions GetBudgetSubscriptionFilterDimensionArrayInput `pulumi:"dimensions"`
	// A `not` block as defined below.
	Nots GetBudgetSubscriptionFilterNotArrayInput `pulumi:"nots"`
	// A `tag` block as defined below.
	Tags GetBudgetSubscriptionFilterTagArrayInput `pulumi:"tags"`
}

func (GetBudgetSubscriptionFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBudgetSubscriptionFilter)(nil)).Elem()
}

func (i GetBudgetSubscriptionFilterArgs) ToGetBudgetSubscriptionFilterOutput() GetBudgetSubscriptionFilterOutput {
	return i.ToGetBudgetSubscriptionFilterOutputWithContext(context.Background())
}

func (i GetBudgetSubscriptionFilterArgs) ToGetBudgetSubscriptionFilterOutputWithContext(ctx context.Context) GetBudgetSubscriptionFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBudgetSubscriptionFilterOutput)
}

// GetBudgetSubscriptionFilterArrayInput is an input type that accepts GetBudgetSubscriptionFilterArray and GetBudgetSubscriptionFilterArrayOutput values.
// You can construct a concrete instance of `GetBudgetSubscriptionFilterArrayInput` via:
//
//	GetBudgetSubscriptionFilterArray{ GetBudgetSubscriptionFilterArgs{...} }
type GetBudgetSubscriptionFilterArrayInput interface {
	pulumi.Input

	ToGetBudgetSubscriptionFilterArrayOutput() GetBudgetSubscriptionFilterArrayOutput
	ToGetBudgetSubscriptionFilterArrayOutputWithContext(context.Context) GetBudgetSubscriptionFilterArrayOutput
}

type GetBudgetSubscriptionFilterArray []GetBudgetSubscriptionFilterInput

func (GetBudgetSubscriptionFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBudgetSubscriptionFilter)(nil)).Elem()
}

func (i GetBudgetSubscriptionFilterArray) ToGetBudgetSubscriptionFilterArrayOutput() GetBudgetSubscriptionFilterArrayOutput {
	return i.ToGetBudgetSubscriptionFilterArrayOutputWithContext(context.Background())
}

func (i GetBudgetSubscriptionFilterArray) ToGetBudgetSubscriptionFilterArrayOutputWithContext(ctx context.Context) GetBudgetSubscriptionFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBudgetSubscriptionFilterArrayOutput)
}

type GetBudgetSubscriptionFilterOutput struct{ *pulumi.OutputState }

func (GetBudgetSubscriptionFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBudgetSubscriptionFilter)(nil)).Elem()
}

func (o GetBudgetSubscriptionFilterOutput) ToGetBudgetSubscriptionFilterOutput() GetBudgetSubscriptionFilterOutput {
	return o
}

func (o GetBudgetSubscriptionFilterOutput) ToGetBudgetSubscriptionFilterOutputWithContext(ctx context.Context) GetBudgetSubscriptionFilterOutput {
	return o
}

// A `dimension` block as defined above.
func (o GetBudgetSubscriptionFilterOutput) Dimensions() GetBudgetSubscriptionFilterDimensionArrayOutput {
	return o.ApplyT(func(v GetBudgetSubscriptionFilter) []GetBudgetSubscriptionFilterDimension { return v.Dimensions }).(GetBudgetSubscriptionFilterDimensionArrayOutput)
}

// A `not` block as defined below.
func (o GetBudgetSubscriptionFilterOutput) Nots() GetBudgetSubscriptionFilterNotArrayOutput {
	return o.ApplyT(func(v GetBudgetSubscriptionFilter) []GetBudgetSubscriptionFilterNot { return v.Nots }).(GetBudgetSubscriptionFilterNotArrayOutput)
}

// A `tag` block as defined below.
func (o GetBudgetSubscriptionFilterOutput) Tags() GetBudgetSubscriptionFilterTagArrayOutput {
	return o.ApplyT(func(v GetBudgetSubscriptionFilter) []GetBudgetSubscriptionFilterTag { return v.Tags }).(GetBudgetSubscriptionFilterTagArrayOutput)
}

type GetBudgetSubscriptionFilterArrayOutput struct{ *pulumi.OutputState }

func (GetBudgetSubscriptionFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBudgetSubscriptionFilter)(nil)).Elem()
}

func (o GetBudgetSubscriptionFilterArrayOutput) ToGetBudgetSubscriptionFilterArrayOutput() GetBudgetSubscriptionFilterArrayOutput {
	return o
}

func (o GetBudgetSubscriptionFilterArrayOutput) ToGetBudgetSubscriptionFilterArrayOutputWithContext(ctx context.Context) GetBudgetSubscriptionFilterArrayOutput {
	return o
}

func (o GetBudgetSubscriptionFilterArrayOutput) Index(i pulumi.IntInput) GetBudgetSubscriptionFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBudgetSubscriptionFilter {
		return vs[0].([]GetBudgetSubscriptionFilter)[vs[1].(int)]
	}).(GetBudgetSubscriptionFilterOutput)
}

type GetBudgetSubscriptionFilterDimension struct {
	// The name of this Consumption Budget.
	Name string `pulumi:"name"`
	// The operator to used for comparison.
	Operator string `pulumi:"operator"`
	// A list of values for the tag.
	Values []string `pulumi:"values"`
}

// GetBudgetSubscriptionFilterDimensionInput is an input type that accepts GetBudgetSubscriptionFilterDimensionArgs and GetBudgetSubscriptionFilterDimensionOutput values.
// You can construct a concrete instance of `GetBudgetSubscriptionFilterDimensionInput` via:
//
//	GetBudgetSubscriptionFilterDimensionArgs{...}
type GetBudgetSubscriptionFilterDimensionInput interface {
	pulumi.Input

	ToGetBudgetSubscriptionFilterDimensionOutput() GetBudgetSubscriptionFilterDimensionOutput
	ToGetBudgetSubscriptionFilterDimensionOutputWithContext(context.Context) GetBudgetSubscriptionFilterDimensionOutput
}

type GetBudgetSubscriptionFilterDimensionArgs struct {
	// The name of this Consumption Budget.
	Name pulumi.StringInput `pulumi:"name"`
	// The operator to used for comparison.
	Operator pulumi.StringInput `pulumi:"operator"`
	// A list of values for the tag.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetBudgetSubscriptionFilterDimensionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBudgetSubscriptionFilterDimension)(nil)).Elem()
}

func (i GetBudgetSubscriptionFilterDimensionArgs) ToGetBudgetSubscriptionFilterDimensionOutput() GetBudgetSubscriptionFilterDimensionOutput {
	return i.ToGetBudgetSubscriptionFilterDimensionOutputWithContext(context.Background())
}

func (i GetBudgetSubscriptionFilterDimensionArgs) ToGetBudgetSubscriptionFilterDimensionOutputWithContext(ctx context.Context) GetBudgetSubscriptionFilterDimensionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBudgetSubscriptionFilterDimensionOutput)
}

// GetBudgetSubscriptionFilterDimensionArrayInput is an input type that accepts GetBudgetSubscriptionFilterDimensionArray and GetBudgetSubscriptionFilterDimensionArrayOutput values.
// You can construct a concrete instance of `GetBudgetSubscriptionFilterDimensionArrayInput` via:
//
//	GetBudgetSubscriptionFilterDimensionArray{ GetBudgetSubscriptionFilterDimensionArgs{...} }
type GetBudgetSubscriptionFilterDimensionArrayInput interface {
	pulumi.Input

	ToGetBudgetSubscriptionFilterDimensionArrayOutput() GetBudgetSubscriptionFilterDimensionArrayOutput
	ToGetBudgetSubscriptionFilterDimensionArrayOutputWithContext(context.Context) GetBudgetSubscriptionFilterDimensionArrayOutput
}

type GetBudgetSubscriptionFilterDimensionArray []GetBudgetSubscriptionFilterDimensionInput

func (GetBudgetSubscriptionFilterDimensionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBudgetSubscriptionFilterDimension)(nil)).Elem()
}

func (i GetBudgetSubscriptionFilterDimensionArray) ToGetBudgetSubscriptionFilterDimensionArrayOutput() GetBudgetSubscriptionFilterDimensionArrayOutput {
	return i.ToGetBudgetSubscriptionFilterDimensionArrayOutputWithContext(context.Background())
}

func (i GetBudgetSubscriptionFilterDimensionArray) ToGetBudgetSubscriptionFilterDimensionArrayOutputWithContext(ctx context.Context) GetBudgetSubscriptionFilterDimensionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBudgetSubscriptionFilterDimensionArrayOutput)
}

type GetBudgetSubscriptionFilterDimensionOutput struct{ *pulumi.OutputState }

func (GetBudgetSubscriptionFilterDimensionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBudgetSubscriptionFilterDimension)(nil)).Elem()
}

func (o GetBudgetSubscriptionFilterDimensionOutput) ToGetBudgetSubscriptionFilterDimensionOutput() GetBudgetSubscriptionFilterDimensionOutput {
	return o
}

func (o GetBudgetSubscriptionFilterDimensionOutput) ToGetBudgetSubscriptionFilterDimensionOutputWithContext(ctx context.Context) GetBudgetSubscriptionFilterDimensionOutput {
	return o
}

// The name of this Consumption Budget.
func (o GetBudgetSubscriptionFilterDimensionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetBudgetSubscriptionFilterDimension) string { return v.Name }).(pulumi.StringOutput)
}

// The operator to used for comparison.
func (o GetBudgetSubscriptionFilterDimensionOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v GetBudgetSubscriptionFilterDimension) string { return v.Operator }).(pulumi.StringOutput)
}

// A list of values for the tag.
func (o GetBudgetSubscriptionFilterDimensionOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetBudgetSubscriptionFilterDimension) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetBudgetSubscriptionFilterDimensionArrayOutput struct{ *pulumi.OutputState }

func (GetBudgetSubscriptionFilterDimensionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBudgetSubscriptionFilterDimension)(nil)).Elem()
}

func (o GetBudgetSubscriptionFilterDimensionArrayOutput) ToGetBudgetSubscriptionFilterDimensionArrayOutput() GetBudgetSubscriptionFilterDimensionArrayOutput {
	return o
}

func (o GetBudgetSubscriptionFilterDimensionArrayOutput) ToGetBudgetSubscriptionFilterDimensionArrayOutputWithContext(ctx context.Context) GetBudgetSubscriptionFilterDimensionArrayOutput {
	return o
}

func (o GetBudgetSubscriptionFilterDimensionArrayOutput) Index(i pulumi.IntInput) GetBudgetSubscriptionFilterDimensionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBudgetSubscriptionFilterDimension {
		return vs[0].([]GetBudgetSubscriptionFilterDimension)[vs[1].(int)]
	}).(GetBudgetSubscriptionFilterDimensionOutput)
}

type GetBudgetSubscriptionFilterNot struct {
	// A `dimension` block as defined above.
	Dimensions []GetBudgetSubscriptionFilterNotDimension `pulumi:"dimensions"`
	// A `tag` block as defined below.
	Tags []GetBudgetSubscriptionFilterNotTag `pulumi:"tags"`
}

// GetBudgetSubscriptionFilterNotInput is an input type that accepts GetBudgetSubscriptionFilterNotArgs and GetBudgetSubscriptionFilterNotOutput values.
// You can construct a concrete instance of `GetBudgetSubscriptionFilterNotInput` via:
//
//	GetBudgetSubscriptionFilterNotArgs{...}
type GetBudgetSubscriptionFilterNotInput interface {
	pulumi.Input

	ToGetBudgetSubscriptionFilterNotOutput() GetBudgetSubscriptionFilterNotOutput
	ToGetBudgetSubscriptionFilterNotOutputWithContext(context.Context) GetBudgetSubscriptionFilterNotOutput
}

type GetBudgetSubscriptionFilterNotArgs struct {
	// A `dimension` block as defined above.
	Dimensions GetBudgetSubscriptionFilterNotDimensionArrayInput `pulumi:"dimensions"`
	// A `tag` block as defined below.
	Tags GetBudgetSubscriptionFilterNotTagArrayInput `pulumi:"tags"`
}

func (GetBudgetSubscriptionFilterNotArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBudgetSubscriptionFilterNot)(nil)).Elem()
}

func (i GetBudgetSubscriptionFilterNotArgs) ToGetBudgetSubscriptionFilterNotOutput() GetBudgetSubscriptionFilterNotOutput {
	return i.ToGetBudgetSubscriptionFilterNotOutputWithContext(context.Background())
}

func (i GetBudgetSubscriptionFilterNotArgs) ToGetBudgetSubscriptionFilterNotOutputWithContext(ctx context.Context) GetBudgetSubscriptionFilterNotOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBudgetSubscriptionFilterNotOutput)
}

// GetBudgetSubscriptionFilterNotArrayInput is an input type that accepts GetBudgetSubscriptionFilterNotArray and GetBudgetSubscriptionFilterNotArrayOutput values.
// You can construct a concrete instance of `GetBudgetSubscriptionFilterNotArrayInput` via:
//
//	GetBudgetSubscriptionFilterNotArray{ GetBudgetSubscriptionFilterNotArgs{...} }
type GetBudgetSubscriptionFilterNotArrayInput interface {
	pulumi.Input

	ToGetBudgetSubscriptionFilterNotArrayOutput() GetBudgetSubscriptionFilterNotArrayOutput
	ToGetBudgetSubscriptionFilterNotArrayOutputWithContext(context.Context) GetBudgetSubscriptionFilterNotArrayOutput
}

type GetBudgetSubscriptionFilterNotArray []GetBudgetSubscriptionFilterNotInput

func (GetBudgetSubscriptionFilterNotArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBudgetSubscriptionFilterNot)(nil)).Elem()
}

func (i GetBudgetSubscriptionFilterNotArray) ToGetBudgetSubscriptionFilterNotArrayOutput() GetBudgetSubscriptionFilterNotArrayOutput {
	return i.ToGetBudgetSubscriptionFilterNotArrayOutputWithContext(context.Background())
}

func (i GetBudgetSubscriptionFilterNotArray) ToGetBudgetSubscriptionFilterNotArrayOutputWithContext(ctx context.Context) GetBudgetSubscriptionFilterNotArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBudgetSubscriptionFilterNotArrayOutput)
}

type GetBudgetSubscriptionFilterNotOutput struct{ *pulumi.OutputState }

func (GetBudgetSubscriptionFilterNotOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBudgetSubscriptionFilterNot)(nil)).Elem()
}

func (o GetBudgetSubscriptionFilterNotOutput) ToGetBudgetSubscriptionFilterNotOutput() GetBudgetSubscriptionFilterNotOutput {
	return o
}

func (o GetBudgetSubscriptionFilterNotOutput) ToGetBudgetSubscriptionFilterNotOutputWithContext(ctx context.Context) GetBudgetSubscriptionFilterNotOutput {
	return o
}

// A `dimension` block as defined above.
func (o GetBudgetSubscriptionFilterNotOutput) Dimensions() GetBudgetSubscriptionFilterNotDimensionArrayOutput {
	return o.ApplyT(func(v GetBudgetSubscriptionFilterNot) []GetBudgetSubscriptionFilterNotDimension { return v.Dimensions }).(GetBudgetSubscriptionFilterNotDimensionArrayOutput)
}

// A `tag` block as defined below.
func (o GetBudgetSubscriptionFilterNotOutput) Tags() GetBudgetSubscriptionFilterNotTagArrayOutput {
	return o.ApplyT(func(v GetBudgetSubscriptionFilterNot) []GetBudgetSubscriptionFilterNotTag { return v.Tags }).(GetBudgetSubscriptionFilterNotTagArrayOutput)
}

type GetBudgetSubscriptionFilterNotArrayOutput struct{ *pulumi.OutputState }

func (GetBudgetSubscriptionFilterNotArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBudgetSubscriptionFilterNot)(nil)).Elem()
}

func (o GetBudgetSubscriptionFilterNotArrayOutput) ToGetBudgetSubscriptionFilterNotArrayOutput() GetBudgetSubscriptionFilterNotArrayOutput {
	return o
}

func (o GetBudgetSubscriptionFilterNotArrayOutput) ToGetBudgetSubscriptionFilterNotArrayOutputWithContext(ctx context.Context) GetBudgetSubscriptionFilterNotArrayOutput {
	return o
}

func (o GetBudgetSubscriptionFilterNotArrayOutput) Index(i pulumi.IntInput) GetBudgetSubscriptionFilterNotOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBudgetSubscriptionFilterNot {
		return vs[0].([]GetBudgetSubscriptionFilterNot)[vs[1].(int)]
	}).(GetBudgetSubscriptionFilterNotOutput)
}

type GetBudgetSubscriptionFilterNotDimension struct {
	// The name of this Consumption Budget.
	Name string `pulumi:"name"`
	// The operator to used for comparison.
	Operator string `pulumi:"operator"`
	// A list of values for the tag.
	Values []string `pulumi:"values"`
}

// GetBudgetSubscriptionFilterNotDimensionInput is an input type that accepts GetBudgetSubscriptionFilterNotDimensionArgs and GetBudgetSubscriptionFilterNotDimensionOutput values.
// You can construct a concrete instance of `GetBudgetSubscriptionFilterNotDimensionInput` via:
//
//	GetBudgetSubscriptionFilterNotDimensionArgs{...}
type GetBudgetSubscriptionFilterNotDimensionInput interface {
	pulumi.Input

	ToGetBudgetSubscriptionFilterNotDimensionOutput() GetBudgetSubscriptionFilterNotDimensionOutput
	ToGetBudgetSubscriptionFilterNotDimensionOutputWithContext(context.Context) GetBudgetSubscriptionFilterNotDimensionOutput
}

type GetBudgetSubscriptionFilterNotDimensionArgs struct {
	// The name of this Consumption Budget.
	Name pulumi.StringInput `pulumi:"name"`
	// The operator to used for comparison.
	Operator pulumi.StringInput `pulumi:"operator"`
	// A list of values for the tag.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetBudgetSubscriptionFilterNotDimensionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBudgetSubscriptionFilterNotDimension)(nil)).Elem()
}

func (i GetBudgetSubscriptionFilterNotDimensionArgs) ToGetBudgetSubscriptionFilterNotDimensionOutput() GetBudgetSubscriptionFilterNotDimensionOutput {
	return i.ToGetBudgetSubscriptionFilterNotDimensionOutputWithContext(context.Background())
}

func (i GetBudgetSubscriptionFilterNotDimensionArgs) ToGetBudgetSubscriptionFilterNotDimensionOutputWithContext(ctx context.Context) GetBudgetSubscriptionFilterNotDimensionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBudgetSubscriptionFilterNotDimensionOutput)
}

// GetBudgetSubscriptionFilterNotDimensionArrayInput is an input type that accepts GetBudgetSubscriptionFilterNotDimensionArray and GetBudgetSubscriptionFilterNotDimensionArrayOutput values.
// You can construct a concrete instance of `GetBudgetSubscriptionFilterNotDimensionArrayInput` via:
//
//	GetBudgetSubscriptionFilterNotDimensionArray{ GetBudgetSubscriptionFilterNotDimensionArgs{...} }
type GetBudgetSubscriptionFilterNotDimensionArrayInput interface {
	pulumi.Input

	ToGetBudgetSubscriptionFilterNotDimensionArrayOutput() GetBudgetSubscriptionFilterNotDimensionArrayOutput
	ToGetBudgetSubscriptionFilterNotDimensionArrayOutputWithContext(context.Context) GetBudgetSubscriptionFilterNotDimensionArrayOutput
}

type GetBudgetSubscriptionFilterNotDimensionArray []GetBudgetSubscriptionFilterNotDimensionInput

func (GetBudgetSubscriptionFilterNotDimensionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBudgetSubscriptionFilterNotDimension)(nil)).Elem()
}

func (i GetBudgetSubscriptionFilterNotDimensionArray) ToGetBudgetSubscriptionFilterNotDimensionArrayOutput() GetBudgetSubscriptionFilterNotDimensionArrayOutput {
	return i.ToGetBudgetSubscriptionFilterNotDimensionArrayOutputWithContext(context.Background())
}

func (i GetBudgetSubscriptionFilterNotDimensionArray) ToGetBudgetSubscriptionFilterNotDimensionArrayOutputWithContext(ctx context.Context) GetBudgetSubscriptionFilterNotDimensionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBudgetSubscriptionFilterNotDimensionArrayOutput)
}

type GetBudgetSubscriptionFilterNotDimensionOutput struct{ *pulumi.OutputState }

func (GetBudgetSubscriptionFilterNotDimensionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBudgetSubscriptionFilterNotDimension)(nil)).Elem()
}

func (o GetBudgetSubscriptionFilterNotDimensionOutput) ToGetBudgetSubscriptionFilterNotDimensionOutput() GetBudgetSubscriptionFilterNotDimensionOutput {
	return o
}

func (o GetBudgetSubscriptionFilterNotDimensionOutput) ToGetBudgetSubscriptionFilterNotDimensionOutputWithContext(ctx context.Context) GetBudgetSubscriptionFilterNotDimensionOutput {
	return o
}

// The name of this Consumption Budget.
func (o GetBudgetSubscriptionFilterNotDimensionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetBudgetSubscriptionFilterNotDimension) string { return v.Name }).(pulumi.StringOutput)
}

// The operator to used for comparison.
func (o GetBudgetSubscriptionFilterNotDimensionOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v GetBudgetSubscriptionFilterNotDimension) string { return v.Operator }).(pulumi.StringOutput)
}

// A list of values for the tag.
func (o GetBudgetSubscriptionFilterNotDimensionOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetBudgetSubscriptionFilterNotDimension) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetBudgetSubscriptionFilterNotDimensionArrayOutput struct{ *pulumi.OutputState }

func (GetBudgetSubscriptionFilterNotDimensionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBudgetSubscriptionFilterNotDimension)(nil)).Elem()
}

func (o GetBudgetSubscriptionFilterNotDimensionArrayOutput) ToGetBudgetSubscriptionFilterNotDimensionArrayOutput() GetBudgetSubscriptionFilterNotDimensionArrayOutput {
	return o
}

func (o GetBudgetSubscriptionFilterNotDimensionArrayOutput) ToGetBudgetSubscriptionFilterNotDimensionArrayOutputWithContext(ctx context.Context) GetBudgetSubscriptionFilterNotDimensionArrayOutput {
	return o
}

func (o GetBudgetSubscriptionFilterNotDimensionArrayOutput) Index(i pulumi.IntInput) GetBudgetSubscriptionFilterNotDimensionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBudgetSubscriptionFilterNotDimension {
		return vs[0].([]GetBudgetSubscriptionFilterNotDimension)[vs[1].(int)]
	}).(GetBudgetSubscriptionFilterNotDimensionOutput)
}

type GetBudgetSubscriptionFilterNotTag struct {
	// The name of this Consumption Budget.
	Name string `pulumi:"name"`
	// The operator to used for comparison.
	Operator string `pulumi:"operator"`
	// A list of values for the tag.
	Values []string `pulumi:"values"`
}

// GetBudgetSubscriptionFilterNotTagInput is an input type that accepts GetBudgetSubscriptionFilterNotTagArgs and GetBudgetSubscriptionFilterNotTagOutput values.
// You can construct a concrete instance of `GetBudgetSubscriptionFilterNotTagInput` via:
//
//	GetBudgetSubscriptionFilterNotTagArgs{...}
type GetBudgetSubscriptionFilterNotTagInput interface {
	pulumi.Input

	ToGetBudgetSubscriptionFilterNotTagOutput() GetBudgetSubscriptionFilterNotTagOutput
	ToGetBudgetSubscriptionFilterNotTagOutputWithContext(context.Context) GetBudgetSubscriptionFilterNotTagOutput
}

type GetBudgetSubscriptionFilterNotTagArgs struct {
	// The name of this Consumption Budget.
	Name pulumi.StringInput `pulumi:"name"`
	// The operator to used for comparison.
	Operator pulumi.StringInput `pulumi:"operator"`
	// A list of values for the tag.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetBudgetSubscriptionFilterNotTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBudgetSubscriptionFilterNotTag)(nil)).Elem()
}

func (i GetBudgetSubscriptionFilterNotTagArgs) ToGetBudgetSubscriptionFilterNotTagOutput() GetBudgetSubscriptionFilterNotTagOutput {
	return i.ToGetBudgetSubscriptionFilterNotTagOutputWithContext(context.Background())
}

func (i GetBudgetSubscriptionFilterNotTagArgs) ToGetBudgetSubscriptionFilterNotTagOutputWithContext(ctx context.Context) GetBudgetSubscriptionFilterNotTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBudgetSubscriptionFilterNotTagOutput)
}

// GetBudgetSubscriptionFilterNotTagArrayInput is an input type that accepts GetBudgetSubscriptionFilterNotTagArray and GetBudgetSubscriptionFilterNotTagArrayOutput values.
// You can construct a concrete instance of `GetBudgetSubscriptionFilterNotTagArrayInput` via:
//
//	GetBudgetSubscriptionFilterNotTagArray{ GetBudgetSubscriptionFilterNotTagArgs{...} }
type GetBudgetSubscriptionFilterNotTagArrayInput interface {
	pulumi.Input

	ToGetBudgetSubscriptionFilterNotTagArrayOutput() GetBudgetSubscriptionFilterNotTagArrayOutput
	ToGetBudgetSubscriptionFilterNotTagArrayOutputWithContext(context.Context) GetBudgetSubscriptionFilterNotTagArrayOutput
}

type GetBudgetSubscriptionFilterNotTagArray []GetBudgetSubscriptionFilterNotTagInput

func (GetBudgetSubscriptionFilterNotTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBudgetSubscriptionFilterNotTag)(nil)).Elem()
}

func (i GetBudgetSubscriptionFilterNotTagArray) ToGetBudgetSubscriptionFilterNotTagArrayOutput() GetBudgetSubscriptionFilterNotTagArrayOutput {
	return i.ToGetBudgetSubscriptionFilterNotTagArrayOutputWithContext(context.Background())
}

func (i GetBudgetSubscriptionFilterNotTagArray) ToGetBudgetSubscriptionFilterNotTagArrayOutputWithContext(ctx context.Context) GetBudgetSubscriptionFilterNotTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBudgetSubscriptionFilterNotTagArrayOutput)
}

type GetBudgetSubscriptionFilterNotTagOutput struct{ *pulumi.OutputState }

func (GetBudgetSubscriptionFilterNotTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBudgetSubscriptionFilterNotTag)(nil)).Elem()
}

func (o GetBudgetSubscriptionFilterNotTagOutput) ToGetBudgetSubscriptionFilterNotTagOutput() GetBudgetSubscriptionFilterNotTagOutput {
	return o
}

func (o GetBudgetSubscriptionFilterNotTagOutput) ToGetBudgetSubscriptionFilterNotTagOutputWithContext(ctx context.Context) GetBudgetSubscriptionFilterNotTagOutput {
	return o
}

// The name of this Consumption Budget.
func (o GetBudgetSubscriptionFilterNotTagOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetBudgetSubscriptionFilterNotTag) string { return v.Name }).(pulumi.StringOutput)
}

// The operator to used for comparison.
func (o GetBudgetSubscriptionFilterNotTagOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v GetBudgetSubscriptionFilterNotTag) string { return v.Operator }).(pulumi.StringOutput)
}

// A list of values for the tag.
func (o GetBudgetSubscriptionFilterNotTagOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetBudgetSubscriptionFilterNotTag) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetBudgetSubscriptionFilterNotTagArrayOutput struct{ *pulumi.OutputState }

func (GetBudgetSubscriptionFilterNotTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBudgetSubscriptionFilterNotTag)(nil)).Elem()
}

func (o GetBudgetSubscriptionFilterNotTagArrayOutput) ToGetBudgetSubscriptionFilterNotTagArrayOutput() GetBudgetSubscriptionFilterNotTagArrayOutput {
	return o
}

func (o GetBudgetSubscriptionFilterNotTagArrayOutput) ToGetBudgetSubscriptionFilterNotTagArrayOutputWithContext(ctx context.Context) GetBudgetSubscriptionFilterNotTagArrayOutput {
	return o
}

func (o GetBudgetSubscriptionFilterNotTagArrayOutput) Index(i pulumi.IntInput) GetBudgetSubscriptionFilterNotTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBudgetSubscriptionFilterNotTag {
		return vs[0].([]GetBudgetSubscriptionFilterNotTag)[vs[1].(int)]
	}).(GetBudgetSubscriptionFilterNotTagOutput)
}

type GetBudgetSubscriptionFilterTag struct {
	// The name of this Consumption Budget.
	Name string `pulumi:"name"`
	// The operator to used for comparison.
	Operator string `pulumi:"operator"`
	// A list of values for the tag.
	Values []string `pulumi:"values"`
}

// GetBudgetSubscriptionFilterTagInput is an input type that accepts GetBudgetSubscriptionFilterTagArgs and GetBudgetSubscriptionFilterTagOutput values.
// You can construct a concrete instance of `GetBudgetSubscriptionFilterTagInput` via:
//
//	GetBudgetSubscriptionFilterTagArgs{...}
type GetBudgetSubscriptionFilterTagInput interface {
	pulumi.Input

	ToGetBudgetSubscriptionFilterTagOutput() GetBudgetSubscriptionFilterTagOutput
	ToGetBudgetSubscriptionFilterTagOutputWithContext(context.Context) GetBudgetSubscriptionFilterTagOutput
}

type GetBudgetSubscriptionFilterTagArgs struct {
	// The name of this Consumption Budget.
	Name pulumi.StringInput `pulumi:"name"`
	// The operator to used for comparison.
	Operator pulumi.StringInput `pulumi:"operator"`
	// A list of values for the tag.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetBudgetSubscriptionFilterTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBudgetSubscriptionFilterTag)(nil)).Elem()
}

func (i GetBudgetSubscriptionFilterTagArgs) ToGetBudgetSubscriptionFilterTagOutput() GetBudgetSubscriptionFilterTagOutput {
	return i.ToGetBudgetSubscriptionFilterTagOutputWithContext(context.Background())
}

func (i GetBudgetSubscriptionFilterTagArgs) ToGetBudgetSubscriptionFilterTagOutputWithContext(ctx context.Context) GetBudgetSubscriptionFilterTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBudgetSubscriptionFilterTagOutput)
}

// GetBudgetSubscriptionFilterTagArrayInput is an input type that accepts GetBudgetSubscriptionFilterTagArray and GetBudgetSubscriptionFilterTagArrayOutput values.
// You can construct a concrete instance of `GetBudgetSubscriptionFilterTagArrayInput` via:
//
//	GetBudgetSubscriptionFilterTagArray{ GetBudgetSubscriptionFilterTagArgs{...} }
type GetBudgetSubscriptionFilterTagArrayInput interface {
	pulumi.Input

	ToGetBudgetSubscriptionFilterTagArrayOutput() GetBudgetSubscriptionFilterTagArrayOutput
	ToGetBudgetSubscriptionFilterTagArrayOutputWithContext(context.Context) GetBudgetSubscriptionFilterTagArrayOutput
}

type GetBudgetSubscriptionFilterTagArray []GetBudgetSubscriptionFilterTagInput

func (GetBudgetSubscriptionFilterTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBudgetSubscriptionFilterTag)(nil)).Elem()
}

func (i GetBudgetSubscriptionFilterTagArray) ToGetBudgetSubscriptionFilterTagArrayOutput() GetBudgetSubscriptionFilterTagArrayOutput {
	return i.ToGetBudgetSubscriptionFilterTagArrayOutputWithContext(context.Background())
}

func (i GetBudgetSubscriptionFilterTagArray) ToGetBudgetSubscriptionFilterTagArrayOutputWithContext(ctx context.Context) GetBudgetSubscriptionFilterTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBudgetSubscriptionFilterTagArrayOutput)
}

type GetBudgetSubscriptionFilterTagOutput struct{ *pulumi.OutputState }

func (GetBudgetSubscriptionFilterTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBudgetSubscriptionFilterTag)(nil)).Elem()
}

func (o GetBudgetSubscriptionFilterTagOutput) ToGetBudgetSubscriptionFilterTagOutput() GetBudgetSubscriptionFilterTagOutput {
	return o
}

func (o GetBudgetSubscriptionFilterTagOutput) ToGetBudgetSubscriptionFilterTagOutputWithContext(ctx context.Context) GetBudgetSubscriptionFilterTagOutput {
	return o
}

// The name of this Consumption Budget.
func (o GetBudgetSubscriptionFilterTagOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetBudgetSubscriptionFilterTag) string { return v.Name }).(pulumi.StringOutput)
}

// The operator to used for comparison.
func (o GetBudgetSubscriptionFilterTagOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v GetBudgetSubscriptionFilterTag) string { return v.Operator }).(pulumi.StringOutput)
}

// A list of values for the tag.
func (o GetBudgetSubscriptionFilterTagOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetBudgetSubscriptionFilterTag) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetBudgetSubscriptionFilterTagArrayOutput struct{ *pulumi.OutputState }

func (GetBudgetSubscriptionFilterTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBudgetSubscriptionFilterTag)(nil)).Elem()
}

func (o GetBudgetSubscriptionFilterTagArrayOutput) ToGetBudgetSubscriptionFilterTagArrayOutput() GetBudgetSubscriptionFilterTagArrayOutput {
	return o
}

func (o GetBudgetSubscriptionFilterTagArrayOutput) ToGetBudgetSubscriptionFilterTagArrayOutputWithContext(ctx context.Context) GetBudgetSubscriptionFilterTagArrayOutput {
	return o
}

func (o GetBudgetSubscriptionFilterTagArrayOutput) Index(i pulumi.IntInput) GetBudgetSubscriptionFilterTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBudgetSubscriptionFilterTag {
		return vs[0].([]GetBudgetSubscriptionFilterTag)[vs[1].(int)]
	}).(GetBudgetSubscriptionFilterTagOutput)
}

type GetBudgetSubscriptionNotification struct {
	// A list of email addresses to send the budget notification to when the threshold is exceeded.
	ContactEmails []string `pulumi:"contactEmails"`
	// A list of Action Group IDs to send the budget notification to when the threshold is exceeded.
	ContactGroups []string `pulumi:"contactGroups"`
	// A list of contact roles to send the budget notification to when the threshold is exceeded.
	ContactRoles []string `pulumi:"contactRoles"`
	// Whether the notification is enabled.
	Enabled bool `pulumi:"enabled"`
	// The operator to used for comparison.
	Operator string `pulumi:"operator"`
	// Threshold value associated with the notification.
	Threshold     int    `pulumi:"threshold"`
	ThresholdType string `pulumi:"thresholdType"`
}

// GetBudgetSubscriptionNotificationInput is an input type that accepts GetBudgetSubscriptionNotificationArgs and GetBudgetSubscriptionNotificationOutput values.
// You can construct a concrete instance of `GetBudgetSubscriptionNotificationInput` via:
//
//	GetBudgetSubscriptionNotificationArgs{...}
type GetBudgetSubscriptionNotificationInput interface {
	pulumi.Input

	ToGetBudgetSubscriptionNotificationOutput() GetBudgetSubscriptionNotificationOutput
	ToGetBudgetSubscriptionNotificationOutputWithContext(context.Context) GetBudgetSubscriptionNotificationOutput
}

type GetBudgetSubscriptionNotificationArgs struct {
	// A list of email addresses to send the budget notification to when the threshold is exceeded.
	ContactEmails pulumi.StringArrayInput `pulumi:"contactEmails"`
	// A list of Action Group IDs to send the budget notification to when the threshold is exceeded.
	ContactGroups pulumi.StringArrayInput `pulumi:"contactGroups"`
	// A list of contact roles to send the budget notification to when the threshold is exceeded.
	ContactRoles pulumi.StringArrayInput `pulumi:"contactRoles"`
	// Whether the notification is enabled.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// The operator to used for comparison.
	Operator pulumi.StringInput `pulumi:"operator"`
	// Threshold value associated with the notification.
	Threshold     pulumi.IntInput    `pulumi:"threshold"`
	ThresholdType pulumi.StringInput `pulumi:"thresholdType"`
}

func (GetBudgetSubscriptionNotificationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBudgetSubscriptionNotification)(nil)).Elem()
}

func (i GetBudgetSubscriptionNotificationArgs) ToGetBudgetSubscriptionNotificationOutput() GetBudgetSubscriptionNotificationOutput {
	return i.ToGetBudgetSubscriptionNotificationOutputWithContext(context.Background())
}

func (i GetBudgetSubscriptionNotificationArgs) ToGetBudgetSubscriptionNotificationOutputWithContext(ctx context.Context) GetBudgetSubscriptionNotificationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBudgetSubscriptionNotificationOutput)
}

// GetBudgetSubscriptionNotificationArrayInput is an input type that accepts GetBudgetSubscriptionNotificationArray and GetBudgetSubscriptionNotificationArrayOutput values.
// You can construct a concrete instance of `GetBudgetSubscriptionNotificationArrayInput` via:
//
//	GetBudgetSubscriptionNotificationArray{ GetBudgetSubscriptionNotificationArgs{...} }
type GetBudgetSubscriptionNotificationArrayInput interface {
	pulumi.Input

	ToGetBudgetSubscriptionNotificationArrayOutput() GetBudgetSubscriptionNotificationArrayOutput
	ToGetBudgetSubscriptionNotificationArrayOutputWithContext(context.Context) GetBudgetSubscriptionNotificationArrayOutput
}

type GetBudgetSubscriptionNotificationArray []GetBudgetSubscriptionNotificationInput

func (GetBudgetSubscriptionNotificationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBudgetSubscriptionNotification)(nil)).Elem()
}

func (i GetBudgetSubscriptionNotificationArray) ToGetBudgetSubscriptionNotificationArrayOutput() GetBudgetSubscriptionNotificationArrayOutput {
	return i.ToGetBudgetSubscriptionNotificationArrayOutputWithContext(context.Background())
}

func (i GetBudgetSubscriptionNotificationArray) ToGetBudgetSubscriptionNotificationArrayOutputWithContext(ctx context.Context) GetBudgetSubscriptionNotificationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBudgetSubscriptionNotificationArrayOutput)
}

type GetBudgetSubscriptionNotificationOutput struct{ *pulumi.OutputState }

func (GetBudgetSubscriptionNotificationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBudgetSubscriptionNotification)(nil)).Elem()
}

func (o GetBudgetSubscriptionNotificationOutput) ToGetBudgetSubscriptionNotificationOutput() GetBudgetSubscriptionNotificationOutput {
	return o
}

func (o GetBudgetSubscriptionNotificationOutput) ToGetBudgetSubscriptionNotificationOutputWithContext(ctx context.Context) GetBudgetSubscriptionNotificationOutput {
	return o
}

// A list of email addresses to send the budget notification to when the threshold is exceeded.
func (o GetBudgetSubscriptionNotificationOutput) ContactEmails() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetBudgetSubscriptionNotification) []string { return v.ContactEmails }).(pulumi.StringArrayOutput)
}

// A list of Action Group IDs to send the budget notification to when the threshold is exceeded.
func (o GetBudgetSubscriptionNotificationOutput) ContactGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetBudgetSubscriptionNotification) []string { return v.ContactGroups }).(pulumi.StringArrayOutput)
}

// A list of contact roles to send the budget notification to when the threshold is exceeded.
func (o GetBudgetSubscriptionNotificationOutput) ContactRoles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetBudgetSubscriptionNotification) []string { return v.ContactRoles }).(pulumi.StringArrayOutput)
}

// Whether the notification is enabled.
func (o GetBudgetSubscriptionNotificationOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetBudgetSubscriptionNotification) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// The operator to used for comparison.
func (o GetBudgetSubscriptionNotificationOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v GetBudgetSubscriptionNotification) string { return v.Operator }).(pulumi.StringOutput)
}

// Threshold value associated with the notification.
func (o GetBudgetSubscriptionNotificationOutput) Threshold() pulumi.IntOutput {
	return o.ApplyT(func(v GetBudgetSubscriptionNotification) int { return v.Threshold }).(pulumi.IntOutput)
}

func (o GetBudgetSubscriptionNotificationOutput) ThresholdType() pulumi.StringOutput {
	return o.ApplyT(func(v GetBudgetSubscriptionNotification) string { return v.ThresholdType }).(pulumi.StringOutput)
}

type GetBudgetSubscriptionNotificationArrayOutput struct{ *pulumi.OutputState }

func (GetBudgetSubscriptionNotificationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBudgetSubscriptionNotification)(nil)).Elem()
}

func (o GetBudgetSubscriptionNotificationArrayOutput) ToGetBudgetSubscriptionNotificationArrayOutput() GetBudgetSubscriptionNotificationArrayOutput {
	return o
}

func (o GetBudgetSubscriptionNotificationArrayOutput) ToGetBudgetSubscriptionNotificationArrayOutputWithContext(ctx context.Context) GetBudgetSubscriptionNotificationArrayOutput {
	return o
}

func (o GetBudgetSubscriptionNotificationArrayOutput) Index(i pulumi.IntInput) GetBudgetSubscriptionNotificationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBudgetSubscriptionNotification {
		return vs[0].([]GetBudgetSubscriptionNotification)[vs[1].(int)]
	}).(GetBudgetSubscriptionNotificationOutput)
}

type GetBudgetSubscriptionTimePeriod struct {
	// The end date for the budget.
	EndDate string `pulumi:"endDate"`
	// The start date for the budget.
	StartDate string `pulumi:"startDate"`
}

// GetBudgetSubscriptionTimePeriodInput is an input type that accepts GetBudgetSubscriptionTimePeriodArgs and GetBudgetSubscriptionTimePeriodOutput values.
// You can construct a concrete instance of `GetBudgetSubscriptionTimePeriodInput` via:
//
//	GetBudgetSubscriptionTimePeriodArgs{...}
type GetBudgetSubscriptionTimePeriodInput interface {
	pulumi.Input

	ToGetBudgetSubscriptionTimePeriodOutput() GetBudgetSubscriptionTimePeriodOutput
	ToGetBudgetSubscriptionTimePeriodOutputWithContext(context.Context) GetBudgetSubscriptionTimePeriodOutput
}

type GetBudgetSubscriptionTimePeriodArgs struct {
	// The end date for the budget.
	EndDate pulumi.StringInput `pulumi:"endDate"`
	// The start date for the budget.
	StartDate pulumi.StringInput `pulumi:"startDate"`
}

func (GetBudgetSubscriptionTimePeriodArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBudgetSubscriptionTimePeriod)(nil)).Elem()
}

func (i GetBudgetSubscriptionTimePeriodArgs) ToGetBudgetSubscriptionTimePeriodOutput() GetBudgetSubscriptionTimePeriodOutput {
	return i.ToGetBudgetSubscriptionTimePeriodOutputWithContext(context.Background())
}

func (i GetBudgetSubscriptionTimePeriodArgs) ToGetBudgetSubscriptionTimePeriodOutputWithContext(ctx context.Context) GetBudgetSubscriptionTimePeriodOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBudgetSubscriptionTimePeriodOutput)
}

// GetBudgetSubscriptionTimePeriodArrayInput is an input type that accepts GetBudgetSubscriptionTimePeriodArray and GetBudgetSubscriptionTimePeriodArrayOutput values.
// You can construct a concrete instance of `GetBudgetSubscriptionTimePeriodArrayInput` via:
//
//	GetBudgetSubscriptionTimePeriodArray{ GetBudgetSubscriptionTimePeriodArgs{...} }
type GetBudgetSubscriptionTimePeriodArrayInput interface {
	pulumi.Input

	ToGetBudgetSubscriptionTimePeriodArrayOutput() GetBudgetSubscriptionTimePeriodArrayOutput
	ToGetBudgetSubscriptionTimePeriodArrayOutputWithContext(context.Context) GetBudgetSubscriptionTimePeriodArrayOutput
}

type GetBudgetSubscriptionTimePeriodArray []GetBudgetSubscriptionTimePeriodInput

func (GetBudgetSubscriptionTimePeriodArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBudgetSubscriptionTimePeriod)(nil)).Elem()
}

func (i GetBudgetSubscriptionTimePeriodArray) ToGetBudgetSubscriptionTimePeriodArrayOutput() GetBudgetSubscriptionTimePeriodArrayOutput {
	return i.ToGetBudgetSubscriptionTimePeriodArrayOutputWithContext(context.Background())
}

func (i GetBudgetSubscriptionTimePeriodArray) ToGetBudgetSubscriptionTimePeriodArrayOutputWithContext(ctx context.Context) GetBudgetSubscriptionTimePeriodArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBudgetSubscriptionTimePeriodArrayOutput)
}

type GetBudgetSubscriptionTimePeriodOutput struct{ *pulumi.OutputState }

func (GetBudgetSubscriptionTimePeriodOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBudgetSubscriptionTimePeriod)(nil)).Elem()
}

func (o GetBudgetSubscriptionTimePeriodOutput) ToGetBudgetSubscriptionTimePeriodOutput() GetBudgetSubscriptionTimePeriodOutput {
	return o
}

func (o GetBudgetSubscriptionTimePeriodOutput) ToGetBudgetSubscriptionTimePeriodOutputWithContext(ctx context.Context) GetBudgetSubscriptionTimePeriodOutput {
	return o
}

// The end date for the budget.
func (o GetBudgetSubscriptionTimePeriodOutput) EndDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetBudgetSubscriptionTimePeriod) string { return v.EndDate }).(pulumi.StringOutput)
}

// The start date for the budget.
func (o GetBudgetSubscriptionTimePeriodOutput) StartDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetBudgetSubscriptionTimePeriod) string { return v.StartDate }).(pulumi.StringOutput)
}

type GetBudgetSubscriptionTimePeriodArrayOutput struct{ *pulumi.OutputState }

func (GetBudgetSubscriptionTimePeriodArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBudgetSubscriptionTimePeriod)(nil)).Elem()
}

func (o GetBudgetSubscriptionTimePeriodArrayOutput) ToGetBudgetSubscriptionTimePeriodArrayOutput() GetBudgetSubscriptionTimePeriodArrayOutput {
	return o
}

func (o GetBudgetSubscriptionTimePeriodArrayOutput) ToGetBudgetSubscriptionTimePeriodArrayOutputWithContext(ctx context.Context) GetBudgetSubscriptionTimePeriodArrayOutput {
	return o
}

func (o GetBudgetSubscriptionTimePeriodArrayOutput) Index(i pulumi.IntInput) GetBudgetSubscriptionTimePeriodOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBudgetSubscriptionTimePeriod {
		return vs[0].([]GetBudgetSubscriptionTimePeriod)[vs[1].(int)]
	}).(GetBudgetSubscriptionTimePeriodOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BudgetManagementGroupFilterInput)(nil)).Elem(), BudgetManagementGroupFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BudgetManagementGroupFilterPtrInput)(nil)).Elem(), BudgetManagementGroupFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BudgetManagementGroupFilterDimensionInput)(nil)).Elem(), BudgetManagementGroupFilterDimensionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BudgetManagementGroupFilterDimensionArrayInput)(nil)).Elem(), BudgetManagementGroupFilterDimensionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BudgetManagementGroupFilterTagInput)(nil)).Elem(), BudgetManagementGroupFilterTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BudgetManagementGroupFilterTagArrayInput)(nil)).Elem(), BudgetManagementGroupFilterTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BudgetManagementGroupNotificationInput)(nil)).Elem(), BudgetManagementGroupNotificationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BudgetManagementGroupNotificationArrayInput)(nil)).Elem(), BudgetManagementGroupNotificationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BudgetManagementGroupTimePeriodInput)(nil)).Elem(), BudgetManagementGroupTimePeriodArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BudgetManagementGroupTimePeriodPtrInput)(nil)).Elem(), BudgetManagementGroupTimePeriodArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BudgetResourceGroupFilterInput)(nil)).Elem(), BudgetResourceGroupFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BudgetResourceGroupFilterPtrInput)(nil)).Elem(), BudgetResourceGroupFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BudgetResourceGroupFilterDimensionInput)(nil)).Elem(), BudgetResourceGroupFilterDimensionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BudgetResourceGroupFilterDimensionArrayInput)(nil)).Elem(), BudgetResourceGroupFilterDimensionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BudgetResourceGroupFilterTagInput)(nil)).Elem(), BudgetResourceGroupFilterTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BudgetResourceGroupFilterTagArrayInput)(nil)).Elem(), BudgetResourceGroupFilterTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BudgetResourceGroupNotificationInput)(nil)).Elem(), BudgetResourceGroupNotificationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BudgetResourceGroupNotificationArrayInput)(nil)).Elem(), BudgetResourceGroupNotificationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BudgetResourceGroupTimePeriodInput)(nil)).Elem(), BudgetResourceGroupTimePeriodArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BudgetResourceGroupTimePeriodPtrInput)(nil)).Elem(), BudgetResourceGroupTimePeriodArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BudgetSubscriptionFilterInput)(nil)).Elem(), BudgetSubscriptionFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BudgetSubscriptionFilterPtrInput)(nil)).Elem(), BudgetSubscriptionFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BudgetSubscriptionFilterDimensionInput)(nil)).Elem(), BudgetSubscriptionFilterDimensionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BudgetSubscriptionFilterDimensionArrayInput)(nil)).Elem(), BudgetSubscriptionFilterDimensionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BudgetSubscriptionFilterTagInput)(nil)).Elem(), BudgetSubscriptionFilterTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BudgetSubscriptionFilterTagArrayInput)(nil)).Elem(), BudgetSubscriptionFilterTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BudgetSubscriptionNotificationInput)(nil)).Elem(), BudgetSubscriptionNotificationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BudgetSubscriptionNotificationArrayInput)(nil)).Elem(), BudgetSubscriptionNotificationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BudgetSubscriptionTimePeriodInput)(nil)).Elem(), BudgetSubscriptionTimePeriodArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BudgetSubscriptionTimePeriodPtrInput)(nil)).Elem(), BudgetSubscriptionTimePeriodArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBudgetResourceGroupFilterInput)(nil)).Elem(), GetBudgetResourceGroupFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBudgetResourceGroupFilterArrayInput)(nil)).Elem(), GetBudgetResourceGroupFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBudgetResourceGroupFilterDimensionInput)(nil)).Elem(), GetBudgetResourceGroupFilterDimensionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBudgetResourceGroupFilterDimensionArrayInput)(nil)).Elem(), GetBudgetResourceGroupFilterDimensionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBudgetResourceGroupFilterNotInput)(nil)).Elem(), GetBudgetResourceGroupFilterNotArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBudgetResourceGroupFilterNotArrayInput)(nil)).Elem(), GetBudgetResourceGroupFilterNotArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBudgetResourceGroupFilterNotDimensionInput)(nil)).Elem(), GetBudgetResourceGroupFilterNotDimensionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBudgetResourceGroupFilterNotDimensionArrayInput)(nil)).Elem(), GetBudgetResourceGroupFilterNotDimensionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBudgetResourceGroupFilterNotTagInput)(nil)).Elem(), GetBudgetResourceGroupFilterNotTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBudgetResourceGroupFilterNotTagArrayInput)(nil)).Elem(), GetBudgetResourceGroupFilterNotTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBudgetResourceGroupFilterTagInput)(nil)).Elem(), GetBudgetResourceGroupFilterTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBudgetResourceGroupFilterTagArrayInput)(nil)).Elem(), GetBudgetResourceGroupFilterTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBudgetResourceGroupNotificationInput)(nil)).Elem(), GetBudgetResourceGroupNotificationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBudgetResourceGroupNotificationArrayInput)(nil)).Elem(), GetBudgetResourceGroupNotificationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBudgetResourceGroupTimePeriodInput)(nil)).Elem(), GetBudgetResourceGroupTimePeriodArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBudgetResourceGroupTimePeriodArrayInput)(nil)).Elem(), GetBudgetResourceGroupTimePeriodArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBudgetSubscriptionFilterInput)(nil)).Elem(), GetBudgetSubscriptionFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBudgetSubscriptionFilterArrayInput)(nil)).Elem(), GetBudgetSubscriptionFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBudgetSubscriptionFilterDimensionInput)(nil)).Elem(), GetBudgetSubscriptionFilterDimensionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBudgetSubscriptionFilterDimensionArrayInput)(nil)).Elem(), GetBudgetSubscriptionFilterDimensionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBudgetSubscriptionFilterNotInput)(nil)).Elem(), GetBudgetSubscriptionFilterNotArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBudgetSubscriptionFilterNotArrayInput)(nil)).Elem(), GetBudgetSubscriptionFilterNotArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBudgetSubscriptionFilterNotDimensionInput)(nil)).Elem(), GetBudgetSubscriptionFilterNotDimensionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBudgetSubscriptionFilterNotDimensionArrayInput)(nil)).Elem(), GetBudgetSubscriptionFilterNotDimensionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBudgetSubscriptionFilterNotTagInput)(nil)).Elem(), GetBudgetSubscriptionFilterNotTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBudgetSubscriptionFilterNotTagArrayInput)(nil)).Elem(), GetBudgetSubscriptionFilterNotTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBudgetSubscriptionFilterTagInput)(nil)).Elem(), GetBudgetSubscriptionFilterTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBudgetSubscriptionFilterTagArrayInput)(nil)).Elem(), GetBudgetSubscriptionFilterTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBudgetSubscriptionNotificationInput)(nil)).Elem(), GetBudgetSubscriptionNotificationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBudgetSubscriptionNotificationArrayInput)(nil)).Elem(), GetBudgetSubscriptionNotificationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBudgetSubscriptionTimePeriodInput)(nil)).Elem(), GetBudgetSubscriptionTimePeriodArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBudgetSubscriptionTimePeriodArrayInput)(nil)).Elem(), GetBudgetSubscriptionTimePeriodArray{})
	pulumi.RegisterOutputType(BudgetManagementGroupFilterOutput{})
	pulumi.RegisterOutputType(BudgetManagementGroupFilterPtrOutput{})
	pulumi.RegisterOutputType(BudgetManagementGroupFilterDimensionOutput{})
	pulumi.RegisterOutputType(BudgetManagementGroupFilterDimensionArrayOutput{})
	pulumi.RegisterOutputType(BudgetManagementGroupFilterTagOutput{})
	pulumi.RegisterOutputType(BudgetManagementGroupFilterTagArrayOutput{})
	pulumi.RegisterOutputType(BudgetManagementGroupNotificationOutput{})
	pulumi.RegisterOutputType(BudgetManagementGroupNotificationArrayOutput{})
	pulumi.RegisterOutputType(BudgetManagementGroupTimePeriodOutput{})
	pulumi.RegisterOutputType(BudgetManagementGroupTimePeriodPtrOutput{})
	pulumi.RegisterOutputType(BudgetResourceGroupFilterOutput{})
	pulumi.RegisterOutputType(BudgetResourceGroupFilterPtrOutput{})
	pulumi.RegisterOutputType(BudgetResourceGroupFilterDimensionOutput{})
	pulumi.RegisterOutputType(BudgetResourceGroupFilterDimensionArrayOutput{})
	pulumi.RegisterOutputType(BudgetResourceGroupFilterTagOutput{})
	pulumi.RegisterOutputType(BudgetResourceGroupFilterTagArrayOutput{})
	pulumi.RegisterOutputType(BudgetResourceGroupNotificationOutput{})
	pulumi.RegisterOutputType(BudgetResourceGroupNotificationArrayOutput{})
	pulumi.RegisterOutputType(BudgetResourceGroupTimePeriodOutput{})
	pulumi.RegisterOutputType(BudgetResourceGroupTimePeriodPtrOutput{})
	pulumi.RegisterOutputType(BudgetSubscriptionFilterOutput{})
	pulumi.RegisterOutputType(BudgetSubscriptionFilterPtrOutput{})
	pulumi.RegisterOutputType(BudgetSubscriptionFilterDimensionOutput{})
	pulumi.RegisterOutputType(BudgetSubscriptionFilterDimensionArrayOutput{})
	pulumi.RegisterOutputType(BudgetSubscriptionFilterTagOutput{})
	pulumi.RegisterOutputType(BudgetSubscriptionFilterTagArrayOutput{})
	pulumi.RegisterOutputType(BudgetSubscriptionNotificationOutput{})
	pulumi.RegisterOutputType(BudgetSubscriptionNotificationArrayOutput{})
	pulumi.RegisterOutputType(BudgetSubscriptionTimePeriodOutput{})
	pulumi.RegisterOutputType(BudgetSubscriptionTimePeriodPtrOutput{})
	pulumi.RegisterOutputType(GetBudgetResourceGroupFilterOutput{})
	pulumi.RegisterOutputType(GetBudgetResourceGroupFilterArrayOutput{})
	pulumi.RegisterOutputType(GetBudgetResourceGroupFilterDimensionOutput{})
	pulumi.RegisterOutputType(GetBudgetResourceGroupFilterDimensionArrayOutput{})
	pulumi.RegisterOutputType(GetBudgetResourceGroupFilterNotOutput{})
	pulumi.RegisterOutputType(GetBudgetResourceGroupFilterNotArrayOutput{})
	pulumi.RegisterOutputType(GetBudgetResourceGroupFilterNotDimensionOutput{})
	pulumi.RegisterOutputType(GetBudgetResourceGroupFilterNotDimensionArrayOutput{})
	pulumi.RegisterOutputType(GetBudgetResourceGroupFilterNotTagOutput{})
	pulumi.RegisterOutputType(GetBudgetResourceGroupFilterNotTagArrayOutput{})
	pulumi.RegisterOutputType(GetBudgetResourceGroupFilterTagOutput{})
	pulumi.RegisterOutputType(GetBudgetResourceGroupFilterTagArrayOutput{})
	pulumi.RegisterOutputType(GetBudgetResourceGroupNotificationOutput{})
	pulumi.RegisterOutputType(GetBudgetResourceGroupNotificationArrayOutput{})
	pulumi.RegisterOutputType(GetBudgetResourceGroupTimePeriodOutput{})
	pulumi.RegisterOutputType(GetBudgetResourceGroupTimePeriodArrayOutput{})
	pulumi.RegisterOutputType(GetBudgetSubscriptionFilterOutput{})
	pulumi.RegisterOutputType(GetBudgetSubscriptionFilterArrayOutput{})
	pulumi.RegisterOutputType(GetBudgetSubscriptionFilterDimensionOutput{})
	pulumi.RegisterOutputType(GetBudgetSubscriptionFilterDimensionArrayOutput{})
	pulumi.RegisterOutputType(GetBudgetSubscriptionFilterNotOutput{})
	pulumi.RegisterOutputType(GetBudgetSubscriptionFilterNotArrayOutput{})
	pulumi.RegisterOutputType(GetBudgetSubscriptionFilterNotDimensionOutput{})
	pulumi.RegisterOutputType(GetBudgetSubscriptionFilterNotDimensionArrayOutput{})
	pulumi.RegisterOutputType(GetBudgetSubscriptionFilterNotTagOutput{})
	pulumi.RegisterOutputType(GetBudgetSubscriptionFilterNotTagArrayOutput{})
	pulumi.RegisterOutputType(GetBudgetSubscriptionFilterTagOutput{})
	pulumi.RegisterOutputType(GetBudgetSubscriptionFilterTagArrayOutput{})
	pulumi.RegisterOutputType(GetBudgetSubscriptionNotificationOutput{})
	pulumi.RegisterOutputType(GetBudgetSubscriptionNotificationArrayOutput{})
	pulumi.RegisterOutputType(GetBudgetSubscriptionTimePeriodOutput{})
	pulumi.RegisterOutputType(GetBudgetSubscriptionTimePeriodArrayOutput{})
}
