// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package consumption

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to access information about an existing Consumption Budget for a specific resource group.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/consumption"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			example, err := consumption.LookupBudgetResourceGroup(ctx, &consumption.LookupBudgetResourceGroupArgs{
//				Name:            "existing",
//				ResourceGroupId: azurerm_resource_group.Example.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("id", example.Id)
//			return nil
//		})
//	}
//
// ```
func LookupBudgetResourceGroup(ctx *pulumi.Context, args *LookupBudgetResourceGroupArgs, opts ...pulumi.InvokeOption) (*LookupBudgetResourceGroupResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupBudgetResourceGroupResult
	err := ctx.Invoke("azure:consumption/getBudgetResourceGroup:getBudgetResourceGroup", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getBudgetResourceGroup.
type LookupBudgetResourceGroupArgs struct {
	// The name of this Consumption Budget.
	Name string `pulumi:"name"`
	// The ID of the subscription.
	ResourceGroupId string `pulumi:"resourceGroupId"`
}

// A collection of values returned by getBudgetResourceGroup.
type LookupBudgetResourceGroupResult struct {
	// The total amount of cost to track with the budget.
	Amount float64 `pulumi:"amount"`
	// A `filter` block as defined below.
	Filters []GetBudgetResourceGroupFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The name of the tag used for the filter.
	Name string `pulumi:"name"`
	// A `notification` block as defined below.
	Notifications   []GetBudgetResourceGroupNotification `pulumi:"notifications"`
	ResourceGroupId string                               `pulumi:"resourceGroupId"`
	// The time covered by a budget.
	TimeGrain string `pulumi:"timeGrain"`
	// A `timePeriod` block as defined below.
	TimePeriods []GetBudgetResourceGroupTimePeriod `pulumi:"timePeriods"`
}

func LookupBudgetResourceGroupOutput(ctx *pulumi.Context, args LookupBudgetResourceGroupOutputArgs, opts ...pulumi.InvokeOption) LookupBudgetResourceGroupResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupBudgetResourceGroupResult, error) {
			args := v.(LookupBudgetResourceGroupArgs)
			r, err := LookupBudgetResourceGroup(ctx, &args, opts...)
			var s LookupBudgetResourceGroupResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupBudgetResourceGroupResultOutput)
}

// A collection of arguments for invoking getBudgetResourceGroup.
type LookupBudgetResourceGroupOutputArgs struct {
	// The name of this Consumption Budget.
	Name pulumi.StringInput `pulumi:"name"`
	// The ID of the subscription.
	ResourceGroupId pulumi.StringInput `pulumi:"resourceGroupId"`
}

func (LookupBudgetResourceGroupOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupBudgetResourceGroupArgs)(nil)).Elem()
}

// A collection of values returned by getBudgetResourceGroup.
type LookupBudgetResourceGroupResultOutput struct{ *pulumi.OutputState }

func (LookupBudgetResourceGroupResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupBudgetResourceGroupResult)(nil)).Elem()
}

func (o LookupBudgetResourceGroupResultOutput) ToLookupBudgetResourceGroupResultOutput() LookupBudgetResourceGroupResultOutput {
	return o
}

func (o LookupBudgetResourceGroupResultOutput) ToLookupBudgetResourceGroupResultOutputWithContext(ctx context.Context) LookupBudgetResourceGroupResultOutput {
	return o
}

// The total amount of cost to track with the budget.
func (o LookupBudgetResourceGroupResultOutput) Amount() pulumi.Float64Output {
	return o.ApplyT(func(v LookupBudgetResourceGroupResult) float64 { return v.Amount }).(pulumi.Float64Output)
}

// A `filter` block as defined below.
func (o LookupBudgetResourceGroupResultOutput) Filters() GetBudgetResourceGroupFilterArrayOutput {
	return o.ApplyT(func(v LookupBudgetResourceGroupResult) []GetBudgetResourceGroupFilter { return v.Filters }).(GetBudgetResourceGroupFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupBudgetResourceGroupResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBudgetResourceGroupResult) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the tag used for the filter.
func (o LookupBudgetResourceGroupResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBudgetResourceGroupResult) string { return v.Name }).(pulumi.StringOutput)
}

// A `notification` block as defined below.
func (o LookupBudgetResourceGroupResultOutput) Notifications() GetBudgetResourceGroupNotificationArrayOutput {
	return o.ApplyT(func(v LookupBudgetResourceGroupResult) []GetBudgetResourceGroupNotification { return v.Notifications }).(GetBudgetResourceGroupNotificationArrayOutput)
}

func (o LookupBudgetResourceGroupResultOutput) ResourceGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBudgetResourceGroupResult) string { return v.ResourceGroupId }).(pulumi.StringOutput)
}

// The time covered by a budget.
func (o LookupBudgetResourceGroupResultOutput) TimeGrain() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBudgetResourceGroupResult) string { return v.TimeGrain }).(pulumi.StringOutput)
}

// A `timePeriod` block as defined below.
func (o LookupBudgetResourceGroupResultOutput) TimePeriods() GetBudgetResourceGroupTimePeriodArrayOutput {
	return o.ApplyT(func(v LookupBudgetResourceGroupResult) []GetBudgetResourceGroupTimePeriod { return v.TimePeriods }).(GetBudgetResourceGroupTimePeriodArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupBudgetResourceGroupResultOutput{})
}
