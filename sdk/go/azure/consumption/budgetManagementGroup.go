// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package consumption

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages a Consumption Budget for a Management Group.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	consumption/budgetManagementGroup "github.com/pulumi/pulumi-azure/sdk/v1/go/azure/consumption/budgetManagementGroup"
//	core/resourceGroup "github.com/pulumi/pulumi-azure/sdk/v1/go/azure/core/resourceGroup"
//	management/group "github.com/pulumi/pulumi-azure/sdk/v1/go/azure/management/group"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
// func main() {
// pulumi.Run(func(ctx *pulumi.Context) error {
// example, err := management/group.NewGroup(ctx, "example", &management/group.GroupArgs{
// DisplayName: "example",
// })
// if err != nil {
// return err
// }
// exampleResourceGroup, err := core/resourceGroup.NewResourceGroup(ctx, "example", &core/resourceGroup.ResourceGroupArgs{
// Name: "example",
// Location: "eastus",
// })
// if err != nil {
// return err
// }
// _, err = consumption/budgetManagementGroup.NewBudgetManagementGroup(ctx, "example", &consumption/budgetManagementGroup.BudgetManagementGroupArgs{
// Name: "example",
// ManagementGroupId: example.Id,
// Amount: 1000,
// TimeGrain: "Monthly",
// TimePeriod: map[string]interface{}{
// "startDate": "2022-06-01T00:00:00Z",
// "endDate": "2022-07-01T00:00:00Z",
// },
// Filter: map[string]interface{}{
// "dimensions": []map[string]interface{}{
// map[string]interface{}{
// "name": "ResourceGroupName",
// "values": []interface{}{
// exampleResourceGroup.Name,
// },
// },
// },
// "tags": []map[string]interface{}{
// map[string]interface{}{
// "name": "foo",
// "values": []string{
// "bar",
// "baz",
// },
// },
// },
// },
// Notifications: []interface{}{
// map[string]interface{}{
// "enabled": true,
// "threshold": 90,
// "operator": "EqualTo",
// "contactEmails": []string{
// "foo@example.com",
// "bar@example.com",
// },
// },
// map[string]interface{}{
// "enabled": false,
// "threshold": 100,
// "operator": "GreaterThan",
// "thresholdType": "Forecasted",
// "contactEmails": []string{
// "foo@example.com",
// "bar@example.com",
// },
// },
// },
// })
// if err != nil {
// return err
// }
// return nil
// })
// }
// ```
//
// ## Import
//
// Management Group Consumption Budgets can be imported using the `resource id`, e.g.
//
// ```sh
// $ pulumi import azure:consumption/budgetManagementGroup:BudgetManagementGroup example /providers/Microsoft.Management/managementGroups/00000000-0000-0000-0000-000000000000/providers/Microsoft.Consumption/budgets/budget1
// ```
type BudgetManagementGroup struct {
	pulumi.CustomResourceState

	// The total amount of cost to track with the budget.
	Amount pulumi.Float64Output `pulumi:"amount"`
	// (Optional) The ETag of the Management Group Consumption Budget.
	Etag pulumi.StringOutput `pulumi:"etag"`
	// A `filter` block as defined below.
	Filter BudgetManagementGroupFilterPtrOutput `pulumi:"filter"`
	// The ID of the Management Group. Changing this forces a new resource to be created.
	ManagementGroupId pulumi.StringOutput `pulumi:"managementGroupId"`
	// The name which should be used for this Management Group Consumption Budget. Changing this forces a new resource to be created.
	Name pulumi.StringOutput `pulumi:"name"`
	// One or more `notification` blocks as defined below.
	Notifications BudgetManagementGroupNotificationArrayOutput `pulumi:"notifications"`
	// The time covered by a budget. Tracking of the amount will be reset based on the time grain. Must be one of `BillingAnnual`, `BillingMonth`, `BillingQuarter`, `Annually`, `Monthly` and `Quarterly`. Defaults to `Monthly`. Changing this forces a new resource to be created.
	TimeGrain pulumi.StringPtrOutput `pulumi:"timeGrain"`
	// A `timePeriod` block as defined below.
	TimePeriod BudgetManagementGroupTimePeriodOutput `pulumi:"timePeriod"`
}

// NewBudgetManagementGroup registers a new resource with the given unique name, arguments, and options.
func NewBudgetManagementGroup(ctx *pulumi.Context,
	name string, args *BudgetManagementGroupArgs, opts ...pulumi.ResourceOption) (*BudgetManagementGroup, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Amount == nil {
		return nil, errors.New("invalid value for required argument 'Amount'")
	}
	if args.ManagementGroupId == nil {
		return nil, errors.New("invalid value for required argument 'ManagementGroupId'")
	}
	if args.Notifications == nil {
		return nil, errors.New("invalid value for required argument 'Notifications'")
	}
	if args.TimePeriod == nil {
		return nil, errors.New("invalid value for required argument 'TimePeriod'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource BudgetManagementGroup
	err := ctx.RegisterResource("azure:consumption/budgetManagementGroup:BudgetManagementGroup", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBudgetManagementGroup gets an existing BudgetManagementGroup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBudgetManagementGroup(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BudgetManagementGroupState, opts ...pulumi.ResourceOption) (*BudgetManagementGroup, error) {
	var resource BudgetManagementGroup
	err := ctx.ReadResource("azure:consumption/budgetManagementGroup:BudgetManagementGroup", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering BudgetManagementGroup resources.
type budgetManagementGroupState struct {
	// The total amount of cost to track with the budget.
	Amount *float64 `pulumi:"amount"`
	// (Optional) The ETag of the Management Group Consumption Budget.
	Etag *string `pulumi:"etag"`
	// A `filter` block as defined below.
	Filter *BudgetManagementGroupFilter `pulumi:"filter"`
	// The ID of the Management Group. Changing this forces a new resource to be created.
	ManagementGroupId *string `pulumi:"managementGroupId"`
	// The name which should be used for this Management Group Consumption Budget. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// One or more `notification` blocks as defined below.
	Notifications []BudgetManagementGroupNotification `pulumi:"notifications"`
	// The time covered by a budget. Tracking of the amount will be reset based on the time grain. Must be one of `BillingAnnual`, `BillingMonth`, `BillingQuarter`, `Annually`, `Monthly` and `Quarterly`. Defaults to `Monthly`. Changing this forces a new resource to be created.
	TimeGrain *string `pulumi:"timeGrain"`
	// A `timePeriod` block as defined below.
	TimePeriod *BudgetManagementGroupTimePeriod `pulumi:"timePeriod"`
}

type BudgetManagementGroupState struct {
	// The total amount of cost to track with the budget.
	Amount pulumi.Float64PtrInput
	// (Optional) The ETag of the Management Group Consumption Budget.
	Etag pulumi.StringPtrInput
	// A `filter` block as defined below.
	Filter BudgetManagementGroupFilterPtrInput
	// The ID of the Management Group. Changing this forces a new resource to be created.
	ManagementGroupId pulumi.StringPtrInput
	// The name which should be used for this Management Group Consumption Budget. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// One or more `notification` blocks as defined below.
	Notifications BudgetManagementGroupNotificationArrayInput
	// The time covered by a budget. Tracking of the amount will be reset based on the time grain. Must be one of `BillingAnnual`, `BillingMonth`, `BillingQuarter`, `Annually`, `Monthly` and `Quarterly`. Defaults to `Monthly`. Changing this forces a new resource to be created.
	TimeGrain pulumi.StringPtrInput
	// A `timePeriod` block as defined below.
	TimePeriod BudgetManagementGroupTimePeriodPtrInput
}

func (BudgetManagementGroupState) ElementType() reflect.Type {
	return reflect.TypeOf((*budgetManagementGroupState)(nil)).Elem()
}

type budgetManagementGroupArgs struct {
	// The total amount of cost to track with the budget.
	Amount float64 `pulumi:"amount"`
	// (Optional) The ETag of the Management Group Consumption Budget.
	Etag *string `pulumi:"etag"`
	// A `filter` block as defined below.
	Filter *BudgetManagementGroupFilter `pulumi:"filter"`
	// The ID of the Management Group. Changing this forces a new resource to be created.
	ManagementGroupId string `pulumi:"managementGroupId"`
	// The name which should be used for this Management Group Consumption Budget. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// One or more `notification` blocks as defined below.
	Notifications []BudgetManagementGroupNotification `pulumi:"notifications"`
	// The time covered by a budget. Tracking of the amount will be reset based on the time grain. Must be one of `BillingAnnual`, `BillingMonth`, `BillingQuarter`, `Annually`, `Monthly` and `Quarterly`. Defaults to `Monthly`. Changing this forces a new resource to be created.
	TimeGrain *string `pulumi:"timeGrain"`
	// A `timePeriod` block as defined below.
	TimePeriod BudgetManagementGroupTimePeriod `pulumi:"timePeriod"`
}

// The set of arguments for constructing a BudgetManagementGroup resource.
type BudgetManagementGroupArgs struct {
	// The total amount of cost to track with the budget.
	Amount pulumi.Float64Input
	// (Optional) The ETag of the Management Group Consumption Budget.
	Etag pulumi.StringPtrInput
	// A `filter` block as defined below.
	Filter BudgetManagementGroupFilterPtrInput
	// The ID of the Management Group. Changing this forces a new resource to be created.
	ManagementGroupId pulumi.StringInput
	// The name which should be used for this Management Group Consumption Budget. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// One or more `notification` blocks as defined below.
	Notifications BudgetManagementGroupNotificationArrayInput
	// The time covered by a budget. Tracking of the amount will be reset based on the time grain. Must be one of `BillingAnnual`, `BillingMonth`, `BillingQuarter`, `Annually`, `Monthly` and `Quarterly`. Defaults to `Monthly`. Changing this forces a new resource to be created.
	TimeGrain pulumi.StringPtrInput
	// A `timePeriod` block as defined below.
	TimePeriod BudgetManagementGroupTimePeriodInput
}

func (BudgetManagementGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*budgetManagementGroupArgs)(nil)).Elem()
}

type BudgetManagementGroupInput interface {
	pulumi.Input

	ToBudgetManagementGroupOutput() BudgetManagementGroupOutput
	ToBudgetManagementGroupOutputWithContext(ctx context.Context) BudgetManagementGroupOutput
}

func (*BudgetManagementGroup) ElementType() reflect.Type {
	return reflect.TypeOf((**BudgetManagementGroup)(nil)).Elem()
}

func (i *BudgetManagementGroup) ToBudgetManagementGroupOutput() BudgetManagementGroupOutput {
	return i.ToBudgetManagementGroupOutputWithContext(context.Background())
}

func (i *BudgetManagementGroup) ToBudgetManagementGroupOutputWithContext(ctx context.Context) BudgetManagementGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BudgetManagementGroupOutput)
}

// BudgetManagementGroupArrayInput is an input type that accepts BudgetManagementGroupArray and BudgetManagementGroupArrayOutput values.
// You can construct a concrete instance of `BudgetManagementGroupArrayInput` via:
//
//	BudgetManagementGroupArray{ BudgetManagementGroupArgs{...} }
type BudgetManagementGroupArrayInput interface {
	pulumi.Input

	ToBudgetManagementGroupArrayOutput() BudgetManagementGroupArrayOutput
	ToBudgetManagementGroupArrayOutputWithContext(context.Context) BudgetManagementGroupArrayOutput
}

type BudgetManagementGroupArray []BudgetManagementGroupInput

func (BudgetManagementGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*BudgetManagementGroup)(nil)).Elem()
}

func (i BudgetManagementGroupArray) ToBudgetManagementGroupArrayOutput() BudgetManagementGroupArrayOutput {
	return i.ToBudgetManagementGroupArrayOutputWithContext(context.Background())
}

func (i BudgetManagementGroupArray) ToBudgetManagementGroupArrayOutputWithContext(ctx context.Context) BudgetManagementGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BudgetManagementGroupArrayOutput)
}

// BudgetManagementGroupMapInput is an input type that accepts BudgetManagementGroupMap and BudgetManagementGroupMapOutput values.
// You can construct a concrete instance of `BudgetManagementGroupMapInput` via:
//
//	BudgetManagementGroupMap{ "key": BudgetManagementGroupArgs{...} }
type BudgetManagementGroupMapInput interface {
	pulumi.Input

	ToBudgetManagementGroupMapOutput() BudgetManagementGroupMapOutput
	ToBudgetManagementGroupMapOutputWithContext(context.Context) BudgetManagementGroupMapOutput
}

type BudgetManagementGroupMap map[string]BudgetManagementGroupInput

func (BudgetManagementGroupMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*BudgetManagementGroup)(nil)).Elem()
}

func (i BudgetManagementGroupMap) ToBudgetManagementGroupMapOutput() BudgetManagementGroupMapOutput {
	return i.ToBudgetManagementGroupMapOutputWithContext(context.Background())
}

func (i BudgetManagementGroupMap) ToBudgetManagementGroupMapOutputWithContext(ctx context.Context) BudgetManagementGroupMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BudgetManagementGroupMapOutput)
}

type BudgetManagementGroupOutput struct{ *pulumi.OutputState }

func (BudgetManagementGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BudgetManagementGroup)(nil)).Elem()
}

func (o BudgetManagementGroupOutput) ToBudgetManagementGroupOutput() BudgetManagementGroupOutput {
	return o
}

func (o BudgetManagementGroupOutput) ToBudgetManagementGroupOutputWithContext(ctx context.Context) BudgetManagementGroupOutput {
	return o
}

// The total amount of cost to track with the budget.
func (o BudgetManagementGroupOutput) Amount() pulumi.Float64Output {
	return o.ApplyT(func(v *BudgetManagementGroup) pulumi.Float64Output { return v.Amount }).(pulumi.Float64Output)
}

// (Optional) The ETag of the Management Group Consumption Budget.
func (o BudgetManagementGroupOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *BudgetManagementGroup) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

// A `filter` block as defined below.
func (o BudgetManagementGroupOutput) Filter() BudgetManagementGroupFilterPtrOutput {
	return o.ApplyT(func(v *BudgetManagementGroup) BudgetManagementGroupFilterPtrOutput { return v.Filter }).(BudgetManagementGroupFilterPtrOutput)
}

// The ID of the Management Group. Changing this forces a new resource to be created.
func (o BudgetManagementGroupOutput) ManagementGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v *BudgetManagementGroup) pulumi.StringOutput { return v.ManagementGroupId }).(pulumi.StringOutput)
}

// The name which should be used for this Management Group Consumption Budget. Changing this forces a new resource to be created.
func (o BudgetManagementGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *BudgetManagementGroup) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// One or more `notification` blocks as defined below.
func (o BudgetManagementGroupOutput) Notifications() BudgetManagementGroupNotificationArrayOutput {
	return o.ApplyT(func(v *BudgetManagementGroup) BudgetManagementGroupNotificationArrayOutput { return v.Notifications }).(BudgetManagementGroupNotificationArrayOutput)
}

// The time covered by a budget. Tracking of the amount will be reset based on the time grain. Must be one of `BillingAnnual`, `BillingMonth`, `BillingQuarter`, `Annually`, `Monthly` and `Quarterly`. Defaults to `Monthly`. Changing this forces a new resource to be created.
func (o BudgetManagementGroupOutput) TimeGrain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BudgetManagementGroup) pulumi.StringPtrOutput { return v.TimeGrain }).(pulumi.StringPtrOutput)
}

// A `timePeriod` block as defined below.
func (o BudgetManagementGroupOutput) TimePeriod() BudgetManagementGroupTimePeriodOutput {
	return o.ApplyT(func(v *BudgetManagementGroup) BudgetManagementGroupTimePeriodOutput { return v.TimePeriod }).(BudgetManagementGroupTimePeriodOutput)
}

type BudgetManagementGroupArrayOutput struct{ *pulumi.OutputState }

func (BudgetManagementGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*BudgetManagementGroup)(nil)).Elem()
}

func (o BudgetManagementGroupArrayOutput) ToBudgetManagementGroupArrayOutput() BudgetManagementGroupArrayOutput {
	return o
}

func (o BudgetManagementGroupArrayOutput) ToBudgetManagementGroupArrayOutputWithContext(ctx context.Context) BudgetManagementGroupArrayOutput {
	return o
}

func (o BudgetManagementGroupArrayOutput) Index(i pulumi.IntInput) BudgetManagementGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *BudgetManagementGroup {
		return vs[0].([]*BudgetManagementGroup)[vs[1].(int)]
	}).(BudgetManagementGroupOutput)
}

type BudgetManagementGroupMapOutput struct{ *pulumi.OutputState }

func (BudgetManagementGroupMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*BudgetManagementGroup)(nil)).Elem()
}

func (o BudgetManagementGroupMapOutput) ToBudgetManagementGroupMapOutput() BudgetManagementGroupMapOutput {
	return o
}

func (o BudgetManagementGroupMapOutput) ToBudgetManagementGroupMapOutputWithContext(ctx context.Context) BudgetManagementGroupMapOutput {
	return o
}

func (o BudgetManagementGroupMapOutput) MapIndex(k pulumi.StringInput) BudgetManagementGroupOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *BudgetManagementGroup {
		return vs[0].(map[string]*BudgetManagementGroup)[vs[1].(string)]
	}).(BudgetManagementGroupOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BudgetManagementGroupInput)(nil)).Elem(), &BudgetManagementGroup{})
	pulumi.RegisterInputType(reflect.TypeOf((*BudgetManagementGroupArrayInput)(nil)).Elem(), BudgetManagementGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BudgetManagementGroupMapInput)(nil)).Elem(), BudgetManagementGroupMap{})
	pulumi.RegisterOutputType(BudgetManagementGroupOutput{})
	pulumi.RegisterOutputType(BudgetManagementGroupArrayOutput{})
	pulumi.RegisterOutputType(BudgetManagementGroupMapOutput{})
}
