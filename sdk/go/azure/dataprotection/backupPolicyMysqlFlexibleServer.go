// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dataprotection

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages a Backup Policy to back up MySQL Flexible Server.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/core"
//	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/dataprotection"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			example, err := core.NewResourceGroup(ctx, "example", &core.ResourceGroupArgs{
//				Name:     pulumi.String("example-resources"),
//				Location: pulumi.String("West Europe"),
//			})
//			if err != nil {
//				return err
//			}
//			exampleBackupVault, err := dataprotection.NewBackupVault(ctx, "example", &dataprotection.BackupVaultArgs{
//				Name:              pulumi.String("example-backup-vault"),
//				ResourceGroupName: example.Name,
//				Location:          example.Location,
//				DatastoreType:     pulumi.String("VaultStore"),
//				Redundancy:        pulumi.String("LocallyRedundant"),
//				Identity: &dataprotection.BackupVaultIdentityArgs{
//					Type: pulumi.String("SystemAssigned"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			_, err = dataprotection.NewBackupPolicyMysqlFlexibleServer(ctx, "example", &dataprotection.BackupPolicyMysqlFlexibleServerArgs{
//				Name:    pulumi.String("example-backup-policy"),
//				VaultId: exampleBackupVault.ID(),
//				BackupRepeatingTimeIntervals: pulumi.StringArray{
//					pulumi.String("R/2021-05-23T02:30:00+00:00/P1W"),
//				},
//				TimeZone: pulumi.String("India Standard Time"),
//				DefaultRetentionRule: &dataprotection.BackupPolicyMysqlFlexibleServerDefaultRetentionRuleArgs{
//					LifeCycles: dataprotection.BackupPolicyMysqlFlexibleServerDefaultRetentionRuleLifeCycleArray{
//						&dataprotection.BackupPolicyMysqlFlexibleServerDefaultRetentionRuleLifeCycleArgs{
//							Duration:      pulumi.String("P4M"),
//							DataStoreType: pulumi.String("VaultStore"),
//						},
//					},
//				},
//				RetentionRules: dataprotection.BackupPolicyMysqlFlexibleServerRetentionRuleArray{
//					&dataprotection.BackupPolicyMysqlFlexibleServerRetentionRuleArgs{
//						Name: pulumi.String("weekly"),
//						LifeCycles: dataprotection.BackupPolicyMysqlFlexibleServerRetentionRuleLifeCycleArray{
//							&dataprotection.BackupPolicyMysqlFlexibleServerRetentionRuleLifeCycleArgs{
//								Duration:      pulumi.String("P6M"),
//								DataStoreType: pulumi.String("VaultStore"),
//							},
//						},
//						Priority: pulumi.Int(20),
//						Criteria: &dataprotection.BackupPolicyMysqlFlexibleServerRetentionRuleCriteriaArgs{
//							AbsoluteCriteria: pulumi.String("FirstOfWeek"),
//						},
//					},
//					&dataprotection.BackupPolicyMysqlFlexibleServerRetentionRuleArgs{
//						Name: pulumi.String("thursday"),
//						LifeCycles: dataprotection.BackupPolicyMysqlFlexibleServerRetentionRuleLifeCycleArray{
//							&dataprotection.BackupPolicyMysqlFlexibleServerRetentionRuleLifeCycleArgs{
//								Duration:      pulumi.String("P1W"),
//								DataStoreType: pulumi.String("VaultStore"),
//							},
//						},
//						Priority: pulumi.Int(25),
//						Criteria: &dataprotection.BackupPolicyMysqlFlexibleServerRetentionRuleCriteriaArgs{
//							DaysOfWeeks: pulumi.StringArray{
//								pulumi.String("Thursday"),
//							},
//							ScheduledBackupTimes: pulumi.StringArray{
//								pulumi.String("2021-05-23T02:30:00Z"),
//							},
//						},
//					},
//					&dataprotection.BackupPolicyMysqlFlexibleServerRetentionRuleArgs{
//						Name: pulumi.String("monthly"),
//						LifeCycles: dataprotection.BackupPolicyMysqlFlexibleServerRetentionRuleLifeCycleArray{
//							&dataprotection.BackupPolicyMysqlFlexibleServerRetentionRuleLifeCycleArgs{
//								Duration:      pulumi.String("P1D"),
//								DataStoreType: pulumi.String("VaultStore"),
//							},
//						},
//						Priority: pulumi.Int(15),
//						Criteria: &dataprotection.BackupPolicyMysqlFlexibleServerRetentionRuleCriteriaArgs{
//							WeeksOfMonths: pulumi.StringArray{
//								pulumi.String("First"),
//								pulumi.String("Last"),
//							},
//							DaysOfWeeks: pulumi.StringArray{
//								pulumi.String("Tuesday"),
//							},
//							ScheduledBackupTimes: pulumi.StringArray{
//								pulumi.String("2021-05-23T02:30:00Z"),
//							},
//						},
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## API Providers
//
// <!-- This section is generated, changes will be overwritten -->
// This resource uses the following Azure API Providers:
//
// * `Microsoft.DataProtection`: 2024-04-01
//
// ## Import
//
// Backup Policy MySQL Flexible Server's can be imported using the `resource id`, e.g.
//
// ```sh
// $ pulumi import azure:dataprotection/backupPolicyMysqlFlexibleServer:BackupPolicyMysqlFlexibleServer example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.DataProtection/backupVaults/vault1/backupPolicies/backupPolicy1
// ```
type BackupPolicyMysqlFlexibleServer struct {
	pulumi.CustomResourceState

	// Specifies a list of repeating time interval. It supports weekly back. It should follow `ISO 8601` repeating time interval format. Changing this forces a new resource to be created.
	BackupRepeatingTimeIntervals pulumi.StringArrayOutput `pulumi:"backupRepeatingTimeIntervals"`
	// A `defaultRetentionRule` block as defined below. Changing this forces a new resource to be created.
	DefaultRetentionRule BackupPolicyMysqlFlexibleServerDefaultRetentionRuleOutput `pulumi:"defaultRetentionRule"`
	// Specifies the name of the Backup Policy for the MySQL Flexible Server. Changing this forces a new resource to be created.
	Name pulumi.StringOutput `pulumi:"name"`
	// One or more `retentionRule` blocks as defined below. Changing this forces a new resource to be created.
	RetentionRules BackupPolicyMysqlFlexibleServerRetentionRuleArrayOutput `pulumi:"retentionRules"`
	// Specifies the Time Zone which should be used by the backup schedule. Changing this forces a new resource to be created.
	TimeZone pulumi.StringPtrOutput `pulumi:"timeZone"`
	// The ID of the Backup Vault where the Backup Policy MySQL Flexible Server should exist. Changing this forces a new resource to be created.
	VaultId pulumi.StringOutput `pulumi:"vaultId"`
}

// NewBackupPolicyMysqlFlexibleServer registers a new resource with the given unique name, arguments, and options.
func NewBackupPolicyMysqlFlexibleServer(ctx *pulumi.Context,
	name string, args *BackupPolicyMysqlFlexibleServerArgs, opts ...pulumi.ResourceOption) (*BackupPolicyMysqlFlexibleServer, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.BackupRepeatingTimeIntervals == nil {
		return nil, errors.New("invalid value for required argument 'BackupRepeatingTimeIntervals'")
	}
	if args.DefaultRetentionRule == nil {
		return nil, errors.New("invalid value for required argument 'DefaultRetentionRule'")
	}
	if args.VaultId == nil {
		return nil, errors.New("invalid value for required argument 'VaultId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource BackupPolicyMysqlFlexibleServer
	err := ctx.RegisterResource("azure:dataprotection/backupPolicyMysqlFlexibleServer:BackupPolicyMysqlFlexibleServer", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBackupPolicyMysqlFlexibleServer gets an existing BackupPolicyMysqlFlexibleServer resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBackupPolicyMysqlFlexibleServer(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BackupPolicyMysqlFlexibleServerState, opts ...pulumi.ResourceOption) (*BackupPolicyMysqlFlexibleServer, error) {
	var resource BackupPolicyMysqlFlexibleServer
	err := ctx.ReadResource("azure:dataprotection/backupPolicyMysqlFlexibleServer:BackupPolicyMysqlFlexibleServer", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering BackupPolicyMysqlFlexibleServer resources.
type backupPolicyMysqlFlexibleServerState struct {
	// Specifies a list of repeating time interval. It supports weekly back. It should follow `ISO 8601` repeating time interval format. Changing this forces a new resource to be created.
	BackupRepeatingTimeIntervals []string `pulumi:"backupRepeatingTimeIntervals"`
	// A `defaultRetentionRule` block as defined below. Changing this forces a new resource to be created.
	DefaultRetentionRule *BackupPolicyMysqlFlexibleServerDefaultRetentionRule `pulumi:"defaultRetentionRule"`
	// Specifies the name of the Backup Policy for the MySQL Flexible Server. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// One or more `retentionRule` blocks as defined below. Changing this forces a new resource to be created.
	RetentionRules []BackupPolicyMysqlFlexibleServerRetentionRule `pulumi:"retentionRules"`
	// Specifies the Time Zone which should be used by the backup schedule. Changing this forces a new resource to be created.
	TimeZone *string `pulumi:"timeZone"`
	// The ID of the Backup Vault where the Backup Policy MySQL Flexible Server should exist. Changing this forces a new resource to be created.
	VaultId *string `pulumi:"vaultId"`
}

type BackupPolicyMysqlFlexibleServerState struct {
	// Specifies a list of repeating time interval. It supports weekly back. It should follow `ISO 8601` repeating time interval format. Changing this forces a new resource to be created.
	BackupRepeatingTimeIntervals pulumi.StringArrayInput
	// A `defaultRetentionRule` block as defined below. Changing this forces a new resource to be created.
	DefaultRetentionRule BackupPolicyMysqlFlexibleServerDefaultRetentionRulePtrInput
	// Specifies the name of the Backup Policy for the MySQL Flexible Server. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// One or more `retentionRule` blocks as defined below. Changing this forces a new resource to be created.
	RetentionRules BackupPolicyMysqlFlexibleServerRetentionRuleArrayInput
	// Specifies the Time Zone which should be used by the backup schedule. Changing this forces a new resource to be created.
	TimeZone pulumi.StringPtrInput
	// The ID of the Backup Vault where the Backup Policy MySQL Flexible Server should exist. Changing this forces a new resource to be created.
	VaultId pulumi.StringPtrInput
}

func (BackupPolicyMysqlFlexibleServerState) ElementType() reflect.Type {
	return reflect.TypeOf((*backupPolicyMysqlFlexibleServerState)(nil)).Elem()
}

type backupPolicyMysqlFlexibleServerArgs struct {
	// Specifies a list of repeating time interval. It supports weekly back. It should follow `ISO 8601` repeating time interval format. Changing this forces a new resource to be created.
	BackupRepeatingTimeIntervals []string `pulumi:"backupRepeatingTimeIntervals"`
	// A `defaultRetentionRule` block as defined below. Changing this forces a new resource to be created.
	DefaultRetentionRule BackupPolicyMysqlFlexibleServerDefaultRetentionRule `pulumi:"defaultRetentionRule"`
	// Specifies the name of the Backup Policy for the MySQL Flexible Server. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// One or more `retentionRule` blocks as defined below. Changing this forces a new resource to be created.
	RetentionRules []BackupPolicyMysqlFlexibleServerRetentionRule `pulumi:"retentionRules"`
	// Specifies the Time Zone which should be used by the backup schedule. Changing this forces a new resource to be created.
	TimeZone *string `pulumi:"timeZone"`
	// The ID of the Backup Vault where the Backup Policy MySQL Flexible Server should exist. Changing this forces a new resource to be created.
	VaultId string `pulumi:"vaultId"`
}

// The set of arguments for constructing a BackupPolicyMysqlFlexibleServer resource.
type BackupPolicyMysqlFlexibleServerArgs struct {
	// Specifies a list of repeating time interval. It supports weekly back. It should follow `ISO 8601` repeating time interval format. Changing this forces a new resource to be created.
	BackupRepeatingTimeIntervals pulumi.StringArrayInput
	// A `defaultRetentionRule` block as defined below. Changing this forces a new resource to be created.
	DefaultRetentionRule BackupPolicyMysqlFlexibleServerDefaultRetentionRuleInput
	// Specifies the name of the Backup Policy for the MySQL Flexible Server. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// One or more `retentionRule` blocks as defined below. Changing this forces a new resource to be created.
	RetentionRules BackupPolicyMysqlFlexibleServerRetentionRuleArrayInput
	// Specifies the Time Zone which should be used by the backup schedule. Changing this forces a new resource to be created.
	TimeZone pulumi.StringPtrInput
	// The ID of the Backup Vault where the Backup Policy MySQL Flexible Server should exist. Changing this forces a new resource to be created.
	VaultId pulumi.StringInput
}

func (BackupPolicyMysqlFlexibleServerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*backupPolicyMysqlFlexibleServerArgs)(nil)).Elem()
}

type BackupPolicyMysqlFlexibleServerInput interface {
	pulumi.Input

	ToBackupPolicyMysqlFlexibleServerOutput() BackupPolicyMysqlFlexibleServerOutput
	ToBackupPolicyMysqlFlexibleServerOutputWithContext(ctx context.Context) BackupPolicyMysqlFlexibleServerOutput
}

func (*BackupPolicyMysqlFlexibleServer) ElementType() reflect.Type {
	return reflect.TypeOf((**BackupPolicyMysqlFlexibleServer)(nil)).Elem()
}

func (i *BackupPolicyMysqlFlexibleServer) ToBackupPolicyMysqlFlexibleServerOutput() BackupPolicyMysqlFlexibleServerOutput {
	return i.ToBackupPolicyMysqlFlexibleServerOutputWithContext(context.Background())
}

func (i *BackupPolicyMysqlFlexibleServer) ToBackupPolicyMysqlFlexibleServerOutputWithContext(ctx context.Context) BackupPolicyMysqlFlexibleServerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupPolicyMysqlFlexibleServerOutput)
}

// BackupPolicyMysqlFlexibleServerArrayInput is an input type that accepts BackupPolicyMysqlFlexibleServerArray and BackupPolicyMysqlFlexibleServerArrayOutput values.
// You can construct a concrete instance of `BackupPolicyMysqlFlexibleServerArrayInput` via:
//
//	BackupPolicyMysqlFlexibleServerArray{ BackupPolicyMysqlFlexibleServerArgs{...} }
type BackupPolicyMysqlFlexibleServerArrayInput interface {
	pulumi.Input

	ToBackupPolicyMysqlFlexibleServerArrayOutput() BackupPolicyMysqlFlexibleServerArrayOutput
	ToBackupPolicyMysqlFlexibleServerArrayOutputWithContext(context.Context) BackupPolicyMysqlFlexibleServerArrayOutput
}

type BackupPolicyMysqlFlexibleServerArray []BackupPolicyMysqlFlexibleServerInput

func (BackupPolicyMysqlFlexibleServerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*BackupPolicyMysqlFlexibleServer)(nil)).Elem()
}

func (i BackupPolicyMysqlFlexibleServerArray) ToBackupPolicyMysqlFlexibleServerArrayOutput() BackupPolicyMysqlFlexibleServerArrayOutput {
	return i.ToBackupPolicyMysqlFlexibleServerArrayOutputWithContext(context.Background())
}

func (i BackupPolicyMysqlFlexibleServerArray) ToBackupPolicyMysqlFlexibleServerArrayOutputWithContext(ctx context.Context) BackupPolicyMysqlFlexibleServerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupPolicyMysqlFlexibleServerArrayOutput)
}

// BackupPolicyMysqlFlexibleServerMapInput is an input type that accepts BackupPolicyMysqlFlexibleServerMap and BackupPolicyMysqlFlexibleServerMapOutput values.
// You can construct a concrete instance of `BackupPolicyMysqlFlexibleServerMapInput` via:
//
//	BackupPolicyMysqlFlexibleServerMap{ "key": BackupPolicyMysqlFlexibleServerArgs{...} }
type BackupPolicyMysqlFlexibleServerMapInput interface {
	pulumi.Input

	ToBackupPolicyMysqlFlexibleServerMapOutput() BackupPolicyMysqlFlexibleServerMapOutput
	ToBackupPolicyMysqlFlexibleServerMapOutputWithContext(context.Context) BackupPolicyMysqlFlexibleServerMapOutput
}

type BackupPolicyMysqlFlexibleServerMap map[string]BackupPolicyMysqlFlexibleServerInput

func (BackupPolicyMysqlFlexibleServerMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*BackupPolicyMysqlFlexibleServer)(nil)).Elem()
}

func (i BackupPolicyMysqlFlexibleServerMap) ToBackupPolicyMysqlFlexibleServerMapOutput() BackupPolicyMysqlFlexibleServerMapOutput {
	return i.ToBackupPolicyMysqlFlexibleServerMapOutputWithContext(context.Background())
}

func (i BackupPolicyMysqlFlexibleServerMap) ToBackupPolicyMysqlFlexibleServerMapOutputWithContext(ctx context.Context) BackupPolicyMysqlFlexibleServerMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupPolicyMysqlFlexibleServerMapOutput)
}

type BackupPolicyMysqlFlexibleServerOutput struct{ *pulumi.OutputState }

func (BackupPolicyMysqlFlexibleServerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BackupPolicyMysqlFlexibleServer)(nil)).Elem()
}

func (o BackupPolicyMysqlFlexibleServerOutput) ToBackupPolicyMysqlFlexibleServerOutput() BackupPolicyMysqlFlexibleServerOutput {
	return o
}

func (o BackupPolicyMysqlFlexibleServerOutput) ToBackupPolicyMysqlFlexibleServerOutputWithContext(ctx context.Context) BackupPolicyMysqlFlexibleServerOutput {
	return o
}

// Specifies a list of repeating time interval. It supports weekly back. It should follow `ISO 8601` repeating time interval format. Changing this forces a new resource to be created.
func (o BackupPolicyMysqlFlexibleServerOutput) BackupRepeatingTimeIntervals() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *BackupPolicyMysqlFlexibleServer) pulumi.StringArrayOutput {
		return v.BackupRepeatingTimeIntervals
	}).(pulumi.StringArrayOutput)
}

// A `defaultRetentionRule` block as defined below. Changing this forces a new resource to be created.
func (o BackupPolicyMysqlFlexibleServerOutput) DefaultRetentionRule() BackupPolicyMysqlFlexibleServerDefaultRetentionRuleOutput {
	return o.ApplyT(func(v *BackupPolicyMysqlFlexibleServer) BackupPolicyMysqlFlexibleServerDefaultRetentionRuleOutput {
		return v.DefaultRetentionRule
	}).(BackupPolicyMysqlFlexibleServerDefaultRetentionRuleOutput)
}

// Specifies the name of the Backup Policy for the MySQL Flexible Server. Changing this forces a new resource to be created.
func (o BackupPolicyMysqlFlexibleServerOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *BackupPolicyMysqlFlexibleServer) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// One or more `retentionRule` blocks as defined below. Changing this forces a new resource to be created.
func (o BackupPolicyMysqlFlexibleServerOutput) RetentionRules() BackupPolicyMysqlFlexibleServerRetentionRuleArrayOutput {
	return o.ApplyT(func(v *BackupPolicyMysqlFlexibleServer) BackupPolicyMysqlFlexibleServerRetentionRuleArrayOutput {
		return v.RetentionRules
	}).(BackupPolicyMysqlFlexibleServerRetentionRuleArrayOutput)
}

// Specifies the Time Zone which should be used by the backup schedule. Changing this forces a new resource to be created.
func (o BackupPolicyMysqlFlexibleServerOutput) TimeZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackupPolicyMysqlFlexibleServer) pulumi.StringPtrOutput { return v.TimeZone }).(pulumi.StringPtrOutput)
}

// The ID of the Backup Vault where the Backup Policy MySQL Flexible Server should exist. Changing this forces a new resource to be created.
func (o BackupPolicyMysqlFlexibleServerOutput) VaultId() pulumi.StringOutput {
	return o.ApplyT(func(v *BackupPolicyMysqlFlexibleServer) pulumi.StringOutput { return v.VaultId }).(pulumi.StringOutput)
}

type BackupPolicyMysqlFlexibleServerArrayOutput struct{ *pulumi.OutputState }

func (BackupPolicyMysqlFlexibleServerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*BackupPolicyMysqlFlexibleServer)(nil)).Elem()
}

func (o BackupPolicyMysqlFlexibleServerArrayOutput) ToBackupPolicyMysqlFlexibleServerArrayOutput() BackupPolicyMysqlFlexibleServerArrayOutput {
	return o
}

func (o BackupPolicyMysqlFlexibleServerArrayOutput) ToBackupPolicyMysqlFlexibleServerArrayOutputWithContext(ctx context.Context) BackupPolicyMysqlFlexibleServerArrayOutput {
	return o
}

func (o BackupPolicyMysqlFlexibleServerArrayOutput) Index(i pulumi.IntInput) BackupPolicyMysqlFlexibleServerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *BackupPolicyMysqlFlexibleServer {
		return vs[0].([]*BackupPolicyMysqlFlexibleServer)[vs[1].(int)]
	}).(BackupPolicyMysqlFlexibleServerOutput)
}

type BackupPolicyMysqlFlexibleServerMapOutput struct{ *pulumi.OutputState }

func (BackupPolicyMysqlFlexibleServerMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*BackupPolicyMysqlFlexibleServer)(nil)).Elem()
}

func (o BackupPolicyMysqlFlexibleServerMapOutput) ToBackupPolicyMysqlFlexibleServerMapOutput() BackupPolicyMysqlFlexibleServerMapOutput {
	return o
}

func (o BackupPolicyMysqlFlexibleServerMapOutput) ToBackupPolicyMysqlFlexibleServerMapOutputWithContext(ctx context.Context) BackupPolicyMysqlFlexibleServerMapOutput {
	return o
}

func (o BackupPolicyMysqlFlexibleServerMapOutput) MapIndex(k pulumi.StringInput) BackupPolicyMysqlFlexibleServerOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *BackupPolicyMysqlFlexibleServer {
		return vs[0].(map[string]*BackupPolicyMysqlFlexibleServer)[vs[1].(string)]
	}).(BackupPolicyMysqlFlexibleServerOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BackupPolicyMysqlFlexibleServerInput)(nil)).Elem(), &BackupPolicyMysqlFlexibleServer{})
	pulumi.RegisterInputType(reflect.TypeOf((*BackupPolicyMysqlFlexibleServerArrayInput)(nil)).Elem(), BackupPolicyMysqlFlexibleServerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BackupPolicyMysqlFlexibleServerMapInput)(nil)).Elem(), BackupPolicyMysqlFlexibleServerMap{})
	pulumi.RegisterOutputType(BackupPolicyMysqlFlexibleServerOutput{})
	pulumi.RegisterOutputType(BackupPolicyMysqlFlexibleServerArrayOutput{})
	pulumi.RegisterOutputType(BackupPolicyMysqlFlexibleServerMapOutput{})
}
