// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dataprotection

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages a Backup Policy to back up PostgreSQL Flexible Server.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/core"
//	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/dataprotection"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			example, err := core.NewResourceGroup(ctx, "example", &core.ResourceGroupArgs{
//				Name:     pulumi.String("example-resources"),
//				Location: pulumi.String("West Europe"),
//			})
//			if err != nil {
//				return err
//			}
//			exampleBackupVault, err := dataprotection.NewBackupVault(ctx, "example", &dataprotection.BackupVaultArgs{
//				Name:              pulumi.String("example-backup-vault"),
//				ResourceGroupName: example.Name,
//				Location:          example.Location,
//				DatastoreType:     pulumi.String("VaultStore"),
//				Redundancy:        pulumi.String("LocallyRedundant"),
//				Identity: &dataprotection.BackupVaultIdentityArgs{
//					Type: pulumi.String("SystemAssigned"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			_, err = dataprotection.NewBackupPolicyPostgresqlFlexibleServer(ctx, "example", &dataprotection.BackupPolicyPostgresqlFlexibleServerArgs{
//				Name:    pulumi.String("example-backup-policy"),
//				VaultId: exampleBackupVault.ID(),
//				BackupRepeatingTimeIntervals: pulumi.StringArray{
//					pulumi.String("R/2021-05-23T02:30:00+00:00/P1W"),
//				},
//				TimeZone: pulumi.String("India Standard Time"),
//				DefaultRetentionRule: &dataprotection.BackupPolicyPostgresqlFlexibleServerDefaultRetentionRuleArgs{
//					LifeCycles: dataprotection.BackupPolicyPostgresqlFlexibleServerDefaultRetentionRuleLifeCycleArray{
//						&dataprotection.BackupPolicyPostgresqlFlexibleServerDefaultRetentionRuleLifeCycleArgs{
//							Duration:      pulumi.String("P4M"),
//							DataStoreType: pulumi.String("VaultStore"),
//						},
//					},
//				},
//				RetentionRules: dataprotection.BackupPolicyPostgresqlFlexibleServerRetentionRuleArray{
//					&dataprotection.BackupPolicyPostgresqlFlexibleServerRetentionRuleArgs{
//						Name: pulumi.String("weekly"),
//						LifeCycles: dataprotection.BackupPolicyPostgresqlFlexibleServerRetentionRuleLifeCycleArray{
//							&dataprotection.BackupPolicyPostgresqlFlexibleServerRetentionRuleLifeCycleArgs{
//								Duration:      pulumi.String("P6M"),
//								DataStoreType: pulumi.String("VaultStore"),
//							},
//						},
//						Priority: pulumi.Int(20),
//						Criteria: &dataprotection.BackupPolicyPostgresqlFlexibleServerRetentionRuleCriteriaArgs{
//							AbsoluteCriteria: pulumi.String("FirstOfWeek"),
//						},
//					},
//					&dataprotection.BackupPolicyPostgresqlFlexibleServerRetentionRuleArgs{
//						Name: pulumi.String("thursday"),
//						LifeCycles: dataprotection.BackupPolicyPostgresqlFlexibleServerRetentionRuleLifeCycleArray{
//							&dataprotection.BackupPolicyPostgresqlFlexibleServerRetentionRuleLifeCycleArgs{
//								Duration:      pulumi.String("P1W"),
//								DataStoreType: pulumi.String("VaultStore"),
//							},
//						},
//						Priority: pulumi.Int(25),
//						Criteria: &dataprotection.BackupPolicyPostgresqlFlexibleServerRetentionRuleCriteriaArgs{
//							DaysOfWeeks: pulumi.StringArray{
//								pulumi.String("Thursday"),
//							},
//							ScheduledBackupTimes: pulumi.StringArray{
//								pulumi.String("2021-05-23T02:30:00Z"),
//							},
//						},
//					},
//					&dataprotection.BackupPolicyPostgresqlFlexibleServerRetentionRuleArgs{
//						Name: pulumi.String("monthly"),
//						LifeCycles: dataprotection.BackupPolicyPostgresqlFlexibleServerRetentionRuleLifeCycleArray{
//							&dataprotection.BackupPolicyPostgresqlFlexibleServerRetentionRuleLifeCycleArgs{
//								Duration:      pulumi.String("P1D"),
//								DataStoreType: pulumi.String("VaultStore"),
//							},
//						},
//						Priority: pulumi.Int(15),
//						Criteria: &dataprotection.BackupPolicyPostgresqlFlexibleServerRetentionRuleCriteriaArgs{
//							WeeksOfMonths: pulumi.StringArray{
//								pulumi.String("First"),
//								pulumi.String("Last"),
//							},
//							DaysOfWeeks: pulumi.StringArray{
//								pulumi.String("Tuesday"),
//							},
//							ScheduledBackupTimes: pulumi.StringArray{
//								pulumi.String("2021-05-23T02:30:00Z"),
//							},
//						},
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## API Providers
//
// <!-- This section is generated, changes will be overwritten -->
// This resource uses the following Azure API Providers:
//
// * `Microsoft.DataProtection`: 2024-04-01
//
// ## Import
//
// Backup Policy PostgreSQL Flexible Server's can be imported using the `resource id`, e.g.
//
// ```sh
// $ pulumi import azure:dataprotection/backupPolicyPostgresqlFlexibleServer:BackupPolicyPostgresqlFlexibleServer example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.DataProtection/backupVaults/vault1/backupPolicies/backupPolicy1
// ```
type BackupPolicyPostgresqlFlexibleServer struct {
	pulumi.CustomResourceState

	// Specifies a list of repeating time interval. It supports weekly back. It should follow `ISO 8601` repeating time interval format. Changing this forces a new resource to be created.
	BackupRepeatingTimeIntervals pulumi.StringArrayOutput `pulumi:"backupRepeatingTimeIntervals"`
	// A `defaultRetentionRule` block as defined below. Changing this forces a new resource to be created.
	DefaultRetentionRule BackupPolicyPostgresqlFlexibleServerDefaultRetentionRuleOutput `pulumi:"defaultRetentionRule"`
	// Specifies the name of the Backup Policy for the PostgreSQL Flexible Server. Changing this forces a new resource to be created.
	Name pulumi.StringOutput `pulumi:"name"`
	// One or more `retentionRule` blocks as defined below. Changing this forces a new resource to be created.
	RetentionRules BackupPolicyPostgresqlFlexibleServerRetentionRuleArrayOutput `pulumi:"retentionRules"`
	// Specifies the Time Zone which should be used by the backup schedule. Changing this forces a new resource to be created.
	TimeZone pulumi.StringPtrOutput `pulumi:"timeZone"`
	// The ID of the Backup Vault where the Backup Policy PostgreSQL Flexible Server should exist. Changing this forces a new resource to be created.
	VaultId pulumi.StringOutput `pulumi:"vaultId"`
}

// NewBackupPolicyPostgresqlFlexibleServer registers a new resource with the given unique name, arguments, and options.
func NewBackupPolicyPostgresqlFlexibleServer(ctx *pulumi.Context,
	name string, args *BackupPolicyPostgresqlFlexibleServerArgs, opts ...pulumi.ResourceOption) (*BackupPolicyPostgresqlFlexibleServer, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.BackupRepeatingTimeIntervals == nil {
		return nil, errors.New("invalid value for required argument 'BackupRepeatingTimeIntervals'")
	}
	if args.DefaultRetentionRule == nil {
		return nil, errors.New("invalid value for required argument 'DefaultRetentionRule'")
	}
	if args.VaultId == nil {
		return nil, errors.New("invalid value for required argument 'VaultId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource BackupPolicyPostgresqlFlexibleServer
	err := ctx.RegisterResource("azure:dataprotection/backupPolicyPostgresqlFlexibleServer:BackupPolicyPostgresqlFlexibleServer", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBackupPolicyPostgresqlFlexibleServer gets an existing BackupPolicyPostgresqlFlexibleServer resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBackupPolicyPostgresqlFlexibleServer(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BackupPolicyPostgresqlFlexibleServerState, opts ...pulumi.ResourceOption) (*BackupPolicyPostgresqlFlexibleServer, error) {
	var resource BackupPolicyPostgresqlFlexibleServer
	err := ctx.ReadResource("azure:dataprotection/backupPolicyPostgresqlFlexibleServer:BackupPolicyPostgresqlFlexibleServer", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering BackupPolicyPostgresqlFlexibleServer resources.
type backupPolicyPostgresqlFlexibleServerState struct {
	// Specifies a list of repeating time interval. It supports weekly back. It should follow `ISO 8601` repeating time interval format. Changing this forces a new resource to be created.
	BackupRepeatingTimeIntervals []string `pulumi:"backupRepeatingTimeIntervals"`
	// A `defaultRetentionRule` block as defined below. Changing this forces a new resource to be created.
	DefaultRetentionRule *BackupPolicyPostgresqlFlexibleServerDefaultRetentionRule `pulumi:"defaultRetentionRule"`
	// Specifies the name of the Backup Policy for the PostgreSQL Flexible Server. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// One or more `retentionRule` blocks as defined below. Changing this forces a new resource to be created.
	RetentionRules []BackupPolicyPostgresqlFlexibleServerRetentionRule `pulumi:"retentionRules"`
	// Specifies the Time Zone which should be used by the backup schedule. Changing this forces a new resource to be created.
	TimeZone *string `pulumi:"timeZone"`
	// The ID of the Backup Vault where the Backup Policy PostgreSQL Flexible Server should exist. Changing this forces a new resource to be created.
	VaultId *string `pulumi:"vaultId"`
}

type BackupPolicyPostgresqlFlexibleServerState struct {
	// Specifies a list of repeating time interval. It supports weekly back. It should follow `ISO 8601` repeating time interval format. Changing this forces a new resource to be created.
	BackupRepeatingTimeIntervals pulumi.StringArrayInput
	// A `defaultRetentionRule` block as defined below. Changing this forces a new resource to be created.
	DefaultRetentionRule BackupPolicyPostgresqlFlexibleServerDefaultRetentionRulePtrInput
	// Specifies the name of the Backup Policy for the PostgreSQL Flexible Server. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// One or more `retentionRule` blocks as defined below. Changing this forces a new resource to be created.
	RetentionRules BackupPolicyPostgresqlFlexibleServerRetentionRuleArrayInput
	// Specifies the Time Zone which should be used by the backup schedule. Changing this forces a new resource to be created.
	TimeZone pulumi.StringPtrInput
	// The ID of the Backup Vault where the Backup Policy PostgreSQL Flexible Server should exist. Changing this forces a new resource to be created.
	VaultId pulumi.StringPtrInput
}

func (BackupPolicyPostgresqlFlexibleServerState) ElementType() reflect.Type {
	return reflect.TypeOf((*backupPolicyPostgresqlFlexibleServerState)(nil)).Elem()
}

type backupPolicyPostgresqlFlexibleServerArgs struct {
	// Specifies a list of repeating time interval. It supports weekly back. It should follow `ISO 8601` repeating time interval format. Changing this forces a new resource to be created.
	BackupRepeatingTimeIntervals []string `pulumi:"backupRepeatingTimeIntervals"`
	// A `defaultRetentionRule` block as defined below. Changing this forces a new resource to be created.
	DefaultRetentionRule BackupPolicyPostgresqlFlexibleServerDefaultRetentionRule `pulumi:"defaultRetentionRule"`
	// Specifies the name of the Backup Policy for the PostgreSQL Flexible Server. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// One or more `retentionRule` blocks as defined below. Changing this forces a new resource to be created.
	RetentionRules []BackupPolicyPostgresqlFlexibleServerRetentionRule `pulumi:"retentionRules"`
	// Specifies the Time Zone which should be used by the backup schedule. Changing this forces a new resource to be created.
	TimeZone *string `pulumi:"timeZone"`
	// The ID of the Backup Vault where the Backup Policy PostgreSQL Flexible Server should exist. Changing this forces a new resource to be created.
	VaultId string `pulumi:"vaultId"`
}

// The set of arguments for constructing a BackupPolicyPostgresqlFlexibleServer resource.
type BackupPolicyPostgresqlFlexibleServerArgs struct {
	// Specifies a list of repeating time interval. It supports weekly back. It should follow `ISO 8601` repeating time interval format. Changing this forces a new resource to be created.
	BackupRepeatingTimeIntervals pulumi.StringArrayInput
	// A `defaultRetentionRule` block as defined below. Changing this forces a new resource to be created.
	DefaultRetentionRule BackupPolicyPostgresqlFlexibleServerDefaultRetentionRuleInput
	// Specifies the name of the Backup Policy for the PostgreSQL Flexible Server. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// One or more `retentionRule` blocks as defined below. Changing this forces a new resource to be created.
	RetentionRules BackupPolicyPostgresqlFlexibleServerRetentionRuleArrayInput
	// Specifies the Time Zone which should be used by the backup schedule. Changing this forces a new resource to be created.
	TimeZone pulumi.StringPtrInput
	// The ID of the Backup Vault where the Backup Policy PostgreSQL Flexible Server should exist. Changing this forces a new resource to be created.
	VaultId pulumi.StringInput
}

func (BackupPolicyPostgresqlFlexibleServerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*backupPolicyPostgresqlFlexibleServerArgs)(nil)).Elem()
}

type BackupPolicyPostgresqlFlexibleServerInput interface {
	pulumi.Input

	ToBackupPolicyPostgresqlFlexibleServerOutput() BackupPolicyPostgresqlFlexibleServerOutput
	ToBackupPolicyPostgresqlFlexibleServerOutputWithContext(ctx context.Context) BackupPolicyPostgresqlFlexibleServerOutput
}

func (*BackupPolicyPostgresqlFlexibleServer) ElementType() reflect.Type {
	return reflect.TypeOf((**BackupPolicyPostgresqlFlexibleServer)(nil)).Elem()
}

func (i *BackupPolicyPostgresqlFlexibleServer) ToBackupPolicyPostgresqlFlexibleServerOutput() BackupPolicyPostgresqlFlexibleServerOutput {
	return i.ToBackupPolicyPostgresqlFlexibleServerOutputWithContext(context.Background())
}

func (i *BackupPolicyPostgresqlFlexibleServer) ToBackupPolicyPostgresqlFlexibleServerOutputWithContext(ctx context.Context) BackupPolicyPostgresqlFlexibleServerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupPolicyPostgresqlFlexibleServerOutput)
}

// BackupPolicyPostgresqlFlexibleServerArrayInput is an input type that accepts BackupPolicyPostgresqlFlexibleServerArray and BackupPolicyPostgresqlFlexibleServerArrayOutput values.
// You can construct a concrete instance of `BackupPolicyPostgresqlFlexibleServerArrayInput` via:
//
//	BackupPolicyPostgresqlFlexibleServerArray{ BackupPolicyPostgresqlFlexibleServerArgs{...} }
type BackupPolicyPostgresqlFlexibleServerArrayInput interface {
	pulumi.Input

	ToBackupPolicyPostgresqlFlexibleServerArrayOutput() BackupPolicyPostgresqlFlexibleServerArrayOutput
	ToBackupPolicyPostgresqlFlexibleServerArrayOutputWithContext(context.Context) BackupPolicyPostgresqlFlexibleServerArrayOutput
}

type BackupPolicyPostgresqlFlexibleServerArray []BackupPolicyPostgresqlFlexibleServerInput

func (BackupPolicyPostgresqlFlexibleServerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*BackupPolicyPostgresqlFlexibleServer)(nil)).Elem()
}

func (i BackupPolicyPostgresqlFlexibleServerArray) ToBackupPolicyPostgresqlFlexibleServerArrayOutput() BackupPolicyPostgresqlFlexibleServerArrayOutput {
	return i.ToBackupPolicyPostgresqlFlexibleServerArrayOutputWithContext(context.Background())
}

func (i BackupPolicyPostgresqlFlexibleServerArray) ToBackupPolicyPostgresqlFlexibleServerArrayOutputWithContext(ctx context.Context) BackupPolicyPostgresqlFlexibleServerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupPolicyPostgresqlFlexibleServerArrayOutput)
}

// BackupPolicyPostgresqlFlexibleServerMapInput is an input type that accepts BackupPolicyPostgresqlFlexibleServerMap and BackupPolicyPostgresqlFlexibleServerMapOutput values.
// You can construct a concrete instance of `BackupPolicyPostgresqlFlexibleServerMapInput` via:
//
//	BackupPolicyPostgresqlFlexibleServerMap{ "key": BackupPolicyPostgresqlFlexibleServerArgs{...} }
type BackupPolicyPostgresqlFlexibleServerMapInput interface {
	pulumi.Input

	ToBackupPolicyPostgresqlFlexibleServerMapOutput() BackupPolicyPostgresqlFlexibleServerMapOutput
	ToBackupPolicyPostgresqlFlexibleServerMapOutputWithContext(context.Context) BackupPolicyPostgresqlFlexibleServerMapOutput
}

type BackupPolicyPostgresqlFlexibleServerMap map[string]BackupPolicyPostgresqlFlexibleServerInput

func (BackupPolicyPostgresqlFlexibleServerMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*BackupPolicyPostgresqlFlexibleServer)(nil)).Elem()
}

func (i BackupPolicyPostgresqlFlexibleServerMap) ToBackupPolicyPostgresqlFlexibleServerMapOutput() BackupPolicyPostgresqlFlexibleServerMapOutput {
	return i.ToBackupPolicyPostgresqlFlexibleServerMapOutputWithContext(context.Background())
}

func (i BackupPolicyPostgresqlFlexibleServerMap) ToBackupPolicyPostgresqlFlexibleServerMapOutputWithContext(ctx context.Context) BackupPolicyPostgresqlFlexibleServerMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupPolicyPostgresqlFlexibleServerMapOutput)
}

type BackupPolicyPostgresqlFlexibleServerOutput struct{ *pulumi.OutputState }

func (BackupPolicyPostgresqlFlexibleServerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BackupPolicyPostgresqlFlexibleServer)(nil)).Elem()
}

func (o BackupPolicyPostgresqlFlexibleServerOutput) ToBackupPolicyPostgresqlFlexibleServerOutput() BackupPolicyPostgresqlFlexibleServerOutput {
	return o
}

func (o BackupPolicyPostgresqlFlexibleServerOutput) ToBackupPolicyPostgresqlFlexibleServerOutputWithContext(ctx context.Context) BackupPolicyPostgresqlFlexibleServerOutput {
	return o
}

// Specifies a list of repeating time interval. It supports weekly back. It should follow `ISO 8601` repeating time interval format. Changing this forces a new resource to be created.
func (o BackupPolicyPostgresqlFlexibleServerOutput) BackupRepeatingTimeIntervals() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *BackupPolicyPostgresqlFlexibleServer) pulumi.StringArrayOutput {
		return v.BackupRepeatingTimeIntervals
	}).(pulumi.StringArrayOutput)
}

// A `defaultRetentionRule` block as defined below. Changing this forces a new resource to be created.
func (o BackupPolicyPostgresqlFlexibleServerOutput) DefaultRetentionRule() BackupPolicyPostgresqlFlexibleServerDefaultRetentionRuleOutput {
	return o.ApplyT(func(v *BackupPolicyPostgresqlFlexibleServer) BackupPolicyPostgresqlFlexibleServerDefaultRetentionRuleOutput {
		return v.DefaultRetentionRule
	}).(BackupPolicyPostgresqlFlexibleServerDefaultRetentionRuleOutput)
}

// Specifies the name of the Backup Policy for the PostgreSQL Flexible Server. Changing this forces a new resource to be created.
func (o BackupPolicyPostgresqlFlexibleServerOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *BackupPolicyPostgresqlFlexibleServer) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// One or more `retentionRule` blocks as defined below. Changing this forces a new resource to be created.
func (o BackupPolicyPostgresqlFlexibleServerOutput) RetentionRules() BackupPolicyPostgresqlFlexibleServerRetentionRuleArrayOutput {
	return o.ApplyT(func(v *BackupPolicyPostgresqlFlexibleServer) BackupPolicyPostgresqlFlexibleServerRetentionRuleArrayOutput {
		return v.RetentionRules
	}).(BackupPolicyPostgresqlFlexibleServerRetentionRuleArrayOutput)
}

// Specifies the Time Zone which should be used by the backup schedule. Changing this forces a new resource to be created.
func (o BackupPolicyPostgresqlFlexibleServerOutput) TimeZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackupPolicyPostgresqlFlexibleServer) pulumi.StringPtrOutput { return v.TimeZone }).(pulumi.StringPtrOutput)
}

// The ID of the Backup Vault where the Backup Policy PostgreSQL Flexible Server should exist. Changing this forces a new resource to be created.
func (o BackupPolicyPostgresqlFlexibleServerOutput) VaultId() pulumi.StringOutput {
	return o.ApplyT(func(v *BackupPolicyPostgresqlFlexibleServer) pulumi.StringOutput { return v.VaultId }).(pulumi.StringOutput)
}

type BackupPolicyPostgresqlFlexibleServerArrayOutput struct{ *pulumi.OutputState }

func (BackupPolicyPostgresqlFlexibleServerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*BackupPolicyPostgresqlFlexibleServer)(nil)).Elem()
}

func (o BackupPolicyPostgresqlFlexibleServerArrayOutput) ToBackupPolicyPostgresqlFlexibleServerArrayOutput() BackupPolicyPostgresqlFlexibleServerArrayOutput {
	return o
}

func (o BackupPolicyPostgresqlFlexibleServerArrayOutput) ToBackupPolicyPostgresqlFlexibleServerArrayOutputWithContext(ctx context.Context) BackupPolicyPostgresqlFlexibleServerArrayOutput {
	return o
}

func (o BackupPolicyPostgresqlFlexibleServerArrayOutput) Index(i pulumi.IntInput) BackupPolicyPostgresqlFlexibleServerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *BackupPolicyPostgresqlFlexibleServer {
		return vs[0].([]*BackupPolicyPostgresqlFlexibleServer)[vs[1].(int)]
	}).(BackupPolicyPostgresqlFlexibleServerOutput)
}

type BackupPolicyPostgresqlFlexibleServerMapOutput struct{ *pulumi.OutputState }

func (BackupPolicyPostgresqlFlexibleServerMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*BackupPolicyPostgresqlFlexibleServer)(nil)).Elem()
}

func (o BackupPolicyPostgresqlFlexibleServerMapOutput) ToBackupPolicyPostgresqlFlexibleServerMapOutput() BackupPolicyPostgresqlFlexibleServerMapOutput {
	return o
}

func (o BackupPolicyPostgresqlFlexibleServerMapOutput) ToBackupPolicyPostgresqlFlexibleServerMapOutputWithContext(ctx context.Context) BackupPolicyPostgresqlFlexibleServerMapOutput {
	return o
}

func (o BackupPolicyPostgresqlFlexibleServerMapOutput) MapIndex(k pulumi.StringInput) BackupPolicyPostgresqlFlexibleServerOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *BackupPolicyPostgresqlFlexibleServer {
		return vs[0].(map[string]*BackupPolicyPostgresqlFlexibleServer)[vs[1].(string)]
	}).(BackupPolicyPostgresqlFlexibleServerOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BackupPolicyPostgresqlFlexibleServerInput)(nil)).Elem(), &BackupPolicyPostgresqlFlexibleServer{})
	pulumi.RegisterInputType(reflect.TypeOf((*BackupPolicyPostgresqlFlexibleServerArrayInput)(nil)).Elem(), BackupPolicyPostgresqlFlexibleServerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BackupPolicyPostgresqlFlexibleServerMapInput)(nil)).Elem(), BackupPolicyPostgresqlFlexibleServerMap{})
	pulumi.RegisterOutputType(BackupPolicyPostgresqlFlexibleServerOutput{})
	pulumi.RegisterOutputType(BackupPolicyPostgresqlFlexibleServerArrayOutput{})
	pulumi.RegisterOutputType(BackupPolicyPostgresqlFlexibleServerMapOutput{})
}
