// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dataprotection

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages a Backup Instance to back up PostgreSQL Flexible Server.
//
// > **Note:** Before using this resource, there are some prerequisite permissions for configure backup and restore. See more details from <https://learn.microsoft.com/azure/backup/backup-azure-database-postgresql-flex-overview>.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/authorization"
//	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/core"
//	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/dataprotection"
//	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/postgresql"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			example, err := core.NewResourceGroup(ctx, "example", &core.ResourceGroupArgs{
//				Name:     pulumi.String("example-resources"),
//				Location: pulumi.String("West Europe"),
//			})
//			if err != nil {
//				return err
//			}
//			exampleFlexibleServer, err := postgresql.NewFlexibleServer(ctx, "example", &postgresql.FlexibleServerArgs{
//				Name:                  pulumi.String("example-postgresqlfs"),
//				ResourceGroupName:     example.Name,
//				Location:              example.Location,
//				AdministratorLogin:    pulumi.String("adminTerraform"),
//				AdministratorPassword: pulumi.String("QAZwsx123"),
//				StorageMb:             pulumi.Int(32768),
//				Version:               pulumi.String("12"),
//				SkuName:               pulumi.String("GP_Standard_D4s_v3"),
//				Zone:                  pulumi.String("2"),
//			})
//			if err != nil {
//				return err
//			}
//			exampleBackupVault, err := dataprotection.NewBackupVault(ctx, "example", &dataprotection.BackupVaultArgs{
//				Name:              pulumi.String("example-backupvault"),
//				ResourceGroupName: example.Name,
//				Location:          example.Location,
//				DatastoreType:     pulumi.String("VaultStore"),
//				Redundancy:        pulumi.String("LocallyRedundant"),
//				SoftDelete:        pulumi.String("Off"),
//				Identity: &dataprotection.BackupVaultIdentityArgs{
//					Type: pulumi.String("SystemAssigned"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			exampleAssignment, err := authorization.NewAssignment(ctx, "example", &authorization.AssignmentArgs{
//				Scope:              example.ID(),
//				RoleDefinitionName: pulumi.String("Reader"),
//				PrincipalId: pulumi.String(exampleBackupVault.Identity.ApplyT(func(identity dataprotection.BackupVaultIdentity) (*string, error) {
//					return &identity.PrincipalId, nil
//				}).(pulumi.StringPtrOutput)),
//			})
//			if err != nil {
//				return err
//			}
//			example2, err := authorization.NewAssignment(ctx, "example2", &authorization.AssignmentArgs{
//				Scope:              exampleFlexibleServer.ID(),
//				RoleDefinitionName: pulumi.String("PostgreSQL Flexible Server Long Term Retention Backup Role"),
//				PrincipalId: pulumi.String(exampleBackupVault.Identity.ApplyT(func(identity dataprotection.BackupVaultIdentity) (*string, error) {
//					return &identity.PrincipalId, nil
//				}).(pulumi.StringPtrOutput)),
//			})
//			if err != nil {
//				return err
//			}
//			exampleBackupPolicyPostgresqlFlexibleServer, err := dataprotection.NewBackupPolicyPostgresqlFlexibleServer(ctx, "example", &dataprotection.BackupPolicyPostgresqlFlexibleServerArgs{
//				Name:    pulumi.String("example-dp"),
//				VaultId: exampleBackupVault.ID(),
//				BackupRepeatingTimeIntervals: pulumi.StringArray{
//					pulumi.String("R/2021-05-23T02:30:00+00:00/P1W"),
//				},
//				DefaultRetentionRule: &dataprotection.BackupPolicyPostgresqlFlexibleServerDefaultRetentionRuleArgs{
//					LifeCycles: dataprotection.BackupPolicyPostgresqlFlexibleServerDefaultRetentionRuleLifeCycleArray{
//						&dataprotection.BackupPolicyPostgresqlFlexibleServerDefaultRetentionRuleLifeCycleArgs{
//							Duration:      pulumi.String("P4M"),
//							DataStoreType: pulumi.String("VaultStore"),
//						},
//					},
//				},
//			}, pulumi.DependsOn([]pulumi.Resource{
//				exampleAssignment,
//				example2,
//			}))
//			if err != nil {
//				return err
//			}
//			_, err = dataprotection.NewBackupInstancePostgresqlFlexibleServer(ctx, "example", &dataprotection.BackupInstancePostgresqlFlexibleServerArgs{
//				Name:           pulumi.String("example-dbi"),
//				Location:       example.Location,
//				VaultId:        exampleBackupVault.ID(),
//				ServerId:       exampleFlexibleServer.ID(),
//				BackupPolicyId: exampleBackupPolicyPostgresqlFlexibleServer.ID(),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Backup Instance PostgreSQL Flexible Servers can be imported using the `resource id`, e.g.
//
// ```sh
// $ pulumi import azure:dataprotection/backupInstancePostgresqlFlexibleServer:BackupInstancePostgresqlFlexibleServer example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.DataProtection/backupVaults/vault1/backupInstances/backupInstance1
// ```
type BackupInstancePostgresqlFlexibleServer struct {
	pulumi.CustomResourceState

	// The ID of the Backup Policy.
	BackupPolicyId pulumi.StringOutput `pulumi:"backupPolicyId"`
	// The location of the source database. Changing this forces a new resource to be created.
	Location pulumi.StringOutput `pulumi:"location"`
	// Specifies the name of the Backup Instance for the PostgreSQL Flexible Server. Changing this forces a new resource to be created.
	Name pulumi.StringOutput `pulumi:"name"`
	// The ID of the source server. Changing this forces a new resource to be created.
	ServerId pulumi.StringOutput `pulumi:"serverId"`
	// The ID of the Backup Vault within which the PostgreSQL Flexible Server Backup Instance should exist. Changing this forces a new resource to be created.
	VaultId pulumi.StringOutput `pulumi:"vaultId"`
}

// NewBackupInstancePostgresqlFlexibleServer registers a new resource with the given unique name, arguments, and options.
func NewBackupInstancePostgresqlFlexibleServer(ctx *pulumi.Context,
	name string, args *BackupInstancePostgresqlFlexibleServerArgs, opts ...pulumi.ResourceOption) (*BackupInstancePostgresqlFlexibleServer, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.BackupPolicyId == nil {
		return nil, errors.New("invalid value for required argument 'BackupPolicyId'")
	}
	if args.ServerId == nil {
		return nil, errors.New("invalid value for required argument 'ServerId'")
	}
	if args.VaultId == nil {
		return nil, errors.New("invalid value for required argument 'VaultId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource BackupInstancePostgresqlFlexibleServer
	err := ctx.RegisterResource("azure:dataprotection/backupInstancePostgresqlFlexibleServer:BackupInstancePostgresqlFlexibleServer", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBackupInstancePostgresqlFlexibleServer gets an existing BackupInstancePostgresqlFlexibleServer resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBackupInstancePostgresqlFlexibleServer(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BackupInstancePostgresqlFlexibleServerState, opts ...pulumi.ResourceOption) (*BackupInstancePostgresqlFlexibleServer, error) {
	var resource BackupInstancePostgresqlFlexibleServer
	err := ctx.ReadResource("azure:dataprotection/backupInstancePostgresqlFlexibleServer:BackupInstancePostgresqlFlexibleServer", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering BackupInstancePostgresqlFlexibleServer resources.
type backupInstancePostgresqlFlexibleServerState struct {
	// The ID of the Backup Policy.
	BackupPolicyId *string `pulumi:"backupPolicyId"`
	// The location of the source database. Changing this forces a new resource to be created.
	Location *string `pulumi:"location"`
	// Specifies the name of the Backup Instance for the PostgreSQL Flexible Server. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// The ID of the source server. Changing this forces a new resource to be created.
	ServerId *string `pulumi:"serverId"`
	// The ID of the Backup Vault within which the PostgreSQL Flexible Server Backup Instance should exist. Changing this forces a new resource to be created.
	VaultId *string `pulumi:"vaultId"`
}

type BackupInstancePostgresqlFlexibleServerState struct {
	// The ID of the Backup Policy.
	BackupPolicyId pulumi.StringPtrInput
	// The location of the source database. Changing this forces a new resource to be created.
	Location pulumi.StringPtrInput
	// Specifies the name of the Backup Instance for the PostgreSQL Flexible Server. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// The ID of the source server. Changing this forces a new resource to be created.
	ServerId pulumi.StringPtrInput
	// The ID of the Backup Vault within which the PostgreSQL Flexible Server Backup Instance should exist. Changing this forces a new resource to be created.
	VaultId pulumi.StringPtrInput
}

func (BackupInstancePostgresqlFlexibleServerState) ElementType() reflect.Type {
	return reflect.TypeOf((*backupInstancePostgresqlFlexibleServerState)(nil)).Elem()
}

type backupInstancePostgresqlFlexibleServerArgs struct {
	// The ID of the Backup Policy.
	BackupPolicyId string `pulumi:"backupPolicyId"`
	// The location of the source database. Changing this forces a new resource to be created.
	Location *string `pulumi:"location"`
	// Specifies the name of the Backup Instance for the PostgreSQL Flexible Server. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// The ID of the source server. Changing this forces a new resource to be created.
	ServerId string `pulumi:"serverId"`
	// The ID of the Backup Vault within which the PostgreSQL Flexible Server Backup Instance should exist. Changing this forces a new resource to be created.
	VaultId string `pulumi:"vaultId"`
}

// The set of arguments for constructing a BackupInstancePostgresqlFlexibleServer resource.
type BackupInstancePostgresqlFlexibleServerArgs struct {
	// The ID of the Backup Policy.
	BackupPolicyId pulumi.StringInput
	// The location of the source database. Changing this forces a new resource to be created.
	Location pulumi.StringPtrInput
	// Specifies the name of the Backup Instance for the PostgreSQL Flexible Server. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// The ID of the source server. Changing this forces a new resource to be created.
	ServerId pulumi.StringInput
	// The ID of the Backup Vault within which the PostgreSQL Flexible Server Backup Instance should exist. Changing this forces a new resource to be created.
	VaultId pulumi.StringInput
}

func (BackupInstancePostgresqlFlexibleServerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*backupInstancePostgresqlFlexibleServerArgs)(nil)).Elem()
}

type BackupInstancePostgresqlFlexibleServerInput interface {
	pulumi.Input

	ToBackupInstancePostgresqlFlexibleServerOutput() BackupInstancePostgresqlFlexibleServerOutput
	ToBackupInstancePostgresqlFlexibleServerOutputWithContext(ctx context.Context) BackupInstancePostgresqlFlexibleServerOutput
}

func (*BackupInstancePostgresqlFlexibleServer) ElementType() reflect.Type {
	return reflect.TypeOf((**BackupInstancePostgresqlFlexibleServer)(nil)).Elem()
}

func (i *BackupInstancePostgresqlFlexibleServer) ToBackupInstancePostgresqlFlexibleServerOutput() BackupInstancePostgresqlFlexibleServerOutput {
	return i.ToBackupInstancePostgresqlFlexibleServerOutputWithContext(context.Background())
}

func (i *BackupInstancePostgresqlFlexibleServer) ToBackupInstancePostgresqlFlexibleServerOutputWithContext(ctx context.Context) BackupInstancePostgresqlFlexibleServerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupInstancePostgresqlFlexibleServerOutput)
}

// BackupInstancePostgresqlFlexibleServerArrayInput is an input type that accepts BackupInstancePostgresqlFlexibleServerArray and BackupInstancePostgresqlFlexibleServerArrayOutput values.
// You can construct a concrete instance of `BackupInstancePostgresqlFlexibleServerArrayInput` via:
//
//	BackupInstancePostgresqlFlexibleServerArray{ BackupInstancePostgresqlFlexibleServerArgs{...} }
type BackupInstancePostgresqlFlexibleServerArrayInput interface {
	pulumi.Input

	ToBackupInstancePostgresqlFlexibleServerArrayOutput() BackupInstancePostgresqlFlexibleServerArrayOutput
	ToBackupInstancePostgresqlFlexibleServerArrayOutputWithContext(context.Context) BackupInstancePostgresqlFlexibleServerArrayOutput
}

type BackupInstancePostgresqlFlexibleServerArray []BackupInstancePostgresqlFlexibleServerInput

func (BackupInstancePostgresqlFlexibleServerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*BackupInstancePostgresqlFlexibleServer)(nil)).Elem()
}

func (i BackupInstancePostgresqlFlexibleServerArray) ToBackupInstancePostgresqlFlexibleServerArrayOutput() BackupInstancePostgresqlFlexibleServerArrayOutput {
	return i.ToBackupInstancePostgresqlFlexibleServerArrayOutputWithContext(context.Background())
}

func (i BackupInstancePostgresqlFlexibleServerArray) ToBackupInstancePostgresqlFlexibleServerArrayOutputWithContext(ctx context.Context) BackupInstancePostgresqlFlexibleServerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupInstancePostgresqlFlexibleServerArrayOutput)
}

// BackupInstancePostgresqlFlexibleServerMapInput is an input type that accepts BackupInstancePostgresqlFlexibleServerMap and BackupInstancePostgresqlFlexibleServerMapOutput values.
// You can construct a concrete instance of `BackupInstancePostgresqlFlexibleServerMapInput` via:
//
//	BackupInstancePostgresqlFlexibleServerMap{ "key": BackupInstancePostgresqlFlexibleServerArgs{...} }
type BackupInstancePostgresqlFlexibleServerMapInput interface {
	pulumi.Input

	ToBackupInstancePostgresqlFlexibleServerMapOutput() BackupInstancePostgresqlFlexibleServerMapOutput
	ToBackupInstancePostgresqlFlexibleServerMapOutputWithContext(context.Context) BackupInstancePostgresqlFlexibleServerMapOutput
}

type BackupInstancePostgresqlFlexibleServerMap map[string]BackupInstancePostgresqlFlexibleServerInput

func (BackupInstancePostgresqlFlexibleServerMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*BackupInstancePostgresqlFlexibleServer)(nil)).Elem()
}

func (i BackupInstancePostgresqlFlexibleServerMap) ToBackupInstancePostgresqlFlexibleServerMapOutput() BackupInstancePostgresqlFlexibleServerMapOutput {
	return i.ToBackupInstancePostgresqlFlexibleServerMapOutputWithContext(context.Background())
}

func (i BackupInstancePostgresqlFlexibleServerMap) ToBackupInstancePostgresqlFlexibleServerMapOutputWithContext(ctx context.Context) BackupInstancePostgresqlFlexibleServerMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupInstancePostgresqlFlexibleServerMapOutput)
}

type BackupInstancePostgresqlFlexibleServerOutput struct{ *pulumi.OutputState }

func (BackupInstancePostgresqlFlexibleServerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BackupInstancePostgresqlFlexibleServer)(nil)).Elem()
}

func (o BackupInstancePostgresqlFlexibleServerOutput) ToBackupInstancePostgresqlFlexibleServerOutput() BackupInstancePostgresqlFlexibleServerOutput {
	return o
}

func (o BackupInstancePostgresqlFlexibleServerOutput) ToBackupInstancePostgresqlFlexibleServerOutputWithContext(ctx context.Context) BackupInstancePostgresqlFlexibleServerOutput {
	return o
}

// The ID of the Backup Policy.
func (o BackupInstancePostgresqlFlexibleServerOutput) BackupPolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v *BackupInstancePostgresqlFlexibleServer) pulumi.StringOutput { return v.BackupPolicyId }).(pulumi.StringOutput)
}

// The location of the source database. Changing this forces a new resource to be created.
func (o BackupInstancePostgresqlFlexibleServerOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *BackupInstancePostgresqlFlexibleServer) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// Specifies the name of the Backup Instance for the PostgreSQL Flexible Server. Changing this forces a new resource to be created.
func (o BackupInstancePostgresqlFlexibleServerOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *BackupInstancePostgresqlFlexibleServer) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The ID of the source server. Changing this forces a new resource to be created.
func (o BackupInstancePostgresqlFlexibleServerOutput) ServerId() pulumi.StringOutput {
	return o.ApplyT(func(v *BackupInstancePostgresqlFlexibleServer) pulumi.StringOutput { return v.ServerId }).(pulumi.StringOutput)
}

// The ID of the Backup Vault within which the PostgreSQL Flexible Server Backup Instance should exist. Changing this forces a new resource to be created.
func (o BackupInstancePostgresqlFlexibleServerOutput) VaultId() pulumi.StringOutput {
	return o.ApplyT(func(v *BackupInstancePostgresqlFlexibleServer) pulumi.StringOutput { return v.VaultId }).(pulumi.StringOutput)
}

type BackupInstancePostgresqlFlexibleServerArrayOutput struct{ *pulumi.OutputState }

func (BackupInstancePostgresqlFlexibleServerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*BackupInstancePostgresqlFlexibleServer)(nil)).Elem()
}

func (o BackupInstancePostgresqlFlexibleServerArrayOutput) ToBackupInstancePostgresqlFlexibleServerArrayOutput() BackupInstancePostgresqlFlexibleServerArrayOutput {
	return o
}

func (o BackupInstancePostgresqlFlexibleServerArrayOutput) ToBackupInstancePostgresqlFlexibleServerArrayOutputWithContext(ctx context.Context) BackupInstancePostgresqlFlexibleServerArrayOutput {
	return o
}

func (o BackupInstancePostgresqlFlexibleServerArrayOutput) Index(i pulumi.IntInput) BackupInstancePostgresqlFlexibleServerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *BackupInstancePostgresqlFlexibleServer {
		return vs[0].([]*BackupInstancePostgresqlFlexibleServer)[vs[1].(int)]
	}).(BackupInstancePostgresqlFlexibleServerOutput)
}

type BackupInstancePostgresqlFlexibleServerMapOutput struct{ *pulumi.OutputState }

func (BackupInstancePostgresqlFlexibleServerMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*BackupInstancePostgresqlFlexibleServer)(nil)).Elem()
}

func (o BackupInstancePostgresqlFlexibleServerMapOutput) ToBackupInstancePostgresqlFlexibleServerMapOutput() BackupInstancePostgresqlFlexibleServerMapOutput {
	return o
}

func (o BackupInstancePostgresqlFlexibleServerMapOutput) ToBackupInstancePostgresqlFlexibleServerMapOutputWithContext(ctx context.Context) BackupInstancePostgresqlFlexibleServerMapOutput {
	return o
}

func (o BackupInstancePostgresqlFlexibleServerMapOutput) MapIndex(k pulumi.StringInput) BackupInstancePostgresqlFlexibleServerOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *BackupInstancePostgresqlFlexibleServer {
		return vs[0].(map[string]*BackupInstancePostgresqlFlexibleServer)[vs[1].(string)]
	}).(BackupInstancePostgresqlFlexibleServerOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BackupInstancePostgresqlFlexibleServerInput)(nil)).Elem(), &BackupInstancePostgresqlFlexibleServer{})
	pulumi.RegisterInputType(reflect.TypeOf((*BackupInstancePostgresqlFlexibleServerArrayInput)(nil)).Elem(), BackupInstancePostgresqlFlexibleServerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BackupInstancePostgresqlFlexibleServerMapInput)(nil)).Elem(), BackupInstancePostgresqlFlexibleServerMap{})
	pulumi.RegisterOutputType(BackupInstancePostgresqlFlexibleServerOutput{})
	pulumi.RegisterOutputType(BackupInstancePostgresqlFlexibleServerArrayOutput{})
	pulumi.RegisterOutputType(BackupInstancePostgresqlFlexibleServerMapOutput{})
}
