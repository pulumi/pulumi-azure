// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dataprotection

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages a Backup Policy to back up Kubernetes Cluster.
//
// ## Import
//
// Backup Policy Kubernetes Cluster's can be imported using the `resource id`, e.g.
//
// ```sh
// $ pulumi import azure:dataprotection/backupPolicyKubernetesCluster:BackupPolicyKubernetesCluster example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.DataProtection/backupVaults/vault1/backupPolicies/backupPolicy1
// ```
type BackupPolicyKubernetesCluster struct {
	pulumi.CustomResourceState

	// Specifies a list of repeating time interval. It supports weekly back. It should follow `ISO 8601` repeating time interval. Changing this forces a new resource to be created.
	BackupRepeatingTimeIntervals pulumi.StringArrayOutput `pulumi:"backupRepeatingTimeIntervals"`
	// A `defaultRetentionRule` block as defined below. Changing this forces a new resource to be created.
	DefaultRetentionRule BackupPolicyKubernetesClusterDefaultRetentionRuleOutput `pulumi:"defaultRetentionRule"`
	// The name which should be used for the Backup Policy Kubernetes Cluster. Changing this forces a new resource to be created.
	Name pulumi.StringOutput `pulumi:"name"`
	// The name of the Resource Group where the Backup Policy Kubernetes Cluster should exist. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringOutput `pulumi:"resourceGroupName"`
	// One or more `retentionRule` blocks as defined below. Changing this forces a new resource to be created.
	RetentionRules BackupPolicyKubernetesClusterRetentionRuleArrayOutput `pulumi:"retentionRules"`
	// Specifies the Time Zone which should be used by the backup schedule. Changing this forces a new resource to be created.
	TimeZone pulumi.StringPtrOutput `pulumi:"timeZone"`
	// The name of the Backup Vault where the Backup Policy Kubernetes Cluster should exist. Changing this forces a new resource to be created.
	VaultName pulumi.StringOutput `pulumi:"vaultName"`
}

// NewBackupPolicyKubernetesCluster registers a new resource with the given unique name, arguments, and options.
func NewBackupPolicyKubernetesCluster(ctx *pulumi.Context,
	name string, args *BackupPolicyKubernetesClusterArgs, opts ...pulumi.ResourceOption) (*BackupPolicyKubernetesCluster, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.BackupRepeatingTimeIntervals == nil {
		return nil, errors.New("invalid value for required argument 'BackupRepeatingTimeIntervals'")
	}
	if args.DefaultRetentionRule == nil {
		return nil, errors.New("invalid value for required argument 'DefaultRetentionRule'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	if args.VaultName == nil {
		return nil, errors.New("invalid value for required argument 'VaultName'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource BackupPolicyKubernetesCluster
	err := ctx.RegisterResource("azure:dataprotection/backupPolicyKubernetesCluster:BackupPolicyKubernetesCluster", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBackupPolicyKubernetesCluster gets an existing BackupPolicyKubernetesCluster resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBackupPolicyKubernetesCluster(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BackupPolicyKubernetesClusterState, opts ...pulumi.ResourceOption) (*BackupPolicyKubernetesCluster, error) {
	var resource BackupPolicyKubernetesCluster
	err := ctx.ReadResource("azure:dataprotection/backupPolicyKubernetesCluster:BackupPolicyKubernetesCluster", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering BackupPolicyKubernetesCluster resources.
type backupPolicyKubernetesClusterState struct {
	// Specifies a list of repeating time interval. It supports weekly back. It should follow `ISO 8601` repeating time interval. Changing this forces a new resource to be created.
	BackupRepeatingTimeIntervals []string `pulumi:"backupRepeatingTimeIntervals"`
	// A `defaultRetentionRule` block as defined below. Changing this forces a new resource to be created.
	DefaultRetentionRule *BackupPolicyKubernetesClusterDefaultRetentionRule `pulumi:"defaultRetentionRule"`
	// The name which should be used for the Backup Policy Kubernetes Cluster. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// The name of the Resource Group where the Backup Policy Kubernetes Cluster should exist. Changing this forces a new resource to be created.
	ResourceGroupName *string `pulumi:"resourceGroupName"`
	// One or more `retentionRule` blocks as defined below. Changing this forces a new resource to be created.
	RetentionRules []BackupPolicyKubernetesClusterRetentionRule `pulumi:"retentionRules"`
	// Specifies the Time Zone which should be used by the backup schedule. Changing this forces a new resource to be created.
	TimeZone *string `pulumi:"timeZone"`
	// The name of the Backup Vault where the Backup Policy Kubernetes Cluster should exist. Changing this forces a new resource to be created.
	VaultName *string `pulumi:"vaultName"`
}

type BackupPolicyKubernetesClusterState struct {
	// Specifies a list of repeating time interval. It supports weekly back. It should follow `ISO 8601` repeating time interval. Changing this forces a new resource to be created.
	BackupRepeatingTimeIntervals pulumi.StringArrayInput
	// A `defaultRetentionRule` block as defined below. Changing this forces a new resource to be created.
	DefaultRetentionRule BackupPolicyKubernetesClusterDefaultRetentionRulePtrInput
	// The name which should be used for the Backup Policy Kubernetes Cluster. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// The name of the Resource Group where the Backup Policy Kubernetes Cluster should exist. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringPtrInput
	// One or more `retentionRule` blocks as defined below. Changing this forces a new resource to be created.
	RetentionRules BackupPolicyKubernetesClusterRetentionRuleArrayInput
	// Specifies the Time Zone which should be used by the backup schedule. Changing this forces a new resource to be created.
	TimeZone pulumi.StringPtrInput
	// The name of the Backup Vault where the Backup Policy Kubernetes Cluster should exist. Changing this forces a new resource to be created.
	VaultName pulumi.StringPtrInput
}

func (BackupPolicyKubernetesClusterState) ElementType() reflect.Type {
	return reflect.TypeOf((*backupPolicyKubernetesClusterState)(nil)).Elem()
}

type backupPolicyKubernetesClusterArgs struct {
	// Specifies a list of repeating time interval. It supports weekly back. It should follow `ISO 8601` repeating time interval. Changing this forces a new resource to be created.
	BackupRepeatingTimeIntervals []string `pulumi:"backupRepeatingTimeIntervals"`
	// A `defaultRetentionRule` block as defined below. Changing this forces a new resource to be created.
	DefaultRetentionRule BackupPolicyKubernetesClusterDefaultRetentionRule `pulumi:"defaultRetentionRule"`
	// The name which should be used for the Backup Policy Kubernetes Cluster. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// The name of the Resource Group where the Backup Policy Kubernetes Cluster should exist. Changing this forces a new resource to be created.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// One or more `retentionRule` blocks as defined below. Changing this forces a new resource to be created.
	RetentionRules []BackupPolicyKubernetesClusterRetentionRule `pulumi:"retentionRules"`
	// Specifies the Time Zone which should be used by the backup schedule. Changing this forces a new resource to be created.
	TimeZone *string `pulumi:"timeZone"`
	// The name of the Backup Vault where the Backup Policy Kubernetes Cluster should exist. Changing this forces a new resource to be created.
	VaultName string `pulumi:"vaultName"`
}

// The set of arguments for constructing a BackupPolicyKubernetesCluster resource.
type BackupPolicyKubernetesClusterArgs struct {
	// Specifies a list of repeating time interval. It supports weekly back. It should follow `ISO 8601` repeating time interval. Changing this forces a new resource to be created.
	BackupRepeatingTimeIntervals pulumi.StringArrayInput
	// A `defaultRetentionRule` block as defined below. Changing this forces a new resource to be created.
	DefaultRetentionRule BackupPolicyKubernetesClusterDefaultRetentionRuleInput
	// The name which should be used for the Backup Policy Kubernetes Cluster. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// The name of the Resource Group where the Backup Policy Kubernetes Cluster should exist. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringInput
	// One or more `retentionRule` blocks as defined below. Changing this forces a new resource to be created.
	RetentionRules BackupPolicyKubernetesClusterRetentionRuleArrayInput
	// Specifies the Time Zone which should be used by the backup schedule. Changing this forces a new resource to be created.
	TimeZone pulumi.StringPtrInput
	// The name of the Backup Vault where the Backup Policy Kubernetes Cluster should exist. Changing this forces a new resource to be created.
	VaultName pulumi.StringInput
}

func (BackupPolicyKubernetesClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*backupPolicyKubernetesClusterArgs)(nil)).Elem()
}

type BackupPolicyKubernetesClusterInput interface {
	pulumi.Input

	ToBackupPolicyKubernetesClusterOutput() BackupPolicyKubernetesClusterOutput
	ToBackupPolicyKubernetesClusterOutputWithContext(ctx context.Context) BackupPolicyKubernetesClusterOutput
}

func (*BackupPolicyKubernetesCluster) ElementType() reflect.Type {
	return reflect.TypeOf((**BackupPolicyKubernetesCluster)(nil)).Elem()
}

func (i *BackupPolicyKubernetesCluster) ToBackupPolicyKubernetesClusterOutput() BackupPolicyKubernetesClusterOutput {
	return i.ToBackupPolicyKubernetesClusterOutputWithContext(context.Background())
}

func (i *BackupPolicyKubernetesCluster) ToBackupPolicyKubernetesClusterOutputWithContext(ctx context.Context) BackupPolicyKubernetesClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupPolicyKubernetesClusterOutput)
}

// BackupPolicyKubernetesClusterArrayInput is an input type that accepts BackupPolicyKubernetesClusterArray and BackupPolicyKubernetesClusterArrayOutput values.
// You can construct a concrete instance of `BackupPolicyKubernetesClusterArrayInput` via:
//
//	BackupPolicyKubernetesClusterArray{ BackupPolicyKubernetesClusterArgs{...} }
type BackupPolicyKubernetesClusterArrayInput interface {
	pulumi.Input

	ToBackupPolicyKubernetesClusterArrayOutput() BackupPolicyKubernetesClusterArrayOutput
	ToBackupPolicyKubernetesClusterArrayOutputWithContext(context.Context) BackupPolicyKubernetesClusterArrayOutput
}

type BackupPolicyKubernetesClusterArray []BackupPolicyKubernetesClusterInput

func (BackupPolicyKubernetesClusterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*BackupPolicyKubernetesCluster)(nil)).Elem()
}

func (i BackupPolicyKubernetesClusterArray) ToBackupPolicyKubernetesClusterArrayOutput() BackupPolicyKubernetesClusterArrayOutput {
	return i.ToBackupPolicyKubernetesClusterArrayOutputWithContext(context.Background())
}

func (i BackupPolicyKubernetesClusterArray) ToBackupPolicyKubernetesClusterArrayOutputWithContext(ctx context.Context) BackupPolicyKubernetesClusterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupPolicyKubernetesClusterArrayOutput)
}

// BackupPolicyKubernetesClusterMapInput is an input type that accepts BackupPolicyKubernetesClusterMap and BackupPolicyKubernetesClusterMapOutput values.
// You can construct a concrete instance of `BackupPolicyKubernetesClusterMapInput` via:
//
//	BackupPolicyKubernetesClusterMap{ "key": BackupPolicyKubernetesClusterArgs{...} }
type BackupPolicyKubernetesClusterMapInput interface {
	pulumi.Input

	ToBackupPolicyKubernetesClusterMapOutput() BackupPolicyKubernetesClusterMapOutput
	ToBackupPolicyKubernetesClusterMapOutputWithContext(context.Context) BackupPolicyKubernetesClusterMapOutput
}

type BackupPolicyKubernetesClusterMap map[string]BackupPolicyKubernetesClusterInput

func (BackupPolicyKubernetesClusterMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*BackupPolicyKubernetesCluster)(nil)).Elem()
}

func (i BackupPolicyKubernetesClusterMap) ToBackupPolicyKubernetesClusterMapOutput() BackupPolicyKubernetesClusterMapOutput {
	return i.ToBackupPolicyKubernetesClusterMapOutputWithContext(context.Background())
}

func (i BackupPolicyKubernetesClusterMap) ToBackupPolicyKubernetesClusterMapOutputWithContext(ctx context.Context) BackupPolicyKubernetesClusterMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupPolicyKubernetesClusterMapOutput)
}

type BackupPolicyKubernetesClusterOutput struct{ *pulumi.OutputState }

func (BackupPolicyKubernetesClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BackupPolicyKubernetesCluster)(nil)).Elem()
}

func (o BackupPolicyKubernetesClusterOutput) ToBackupPolicyKubernetesClusterOutput() BackupPolicyKubernetesClusterOutput {
	return o
}

func (o BackupPolicyKubernetesClusterOutput) ToBackupPolicyKubernetesClusterOutputWithContext(ctx context.Context) BackupPolicyKubernetesClusterOutput {
	return o
}

// Specifies a list of repeating time interval. It supports weekly back. It should follow `ISO 8601` repeating time interval. Changing this forces a new resource to be created.
func (o BackupPolicyKubernetesClusterOutput) BackupRepeatingTimeIntervals() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *BackupPolicyKubernetesCluster) pulumi.StringArrayOutput { return v.BackupRepeatingTimeIntervals }).(pulumi.StringArrayOutput)
}

// A `defaultRetentionRule` block as defined below. Changing this forces a new resource to be created.
func (o BackupPolicyKubernetesClusterOutput) DefaultRetentionRule() BackupPolicyKubernetesClusterDefaultRetentionRuleOutput {
	return o.ApplyT(func(v *BackupPolicyKubernetesCluster) BackupPolicyKubernetesClusterDefaultRetentionRuleOutput {
		return v.DefaultRetentionRule
	}).(BackupPolicyKubernetesClusterDefaultRetentionRuleOutput)
}

// The name which should be used for the Backup Policy Kubernetes Cluster. Changing this forces a new resource to be created.
func (o BackupPolicyKubernetesClusterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *BackupPolicyKubernetesCluster) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The name of the Resource Group where the Backup Policy Kubernetes Cluster should exist. Changing this forces a new resource to be created.
func (o BackupPolicyKubernetesClusterOutput) ResourceGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v *BackupPolicyKubernetesCluster) pulumi.StringOutput { return v.ResourceGroupName }).(pulumi.StringOutput)
}

// One or more `retentionRule` blocks as defined below. Changing this forces a new resource to be created.
func (o BackupPolicyKubernetesClusterOutput) RetentionRules() BackupPolicyKubernetesClusterRetentionRuleArrayOutput {
	return o.ApplyT(func(v *BackupPolicyKubernetesCluster) BackupPolicyKubernetesClusterRetentionRuleArrayOutput {
		return v.RetentionRules
	}).(BackupPolicyKubernetesClusterRetentionRuleArrayOutput)
}

// Specifies the Time Zone which should be used by the backup schedule. Changing this forces a new resource to be created.
func (o BackupPolicyKubernetesClusterOutput) TimeZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackupPolicyKubernetesCluster) pulumi.StringPtrOutput { return v.TimeZone }).(pulumi.StringPtrOutput)
}

// The name of the Backup Vault where the Backup Policy Kubernetes Cluster should exist. Changing this forces a new resource to be created.
func (o BackupPolicyKubernetesClusterOutput) VaultName() pulumi.StringOutput {
	return o.ApplyT(func(v *BackupPolicyKubernetesCluster) pulumi.StringOutput { return v.VaultName }).(pulumi.StringOutput)
}

type BackupPolicyKubernetesClusterArrayOutput struct{ *pulumi.OutputState }

func (BackupPolicyKubernetesClusterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*BackupPolicyKubernetesCluster)(nil)).Elem()
}

func (o BackupPolicyKubernetesClusterArrayOutput) ToBackupPolicyKubernetesClusterArrayOutput() BackupPolicyKubernetesClusterArrayOutput {
	return o
}

func (o BackupPolicyKubernetesClusterArrayOutput) ToBackupPolicyKubernetesClusterArrayOutputWithContext(ctx context.Context) BackupPolicyKubernetesClusterArrayOutput {
	return o
}

func (o BackupPolicyKubernetesClusterArrayOutput) Index(i pulumi.IntInput) BackupPolicyKubernetesClusterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *BackupPolicyKubernetesCluster {
		return vs[0].([]*BackupPolicyKubernetesCluster)[vs[1].(int)]
	}).(BackupPolicyKubernetesClusterOutput)
}

type BackupPolicyKubernetesClusterMapOutput struct{ *pulumi.OutputState }

func (BackupPolicyKubernetesClusterMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*BackupPolicyKubernetesCluster)(nil)).Elem()
}

func (o BackupPolicyKubernetesClusterMapOutput) ToBackupPolicyKubernetesClusterMapOutput() BackupPolicyKubernetesClusterMapOutput {
	return o
}

func (o BackupPolicyKubernetesClusterMapOutput) ToBackupPolicyKubernetesClusterMapOutputWithContext(ctx context.Context) BackupPolicyKubernetesClusterMapOutput {
	return o
}

func (o BackupPolicyKubernetesClusterMapOutput) MapIndex(k pulumi.StringInput) BackupPolicyKubernetesClusterOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *BackupPolicyKubernetesCluster {
		return vs[0].(map[string]*BackupPolicyKubernetesCluster)[vs[1].(string)]
	}).(BackupPolicyKubernetesClusterOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BackupPolicyKubernetesClusterInput)(nil)).Elem(), &BackupPolicyKubernetesCluster{})
	pulumi.RegisterInputType(reflect.TypeOf((*BackupPolicyKubernetesClusterArrayInput)(nil)).Elem(), BackupPolicyKubernetesClusterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BackupPolicyKubernetesClusterMapInput)(nil)).Elem(), BackupPolicyKubernetesClusterMap{})
	pulumi.RegisterOutputType(BackupPolicyKubernetesClusterOutput{})
	pulumi.RegisterOutputType(BackupPolicyKubernetesClusterArrayOutput{})
	pulumi.RegisterOutputType(BackupPolicyKubernetesClusterMapOutput{})
}
