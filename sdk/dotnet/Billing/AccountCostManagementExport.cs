// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Billing
{
    /// <summary>
    /// Manages a Cost Management Export for a Billing Account.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using Azure = Pulumi.Azure;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var exampleResourceGroup = new Azure.Core.ResourceGroup("exampleResourceGroup", new()
    ///     {
    ///         Location = "West Europe",
    ///     });
    /// 
    ///     var exampleAccount = new Azure.Storage.Account("exampleAccount", new()
    ///     {
    ///         ResourceGroupName = exampleResourceGroup.Name,
    ///         Location = exampleResourceGroup.Location,
    ///         AccountTier = "Standard",
    ///         AccountReplicationType = "LRS",
    ///     });
    /// 
    ///     var exampleContainer = new Azure.Storage.Container("exampleContainer", new()
    ///     {
    ///         StorageAccountName = exampleAccount.Name,
    ///     });
    /// 
    ///     var exampleAccountCostManagementExport = new Azure.Billing.AccountCostManagementExport("exampleAccountCostManagementExport", new()
    ///     {
    ///         BillingAccountId = "example",
    ///         RecurrenceType = "Monthly",
    ///         RecurrencePeriodStartDate = "2020-08-18T00:00:00Z",
    ///         RecurrencePeriodEndDate = "2020-09-18T00:00:00Z",
    ///         ExportDataStorageLocation = new Azure.Billing.Inputs.AccountCostManagementExportExportDataStorageLocationArgs
    ///         {
    ///             ContainerId = exampleContainer.ResourceManagerId,
    ///             RootFolderPath = "/root/updated",
    ///         },
    ///         ExportDataOptions = new Azure.Billing.Inputs.AccountCostManagementExportExportDataOptionsArgs
    ///         {
    ///             Type = "Usage",
    ///             TimeFrame = "WeekToDate",
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Billing Account Cost Management Exports can be imported using the `resource id`, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import azure:billing/accountCostManagementExport:AccountCostManagementExport example /providers/Microsoft.Billing/billingAccounts/12345678/providers/Microsoft.CostManagement/exports/export1
    /// ```
    /// </summary>
    [AzureResourceType("azure:billing/accountCostManagementExport:AccountCostManagementExport")]
    public partial class AccountCostManagementExport : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Is the cost management export active? Default is `true`.
        /// </summary>
        [Output("active")]
        public Output<bool?> Active { get; private set; } = null!;

        /// <summary>
        /// The id of the billing account on which to create an export. Changing this forces a new resource to be created.
        /// </summary>
        [Output("billingAccountId")]
        public Output<string> BillingAccountId { get; private set; } = null!;

        /// <summary>
        /// A `export_data_options` block as defined below.
        /// </summary>
        [Output("exportDataOptions")]
        public Output<Outputs.AccountCostManagementExportExportDataOptions> ExportDataOptions { get; private set; } = null!;

        /// <summary>
        /// A `export_data_storage_location` block as defined below.
        /// </summary>
        [Output("exportDataStorageLocation")]
        public Output<Outputs.AccountCostManagementExportExportDataStorageLocation> ExportDataStorageLocation { get; private set; } = null!;

        /// <summary>
        /// Specifies the name of the Cost Management Export. Changing this forces a new resource to be created.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The date the export will stop capturing information.
        /// </summary>
        [Output("recurrencePeriodEndDate")]
        public Output<string> RecurrencePeriodEndDate { get; private set; } = null!;

        /// <summary>
        /// The date the export will start capturing information.
        /// </summary>
        [Output("recurrencePeriodStartDate")]
        public Output<string> RecurrencePeriodStartDate { get; private set; } = null!;

        /// <summary>
        /// How often the requested information will be exported. Valid values include `Annually`, `Daily`, `Monthly`, `Weekly`.
        /// </summary>
        [Output("recurrenceType")]
        public Output<string> RecurrenceType { get; private set; } = null!;


        /// <summary>
        /// Create a AccountCostManagementExport resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public AccountCostManagementExport(string name, AccountCostManagementExportArgs args, CustomResourceOptions? options = null)
            : base("azure:billing/accountCostManagementExport:AccountCostManagementExport", name, args ?? new AccountCostManagementExportArgs(), MakeResourceOptions(options, ""))
        {
        }

        private AccountCostManagementExport(string name, Input<string> id, AccountCostManagementExportState? state = null, CustomResourceOptions? options = null)
            : base("azure:billing/accountCostManagementExport:AccountCostManagementExport", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing AccountCostManagementExport resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static AccountCostManagementExport Get(string name, Input<string> id, AccountCostManagementExportState? state = null, CustomResourceOptions? options = null)
        {
            return new AccountCostManagementExport(name, id, state, options);
        }
    }

    public sealed class AccountCostManagementExportArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Is the cost management export active? Default is `true`.
        /// </summary>
        [Input("active")]
        public Input<bool>? Active { get; set; }

        /// <summary>
        /// The id of the billing account on which to create an export. Changing this forces a new resource to be created.
        /// </summary>
        [Input("billingAccountId", required: true)]
        public Input<string> BillingAccountId { get; set; } = null!;

        /// <summary>
        /// A `export_data_options` block as defined below.
        /// </summary>
        [Input("exportDataOptions", required: true)]
        public Input<Inputs.AccountCostManagementExportExportDataOptionsArgs> ExportDataOptions { get; set; } = null!;

        /// <summary>
        /// A `export_data_storage_location` block as defined below.
        /// </summary>
        [Input("exportDataStorageLocation", required: true)]
        public Input<Inputs.AccountCostManagementExportExportDataStorageLocationArgs> ExportDataStorageLocation { get; set; } = null!;

        /// <summary>
        /// Specifies the name of the Cost Management Export. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The date the export will stop capturing information.
        /// </summary>
        [Input("recurrencePeriodEndDate", required: true)]
        public Input<string> RecurrencePeriodEndDate { get; set; } = null!;

        /// <summary>
        /// The date the export will start capturing information.
        /// </summary>
        [Input("recurrencePeriodStartDate", required: true)]
        public Input<string> RecurrencePeriodStartDate { get; set; } = null!;

        /// <summary>
        /// How often the requested information will be exported. Valid values include `Annually`, `Daily`, `Monthly`, `Weekly`.
        /// </summary>
        [Input("recurrenceType", required: true)]
        public Input<string> RecurrenceType { get; set; } = null!;

        public AccountCostManagementExportArgs()
        {
        }
        public static new AccountCostManagementExportArgs Empty => new AccountCostManagementExportArgs();
    }

    public sealed class AccountCostManagementExportState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Is the cost management export active? Default is `true`.
        /// </summary>
        [Input("active")]
        public Input<bool>? Active { get; set; }

        /// <summary>
        /// The id of the billing account on which to create an export. Changing this forces a new resource to be created.
        /// </summary>
        [Input("billingAccountId")]
        public Input<string>? BillingAccountId { get; set; }

        /// <summary>
        /// A `export_data_options` block as defined below.
        /// </summary>
        [Input("exportDataOptions")]
        public Input<Inputs.AccountCostManagementExportExportDataOptionsGetArgs>? ExportDataOptions { get; set; }

        /// <summary>
        /// A `export_data_storage_location` block as defined below.
        /// </summary>
        [Input("exportDataStorageLocation")]
        public Input<Inputs.AccountCostManagementExportExportDataStorageLocationGetArgs>? ExportDataStorageLocation { get; set; }

        /// <summary>
        /// Specifies the name of the Cost Management Export. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The date the export will stop capturing information.
        /// </summary>
        [Input("recurrencePeriodEndDate")]
        public Input<string>? RecurrencePeriodEndDate { get; set; }

        /// <summary>
        /// The date the export will start capturing information.
        /// </summary>
        [Input("recurrencePeriodStartDate")]
        public Input<string>? RecurrencePeriodStartDate { get; set; }

        /// <summary>
        /// How often the requested information will be exported. Valid values include `Annually`, `Daily`, `Monthly`, `Weekly`.
        /// </summary>
        [Input("recurrenceType")]
        public Input<string>? RecurrenceType { get; set; }

        public AccountCostManagementExportState()
        {
        }
        public static new AccountCostManagementExportState Empty => new AccountCostManagementExportState();
    }
}
