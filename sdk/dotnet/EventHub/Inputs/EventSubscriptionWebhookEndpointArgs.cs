// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.EventHub.Inputs
{

    public sealed class EventSubscriptionWebhookEndpointArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The Azure Active Directory Application ID or URI to get the access token that will be included as the bearer token in delivery requests.
        /// </summary>
        [Input("activeDirectoryAppIdOrUri")]
        public Input<string>? ActiveDirectoryAppIdOrUri { get; set; }

        /// <summary>
        /// The Azure Active Directory Tenant ID to get the access token that will be included as the bearer token in delivery requests.
        /// </summary>
        [Input("activeDirectoryTenantId")]
        public Input<string>? ActiveDirectoryTenantId { get; set; }

        /// <summary>
        /// The base url of the webhook where the Event Subscription will receive events.
        /// </summary>
        [Input("baseUrl")]
        public Input<string>? BaseUrl { get; set; }

        /// <summary>
        /// Maximum number of events per batch.
        /// </summary>
        [Input("maxEventsPerBatch")]
        public Input<int>? MaxEventsPerBatch { get; set; }

        /// <summary>
        /// Preferred batch size in Kilobytes.
        /// </summary>
        [Input("preferredBatchSizeInKilobytes")]
        public Input<int>? PreferredBatchSizeInKilobytes { get; set; }

        /// <summary>
        /// Specifies the url of the webhook where the Event Subscription will receive events.
        /// </summary>
        [Input("url", required: true)]
        public Input<string> Url { get; set; } = null!;

        public EventSubscriptionWebhookEndpointArgs()
        {
        }
        public static new EventSubscriptionWebhookEndpointArgs Empty => new EventSubscriptionWebhookEndpointArgs();
    }
}
