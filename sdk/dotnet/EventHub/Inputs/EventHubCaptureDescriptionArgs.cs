// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.EventHub.Inputs
{

    public sealed class EventHubCaptureDescriptionArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// A `destination` block as defined below.
        /// </summary>
        [Input("destination", required: true)]
        public Input<Inputs.EventHubCaptureDescriptionDestinationArgs> Destination { get; set; } = null!;

        /// <summary>
        /// Specifies if the Capture Description is Enabled.
        /// </summary>
        [Input("enabled", required: true)]
        public Input<bool> Enabled { get; set; } = null!;

        /// <summary>
        /// Specifies the Encoding used for the Capture Description. Possible values are `Avro` and `AvroDeflate`.
        /// </summary>
        [Input("encoding", required: true)]
        public Input<string> Encoding { get; set; } = null!;

        /// <summary>
        /// Specifies the time interval in seconds at which the capture will happen. Values can be between `60` and `900` seconds. Defaults to `300` seconds.
        /// </summary>
        [Input("intervalInSeconds")]
        public Input<int>? IntervalInSeconds { get; set; }

        /// <summary>
        /// Specifies the amount of data built up in your EventHub before a Capture Operation occurs. Value should be between `10485760` and `524288000`  bytes. Defaults to `314572800` bytes.
        /// </summary>
        [Input("sizeLimitInBytes")]
        public Input<int>? SizeLimitInBytes { get; set; }

        /// <summary>
        /// Specifies if empty files should not be emitted if no events occur during the Capture time window.  Defaults to `false`.
        /// </summary>
        [Input("skipEmptyArchives")]
        public Input<bool>? SkipEmptyArchives { get; set; }

        public EventHubCaptureDescriptionArgs()
        {
        }
    }
}
