// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.EventHub.Inputs
{

    public sealed class EventHubNamespaceNetworkRulesetsArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The default action to take when a rule is not matched. Possible values are `Allow` and `Deny`.
        /// </summary>
        [Input("defaultAction", required: true)]
        public Input<string> DefaultAction { get; set; } = null!;

        [Input("ipRules")]
        private InputList<Inputs.EventHubNamespaceNetworkRulesetsIpRuleArgs>? _ipRules;

        /// <summary>
        /// One or more `ip_rule` blocks as defined below.
        /// </summary>
        public InputList<Inputs.EventHubNamespaceNetworkRulesetsIpRuleArgs> IpRules
        {
            get => _ipRules ?? (_ipRules = new InputList<Inputs.EventHubNamespaceNetworkRulesetsIpRuleArgs>());
            set => _ipRules = value;
        }

        /// <summary>
        /// Is public network access enabled for the EventHub Namespace? Defaults to `true`.
        /// </summary>
        [Input("publicNetworkAccessEnabled")]
        public Input<bool>? PublicNetworkAccessEnabled { get; set; }

        /// <summary>
        /// Whether Trusted Microsoft Services are allowed to bypass firewall.
        /// </summary>
        [Input("trustedServiceAccessEnabled")]
        public Input<bool>? TrustedServiceAccessEnabled { get; set; }

        [Input("virtualNetworkRules")]
        private InputList<Inputs.EventHubNamespaceNetworkRulesetsVirtualNetworkRuleArgs>? _virtualNetworkRules;

        /// <summary>
        /// One or more `virtual_network_rule` blocks as defined below.
        /// </summary>
        public InputList<Inputs.EventHubNamespaceNetworkRulesetsVirtualNetworkRuleArgs> VirtualNetworkRules
        {
            get => _virtualNetworkRules ?? (_virtualNetworkRules = new InputList<Inputs.EventHubNamespaceNetworkRulesetsVirtualNetworkRuleArgs>());
            set => _virtualNetworkRules = value;
        }

        public EventHubNamespaceNetworkRulesetsArgs()
        {
        }
        public static new EventHubNamespaceNetworkRulesetsArgs Empty => new EventHubNamespaceNetworkRulesetsArgs();
    }
}
