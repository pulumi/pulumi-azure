// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.ContainerApp
{
    public static class GetEnvironmentCertificate
    {
        /// <summary>
        /// Use this data source to access information about an existing Container App Environment Certificate.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Azure = Pulumi.Azure;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleEnvironment = Azure.ContainerApp.GetEnvironment.Invoke(new()
        ///     {
        ///         Name = "example-environment",
        ///         ResourceGroupName = "example-resources",
        ///     });
        /// 
        ///     var exampleEnvironmentCertificate = Azure.ContainerApp.GetEnvironmentCertificate.Invoke(new()
        ///     {
        ///         Name = "mycertificate",
        ///         ContainerAppEnvironmentId = exampleEnvironment.Apply(getEnvironmentResult =&gt; getEnvironmentResult.Id),
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetEnvironmentCertificateResult> InvokeAsync(GetEnvironmentCertificateArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetEnvironmentCertificateResult>("azure:containerapp/getEnvironmentCertificate:getEnvironmentCertificate", args ?? new GetEnvironmentCertificateArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to access information about an existing Container App Environment Certificate.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Azure = Pulumi.Azure;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleEnvironment = Azure.ContainerApp.GetEnvironment.Invoke(new()
        ///     {
        ///         Name = "example-environment",
        ///         ResourceGroupName = "example-resources",
        ///     });
        /// 
        ///     var exampleEnvironmentCertificate = Azure.ContainerApp.GetEnvironmentCertificate.Invoke(new()
        ///     {
        ///         Name = "mycertificate",
        ///         ContainerAppEnvironmentId = exampleEnvironment.Apply(getEnvironmentResult =&gt; getEnvironmentResult.Id),
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetEnvironmentCertificateResult> Invoke(GetEnvironmentCertificateInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetEnvironmentCertificateResult>("azure:containerapp/getEnvironmentCertificate:getEnvironmentCertificate", args ?? new GetEnvironmentCertificateInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetEnvironmentCertificateArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the Container App Environment to configure this Certificate on. Changing this forces a new resource to be created.
        /// </summary>
        [Input("containerAppEnvironmentId", required: true)]
        public string ContainerAppEnvironmentId { get; set; } = null!;

        /// <summary>
        /// The name of the Container Apps Certificate. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        public GetEnvironmentCertificateArgs()
        {
        }
        public static new GetEnvironmentCertificateArgs Empty => new GetEnvironmentCertificateArgs();
    }

    public sealed class GetEnvironmentCertificateInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the Container App Environment to configure this Certificate on. Changing this forces a new resource to be created.
        /// </summary>
        [Input("containerAppEnvironmentId", required: true)]
        public Input<string> ContainerAppEnvironmentId { get; set; } = null!;

        /// <summary>
        /// The name of the Container Apps Certificate. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        public GetEnvironmentCertificateInvokeArgs()
        {
        }
        public static new GetEnvironmentCertificateInvokeArgs Empty => new GetEnvironmentCertificateInvokeArgs();
    }


    [OutputType]
    public sealed class GetEnvironmentCertificateResult
    {
        public readonly string ContainerAppEnvironmentId;
        /// <summary>
        /// The expiration date for the Certificate.
        /// </summary>
        public readonly string ExpirationDate;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The date of issue for the Certificate.
        /// </summary>
        public readonly string IssueDate;
        /// <summary>
        /// The Certificate Issuer.
        /// </summary>
        public readonly string Issuer;
        public readonly string Name;
        /// <summary>
        /// The Subject Name for the Certificate.
        /// </summary>
        public readonly string SubjectName;
        /// <summary>
        /// A mapping of tags assigned to the resource.
        /// </summary>
        public readonly ImmutableDictionary<string, string> Tags;
        /// <summary>
        /// The Thumbprint of the Certificate.
        /// </summary>
        public readonly string Thumbprint;

        [OutputConstructor]
        private GetEnvironmentCertificateResult(
            string containerAppEnvironmentId,

            string expirationDate,

            string id,

            string issueDate,

            string issuer,

            string name,

            string subjectName,

            ImmutableDictionary<string, string> tags,

            string thumbprint)
        {
            ContainerAppEnvironmentId = containerAppEnvironmentId;
            ExpirationDate = expirationDate;
            Id = id;
            IssueDate = issueDate;
            Issuer = issuer;
            Name = name;
            SubjectName = subjectName;
            Tags = tags;
            Thumbprint = thumbprint;
        }
    }
}
