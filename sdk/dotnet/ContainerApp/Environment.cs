// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.ContainerApp
{
    /// <summary>
    /// Manages a Container App Environment.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Azure = Pulumi.Azure;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Azure.Core.ResourceGroup("example", new()
    ///     {
    ///         Name = "example-resources",
    ///         Location = "West Europe",
    ///     });
    /// 
    ///     var exampleAnalyticsWorkspace = new Azure.OperationalInsights.AnalyticsWorkspace("example", new()
    ///     {
    ///         Name = "example-workspace",
    ///         Location = example.Location,
    ///         ResourceGroupName = example.Name,
    ///         Sku = "PerGB2018",
    ///         RetentionInDays = 30,
    ///     });
    /// 
    ///     var exampleEnvironment = new Azure.ContainerApp.Environment("example", new()
    ///     {
    ///         Name = "my-environment",
    ///         Location = example.Location,
    ///         ResourceGroupName = example.Name,
    ///         LogsDestination = "log-analytics",
    ///         LogAnalyticsWorkspaceId = exampleAnalyticsWorkspace.Id,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## API Providers
    /// 
    /// &lt;!-- This section is generated, changes will be overwritten --&gt;
    /// This resource uses the following Azure API Providers:
    /// 
    /// * `Microsoft.App` - 2025-01-01
    /// 
    /// * `Microsoft.OperationalInsights` - 2020-08-01
    /// 
    /// ## Import
    /// 
    /// A Container App Environment can be imported using the `resource id`, e.g.
    /// 
    /// ```sh
    /// $ pulumi import azure:containerapp/environment:Environment example "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resGroup1/providers/Microsoft.App/managedEnvironments/myEnvironment"
    /// ```
    /// </summary>
    [AzureResourceType("azure:containerapp/environment:Environment")]
    public partial class Environment : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The ID of the Custom Domain Verification for this Container App Environment.
        /// </summary>
        [Output("customDomainVerificationId")]
        public Output<string> CustomDomainVerificationId { get; private set; } = null!;

        /// <summary>
        /// Application Insights connection string used by Dapr to export Service to Service communication telemetry. Changing this forces a new resource to be created.
        /// </summary>
        [Output("daprApplicationInsightsConnectionString")]
        public Output<string?> DaprApplicationInsightsConnectionString { get; private set; } = null!;

        /// <summary>
        /// The default, publicly resolvable, name of this Container App Environment.
        /// </summary>
        [Output("defaultDomain")]
        public Output<string> DefaultDomain { get; private set; } = null!;

        /// <summary>
        /// The network addressing in which the Container Apps in this Container App Environment will reside in CIDR notation.
        /// </summary>
        [Output("dockerBridgeCidr")]
        public Output<string> DockerBridgeCidr { get; private set; } = null!;

        /// <summary>
        /// An `identity` block as defined below.
        /// </summary>
        [Output("identity")]
        public Output<Outputs.EnvironmentIdentity?> Identity { get; private set; } = null!;

        /// <summary>
        /// Name of the platform-managed resource group created for the Managed Environment to host infrastructure resources. Changing this forces a new resource to be created.
        /// 
        /// &gt; **Note:** Only valid if a `workload_profile` is specified. If `infrastructure_subnet_id` is specified, this resource group will be created in the same subscription as `infrastructure_subnet_id`.
        /// </summary>
        [Output("infrastructureResourceGroupName")]
        public Output<string?> InfrastructureResourceGroupName { get; private set; } = null!;

        /// <summary>
        /// The existing Subnet to use for the Container Apps Control Plane. Changing this forces a new resource to be created. 
        /// 
        /// &gt; **Note:** The Subnet must have a `/21` or larger address space.
        /// </summary>
        [Output("infrastructureSubnetId")]
        public Output<string?> InfrastructureSubnetId { get; private set; } = null!;

        /// <summary>
        /// Should the Container Environment operate in Internal Load Balancing Mode? Defaults to `false`. Changing this forces a new resource to be created.
        /// 
        /// &gt; **Note:** can only be set to `true` if `infrastructure_subnet_id` is specified.
        /// </summary>
        [Output("internalLoadBalancerEnabled")]
        public Output<bool?> InternalLoadBalancerEnabled { get; private set; } = null!;

        /// <summary>
        /// Specifies the supported Azure location where the Container App Environment is to exist. Changing this forces a new resource to be created.
        /// </summary>
        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// The ID for the Log Analytics Workspace to link this Container Apps Managed Environment to. 
        /// 
        /// &gt; **Note:** required if `logs_destination` is set to `log-analytics`. Cannot be set if `logs_destination` is set to `azure-monitor`.
        /// </summary>
        [Output("logAnalyticsWorkspaceId")]
        public Output<string?> LogAnalyticsWorkspaceId { get; private set; } = null!;

        /// <summary>
        /// Where the application logs will be saved for this Container Apps Managed Environment. Possible values include `log-analytics` and `azure-monitor`. Omitting this value will result in logs being streamed only.
        /// </summary>
        [Output("logsDestination")]
        public Output<string> LogsDestination { get; private set; } = null!;

        /// <summary>
        /// Should mutual transport layer security (mTLS) be enabled? Defaults to `false`.
        /// 
        /// &gt; **Note:** This feature is in public preview. Enabling mTLS for your applications may increase response latency and reduce maximum throughput in high-load scenarios.
        /// </summary>
        [Output("mutualTlsEnabled")]
        public Output<bool?> MutualTlsEnabled { get; private set; } = null!;

        /// <summary>
        /// The name of the Container Apps Managed Environment. Changing this forces a new resource to be created.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The IP range, in CIDR notation, that is reserved for environment infrastructure IP addresses.
        /// </summary>
        [Output("platformReservedCidr")]
        public Output<string> PlatformReservedCidr { get; private set; } = null!;

        /// <summary>
        /// The IP address from the IP range defined by `platform_reserved_cidr` that is reserved for the internal DNS server.
        /// </summary>
        [Output("platformReservedDnsIpAddress")]
        public Output<string> PlatformReservedDnsIpAddress { get; private set; } = null!;

        /// <summary>
        /// The name of the resource group in which the Container App Environment is to be created. Changing this forces a new resource to be created.
        /// </summary>
        [Output("resourceGroupName")]
        public Output<string> ResourceGroupName { get; private set; } = null!;

        /// <summary>
        /// The Static IP address of the Environment.
        /// </summary>
        [Output("staticIpAddress")]
        public Output<string> StaticIpAddress { get; private set; } = null!;

        /// <summary>
        /// A mapping of tags to assign to the resource.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// One or more `workload_profile` blocks as defined below.
        /// </summary>
        [Output("workloadProfiles")]
        public Output<ImmutableArray<Outputs.EnvironmentWorkloadProfile>> WorkloadProfiles { get; private set; } = null!;

        /// <summary>
        /// Should the Container App Environment be created with Zone Redundancy enabled? Defaults to `false`. Changing this forces a new resource to be created.
        /// 
        /// &gt; **Note:** can only be set to `true` if `infrastructure_subnet_id` is specified.
        /// </summary>
        [Output("zoneRedundancyEnabled")]
        public Output<bool?> ZoneRedundancyEnabled { get; private set; } = null!;


        /// <summary>
        /// Create a Environment resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Environment(string name, EnvironmentArgs args, CustomResourceOptions? options = null)
            : base("azure:containerapp/environment:Environment", name, args ?? new EnvironmentArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Environment(string name, Input<string> id, EnvironmentState? state = null, CustomResourceOptions? options = null)
            : base("azure:containerapp/environment:Environment", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                AdditionalSecretOutputs =
                {
                    "daprApplicationInsightsConnectionString",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Environment resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Environment Get(string name, Input<string> id, EnvironmentState? state = null, CustomResourceOptions? options = null)
        {
            return new Environment(name, id, state, options);
        }
    }

    public sealed class EnvironmentArgs : global::Pulumi.ResourceArgs
    {
        [Input("daprApplicationInsightsConnectionString")]
        private Input<string>? _daprApplicationInsightsConnectionString;

        /// <summary>
        /// Application Insights connection string used by Dapr to export Service to Service communication telemetry. Changing this forces a new resource to be created.
        /// </summary>
        public Input<string>? DaprApplicationInsightsConnectionString
        {
            get => _daprApplicationInsightsConnectionString;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _daprApplicationInsightsConnectionString = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// An `identity` block as defined below.
        /// </summary>
        [Input("identity")]
        public Input<Inputs.EnvironmentIdentityArgs>? Identity { get; set; }

        /// <summary>
        /// Name of the platform-managed resource group created for the Managed Environment to host infrastructure resources. Changing this forces a new resource to be created.
        /// 
        /// &gt; **Note:** Only valid if a `workload_profile` is specified. If `infrastructure_subnet_id` is specified, this resource group will be created in the same subscription as `infrastructure_subnet_id`.
        /// </summary>
        [Input("infrastructureResourceGroupName")]
        public Input<string>? InfrastructureResourceGroupName { get; set; }

        /// <summary>
        /// The existing Subnet to use for the Container Apps Control Plane. Changing this forces a new resource to be created. 
        /// 
        /// &gt; **Note:** The Subnet must have a `/21` or larger address space.
        /// </summary>
        [Input("infrastructureSubnetId")]
        public Input<string>? InfrastructureSubnetId { get; set; }

        /// <summary>
        /// Should the Container Environment operate in Internal Load Balancing Mode? Defaults to `false`. Changing this forces a new resource to be created.
        /// 
        /// &gt; **Note:** can only be set to `true` if `infrastructure_subnet_id` is specified.
        /// </summary>
        [Input("internalLoadBalancerEnabled")]
        public Input<bool>? InternalLoadBalancerEnabled { get; set; }

        /// <summary>
        /// Specifies the supported Azure location where the Container App Environment is to exist. Changing this forces a new resource to be created.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// The ID for the Log Analytics Workspace to link this Container Apps Managed Environment to. 
        /// 
        /// &gt; **Note:** required if `logs_destination` is set to `log-analytics`. Cannot be set if `logs_destination` is set to `azure-monitor`.
        /// </summary>
        [Input("logAnalyticsWorkspaceId")]
        public Input<string>? LogAnalyticsWorkspaceId { get; set; }

        /// <summary>
        /// Where the application logs will be saved for this Container Apps Managed Environment. Possible values include `log-analytics` and `azure-monitor`. Omitting this value will result in logs being streamed only.
        /// </summary>
        [Input("logsDestination")]
        public Input<string>? LogsDestination { get; set; }

        /// <summary>
        /// Should mutual transport layer security (mTLS) be enabled? Defaults to `false`.
        /// 
        /// &gt; **Note:** This feature is in public preview. Enabling mTLS for your applications may increase response latency and reduce maximum throughput in high-load scenarios.
        /// </summary>
        [Input("mutualTlsEnabled")]
        public Input<bool>? MutualTlsEnabled { get; set; }

        /// <summary>
        /// The name of the Container Apps Managed Environment. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The name of the resource group in which the Container App Environment is to be created. Changing this forces a new resource to be created.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// A mapping of tags to assign to the resource.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("workloadProfiles")]
        private InputList<Inputs.EnvironmentWorkloadProfileArgs>? _workloadProfiles;

        /// <summary>
        /// One or more `workload_profile` blocks as defined below.
        /// </summary>
        public InputList<Inputs.EnvironmentWorkloadProfileArgs> WorkloadProfiles
        {
            get => _workloadProfiles ?? (_workloadProfiles = new InputList<Inputs.EnvironmentWorkloadProfileArgs>());
            set => _workloadProfiles = value;
        }

        /// <summary>
        /// Should the Container App Environment be created with Zone Redundancy enabled? Defaults to `false`. Changing this forces a new resource to be created.
        /// 
        /// &gt; **Note:** can only be set to `true` if `infrastructure_subnet_id` is specified.
        /// </summary>
        [Input("zoneRedundancyEnabled")]
        public Input<bool>? ZoneRedundancyEnabled { get; set; }

        public EnvironmentArgs()
        {
        }
        public static new EnvironmentArgs Empty => new EnvironmentArgs();
    }

    public sealed class EnvironmentState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the Custom Domain Verification for this Container App Environment.
        /// </summary>
        [Input("customDomainVerificationId")]
        public Input<string>? CustomDomainVerificationId { get; set; }

        [Input("daprApplicationInsightsConnectionString")]
        private Input<string>? _daprApplicationInsightsConnectionString;

        /// <summary>
        /// Application Insights connection string used by Dapr to export Service to Service communication telemetry. Changing this forces a new resource to be created.
        /// </summary>
        public Input<string>? DaprApplicationInsightsConnectionString
        {
            get => _daprApplicationInsightsConnectionString;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _daprApplicationInsightsConnectionString = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// The default, publicly resolvable, name of this Container App Environment.
        /// </summary>
        [Input("defaultDomain")]
        public Input<string>? DefaultDomain { get; set; }

        /// <summary>
        /// The network addressing in which the Container Apps in this Container App Environment will reside in CIDR notation.
        /// </summary>
        [Input("dockerBridgeCidr")]
        public Input<string>? DockerBridgeCidr { get; set; }

        /// <summary>
        /// An `identity` block as defined below.
        /// </summary>
        [Input("identity")]
        public Input<Inputs.EnvironmentIdentityGetArgs>? Identity { get; set; }

        /// <summary>
        /// Name of the platform-managed resource group created for the Managed Environment to host infrastructure resources. Changing this forces a new resource to be created.
        /// 
        /// &gt; **Note:** Only valid if a `workload_profile` is specified. If `infrastructure_subnet_id` is specified, this resource group will be created in the same subscription as `infrastructure_subnet_id`.
        /// </summary>
        [Input("infrastructureResourceGroupName")]
        public Input<string>? InfrastructureResourceGroupName { get; set; }

        /// <summary>
        /// The existing Subnet to use for the Container Apps Control Plane. Changing this forces a new resource to be created. 
        /// 
        /// &gt; **Note:** The Subnet must have a `/21` or larger address space.
        /// </summary>
        [Input("infrastructureSubnetId")]
        public Input<string>? InfrastructureSubnetId { get; set; }

        /// <summary>
        /// Should the Container Environment operate in Internal Load Balancing Mode? Defaults to `false`. Changing this forces a new resource to be created.
        /// 
        /// &gt; **Note:** can only be set to `true` if `infrastructure_subnet_id` is specified.
        /// </summary>
        [Input("internalLoadBalancerEnabled")]
        public Input<bool>? InternalLoadBalancerEnabled { get; set; }

        /// <summary>
        /// Specifies the supported Azure location where the Container App Environment is to exist. Changing this forces a new resource to be created.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// The ID for the Log Analytics Workspace to link this Container Apps Managed Environment to. 
        /// 
        /// &gt; **Note:** required if `logs_destination` is set to `log-analytics`. Cannot be set if `logs_destination` is set to `azure-monitor`.
        /// </summary>
        [Input("logAnalyticsWorkspaceId")]
        public Input<string>? LogAnalyticsWorkspaceId { get; set; }

        /// <summary>
        /// Where the application logs will be saved for this Container Apps Managed Environment. Possible values include `log-analytics` and `azure-monitor`. Omitting this value will result in logs being streamed only.
        /// </summary>
        [Input("logsDestination")]
        public Input<string>? LogsDestination { get; set; }

        /// <summary>
        /// Should mutual transport layer security (mTLS) be enabled? Defaults to `false`.
        /// 
        /// &gt; **Note:** This feature is in public preview. Enabling mTLS for your applications may increase response latency and reduce maximum throughput in high-load scenarios.
        /// </summary>
        [Input("mutualTlsEnabled")]
        public Input<bool>? MutualTlsEnabled { get; set; }

        /// <summary>
        /// The name of the Container Apps Managed Environment. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The IP range, in CIDR notation, that is reserved for environment infrastructure IP addresses.
        /// </summary>
        [Input("platformReservedCidr")]
        public Input<string>? PlatformReservedCidr { get; set; }

        /// <summary>
        /// The IP address from the IP range defined by `platform_reserved_cidr` that is reserved for the internal DNS server.
        /// </summary>
        [Input("platformReservedDnsIpAddress")]
        public Input<string>? PlatformReservedDnsIpAddress { get; set; }

        /// <summary>
        /// The name of the resource group in which the Container App Environment is to be created. Changing this forces a new resource to be created.
        /// </summary>
        [Input("resourceGroupName")]
        public Input<string>? ResourceGroupName { get; set; }

        /// <summary>
        /// The Static IP address of the Environment.
        /// </summary>
        [Input("staticIpAddress")]
        public Input<string>? StaticIpAddress { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// A mapping of tags to assign to the resource.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("workloadProfiles")]
        private InputList<Inputs.EnvironmentWorkloadProfileGetArgs>? _workloadProfiles;

        /// <summary>
        /// One or more `workload_profile` blocks as defined below.
        /// </summary>
        public InputList<Inputs.EnvironmentWorkloadProfileGetArgs> WorkloadProfiles
        {
            get => _workloadProfiles ?? (_workloadProfiles = new InputList<Inputs.EnvironmentWorkloadProfileGetArgs>());
            set => _workloadProfiles = value;
        }

        /// <summary>
        /// Should the Container App Environment be created with Zone Redundancy enabled? Defaults to `false`. Changing this forces a new resource to be created.
        /// 
        /// &gt; **Note:** can only be set to `true` if `infrastructure_subnet_id` is specified.
        /// </summary>
        [Input("zoneRedundancyEnabled")]
        public Input<bool>? ZoneRedundancyEnabled { get; set; }

        public EnvironmentState()
        {
        }
        public static new EnvironmentState Empty => new EnvironmentState();
    }
}
