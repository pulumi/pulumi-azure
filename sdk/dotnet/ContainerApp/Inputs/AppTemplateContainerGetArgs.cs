// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.ContainerApp.Inputs
{

    public sealed class AppTemplateContainerGetArgs : global::Pulumi.ResourceArgs
    {
        [Input("args")]
        private InputList<string>? _args;

        /// <summary>
        /// A list of extra arguments to pass to the container.
        /// </summary>
        public InputList<string> Args
        {
            get => _args ?? (_args = new InputList<string>());
            set => _args = value;
        }

        [Input("commands")]
        private InputList<string>? _commands;

        /// <summary>
        /// A command to pass to the container to override the default. This is provided as a list of command line elements without spaces.
        /// </summary>
        public InputList<string> Commands
        {
            get => _commands ?? (_commands = new InputList<string>());
            set => _commands = value;
        }

        /// <summary>
        /// The amount of vCPU to allocate to the container. Possible values include `0.25`, `0.5`, `0.75`, `1.0`, `1.25`, `1.5`, `1.75`, and `2.0`. 
        /// 
        /// &gt; **NOTE:** `cpu` and `memory` must be specified in `0.25'/'0.5Gi` combination increments. e.g. `1.0` / `2.0` or `0.5` / `1.0`
        /// </summary>
        [Input("cpu", required: true)]
        public Input<double> Cpu { get; set; } = null!;

        [Input("envs")]
        private InputList<Inputs.AppTemplateContainerEnvGetArgs>? _envs;

        /// <summary>
        /// One or more `env` blocks as detailed below.
        /// </summary>
        public InputList<Inputs.AppTemplateContainerEnvGetArgs> Envs
        {
            get => _envs ?? (_envs = new InputList<Inputs.AppTemplateContainerEnvGetArgs>());
            set => _envs = value;
        }

        /// <summary>
        /// The amount of ephemeral storage available to the Container App. 
        /// 
        /// &gt; **NOTE:** `ephemeral_storage` is currently in preview and not configurable at this time.
        /// </summary>
        [Input("ephemeralStorage")]
        public Input<string>? EphemeralStorage { get; set; }

        /// <summary>
        /// The image to use to create the container.
        /// </summary>
        [Input("image", required: true)]
        public Input<string> Image { get; set; } = null!;

        [Input("livenessProbes")]
        private InputList<Inputs.AppTemplateContainerLivenessProbeGetArgs>? _livenessProbes;

        /// <summary>
        /// A `liveness_probe` block as detailed below.
        /// </summary>
        public InputList<Inputs.AppTemplateContainerLivenessProbeGetArgs> LivenessProbes
        {
            get => _livenessProbes ?? (_livenessProbes = new InputList<Inputs.AppTemplateContainerLivenessProbeGetArgs>());
            set => _livenessProbes = value;
        }

        /// <summary>
        /// The amount of memory to allocate to the container. Possible values are `0.5Gi`, `1Gi`, `1.5Gi`, `2Gi`, `2.5Gi`, `3Gi`, `3.5Gi` and `4Gi`. 
        /// 
        /// &gt; **NOTE:** `cpu` and `memory` must be specified in `0.25'/'0.5Gi` combination increments. e.g. `1.25` / `2.5Gi` or `0.75` / `1.5Gi`
        /// </summary>
        [Input("memory", required: true)]
        public Input<string> Memory { get; set; } = null!;

        /// <summary>
        /// The name of the container
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        [Input("readinessProbes")]
        private InputList<Inputs.AppTemplateContainerReadinessProbeGetArgs>? _readinessProbes;

        /// <summary>
        /// A `readiness_probe` block as detailed below.
        /// </summary>
        public InputList<Inputs.AppTemplateContainerReadinessProbeGetArgs> ReadinessProbes
        {
            get => _readinessProbes ?? (_readinessProbes = new InputList<Inputs.AppTemplateContainerReadinessProbeGetArgs>());
            set => _readinessProbes = value;
        }

        [Input("startupProbes")]
        private InputList<Inputs.AppTemplateContainerStartupProbeGetArgs>? _startupProbes;

        /// <summary>
        /// A `startup_probe` block as detailed below.
        /// </summary>
        public InputList<Inputs.AppTemplateContainerStartupProbeGetArgs> StartupProbes
        {
            get => _startupProbes ?? (_startupProbes = new InputList<Inputs.AppTemplateContainerStartupProbeGetArgs>());
            set => _startupProbes = value;
        }

        [Input("volumeMounts")]
        private InputList<Inputs.AppTemplateContainerVolumeMountGetArgs>? _volumeMounts;

        /// <summary>
        /// A `volume_mounts` block as detailed below.
        /// </summary>
        public InputList<Inputs.AppTemplateContainerVolumeMountGetArgs> VolumeMounts
        {
            get => _volumeMounts ?? (_volumeMounts = new InputList<Inputs.AppTemplateContainerVolumeMountGetArgs>());
            set => _volumeMounts = value;
        }

        public AppTemplateContainerGetArgs()
        {
        }
        public static new AppTemplateContainerGetArgs Empty => new AppTemplateContainerGetArgs();
    }
}
