// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.ContainerApp.Outputs
{

    [OutputType]
    public sealed class EnvironmentWorkloadProfile
    {
        /// <summary>
        /// The maximum number of instances of workload profile that can be deployed in the Container App Environment.
        /// </summary>
        public readonly int? MaximumCount;
        /// <summary>
        /// The minimum number of instances of workload profile that can be deployed in the Container App Environment.
        /// </summary>
        public readonly int? MinimumCount;
        /// <summary>
        /// The name of the workload profile.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Workload profile type for the workloads to run on. Possible values include `Consumption`, `D4`, `D8`, `D16`, `D32`, `E4`, `E8`, `E16` and `E32`.
        /// 
        /// &gt; **Note:** A `Consumption` type must have a name of `Consumption` and an environment may only have one `Consumption` Workload Profile.
        /// 
        /// &gt; **Note:** Defining a `Consumption` profile is optional, however, Environments created without an initial Workload Profile cannot have them added at a later time and must be recreated. Similarly, an environment created with Profiles must always have at least one defined Profile, removing all profiles will force a recreation of the resource.
        /// </summary>
        public readonly string WorkloadProfileType;

        [OutputConstructor]
        private EnvironmentWorkloadProfile(
            int? maximumCount,

            int? minimumCount,

            string name,

            string workloadProfileType)
        {
            MaximumCount = maximumCount;
            MinimumCount = minimumCount;
            Name = name;
            WorkloadProfileType = workloadProfileType;
        }
    }
}
