// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.ContainerApp.Outputs
{

    [OutputType]
    public sealed class GetAppTemplateContainerReadinessProbeResult
    {
        /// <summary>
        /// The number of consecutive failures required to consider this probe as failed.
        /// </summary>
        public readonly int FailureCountThreshold;
        /// <summary>
        /// A `Header` block as detailed below.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetAppTemplateContainerReadinessProbeHeaderResult> Headers;
        /// <summary>
        /// The value for the host header which should be sent with this probe.
        /// </summary>
        public readonly string Host;
        /// <summary>
        /// The number of seconds elapsed after the container has started before the probe is initiated.
        /// </summary>
        public readonly int InitialDelay;
        /// <summary>
        /// How often, in seconds, the probe should run.
        /// </summary>
        public readonly int IntervalSeconds;
        /// <summary>
        /// The path in the container at which to mount this volume.
        /// </summary>
        public readonly string Path;
        /// <summary>
        /// The port number on which to connect.
        /// </summary>
        public readonly int Port;
        /// <summary>
        /// The number of consecutive successful responses required to consider this probe as successful.
        /// </summary>
        public readonly int SuccessCountThreshold;
        /// <summary>
        /// Time in seconds after which the probe times out.
        /// </summary>
        public readonly int Timeout;
        /// <summary>
        /// The transport method for the Ingress.
        /// </summary>
        public readonly string Transport;

        [OutputConstructor]
        private GetAppTemplateContainerReadinessProbeResult(
            int failureCountThreshold,

            ImmutableArray<Outputs.GetAppTemplateContainerReadinessProbeHeaderResult> headers,

            string host,

            int initialDelay,

            int intervalSeconds,

            string path,

            int port,

            int successCountThreshold,

            int timeout,

            string transport)
        {
            FailureCountThreshold = failureCountThreshold;
            Headers = headers;
            Host = host;
            InitialDelay = initialDelay;
            IntervalSeconds = intervalSeconds;
            Path = path;
            Port = port;
            SuccessCountThreshold = successCountThreshold;
            Timeout = timeout;
            Transport = transport;
        }
    }
}
