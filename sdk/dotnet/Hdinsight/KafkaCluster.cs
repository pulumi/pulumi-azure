// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.HDInsight
{
    /// <summary>
    /// Manages a HDInsight Kafka Cluster.
    /// 
    /// &gt; This content is derived from https://github.com/terraform-providers/terraform-provider-azurerm/blob/master/website/docs/r/hdinsight_kafka_cluster.html.markdown.
    /// </summary>
    public partial class KafkaCluster : Pulumi.CustomResource
    {
        /// <summary>
        /// Specifies the Version of HDInsights which should be used for this Cluster. Changing this forces a new resource to be created.
        /// </summary>
        [Output("clusterVersion")]
        public Output<string> ClusterVersion { get; private set; } = null!;

        /// <summary>
        /// A `component_version` block as defined below.
        /// </summary>
        [Output("componentVersion")]
        public Output<Outputs.KafkaClusterComponentVersion> ComponentVersion { get; private set; } = null!;

        /// <summary>
        /// A `gateway` block as defined below.
        /// </summary>
        [Output("gateway")]
        public Output<Outputs.KafkaClusterGateway> Gateway { get; private set; } = null!;

        /// <summary>
        /// The HTTPS Connectivity Endpoint for this HDInsight Kafka Cluster.
        /// </summary>
        [Output("httpsEndpoint")]
        public Output<string> HttpsEndpoint { get; private set; } = null!;

        /// <summary>
        /// Specifies the Azure Region which this HDInsight Kafka Cluster should exist. Changing this forces a new resource to be created.
        /// </summary>
        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// Specifies the name for this HDInsight Kafka Cluster. Changing this forces a new resource to be created.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Specifies the name of the Resource Group in which this HDInsight Kafka Cluster should exist. Changing this forces a new resource to be created.
        /// </summary>
        [Output("resourceGroupName")]
        public Output<string> ResourceGroupName { get; private set; } = null!;

        /// <summary>
        /// A `roles` block as defined below.
        /// </summary>
        [Output("roles")]
        public Output<Outputs.KafkaClusterRoles> Roles { get; private set; } = null!;

        /// <summary>
        /// The SSH Connectivity Endpoint for this HDInsight Kafka Cluster.
        /// </summary>
        [Output("sshEndpoint")]
        public Output<string> SshEndpoint { get; private set; } = null!;

        /// <summary>
        /// One or more `storage_account` block as defined below.
        /// </summary>
        [Output("storageAccounts")]
        public Output<ImmutableArray<Outputs.KafkaClusterStorageAccounts>> StorageAccounts { get; private set; } = null!;

        /// <summary>
        /// A `storage_account_gen2` block as defined below.
        /// </summary>
        [Output("storageAccountGen2")]
        public Output<Outputs.KafkaClusterStorageAccountGen2?> StorageAccountGen2 { get; private set; } = null!;

        /// <summary>
        /// A map of Tags which should be assigned to this HDInsight Kafka Cluster.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// Specifies the Tier which should be used for this HDInsight Kafka Cluster. Possible values are `Standard` or `Premium`. Changing this forces a new resource to be created.
        /// </summary>
        [Output("tier")]
        public Output<string> Tier { get; private set; } = null!;


        /// <summary>
        /// Create a KafkaCluster resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public KafkaCluster(string name, KafkaClusterArgs args, CustomResourceOptions? options = null)
            : base("azure:hdinsight/kafkaCluster:KafkaCluster", name, args ?? ResourceArgs.Empty, MakeResourceOptions(options, ""))
        {
        }

        private KafkaCluster(string name, Input<string> id, KafkaClusterState? state = null, CustomResourceOptions? options = null)
            : base("azure:hdinsight/kafkaCluster:KafkaCluster", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing KafkaCluster resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static KafkaCluster Get(string name, Input<string> id, KafkaClusterState? state = null, CustomResourceOptions? options = null)
        {
            return new KafkaCluster(name, id, state, options);
        }
    }

    public sealed class KafkaClusterArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies the Version of HDInsights which should be used for this Cluster. Changing this forces a new resource to be created.
        /// </summary>
        [Input("clusterVersion", required: true)]
        public Input<string> ClusterVersion { get; set; } = null!;

        /// <summary>
        /// A `component_version` block as defined below.
        /// </summary>
        [Input("componentVersion", required: true)]
        public Input<Inputs.KafkaClusterComponentVersionArgs> ComponentVersion { get; set; } = null!;

        /// <summary>
        /// A `gateway` block as defined below.
        /// </summary>
        [Input("gateway", required: true)]
        public Input<Inputs.KafkaClusterGatewayArgs> Gateway { get; set; } = null!;

        /// <summary>
        /// Specifies the Azure Region which this HDInsight Kafka Cluster should exist. Changing this forces a new resource to be created.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// Specifies the name for this HDInsight Kafka Cluster. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Specifies the name of the Resource Group in which this HDInsight Kafka Cluster should exist. Changing this forces a new resource to be created.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// A `roles` block as defined below.
        /// </summary>
        [Input("roles", required: true)]
        public Input<Inputs.KafkaClusterRolesArgs> Roles { get; set; } = null!;

        [Input("storageAccounts")]
        private InputList<Inputs.KafkaClusterStorageAccountsArgs>? _storageAccounts;

        /// <summary>
        /// One or more `storage_account` block as defined below.
        /// </summary>
        public InputList<Inputs.KafkaClusterStorageAccountsArgs> StorageAccounts
        {
            get => _storageAccounts ?? (_storageAccounts = new InputList<Inputs.KafkaClusterStorageAccountsArgs>());
            set => _storageAccounts = value;
        }

        /// <summary>
        /// A `storage_account_gen2` block as defined below.
        /// </summary>
        [Input("storageAccountGen2")]
        public Input<Inputs.KafkaClusterStorageAccountGen2Args>? StorageAccountGen2 { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// A map of Tags which should be assigned to this HDInsight Kafka Cluster.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        /// <summary>
        /// Specifies the Tier which should be used for this HDInsight Kafka Cluster. Possible values are `Standard` or `Premium`. Changing this forces a new resource to be created.
        /// </summary>
        [Input("tier", required: true)]
        public Input<string> Tier { get; set; } = null!;

        public KafkaClusterArgs()
        {
        }
    }

    public sealed class KafkaClusterState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies the Version of HDInsights which should be used for this Cluster. Changing this forces a new resource to be created.
        /// </summary>
        [Input("clusterVersion")]
        public Input<string>? ClusterVersion { get; set; }

        /// <summary>
        /// A `component_version` block as defined below.
        /// </summary>
        [Input("componentVersion")]
        public Input<Inputs.KafkaClusterComponentVersionGetArgs>? ComponentVersion { get; set; }

        /// <summary>
        /// A `gateway` block as defined below.
        /// </summary>
        [Input("gateway")]
        public Input<Inputs.KafkaClusterGatewayGetArgs>? Gateway { get; set; }

        /// <summary>
        /// The HTTPS Connectivity Endpoint for this HDInsight Kafka Cluster.
        /// </summary>
        [Input("httpsEndpoint")]
        public Input<string>? HttpsEndpoint { get; set; }

        /// <summary>
        /// Specifies the Azure Region which this HDInsight Kafka Cluster should exist. Changing this forces a new resource to be created.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// Specifies the name for this HDInsight Kafka Cluster. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Specifies the name of the Resource Group in which this HDInsight Kafka Cluster should exist. Changing this forces a new resource to be created.
        /// </summary>
        [Input("resourceGroupName")]
        public Input<string>? ResourceGroupName { get; set; }

        /// <summary>
        /// A `roles` block as defined below.
        /// </summary>
        [Input("roles")]
        public Input<Inputs.KafkaClusterRolesGetArgs>? Roles { get; set; }

        /// <summary>
        /// The SSH Connectivity Endpoint for this HDInsight Kafka Cluster.
        /// </summary>
        [Input("sshEndpoint")]
        public Input<string>? SshEndpoint { get; set; }

        [Input("storageAccounts")]
        private InputList<Inputs.KafkaClusterStorageAccountsGetArgs>? _storageAccounts;

        /// <summary>
        /// One or more `storage_account` block as defined below.
        /// </summary>
        public InputList<Inputs.KafkaClusterStorageAccountsGetArgs> StorageAccounts
        {
            get => _storageAccounts ?? (_storageAccounts = new InputList<Inputs.KafkaClusterStorageAccountsGetArgs>());
            set => _storageAccounts = value;
        }

        /// <summary>
        /// A `storage_account_gen2` block as defined below.
        /// </summary>
        [Input("storageAccountGen2")]
        public Input<Inputs.KafkaClusterStorageAccountGen2GetArgs>? StorageAccountGen2 { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// A map of Tags which should be assigned to this HDInsight Kafka Cluster.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        /// <summary>
        /// Specifies the Tier which should be used for this HDInsight Kafka Cluster. Possible values are `Standard` or `Premium`. Changing this forces a new resource to be created.
        /// </summary>
        [Input("tier")]
        public Input<string>? Tier { get; set; }

        public KafkaClusterState()
        {
        }
    }

    namespace Inputs
    {

    public sealed class KafkaClusterComponentVersionArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The version of Kafka which should be used for this HDInsight Kafka Cluster. Changing this forces a new resource to be created.
        /// </summary>
        [Input("kafka", required: true)]
        public Input<string> Kafka { get; set; } = null!;

        public KafkaClusterComponentVersionArgs()
        {
        }
    }

    public sealed class KafkaClusterComponentVersionGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The version of Kafka which should be used for this HDInsight Kafka Cluster. Changing this forces a new resource to be created.
        /// </summary>
        [Input("kafka", required: true)]
        public Input<string> Kafka { get; set; } = null!;

        public KafkaClusterComponentVersionGetArgs()
        {
        }
    }

    public sealed class KafkaClusterGatewayArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Is the Ambari portal enabled? Changing this forces a new resource to be created.
        /// </summary>
        [Input("enabled", required: true)]
        public Input<bool> Enabled { get; set; } = null!;

        /// <summary>
        /// The password used for the Ambari Portal. Changing this forces a new resource to be created.
        /// </summary>
        [Input("password", required: true)]
        public Input<string> Password { get; set; } = null!;

        /// <summary>
        /// The username used for the Ambari Portal. Changing this forces a new resource to be created.
        /// </summary>
        [Input("username", required: true)]
        public Input<string> Username { get; set; } = null!;

        public KafkaClusterGatewayArgs()
        {
        }
    }

    public sealed class KafkaClusterGatewayGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Is the Ambari portal enabled? Changing this forces a new resource to be created.
        /// </summary>
        [Input("enabled", required: true)]
        public Input<bool> Enabled { get; set; } = null!;

        /// <summary>
        /// The password used for the Ambari Portal. Changing this forces a new resource to be created.
        /// </summary>
        [Input("password", required: true)]
        public Input<string> Password { get; set; } = null!;

        /// <summary>
        /// The username used for the Ambari Portal. Changing this forces a new resource to be created.
        /// </summary>
        [Input("username", required: true)]
        public Input<string> Username { get; set; } = null!;

        public KafkaClusterGatewayGetArgs()
        {
        }
    }

    public sealed class KafkaClusterRolesArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// A `head_node` block as defined above.
        /// </summary>
        [Input("headNode", required: true)]
        public Input<KafkaClusterRolesHeadNodeArgs> HeadNode { get; set; } = null!;

        /// <summary>
        /// A `worker_node` block as defined below.
        /// </summary>
        [Input("workerNode", required: true)]
        public Input<KafkaClusterRolesWorkerNodeArgs> WorkerNode { get; set; } = null!;

        /// <summary>
        /// A `zookeeper_node` block as defined below.
        /// </summary>
        [Input("zookeeperNode", required: true)]
        public Input<KafkaClusterRolesZookeeperNodeArgs> ZookeeperNode { get; set; } = null!;

        public KafkaClusterRolesArgs()
        {
        }
    }

    public sealed class KafkaClusterRolesGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// A `head_node` block as defined above.
        /// </summary>
        [Input("headNode", required: true)]
        public Input<KafkaClusterRolesHeadNodeGetArgs> HeadNode { get; set; } = null!;

        /// <summary>
        /// A `worker_node` block as defined below.
        /// </summary>
        [Input("workerNode", required: true)]
        public Input<KafkaClusterRolesWorkerNodeGetArgs> WorkerNode { get; set; } = null!;

        /// <summary>
        /// A `zookeeper_node` block as defined below.
        /// </summary>
        [Input("zookeeperNode", required: true)]
        public Input<KafkaClusterRolesZookeeperNodeGetArgs> ZookeeperNode { get; set; } = null!;

        public KafkaClusterRolesGetArgs()
        {
        }
    }

    public sealed class KafkaClusterRolesHeadNodeArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The Password associated with the local administrator for the Head Nodes. Changing this forces a new resource to be created.
        /// </summary>
        [Input("password")]
        public Input<string>? Password { get; set; }

        [Input("sshKeys")]
        private InputList<string>? _sshKeys;

        /// <summary>
        /// A list of SSH Keys which should be used for the local administrator on the Head Nodes. Changing this forces a new resource to be created.
        /// </summary>
        public InputList<string> SshKeys
        {
            get => _sshKeys ?? (_sshKeys = new InputList<string>());
            set => _sshKeys = value;
        }

        /// <summary>
        /// The ID of the Subnet within the Virtual Network where the Head Nodes should be provisioned within. Changing this forces a new resource to be created.
        /// </summary>
        [Input("subnetId")]
        public Input<string>? SubnetId { get; set; }

        /// <summary>
        /// The Username of the local administrator for the Head Nodes. Changing this forces a new resource to be created.
        /// </summary>
        [Input("username", required: true)]
        public Input<string> Username { get; set; } = null!;

        /// <summary>
        /// The ID of the Virtual Network where the Head Nodes should be provisioned within. Changing this forces a new resource to be created.
        /// </summary>
        [Input("virtualNetworkId")]
        public Input<string>? VirtualNetworkId { get; set; }

        /// <summary>
        /// The Size of the Virtual Machine which should be used as the Head Nodes. Changing this forces a new resource to be created.
        /// </summary>
        [Input("vmSize", required: true)]
        public Input<string> VmSize { get; set; } = null!;

        public KafkaClusterRolesHeadNodeArgs()
        {
        }
    }

    public sealed class KafkaClusterRolesHeadNodeGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The Password associated with the local administrator for the Head Nodes. Changing this forces a new resource to be created.
        /// </summary>
        [Input("password")]
        public Input<string>? Password { get; set; }

        [Input("sshKeys")]
        private InputList<string>? _sshKeys;

        /// <summary>
        /// A list of SSH Keys which should be used for the local administrator on the Head Nodes. Changing this forces a new resource to be created.
        /// </summary>
        public InputList<string> SshKeys
        {
            get => _sshKeys ?? (_sshKeys = new InputList<string>());
            set => _sshKeys = value;
        }

        /// <summary>
        /// The ID of the Subnet within the Virtual Network where the Head Nodes should be provisioned within. Changing this forces a new resource to be created.
        /// </summary>
        [Input("subnetId")]
        public Input<string>? SubnetId { get; set; }

        /// <summary>
        /// The Username of the local administrator for the Head Nodes. Changing this forces a new resource to be created.
        /// </summary>
        [Input("username", required: true)]
        public Input<string> Username { get; set; } = null!;

        /// <summary>
        /// The ID of the Virtual Network where the Head Nodes should be provisioned within. Changing this forces a new resource to be created.
        /// </summary>
        [Input("virtualNetworkId")]
        public Input<string>? VirtualNetworkId { get; set; }

        /// <summary>
        /// The Size of the Virtual Machine which should be used as the Head Nodes. Changing this forces a new resource to be created.
        /// </summary>
        [Input("vmSize", required: true)]
        public Input<string> VmSize { get; set; } = null!;

        public KafkaClusterRolesHeadNodeGetArgs()
        {
        }
    }

    public sealed class KafkaClusterRolesWorkerNodeArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The minimum number of instances which should be run for the Worker Nodes. Changing this forces a new resource to be created.
        /// </summary>
        [Input("minInstanceCount")]
        public Input<int>? MinInstanceCount { get; set; }

        /// <summary>
        /// The number of Data Disks which should be assigned to each Worker Node, which can be between 1 and 8. Changing this forces a new resource to be created.
        /// </summary>
        [Input("numberOfDisksPerNode", required: true)]
        public Input<int> NumberOfDisksPerNode { get; set; } = null!;

        /// <summary>
        /// The Password associated with the local administrator for the Worker Nodes. Changing this forces a new resource to be created.
        /// </summary>
        [Input("password")]
        public Input<string>? Password { get; set; }

        [Input("sshKeys")]
        private InputList<string>? _sshKeys;

        /// <summary>
        /// A list of SSH Keys which should be used for the local administrator on the Worker Nodes. Changing this forces a new resource to be created.
        /// </summary>
        public InputList<string> SshKeys
        {
            get => _sshKeys ?? (_sshKeys = new InputList<string>());
            set => _sshKeys = value;
        }

        /// <summary>
        /// The ID of the Subnet within the Virtual Network where the Worker Nodes should be provisioned within. Changing this forces a new resource to be created.
        /// </summary>
        [Input("subnetId")]
        public Input<string>? SubnetId { get; set; }

        /// <summary>
        /// The number of instances which should be run for the Worker Nodes.
        /// </summary>
        [Input("targetInstanceCount", required: true)]
        public Input<int> TargetInstanceCount { get; set; } = null!;

        /// <summary>
        /// The Username of the local administrator for the Worker Nodes. Changing this forces a new resource to be created.
        /// </summary>
        [Input("username", required: true)]
        public Input<string> Username { get; set; } = null!;

        /// <summary>
        /// The ID of the Virtual Network where the Worker Nodes should be provisioned within. Changing this forces a new resource to be created.
        /// </summary>
        [Input("virtualNetworkId")]
        public Input<string>? VirtualNetworkId { get; set; }

        /// <summary>
        /// The Size of the Virtual Machine which should be used as the Worker Nodes. Changing this forces a new resource to be created.
        /// </summary>
        [Input("vmSize", required: true)]
        public Input<string> VmSize { get; set; } = null!;

        public KafkaClusterRolesWorkerNodeArgs()
        {
        }
    }

    public sealed class KafkaClusterRolesWorkerNodeGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The minimum number of instances which should be run for the Worker Nodes. Changing this forces a new resource to be created.
        /// </summary>
        [Input("minInstanceCount")]
        public Input<int>? MinInstanceCount { get; set; }

        /// <summary>
        /// The number of Data Disks which should be assigned to each Worker Node, which can be between 1 and 8. Changing this forces a new resource to be created.
        /// </summary>
        [Input("numberOfDisksPerNode", required: true)]
        public Input<int> NumberOfDisksPerNode { get; set; } = null!;

        /// <summary>
        /// The Password associated with the local administrator for the Worker Nodes. Changing this forces a new resource to be created.
        /// </summary>
        [Input("password")]
        public Input<string>? Password { get; set; }

        [Input("sshKeys")]
        private InputList<string>? _sshKeys;

        /// <summary>
        /// A list of SSH Keys which should be used for the local administrator on the Worker Nodes. Changing this forces a new resource to be created.
        /// </summary>
        public InputList<string> SshKeys
        {
            get => _sshKeys ?? (_sshKeys = new InputList<string>());
            set => _sshKeys = value;
        }

        /// <summary>
        /// The ID of the Subnet within the Virtual Network where the Worker Nodes should be provisioned within. Changing this forces a new resource to be created.
        /// </summary>
        [Input("subnetId")]
        public Input<string>? SubnetId { get; set; }

        /// <summary>
        /// The number of instances which should be run for the Worker Nodes.
        /// </summary>
        [Input("targetInstanceCount", required: true)]
        public Input<int> TargetInstanceCount { get; set; } = null!;

        /// <summary>
        /// The Username of the local administrator for the Worker Nodes. Changing this forces a new resource to be created.
        /// </summary>
        [Input("username", required: true)]
        public Input<string> Username { get; set; } = null!;

        /// <summary>
        /// The ID of the Virtual Network where the Worker Nodes should be provisioned within. Changing this forces a new resource to be created.
        /// </summary>
        [Input("virtualNetworkId")]
        public Input<string>? VirtualNetworkId { get; set; }

        /// <summary>
        /// The Size of the Virtual Machine which should be used as the Worker Nodes. Changing this forces a new resource to be created.
        /// </summary>
        [Input("vmSize", required: true)]
        public Input<string> VmSize { get; set; } = null!;

        public KafkaClusterRolesWorkerNodeGetArgs()
        {
        }
    }

    public sealed class KafkaClusterRolesZookeeperNodeArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The Password associated with the local administrator for the Zookeeper Nodes. Changing this forces a new resource to be created.
        /// </summary>
        [Input("password")]
        public Input<string>? Password { get; set; }

        [Input("sshKeys")]
        private InputList<string>? _sshKeys;

        /// <summary>
        /// A list of SSH Keys which should be used for the local administrator on the Zookeeper Nodes. Changing this forces a new resource to be created.
        /// </summary>
        public InputList<string> SshKeys
        {
            get => _sshKeys ?? (_sshKeys = new InputList<string>());
            set => _sshKeys = value;
        }

        /// <summary>
        /// The ID of the Subnet within the Virtual Network where the Zookeeper Nodes should be provisioned within. Changing this forces a new resource to be created.
        /// </summary>
        [Input("subnetId")]
        public Input<string>? SubnetId { get; set; }

        /// <summary>
        /// The Username of the local administrator for the Zookeeper Nodes. Changing this forces a new resource to be created.
        /// </summary>
        [Input("username", required: true)]
        public Input<string> Username { get; set; } = null!;

        /// <summary>
        /// The ID of the Virtual Network where the Zookeeper Nodes should be provisioned within. Changing this forces a new resource to be created.
        /// </summary>
        [Input("virtualNetworkId")]
        public Input<string>? VirtualNetworkId { get; set; }

        /// <summary>
        /// The Size of the Virtual Machine which should be used as the Zookeeper Nodes. Changing this forces a new resource to be created.
        /// </summary>
        [Input("vmSize", required: true)]
        public Input<string> VmSize { get; set; } = null!;

        public KafkaClusterRolesZookeeperNodeArgs()
        {
        }
    }

    public sealed class KafkaClusterRolesZookeeperNodeGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The Password associated with the local administrator for the Zookeeper Nodes. Changing this forces a new resource to be created.
        /// </summary>
        [Input("password")]
        public Input<string>? Password { get; set; }

        [Input("sshKeys")]
        private InputList<string>? _sshKeys;

        /// <summary>
        /// A list of SSH Keys which should be used for the local administrator on the Zookeeper Nodes. Changing this forces a new resource to be created.
        /// </summary>
        public InputList<string> SshKeys
        {
            get => _sshKeys ?? (_sshKeys = new InputList<string>());
            set => _sshKeys = value;
        }

        /// <summary>
        /// The ID of the Subnet within the Virtual Network where the Zookeeper Nodes should be provisioned within. Changing this forces a new resource to be created.
        /// </summary>
        [Input("subnetId")]
        public Input<string>? SubnetId { get; set; }

        /// <summary>
        /// The Username of the local administrator for the Zookeeper Nodes. Changing this forces a new resource to be created.
        /// </summary>
        [Input("username", required: true)]
        public Input<string> Username { get; set; } = null!;

        /// <summary>
        /// The ID of the Virtual Network where the Zookeeper Nodes should be provisioned within. Changing this forces a new resource to be created.
        /// </summary>
        [Input("virtualNetworkId")]
        public Input<string>? VirtualNetworkId { get; set; }

        /// <summary>
        /// The Size of the Virtual Machine which should be used as the Zookeeper Nodes. Changing this forces a new resource to be created.
        /// </summary>
        [Input("vmSize", required: true)]
        public Input<string> VmSize { get; set; } = null!;

        public KafkaClusterRolesZookeeperNodeGetArgs()
        {
        }
    }

    public sealed class KafkaClusterStorageAccountGen2Args : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the Gen2 Filesystem. Changing this forces a new resource to be created.
        /// </summary>
        [Input("filesystemId", required: true)]
        public Input<string> FilesystemId { get; set; } = null!;

        /// <summary>
        /// Is this the Default Storage Account for the HDInsight Hadoop Cluster? Changing this forces a new resource to be created.
        /// </summary>
        [Input("isDefault", required: true)]
        public Input<bool> IsDefault { get; set; } = null!;

        /// <summary>
        /// The ID of Managed Identity to use for accessing the Gen2 filesystem. Changing this forces a new resource to be created.
        /// </summary>
        [Input("managedIdentityResourceId", required: true)]
        public Input<string> ManagedIdentityResourceId { get; set; } = null!;

        /// <summary>
        /// The ID of the Storage Account. Changing this forces a new resource to be created.
        /// </summary>
        [Input("storageResourceId", required: true)]
        public Input<string> StorageResourceId { get; set; } = null!;

        public KafkaClusterStorageAccountGen2Args()
        {
        }
    }

    public sealed class KafkaClusterStorageAccountGen2GetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the Gen2 Filesystem. Changing this forces a new resource to be created.
        /// </summary>
        [Input("filesystemId", required: true)]
        public Input<string> FilesystemId { get; set; } = null!;

        /// <summary>
        /// Is this the Default Storage Account for the HDInsight Hadoop Cluster? Changing this forces a new resource to be created.
        /// </summary>
        [Input("isDefault", required: true)]
        public Input<bool> IsDefault { get; set; } = null!;

        /// <summary>
        /// The ID of Managed Identity to use for accessing the Gen2 filesystem. Changing this forces a new resource to be created.
        /// </summary>
        [Input("managedIdentityResourceId", required: true)]
        public Input<string> ManagedIdentityResourceId { get; set; } = null!;

        /// <summary>
        /// The ID of the Storage Account. Changing this forces a new resource to be created.
        /// </summary>
        [Input("storageResourceId", required: true)]
        public Input<string> StorageResourceId { get; set; } = null!;

        public KafkaClusterStorageAccountGen2GetArgs()
        {
        }
    }

    public sealed class KafkaClusterStorageAccountsArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Is this the Default Storage Account for the HDInsight Hadoop Cluster? Changing this forces a new resource to be created.
        /// </summary>
        [Input("isDefault", required: true)]
        public Input<bool> IsDefault { get; set; } = null!;

        /// <summary>
        /// The Access Key which should be used to connect to the Storage Account. Changing this forces a new resource to be created.
        /// </summary>
        [Input("storageAccountKey", required: true)]
        public Input<string> StorageAccountKey { get; set; } = null!;

        /// <summary>
        /// The ID of the Storage Container. Changing this forces a new resource to be created.
        /// </summary>
        [Input("storageContainerId", required: true)]
        public Input<string> StorageContainerId { get; set; } = null!;

        public KafkaClusterStorageAccountsArgs()
        {
        }
    }

    public sealed class KafkaClusterStorageAccountsGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Is this the Default Storage Account for the HDInsight Hadoop Cluster? Changing this forces a new resource to be created.
        /// </summary>
        [Input("isDefault", required: true)]
        public Input<bool> IsDefault { get; set; } = null!;

        /// <summary>
        /// The Access Key which should be used to connect to the Storage Account. Changing this forces a new resource to be created.
        /// </summary>
        [Input("storageAccountKey", required: true)]
        public Input<string> StorageAccountKey { get; set; } = null!;

        /// <summary>
        /// The ID of the Storage Container. Changing this forces a new resource to be created.
        /// </summary>
        [Input("storageContainerId", required: true)]
        public Input<string> StorageContainerId { get; set; } = null!;

        public KafkaClusterStorageAccountsGetArgs()
        {
        }
    }
    }

    namespace Outputs
    {

    [OutputType]
    public sealed class KafkaClusterComponentVersion
    {
        /// <summary>
        /// The version of Kafka which should be used for this HDInsight Kafka Cluster. Changing this forces a new resource to be created.
        /// </summary>
        public readonly string Kafka;

        [OutputConstructor]
        private KafkaClusterComponentVersion(string kafka)
        {
            Kafka = kafka;
        }
    }

    [OutputType]
    public sealed class KafkaClusterGateway
    {
        /// <summary>
        /// Is the Ambari portal enabled? Changing this forces a new resource to be created.
        /// </summary>
        public readonly bool Enabled;
        /// <summary>
        /// The password used for the Ambari Portal. Changing this forces a new resource to be created.
        /// </summary>
        public readonly string Password;
        /// <summary>
        /// The username used for the Ambari Portal. Changing this forces a new resource to be created.
        /// </summary>
        public readonly string Username;

        [OutputConstructor]
        private KafkaClusterGateway(
            bool enabled,
            string password,
            string username)
        {
            Enabled = enabled;
            Password = password;
            Username = username;
        }
    }

    [OutputType]
    public sealed class KafkaClusterRoles
    {
        /// <summary>
        /// A `head_node` block as defined above.
        /// </summary>
        public readonly KafkaClusterRolesHeadNode HeadNode;
        /// <summary>
        /// A `worker_node` block as defined below.
        /// </summary>
        public readonly KafkaClusterRolesWorkerNode WorkerNode;
        /// <summary>
        /// A `zookeeper_node` block as defined below.
        /// </summary>
        public readonly KafkaClusterRolesZookeeperNode ZookeeperNode;

        [OutputConstructor]
        private KafkaClusterRoles(
            KafkaClusterRolesHeadNode headNode,
            KafkaClusterRolesWorkerNode workerNode,
            KafkaClusterRolesZookeeperNode zookeeperNode)
        {
            HeadNode = headNode;
            WorkerNode = workerNode;
            ZookeeperNode = zookeeperNode;
        }
    }

    [OutputType]
    public sealed class KafkaClusterRolesHeadNode
    {
        /// <summary>
        /// The Password associated with the local administrator for the Head Nodes. Changing this forces a new resource to be created.
        /// </summary>
        public readonly string? Password;
        /// <summary>
        /// A list of SSH Keys which should be used for the local administrator on the Head Nodes. Changing this forces a new resource to be created.
        /// </summary>
        public readonly ImmutableArray<string> SshKeys;
        /// <summary>
        /// The ID of the Subnet within the Virtual Network where the Head Nodes should be provisioned within. Changing this forces a new resource to be created.
        /// </summary>
        public readonly string? SubnetId;
        /// <summary>
        /// The Username of the local administrator for the Head Nodes. Changing this forces a new resource to be created.
        /// </summary>
        public readonly string Username;
        /// <summary>
        /// The ID of the Virtual Network where the Head Nodes should be provisioned within. Changing this forces a new resource to be created.
        /// </summary>
        public readonly string? VirtualNetworkId;
        /// <summary>
        /// The Size of the Virtual Machine which should be used as the Head Nodes. Changing this forces a new resource to be created.
        /// </summary>
        public readonly string VmSize;

        [OutputConstructor]
        private KafkaClusterRolesHeadNode(
            string? password,
            ImmutableArray<string> sshKeys,
            string? subnetId,
            string username,
            string? virtualNetworkId,
            string vmSize)
        {
            Password = password;
            SshKeys = sshKeys;
            SubnetId = subnetId;
            Username = username;
            VirtualNetworkId = virtualNetworkId;
            VmSize = vmSize;
        }
    }

    [OutputType]
    public sealed class KafkaClusterRolesWorkerNode
    {
        /// <summary>
        /// The minimum number of instances which should be run for the Worker Nodes. Changing this forces a new resource to be created.
        /// </summary>
        public readonly int? MinInstanceCount;
        /// <summary>
        /// The number of Data Disks which should be assigned to each Worker Node, which can be between 1 and 8. Changing this forces a new resource to be created.
        /// </summary>
        public readonly int NumberOfDisksPerNode;
        /// <summary>
        /// The Password associated with the local administrator for the Worker Nodes. Changing this forces a new resource to be created.
        /// </summary>
        public readonly string? Password;
        /// <summary>
        /// A list of SSH Keys which should be used for the local administrator on the Worker Nodes. Changing this forces a new resource to be created.
        /// </summary>
        public readonly ImmutableArray<string> SshKeys;
        /// <summary>
        /// The ID of the Subnet within the Virtual Network where the Worker Nodes should be provisioned within. Changing this forces a new resource to be created.
        /// </summary>
        public readonly string? SubnetId;
        /// <summary>
        /// The number of instances which should be run for the Worker Nodes.
        /// </summary>
        public readonly int TargetInstanceCount;
        /// <summary>
        /// The Username of the local administrator for the Worker Nodes. Changing this forces a new resource to be created.
        /// </summary>
        public readonly string Username;
        /// <summary>
        /// The ID of the Virtual Network where the Worker Nodes should be provisioned within. Changing this forces a new resource to be created.
        /// </summary>
        public readonly string? VirtualNetworkId;
        /// <summary>
        /// The Size of the Virtual Machine which should be used as the Worker Nodes. Changing this forces a new resource to be created.
        /// </summary>
        public readonly string VmSize;

        [OutputConstructor]
        private KafkaClusterRolesWorkerNode(
            int? minInstanceCount,
            int numberOfDisksPerNode,
            string? password,
            ImmutableArray<string> sshKeys,
            string? subnetId,
            int targetInstanceCount,
            string username,
            string? virtualNetworkId,
            string vmSize)
        {
            MinInstanceCount = minInstanceCount;
            NumberOfDisksPerNode = numberOfDisksPerNode;
            Password = password;
            SshKeys = sshKeys;
            SubnetId = subnetId;
            TargetInstanceCount = targetInstanceCount;
            Username = username;
            VirtualNetworkId = virtualNetworkId;
            VmSize = vmSize;
        }
    }

    [OutputType]
    public sealed class KafkaClusterRolesZookeeperNode
    {
        /// <summary>
        /// The Password associated with the local administrator for the Zookeeper Nodes. Changing this forces a new resource to be created.
        /// </summary>
        public readonly string? Password;
        /// <summary>
        /// A list of SSH Keys which should be used for the local administrator on the Zookeeper Nodes. Changing this forces a new resource to be created.
        /// </summary>
        public readonly ImmutableArray<string> SshKeys;
        /// <summary>
        /// The ID of the Subnet within the Virtual Network where the Zookeeper Nodes should be provisioned within. Changing this forces a new resource to be created.
        /// </summary>
        public readonly string? SubnetId;
        /// <summary>
        /// The Username of the local administrator for the Zookeeper Nodes. Changing this forces a new resource to be created.
        /// </summary>
        public readonly string Username;
        /// <summary>
        /// The ID of the Virtual Network where the Zookeeper Nodes should be provisioned within. Changing this forces a new resource to be created.
        /// </summary>
        public readonly string? VirtualNetworkId;
        /// <summary>
        /// The Size of the Virtual Machine which should be used as the Zookeeper Nodes. Changing this forces a new resource to be created.
        /// </summary>
        public readonly string VmSize;

        [OutputConstructor]
        private KafkaClusterRolesZookeeperNode(
            string? password,
            ImmutableArray<string> sshKeys,
            string? subnetId,
            string username,
            string? virtualNetworkId,
            string vmSize)
        {
            Password = password;
            SshKeys = sshKeys;
            SubnetId = subnetId;
            Username = username;
            VirtualNetworkId = virtualNetworkId;
            VmSize = vmSize;
        }
    }

    [OutputType]
    public sealed class KafkaClusterStorageAccountGen2
    {
        /// <summary>
        /// The ID of the Gen2 Filesystem. Changing this forces a new resource to be created.
        /// </summary>
        public readonly string FilesystemId;
        /// <summary>
        /// Is this the Default Storage Account for the HDInsight Hadoop Cluster? Changing this forces a new resource to be created.
        /// </summary>
        public readonly bool IsDefault;
        /// <summary>
        /// The ID of Managed Identity to use for accessing the Gen2 filesystem. Changing this forces a new resource to be created.
        /// </summary>
        public readonly string ManagedIdentityResourceId;
        /// <summary>
        /// The ID of the Storage Account. Changing this forces a new resource to be created.
        /// </summary>
        public readonly string StorageResourceId;

        [OutputConstructor]
        private KafkaClusterStorageAccountGen2(
            string filesystemId,
            bool isDefault,
            string managedIdentityResourceId,
            string storageResourceId)
        {
            FilesystemId = filesystemId;
            IsDefault = isDefault;
            ManagedIdentityResourceId = managedIdentityResourceId;
            StorageResourceId = storageResourceId;
        }
    }

    [OutputType]
    public sealed class KafkaClusterStorageAccounts
    {
        /// <summary>
        /// Is this the Default Storage Account for the HDInsight Hadoop Cluster? Changing this forces a new resource to be created.
        /// </summary>
        public readonly bool IsDefault;
        /// <summary>
        /// The Access Key which should be used to connect to the Storage Account. Changing this forces a new resource to be created.
        /// </summary>
        public readonly string StorageAccountKey;
        /// <summary>
        /// The ID of the Storage Container. Changing this forces a new resource to be created.
        /// </summary>
        public readonly string StorageContainerId;

        [OutputConstructor]
        private KafkaClusterStorageAccounts(
            bool isDefault,
            string storageAccountKey,
            string storageContainerId)
        {
            IsDefault = isDefault;
            StorageAccountKey = storageAccountKey;
            StorageContainerId = storageContainerId;
        }
    }
    }
}
