// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.HDInsight
{
    /// <summary>
    /// Manages a HDInsight RServer Cluster.
    /// 
    /// &gt; This content is derived from https://github.com/terraform-providers/terraform-provider-azurerm/blob/master/website/docs/r/hdinsight_rserver_cluster.html.markdown.
    /// </summary>
    public partial class RServerCluster : Pulumi.CustomResource
    {
        /// <summary>
        /// Specifies the Version of HDInsights which should be used for this Cluster. Changing this forces a new resource to be created.
        /// </summary>
        [Output("clusterVersion")]
        public Output<string> ClusterVersion { get; private set; } = null!;

        /// <summary>
        /// The SSH Connectivity Endpoint for the Edge Node of the HDInsight RServer Cluster.
        /// </summary>
        [Output("edgeSshEndpoint")]
        public Output<string> EdgeSshEndpoint { get; private set; } = null!;

        /// <summary>
        /// A `gateway` block as defined below.
        /// </summary>
        [Output("gateway")]
        public Output<Outputs.RServerClusterGateway> Gateway { get; private set; } = null!;

        /// <summary>
        /// The HTTPS Connectivity Endpoint for this HDInsight RServer Cluster.
        /// </summary>
        [Output("httpsEndpoint")]
        public Output<string> HttpsEndpoint { get; private set; } = null!;

        /// <summary>
        /// Specifies the Azure Region which this HDInsight RServer Cluster should exist. Changing this forces a new resource to be created.
        /// </summary>
        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// Specifies the name for this HDInsight RServer Cluster. Changing this forces a new resource to be created.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Specifies the name of the Resource Group in which this HDInsight RServer Cluster should exist. Changing this forces a new resource to be created.
        /// </summary>
        [Output("resourceGroupName")]
        public Output<string> ResourceGroupName { get; private set; } = null!;

        /// <summary>
        /// A `roles` block as defined below.
        /// </summary>
        [Output("roles")]
        public Output<Outputs.RServerClusterRoles> Roles { get; private set; } = null!;

        /// <summary>
        /// Should R Studio community edition for RServer be installed? Changing this forces a new resource to be created.
        /// </summary>
        [Output("rstudio")]
        public Output<bool> Rstudio { get; private set; } = null!;

        /// <summary>
        /// The SSH Connectivity Endpoint for this HDInsight RServer Cluster.
        /// </summary>
        [Output("sshEndpoint")]
        public Output<string> SshEndpoint { get; private set; } = null!;

        /// <summary>
        /// One or more `storage_account` block as defined below.
        /// </summary>
        [Output("storageAccounts")]
        public Output<ImmutableArray<Outputs.RServerClusterStorageAccounts>> StorageAccounts { get; private set; } = null!;

        /// <summary>
        /// A map of Tags which should be assigned to this HDInsight RServer Cluster.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// Specifies the Tier which should be used for this HDInsight RServer Cluster. Possible values are `Standard` or `Premium`. Changing this forces a new resource to be created.
        /// </summary>
        [Output("tier")]
        public Output<string> Tier { get; private set; } = null!;


        /// <summary>
        /// Create a RServerCluster resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public RServerCluster(string name, RServerClusterArgs args, CustomResourceOptions? options = null)
            : base("azure:hdinsight/rServerCluster:RServerCluster", name, args ?? ResourceArgs.Empty, MakeResourceOptions(options, ""))
        {
        }

        private RServerCluster(string name, Input<string> id, RServerClusterState? state = null, CustomResourceOptions? options = null)
            : base("azure:hdinsight/rServerCluster:RServerCluster", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing RServerCluster resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static RServerCluster Get(string name, Input<string> id, RServerClusterState? state = null, CustomResourceOptions? options = null)
        {
            return new RServerCluster(name, id, state, options);
        }
    }

    public sealed class RServerClusterArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies the Version of HDInsights which should be used for this Cluster. Changing this forces a new resource to be created.
        /// </summary>
        [Input("clusterVersion", required: true)]
        public Input<string> ClusterVersion { get; set; } = null!;

        /// <summary>
        /// A `gateway` block as defined below.
        /// </summary>
        [Input("gateway", required: true)]
        public Input<Inputs.RServerClusterGatewayArgs> Gateway { get; set; } = null!;

        /// <summary>
        /// Specifies the Azure Region which this HDInsight RServer Cluster should exist. Changing this forces a new resource to be created.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// Specifies the name for this HDInsight RServer Cluster. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Specifies the name of the Resource Group in which this HDInsight RServer Cluster should exist. Changing this forces a new resource to be created.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// A `roles` block as defined below.
        /// </summary>
        [Input("roles", required: true)]
        public Input<Inputs.RServerClusterRolesArgs> Roles { get; set; } = null!;

        /// <summary>
        /// Should R Studio community edition for RServer be installed? Changing this forces a new resource to be created.
        /// </summary>
        [Input("rstudio", required: true)]
        public Input<bool> Rstudio { get; set; } = null!;

        [Input("storageAccounts")]
        private InputList<Inputs.RServerClusterStorageAccountsArgs>? _storageAccounts;

        /// <summary>
        /// One or more `storage_account` block as defined below.
        /// </summary>
        public InputList<Inputs.RServerClusterStorageAccountsArgs> StorageAccounts
        {
            get => _storageAccounts ?? (_storageAccounts = new InputList<Inputs.RServerClusterStorageAccountsArgs>());
            set => _storageAccounts = value;
        }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// A map of Tags which should be assigned to this HDInsight RServer Cluster.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        /// <summary>
        /// Specifies the Tier which should be used for this HDInsight RServer Cluster. Possible values are `Standard` or `Premium`. Changing this forces a new resource to be created.
        /// </summary>
        [Input("tier", required: true)]
        public Input<string> Tier { get; set; } = null!;

        public RServerClusterArgs()
        {
        }
    }

    public sealed class RServerClusterState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies the Version of HDInsights which should be used for this Cluster. Changing this forces a new resource to be created.
        /// </summary>
        [Input("clusterVersion")]
        public Input<string>? ClusterVersion { get; set; }

        /// <summary>
        /// The SSH Connectivity Endpoint for the Edge Node of the HDInsight RServer Cluster.
        /// </summary>
        [Input("edgeSshEndpoint")]
        public Input<string>? EdgeSshEndpoint { get; set; }

        /// <summary>
        /// A `gateway` block as defined below.
        /// </summary>
        [Input("gateway")]
        public Input<Inputs.RServerClusterGatewayGetArgs>? Gateway { get; set; }

        /// <summary>
        /// The HTTPS Connectivity Endpoint for this HDInsight RServer Cluster.
        /// </summary>
        [Input("httpsEndpoint")]
        public Input<string>? HttpsEndpoint { get; set; }

        /// <summary>
        /// Specifies the Azure Region which this HDInsight RServer Cluster should exist. Changing this forces a new resource to be created.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// Specifies the name for this HDInsight RServer Cluster. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Specifies the name of the Resource Group in which this HDInsight RServer Cluster should exist. Changing this forces a new resource to be created.
        /// </summary>
        [Input("resourceGroupName")]
        public Input<string>? ResourceGroupName { get; set; }

        /// <summary>
        /// A `roles` block as defined below.
        /// </summary>
        [Input("roles")]
        public Input<Inputs.RServerClusterRolesGetArgs>? Roles { get; set; }

        /// <summary>
        /// Should R Studio community edition for RServer be installed? Changing this forces a new resource to be created.
        /// </summary>
        [Input("rstudio")]
        public Input<bool>? Rstudio { get; set; }

        /// <summary>
        /// The SSH Connectivity Endpoint for this HDInsight RServer Cluster.
        /// </summary>
        [Input("sshEndpoint")]
        public Input<string>? SshEndpoint { get; set; }

        [Input("storageAccounts")]
        private InputList<Inputs.RServerClusterStorageAccountsGetArgs>? _storageAccounts;

        /// <summary>
        /// One or more `storage_account` block as defined below.
        /// </summary>
        public InputList<Inputs.RServerClusterStorageAccountsGetArgs> StorageAccounts
        {
            get => _storageAccounts ?? (_storageAccounts = new InputList<Inputs.RServerClusterStorageAccountsGetArgs>());
            set => _storageAccounts = value;
        }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// A map of Tags which should be assigned to this HDInsight RServer Cluster.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        /// <summary>
        /// Specifies the Tier which should be used for this HDInsight RServer Cluster. Possible values are `Standard` or `Premium`. Changing this forces a new resource to be created.
        /// </summary>
        [Input("tier")]
        public Input<string>? Tier { get; set; }

        public RServerClusterState()
        {
        }
    }

    namespace Inputs
    {

    public sealed class RServerClusterGatewayArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Is the Ambari portal enabled? Changing this forces a new resource to be created.
        /// </summary>
        [Input("enabled", required: true)]
        public Input<bool> Enabled { get; set; } = null!;

        /// <summary>
        /// The password used for the Ambari Portal. Changing this forces a new resource to be created.
        /// </summary>
        [Input("password", required: true)]
        public Input<string> Password { get; set; } = null!;

        /// <summary>
        /// The username used for the Ambari Portal. Changing this forces a new resource to be created.
        /// </summary>
        [Input("username", required: true)]
        public Input<string> Username { get; set; } = null!;

        public RServerClusterGatewayArgs()
        {
        }
    }

    public sealed class RServerClusterGatewayGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Is the Ambari portal enabled? Changing this forces a new resource to be created.
        /// </summary>
        [Input("enabled", required: true)]
        public Input<bool> Enabled { get; set; } = null!;

        /// <summary>
        /// The password used for the Ambari Portal. Changing this forces a new resource to be created.
        /// </summary>
        [Input("password", required: true)]
        public Input<string> Password { get; set; } = null!;

        /// <summary>
        /// The username used for the Ambari Portal. Changing this forces a new resource to be created.
        /// </summary>
        [Input("username", required: true)]
        public Input<string> Username { get; set; } = null!;

        public RServerClusterGatewayGetArgs()
        {
        }
    }

    public sealed class RServerClusterRolesArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// A `edge_node` block as defined above.
        /// </summary>
        [Input("edgeNode", required: true)]
        public Input<RServerClusterRolesEdgeNodeArgs> EdgeNode { get; set; } = null!;

        /// <summary>
        /// A `head_node` block as defined above.
        /// </summary>
        [Input("headNode", required: true)]
        public Input<RServerClusterRolesHeadNodeArgs> HeadNode { get; set; } = null!;

        /// <summary>
        /// A `worker_node` block as defined below.
        /// </summary>
        [Input("workerNode", required: true)]
        public Input<RServerClusterRolesWorkerNodeArgs> WorkerNode { get; set; } = null!;

        /// <summary>
        /// A `zookeeper_node` block as defined below.
        /// </summary>
        [Input("zookeeperNode", required: true)]
        public Input<RServerClusterRolesZookeeperNodeArgs> ZookeeperNode { get; set; } = null!;

        public RServerClusterRolesArgs()
        {
        }
    }

    public sealed class RServerClusterRolesEdgeNodeArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The Password associated with the local administrator for the Edge Node. Changing this forces a new resource to be created.
        /// </summary>
        [Input("password")]
        public Input<string>? Password { get; set; }

        [Input("sshKeys")]
        private InputList<string>? _sshKeys;

        /// <summary>
        /// A list of SSH Keys which should be used for the local administrator on the Edge Node. Changing this forces a new resource to be created.
        /// </summary>
        public InputList<string> SshKeys
        {
            get => _sshKeys ?? (_sshKeys = new InputList<string>());
            set => _sshKeys = value;
        }

        /// <summary>
        /// The ID of the Subnet within the Virtual Network where the Edge Node should be provisioned within. Changing this forces a new resource to be created.
        /// </summary>
        [Input("subnetId")]
        public Input<string>? SubnetId { get; set; }

        /// <summary>
        /// The Username of the local administrator for the Edge Node. Changing this forces a new resource to be created.
        /// </summary>
        [Input("username", required: true)]
        public Input<string> Username { get; set; } = null!;

        /// <summary>
        /// The ID of the Virtual Network where the Edge Node should be provisioned within. Changing this forces a new resource to be created.
        /// </summary>
        [Input("virtualNetworkId")]
        public Input<string>? VirtualNetworkId { get; set; }

        /// <summary>
        /// The Size of the Virtual Machine which should be used as the Edge Node. Changing this forces a new resource to be created.
        /// </summary>
        [Input("vmSize", required: true)]
        public Input<string> VmSize { get; set; } = null!;

        public RServerClusterRolesEdgeNodeArgs()
        {
        }
    }

    public sealed class RServerClusterRolesEdgeNodeGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The Password associated with the local administrator for the Edge Node. Changing this forces a new resource to be created.
        /// </summary>
        [Input("password")]
        public Input<string>? Password { get; set; }

        [Input("sshKeys")]
        private InputList<string>? _sshKeys;

        /// <summary>
        /// A list of SSH Keys which should be used for the local administrator on the Edge Node. Changing this forces a new resource to be created.
        /// </summary>
        public InputList<string> SshKeys
        {
            get => _sshKeys ?? (_sshKeys = new InputList<string>());
            set => _sshKeys = value;
        }

        /// <summary>
        /// The ID of the Subnet within the Virtual Network where the Edge Node should be provisioned within. Changing this forces a new resource to be created.
        /// </summary>
        [Input("subnetId")]
        public Input<string>? SubnetId { get; set; }

        /// <summary>
        /// The Username of the local administrator for the Edge Node. Changing this forces a new resource to be created.
        /// </summary>
        [Input("username", required: true)]
        public Input<string> Username { get; set; } = null!;

        /// <summary>
        /// The ID of the Virtual Network where the Edge Node should be provisioned within. Changing this forces a new resource to be created.
        /// </summary>
        [Input("virtualNetworkId")]
        public Input<string>? VirtualNetworkId { get; set; }

        /// <summary>
        /// The Size of the Virtual Machine which should be used as the Edge Node. Changing this forces a new resource to be created.
        /// </summary>
        [Input("vmSize", required: true)]
        public Input<string> VmSize { get; set; } = null!;

        public RServerClusterRolesEdgeNodeGetArgs()
        {
        }
    }

    public sealed class RServerClusterRolesGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// A `edge_node` block as defined above.
        /// </summary>
        [Input("edgeNode", required: true)]
        public Input<RServerClusterRolesEdgeNodeGetArgs> EdgeNode { get; set; } = null!;

        /// <summary>
        /// A `head_node` block as defined above.
        /// </summary>
        [Input("headNode", required: true)]
        public Input<RServerClusterRolesHeadNodeGetArgs> HeadNode { get; set; } = null!;

        /// <summary>
        /// A `worker_node` block as defined below.
        /// </summary>
        [Input("workerNode", required: true)]
        public Input<RServerClusterRolesWorkerNodeGetArgs> WorkerNode { get; set; } = null!;

        /// <summary>
        /// A `zookeeper_node` block as defined below.
        /// </summary>
        [Input("zookeeperNode", required: true)]
        public Input<RServerClusterRolesZookeeperNodeGetArgs> ZookeeperNode { get; set; } = null!;

        public RServerClusterRolesGetArgs()
        {
        }
    }

    public sealed class RServerClusterRolesHeadNodeArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The Password associated with the local administrator for the Head Nodes. Changing this forces a new resource to be created.
        /// </summary>
        [Input("password")]
        public Input<string>? Password { get; set; }

        [Input("sshKeys")]
        private InputList<string>? _sshKeys;

        /// <summary>
        /// A list of SSH Keys which should be used for the local administrator on the Head Nodes. Changing this forces a new resource to be created.
        /// </summary>
        public InputList<string> SshKeys
        {
            get => _sshKeys ?? (_sshKeys = new InputList<string>());
            set => _sshKeys = value;
        }

        /// <summary>
        /// The ID of the Subnet within the Virtual Network where the Head Nodes should be provisioned within. Changing this forces a new resource to be created.
        /// </summary>
        [Input("subnetId")]
        public Input<string>? SubnetId { get; set; }

        /// <summary>
        /// The Username of the local administrator for the Head Nodes. Changing this forces a new resource to be created.
        /// </summary>
        [Input("username", required: true)]
        public Input<string> Username { get; set; } = null!;

        /// <summary>
        /// The ID of the Virtual Network where the Head Nodes should be provisioned within. Changing this forces a new resource to be created.
        /// </summary>
        [Input("virtualNetworkId")]
        public Input<string>? VirtualNetworkId { get; set; }

        /// <summary>
        /// The Size of the Virtual Machine which should be used as the Head Nodes. Changing this forces a new resource to be created.
        /// </summary>
        [Input("vmSize", required: true)]
        public Input<string> VmSize { get; set; } = null!;

        public RServerClusterRolesHeadNodeArgs()
        {
        }
    }

    public sealed class RServerClusterRolesHeadNodeGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The Password associated with the local administrator for the Head Nodes. Changing this forces a new resource to be created.
        /// </summary>
        [Input("password")]
        public Input<string>? Password { get; set; }

        [Input("sshKeys")]
        private InputList<string>? _sshKeys;

        /// <summary>
        /// A list of SSH Keys which should be used for the local administrator on the Head Nodes. Changing this forces a new resource to be created.
        /// </summary>
        public InputList<string> SshKeys
        {
            get => _sshKeys ?? (_sshKeys = new InputList<string>());
            set => _sshKeys = value;
        }

        /// <summary>
        /// The ID of the Subnet within the Virtual Network where the Head Nodes should be provisioned within. Changing this forces a new resource to be created.
        /// </summary>
        [Input("subnetId")]
        public Input<string>? SubnetId { get; set; }

        /// <summary>
        /// The Username of the local administrator for the Head Nodes. Changing this forces a new resource to be created.
        /// </summary>
        [Input("username", required: true)]
        public Input<string> Username { get; set; } = null!;

        /// <summary>
        /// The ID of the Virtual Network where the Head Nodes should be provisioned within. Changing this forces a new resource to be created.
        /// </summary>
        [Input("virtualNetworkId")]
        public Input<string>? VirtualNetworkId { get; set; }

        /// <summary>
        /// The Size of the Virtual Machine which should be used as the Head Nodes. Changing this forces a new resource to be created.
        /// </summary>
        [Input("vmSize", required: true)]
        public Input<string> VmSize { get; set; } = null!;

        public RServerClusterRolesHeadNodeGetArgs()
        {
        }
    }

    public sealed class RServerClusterRolesWorkerNodeArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The minimum number of instances which should be run for the Worker Nodes. Changing this forces a new resource to be created.
        /// </summary>
        [Input("minInstanceCount")]
        public Input<int>? MinInstanceCount { get; set; }

        /// <summary>
        /// The Password associated with the local administrator for the Worker Nodes. Changing this forces a new resource to be created.
        /// </summary>
        [Input("password")]
        public Input<string>? Password { get; set; }

        [Input("sshKeys")]
        private InputList<string>? _sshKeys;

        /// <summary>
        /// A list of SSH Keys which should be used for the local administrator on the Worker Nodes. Changing this forces a new resource to be created.
        /// </summary>
        public InputList<string> SshKeys
        {
            get => _sshKeys ?? (_sshKeys = new InputList<string>());
            set => _sshKeys = value;
        }

        /// <summary>
        /// The ID of the Subnet within the Virtual Network where the Worker Nodes should be provisioned within. Changing this forces a new resource to be created.
        /// </summary>
        [Input("subnetId")]
        public Input<string>? SubnetId { get; set; }

        /// <summary>
        /// The number of instances which should be run for the Worker Nodes.
        /// </summary>
        [Input("targetInstanceCount", required: true)]
        public Input<int> TargetInstanceCount { get; set; } = null!;

        /// <summary>
        /// The Username of the local administrator for the Worker Nodes. Changing this forces a new resource to be created.
        /// </summary>
        [Input("username", required: true)]
        public Input<string> Username { get; set; } = null!;

        /// <summary>
        /// The ID of the Virtual Network where the Worker Nodes should be provisioned within. Changing this forces a new resource to be created.
        /// </summary>
        [Input("virtualNetworkId")]
        public Input<string>? VirtualNetworkId { get; set; }

        /// <summary>
        /// The Size of the Virtual Machine which should be used as the Worker Nodes. Changing this forces a new resource to be created.
        /// </summary>
        [Input("vmSize", required: true)]
        public Input<string> VmSize { get; set; } = null!;

        public RServerClusterRolesWorkerNodeArgs()
        {
        }
    }

    public sealed class RServerClusterRolesWorkerNodeGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The minimum number of instances which should be run for the Worker Nodes. Changing this forces a new resource to be created.
        /// </summary>
        [Input("minInstanceCount")]
        public Input<int>? MinInstanceCount { get; set; }

        /// <summary>
        /// The Password associated with the local administrator for the Worker Nodes. Changing this forces a new resource to be created.
        /// </summary>
        [Input("password")]
        public Input<string>? Password { get; set; }

        [Input("sshKeys")]
        private InputList<string>? _sshKeys;

        /// <summary>
        /// A list of SSH Keys which should be used for the local administrator on the Worker Nodes. Changing this forces a new resource to be created.
        /// </summary>
        public InputList<string> SshKeys
        {
            get => _sshKeys ?? (_sshKeys = new InputList<string>());
            set => _sshKeys = value;
        }

        /// <summary>
        /// The ID of the Subnet within the Virtual Network where the Worker Nodes should be provisioned within. Changing this forces a new resource to be created.
        /// </summary>
        [Input("subnetId")]
        public Input<string>? SubnetId { get; set; }

        /// <summary>
        /// The number of instances which should be run for the Worker Nodes.
        /// </summary>
        [Input("targetInstanceCount", required: true)]
        public Input<int> TargetInstanceCount { get; set; } = null!;

        /// <summary>
        /// The Username of the local administrator for the Worker Nodes. Changing this forces a new resource to be created.
        /// </summary>
        [Input("username", required: true)]
        public Input<string> Username { get; set; } = null!;

        /// <summary>
        /// The ID of the Virtual Network where the Worker Nodes should be provisioned within. Changing this forces a new resource to be created.
        /// </summary>
        [Input("virtualNetworkId")]
        public Input<string>? VirtualNetworkId { get; set; }

        /// <summary>
        /// The Size of the Virtual Machine which should be used as the Worker Nodes. Changing this forces a new resource to be created.
        /// </summary>
        [Input("vmSize", required: true)]
        public Input<string> VmSize { get; set; } = null!;

        public RServerClusterRolesWorkerNodeGetArgs()
        {
        }
    }

    public sealed class RServerClusterRolesZookeeperNodeArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The Password associated with the local administrator for the Zookeeper Nodes. Changing this forces a new resource to be created.
        /// </summary>
        [Input("password")]
        public Input<string>? Password { get; set; }

        [Input("sshKeys")]
        private InputList<string>? _sshKeys;

        /// <summary>
        /// A list of SSH Keys which should be used for the local administrator on the Zookeeper Nodes. Changing this forces a new resource to be created.
        /// </summary>
        public InputList<string> SshKeys
        {
            get => _sshKeys ?? (_sshKeys = new InputList<string>());
            set => _sshKeys = value;
        }

        /// <summary>
        /// The ID of the Subnet within the Virtual Network where the Zookeeper Nodes should be provisioned within. Changing this forces a new resource to be created.
        /// </summary>
        [Input("subnetId")]
        public Input<string>? SubnetId { get; set; }

        /// <summary>
        /// The Username of the local administrator for the Zookeeper Nodes. Changing this forces a new resource to be created.
        /// </summary>
        [Input("username", required: true)]
        public Input<string> Username { get; set; } = null!;

        /// <summary>
        /// The ID of the Virtual Network where the Zookeeper Nodes should be provisioned within. Changing this forces a new resource to be created.
        /// </summary>
        [Input("virtualNetworkId")]
        public Input<string>? VirtualNetworkId { get; set; }

        /// <summary>
        /// The Size of the Virtual Machine which should be used as the Zookeeper Nodes. Changing this forces a new resource to be created.
        /// </summary>
        [Input("vmSize", required: true)]
        public Input<string> VmSize { get; set; } = null!;

        public RServerClusterRolesZookeeperNodeArgs()
        {
        }
    }

    public sealed class RServerClusterRolesZookeeperNodeGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The Password associated with the local administrator for the Zookeeper Nodes. Changing this forces a new resource to be created.
        /// </summary>
        [Input("password")]
        public Input<string>? Password { get; set; }

        [Input("sshKeys")]
        private InputList<string>? _sshKeys;

        /// <summary>
        /// A list of SSH Keys which should be used for the local administrator on the Zookeeper Nodes. Changing this forces a new resource to be created.
        /// </summary>
        public InputList<string> SshKeys
        {
            get => _sshKeys ?? (_sshKeys = new InputList<string>());
            set => _sshKeys = value;
        }

        /// <summary>
        /// The ID of the Subnet within the Virtual Network where the Zookeeper Nodes should be provisioned within. Changing this forces a new resource to be created.
        /// </summary>
        [Input("subnetId")]
        public Input<string>? SubnetId { get; set; }

        /// <summary>
        /// The Username of the local administrator for the Zookeeper Nodes. Changing this forces a new resource to be created.
        /// </summary>
        [Input("username", required: true)]
        public Input<string> Username { get; set; } = null!;

        /// <summary>
        /// The ID of the Virtual Network where the Zookeeper Nodes should be provisioned within. Changing this forces a new resource to be created.
        /// </summary>
        [Input("virtualNetworkId")]
        public Input<string>? VirtualNetworkId { get; set; }

        /// <summary>
        /// The Size of the Virtual Machine which should be used as the Zookeeper Nodes. Changing this forces a new resource to be created.
        /// </summary>
        [Input("vmSize", required: true)]
        public Input<string> VmSize { get; set; } = null!;

        public RServerClusterRolesZookeeperNodeGetArgs()
        {
        }
    }

    public sealed class RServerClusterStorageAccountsArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Is this the Default Storage Account for the HDInsight RServer Cluster? Changing this forces a new resource to be created.
        /// </summary>
        [Input("isDefault", required: true)]
        public Input<bool> IsDefault { get; set; } = null!;

        /// <summary>
        /// The Access Key which should be used to connect to the Storage Account. Changing this forces a new resource to be created.
        /// </summary>
        [Input("storageAccountKey", required: true)]
        public Input<string> StorageAccountKey { get; set; } = null!;

        /// <summary>
        /// The ID of the Storage Container. Changing this forces a new resource to be created.
        /// </summary>
        [Input("storageContainerId", required: true)]
        public Input<string> StorageContainerId { get; set; } = null!;

        public RServerClusterStorageAccountsArgs()
        {
        }
    }

    public sealed class RServerClusterStorageAccountsGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Is this the Default Storage Account for the HDInsight RServer Cluster? Changing this forces a new resource to be created.
        /// </summary>
        [Input("isDefault", required: true)]
        public Input<bool> IsDefault { get; set; } = null!;

        /// <summary>
        /// The Access Key which should be used to connect to the Storage Account. Changing this forces a new resource to be created.
        /// </summary>
        [Input("storageAccountKey", required: true)]
        public Input<string> StorageAccountKey { get; set; } = null!;

        /// <summary>
        /// The ID of the Storage Container. Changing this forces a new resource to be created.
        /// </summary>
        [Input("storageContainerId", required: true)]
        public Input<string> StorageContainerId { get; set; } = null!;

        public RServerClusterStorageAccountsGetArgs()
        {
        }
    }
    }

    namespace Outputs
    {

    [OutputType]
    public sealed class RServerClusterGateway
    {
        /// <summary>
        /// Is the Ambari portal enabled? Changing this forces a new resource to be created.
        /// </summary>
        public readonly bool Enabled;
        /// <summary>
        /// The password used for the Ambari Portal. Changing this forces a new resource to be created.
        /// </summary>
        public readonly string Password;
        /// <summary>
        /// The username used for the Ambari Portal. Changing this forces a new resource to be created.
        /// </summary>
        public readonly string Username;

        [OutputConstructor]
        private RServerClusterGateway(
            bool enabled,
            string password,
            string username)
        {
            Enabled = enabled;
            Password = password;
            Username = username;
        }
    }

    [OutputType]
    public sealed class RServerClusterRoles
    {
        /// <summary>
        /// A `edge_node` block as defined above.
        /// </summary>
        public readonly RServerClusterRolesEdgeNode EdgeNode;
        /// <summary>
        /// A `head_node` block as defined above.
        /// </summary>
        public readonly RServerClusterRolesHeadNode HeadNode;
        /// <summary>
        /// A `worker_node` block as defined below.
        /// </summary>
        public readonly RServerClusterRolesWorkerNode WorkerNode;
        /// <summary>
        /// A `zookeeper_node` block as defined below.
        /// </summary>
        public readonly RServerClusterRolesZookeeperNode ZookeeperNode;

        [OutputConstructor]
        private RServerClusterRoles(
            RServerClusterRolesEdgeNode edgeNode,
            RServerClusterRolesHeadNode headNode,
            RServerClusterRolesWorkerNode workerNode,
            RServerClusterRolesZookeeperNode zookeeperNode)
        {
            EdgeNode = edgeNode;
            HeadNode = headNode;
            WorkerNode = workerNode;
            ZookeeperNode = zookeeperNode;
        }
    }

    [OutputType]
    public sealed class RServerClusterRolesEdgeNode
    {
        /// <summary>
        /// The Password associated with the local administrator for the Edge Node. Changing this forces a new resource to be created.
        /// </summary>
        public readonly string? Password;
        /// <summary>
        /// A list of SSH Keys which should be used for the local administrator on the Edge Node. Changing this forces a new resource to be created.
        /// </summary>
        public readonly ImmutableArray<string> SshKeys;
        /// <summary>
        /// The ID of the Subnet within the Virtual Network where the Edge Node should be provisioned within. Changing this forces a new resource to be created.
        /// </summary>
        public readonly string? SubnetId;
        /// <summary>
        /// The Username of the local administrator for the Edge Node. Changing this forces a new resource to be created.
        /// </summary>
        public readonly string Username;
        /// <summary>
        /// The ID of the Virtual Network where the Edge Node should be provisioned within. Changing this forces a new resource to be created.
        /// </summary>
        public readonly string? VirtualNetworkId;
        /// <summary>
        /// The Size of the Virtual Machine which should be used as the Edge Node. Changing this forces a new resource to be created.
        /// </summary>
        public readonly string VmSize;

        [OutputConstructor]
        private RServerClusterRolesEdgeNode(
            string? password,
            ImmutableArray<string> sshKeys,
            string? subnetId,
            string username,
            string? virtualNetworkId,
            string vmSize)
        {
            Password = password;
            SshKeys = sshKeys;
            SubnetId = subnetId;
            Username = username;
            VirtualNetworkId = virtualNetworkId;
            VmSize = vmSize;
        }
    }

    [OutputType]
    public sealed class RServerClusterRolesHeadNode
    {
        /// <summary>
        /// The Password associated with the local administrator for the Head Nodes. Changing this forces a new resource to be created.
        /// </summary>
        public readonly string? Password;
        /// <summary>
        /// A list of SSH Keys which should be used for the local administrator on the Head Nodes. Changing this forces a new resource to be created.
        /// </summary>
        public readonly ImmutableArray<string> SshKeys;
        /// <summary>
        /// The ID of the Subnet within the Virtual Network where the Head Nodes should be provisioned within. Changing this forces a new resource to be created.
        /// </summary>
        public readonly string? SubnetId;
        /// <summary>
        /// The Username of the local administrator for the Head Nodes. Changing this forces a new resource to be created.
        /// </summary>
        public readonly string Username;
        /// <summary>
        /// The ID of the Virtual Network where the Head Nodes should be provisioned within. Changing this forces a new resource to be created.
        /// </summary>
        public readonly string? VirtualNetworkId;
        /// <summary>
        /// The Size of the Virtual Machine which should be used as the Head Nodes. Changing this forces a new resource to be created.
        /// </summary>
        public readonly string VmSize;

        [OutputConstructor]
        private RServerClusterRolesHeadNode(
            string? password,
            ImmutableArray<string> sshKeys,
            string? subnetId,
            string username,
            string? virtualNetworkId,
            string vmSize)
        {
            Password = password;
            SshKeys = sshKeys;
            SubnetId = subnetId;
            Username = username;
            VirtualNetworkId = virtualNetworkId;
            VmSize = vmSize;
        }
    }

    [OutputType]
    public sealed class RServerClusterRolesWorkerNode
    {
        /// <summary>
        /// The minimum number of instances which should be run for the Worker Nodes. Changing this forces a new resource to be created.
        /// </summary>
        public readonly int? MinInstanceCount;
        /// <summary>
        /// The Password associated with the local administrator for the Worker Nodes. Changing this forces a new resource to be created.
        /// </summary>
        public readonly string? Password;
        /// <summary>
        /// A list of SSH Keys which should be used for the local administrator on the Worker Nodes. Changing this forces a new resource to be created.
        /// </summary>
        public readonly ImmutableArray<string> SshKeys;
        /// <summary>
        /// The ID of the Subnet within the Virtual Network where the Worker Nodes should be provisioned within. Changing this forces a new resource to be created.
        /// </summary>
        public readonly string? SubnetId;
        /// <summary>
        /// The number of instances which should be run for the Worker Nodes.
        /// </summary>
        public readonly int TargetInstanceCount;
        /// <summary>
        /// The Username of the local administrator for the Worker Nodes. Changing this forces a new resource to be created.
        /// </summary>
        public readonly string Username;
        /// <summary>
        /// The ID of the Virtual Network where the Worker Nodes should be provisioned within. Changing this forces a new resource to be created.
        /// </summary>
        public readonly string? VirtualNetworkId;
        /// <summary>
        /// The Size of the Virtual Machine which should be used as the Worker Nodes. Changing this forces a new resource to be created.
        /// </summary>
        public readonly string VmSize;

        [OutputConstructor]
        private RServerClusterRolesWorkerNode(
            int? minInstanceCount,
            string? password,
            ImmutableArray<string> sshKeys,
            string? subnetId,
            int targetInstanceCount,
            string username,
            string? virtualNetworkId,
            string vmSize)
        {
            MinInstanceCount = minInstanceCount;
            Password = password;
            SshKeys = sshKeys;
            SubnetId = subnetId;
            TargetInstanceCount = targetInstanceCount;
            Username = username;
            VirtualNetworkId = virtualNetworkId;
            VmSize = vmSize;
        }
    }

    [OutputType]
    public sealed class RServerClusterRolesZookeeperNode
    {
        /// <summary>
        /// The Password associated with the local administrator for the Zookeeper Nodes. Changing this forces a new resource to be created.
        /// </summary>
        public readonly string? Password;
        /// <summary>
        /// A list of SSH Keys which should be used for the local administrator on the Zookeeper Nodes. Changing this forces a new resource to be created.
        /// </summary>
        public readonly ImmutableArray<string> SshKeys;
        /// <summary>
        /// The ID of the Subnet within the Virtual Network where the Zookeeper Nodes should be provisioned within. Changing this forces a new resource to be created.
        /// </summary>
        public readonly string? SubnetId;
        /// <summary>
        /// The Username of the local administrator for the Zookeeper Nodes. Changing this forces a new resource to be created.
        /// </summary>
        public readonly string Username;
        /// <summary>
        /// The ID of the Virtual Network where the Zookeeper Nodes should be provisioned within. Changing this forces a new resource to be created.
        /// </summary>
        public readonly string? VirtualNetworkId;
        /// <summary>
        /// The Size of the Virtual Machine which should be used as the Zookeeper Nodes. Changing this forces a new resource to be created.
        /// </summary>
        public readonly string VmSize;

        [OutputConstructor]
        private RServerClusterRolesZookeeperNode(
            string? password,
            ImmutableArray<string> sshKeys,
            string? subnetId,
            string username,
            string? virtualNetworkId,
            string vmSize)
        {
            Password = password;
            SshKeys = sshKeys;
            SubnetId = subnetId;
            Username = username;
            VirtualNetworkId = virtualNetworkId;
            VmSize = vmSize;
        }
    }

    [OutputType]
    public sealed class RServerClusterStorageAccounts
    {
        /// <summary>
        /// Is this the Default Storage Account for the HDInsight RServer Cluster? Changing this forces a new resource to be created.
        /// </summary>
        public readonly bool IsDefault;
        /// <summary>
        /// The Access Key which should be used to connect to the Storage Account. Changing this forces a new resource to be created.
        /// </summary>
        public readonly string StorageAccountKey;
        /// <summary>
        /// The ID of the Storage Container. Changing this forces a new resource to be created.
        /// </summary>
        public readonly string StorageContainerId;

        [OutputConstructor]
        private RServerClusterStorageAccounts(
            bool isDefault,
            string storageAccountKey,
            string storageContainerId)
        {
            IsDefault = isDefault;
            StorageAccountKey = storageAccountKey;
            StorageContainerId = storageContainerId;
        }
    }
    }
}
