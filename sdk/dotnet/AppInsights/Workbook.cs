// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.AppInsights
{
    /// <summary>
    /// Manages an Azure Workbook.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Text.Json;
    /// using Pulumi;
    /// using Azure = Pulumi.Azure;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var exampleResourceGroup = new Azure.Core.ResourceGroup("exampleResourceGroup", new Azure.Core.ResourceGroupArgs
    ///         {
    ///             Location = "West Europe",
    ///         });
    ///         var exampleWorkbook = new Azure.AppInsights.Workbook("exampleWorkbook", new Azure.AppInsights.WorkbookArgs
    ///         {
    ///             ResourceGroupName = exampleResourceGroup.Name,
    ///             Location = exampleResourceGroup.Location,
    ///             DisplayName = "workbook1",
    ///             DataJson = JsonSerializer.Serialize(new Dictionary&lt;string, object?&gt;
    ///             {
    ///                 { "version", "Notebook/1.0" },
    ///                 { "items", new[]
    ///                     {
    ///                         new Dictionary&lt;string, object?&gt;
    ///                         {
    ///                             { "type", 1 },
    ///                             { "content", new Dictionary&lt;string, object?&gt;
    ///                             {
    ///                                 { "json", "Test2022" },
    ///                             } },
    ///                             { "name", "text - 0" },
    ///                         },
    ///                     }
    ///                  },
    ///                 { "isLocked", false },
    ///                 { "fallbackResourceIds", new[]
    ///                     {
    ///                         "Azure Monitor",
    ///                     }
    ///                  },
    ///             }),
    ///             Tags = 
    ///             {
    ///                 { "ENV", "Test" },
    ///             },
    ///         });
    ///     }
    /// 
    /// }
    /// ```
    /// 
    /// ## Import
    /// 
    /// Workbooks can be imported using the `resource id`, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import azure:appinsights/workbook:Workbook example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resourceGroup1/providers/Microsoft.Insights/workbooks/resource1
    /// ```
    /// </summary>
    [AzureResourceType("azure:appinsights/workbook:Workbook")]
    public partial class Workbook : Pulumi.CustomResource
    {
        /// <summary>
        /// Workbook category, as defined by the user at creation time. There may be additional category types beyond the following: `workbook`, `sentinel`. Defaults to `workbook`.
        /// </summary>
        [Output("category")]
        public Output<string?> Category { get; private set; } = null!;

        /// <summary>
        /// Configuration of this particular workbook. Configuration data is a string containing valid JSON.
        /// </summary>
        [Output("dataJson")]
        public Output<string> DataJson { get; private set; } = null!;

        /// <summary>
        /// Specifies the description of the workbook.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// Specifies the user-defined name (display name) of the workbook.
        /// </summary>
        [Output("displayName")]
        public Output<string> DisplayName { get; private set; } = null!;

        /// <summary>
        /// An `identity` block as defined below. Changing this forces a new Workbook to be created.
        /// </summary>
        [Output("identity")]
        public Output<Outputs.WorkbookIdentity?> Identity { get; private set; } = null!;

        /// <summary>
        /// Specifies the Azure Region where the Workbook should exist. Changing this forces a new Workbook to be created.
        /// </summary>
        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// Specifies the name of this Workbook as a UUID/GUID. It should not contain any uppercase letters. Changing this forces a new Workbook to be created.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Specifies the name of the Resource Group where the Workbook should exist. Changing this forces a new Workbook to be created.
        /// </summary>
        [Output("resourceGroupName")]
        public Output<string> ResourceGroupName { get; private set; } = null!;

        /// <summary>
        /// Resource ID for a source resource. It should not contain any uppercase letters. Defaults to `azure monitor`.
        /// </summary>
        [Output("sourceId")]
        public Output<string?> SourceId { get; private set; } = null!;

        /// <summary>
        /// Specifies the Resource Manager ID of the Storage Container when bring your own storage is used. Changing this forces a new Workbook to be created.
        /// </summary>
        [Output("storageContainerId")]
        public Output<string?> StorageContainerId { get; private set; } = null!;

        /// <summary>
        /// A mapping of tags which should be assigned to the Workbook.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;


        /// <summary>
        /// Create a Workbook resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Workbook(string name, WorkbookArgs args, CustomResourceOptions? options = null)
            : base("azure:appinsights/workbook:Workbook", name, args ?? new WorkbookArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Workbook(string name, Input<string> id, WorkbookState? state = null, CustomResourceOptions? options = null)
            : base("azure:appinsights/workbook:Workbook", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Workbook resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Workbook Get(string name, Input<string> id, WorkbookState? state = null, CustomResourceOptions? options = null)
        {
            return new Workbook(name, id, state, options);
        }
    }

    public sealed class WorkbookArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Workbook category, as defined by the user at creation time. There may be additional category types beyond the following: `workbook`, `sentinel`. Defaults to `workbook`.
        /// </summary>
        [Input("category")]
        public Input<string>? Category { get; set; }

        /// <summary>
        /// Configuration of this particular workbook. Configuration data is a string containing valid JSON.
        /// </summary>
        [Input("dataJson", required: true)]
        public Input<string> DataJson { get; set; } = null!;

        /// <summary>
        /// Specifies the description of the workbook.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Specifies the user-defined name (display name) of the workbook.
        /// </summary>
        [Input("displayName", required: true)]
        public Input<string> DisplayName { get; set; } = null!;

        /// <summary>
        /// An `identity` block as defined below. Changing this forces a new Workbook to be created.
        /// </summary>
        [Input("identity")]
        public Input<Inputs.WorkbookIdentityArgs>? Identity { get; set; }

        /// <summary>
        /// Specifies the Azure Region where the Workbook should exist. Changing this forces a new Workbook to be created.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// Specifies the name of this Workbook as a UUID/GUID. It should not contain any uppercase letters. Changing this forces a new Workbook to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Specifies the name of the Resource Group where the Workbook should exist. Changing this forces a new Workbook to be created.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// Resource ID for a source resource. It should not contain any uppercase letters. Defaults to `azure monitor`.
        /// </summary>
        [Input("sourceId")]
        public Input<string>? SourceId { get; set; }

        /// <summary>
        /// Specifies the Resource Manager ID of the Storage Container when bring your own storage is used. Changing this forces a new Workbook to be created.
        /// </summary>
        [Input("storageContainerId")]
        public Input<string>? StorageContainerId { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// A mapping of tags which should be assigned to the Workbook.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public WorkbookArgs()
        {
        }
    }

    public sealed class WorkbookState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Workbook category, as defined by the user at creation time. There may be additional category types beyond the following: `workbook`, `sentinel`. Defaults to `workbook`.
        /// </summary>
        [Input("category")]
        public Input<string>? Category { get; set; }

        /// <summary>
        /// Configuration of this particular workbook. Configuration data is a string containing valid JSON.
        /// </summary>
        [Input("dataJson")]
        public Input<string>? DataJson { get; set; }

        /// <summary>
        /// Specifies the description of the workbook.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Specifies the user-defined name (display name) of the workbook.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        /// <summary>
        /// An `identity` block as defined below. Changing this forces a new Workbook to be created.
        /// </summary>
        [Input("identity")]
        public Input<Inputs.WorkbookIdentityGetArgs>? Identity { get; set; }

        /// <summary>
        /// Specifies the Azure Region where the Workbook should exist. Changing this forces a new Workbook to be created.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// Specifies the name of this Workbook as a UUID/GUID. It should not contain any uppercase letters. Changing this forces a new Workbook to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Specifies the name of the Resource Group where the Workbook should exist. Changing this forces a new Workbook to be created.
        /// </summary>
        [Input("resourceGroupName")]
        public Input<string>? ResourceGroupName { get; set; }

        /// <summary>
        /// Resource ID for a source resource. It should not contain any uppercase letters. Defaults to `azure monitor`.
        /// </summary>
        [Input("sourceId")]
        public Input<string>? SourceId { get; set; }

        /// <summary>
        /// Specifies the Resource Manager ID of the Storage Container when bring your own storage is used. Changing this forces a new Workbook to be created.
        /// </summary>
        [Input("storageContainerId")]
        public Input<string>? StorageContainerId { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// A mapping of tags which should be assigned to the Workbook.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public WorkbookState()
        {
        }
    }
}
