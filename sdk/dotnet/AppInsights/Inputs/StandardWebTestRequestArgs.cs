// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.AppInsights.Inputs
{

    public sealed class StandardWebTestRequestArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The WebTest request body.
        /// </summary>
        [Input("body")]
        public Input<string>? Body { get; set; }

        /// <summary>
        /// Should the following of redirects be enabled? Defaults to `true`.
        /// </summary>
        [Input("followRedirectsEnabled")]
        public Input<bool>? FollowRedirectsEnabled { get; set; }

        [Input("headers")]
        private InputList<Inputs.StandardWebTestRequestHeaderArgs>? _headers;

        /// <summary>
        /// One or more `header` blocks as defined above.
        /// </summary>
        public InputList<Inputs.StandardWebTestRequestHeaderArgs> Headers
        {
            get => _headers ?? (_headers = new InputList<Inputs.StandardWebTestRequestHeaderArgs>());
            set => _headers = value;
        }

        /// <summary>
        /// Which HTTP verb to use for the call. Options are 'GET', 'POST', 'PUT', 'PATCH', and 'DELETE'. Defaults to `GET`.
        /// </summary>
        [Input("httpVerb")]
        public Input<string>? HttpVerb { get; set; }

        /// <summary>
        /// Should the parsing of dependend requests be enabled? Defaults to `true`.
        /// </summary>
        [Input("parseDependentRequestsEnabled")]
        public Input<bool>? ParseDependentRequestsEnabled { get; set; }

        /// <summary>
        /// The WebTest request URL.
        /// </summary>
        [Input("url", required: true)]
        public Input<string> Url { get; set; } = null!;

        public StandardWebTestRequestArgs()
        {
        }
        public static new StandardWebTestRequestArgs Empty => new StandardWebTestRequestArgs();
    }
}
