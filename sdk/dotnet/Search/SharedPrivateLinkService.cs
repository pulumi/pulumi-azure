// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Search
{
    /// <summary>
    /// Manages the Shared Private Link Service for an Azure Search Service.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Azure = Pulumi.Azure;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var testResourceGroup = new Azure.Core.ResourceGroup("testResourceGroup", new()
    ///     {
    ///         Location = "east us",
    ///     });
    /// 
    ///     var testService = new Azure.Search.Service("testService", new()
    ///     {
    ///         ResourceGroupName = testResourceGroup.Name,
    ///         Location = testResourceGroup.Location,
    ///         Sku = "standard",
    ///     });
    /// 
    ///     var testAccount = new Azure.Storage.Account("testAccount", new()
    ///     {
    ///         ResourceGroupName = testResourceGroup.Name,
    ///         Location = testResourceGroup.Location,
    ///         AccountTier = "Standard",
    ///         AccountReplicationType = "LRS",
    ///     });
    /// 
    ///     var testSharedPrivateLinkService = new Azure.Search.SharedPrivateLinkService("testSharedPrivateLinkService", new()
    ///     {
    ///         SearchServiceId = testService.Id,
    ///         SubresourceName = "blob",
    ///         TargetResourceId = testAccount.Id,
    ///         RequestMessage = "please approve",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Azure Search Shared Private Link Resource can be imported using the `resource id`, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import azure:search/sharedPrivateLinkService:SharedPrivateLinkService example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Search/searchServices/service1/sharedPrivateLinkResources/resource1
    /// ```
    /// </summary>
    [AzureResourceType("azure:search/sharedPrivateLinkService:SharedPrivateLinkService")]
    public partial class SharedPrivateLinkService : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Specify the name of the Azure Search Shared Private Link Resource. Changing this forces a new resource to be created.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Specify the request message for requesting approval of the Shared Private Link Enabled Remote Resource.
        /// </summary>
        [Output("requestMessage")]
        public Output<string?> RequestMessage { get; private set; } = null!;

        /// <summary>
        /// Specify the id of the Azure Search Service. Changing this forces a new resource to be created.
        /// </summary>
        [Output("searchServiceId")]
        public Output<string> SearchServiceId { get; private set; } = null!;

        /// <summary>
        /// The status of a private endpoint connection. Possible values are Pending, Approved, Rejected or Disconnected.
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        /// <summary>
        /// Specify the sub resource name which the Azure Search Private Endpoint is able to connect to. Changing this forces a new resource to be created.
        /// </summary>
        [Output("subresourceName")]
        public Output<string> SubresourceName { get; private set; } = null!;

        /// <summary>
        /// Specify the ID of the Shared Private Link Enabled Remote Resource which this Azure Search Private Endpoint should be connected to. Changing this forces a new resource to be created.
        /// 
        /// &gt; **NOTE:** The sub resource name should match with the type of the target resource id that's being specified.
        /// </summary>
        [Output("targetResourceId")]
        public Output<string> TargetResourceId { get; private set; } = null!;


        /// <summary>
        /// Create a SharedPrivateLinkService resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public SharedPrivateLinkService(string name, SharedPrivateLinkServiceArgs args, CustomResourceOptions? options = null)
            : base("azure:search/sharedPrivateLinkService:SharedPrivateLinkService", name, args ?? new SharedPrivateLinkServiceArgs(), MakeResourceOptions(options, ""))
        {
        }

        private SharedPrivateLinkService(string name, Input<string> id, SharedPrivateLinkServiceState? state = null, CustomResourceOptions? options = null)
            : base("azure:search/sharedPrivateLinkService:SharedPrivateLinkService", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing SharedPrivateLinkService resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static SharedPrivateLinkService Get(string name, Input<string> id, SharedPrivateLinkServiceState? state = null, CustomResourceOptions? options = null)
        {
            return new SharedPrivateLinkService(name, id, state, options);
        }
    }

    public sealed class SharedPrivateLinkServiceArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specify the name of the Azure Search Shared Private Link Resource. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Specify the request message for requesting approval of the Shared Private Link Enabled Remote Resource.
        /// </summary>
        [Input("requestMessage")]
        public Input<string>? RequestMessage { get; set; }

        /// <summary>
        /// Specify the id of the Azure Search Service. Changing this forces a new resource to be created.
        /// </summary>
        [Input("searchServiceId", required: true)]
        public Input<string> SearchServiceId { get; set; } = null!;

        /// <summary>
        /// Specify the sub resource name which the Azure Search Private Endpoint is able to connect to. Changing this forces a new resource to be created.
        /// </summary>
        [Input("subresourceName", required: true)]
        public Input<string> SubresourceName { get; set; } = null!;

        /// <summary>
        /// Specify the ID of the Shared Private Link Enabled Remote Resource which this Azure Search Private Endpoint should be connected to. Changing this forces a new resource to be created.
        /// 
        /// &gt; **NOTE:** The sub resource name should match with the type of the target resource id that's being specified.
        /// </summary>
        [Input("targetResourceId", required: true)]
        public Input<string> TargetResourceId { get; set; } = null!;

        public SharedPrivateLinkServiceArgs()
        {
        }
        public static new SharedPrivateLinkServiceArgs Empty => new SharedPrivateLinkServiceArgs();
    }

    public sealed class SharedPrivateLinkServiceState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specify the name of the Azure Search Shared Private Link Resource. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Specify the request message for requesting approval of the Shared Private Link Enabled Remote Resource.
        /// </summary>
        [Input("requestMessage")]
        public Input<string>? RequestMessage { get; set; }

        /// <summary>
        /// Specify the id of the Azure Search Service. Changing this forces a new resource to be created.
        /// </summary>
        [Input("searchServiceId")]
        public Input<string>? SearchServiceId { get; set; }

        /// <summary>
        /// The status of a private endpoint connection. Possible values are Pending, Approved, Rejected or Disconnected.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        /// <summary>
        /// Specify the sub resource name which the Azure Search Private Endpoint is able to connect to. Changing this forces a new resource to be created.
        /// </summary>
        [Input("subresourceName")]
        public Input<string>? SubresourceName { get; set; }

        /// <summary>
        /// Specify the ID of the Shared Private Link Enabled Remote Resource which this Azure Search Private Endpoint should be connected to. Changing this forces a new resource to be created.
        /// 
        /// &gt; **NOTE:** The sub resource name should match with the type of the target resource id that's being specified.
        /// </summary>
        [Input("targetResourceId")]
        public Input<string>? TargetResourceId { get; set; }

        public SharedPrivateLinkServiceState()
        {
        }
        public static new SharedPrivateLinkServiceState Empty => new SharedPrivateLinkServiceState();
    }
}
