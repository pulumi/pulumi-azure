// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.DomainServices.Outputs
{

    [OutputType]
    public sealed class ServiceSecureLdap
    {
        public readonly string? CertificateExpiry;
        public readonly string? CertificateThumbprint;
        /// <summary>
        /// Whether to enable secure LDAP for the managed domain. Defaults to `false`.
        /// </summary>
        public readonly bool Enabled;
        /// <summary>
        /// Whether to enable external access to LDAPS over the Internet. Defaults to `false`.
        /// </summary>
        public readonly bool? ExternalAccessEnabled;
        /// <summary>
        /// The certificate/private key to use for LDAPS, as a base64-encoded TripleDES-SHA1 encrypted PKCS#12 bundle (PFX file).
        /// </summary>
        public readonly string PfxCertificate;
        /// <summary>
        /// The password to use for decrypting the PKCS#12 bundle (PFX file).
        /// </summary>
        public readonly string PfxCertificatePassword;
        public readonly string? PublicCertificate;

        [OutputConstructor]
        private ServiceSecureLdap(
            string? certificateExpiry,

            string? certificateThumbprint,

            bool enabled,

            bool? externalAccessEnabled,

            string pfxCertificate,

            string pfxCertificatePassword,

            string? publicCertificate)
        {
            CertificateExpiry = certificateExpiry;
            CertificateThumbprint = certificateThumbprint;
            Enabled = enabled;
            ExternalAccessEnabled = externalAccessEnabled;
            PfxCertificate = pfxCertificate;
            PfxCertificatePassword = pfxCertificatePassword;
            PublicCertificate = publicCertificate;
        }
    }
}
