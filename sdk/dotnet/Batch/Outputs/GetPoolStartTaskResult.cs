// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Batch.Outputs
{

    [OutputType]
    public sealed class GetPoolStartTaskResult
    {
        /// <summary>
        /// The command line executed by the start task.
        /// </summary>
        public readonly string CommandLine;
        /// <summary>
        /// A map of strings (key,value) that represents the environment variables to set in the start task.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Environment;
        /// <summary>
        /// The number of retry count.
        /// </summary>
        public readonly int? MaxTaskRetryCount;
        /// <summary>
        /// One or more `resource_file` blocks that describe the files to be downloaded to a compute node.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetPoolStartTaskResourceFileResult> ResourceFiles;
        /// <summary>
        /// A `user_identity` block that describes the user identity under which the start task runs.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetPoolStartTaskUserIdentityResult> UserIdentities;
        /// <summary>
        /// A flag that indicates if the Batch pool should wait for the start task to be completed.
        /// </summary>
        public readonly bool? WaitForSuccess;

        [OutputConstructor]
        private GetPoolStartTaskResult(
            string commandLine,

            ImmutableDictionary<string, string>? environment,

            int? maxTaskRetryCount,

            ImmutableArray<Outputs.GetPoolStartTaskResourceFileResult> resourceFiles,

            ImmutableArray<Outputs.GetPoolStartTaskUserIdentityResult> userIdentities,

            bool? waitForSuccess)
        {
            CommandLine = commandLine;
            Environment = environment;
            MaxTaskRetryCount = maxTaskRetryCount;
            ResourceFiles = resourceFiles;
            UserIdentities = userIdentities;
            WaitForSuccess = waitForSuccess;
        }
    }
}
