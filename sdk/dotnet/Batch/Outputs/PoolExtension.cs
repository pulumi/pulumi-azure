// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Batch.Outputs
{

    [OutputType]
    public sealed class PoolExtension
    {
        /// <summary>
        /// Indicates whether the extension should use a newer minor version if one is available at deployment time. Once deployed, however, the extension will not upgrade minor versions unless redeployed, even with this property set to true.
        /// </summary>
        public readonly bool? AutoUpgradeMinorVersion;
        /// <summary>
        /// Indicates whether the extension should be automatically upgraded by the platform if there is a newer version available. Supported values are `true` and `false`.
        /// 
        /// &gt; **NOTE:** When `automatic_upgrade_enabled` is set to `true`, the `type_handler_version` is automatically updated by the Azure platform when a new version is available and any change in `type_handler_version` should be manually ignored by user.
        /// </summary>
        public readonly bool? AutomaticUpgradeEnabled;
        /// <summary>
        /// The name of the virtual machine extension.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The extension can contain either `protected_settings` or `provision_after_extensions` or no protected settings at all.
        /// </summary>
        public readonly string? ProtectedSettings;
        /// <summary>
        /// The collection of extension names. Collection of extension names after which this extension needs to be provisioned.
        /// </summary>
        public readonly ImmutableArray<string> ProvisionAfterExtensions;
        /// <summary>
        /// The name of the extension handler publisher.The name of the extension handler publisher.
        /// </summary>
        public readonly string Publisher;
        /// <summary>
        /// JSON formatted public settings for the extension.
        /// </summary>
        public readonly string? SettingsJson;
        /// <summary>
        /// The type of the extensions.
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// The version of script handler.
        /// </summary>
        public readonly string? TypeHandlerVersion;

        [OutputConstructor]
        private PoolExtension(
            bool? autoUpgradeMinorVersion,

            bool? automaticUpgradeEnabled,

            string name,

            string? protectedSettings,

            ImmutableArray<string> provisionAfterExtensions,

            string publisher,

            string? settingsJson,

            string type,

            string? typeHandlerVersion)
        {
            AutoUpgradeMinorVersion = autoUpgradeMinorVersion;
            AutomaticUpgradeEnabled = automaticUpgradeEnabled;
            Name = name;
            ProtectedSettings = protectedSettings;
            ProvisionAfterExtensions = provisionAfterExtensions;
            Publisher = publisher;
            SettingsJson = settingsJson;
            Type = type;
            TypeHandlerVersion = typeHandlerVersion;
        }
    }
}
