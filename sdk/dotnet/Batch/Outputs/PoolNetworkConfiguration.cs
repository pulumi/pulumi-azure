// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Batch.Outputs
{

    [OutputType]
    public sealed class PoolNetworkConfiguration
    {
        /// <summary>
        /// Whether to enable accelerated networking. Possible values are `true` and `false`. Defaults to `false`. Changing this forces a new resource to be created.
        /// </summary>
        public readonly bool? AcceleratedNetworkingEnabled;
        /// <summary>
        /// The scope of dynamic vnet assignment. Allowed values: `none`, `job`. Changing this forces a new resource to be created. Defaults to `none`.
        /// </summary>
        public readonly string? DynamicVnetAssignmentScope;
        /// <summary>
        /// A list of `endpoint_configuration` blocks that can be used to address specific ports on an individual compute node externally as defined below. Set as documented in the inbound_nat_pools block below. Changing this forces a new resource to be created.
        /// </summary>
        public readonly ImmutableArray<Outputs.PoolNetworkConfigurationEndpointConfiguration> EndpointConfigurations;
        /// <summary>
        /// Type of public IP address provisioning. Supported values are `BatchManaged`, `UserManaged` and `NoPublicIPAddresses`.
        /// </summary>
        public readonly string? PublicAddressProvisioningType;
        /// <summary>
        /// A list of public IP ids that will be allocated to nodes. Changing this forces a new resource to be created.
        /// </summary>
        public readonly ImmutableArray<string> PublicIps;
        /// <summary>
        /// The ARM resource identifier of the virtual network subnet which the compute nodes of the pool will join. Changing this forces a new resource to be created.
        /// </summary>
        public readonly string? SubnetId;

        [OutputConstructor]
        private PoolNetworkConfiguration(
            bool? acceleratedNetworkingEnabled,

            string? dynamicVnetAssignmentScope,

            ImmutableArray<Outputs.PoolNetworkConfigurationEndpointConfiguration> endpointConfigurations,

            string? publicAddressProvisioningType,

            ImmutableArray<string> publicIps,

            string? subnetId)
        {
            AcceleratedNetworkingEnabled = acceleratedNetworkingEnabled;
            DynamicVnetAssignmentScope = dynamicVnetAssignmentScope;
            EndpointConfigurations = endpointConfigurations;
            PublicAddressProvisioningType = publicAddressProvisioningType;
            PublicIps = publicIps;
            SubnetId = subnetId;
        }
    }
}
