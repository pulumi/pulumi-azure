// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Batch.Outputs
{

    [OutputType]
    public sealed class GetPoolStartTaskContainerResult
    {
        /// <summary>
        /// The image to use to create the container in which the task will run.
        /// </summary>
        public readonly string ImageName;
        /// <summary>
        /// The same reference as `ContainerRegistries` block defined as follows.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetPoolStartTaskContainerRegistryResult> Registries;
        /// <summary>
        /// Additional options to the container create command.
        /// </summary>
        public readonly string RunOptions;
        /// <summary>
        /// A flag to indicate where the container task working directory is.
        /// </summary>
        public readonly string WorkingDirectory;

        [OutputConstructor]
        private GetPoolStartTaskContainerResult(
            string imageName,

            ImmutableArray<Outputs.GetPoolStartTaskContainerRegistryResult> registries,

            string runOptions,

            string workingDirectory)
        {
            ImageName = imageName;
            Registries = registries;
            RunOptions = runOptions;
            WorkingDirectory = workingDirectory;
        }
    }
}
