// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Batch.Inputs
{

    public sealed class PoolUserAccountArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The elevation level of the user account. "NonAdmin" - The auto user is a standard user without elevated access. "Admin" - The auto user is a user with elevated access and operates with full Administrator permissions. The default value is nonAdmin.
        /// </summary>
        [Input("elevationLevel", required: true)]
        public Input<string> ElevationLevel { get; set; } = null!;

        [Input("linuxUserConfigurations")]
        private InputList<Inputs.PoolUserAccountLinuxUserConfigurationArgs>? _linuxUserConfigurations;

        /// <summary>
        /// The `linux_user_configuration` block defined below is a linux-specific user configuration for the user account. This property is ignored if specified on a Windows pool. If not specified, the user is created with the default options.
        /// </summary>
        public InputList<Inputs.PoolUserAccountLinuxUserConfigurationArgs> LinuxUserConfigurations
        {
            get => _linuxUserConfigurations ?? (_linuxUserConfigurations = new InputList<Inputs.PoolUserAccountLinuxUserConfigurationArgs>());
            set => _linuxUserConfigurations = value;
        }

        /// <summary>
        /// The name of the user account.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        [Input("password", required: true)]
        private Input<string>? _password;

        /// <summary>
        /// The password for the user account.
        /// </summary>
        public Input<string>? Password
        {
            get => _password;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _password = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("windowsUserConfigurations")]
        private InputList<Inputs.PoolUserAccountWindowsUserConfigurationArgs>? _windowsUserConfigurations;

        /// <summary>
        /// The `windows_user_configuration` block defined below is a windows-specific user configuration for the user account. This property can only be specified if the user is on a Windows pool. If not specified and on a Windows pool, the user is created with the default options.
        /// </summary>
        public InputList<Inputs.PoolUserAccountWindowsUserConfigurationArgs> WindowsUserConfigurations
        {
            get => _windowsUserConfigurations ?? (_windowsUserConfigurations = new InputList<Inputs.PoolUserAccountWindowsUserConfigurationArgs>());
            set => _windowsUserConfigurations = value;
        }

        public PoolUserAccountArgs()
        {
        }
        public static new PoolUserAccountArgs Empty => new PoolUserAccountArgs();
    }
}
