// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Batch
{
    public static partial class Invokes
    {
        /// <summary>
        /// Use this data source to access information about an existing Batch Account.
        /// 
        /// &gt; This content is derived from https://github.com/terraform-providers/terraform-provider-azurerm/blob/master/website/docs/d/batch_account.html.markdown.
        /// </summary>
        public static Task<GetAccountResult> GetAccount(GetAccountArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetAccountResult>("azure:batch/getAccount:getAccount", args ?? InvokeArgs.Empty, options.WithVersion());
    }

    public sealed class GetAccountArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the Batch account.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        /// <summary>
        /// The Name of the Resource Group where this Batch account exists.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetAccountArgs()
        {
        }
    }

    [OutputType]
    public sealed class GetAccountResult
    {
        /// <summary>
        /// The account endpoint used to interact with the Batch service.
        /// </summary>
        public readonly string AccountEndpoint;
        /// <summary>
        /// The `key_vault_reference` block that describes the Azure KeyVault reference to use when deploying the Azure Batch account using the `UserSubscription` pool allocation mode. 
        /// </summary>
        public readonly ImmutableArray<Outputs.GetAccountKeyVaultReferencesResult> KeyVaultReferences;
        /// <summary>
        /// The Azure Region in which this Batch account exists.
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// The Batch account name.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The pool allocation mode configured for this Batch account.
        /// </summary>
        public readonly string PoolAllocationMode;
        /// <summary>
        /// The Batch account primary access key.
        /// </summary>
        public readonly string PrimaryAccessKey;
        public readonly string ResourceGroupName;
        /// <summary>
        /// The Batch account secondary access key.
        /// </summary>
        public readonly string SecondaryAccessKey;
        /// <summary>
        /// The ID of the Storage Account used for this Batch account.
        /// </summary>
        public readonly string StorageAccountId;
        /// <summary>
        /// A map of tags assigned to the Batch account.
        /// </summary>
        public readonly ImmutableDictionary<string, string> Tags;
        /// <summary>
        /// id is the provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;

        [OutputConstructor]
        private GetAccountResult(
            string accountEndpoint,
            ImmutableArray<Outputs.GetAccountKeyVaultReferencesResult> keyVaultReferences,
            string location,
            string name,
            string poolAllocationMode,
            string primaryAccessKey,
            string resourceGroupName,
            string secondaryAccessKey,
            string storageAccountId,
            ImmutableDictionary<string, string> tags,
            string id)
        {
            AccountEndpoint = accountEndpoint;
            KeyVaultReferences = keyVaultReferences;
            Location = location;
            Name = name;
            PoolAllocationMode = poolAllocationMode;
            PrimaryAccessKey = primaryAccessKey;
            ResourceGroupName = resourceGroupName;
            SecondaryAccessKey = secondaryAccessKey;
            StorageAccountId = storageAccountId;
            Tags = tags;
            Id = id;
        }
    }

    namespace Outputs
    {

    [OutputType]
    public sealed class GetAccountKeyVaultReferencesResult
    {
        /// <summary>
        /// The Azure identifier of the Azure KeyVault reference.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The HTTPS URL of the Azure KeyVault reference.
        /// </summary>
        public readonly string Url;

        [OutputConstructor]
        private GetAccountKeyVaultReferencesResult(
            string id,
            string url)
        {
            Id = id;
            Url = url;
        }
    }
    }
}
