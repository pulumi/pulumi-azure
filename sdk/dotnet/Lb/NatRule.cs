// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Lb
{
    /// <summary>
    /// Manages a Load Balancer NAT Rule.
    /// 
    /// &gt; **NOTE:** This resource cannot be used with with virtual machine scale sets, instead use the `azure.lb.NatPool` resource.
    /// 
    /// &gt; **NOTE** When using this resource, the Load Balancer needs to have a FrontEnd IP Configuration Attached
    /// </summary>
    public partial class NatRule : Pulumi.CustomResource
    {
        [Output("backendIpConfigurationId")]
        public Output<string> BackendIpConfigurationId { get; private set; } = null!;

        /// <summary>
        /// The port used for internal connections on the endpoint. Possible values range between 1 and 65535, inclusive.
        /// </summary>
        [Output("backendPort")]
        public Output<int> BackendPort { get; private set; } = null!;

        /// <summary>
        /// Are the Floating IPs enabled for this Load Balncer Rule? A "floating” IP is reassigned to a secondary server in case the primary server fails. Required to configure a SQL AlwaysOn Availability Group. Defaults to `false`.
        /// </summary>
        [Output("enableFloatingIp")]
        public Output<bool> EnableFloatingIp { get; private set; } = null!;

        /// <summary>
        /// Is TCP Reset enabled for this Load Balancer Rule? Defaults to `false`.
        /// </summary>
        [Output("enableTcpReset")]
        public Output<bool?> EnableTcpReset { get; private set; } = null!;

        [Output("frontendIpConfigurationId")]
        public Output<string> FrontendIpConfigurationId { get; private set; } = null!;

        /// <summary>
        /// The name of the frontend IP configuration exposing this rule.
        /// </summary>
        [Output("frontendIpConfigurationName")]
        public Output<string> FrontendIpConfigurationName { get; private set; } = null!;

        /// <summary>
        /// The port for the external endpoint. Port numbers for each Rule must be unique within the Load Balancer. Possible values range between 1 and 65534, inclusive.
        /// </summary>
        [Output("frontendPort")]
        public Output<int> FrontendPort { get; private set; } = null!;

        /// <summary>
        /// Specifies the idle timeout in minutes for TCP connections. Valid values are between `4` and `30` minutes. Defaults to `4` minutes.
        /// </summary>
        [Output("idleTimeoutInMinutes")]
        public Output<int> IdleTimeoutInMinutes { get; private set; } = null!;

        /// <summary>
        /// The ID of the Load Balancer in which to create the NAT Rule.
        /// </summary>
        [Output("loadbalancerId")]
        public Output<string> LoadbalancerId { get; private set; } = null!;

        /// <summary>
        /// Specifies the name of the NAT Rule.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The transport protocol for the external endpoint. Possible values are `Udp`, `Tcp` or `All`.
        /// </summary>
        [Output("protocol")]
        public Output<string> Protocol { get; private set; } = null!;

        /// <summary>
        /// The name of the resource group in which to create the resource.
        /// </summary>
        [Output("resourceGroupName")]
        public Output<string> ResourceGroupName { get; private set; } = null!;


        /// <summary>
        /// Create a NatRule resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public NatRule(string name, NatRuleArgs args, CustomResourceOptions? options = null)
            : base("azure:lb/natRule:NatRule", name, args ?? new NatRuleArgs(), MakeResourceOptions(options, ""))
        {
        }

        private NatRule(string name, Input<string> id, NatRuleState? state = null, CustomResourceOptions? options = null)
            : base("azure:lb/natRule:NatRule", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing NatRule resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static NatRule Get(string name, Input<string> id, NatRuleState? state = null, CustomResourceOptions? options = null)
        {
            return new NatRule(name, id, state, options);
        }
    }

    public sealed class NatRuleArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The port used for internal connections on the endpoint. Possible values range between 1 and 65535, inclusive.
        /// </summary>
        [Input("backendPort", required: true)]
        public Input<int> BackendPort { get; set; } = null!;

        /// <summary>
        /// Are the Floating IPs enabled for this Load Balncer Rule? A "floating” IP is reassigned to a secondary server in case the primary server fails. Required to configure a SQL AlwaysOn Availability Group. Defaults to `false`.
        /// </summary>
        [Input("enableFloatingIp")]
        public Input<bool>? EnableFloatingIp { get; set; }

        /// <summary>
        /// Is TCP Reset enabled for this Load Balancer Rule? Defaults to `false`.
        /// </summary>
        [Input("enableTcpReset")]
        public Input<bool>? EnableTcpReset { get; set; }

        /// <summary>
        /// The name of the frontend IP configuration exposing this rule.
        /// </summary>
        [Input("frontendIpConfigurationName", required: true)]
        public Input<string> FrontendIpConfigurationName { get; set; } = null!;

        /// <summary>
        /// The port for the external endpoint. Port numbers for each Rule must be unique within the Load Balancer. Possible values range between 1 and 65534, inclusive.
        /// </summary>
        [Input("frontendPort", required: true)]
        public Input<int> FrontendPort { get; set; } = null!;

        /// <summary>
        /// Specifies the idle timeout in minutes for TCP connections. Valid values are between `4` and `30` minutes. Defaults to `4` minutes.
        /// </summary>
        [Input("idleTimeoutInMinutes")]
        public Input<int>? IdleTimeoutInMinutes { get; set; }

        /// <summary>
        /// The ID of the Load Balancer in which to create the NAT Rule.
        /// </summary>
        [Input("loadbalancerId", required: true)]
        public Input<string> LoadbalancerId { get; set; } = null!;

        /// <summary>
        /// Specifies the name of the NAT Rule.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The transport protocol for the external endpoint. Possible values are `Udp`, `Tcp` or `All`.
        /// </summary>
        [Input("protocol", required: true)]
        public Input<string> Protocol { get; set; } = null!;

        /// <summary>
        /// The name of the resource group in which to create the resource.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public NatRuleArgs()
        {
        }
    }

    public sealed class NatRuleState : Pulumi.ResourceArgs
    {
        [Input("backendIpConfigurationId")]
        public Input<string>? BackendIpConfigurationId { get; set; }

        /// <summary>
        /// The port used for internal connections on the endpoint. Possible values range between 1 and 65535, inclusive.
        /// </summary>
        [Input("backendPort")]
        public Input<int>? BackendPort { get; set; }

        /// <summary>
        /// Are the Floating IPs enabled for this Load Balncer Rule? A "floating” IP is reassigned to a secondary server in case the primary server fails. Required to configure a SQL AlwaysOn Availability Group. Defaults to `false`.
        /// </summary>
        [Input("enableFloatingIp")]
        public Input<bool>? EnableFloatingIp { get; set; }

        /// <summary>
        /// Is TCP Reset enabled for this Load Balancer Rule? Defaults to `false`.
        /// </summary>
        [Input("enableTcpReset")]
        public Input<bool>? EnableTcpReset { get; set; }

        [Input("frontendIpConfigurationId")]
        public Input<string>? FrontendIpConfigurationId { get; set; }

        /// <summary>
        /// The name of the frontend IP configuration exposing this rule.
        /// </summary>
        [Input("frontendIpConfigurationName")]
        public Input<string>? FrontendIpConfigurationName { get; set; }

        /// <summary>
        /// The port for the external endpoint. Port numbers for each Rule must be unique within the Load Balancer. Possible values range between 1 and 65534, inclusive.
        /// </summary>
        [Input("frontendPort")]
        public Input<int>? FrontendPort { get; set; }

        /// <summary>
        /// Specifies the idle timeout in minutes for TCP connections. Valid values are between `4` and `30` minutes. Defaults to `4` minutes.
        /// </summary>
        [Input("idleTimeoutInMinutes")]
        public Input<int>? IdleTimeoutInMinutes { get; set; }

        /// <summary>
        /// The ID of the Load Balancer in which to create the NAT Rule.
        /// </summary>
        [Input("loadbalancerId")]
        public Input<string>? LoadbalancerId { get; set; }

        /// <summary>
        /// Specifies the name of the NAT Rule.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The transport protocol for the external endpoint. Possible values are `Udp`, `Tcp` or `All`.
        /// </summary>
        [Input("protocol")]
        public Input<string>? Protocol { get; set; }

        /// <summary>
        /// The name of the resource group in which to create the resource.
        /// </summary>
        [Input("resourceGroupName")]
        public Input<string>? ResourceGroupName { get; set; }

        public NatRuleState()
        {
        }
    }
}
