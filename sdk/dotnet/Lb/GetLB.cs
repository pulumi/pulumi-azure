// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Lb
{
    public static class GetLB
    {
        /// <summary>
        /// Use this data source to access information about an existing Load Balancer
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Azure = Pulumi.Azure;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Azure.Lb.GetLB.Invoke(new()
        ///     {
        ///         Name = "example-lb",
        ///         ResourceGroupName = "example-resources",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["loadbalancerId"] = example.Apply(getLBResult =&gt; getLBResult.Id),
        ///     };
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetLBResult> InvokeAsync(GetLBArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetLBResult>("azure:lb/getLB:getLB", args ?? new GetLBArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to access information about an existing Load Balancer
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Azure = Pulumi.Azure;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Azure.Lb.GetLB.Invoke(new()
        ///     {
        ///         Name = "example-lb",
        ///         ResourceGroupName = "example-resources",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["loadbalancerId"] = example.Apply(getLBResult =&gt; getLBResult.Id),
        ///     };
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetLBResult> Invoke(GetLBInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetLBResult>("azure:lb/getLB:getLB", args ?? new GetLBInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetLBArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Specifies the name of the Load Balancer.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        /// <summary>
        /// The name of the Resource Group in which the Load Balancer exists.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetLBArgs()
        {
        }
        public static new GetLBArgs Empty => new GetLBArgs();
    }

    public sealed class GetLBInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Specifies the name of the Load Balancer.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// The name of the Resource Group in which the Load Balancer exists.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetLBInvokeArgs()
        {
        }
        public static new GetLBInvokeArgs Empty => new GetLBInvokeArgs();
    }


    [OutputType]
    public sealed class GetLBResult
    {
        /// <summary>
        /// A `frontend_ip_configuration` block as documented below.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetLBFrontendIpConfigurationResult> FrontendIpConfigurations;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The Azure location where the Load Balancer exists.
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// The name of the Frontend IP Configuration.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Private IP Address to assign to the Load Balancer.
        /// </summary>
        public readonly string PrivateIpAddress;
        /// <summary>
        /// The list of private IP address assigned to the load balancer in `frontend_ip_configuration` blocks, if any.
        /// </summary>
        public readonly ImmutableArray<string> PrivateIpAddresses;
        public readonly string ResourceGroupName;
        /// <summary>
        /// The SKU of the Load Balancer.
        /// </summary>
        public readonly string Sku;
        /// <summary>
        /// A mapping of tags assigned to the resource.
        /// </summary>
        public readonly ImmutableDictionary<string, string> Tags;

        [OutputConstructor]
        private GetLBResult(
            ImmutableArray<Outputs.GetLBFrontendIpConfigurationResult> frontendIpConfigurations,

            string id,

            string location,

            string name,

            string privateIpAddress,

            ImmutableArray<string> privateIpAddresses,

            string resourceGroupName,

            string sku,

            ImmutableDictionary<string, string> tags)
        {
            FrontendIpConfigurations = frontendIpConfigurations;
            Id = id;
            Location = location;
            Name = name;
            PrivateIpAddress = privateIpAddress;
            PrivateIpAddresses = privateIpAddresses;
            ResourceGroupName = resourceGroupName;
            Sku = sku;
            Tags = tags;
        }
    }
}
