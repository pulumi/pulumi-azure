// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Lb
{
    public static partial class Invokes
    {
        /// <summary>
        /// Use this data source to access information about an existing Load Balancer
        /// 
        /// &gt; This content is derived from https://github.com/terraform-providers/terraform-provider-azurerm/blob/master/website/docs/d/lb.html.markdown.
        /// </summary>
        public static Task<GetLBResult> GetLB(GetLBArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetLBResult>("azure:lb/getLB:getLB", args ?? ResourceArgs.Empty, options.WithVersion());
    }

    public sealed class GetLBArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies the name of the Load Balancer.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// The name of the Resource Group in which the Load Balancer exists.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetLBArgs()
        {
        }
    }

    [OutputType]
    public sealed class GetLBResult
    {
        /// <summary>
        /// (Optional) A `frontend_ip_configuration` block as documented below.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetLBFrontendIpConfigurationsResult> FrontendIpConfigurations;
        /// <summary>
        /// The Azure location where the Load Balancer exists.
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// The name of the Frontend IP Configuration.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Private IP Address to assign to the Load Balancer.
        /// </summary>
        public readonly string PrivateIpAddress;
        /// <summary>
        /// The list of private IP address assigned to the load balancer in `frontend_ip_configuration` blocks, if any.
        /// </summary>
        public readonly ImmutableArray<string> PrivateIpAddresses;
        public readonly string ResourceGroupName;
        /// <summary>
        /// The SKU of the Load Balancer.
        /// </summary>
        public readonly string Sku;
        /// <summary>
        /// A mapping of tags assigned to the resource.
        /// </summary>
        public readonly ImmutableDictionary<string, string> Tags;
        /// <summary>
        /// id is the provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;

        [OutputConstructor]
        private GetLBResult(
            ImmutableArray<Outputs.GetLBFrontendIpConfigurationsResult> frontendIpConfigurations,
            string location,
            string name,
            string privateIpAddress,
            ImmutableArray<string> privateIpAddresses,
            string resourceGroupName,
            string sku,
            ImmutableDictionary<string, string> tags,
            string id)
        {
            FrontendIpConfigurations = frontendIpConfigurations;
            Location = location;
            Name = name;
            PrivateIpAddress = privateIpAddress;
            PrivateIpAddresses = privateIpAddresses;
            ResourceGroupName = resourceGroupName;
            Sku = sku;
            Tags = tags;
            Id = id;
        }
    }

    namespace Outputs
    {

    [OutputType]
    public sealed class GetLBFrontendIpConfigurationsResult
    {
        /// <summary>
        /// Specifies the name of the Load Balancer.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Private IP Address to assign to the Load Balancer.
        /// </summary>
        public readonly string PrivateIpAddress;
        /// <summary>
        /// The allocation method for the Private IP Address used by this Load Balancer.
        /// </summary>
        public readonly string PrivateIpAddressAllocation;
        /// <summary>
        /// The ID of a  Public IP Address which is associated with this Load Balancer.
        /// </summary>
        public readonly string PublicIpAddressId;
        /// <summary>
        /// The ID of the Subnet which is associated with the IP Configuration.
        /// </summary>
        public readonly string SubnetId;
        /// <summary>
        /// A list of Availability Zones which the Load Balancer's IP Addresses should be created in.
        /// </summary>
        public readonly ImmutableArray<string> Zones;

        [OutputConstructor]
        private GetLBFrontendIpConfigurationsResult(
            string name,
            string privateIpAddress,
            string privateIpAddressAllocation,
            string publicIpAddressId,
            string subnetId,
            ImmutableArray<string> zones)
        {
            Name = name;
            PrivateIpAddress = privateIpAddress;
            PrivateIpAddressAllocation = privateIpAddressAllocation;
            PublicIpAddressId = publicIpAddressId;
            SubnetId = subnetId;
            Zones = zones;
        }
    }
    }
}
