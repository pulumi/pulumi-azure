// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Lb
{
    /// <summary>
    /// Manages a Load Balancer Backend Address Pool.
    /// 
    /// &gt; **NOTE:** When using this resource, the Load Balancer needs to have a FrontEnd IP Configuration Attached
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using Azure = Pulumi.Azure;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var exampleResourceGroup = new Azure.Core.ResourceGroup("exampleResourceGroup", new Azure.Core.ResourceGroupArgs
    ///         {
    ///             Location = "West US",
    ///         });
    ///         var examplePublicIp = new Azure.Network.PublicIp("examplePublicIp", new Azure.Network.PublicIpArgs
    ///         {
    ///             Location = "West US",
    ///             ResourceGroupName = exampleResourceGroup.Name,
    ///             AllocationMethod = "Static",
    ///         });
    ///         var exampleLoadBalancer = new Azure.Lb.LoadBalancer("exampleLoadBalancer", new Azure.Lb.LoadBalancerArgs
    ///         {
    ///             Location = "West US",
    ///             ResourceGroupName = exampleResourceGroup.Name,
    ///             FrontendIpConfigurations = 
    ///             {
    ///                 new Azure.Lb.Inputs.LoadBalancerFrontendIpConfigurationArgs
    ///                 {
    ///                     Name = "PublicIPAddress",
    ///                     PublicIpAddressId = examplePublicIp.Id,
    ///                 },
    ///             },
    ///         });
    ///         var exampleBackendAddressPool = new Azure.Lb.BackendAddressPool("exampleBackendAddressPool", new Azure.Lb.BackendAddressPoolArgs
    ///         {
    ///             ResourceGroupName = exampleResourceGroup.Name,
    ///             LoadbalancerId = exampleLoadBalancer.Id,
    ///         });
    ///     }
    /// 
    /// }
    /// ```
    /// 
    /// ## Import
    /// 
    /// Load Balancer Backend Address Pools can be imported using the `resource id`, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import azure:lb/backendAddressPool:BackendAddressPool example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Network/loadBalancers/lb1/backendAddressPools/pool1
    /// ```
    /// </summary>
    public partial class BackendAddressPool : Pulumi.CustomResource
    {
        /// <summary>
        /// The Backend IP Configurations associated with this Backend Address Pool.
        /// </summary>
        [Output("backendIpConfigurations")]
        public Output<ImmutableArray<string>> BackendIpConfigurations { get; private set; } = null!;

        /// <summary>
        /// The Load Balancing Rules associated with this Backend Address Pool.
        /// </summary>
        [Output("loadBalancingRules")]
        public Output<ImmutableArray<string>> LoadBalancingRules { get; private set; } = null!;

        /// <summary>
        /// The ID of the Load Balancer in which to create the Backend Address Pool.
        /// </summary>
        [Output("loadbalancerId")]
        public Output<string> LoadbalancerId { get; private set; } = null!;

        /// <summary>
        /// Specifies the name of the Backend Address Pool.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The name of the resource group in which to create the resource.
        /// </summary>
        [Output("resourceGroupName")]
        public Output<string> ResourceGroupName { get; private set; } = null!;


        /// <summary>
        /// Create a BackendAddressPool resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public BackendAddressPool(string name, BackendAddressPoolArgs args, CustomResourceOptions? options = null)
            : base("azure:lb/backendAddressPool:BackendAddressPool", name, args ?? new BackendAddressPoolArgs(), MakeResourceOptions(options, ""))
        {
        }

        private BackendAddressPool(string name, Input<string> id, BackendAddressPoolState? state = null, CustomResourceOptions? options = null)
            : base("azure:lb/backendAddressPool:BackendAddressPool", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing BackendAddressPool resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static BackendAddressPool Get(string name, Input<string> id, BackendAddressPoolState? state = null, CustomResourceOptions? options = null)
        {
            return new BackendAddressPool(name, id, state, options);
        }
    }

    public sealed class BackendAddressPoolArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the Load Balancer in which to create the Backend Address Pool.
        /// </summary>
        [Input("loadbalancerId", required: true)]
        public Input<string> LoadbalancerId { get; set; } = null!;

        /// <summary>
        /// Specifies the name of the Backend Address Pool.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The name of the resource group in which to create the resource.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public BackendAddressPoolArgs()
        {
        }
    }

    public sealed class BackendAddressPoolState : Pulumi.ResourceArgs
    {
        [Input("backendIpConfigurations")]
        private InputList<string>? _backendIpConfigurations;

        /// <summary>
        /// The Backend IP Configurations associated with this Backend Address Pool.
        /// </summary>
        public InputList<string> BackendIpConfigurations
        {
            get => _backendIpConfigurations ?? (_backendIpConfigurations = new InputList<string>());
            set => _backendIpConfigurations = value;
        }

        [Input("loadBalancingRules")]
        private InputList<string>? _loadBalancingRules;

        /// <summary>
        /// The Load Balancing Rules associated with this Backend Address Pool.
        /// </summary>
        public InputList<string> LoadBalancingRules
        {
            get => _loadBalancingRules ?? (_loadBalancingRules = new InputList<string>());
            set => _loadBalancingRules = value;
        }

        /// <summary>
        /// The ID of the Load Balancer in which to create the Backend Address Pool.
        /// </summary>
        [Input("loadbalancerId")]
        public Input<string>? LoadbalancerId { get; set; }

        /// <summary>
        /// Specifies the name of the Backend Address Pool.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The name of the resource group in which to create the resource.
        /// </summary>
        [Input("resourceGroupName")]
        public Input<string>? ResourceGroupName { get; set; }

        public BackendAddressPoolState()
        {
        }
    }
}
