// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Lb
{
    /// <summary>
    /// Manages a Backend Address within a Backend Address Pool.
    /// 
    /// &gt; **Note:** Backend Addresses can only be added to a `Standard` SKU Load Balancer.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using Azure = Pulumi.Azure;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var exampleVirtualNetwork = Output.Create(Azure.Network.GetVirtualNetwork.InvokeAsync(new Azure.Network.GetVirtualNetworkArgs
    ///         {
    ///             Name = "example-network",
    ///             ResourceGroupName = "example-resources",
    ///         }));
    ///         var exampleLB = Output.Create(Azure.Lb.GetLB.InvokeAsync(new Azure.Lb.GetLBArgs
    ///         {
    ///             Name = "example-lb",
    ///             ResourceGroupName = "example-resources",
    ///         }));
    ///         var exampleBackendAddressPool = exampleLB.Apply(exampleLB =&gt; Output.Create(Azure.Lb.GetBackendAddressPool.InvokeAsync(new Azure.Lb.GetBackendAddressPoolArgs
    ///         {
    ///             Name = "first",
    ///             LoadbalancerId = exampleLB.Id,
    ///         })));
    ///         var exampleBackendAddressPoolAddress = new Azure.Lb.BackendAddressPoolAddress("exampleBackendAddressPoolAddress", new Azure.Lb.BackendAddressPoolAddressArgs
    ///         {
    ///             BackendAddressPoolId = exampleBackendAddressPool.Apply(exampleBackendAddressPool =&gt; exampleBackendAddressPool.Id),
    ///             VirtualNetworkId = exampleVirtualNetwork.Apply(exampleVirtualNetwork =&gt; exampleVirtualNetwork.Id),
    ///             IpAddress = "10.0.0.1",
    ///         });
    ///     }
    /// 
    /// }
    /// ```
    /// 
    /// ## Import
    /// 
    /// Backend Address Pool Addresses can be imported using the `resource id`, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import azure:lb/backendAddressPoolAddress:BackendAddressPoolAddress example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Network/loadBalancers/loadBalancer1/backendAddressPools/backendAddressPool1/addresses/address1
    /// ```
    /// </summary>
    [AzureResourceType("azure:lb/backendAddressPoolAddress:BackendAddressPoolAddress")]
    public partial class BackendAddressPoolAddress : Pulumi.CustomResource
    {
        /// <summary>
        /// The ID of the Backend Address Pool. Changing this forces a new Backend Address Pool Address to be created.
        /// </summary>
        [Output("backendAddressPoolId")]
        public Output<string> BackendAddressPoolId { get; private set; } = null!;

        /// <summary>
        /// The Static IP Address which should be allocated to this Backend Address Pool.
        /// </summary>
        [Output("ipAddress")]
        public Output<string> IpAddress { get; private set; } = null!;

        /// <summary>
        /// The name which should be used for this Backend Address Pool Address. Changing this forces a new Backend Address Pool Address to be created.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The ID of the Virtual Network within which the Backend Address Pool should exist.
        /// </summary>
        [Output("virtualNetworkId")]
        public Output<string> VirtualNetworkId { get; private set; } = null!;


        /// <summary>
        /// Create a BackendAddressPoolAddress resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public BackendAddressPoolAddress(string name, BackendAddressPoolAddressArgs args, CustomResourceOptions? options = null)
            : base("azure:lb/backendAddressPoolAddress:BackendAddressPoolAddress", name, args ?? new BackendAddressPoolAddressArgs(), MakeResourceOptions(options, ""))
        {
        }

        private BackendAddressPoolAddress(string name, Input<string> id, BackendAddressPoolAddressState? state = null, CustomResourceOptions? options = null)
            : base("azure:lb/backendAddressPoolAddress:BackendAddressPoolAddress", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing BackendAddressPoolAddress resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static BackendAddressPoolAddress Get(string name, Input<string> id, BackendAddressPoolAddressState? state = null, CustomResourceOptions? options = null)
        {
            return new BackendAddressPoolAddress(name, id, state, options);
        }
    }

    public sealed class BackendAddressPoolAddressArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the Backend Address Pool. Changing this forces a new Backend Address Pool Address to be created.
        /// </summary>
        [Input("backendAddressPoolId", required: true)]
        public Input<string> BackendAddressPoolId { get; set; } = null!;

        /// <summary>
        /// The Static IP Address which should be allocated to this Backend Address Pool.
        /// </summary>
        [Input("ipAddress", required: true)]
        public Input<string> IpAddress { get; set; } = null!;

        /// <summary>
        /// The name which should be used for this Backend Address Pool Address. Changing this forces a new Backend Address Pool Address to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The ID of the Virtual Network within which the Backend Address Pool should exist.
        /// </summary>
        [Input("virtualNetworkId", required: true)]
        public Input<string> VirtualNetworkId { get; set; } = null!;

        public BackendAddressPoolAddressArgs()
        {
        }
    }

    public sealed class BackendAddressPoolAddressState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the Backend Address Pool. Changing this forces a new Backend Address Pool Address to be created.
        /// </summary>
        [Input("backendAddressPoolId")]
        public Input<string>? BackendAddressPoolId { get; set; }

        /// <summary>
        /// The Static IP Address which should be allocated to this Backend Address Pool.
        /// </summary>
        [Input("ipAddress")]
        public Input<string>? IpAddress { get; set; }

        /// <summary>
        /// The name which should be used for this Backend Address Pool Address. Changing this forces a new Backend Address Pool Address to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The ID of the Virtual Network within which the Backend Address Pool should exist.
        /// </summary>
        [Input("virtualNetworkId")]
        public Input<string>? VirtualNetworkId { get; set; }

        public BackendAddressPoolAddressState()
        {
        }
    }
}
