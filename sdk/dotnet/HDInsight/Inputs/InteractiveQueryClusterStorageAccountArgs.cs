// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.HDInsight.Inputs
{

    public sealed class InteractiveQueryClusterStorageAccountArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Is this the Default Storage Account for the HDInsight Hadoop Cluster? Changing this forces a new resource to be created.
        /// 
        /// &gt; **Note:** One of the `storage_account` or `storage_account_gen2` blocks must be marked as the default.
        /// </summary>
        [Input("isDefault", required: true)]
        public Input<bool> IsDefault { get; set; } = null!;

        [Input("storageAccountKey", required: true)]
        private Input<string>? _storageAccountKey;

        /// <summary>
        /// The Access Key which should be used to connect to the Storage Account. Changing this forces a new resource to be created.
        /// </summary>
        public Input<string>? StorageAccountKey
        {
            get => _storageAccountKey;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _storageAccountKey = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// The ID of the Storage Container. Changing this forces a new resource to be created.
        /// 
        /// &gt; **Note:** When the `azure.storage.Container` resource is created with `storage_account_name`, this can be obtained from the `id` of the `azure.storage.Container` resource. When the `azure.storage.Container` resource is created with `storage_account_id`, please use `azure.storage.getContainers` data source to get the `data_plane_id` of the `azure.storage.Container` resource for this field.
        /// </summary>
        [Input("storageContainerId", required: true)]
        public Input<string> StorageContainerId { get; set; } = null!;

        /// <summary>
        /// The ID of the Storage Account. Changing this forces a new resource to be created.
        /// </summary>
        [Input("storageResourceId")]
        public Input<string>? StorageResourceId { get; set; }

        public InteractiveQueryClusterStorageAccountArgs()
        {
        }
        public static new InteractiveQueryClusterStorageAccountArgs Empty => new InteractiveQueryClusterStorageAccountArgs();
    }
}
