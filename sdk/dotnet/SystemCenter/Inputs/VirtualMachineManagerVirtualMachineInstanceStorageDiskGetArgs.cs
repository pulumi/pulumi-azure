// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.SystemCenter.Inputs
{

    public sealed class VirtualMachineManagerVirtualMachineInstanceStorageDiskGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The disk bus. Possible values are between `0` and `3`.
        /// </summary>
        [Input("bus")]
        public Input<int>? Bus { get; set; }

        /// <summary>
        /// The disk bus type. Possible values are `IDE` and `SCSI`.
        /// </summary>
        [Input("busType")]
        public Input<string>? BusType { get; set; }

        /// <summary>
        /// The disk total size.
        /// </summary>
        [Input("diskSizeGb")]
        public Input<int>? DiskSizeGb { get; set; }

        /// <summary>
        /// The disk lun. Possible values are between `0` and `63`.
        /// </summary>
        [Input("lun")]
        public Input<int>? Lun { get; set; }

        /// <summary>
        /// The name of the disk.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The name of the Storage QoS policy.
        /// </summary>
        [Input("storageQosPolicyName")]
        public Input<string>? StorageQosPolicyName { get; set; }

        /// <summary>
        /// The disk ID in the System Center Virtual Machine Manager Virtual Machine Template. Changing this forces a new resource to be created.
        /// </summary>
        [Input("templateDiskId")]
        public Input<string>? TemplateDiskId { get; set; }

        /// <summary>
        /// The disk vhd type. Possible values are `Dynamic` and `Fixed`.
        /// </summary>
        [Input("vhdType")]
        public Input<string>? VhdType { get; set; }

        public VirtualMachineManagerVirtualMachineInstanceStorageDiskGetArgs()
        {
        }
        public static new VirtualMachineManagerVirtualMachineInstanceStorageDiskGetArgs Empty => new VirtualMachineManagerVirtualMachineInstanceStorageDiskGetArgs();
    }
}
