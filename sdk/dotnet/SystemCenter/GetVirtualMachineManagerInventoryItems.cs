// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.SystemCenter
{
    public static class GetVirtualMachineManagerInventoryItems
    {
        /// <summary>
        /// Use this data source to access information about existing System Center Virtual Machine Manager Inventory Items.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Azure = Pulumi.Azure;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Azure.SystemCenter.GetVirtualMachineManagerInventoryItems.Invoke(new()
        ///     {
        ///         InventoryType = "Cloud",
        ///         SystemCenterVirtualMachineManagerServerId = exampleAzurermSystemCenterVirtualMachineManagerServer.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetVirtualMachineManagerInventoryItemsResult> InvokeAsync(GetVirtualMachineManagerInventoryItemsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetVirtualMachineManagerInventoryItemsResult>("azure:systemcenter/getVirtualMachineManagerInventoryItems:getVirtualMachineManagerInventoryItems", args ?? new GetVirtualMachineManagerInventoryItemsArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to access information about existing System Center Virtual Machine Manager Inventory Items.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Azure = Pulumi.Azure;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Azure.SystemCenter.GetVirtualMachineManagerInventoryItems.Invoke(new()
        ///     {
        ///         InventoryType = "Cloud",
        ///         SystemCenterVirtualMachineManagerServerId = exampleAzurermSystemCenterVirtualMachineManagerServer.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetVirtualMachineManagerInventoryItemsResult> Invoke(GetVirtualMachineManagerInventoryItemsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetVirtualMachineManagerInventoryItemsResult>("azure:systemcenter/getVirtualMachineManagerInventoryItems:getVirtualMachineManagerInventoryItems", args ?? new GetVirtualMachineManagerInventoryItemsInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to access information about existing System Center Virtual Machine Manager Inventory Items.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Azure = Pulumi.Azure;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Azure.SystemCenter.GetVirtualMachineManagerInventoryItems.Invoke(new()
        ///     {
        ///         InventoryType = "Cloud",
        ///         SystemCenterVirtualMachineManagerServerId = exampleAzurermSystemCenterVirtualMachineManagerServer.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetVirtualMachineManagerInventoryItemsResult> Invoke(GetVirtualMachineManagerInventoryItemsInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetVirtualMachineManagerInventoryItemsResult>("azure:systemcenter/getVirtualMachineManagerInventoryItems:getVirtualMachineManagerInventoryItems", args ?? new GetVirtualMachineManagerInventoryItemsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetVirtualMachineManagerInventoryItemsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The inventory type of the System Center Virtual Machine Manager Inventory Item. Possible values are `Cloud`, `VirtualMachine`, `VirtualMachineTemplate` and `VirtualNetwork`.
        /// </summary>
        [Input("inventoryType", required: true)]
        public string InventoryType { get; set; } = null!;

        /// <summary>
        /// The ID of the System Center Virtual Machine Manager Server.
        /// </summary>
        [Input("systemCenterVirtualMachineManagerServerId", required: true)]
        public string SystemCenterVirtualMachineManagerServerId { get; set; } = null!;

        public GetVirtualMachineManagerInventoryItemsArgs()
        {
        }
        public static new GetVirtualMachineManagerInventoryItemsArgs Empty => new GetVirtualMachineManagerInventoryItemsArgs();
    }

    public sealed class GetVirtualMachineManagerInventoryItemsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The inventory type of the System Center Virtual Machine Manager Inventory Item. Possible values are `Cloud`, `VirtualMachine`, `VirtualMachineTemplate` and `VirtualNetwork`.
        /// </summary>
        [Input("inventoryType", required: true)]
        public Input<string> InventoryType { get; set; } = null!;

        /// <summary>
        /// The ID of the System Center Virtual Machine Manager Server.
        /// </summary>
        [Input("systemCenterVirtualMachineManagerServerId", required: true)]
        public Input<string> SystemCenterVirtualMachineManagerServerId { get; set; } = null!;

        public GetVirtualMachineManagerInventoryItemsInvokeArgs()
        {
        }
        public static new GetVirtualMachineManagerInventoryItemsInvokeArgs Empty => new GetVirtualMachineManagerInventoryItemsInvokeArgs();
    }


    [OutputType]
    public sealed class GetVirtualMachineManagerInventoryItemsResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// One or more `inventory_items` blocks as defined below.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetVirtualMachineManagerInventoryItemsInventoryItemResult> InventoryItems;
        public readonly string InventoryType;
        public readonly string SystemCenterVirtualMachineManagerServerId;

        [OutputConstructor]
        private GetVirtualMachineManagerInventoryItemsResult(
            string id,

            ImmutableArray<Outputs.GetVirtualMachineManagerInventoryItemsInventoryItemResult> inventoryItems,

            string inventoryType,

            string systemCenterVirtualMachineManagerServerId)
        {
            Id = id;
            InventoryItems = inventoryItems;
            InventoryType = inventoryType;
            SystemCenterVirtualMachineManagerServerId = systemCenterVirtualMachineManagerServerId;
        }
    }
}
