// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.SystemCenter
{
    /// <summary>
    /// Manages a System Center Virtual Machine Manager Virtual Machine Instance Guest Agent.
    /// 
    /// &gt; **Note:** By request of the service team the provider is no longer automatically registering the `Microsoft.ScVmm` Resource Provider for this resource. To register it you can run `az provider register --namespace Microsoft.ScVmm`.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Azure = Pulumi.Azure;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var exampleResourceGroup = new Azure.Core.ResourceGroup("example", new()
    ///     {
    ///         Name = "example-resources",
    ///         Location = "West Europe",
    ///     });
    /// 
    ///     var exampleArcMachine = new Azure.ArcMachine.ArcMachine("example", new()
    ///     {
    ///         Name = "example-arcmachine",
    ///         ResourceGroupName = exampleResourceGroup.Name,
    ///         Location = exampleResourceGroup.Location,
    ///         Kind = "SCVMM",
    ///         Identity = new Azure.ArcMachine.Inputs.ArcMachineIdentityArgs
    ///         {
    ///             Type = "SystemAssigned",
    ///         },
    ///     });
    /// 
    ///     var exampleVirtualMachineManagerServer = new Azure.SystemCenter.VirtualMachineManagerServer("example", new()
    ///     {
    ///         Name = "example-scvmmms",
    ///         ResourceGroupName = exampleResourceGroup.Name,
    ///         Location = exampleResourceGroup.Location,
    ///         CustomLocationId = "/subscriptions/12345678-1234-9876-4563-123456789012/resourceGroups/resGroup1/providers/Microsoft.ExtendedLocation/customLocations/customLocation1",
    ///         Fqdn = "example.labtest",
    ///         Username = "testUser",
    ///         Password = "H@Sh1CoR3!",
    ///     });
    /// 
    ///     var example = Azure.SystemCenter.GetVirtualMachineManagerInventoryItems.Invoke(new()
    ///     {
    ///         InventoryType = "Cloud",
    ///         SystemCenterVirtualMachineManagerServerId = exampleVirtualMachineManagerServer.Id,
    ///     });
    /// 
    ///     var exampleVirtualMachineManagerCloud = new Azure.SystemCenter.VirtualMachineManagerCloud("example", new()
    ///     {
    ///         Name = "example-scvmmc",
    ///         Location = exampleResourceGroup.Location,
    ///         ResourceGroupName = exampleResourceGroup.Name,
    ///         CustomLocationId = exampleVirtualMachineManagerServer.CustomLocationId,
    ///         SystemCenterVirtualMachineManagerServerInventoryItemId = example.Apply(getVirtualMachineManagerInventoryItemsResult =&gt; getVirtualMachineManagerInventoryItemsResult.InventoryItems[0]?.Id),
    ///     });
    /// 
    ///     var example2 = Azure.SystemCenter.GetVirtualMachineManagerInventoryItems.Invoke(new()
    ///     {
    ///         InventoryType = "VirtualMachineTemplate",
    ///         SystemCenterVirtualMachineManagerServerId = exampleVirtualMachineManagerServer.Id,
    ///     });
    /// 
    ///     var exampleVirtualMachineManagerVirtualMachineTemplate = new Azure.SystemCenter.VirtualMachineManagerVirtualMachineTemplate("example", new()
    ///     {
    ///         Name = "example-scvmmvmt",
    ///         Location = exampleResourceGroup.Location,
    ///         ResourceGroupName = exampleResourceGroup.Name,
    ///         CustomLocationId = exampleVirtualMachineManagerServer.CustomLocationId,
    ///         SystemCenterVirtualMachineManagerServerInventoryItemId = example2.Apply(getVirtualMachineManagerInventoryItemsResult =&gt; getVirtualMachineManagerInventoryItemsResult.InventoryItems[0]?.Id),
    ///     });
    /// 
    ///     var exampleVirtualMachineManagerVirtualMachineInstance = new Azure.SystemCenter.VirtualMachineManagerVirtualMachineInstance("example", new()
    ///     {
    ///         ScopedResourceId = exampleArcMachine.Id,
    ///         CustomLocationId = exampleVirtualMachineManagerServer.CustomLocationId,
    ///         Infrastructure = new Azure.SystemCenter.Inputs.VirtualMachineManagerVirtualMachineInstanceInfrastructureArgs
    ///         {
    ///             CheckpointType = "Standard",
    ///             SystemCenterVirtualMachineManagerCloudId = exampleVirtualMachineManagerCloud.Id,
    ///             SystemCenterVirtualMachineManagerTemplateId = exampleVirtualMachineManagerVirtualMachineTemplate.Id,
    ///             SystemCenterVirtualMachineManagerVirtualMachineServerId = exampleVirtualMachineManagerServer.Id,
    ///         },
    ///         OperatingSystem = new Azure.SystemCenter.Inputs.VirtualMachineManagerVirtualMachineInstanceOperatingSystemArgs
    ///         {
    ///             AdminPassword = "AdminPassword123!",
    ///         },
    ///     });
    /// 
    ///     var exampleVirtualMachineManagerVirtualMachineInstanceGuestAgent = new Azure.SystemCenter.VirtualMachineManagerVirtualMachineInstanceGuestAgent("example", new()
    ///     {
    ///         ScopedResourceId = exampleArcMachine.Id,
    ///         Username = "Administrator",
    ///         Password = "AdminPassword123!",
    ///     }, new CustomResourceOptions
    ///     {
    ///         DependsOn =
    ///         {
    ///             exampleVirtualMachineManagerVirtualMachineInstance,
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## API Providers
    /// 
    /// &lt;!-- This section is generated, changes will be overwritten --&gt;
    /// This resource uses the following Azure API Providers:
    /// 
    /// * `Microsoft.ScVmm`: 2023-10-07
    /// 
    /// ## Import
    /// 
    /// System Center Virtual Machine Manager Virtual Machine Instance Guest Agents can be imported using the `resource id`, e.g.
    /// 
    /// ```sh
    /// $ pulumi import azure:systemcenter/virtualMachineManagerVirtualMachineInstanceGuestAgent:VirtualMachineManagerVirtualMachineInstanceGuestAgent example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resourceGroup1/providers/Microsoft.HybridCompute/machines/machine1/providers/Microsoft.ScVmm/virtualMachineInstances/default/guestAgents/default
    /// ```
    /// </summary>
    [AzureResourceType("azure:systemcenter/virtualMachineManagerVirtualMachineInstanceGuestAgent:VirtualMachineManagerVirtualMachineInstanceGuestAgent")]
    public partial class VirtualMachineManagerVirtualMachineInstanceGuestAgent : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The password that is used to connect to the System Center Virtual Machine Manager Virtual Machine Instance Guest Agent. Changing this forces a new resource to be created.
        /// </summary>
        [Output("password")]
        public Output<string> Password { get; private set; } = null!;

        /// <summary>
        /// The provisioning action that is used to define the different types of operations for the System Center Virtual Machine Manager Virtual Machine Instance Guest Agent. Possible values are `install`, `repair` and `uninstall`. Defaults to `install`. Changing this forces a new resource to be created.
        /// </summary>
        [Output("provisioningAction")]
        public Output<string?> ProvisioningAction { get; private set; } = null!;

        /// <summary>
        /// The ID of the Hybrid Compute Machine where this System Center Virtual Machine Manager Virtual Machine Instance Guest Agent is stored. Changing this forces a new resource to be created.
        /// </summary>
        [Output("scopedResourceId")]
        public Output<string> ScopedResourceId { get; private set; } = null!;

        /// <summary>
        /// The username that is used to connect to the System Center Virtual Machine Manager Virtual Machine Instance Guest Agent. Changing this forces a new resource to be created.
        /// </summary>
        [Output("username")]
        public Output<string> Username { get; private set; } = null!;


        /// <summary>
        /// Create a VirtualMachineManagerVirtualMachineInstanceGuestAgent resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public VirtualMachineManagerVirtualMachineInstanceGuestAgent(string name, VirtualMachineManagerVirtualMachineInstanceGuestAgentArgs args, CustomResourceOptions? options = null)
            : base("azure:systemcenter/virtualMachineManagerVirtualMachineInstanceGuestAgent:VirtualMachineManagerVirtualMachineInstanceGuestAgent", name, args ?? new VirtualMachineManagerVirtualMachineInstanceGuestAgentArgs(), MakeResourceOptions(options, ""))
        {
        }

        private VirtualMachineManagerVirtualMachineInstanceGuestAgent(string name, Input<string> id, VirtualMachineManagerVirtualMachineInstanceGuestAgentState? state = null, CustomResourceOptions? options = null)
            : base("azure:systemcenter/virtualMachineManagerVirtualMachineInstanceGuestAgent:VirtualMachineManagerVirtualMachineInstanceGuestAgent", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                AdditionalSecretOutputs =
                {
                    "password",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing VirtualMachineManagerVirtualMachineInstanceGuestAgent resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static VirtualMachineManagerVirtualMachineInstanceGuestAgent Get(string name, Input<string> id, VirtualMachineManagerVirtualMachineInstanceGuestAgentState? state = null, CustomResourceOptions? options = null)
        {
            return new VirtualMachineManagerVirtualMachineInstanceGuestAgent(name, id, state, options);
        }
    }

    public sealed class VirtualMachineManagerVirtualMachineInstanceGuestAgentArgs : global::Pulumi.ResourceArgs
    {
        [Input("password", required: true)]
        private Input<string>? _password;

        /// <summary>
        /// The password that is used to connect to the System Center Virtual Machine Manager Virtual Machine Instance Guest Agent. Changing this forces a new resource to be created.
        /// </summary>
        public Input<string>? Password
        {
            get => _password;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _password = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// The provisioning action that is used to define the different types of operations for the System Center Virtual Machine Manager Virtual Machine Instance Guest Agent. Possible values are `install`, `repair` and `uninstall`. Defaults to `install`. Changing this forces a new resource to be created.
        /// </summary>
        [Input("provisioningAction")]
        public Input<string>? ProvisioningAction { get; set; }

        /// <summary>
        /// The ID of the Hybrid Compute Machine where this System Center Virtual Machine Manager Virtual Machine Instance Guest Agent is stored. Changing this forces a new resource to be created.
        /// </summary>
        [Input("scopedResourceId", required: true)]
        public Input<string> ScopedResourceId { get; set; } = null!;

        /// <summary>
        /// The username that is used to connect to the System Center Virtual Machine Manager Virtual Machine Instance Guest Agent. Changing this forces a new resource to be created.
        /// </summary>
        [Input("username", required: true)]
        public Input<string> Username { get; set; } = null!;

        public VirtualMachineManagerVirtualMachineInstanceGuestAgentArgs()
        {
        }
        public static new VirtualMachineManagerVirtualMachineInstanceGuestAgentArgs Empty => new VirtualMachineManagerVirtualMachineInstanceGuestAgentArgs();
    }

    public sealed class VirtualMachineManagerVirtualMachineInstanceGuestAgentState : global::Pulumi.ResourceArgs
    {
        [Input("password")]
        private Input<string>? _password;

        /// <summary>
        /// The password that is used to connect to the System Center Virtual Machine Manager Virtual Machine Instance Guest Agent. Changing this forces a new resource to be created.
        /// </summary>
        public Input<string>? Password
        {
            get => _password;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _password = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// The provisioning action that is used to define the different types of operations for the System Center Virtual Machine Manager Virtual Machine Instance Guest Agent. Possible values are `install`, `repair` and `uninstall`. Defaults to `install`. Changing this forces a new resource to be created.
        /// </summary>
        [Input("provisioningAction")]
        public Input<string>? ProvisioningAction { get; set; }

        /// <summary>
        /// The ID of the Hybrid Compute Machine where this System Center Virtual Machine Manager Virtual Machine Instance Guest Agent is stored. Changing this forces a new resource to be created.
        /// </summary>
        [Input("scopedResourceId")]
        public Input<string>? ScopedResourceId { get; set; }

        /// <summary>
        /// The username that is used to connect to the System Center Virtual Machine Manager Virtual Machine Instance Guest Agent. Changing this forces a new resource to be created.
        /// </summary>
        [Input("username")]
        public Input<string>? Username { get; set; }

        public VirtualMachineManagerVirtualMachineInstanceGuestAgentState()
        {
        }
        public static new VirtualMachineManagerVirtualMachineInstanceGuestAgentState Empty => new VirtualMachineManagerVirtualMachineInstanceGuestAgentState();
    }
}
