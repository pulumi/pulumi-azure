// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Pim
{
    /// <summary>
    /// Manages a Pim Active Role Assignment.
    /// 
    /// ## Example Usage
    /// 
    /// ## Import
    /// 
    /// Pim Active Role Assignments can be imported using the `resource id`, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import azure:pim/activeRoleAssignment:ActiveRoleAssignment example /subscriptions/00000000-0000-0000-0000-000000000000|/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Authorization/roleDefinitions/00000000-0000-0000-0000-000000000000|00000000-0000-0000-0000-000000000000
    /// ```
    /// </summary>
    [AzureResourceType("azure:pim/activeRoleAssignment:ActiveRoleAssignment")]
    public partial class ActiveRoleAssignment : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The justification of the role assignment. Changing this forces a new Pim Active Role Assignment to be created.
        /// </summary>
        [Output("justification")]
        public Output<string?> Justification { get; private set; } = null!;

        /// <summary>
        /// The principal id. Changing this forces a new Pim Active Role Assignment to be created.
        /// </summary>
        [Output("principalId")]
        public Output<string> PrincipalId { get; private set; } = null!;

        /// <summary>
        /// The type of principal.
        /// </summary>
        [Output("principalType")]
        public Output<string> PrincipalType { get; private set; } = null!;

        /// <summary>
        /// The role definition id. Changing this forces a new Pim Active Role Assignment to be created.
        /// </summary>
        [Output("roleDefinitionId")]
        public Output<string> RoleDefinitionId { get; private set; } = null!;

        /// <summary>
        /// A `schedule` block as defined below. Changing this forces a new Pim Active Role Assignment to be created.
        /// </summary>
        [Output("schedule")]
        public Output<Outputs.ActiveRoleAssignmentSchedule?> Schedule { get; private set; } = null!;

        /// <summary>
        /// The scope. Changing this forces a new Pim Active Role Assignment to be created.
        /// </summary>
        [Output("scope")]
        public Output<string> Scope { get; private set; } = null!;

        /// <summary>
        /// A `ticket` block as defined below. Changing this forces a new Pim Active Role Assignment to be created.
        /// </summary>
        [Output("ticket")]
        public Output<Outputs.ActiveRoleAssignmentTicket?> Ticket { get; private set; } = null!;


        /// <summary>
        /// Create a ActiveRoleAssignment resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ActiveRoleAssignment(string name, ActiveRoleAssignmentArgs args, CustomResourceOptions? options = null)
            : base("azure:pim/activeRoleAssignment:ActiveRoleAssignment", name, args ?? new ActiveRoleAssignmentArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ActiveRoleAssignment(string name, Input<string> id, ActiveRoleAssignmentState? state = null, CustomResourceOptions? options = null)
            : base("azure:pim/activeRoleAssignment:ActiveRoleAssignment", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ActiveRoleAssignment resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ActiveRoleAssignment Get(string name, Input<string> id, ActiveRoleAssignmentState? state = null, CustomResourceOptions? options = null)
        {
            return new ActiveRoleAssignment(name, id, state, options);
        }
    }

    public sealed class ActiveRoleAssignmentArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The justification of the role assignment. Changing this forces a new Pim Active Role Assignment to be created.
        /// </summary>
        [Input("justification")]
        public Input<string>? Justification { get; set; }

        /// <summary>
        /// The principal id. Changing this forces a new Pim Active Role Assignment to be created.
        /// </summary>
        [Input("principalId", required: true)]
        public Input<string> PrincipalId { get; set; } = null!;

        /// <summary>
        /// The role definition id. Changing this forces a new Pim Active Role Assignment to be created.
        /// </summary>
        [Input("roleDefinitionId", required: true)]
        public Input<string> RoleDefinitionId { get; set; } = null!;

        /// <summary>
        /// A `schedule` block as defined below. Changing this forces a new Pim Active Role Assignment to be created.
        /// </summary>
        [Input("schedule")]
        public Input<Inputs.ActiveRoleAssignmentScheduleArgs>? Schedule { get; set; }

        /// <summary>
        /// The scope. Changing this forces a new Pim Active Role Assignment to be created.
        /// </summary>
        [Input("scope", required: true)]
        public Input<string> Scope { get; set; } = null!;

        /// <summary>
        /// A `ticket` block as defined below. Changing this forces a new Pim Active Role Assignment to be created.
        /// </summary>
        [Input("ticket")]
        public Input<Inputs.ActiveRoleAssignmentTicketArgs>? Ticket { get; set; }

        public ActiveRoleAssignmentArgs()
        {
        }
        public static new ActiveRoleAssignmentArgs Empty => new ActiveRoleAssignmentArgs();
    }

    public sealed class ActiveRoleAssignmentState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The justification of the role assignment. Changing this forces a new Pim Active Role Assignment to be created.
        /// </summary>
        [Input("justification")]
        public Input<string>? Justification { get; set; }

        /// <summary>
        /// The principal id. Changing this forces a new Pim Active Role Assignment to be created.
        /// </summary>
        [Input("principalId")]
        public Input<string>? PrincipalId { get; set; }

        /// <summary>
        /// The type of principal.
        /// </summary>
        [Input("principalType")]
        public Input<string>? PrincipalType { get; set; }

        /// <summary>
        /// The role definition id. Changing this forces a new Pim Active Role Assignment to be created.
        /// </summary>
        [Input("roleDefinitionId")]
        public Input<string>? RoleDefinitionId { get; set; }

        /// <summary>
        /// A `schedule` block as defined below. Changing this forces a new Pim Active Role Assignment to be created.
        /// </summary>
        [Input("schedule")]
        public Input<Inputs.ActiveRoleAssignmentScheduleGetArgs>? Schedule { get; set; }

        /// <summary>
        /// The scope. Changing this forces a new Pim Active Role Assignment to be created.
        /// </summary>
        [Input("scope")]
        public Input<string>? Scope { get; set; }

        /// <summary>
        /// A `ticket` block as defined below. Changing this forces a new Pim Active Role Assignment to be created.
        /// </summary>
        [Input("ticket")]
        public Input<Inputs.ActiveRoleAssignmentTicketGetArgs>? Ticket { get; set; }

        public ActiveRoleAssignmentState()
        {
        }
        public static new ActiveRoleAssignmentState Empty => new ActiveRoleAssignmentState();
    }
}
