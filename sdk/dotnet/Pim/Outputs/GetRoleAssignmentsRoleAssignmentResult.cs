// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Pim.Outputs
{

    [OutputType]
    public sealed class GetRoleAssignmentsRoleAssignmentResult
    {
        /// <summary>
        /// The condition that limits the resource the role can be assigned to.
        /// </summary>
        public readonly string Condition;
        /// <summary>
        /// The version of the condition.
        /// </summary>
        public readonly string ConditionVersion;
        /// <summary>
        /// The ID of the delegated managed identity resource.
        /// </summary>
        public readonly string DelegatedManagedIdentityResourceId;
        /// <summary>
        /// The description for this Role Assignment.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// The principal ID to filter the list of Role Assignments against.
        /// </summary>
        public readonly string PrincipalId;
        /// <summary>
        /// The type of the `PrincipalId`.
        /// </summary>
        public readonly string PrincipalType;
        /// <summary>
        /// The ID of the Role Assignment.
        /// </summary>
        public readonly string RoleAssignmentId;
        /// <summary>
        /// The name of the Role Assignment.
        /// </summary>
        public readonly string RoleAssignmentName;
        /// <summary>
        /// The scope of the Role Assignment.
        /// </summary>
        public readonly string RoleAssignmentScope;
        /// <summary>
        /// The ID of the Role Definition.
        /// </summary>
        public readonly string RoleDefinitionId;

        [OutputConstructor]
        private GetRoleAssignmentsRoleAssignmentResult(
            string condition,

            string conditionVersion,

            string delegatedManagedIdentityResourceId,

            string description,

            string principalId,

            string principalType,

            string roleAssignmentId,

            string roleAssignmentName,

            string roleAssignmentScope,

            string roleDefinitionId)
        {
            Condition = condition;
            ConditionVersion = conditionVersion;
            DelegatedManagedIdentityResourceId = delegatedManagedIdentityResourceId;
            Description = description;
            PrincipalId = principalId;
            PrincipalType = principalType;
            RoleAssignmentId = roleAssignmentId;
            RoleAssignmentName = roleAssignmentName;
            RoleAssignmentScope = roleAssignmentScope;
            RoleDefinitionId = roleDefinitionId;
        }
    }
}
