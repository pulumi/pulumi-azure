// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Connections
{
    public static class GetManagedApi
    {
        /// <summary>
        /// Uses this data source to access information about an existing Managed API.
        /// </summary>
        public static Task<GetManagedApiResult> InvokeAsync(GetManagedApiArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetManagedApiResult>("azure:connections/getManagedApi:getManagedApi", args ?? new GetManagedApiArgs(), options.WithDefaults());

        /// <summary>
        /// Uses this data source to access information about an existing Managed API.
        /// </summary>
        public static Output<GetManagedApiResult> Invoke(GetManagedApiInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetManagedApiResult>("azure:connections/getManagedApi:getManagedApi", args ?? new GetManagedApiInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetManagedApiArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The Azure location for this Managed API.
        /// </summary>
        [Input("location", required: true)]
        public string Location { get; set; } = null!;

        /// <summary>
        /// Specifies the name of the Managed API.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        public GetManagedApiArgs()
        {
        }
        public static new GetManagedApiArgs Empty => new GetManagedApiArgs();
    }

    public sealed class GetManagedApiInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The Azure location for this Managed API.
        /// </summary>
        [Input("location", required: true)]
        public Input<string> Location { get; set; } = null!;

        /// <summary>
        /// Specifies the name of the Managed API.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        public GetManagedApiInvokeArgs()
        {
        }
        public static new GetManagedApiInvokeArgs Empty => new GetManagedApiInvokeArgs();
    }


    [OutputType]
    public sealed class GetManagedApiResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string Location;
        public readonly string Name;
        public readonly ImmutableDictionary<string, string> Tags;

        [OutputConstructor]
        private GetManagedApiResult(
            string id,

            string location,

            string name,

            ImmutableDictionary<string, string> tags)
        {
            Id = id;
            Location = location;
            Name = name;
            Tags = tags;
        }
    }
}
