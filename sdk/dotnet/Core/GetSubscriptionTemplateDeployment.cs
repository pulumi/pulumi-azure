// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Core
{
    public static class GetSubscriptionTemplateDeployment
    {
        /// <summary>
        /// Use this data source to access information about an existing Subscription Template Deployment.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Azure = Pulumi.Azure;
        /// 
        /// 	
        /// object NotImplemented(string errorMessage) 
        /// {
        ///     throw new System.NotImplementedException(errorMessage);
        /// }
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Azure.Core.GetSubscriptionTemplateDeployment.Invoke(new()
        ///     {
        ///         Name = "existing",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["id"] = example.Apply(getSubscriptionTemplateDeploymentResult =&gt; getSubscriptionTemplateDeploymentResult.Id),
        ///         ["exampleOutput"] = NotImplemented("jsondecode(data.azurerm_subscription_template_deployment.example.output_content)").ExampleOutput.Value,
        ///     };
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetSubscriptionTemplateDeploymentResult> InvokeAsync(GetSubscriptionTemplateDeploymentArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSubscriptionTemplateDeploymentResult>("azure:core/getSubscriptionTemplateDeployment:getSubscriptionTemplateDeployment", args ?? new GetSubscriptionTemplateDeploymentArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to access information about an existing Subscription Template Deployment.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Azure = Pulumi.Azure;
        /// 
        /// 	
        /// object NotImplemented(string errorMessage) 
        /// {
        ///     throw new System.NotImplementedException(errorMessage);
        /// }
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Azure.Core.GetSubscriptionTemplateDeployment.Invoke(new()
        ///     {
        ///         Name = "existing",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["id"] = example.Apply(getSubscriptionTemplateDeploymentResult =&gt; getSubscriptionTemplateDeploymentResult.Id),
        ///         ["exampleOutput"] = NotImplemented("jsondecode(data.azurerm_subscription_template_deployment.example.output_content)").ExampleOutput.Value,
        ///     };
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetSubscriptionTemplateDeploymentResult> Invoke(GetSubscriptionTemplateDeploymentInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSubscriptionTemplateDeploymentResult>("azure:core/getSubscriptionTemplateDeployment:getSubscriptionTemplateDeployment", args ?? new GetSubscriptionTemplateDeploymentInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSubscriptionTemplateDeploymentArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of this Subscription Template Deployment.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        public GetSubscriptionTemplateDeploymentArgs()
        {
        }
        public static new GetSubscriptionTemplateDeploymentArgs Empty => new GetSubscriptionTemplateDeploymentArgs();
    }

    public sealed class GetSubscriptionTemplateDeploymentInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of this Subscription Template Deployment.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        public GetSubscriptionTemplateDeploymentInvokeArgs()
        {
        }
        public static new GetSubscriptionTemplateDeploymentInvokeArgs Empty => new GetSubscriptionTemplateDeploymentInvokeArgs();
    }


    [OutputType]
    public sealed class GetSubscriptionTemplateDeploymentResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string Name;
        /// <summary>
        /// The JSON Content of the Outputs of the ARM Template Deployment.
        /// </summary>
        public readonly string OutputContent;

        [OutputConstructor]
        private GetSubscriptionTemplateDeploymentResult(
            string id,

            string name,

            string outputContent)
        {
            Id = id;
            Name = name;
            OutputContent = outputContent;
        }
    }
}
