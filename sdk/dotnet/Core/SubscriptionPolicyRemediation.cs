// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Core
{
    [AzureResourceType("azure:core/subscriptionPolicyRemediation:SubscriptionPolicyRemediation")]
    public partial class SubscriptionPolicyRemediation : Pulumi.CustomResource
    {
        [Output("locationFilters")]
        public Output<ImmutableArray<string>> LocationFilters { get; private set; } = null!;

        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("policyAssignmentId")]
        public Output<string> PolicyAssignmentId { get; private set; } = null!;

        [Output("policyDefinitionId")]
        public Output<string?> PolicyDefinitionId { get; private set; } = null!;

        [Output("resourceDiscoveryMode")]
        public Output<string?> ResourceDiscoveryMode { get; private set; } = null!;

        [Output("subscriptionId")]
        public Output<string> SubscriptionId { get; private set; } = null!;


        /// <summary>
        /// Create a SubscriptionPolicyRemediation resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public SubscriptionPolicyRemediation(string name, SubscriptionPolicyRemediationArgs args, CustomResourceOptions? options = null)
            : base("azure:core/subscriptionPolicyRemediation:SubscriptionPolicyRemediation", name, args ?? new SubscriptionPolicyRemediationArgs(), MakeResourceOptions(options, ""))
        {
        }

        private SubscriptionPolicyRemediation(string name, Input<string> id, SubscriptionPolicyRemediationState? state = null, CustomResourceOptions? options = null)
            : base("azure:core/subscriptionPolicyRemediation:SubscriptionPolicyRemediation", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing SubscriptionPolicyRemediation resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static SubscriptionPolicyRemediation Get(string name, Input<string> id, SubscriptionPolicyRemediationState? state = null, CustomResourceOptions? options = null)
        {
            return new SubscriptionPolicyRemediation(name, id, state, options);
        }
    }

    public sealed class SubscriptionPolicyRemediationArgs : Pulumi.ResourceArgs
    {
        [Input("locationFilters")]
        private InputList<string>? _locationFilters;
        public InputList<string> LocationFilters
        {
            get => _locationFilters ?? (_locationFilters = new InputList<string>());
            set => _locationFilters = value;
        }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("policyAssignmentId", required: true)]
        public Input<string> PolicyAssignmentId { get; set; } = null!;

        [Input("policyDefinitionId")]
        public Input<string>? PolicyDefinitionId { get; set; }

        [Input("resourceDiscoveryMode")]
        public Input<string>? ResourceDiscoveryMode { get; set; }

        [Input("subscriptionId", required: true)]
        public Input<string> SubscriptionId { get; set; } = null!;

        public SubscriptionPolicyRemediationArgs()
        {
        }
    }

    public sealed class SubscriptionPolicyRemediationState : Pulumi.ResourceArgs
    {
        [Input("locationFilters")]
        private InputList<string>? _locationFilters;
        public InputList<string> LocationFilters
        {
            get => _locationFilters ?? (_locationFilters = new InputList<string>());
            set => _locationFilters = value;
        }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("policyAssignmentId")]
        public Input<string>? PolicyAssignmentId { get; set; }

        [Input("policyDefinitionId")]
        public Input<string>? PolicyDefinitionId { get; set; }

        [Input("resourceDiscoveryMode")]
        public Input<string>? ResourceDiscoveryMode { get; set; }

        [Input("subscriptionId")]
        public Input<string>? SubscriptionId { get; set; }

        public SubscriptionPolicyRemediationState()
        {
        }
    }
}
