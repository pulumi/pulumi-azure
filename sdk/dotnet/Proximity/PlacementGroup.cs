// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Proximity
{
    /// <summary>
    /// Manages a proximity placement group for virtual machines, virtual machine scale sets and availability sets.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using Azure = Pulumi.Azure;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var exampleResourceGroup = new Azure.Core.ResourceGroup("exampleResourceGroup", new()
    ///     {
    ///         Location = "West Europe",
    ///     });
    /// 
    ///     var examplePlacementGroup = new Azure.Proximity.PlacementGroup("examplePlacementGroup", new()
    ///     {
    ///         Location = exampleResourceGroup.Location,
    ///         ResourceGroupName = exampleResourceGroup.Name,
    ///         Tags = 
    ///         {
    ///             { "environment", "Production" },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Proximity Placement Groups can be imported using the `resource id`, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import azure:proximity/placementGroup:PlacementGroup example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/example-rg/providers/Microsoft.Compute/proximityPlacementGroups/example-ppg
    /// ```
    /// </summary>
    [AzureResourceType("azure:proximity/placementGroup:PlacementGroup")]
    public partial class PlacementGroup : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Specifies the supported sizes of Virtual Machines that can be created in the Proximity Placement Group. Possible values are `Basic_A4`, `Basic_A1`, `Basic_A3`, `Basic_A2`, `Basic_A0`, `Standard_A8`, `Standard_A8_v2`, `Standard_A8m_v2`, `Standard_A5`, `Standard_A4`, `Standard_A4_v2`, `Standard_A4m_v2`, `Standard_A9`, `Standard_A1`, `Standard_A11`, `Standard_A1_v2`, `Standard_A10`, `Standard_A7`, `Standard_A6`, `Standard_A3`, `Standard_A2`, `Standard_A2_v2`, `Standard_A2m_v2`, `Standard_A0`, `Standard_B8ms`, `Standard_B4ms`, `Standard_B1ms`, `Standard_B1s`, `Standard_B2ms`, `Standard_B2s`, `Standard_D8_v3`, `Standard_D8s_v3`, `Standard_D5_v2`, `Standard_D4`, `Standard_D4_v3`, `Standard_D4_v2`, `Standard_D4s_v3`, `Standard_D1`, `Standard_D15_v2`, `Standard_D14`, `Standard_D14_v2`, `Standard_D11`, `Standard_D11_v2`, `Standard_D16_v3`, `Standard_D16s_v3`, `Standard_D13`, `Standard_D13_v2`, `Standard_D12`, `Standard_D12_v2`, `Standard_D1_v2`, `Standard_DS5_v2`, `Standard_DS4`, `Standard_DS4_v2`, `Standard_DS1`, `Standard_DS15_v2`, `Standard_DS14`, `Standard_DS14-8_v2`, `Standard_DS14-4_v2`, `Standard_DS14_v2`, `Standard_DS11`, `Standard_DS11_v2`, `Standard_DS13`, `Standard_DS13-4_v2`, `Standard_DS13-2_v2`, `Standard_DS13_v2`, `Standard_DS12`, `Standard_DS12_v2`, `Standard_DS1_v2`, `Standard_DS3`, `Standard_DS3_v2`, `Standard_DS2`, `Standard_DS2_v2`, `Standard_D64_v3`, `Standard_D64s_v3`, `Standard_D3`, `Standard_D32_v3`, `Standard_D32s_v3`, `Standard_D3_v2`, `Standard_D2`, `Standard_D2_v3`, `Standard_D2_v2`, `Standard_D2s_v3`, `Standard_E8_v3`, `Standard_E8s_v3`, `Standard_E4_v3`, `Standard_E4s_v3`, `Standard_E16_v3`, `Standard_E16s_v3`, `Standard_E64-16s_v3`, `Standard_E64-32s_v3`, `Standard_E64_v3`, `Standard_E64s_v3`, `Standard_E32-8s_v3`, `Standard_E32-16_v3`, `Standard_E32_v3`, `Standard_E32s_v3`, `Standard_E2_v3`, `Standard_E2s_v3`, `Standard_F8`, `Standard_F8s`, `Standard_F8s_v2`, `Standard_F4`, `Standard_F4s`, `Standard_F4s_v2`, `Standard_F1`, `Standard_F16`, `Standard_F16s`, `Standard_F16s_v2`, `Standard_F1s`, `Standard_F72s_v2`, `Standard_F64s_v2`, `Standard_F32s_v2`, `Standard_F2`, `Standard_F2s`, `Standard_F2s_v2`, `Standard_G5`, `Standard_G4`, `Standard_G1`, `Standard_GS5`, `Standard_GS5-8`, `Standard_GS5-16`, `Standard_GS4`, `Standard_GS4-8`, `Standard_GS4-4`, `Standard_GS1`, `Standard_GS3`, `Standard_GS2`, `Standard_G3`, `Standard_G2`, `Standard_H8`, `Standard_H8m`, `Standard_H16`, `Standard_H16m`, `Standard_H16mr`, `Standard_H16r`, `Standard_L8s`, `Standard_L4s`, `Standard_L16s`, `Standard_L32s`, `Standard_M128-64ms`, `Standard_M128-32ms`, `Standard_M128ms`, `Standard_M128s`, `Standard_M64-16ms`, `Standard_M64-32ms`, `Standard_M64ms`, `Standard_M64s`, `Standard_NC12`, `Standard_NC12s_v3`, `Standard_NC12s_v2`, `Standard_NC6`, `Standard_NC6s_v3`, `Standard_NC6s_v2`, `Standard_NC24`, `Standard_NC24r`, `Standard_NC24rs_v3`, `Standard_NC24rs_v2`, `Standard_NC24s_v3`, `Standard_NC24s_v2`, `Standard_ND12s`, `Standard_ND6s`, `Standard_ND24rs`, `Standard_ND24s`, `Standard_NV12`, `Standard_NV6` and `Standard_NV24`.
        /// </summary>
        [Output("allowedVmSizes")]
        public Output<ImmutableArray<string>> AllowedVmSizes { get; private set; } = null!;

        /// <summary>
        /// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
        /// </summary>
        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// Specifies the name of the proximity placement group. Changing this forces a new resource to be created.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The name of the resource group in which to create the availability set. Changing this forces a new resource to be created.
        /// </summary>
        [Output("resourceGroupName")]
        public Output<string> ResourceGroupName { get; private set; } = null!;

        /// <summary>
        /// A mapping of tags to assign to the resource.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// Specifies the supported zone of the Proximity Placement Group. Changing this forces a new resource to be created.
        /// </summary>
        [Output("zone")]
        public Output<string?> Zone { get; private set; } = null!;


        /// <summary>
        /// Create a PlacementGroup resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public PlacementGroup(string name, PlacementGroupArgs args, CustomResourceOptions? options = null)
            : base("azure:proximity/placementGroup:PlacementGroup", name, args ?? new PlacementGroupArgs(), MakeResourceOptions(options, ""))
        {
        }

        private PlacementGroup(string name, Input<string> id, PlacementGroupState? state = null, CustomResourceOptions? options = null)
            : base("azure:proximity/placementGroup:PlacementGroup", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing PlacementGroup resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static PlacementGroup Get(string name, Input<string> id, PlacementGroupState? state = null, CustomResourceOptions? options = null)
        {
            return new PlacementGroup(name, id, state, options);
        }
    }

    public sealed class PlacementGroupArgs : global::Pulumi.ResourceArgs
    {
        [Input("allowedVmSizes")]
        private InputList<string>? _allowedVmSizes;

        /// <summary>
        /// Specifies the supported sizes of Virtual Machines that can be created in the Proximity Placement Group. Possible values are `Basic_A4`, `Basic_A1`, `Basic_A3`, `Basic_A2`, `Basic_A0`, `Standard_A8`, `Standard_A8_v2`, `Standard_A8m_v2`, `Standard_A5`, `Standard_A4`, `Standard_A4_v2`, `Standard_A4m_v2`, `Standard_A9`, `Standard_A1`, `Standard_A11`, `Standard_A1_v2`, `Standard_A10`, `Standard_A7`, `Standard_A6`, `Standard_A3`, `Standard_A2`, `Standard_A2_v2`, `Standard_A2m_v2`, `Standard_A0`, `Standard_B8ms`, `Standard_B4ms`, `Standard_B1ms`, `Standard_B1s`, `Standard_B2ms`, `Standard_B2s`, `Standard_D8_v3`, `Standard_D8s_v3`, `Standard_D5_v2`, `Standard_D4`, `Standard_D4_v3`, `Standard_D4_v2`, `Standard_D4s_v3`, `Standard_D1`, `Standard_D15_v2`, `Standard_D14`, `Standard_D14_v2`, `Standard_D11`, `Standard_D11_v2`, `Standard_D16_v3`, `Standard_D16s_v3`, `Standard_D13`, `Standard_D13_v2`, `Standard_D12`, `Standard_D12_v2`, `Standard_D1_v2`, `Standard_DS5_v2`, `Standard_DS4`, `Standard_DS4_v2`, `Standard_DS1`, `Standard_DS15_v2`, `Standard_DS14`, `Standard_DS14-8_v2`, `Standard_DS14-4_v2`, `Standard_DS14_v2`, `Standard_DS11`, `Standard_DS11_v2`, `Standard_DS13`, `Standard_DS13-4_v2`, `Standard_DS13-2_v2`, `Standard_DS13_v2`, `Standard_DS12`, `Standard_DS12_v2`, `Standard_DS1_v2`, `Standard_DS3`, `Standard_DS3_v2`, `Standard_DS2`, `Standard_DS2_v2`, `Standard_D64_v3`, `Standard_D64s_v3`, `Standard_D3`, `Standard_D32_v3`, `Standard_D32s_v3`, `Standard_D3_v2`, `Standard_D2`, `Standard_D2_v3`, `Standard_D2_v2`, `Standard_D2s_v3`, `Standard_E8_v3`, `Standard_E8s_v3`, `Standard_E4_v3`, `Standard_E4s_v3`, `Standard_E16_v3`, `Standard_E16s_v3`, `Standard_E64-16s_v3`, `Standard_E64-32s_v3`, `Standard_E64_v3`, `Standard_E64s_v3`, `Standard_E32-8s_v3`, `Standard_E32-16_v3`, `Standard_E32_v3`, `Standard_E32s_v3`, `Standard_E2_v3`, `Standard_E2s_v3`, `Standard_F8`, `Standard_F8s`, `Standard_F8s_v2`, `Standard_F4`, `Standard_F4s`, `Standard_F4s_v2`, `Standard_F1`, `Standard_F16`, `Standard_F16s`, `Standard_F16s_v2`, `Standard_F1s`, `Standard_F72s_v2`, `Standard_F64s_v2`, `Standard_F32s_v2`, `Standard_F2`, `Standard_F2s`, `Standard_F2s_v2`, `Standard_G5`, `Standard_G4`, `Standard_G1`, `Standard_GS5`, `Standard_GS5-8`, `Standard_GS5-16`, `Standard_GS4`, `Standard_GS4-8`, `Standard_GS4-4`, `Standard_GS1`, `Standard_GS3`, `Standard_GS2`, `Standard_G3`, `Standard_G2`, `Standard_H8`, `Standard_H8m`, `Standard_H16`, `Standard_H16m`, `Standard_H16mr`, `Standard_H16r`, `Standard_L8s`, `Standard_L4s`, `Standard_L16s`, `Standard_L32s`, `Standard_M128-64ms`, `Standard_M128-32ms`, `Standard_M128ms`, `Standard_M128s`, `Standard_M64-16ms`, `Standard_M64-32ms`, `Standard_M64ms`, `Standard_M64s`, `Standard_NC12`, `Standard_NC12s_v3`, `Standard_NC12s_v2`, `Standard_NC6`, `Standard_NC6s_v3`, `Standard_NC6s_v2`, `Standard_NC24`, `Standard_NC24r`, `Standard_NC24rs_v3`, `Standard_NC24rs_v2`, `Standard_NC24s_v3`, `Standard_NC24s_v2`, `Standard_ND12s`, `Standard_ND6s`, `Standard_ND24rs`, `Standard_ND24s`, `Standard_NV12`, `Standard_NV6` and `Standard_NV24`.
        /// </summary>
        public InputList<string> AllowedVmSizes
        {
            get => _allowedVmSizes ?? (_allowedVmSizes = new InputList<string>());
            set => _allowedVmSizes = value;
        }

        /// <summary>
        /// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// Specifies the name of the proximity placement group. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The name of the resource group in which to create the availability set. Changing this forces a new resource to be created.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// A mapping of tags to assign to the resource.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        /// <summary>
        /// Specifies the supported zone of the Proximity Placement Group. Changing this forces a new resource to be created.
        /// </summary>
        [Input("zone")]
        public Input<string>? Zone { get; set; }

        public PlacementGroupArgs()
        {
        }
        public static new PlacementGroupArgs Empty => new PlacementGroupArgs();
    }

    public sealed class PlacementGroupState : global::Pulumi.ResourceArgs
    {
        [Input("allowedVmSizes")]
        private InputList<string>? _allowedVmSizes;

        /// <summary>
        /// Specifies the supported sizes of Virtual Machines that can be created in the Proximity Placement Group. Possible values are `Basic_A4`, `Basic_A1`, `Basic_A3`, `Basic_A2`, `Basic_A0`, `Standard_A8`, `Standard_A8_v2`, `Standard_A8m_v2`, `Standard_A5`, `Standard_A4`, `Standard_A4_v2`, `Standard_A4m_v2`, `Standard_A9`, `Standard_A1`, `Standard_A11`, `Standard_A1_v2`, `Standard_A10`, `Standard_A7`, `Standard_A6`, `Standard_A3`, `Standard_A2`, `Standard_A2_v2`, `Standard_A2m_v2`, `Standard_A0`, `Standard_B8ms`, `Standard_B4ms`, `Standard_B1ms`, `Standard_B1s`, `Standard_B2ms`, `Standard_B2s`, `Standard_D8_v3`, `Standard_D8s_v3`, `Standard_D5_v2`, `Standard_D4`, `Standard_D4_v3`, `Standard_D4_v2`, `Standard_D4s_v3`, `Standard_D1`, `Standard_D15_v2`, `Standard_D14`, `Standard_D14_v2`, `Standard_D11`, `Standard_D11_v2`, `Standard_D16_v3`, `Standard_D16s_v3`, `Standard_D13`, `Standard_D13_v2`, `Standard_D12`, `Standard_D12_v2`, `Standard_D1_v2`, `Standard_DS5_v2`, `Standard_DS4`, `Standard_DS4_v2`, `Standard_DS1`, `Standard_DS15_v2`, `Standard_DS14`, `Standard_DS14-8_v2`, `Standard_DS14-4_v2`, `Standard_DS14_v2`, `Standard_DS11`, `Standard_DS11_v2`, `Standard_DS13`, `Standard_DS13-4_v2`, `Standard_DS13-2_v2`, `Standard_DS13_v2`, `Standard_DS12`, `Standard_DS12_v2`, `Standard_DS1_v2`, `Standard_DS3`, `Standard_DS3_v2`, `Standard_DS2`, `Standard_DS2_v2`, `Standard_D64_v3`, `Standard_D64s_v3`, `Standard_D3`, `Standard_D32_v3`, `Standard_D32s_v3`, `Standard_D3_v2`, `Standard_D2`, `Standard_D2_v3`, `Standard_D2_v2`, `Standard_D2s_v3`, `Standard_E8_v3`, `Standard_E8s_v3`, `Standard_E4_v3`, `Standard_E4s_v3`, `Standard_E16_v3`, `Standard_E16s_v3`, `Standard_E64-16s_v3`, `Standard_E64-32s_v3`, `Standard_E64_v3`, `Standard_E64s_v3`, `Standard_E32-8s_v3`, `Standard_E32-16_v3`, `Standard_E32_v3`, `Standard_E32s_v3`, `Standard_E2_v3`, `Standard_E2s_v3`, `Standard_F8`, `Standard_F8s`, `Standard_F8s_v2`, `Standard_F4`, `Standard_F4s`, `Standard_F4s_v2`, `Standard_F1`, `Standard_F16`, `Standard_F16s`, `Standard_F16s_v2`, `Standard_F1s`, `Standard_F72s_v2`, `Standard_F64s_v2`, `Standard_F32s_v2`, `Standard_F2`, `Standard_F2s`, `Standard_F2s_v2`, `Standard_G5`, `Standard_G4`, `Standard_G1`, `Standard_GS5`, `Standard_GS5-8`, `Standard_GS5-16`, `Standard_GS4`, `Standard_GS4-8`, `Standard_GS4-4`, `Standard_GS1`, `Standard_GS3`, `Standard_GS2`, `Standard_G3`, `Standard_G2`, `Standard_H8`, `Standard_H8m`, `Standard_H16`, `Standard_H16m`, `Standard_H16mr`, `Standard_H16r`, `Standard_L8s`, `Standard_L4s`, `Standard_L16s`, `Standard_L32s`, `Standard_M128-64ms`, `Standard_M128-32ms`, `Standard_M128ms`, `Standard_M128s`, `Standard_M64-16ms`, `Standard_M64-32ms`, `Standard_M64ms`, `Standard_M64s`, `Standard_NC12`, `Standard_NC12s_v3`, `Standard_NC12s_v2`, `Standard_NC6`, `Standard_NC6s_v3`, `Standard_NC6s_v2`, `Standard_NC24`, `Standard_NC24r`, `Standard_NC24rs_v3`, `Standard_NC24rs_v2`, `Standard_NC24s_v3`, `Standard_NC24s_v2`, `Standard_ND12s`, `Standard_ND6s`, `Standard_ND24rs`, `Standard_ND24s`, `Standard_NV12`, `Standard_NV6` and `Standard_NV24`.
        /// </summary>
        public InputList<string> AllowedVmSizes
        {
            get => _allowedVmSizes ?? (_allowedVmSizes = new InputList<string>());
            set => _allowedVmSizes = value;
        }

        /// <summary>
        /// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// Specifies the name of the proximity placement group. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The name of the resource group in which to create the availability set. Changing this forces a new resource to be created.
        /// </summary>
        [Input("resourceGroupName")]
        public Input<string>? ResourceGroupName { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// A mapping of tags to assign to the resource.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        /// <summary>
        /// Specifies the supported zone of the Proximity Placement Group. Changing this forces a new resource to be created.
        /// </summary>
        [Input("zone")]
        public Input<string>? Zone { get; set; }

        public PlacementGroupState()
        {
        }
        public static new PlacementGroupState Empty => new PlacementGroupState();
    }
}
