// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.DigitalTwins
{
    /// <summary>
    /// Manages a Digital Twins Time Series Database Connection.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using Azure = Pulumi.Azure;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var exampleResourceGroup = new Azure.Core.ResourceGroup("exampleResourceGroup", new()
    ///     {
    ///         Location = "West Europe",
    ///     });
    /// 
    ///     var exampleInstance = new Azure.DigitalTwins.Instance("exampleInstance", new()
    ///     {
    ///         ResourceGroupName = exampleResourceGroup.Name,
    ///         Location = exampleResourceGroup.Location,
    ///         Identity = new Azure.DigitalTwins.Inputs.InstanceIdentityArgs
    ///         {
    ///             Type = "SystemAssigned",
    ///         },
    ///     });
    /// 
    ///     var exampleEventHubNamespace = new Azure.EventHub.EventHubNamespace("exampleEventHubNamespace", new()
    ///     {
    ///         Location = exampleResourceGroup.Location,
    ///         ResourceGroupName = exampleResourceGroup.Name,
    ///         Sku = "Standard",
    ///     });
    /// 
    ///     var exampleEventHub = new Azure.EventHub.EventHub("exampleEventHub", new()
    ///     {
    ///         NamespaceName = exampleEventHubNamespace.Name,
    ///         ResourceGroupName = exampleResourceGroup.Name,
    ///         PartitionCount = 2,
    ///         MessageRetention = 7,
    ///     });
    /// 
    ///     var exampleConsumerGroup = new Azure.EventHub.ConsumerGroup("exampleConsumerGroup", new()
    ///     {
    ///         NamespaceName = exampleEventHubNamespace.Name,
    ///         EventhubName = exampleEventHub.Name,
    ///         ResourceGroupName = exampleResourceGroup.Name,
    ///     });
    /// 
    ///     var exampleCluster = new Azure.Kusto.Cluster("exampleCluster", new()
    ///     {
    ///         Location = exampleResourceGroup.Location,
    ///         ResourceGroupName = exampleResourceGroup.Name,
    ///         Sku = new Azure.Kusto.Inputs.ClusterSkuArgs
    ///         {
    ///             Name = "Dev(No SLA)_Standard_D11_v2",
    ///             Capacity = 1,
    ///         },
    ///     });
    /// 
    ///     var exampleDatabase = new Azure.Kusto.Database("exampleDatabase", new()
    ///     {
    ///         ResourceGroupName = exampleResourceGroup.Name,
    ///         Location = exampleResourceGroup.Location,
    ///         ClusterName = exampleCluster.Name,
    ///     });
    /// 
    ///     var databaseContributor = new Azure.Authorization.Assignment("databaseContributor", new()
    ///     {
    ///         Scope = exampleDatabase.Id,
    ///         PrincipalId = exampleInstance.Identity.Apply(identity =&gt; identity?.PrincipalId),
    ///         RoleDefinitionName = "Contributor",
    ///     });
    /// 
    ///     var eventhubDataOwner = new Azure.Authorization.Assignment("eventhubDataOwner", new()
    ///     {
    ///         Scope = exampleEventHub.Id,
    ///         PrincipalId = exampleInstance.Identity.Apply(identity =&gt; identity?.PrincipalId),
    ///         RoleDefinitionName = "Azure Event Hubs Data Owner",
    ///     });
    /// 
    ///     var exampleDatabasePrincipalAssignment = new Azure.Kusto.DatabasePrincipalAssignment("exampleDatabasePrincipalAssignment", new()
    ///     {
    ///         ResourceGroupName = exampleResourceGroup.Name,
    ///         ClusterName = exampleCluster.Name,
    ///         DatabaseName = exampleDatabase.Name,
    ///         TenantId = exampleInstance.Identity.Apply(identity =&gt; identity?.TenantId),
    ///         PrincipalId = exampleInstance.Identity.Apply(identity =&gt; identity?.PrincipalId),
    ///         PrincipalType = "App",
    ///         Role = "Admin",
    ///     });
    /// 
    ///     var exampleTimeSeriesDatabaseConnection = new Azure.DigitalTwins.TimeSeriesDatabaseConnection("exampleTimeSeriesDatabaseConnection", new()
    ///     {
    ///         DigitalTwinsId = exampleInstance.Id,
    ///         EventhubName = exampleEventHub.Name,
    ///         EventhubNamespaceId = exampleEventHubNamespace.Id,
    ///         EventhubNamespaceEndpointUri = exampleEventHubNamespace.Name.Apply(name =&gt; $"sb://{name}.servicebus.windows.net"),
    ///         EventhubConsumerGroupName = exampleConsumerGroup.Name,
    ///         KustoClusterId = exampleCluster.Id,
    ///         KustoClusterUri = exampleCluster.Uri,
    ///         KustoDatabaseName = exampleDatabase.Name,
    ///         KustoTableName = "exampleTable",
    ///     }, new CustomResourceOptions
    ///     {
    ///         DependsOn = new[]
    ///         {
    ///             databaseContributor,
    ///             eventhubDataOwner,
    ///             exampleDatabasePrincipalAssignment,
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Digital Twins Time Series Database Connections can be imported using the `resource id`, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import azure:digitaltwins/timeSeriesDatabaseConnection:TimeSeriesDatabaseConnection example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.DigitalTwins/digitalTwinsInstances/dt1/timeSeriesDatabaseConnections/connection1
    /// ```
    /// </summary>
    [AzureResourceType("azure:digitaltwins/timeSeriesDatabaseConnection:TimeSeriesDatabaseConnection")]
    public partial class TimeSeriesDatabaseConnection : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The ID of the Digital Twins. Changing this forces a new resource to be created.
        /// </summary>
        [Output("digitalTwinsId")]
        public Output<string> DigitalTwinsId { get; private set; } = null!;

        /// <summary>
        /// Name of the Event Hub Consumer Group. Changing this forces a new resource to be created. Defaults to `$Default`.
        /// </summary>
        [Output("eventhubConsumerGroupName")]
        public Output<string?> EventhubConsumerGroupName { get; private set; } = null!;

        /// <summary>
        /// Name of the Event Hub. Changing this forces a new resource to be created.
        /// </summary>
        [Output("eventhubName")]
        public Output<string> EventhubName { get; private set; } = null!;

        /// <summary>
        /// URI of the Event Hub Namespace. Changing this forces a new resource to be created.
        /// </summary>
        [Output("eventhubNamespaceEndpointUri")]
        public Output<string> EventhubNamespaceEndpointUri { get; private set; } = null!;

        /// <summary>
        /// The ID of the Event Hub Namespace. Changing this forces a new resource to be created.
        /// </summary>
        [Output("eventhubNamespaceId")]
        public Output<string> EventhubNamespaceId { get; private set; } = null!;

        /// <summary>
        /// The ID of the Kusto Cluster. Changing this forces a new resource to be created.
        /// </summary>
        [Output("kustoClusterId")]
        public Output<string> KustoClusterId { get; private set; } = null!;

        /// <summary>
        /// URI of the Kusto Cluster. Changing this forces a new resource to be created.
        /// </summary>
        [Output("kustoClusterUri")]
        public Output<string> KustoClusterUri { get; private set; } = null!;

        /// <summary>
        /// Name of the Kusto Database. Changing this forces a new resource to be created.
        /// </summary>
        [Output("kustoDatabaseName")]
        public Output<string> KustoDatabaseName { get; private set; } = null!;

        /// <summary>
        /// Name of the Kusto Table. Changing this forces a new resource to be created.
        /// </summary>
        [Output("kustoTableName")]
        public Output<string> KustoTableName { get; private set; } = null!;

        /// <summary>
        /// The name which should be used for this Digital Twins Time Series Database Connection. Changing this forces a new resource to be created.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;


        /// <summary>
        /// Create a TimeSeriesDatabaseConnection resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public TimeSeriesDatabaseConnection(string name, TimeSeriesDatabaseConnectionArgs args, CustomResourceOptions? options = null)
            : base("azure:digitaltwins/timeSeriesDatabaseConnection:TimeSeriesDatabaseConnection", name, args ?? new TimeSeriesDatabaseConnectionArgs(), MakeResourceOptions(options, ""))
        {
        }

        private TimeSeriesDatabaseConnection(string name, Input<string> id, TimeSeriesDatabaseConnectionState? state = null, CustomResourceOptions? options = null)
            : base("azure:digitaltwins/timeSeriesDatabaseConnection:TimeSeriesDatabaseConnection", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing TimeSeriesDatabaseConnection resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static TimeSeriesDatabaseConnection Get(string name, Input<string> id, TimeSeriesDatabaseConnectionState? state = null, CustomResourceOptions? options = null)
        {
            return new TimeSeriesDatabaseConnection(name, id, state, options);
        }
    }

    public sealed class TimeSeriesDatabaseConnectionArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the Digital Twins. Changing this forces a new resource to be created.
        /// </summary>
        [Input("digitalTwinsId", required: true)]
        public Input<string> DigitalTwinsId { get; set; } = null!;

        /// <summary>
        /// Name of the Event Hub Consumer Group. Changing this forces a new resource to be created. Defaults to `$Default`.
        /// </summary>
        [Input("eventhubConsumerGroupName")]
        public Input<string>? EventhubConsumerGroupName { get; set; }

        /// <summary>
        /// Name of the Event Hub. Changing this forces a new resource to be created.
        /// </summary>
        [Input("eventhubName", required: true)]
        public Input<string> EventhubName { get; set; } = null!;

        /// <summary>
        /// URI of the Event Hub Namespace. Changing this forces a new resource to be created.
        /// </summary>
        [Input("eventhubNamespaceEndpointUri", required: true)]
        public Input<string> EventhubNamespaceEndpointUri { get; set; } = null!;

        /// <summary>
        /// The ID of the Event Hub Namespace. Changing this forces a new resource to be created.
        /// </summary>
        [Input("eventhubNamespaceId", required: true)]
        public Input<string> EventhubNamespaceId { get; set; } = null!;

        /// <summary>
        /// The ID of the Kusto Cluster. Changing this forces a new resource to be created.
        /// </summary>
        [Input("kustoClusterId", required: true)]
        public Input<string> KustoClusterId { get; set; } = null!;

        /// <summary>
        /// URI of the Kusto Cluster. Changing this forces a new resource to be created.
        /// </summary>
        [Input("kustoClusterUri", required: true)]
        public Input<string> KustoClusterUri { get; set; } = null!;

        /// <summary>
        /// Name of the Kusto Database. Changing this forces a new resource to be created.
        /// </summary>
        [Input("kustoDatabaseName", required: true)]
        public Input<string> KustoDatabaseName { get; set; } = null!;

        /// <summary>
        /// Name of the Kusto Table. Changing this forces a new resource to be created.
        /// </summary>
        [Input("kustoTableName")]
        public Input<string>? KustoTableName { get; set; }

        /// <summary>
        /// The name which should be used for this Digital Twins Time Series Database Connection. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        public TimeSeriesDatabaseConnectionArgs()
        {
        }
        public static new TimeSeriesDatabaseConnectionArgs Empty => new TimeSeriesDatabaseConnectionArgs();
    }

    public sealed class TimeSeriesDatabaseConnectionState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the Digital Twins. Changing this forces a new resource to be created.
        /// </summary>
        [Input("digitalTwinsId")]
        public Input<string>? DigitalTwinsId { get; set; }

        /// <summary>
        /// Name of the Event Hub Consumer Group. Changing this forces a new resource to be created. Defaults to `$Default`.
        /// </summary>
        [Input("eventhubConsumerGroupName")]
        public Input<string>? EventhubConsumerGroupName { get; set; }

        /// <summary>
        /// Name of the Event Hub. Changing this forces a new resource to be created.
        /// </summary>
        [Input("eventhubName")]
        public Input<string>? EventhubName { get; set; }

        /// <summary>
        /// URI of the Event Hub Namespace. Changing this forces a new resource to be created.
        /// </summary>
        [Input("eventhubNamespaceEndpointUri")]
        public Input<string>? EventhubNamespaceEndpointUri { get; set; }

        /// <summary>
        /// The ID of the Event Hub Namespace. Changing this forces a new resource to be created.
        /// </summary>
        [Input("eventhubNamespaceId")]
        public Input<string>? EventhubNamespaceId { get; set; }

        /// <summary>
        /// The ID of the Kusto Cluster. Changing this forces a new resource to be created.
        /// </summary>
        [Input("kustoClusterId")]
        public Input<string>? KustoClusterId { get; set; }

        /// <summary>
        /// URI of the Kusto Cluster. Changing this forces a new resource to be created.
        /// </summary>
        [Input("kustoClusterUri")]
        public Input<string>? KustoClusterUri { get; set; }

        /// <summary>
        /// Name of the Kusto Database. Changing this forces a new resource to be created.
        /// </summary>
        [Input("kustoDatabaseName")]
        public Input<string>? KustoDatabaseName { get; set; }

        /// <summary>
        /// Name of the Kusto Table. Changing this forces a new resource to be created.
        /// </summary>
        [Input("kustoTableName")]
        public Input<string>? KustoTableName { get; set; }

        /// <summary>
        /// The name which should be used for this Digital Twins Time Series Database Connection. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        public TimeSeriesDatabaseConnectionState()
        {
        }
        public static new TimeSeriesDatabaseConnectionState Empty => new TimeSeriesDatabaseConnectionState();
    }
}
