// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.DigitalTwins
{
    /// <summary>
    /// Manages a Digital Twins Service Bus Endpoint.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using Azure = Pulumi.Azure;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var exampleResourceGroup = new Azure.Core.ResourceGroup("exampleResourceGroup", new Azure.Core.ResourceGroupArgs
    ///         {
    ///             Location = "West Europe",
    ///         });
    ///         var exampleInstance = new Azure.DigitalTwins.Instance("exampleInstance", new Azure.DigitalTwins.InstanceArgs
    ///         {
    ///             ResourceGroupName = exampleResourceGroup.Name,
    ///             Location = exampleResourceGroup.Location,
    ///         });
    ///         var exampleNamespace = new Azure.ServiceBus.Namespace("exampleNamespace", new Azure.ServiceBus.NamespaceArgs
    ///         {
    ///             Location = exampleResourceGroup.Location,
    ///             ResourceGroupName = exampleResourceGroup.Name,
    ///             Sku = "Standard",
    ///         });
    ///         var exampleTopic = new Azure.ServiceBus.Topic("exampleTopic", new Azure.ServiceBus.TopicArgs
    ///         {
    ///             NamespaceName = exampleNamespace.Name,
    ///             ResourceGroupName = exampleResourceGroup.Name,
    ///         });
    ///         var exampleTopicAuthorizationRule = new Azure.ServiceBus.TopicAuthorizationRule("exampleTopicAuthorizationRule", new Azure.ServiceBus.TopicAuthorizationRuleArgs
    ///         {
    ///             NamespaceName = exampleNamespace.Name,
    ///             ResourceGroupName = exampleResourceGroup.Name,
    ///             TopicName = exampleTopic.Name,
    ///             Listen = false,
    ///             Send = true,
    ///             Manage = false,
    ///         });
    ///         var exampleEndpointServicebus = new Azure.DigitalTwins.EndpointServicebus("exampleEndpointServicebus", new Azure.DigitalTwins.EndpointServicebusArgs
    ///         {
    ///             DigitalTwinsId = exampleInstance.Id,
    ///             ServicebusPrimaryConnectionString = exampleTopicAuthorizationRule.PrimaryConnectionString,
    ///             ServicebusSecondaryConnectionString = exampleTopicAuthorizationRule.SecondaryConnectionString,
    ///         });
    ///     }
    /// 
    /// }
    /// ```
    /// 
    /// ## Import
    /// 
    /// Digital Twins Service Bus Endpoints can be imported using the `resource id`, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import azure:digitaltwins/endpointServicebus:EndpointServicebus example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.DigitalTwins/digitalTwinsInstances/dt1/endpoints/ep1
    /// ```
    /// </summary>
    [AzureResourceType("azure:digitaltwins/endpointServicebus:EndpointServicebus")]
    public partial class EndpointServicebus : Pulumi.CustomResource
    {
        /// <summary>
        /// The storage secret of the dead-lettering, whose format is `https://&lt;storageAccountname&gt;.blob.core.windows.net/&lt;containerName&gt;?&lt;SASToken&gt;`. When an endpoint can't deliver an event within a certain time period or after trying to deliver the event a certain number of times, it can send the undelivered event to a storage account.
        /// </summary>
        [Output("deadLetterStorageSecret")]
        public Output<string?> DeadLetterStorageSecret { get; private set; } = null!;

        /// <summary>
        /// The ID of the Digital Twins Instance. Changing this forces a new Digital Twins Service Bus Endpoint to be created.
        /// </summary>
        [Output("digitalTwinsId")]
        public Output<string> DigitalTwinsId { get; private set; } = null!;

        /// <summary>
        /// The name which should be used for this Digital Twins Service Bus Endpoint. Changing this forces a new Digital Twins Service Bus Endpoint to be created.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The primary connection string of the Service Bus Topic Authorization Rule with a minimum of `send` permission. .
        /// </summary>
        [Output("servicebusPrimaryConnectionString")]
        public Output<string> ServicebusPrimaryConnectionString { get; private set; } = null!;

        /// <summary>
        /// The secondary connection string of the Service Bus Topic Authorization Rule with a minimum of `send` permission.
        /// </summary>
        [Output("servicebusSecondaryConnectionString")]
        public Output<string> ServicebusSecondaryConnectionString { get; private set; } = null!;


        /// <summary>
        /// Create a EndpointServicebus resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public EndpointServicebus(string name, EndpointServicebusArgs args, CustomResourceOptions? options = null)
            : base("azure:digitaltwins/endpointServicebus:EndpointServicebus", name, args ?? new EndpointServicebusArgs(), MakeResourceOptions(options, ""))
        {
        }

        private EndpointServicebus(string name, Input<string> id, EndpointServicebusState? state = null, CustomResourceOptions? options = null)
            : base("azure:digitaltwins/endpointServicebus:EndpointServicebus", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing EndpointServicebus resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static EndpointServicebus Get(string name, Input<string> id, EndpointServicebusState? state = null, CustomResourceOptions? options = null)
        {
            return new EndpointServicebus(name, id, state, options);
        }
    }

    public sealed class EndpointServicebusArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The storage secret of the dead-lettering, whose format is `https://&lt;storageAccountname&gt;.blob.core.windows.net/&lt;containerName&gt;?&lt;SASToken&gt;`. When an endpoint can't deliver an event within a certain time period or after trying to deliver the event a certain number of times, it can send the undelivered event to a storage account.
        /// </summary>
        [Input("deadLetterStorageSecret")]
        public Input<string>? DeadLetterStorageSecret { get; set; }

        /// <summary>
        /// The ID of the Digital Twins Instance. Changing this forces a new Digital Twins Service Bus Endpoint to be created.
        /// </summary>
        [Input("digitalTwinsId", required: true)]
        public Input<string> DigitalTwinsId { get; set; } = null!;

        /// <summary>
        /// The name which should be used for this Digital Twins Service Bus Endpoint. Changing this forces a new Digital Twins Service Bus Endpoint to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The primary connection string of the Service Bus Topic Authorization Rule with a minimum of `send` permission. .
        /// </summary>
        [Input("servicebusPrimaryConnectionString", required: true)]
        public Input<string> ServicebusPrimaryConnectionString { get; set; } = null!;

        /// <summary>
        /// The secondary connection string of the Service Bus Topic Authorization Rule with a minimum of `send` permission.
        /// </summary>
        [Input("servicebusSecondaryConnectionString", required: true)]
        public Input<string> ServicebusSecondaryConnectionString { get; set; } = null!;

        public EndpointServicebusArgs()
        {
        }
    }

    public sealed class EndpointServicebusState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The storage secret of the dead-lettering, whose format is `https://&lt;storageAccountname&gt;.blob.core.windows.net/&lt;containerName&gt;?&lt;SASToken&gt;`. When an endpoint can't deliver an event within a certain time period or after trying to deliver the event a certain number of times, it can send the undelivered event to a storage account.
        /// </summary>
        [Input("deadLetterStorageSecret")]
        public Input<string>? DeadLetterStorageSecret { get; set; }

        /// <summary>
        /// The ID of the Digital Twins Instance. Changing this forces a new Digital Twins Service Bus Endpoint to be created.
        /// </summary>
        [Input("digitalTwinsId")]
        public Input<string>? DigitalTwinsId { get; set; }

        /// <summary>
        /// The name which should be used for this Digital Twins Service Bus Endpoint. Changing this forces a new Digital Twins Service Bus Endpoint to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The primary connection string of the Service Bus Topic Authorization Rule with a minimum of `send` permission. .
        /// </summary>
        [Input("servicebusPrimaryConnectionString")]
        public Input<string>? ServicebusPrimaryConnectionString { get; set; }

        /// <summary>
        /// The secondary connection string of the Service Bus Topic Authorization Rule with a minimum of `send` permission.
        /// </summary>
        [Input("servicebusSecondaryConnectionString")]
        public Input<string>? ServicebusSecondaryConnectionString { get; set; }

        public EndpointServicebusState()
        {
        }
    }
}
