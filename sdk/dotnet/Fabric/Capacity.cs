// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Fabric
{
    /// <summary>
    /// Manages a Fabric Capacity.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Azure = Pulumi.Azure;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var current = Azure.Core.GetClientConfig.Invoke();
    /// 
    ///     var example = new Azure.Core.ResourceGroup("example", new()
    ///     {
    ///         Name = "example-resources",
    ///         Location = "West Europe",
    ///     });
    /// 
    ///     var exampleCapacity = new Azure.Fabric.Capacity("example", new()
    ///     {
    ///         Name = "exampleffc",
    ///         ResourceGroupName = example.Name,
    ///         Location = "West Europe",
    ///         AdministrationMembers = new[]
    ///         {
    ///             current.Apply(getClientConfigResult =&gt; getClientConfigResult.ObjectId),
    ///         },
    ///         Sku = new Azure.Fabric.Inputs.CapacitySkuArgs
    ///         {
    ///             Name = "F32",
    ///             Tier = "Fabric",
    ///         },
    ///         Tags = 
    ///         {
    ///             { "environment", "test" },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## API Providers
    /// 
    /// &lt;!-- This section is generated, changes will be overwritten --&gt;
    /// This resource uses the following Azure API Providers:
    /// 
    /// * `Microsoft.Fabric`: 2023-11-01
    /// 
    /// ## Import
    /// 
    /// Fabric Capacities can be imported using the `resource id`, e.g.
    /// 
    /// ```sh
    /// $ pulumi import azure:fabric/capacity:Capacity example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resourceGroup1/providers/Microsoft.Fabric/capacities/capacity1
    /// ```
    /// </summary>
    [AzureResourceType("azure:fabric/capacity:Capacity")]
    public partial class Capacity : global::Pulumi.CustomResource
    {
        /// <summary>
        /// An array of administrator user identities. The member must be an Entra user or a service principal.
        /// 
        /// &gt; **Note:** If the member is an Entra user, use user principal name (UPN) format. If the user is a service principal, use object ID.
        /// </summary>
        [Output("administrationMembers")]
        public Output<ImmutableArray<string>> AdministrationMembers { get; private set; } = null!;

        /// <summary>
        /// The supported Azure location where the Fabric Capacity exists. Changing this forces a new resource to be created.
        /// </summary>
        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// The name which should be used for the Fabric Capacity. Changing this forces a new resource to be created.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The name of the Resource Group in which to create the Fabric Capacity. Changing this forces a new resource to be created.
        /// </summary>
        [Output("resourceGroupName")]
        public Output<string> ResourceGroupName { get; private set; } = null!;

        /// <summary>
        /// A `sku` block as defined below.
        /// </summary>
        [Output("sku")]
        public Output<Outputs.CapacitySku> Sku { get; private set; } = null!;

        /// <summary>
        /// A mapping of tags to assign to the Fabric Capacity.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;


        /// <summary>
        /// Create a Capacity resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Capacity(string name, CapacityArgs args, CustomResourceOptions? options = null)
            : base("azure:fabric/capacity:Capacity", name, args ?? new CapacityArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Capacity(string name, Input<string> id, CapacityState? state = null, CustomResourceOptions? options = null)
            : base("azure:fabric/capacity:Capacity", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Capacity resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Capacity Get(string name, Input<string> id, CapacityState? state = null, CustomResourceOptions? options = null)
        {
            return new Capacity(name, id, state, options);
        }
    }

    public sealed class CapacityArgs : global::Pulumi.ResourceArgs
    {
        [Input("administrationMembers")]
        private InputList<string>? _administrationMembers;

        /// <summary>
        /// An array of administrator user identities. The member must be an Entra user or a service principal.
        /// 
        /// &gt; **Note:** If the member is an Entra user, use user principal name (UPN) format. If the user is a service principal, use object ID.
        /// </summary>
        public InputList<string> AdministrationMembers
        {
            get => _administrationMembers ?? (_administrationMembers = new InputList<string>());
            set => _administrationMembers = value;
        }

        /// <summary>
        /// The supported Azure location where the Fabric Capacity exists. Changing this forces a new resource to be created.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// The name which should be used for the Fabric Capacity. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The name of the Resource Group in which to create the Fabric Capacity. Changing this forces a new resource to be created.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// A `sku` block as defined below.
        /// </summary>
        [Input("sku", required: true)]
        public Input<Inputs.CapacitySkuArgs> Sku { get; set; } = null!;

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// A mapping of tags to assign to the Fabric Capacity.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public CapacityArgs()
        {
        }
        public static new CapacityArgs Empty => new CapacityArgs();
    }

    public sealed class CapacityState : global::Pulumi.ResourceArgs
    {
        [Input("administrationMembers")]
        private InputList<string>? _administrationMembers;

        /// <summary>
        /// An array of administrator user identities. The member must be an Entra user or a service principal.
        /// 
        /// &gt; **Note:** If the member is an Entra user, use user principal name (UPN) format. If the user is a service principal, use object ID.
        /// </summary>
        public InputList<string> AdministrationMembers
        {
            get => _administrationMembers ?? (_administrationMembers = new InputList<string>());
            set => _administrationMembers = value;
        }

        /// <summary>
        /// The supported Azure location where the Fabric Capacity exists. Changing this forces a new resource to be created.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// The name which should be used for the Fabric Capacity. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The name of the Resource Group in which to create the Fabric Capacity. Changing this forces a new resource to be created.
        /// </summary>
        [Input("resourceGroupName")]
        public Input<string>? ResourceGroupName { get; set; }

        /// <summary>
        /// A `sku` block as defined below.
        /// </summary>
        [Input("sku")]
        public Input<Inputs.CapacitySkuGetArgs>? Sku { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// A mapping of tags to assign to the Fabric Capacity.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public CapacityState()
        {
        }
        public static new CapacityState Empty => new CapacityState();
    }
}
