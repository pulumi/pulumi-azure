// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Management
{
    /// <summary>
    /// Manages a Policy Set Definition for a Management Group.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Azure = Pulumi.Azure;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Azure.Management.Group("example", new()
    ///     {
    ///         DisplayName = "Example",
    ///     });
    /// 
    ///     var exampleGroupPolicySetDefinition = new Azure.Management.GroupPolicySetDefinition("example", new()
    ///     {
    ///         Name = "example",
    ///         PolicyType = "Custom",
    ///         DisplayName = "Example",
    ///         ManagementGroupId = example.Id,
    ///         Parameters = @"   {
    ///        ""allowedLocations"": {
    ///            ""type"": ""Array"",
    ///            ""metadata"": {
    ///                ""description"": ""The list of allowed locations for resources."",
    ///                ""displayName"": ""Allowed locations"",
    ///                ""strongType"": ""location""
    ///            }
    ///        }
    ///    }
    /// ",
    ///         PolicyDefinitionReferences = new[]
    ///         {
    ///             new Azure.Management.Inputs.GroupPolicySetDefinitionPolicyDefinitionReferenceArgs
    ///             {
    ///                 Version = "1.0.*",
    ///                 PolicyDefinitionId = "/providers/Microsoft.Authorization/policyDefinitions/e765b5de-1225-4ba3-bd56-1ac6695af988",
    ///                 ParameterValues = @"   {
    ///      ""listOfAllowedLocations"": {""value"": ""[parameters('allowedLocations')]""}
    ///    }
    /// ",
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## API Providers
    /// 
    /// &lt;!-- This section is generated, changes will be overwritten --&gt;
    /// This resource uses the following Azure API Providers:
    /// 
    /// * `Microsoft.Management` - 2025-01-01
    /// 
    /// ## Import
    /// 
    /// Policy Set Definitions can be imported using the `resource id`, e.g.
    /// 
    /// ```sh
    /// $ pulumi import azure:management/groupPolicySetDefinition:GroupPolicySetDefinition example /providers/Microsoft.Management/managementGroups/0000000-0000-0000-0000-000000000000/providers/Microsoft.Authorization/policySetDefinitions/policySetDefinitionName
    /// ```
    /// </summary>
    [AzureResourceType("azure:management/groupPolicySetDefinition:GroupPolicySetDefinition")]
    public partial class GroupPolicySetDefinition : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The description of this Policy Set Definition.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// The display name of this Policy Set Definition.
        /// </summary>
        [Output("displayName")]
        public Output<string> DisplayName { get; private set; } = null!;

        /// <summary>
        /// The ID of the Management Group where this Policy Set Definition should be created. Changing this forces a new Policy Set Definition to be created.
        /// </summary>
        [Output("managementGroupId")]
        public Output<string> ManagementGroupId { get; private set; } = null!;

        /// <summary>
        /// The metadata for the Policy Set Definition in JSON format.
        /// </summary>
        [Output("metadata")]
        public Output<string> Metadata { get; private set; } = null!;

        /// <summary>
        /// The name which should be used for this Policy Set Definition. Changing this forces a new Policy Set Definition to be created.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The parameters for the Policy Set Definition in JSON format. Reducing the number of parameters forces a new resource to be created.
        /// </summary>
        [Output("parameters")]
        public Output<string?> Parameters { get; private set; } = null!;

        /// <summary>
        /// One or more `policy_definition_group` blocks as defined below.
        /// </summary>
        [Output("policyDefinitionGroups")]
        public Output<ImmutableArray<Outputs.GroupPolicySetDefinitionPolicyDefinitionGroup>> PolicyDefinitionGroups { get; private set; } = null!;

        /// <summary>
        /// One or more `policy_definition_reference` blocks as defined below.
        /// </summary>
        [Output("policyDefinitionReferences")]
        public Output<ImmutableArray<Outputs.GroupPolicySetDefinitionPolicyDefinitionReference>> PolicyDefinitionReferences { get; private set; } = null!;

        /// <summary>
        /// The Policy Set Definition type. Possible values are `BuiltIn`, `Custom`, `NotSpecified`, and `Static`. Changing this forces a new Policy Set Definition to be created.
        /// </summary>
        [Output("policyType")]
        public Output<string> PolicyType { get; private set; } = null!;


        /// <summary>
        /// Create a GroupPolicySetDefinition resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public GroupPolicySetDefinition(string name, GroupPolicySetDefinitionArgs args, CustomResourceOptions? options = null)
            : base("azure:management/groupPolicySetDefinition:GroupPolicySetDefinition", name, args ?? new GroupPolicySetDefinitionArgs(), MakeResourceOptions(options, ""))
        {
        }

        private GroupPolicySetDefinition(string name, Input<string> id, GroupPolicySetDefinitionState? state = null, CustomResourceOptions? options = null)
            : base("azure:management/groupPolicySetDefinition:GroupPolicySetDefinition", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing GroupPolicySetDefinition resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static GroupPolicySetDefinition Get(string name, Input<string> id, GroupPolicySetDefinitionState? state = null, CustomResourceOptions? options = null)
        {
            return new GroupPolicySetDefinition(name, id, state, options);
        }
    }

    public sealed class GroupPolicySetDefinitionArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The description of this Policy Set Definition.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The display name of this Policy Set Definition.
        /// </summary>
        [Input("displayName", required: true)]
        public Input<string> DisplayName { get; set; } = null!;

        /// <summary>
        /// The ID of the Management Group where this Policy Set Definition should be created. Changing this forces a new Policy Set Definition to be created.
        /// </summary>
        [Input("managementGroupId", required: true)]
        public Input<string> ManagementGroupId { get; set; } = null!;

        /// <summary>
        /// The metadata for the Policy Set Definition in JSON format.
        /// </summary>
        [Input("metadata")]
        public Input<string>? Metadata { get; set; }

        /// <summary>
        /// The name which should be used for this Policy Set Definition. Changing this forces a new Policy Set Definition to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The parameters for the Policy Set Definition in JSON format. Reducing the number of parameters forces a new resource to be created.
        /// </summary>
        [Input("parameters")]
        public Input<string>? Parameters { get; set; }

        [Input("policyDefinitionGroups")]
        private InputList<Inputs.GroupPolicySetDefinitionPolicyDefinitionGroupArgs>? _policyDefinitionGroups;

        /// <summary>
        /// One or more `policy_definition_group` blocks as defined below.
        /// </summary>
        public InputList<Inputs.GroupPolicySetDefinitionPolicyDefinitionGroupArgs> PolicyDefinitionGroups
        {
            get => _policyDefinitionGroups ?? (_policyDefinitionGroups = new InputList<Inputs.GroupPolicySetDefinitionPolicyDefinitionGroupArgs>());
            set => _policyDefinitionGroups = value;
        }

        [Input("policyDefinitionReferences", required: true)]
        private InputList<Inputs.GroupPolicySetDefinitionPolicyDefinitionReferenceArgs>? _policyDefinitionReferences;

        /// <summary>
        /// One or more `policy_definition_reference` blocks as defined below.
        /// </summary>
        public InputList<Inputs.GroupPolicySetDefinitionPolicyDefinitionReferenceArgs> PolicyDefinitionReferences
        {
            get => _policyDefinitionReferences ?? (_policyDefinitionReferences = new InputList<Inputs.GroupPolicySetDefinitionPolicyDefinitionReferenceArgs>());
            set => _policyDefinitionReferences = value;
        }

        /// <summary>
        /// The Policy Set Definition type. Possible values are `BuiltIn`, `Custom`, `NotSpecified`, and `Static`. Changing this forces a new Policy Set Definition to be created.
        /// </summary>
        [Input("policyType", required: true)]
        public Input<string> PolicyType { get; set; } = null!;

        public GroupPolicySetDefinitionArgs()
        {
        }
        public static new GroupPolicySetDefinitionArgs Empty => new GroupPolicySetDefinitionArgs();
    }

    public sealed class GroupPolicySetDefinitionState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The description of this Policy Set Definition.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The display name of this Policy Set Definition.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        /// <summary>
        /// The ID of the Management Group where this Policy Set Definition should be created. Changing this forces a new Policy Set Definition to be created.
        /// </summary>
        [Input("managementGroupId")]
        public Input<string>? ManagementGroupId { get; set; }

        /// <summary>
        /// The metadata for the Policy Set Definition in JSON format.
        /// </summary>
        [Input("metadata")]
        public Input<string>? Metadata { get; set; }

        /// <summary>
        /// The name which should be used for this Policy Set Definition. Changing this forces a new Policy Set Definition to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The parameters for the Policy Set Definition in JSON format. Reducing the number of parameters forces a new resource to be created.
        /// </summary>
        [Input("parameters")]
        public Input<string>? Parameters { get; set; }

        [Input("policyDefinitionGroups")]
        private InputList<Inputs.GroupPolicySetDefinitionPolicyDefinitionGroupGetArgs>? _policyDefinitionGroups;

        /// <summary>
        /// One or more `policy_definition_group` blocks as defined below.
        /// </summary>
        public InputList<Inputs.GroupPolicySetDefinitionPolicyDefinitionGroupGetArgs> PolicyDefinitionGroups
        {
            get => _policyDefinitionGroups ?? (_policyDefinitionGroups = new InputList<Inputs.GroupPolicySetDefinitionPolicyDefinitionGroupGetArgs>());
            set => _policyDefinitionGroups = value;
        }

        [Input("policyDefinitionReferences")]
        private InputList<Inputs.GroupPolicySetDefinitionPolicyDefinitionReferenceGetArgs>? _policyDefinitionReferences;

        /// <summary>
        /// One or more `policy_definition_reference` blocks as defined below.
        /// </summary>
        public InputList<Inputs.GroupPolicySetDefinitionPolicyDefinitionReferenceGetArgs> PolicyDefinitionReferences
        {
            get => _policyDefinitionReferences ?? (_policyDefinitionReferences = new InputList<Inputs.GroupPolicySetDefinitionPolicyDefinitionReferenceGetArgs>());
            set => _policyDefinitionReferences = value;
        }

        /// <summary>
        /// The Policy Set Definition type. Possible values are `BuiltIn`, `Custom`, `NotSpecified`, and `Static`. Changing this forces a new Policy Set Definition to be created.
        /// </summary>
        [Input("policyType")]
        public Input<string>? PolicyType { get; set; }

        public GroupPolicySetDefinitionState()
        {
        }
        public static new GroupPolicySetDefinitionState Empty => new GroupPolicySetDefinitionState();
    }
}
