// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Management
{
    public static class GetGroup
    {
        /// <summary>
        /// Use this data source to access information about an existing Management Group.
        /// </summary>
        public static Task<GetGroupResult> InvokeAsync(GetGroupArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetGroupResult>("azure:management/getGroup:getGroup", args ?? new GetGroupArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to access information about an existing Management Group.
        /// </summary>
        public static Output<GetGroupResult> Invoke(GetGroupInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetGroupResult>("azure:management/getGroup:getGroup", args ?? new GetGroupInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetGroupArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Specifies the display name of this Management Group.
        /// 
        /// &gt; **NOTE** Whilst multiple management groups may share the same display name, when filtering, the provider expects a single management group to be found with this name.
        /// </summary>
        [Input("displayName")]
        public string? DisplayName { get; set; }

        /// <summary>
        /// Specifies the name or UUID of this Management Group.
        /// </summary>
        [Input("name")]
        public string? Name { get; set; }

        public GetGroupArgs()
        {
        }
        public static new GetGroupArgs Empty => new GetGroupArgs();
    }

    public sealed class GetGroupInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Specifies the display name of this Management Group.
        /// 
        /// &gt; **NOTE** Whilst multiple management groups may share the same display name, when filtering, the provider expects a single management group to be found with this name.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        /// <summary>
        /// Specifies the name or UUID of this Management Group.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        public GetGroupInvokeArgs()
        {
        }
        public static new GetGroupInvokeArgs Empty => new GetGroupInvokeArgs();
    }


    [OutputType]
    public sealed class GetGroupResult
    {
        /// <summary>
        /// A list of Management Group IDs which directly or indirectly belong to this Management Group.
        /// </summary>
        public readonly ImmutableArray<string> AllManagementGroupIds;
        /// <summary>
        /// A list of Subscription IDs which are assigned to this Management Group or its children Management Groups.
        /// </summary>
        public readonly ImmutableArray<string> AllSubscriptionIds;
        public readonly string DisplayName;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// A list of Management Group IDs which directly belong to this Management Group.
        /// </summary>
        public readonly ImmutableArray<string> ManagementGroupIds;
        public readonly string Name;
        /// <summary>
        /// The ID of any Parent Management Group.
        /// </summary>
        public readonly string ParentManagementGroupId;
        /// <summary>
        /// A list of Subscription IDs which are directly assigned to this Management Group.
        /// </summary>
        public readonly ImmutableArray<string> SubscriptionIds;

        [OutputConstructor]
        private GetGroupResult(
            ImmutableArray<string> allManagementGroupIds,

            ImmutableArray<string> allSubscriptionIds,

            string displayName,

            string id,

            ImmutableArray<string> managementGroupIds,

            string name,

            string parentManagementGroupId,

            ImmutableArray<string> subscriptionIds)
        {
            AllManagementGroupIds = allManagementGroupIds;
            AllSubscriptionIds = allSubscriptionIds;
            DisplayName = displayName;
            Id = id;
            ManagementGroupIds = managementGroupIds;
            Name = name;
            ParentManagementGroupId = parentManagementGroupId;
            SubscriptionIds = subscriptionIds;
        }
    }
}
