// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Management
{
    /// <summary>
    /// Manages a Management Group Subscription Association.
    /// 
    /// !&gt; **Note:** When using this resource, configuring `subscription_ids` on the `azure.management.Group` resource is not supported.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using Azure = Pulumi.Azure;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var exampleGroup = Azure.Management.GetGroup.Invoke(new()
    ///     {
    ///         Name = "exampleManagementGroup",
    ///     });
    /// 
    ///     var exampleSubscription = Azure.Core.GetSubscription.Invoke(new()
    ///     {
    ///         SubscriptionId = "12345678-1234-1234-1234-123456789012",
    ///     });
    /// 
    ///     var exampleGroupSubscriptionAssociation = new Azure.Management.GroupSubscriptionAssociation("exampleGroupSubscriptionAssociation", new()
    ///     {
    ///         ManagementGroupId = exampleGroup.Apply(getGroupResult =&gt; getGroupResult.Id),
    ///         SubscriptionId = exampleSubscription.Apply(getSubscriptionResult =&gt; getSubscriptionResult.Id),
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Managements can be imported using the `resource id`, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import azure:management/groupSubscriptionAssociation:GroupSubscriptionAssociation example /managementGroup/MyManagementGroup/subscription/12345678-1234-1234-1234-123456789012
    /// ```
    /// </summary>
    [AzureResourceType("azure:management/groupSubscriptionAssociation:GroupSubscriptionAssociation")]
    public partial class GroupSubscriptionAssociation : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The ID of the Management Group to associate the Subscription with. Changing this forces a new Management to be created.
        /// </summary>
        [Output("managementGroupId")]
        public Output<string> ManagementGroupId { get; private set; } = null!;

        /// <summary>
        /// The ID of the Subscription to be associated with the Management Group. Changing this forces a new Management to be created.
        /// </summary>
        [Output("subscriptionId")]
        public Output<string> SubscriptionId { get; private set; } = null!;


        /// <summary>
        /// Create a GroupSubscriptionAssociation resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public GroupSubscriptionAssociation(string name, GroupSubscriptionAssociationArgs args, CustomResourceOptions? options = null)
            : base("azure:management/groupSubscriptionAssociation:GroupSubscriptionAssociation", name, args ?? new GroupSubscriptionAssociationArgs(), MakeResourceOptions(options, ""))
        {
        }

        private GroupSubscriptionAssociation(string name, Input<string> id, GroupSubscriptionAssociationState? state = null, CustomResourceOptions? options = null)
            : base("azure:management/groupSubscriptionAssociation:GroupSubscriptionAssociation", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing GroupSubscriptionAssociation resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static GroupSubscriptionAssociation Get(string name, Input<string> id, GroupSubscriptionAssociationState? state = null, CustomResourceOptions? options = null)
        {
            return new GroupSubscriptionAssociation(name, id, state, options);
        }
    }

    public sealed class GroupSubscriptionAssociationArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the Management Group to associate the Subscription with. Changing this forces a new Management to be created.
        /// </summary>
        [Input("managementGroupId", required: true)]
        public Input<string> ManagementGroupId { get; set; } = null!;

        /// <summary>
        /// The ID of the Subscription to be associated with the Management Group. Changing this forces a new Management to be created.
        /// </summary>
        [Input("subscriptionId", required: true)]
        public Input<string> SubscriptionId { get; set; } = null!;

        public GroupSubscriptionAssociationArgs()
        {
        }
        public static new GroupSubscriptionAssociationArgs Empty => new GroupSubscriptionAssociationArgs();
    }

    public sealed class GroupSubscriptionAssociationState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the Management Group to associate the Subscription with. Changing this forces a new Management to be created.
        /// </summary>
        [Input("managementGroupId")]
        public Input<string>? ManagementGroupId { get; set; }

        /// <summary>
        /// The ID of the Subscription to be associated with the Management Group. Changing this forces a new Management to be created.
        /// </summary>
        [Input("subscriptionId")]
        public Input<string>? SubscriptionId { get; set; }

        public GroupSubscriptionAssociationState()
        {
        }
        public static new GroupSubscriptionAssociationState Empty => new GroupSubscriptionAssociationState();
    }
}
