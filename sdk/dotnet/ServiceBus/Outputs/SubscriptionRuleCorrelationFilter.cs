// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.ServiceBus.Outputs
{

    [OutputType]
    public sealed class SubscriptionRuleCorrelationFilter
    {
        /// <summary>
        /// Content type of the message.
        /// </summary>
        public readonly string? ContentType;
        /// <summary>
        /// Identifier of the correlation.
        /// </summary>
        public readonly string? CorrelationId;
        /// <summary>
        /// Application specific label.
        /// </summary>
        public readonly string? Label;
        /// <summary>
        /// Identifier of the message.
        /// </summary>
        public readonly string? MessageId;
        /// <summary>
        /// A list of user defined properties to be included in the filter. Specified as a map of name/value pairs.
        /// 
        /// &gt; **NOTE:** When creating a subscription rule of type `CorrelationFilter` at least one property must be set in the `correlation_filter` block.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Properties;
        /// <summary>
        /// Address of the queue to reply to.
        /// </summary>
        public readonly string? ReplyTo;
        /// <summary>
        /// Session identifier to reply to.
        /// </summary>
        public readonly string? ReplyToSessionId;
        /// <summary>
        /// Session identifier.
        /// </summary>
        public readonly string? SessionId;
        /// <summary>
        /// Address to send to.
        /// </summary>
        public readonly string? To;

        [OutputConstructor]
        private SubscriptionRuleCorrelationFilter(
            string? contentType,

            string? correlationId,

            string? label,

            string? messageId,

            ImmutableDictionary<string, string>? properties,

            string? replyTo,

            string? replyToSessionId,

            string? sessionId,

            string? to)
        {
            ContentType = contentType;
            CorrelationId = correlationId;
            Label = label;
            MessageId = messageId;
            Properties = properties;
            ReplyTo = replyTo;
            ReplyToSessionId = replyToSessionId;
            SessionId = sessionId;
            To = to;
        }
    }
}
