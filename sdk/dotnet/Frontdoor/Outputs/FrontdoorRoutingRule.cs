// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.FrontDoor.Outputs
{

    [OutputType]
    public sealed class FrontdoorRoutingRule
    {
        /// <summary>
        /// Protocol schemes to match for the Backend Routing Rule. Defaults to `Http`.
        /// </summary>
        public readonly ImmutableArray<string> AcceptedProtocols;
        /// <summary>
        /// `Enable` or `Disable` use of this Backend Routing Rule. Permitted values are `true` or `false`. Defaults to `true`.
        /// </summary>
        public readonly bool? Enabled;
        /// <summary>
        /// A `forwarding_configuration` block as defined below.
        /// </summary>
        public readonly Outputs.FrontdoorRoutingRuleForwardingConfiguration? ForwardingConfiguration;
        /// <summary>
        /// The names of the `frontend_endpoint` blocks whithin this resource to associate with this `routing_rule`.
        /// </summary>
        public readonly ImmutableArray<string> FrontendEndpoints;
        /// <summary>
        /// The ID of the FrontDoor.
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// Specifies the name of the Routing Rule.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The route patterns for the Backend Routing Rule. Defaults to `/*`.
        /// </summary>
        public readonly ImmutableArray<string> PatternsToMatches;
        /// <summary>
        /// A `redirect_configuration` block as defined below.
        /// </summary>
        public readonly Outputs.FrontdoorRoutingRuleRedirectConfiguration? RedirectConfiguration;

        [OutputConstructor]
        private FrontdoorRoutingRule(
            ImmutableArray<string> acceptedProtocols,

            bool? enabled,

            Outputs.FrontdoorRoutingRuleForwardingConfiguration? forwardingConfiguration,

            ImmutableArray<string> frontendEndpoints,

            string? id,

            string name,

            ImmutableArray<string> patternsToMatches,

            Outputs.FrontdoorRoutingRuleRedirectConfiguration? redirectConfiguration)
        {
            AcceptedProtocols = acceptedProtocols;
            Enabled = enabled;
            ForwardingConfiguration = forwardingConfiguration;
            FrontendEndpoints = frontendEndpoints;
            Id = id;
            Name = name;
            PatternsToMatches = patternsToMatches;
            RedirectConfiguration = redirectConfiguration;
        }
    }
}
