// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.FrontDoor.Outputs
{

    [OutputType]
    public sealed class FrontdoorRoutingRuleRedirectConfiguration
    {
        /// <summary>
        /// The destination fragment in the portion of URL after '#'. Set this to add a fragment to the redirect URL.
        /// </summary>
        public readonly string? CustomFragment;
        /// <summary>
        /// Set this to change the URL for the redirection.
        /// </summary>
        public readonly string? CustomHost;
        /// <summary>
        /// The path to retain as per the incoming request, or update in the URL for the redirection.
        /// </summary>
        public readonly string? CustomPath;
        /// <summary>
        /// Replace any existing query string from the incoming request URL.
        /// </summary>
        public readonly string? CustomQueryString;
        /// <summary>
        /// Protocol to use when redirecting. Valid options are `HttpOnly`, `HttpsOnly`, or `MatchRequest`. Defaults to `MatchRequest`
        /// </summary>
        public readonly string RedirectProtocol;
        /// <summary>
        /// Status code for the redirect. Valida options are `Moved`, `Found`, `TemporaryRedirect`, `PermanentRedirect`. Defaults to `Found`
        /// </summary>
        public readonly string RedirectType;

        [OutputConstructor]
        private FrontdoorRoutingRuleRedirectConfiguration(
            string? customFragment,

            string? customHost,

            string? customPath,

            string? customQueryString,

            string redirectProtocol,

            string redirectType)
        {
            CustomFragment = customFragment;
            CustomHost = customHost;
            CustomPath = customPath;
            CustomQueryString = customQueryString;
            RedirectProtocol = redirectProtocol;
            RedirectType = redirectType;
        }
    }
}
