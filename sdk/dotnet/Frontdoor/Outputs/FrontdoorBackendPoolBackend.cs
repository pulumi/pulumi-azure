// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.FrontDoor.Outputs
{

    [OutputType]
    public sealed class FrontdoorBackendPoolBackend
    {
        /// <summary>
        /// Location of the backend (IP address or FQDN)
        /// </summary>
        public readonly string Address;
        /// <summary>
        /// Specifies if the backend is enabled or not. Valid options are `true` or `false`. Defaults to `true`.
        /// </summary>
        public readonly bool? Enabled;
        /// <summary>
        /// The value to use as the host header sent to the backend.
        /// </summary>
        public readonly string HostHeader;
        /// <summary>
        /// The HTTP TCP port number. Possible values are between `1` - `65535`.
        /// </summary>
        public readonly int HttpPort;
        /// <summary>
        /// The HTTPS TCP port number. Possible values are between `1` - `65535`.
        /// </summary>
        public readonly int HttpsPort;
        /// <summary>
        /// Priority to use for load balancing. Higher priorities will not be used for load balancing if any lower priority backend is healthy. Defaults to `1`.
        /// </summary>
        public readonly int? Priority;
        /// <summary>
        /// Weight of this endpoint for load balancing purposes. Defaults to `50`.
        /// </summary>
        public readonly int? Weight;

        [OutputConstructor]
        private FrontdoorBackendPoolBackend(
            string address,

            bool? enabled,

            string hostHeader,

            int httpPort,

            int httpsPort,

            int? priority,

            int? weight)
        {
            Address = address;
            Enabled = enabled;
            HostHeader = hostHeader;
            HttpPort = httpPort;
            HttpsPort = httpsPort;
            Priority = priority;
            Weight = weight;
        }
    }
}
