// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.FrontDoor.Outputs
{

    [OutputType]
    public sealed class FrontdoorRoutingRuleForwardingConfiguration
    {
        /// <summary>
        /// Specifies the name of the Backend Pool to forward the incoming traffic to.
        /// </summary>
        public readonly string BackendPoolName;
        /// <summary>
        /// Specifies whether to Enable caching or not. Valid options are `true` or `false`. Defaults to `false`.
        /// </summary>
        public readonly bool? CacheEnabled;
        /// <summary>
        /// Defines cache behavior in releation to query string parameters. Valid options are `StripAll` or `StripNone`. Defaults to `StripAll`.
        /// </summary>
        public readonly string? CacheQueryParameterStripDirective;
        /// <summary>
        /// Whether to use dynamic compression when caching. Valid options are `true` or `false`. Defaults to `false`.
        /// </summary>
        public readonly bool? CacheUseDynamicCompression;
        /// <summary>
        /// Path to use when constructing the request to forward to the backend. This functions as a URL Rewrite. Default behavior preserves the URL path.
        /// </summary>
        public readonly string? CustomForwardingPath;
        /// <summary>
        /// Protocol to use when redirecting. Valid options are `HttpOnly`, `HttpsOnly`, or `MatchRequest`. Defaults to `HttpsOnly`.
        /// </summary>
        public readonly string? ForwardingProtocol;

        [OutputConstructor]
        private FrontdoorRoutingRuleForwardingConfiguration(
            string backendPoolName,

            bool? cacheEnabled,

            string? cacheQueryParameterStripDirective,

            bool? cacheUseDynamicCompression,

            string? customForwardingPath,

            string? forwardingProtocol)
        {
            BackendPoolName = backendPoolName;
            CacheEnabled = cacheEnabled;
            CacheQueryParameterStripDirective = cacheQueryParameterStripDirective;
            CacheUseDynamicCompression = cacheUseDynamicCompression;
            CustomForwardingPath = customForwardingPath;
            ForwardingProtocol = forwardingProtocol;
        }
    }
}
