// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.FrontDoor.Inputs
{

    public sealed class FrontdoorRoutingRuleArgs : Pulumi.ResourceArgs
    {
        [Input("acceptedProtocols", required: true)]
        private InputList<string>? _acceptedProtocols;

        /// <summary>
        /// Protocol schemes to match for the Backend Routing Rule. Defaults to `Http`.
        /// </summary>
        public InputList<string> AcceptedProtocols
        {
            get => _acceptedProtocols ?? (_acceptedProtocols = new InputList<string>());
            set => _acceptedProtocols = value;
        }

        /// <summary>
        /// `Enable` or `Disable` use of this Backend Routing Rule. Permitted values are `true` or `false`. Defaults to `true`.
        /// </summary>
        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        /// <summary>
        /// A `forwarding_configuration` block as defined below.
        /// </summary>
        [Input("forwardingConfiguration")]
        public Input<Inputs.FrontdoorRoutingRuleForwardingConfigurationArgs>? ForwardingConfiguration { get; set; }

        [Input("frontendEndpoints", required: true)]
        private InputList<string>? _frontendEndpoints;

        /// <summary>
        /// The names of the `frontend_endpoint` blocks whithin this resource to associate with this `routing_rule`.
        /// </summary>
        public InputList<string> FrontendEndpoints
        {
            get => _frontendEndpoints ?? (_frontendEndpoints = new InputList<string>());
            set => _frontendEndpoints = value;
        }

        /// <summary>
        /// The ID of the FrontDoor.
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        /// <summary>
        /// Specifies the name of the Routing Rule.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        [Input("patternsToMatches", required: true)]
        private InputList<string>? _patternsToMatches;

        /// <summary>
        /// The route patterns for the Backend Routing Rule. Defaults to `/*`.
        /// </summary>
        public InputList<string> PatternsToMatches
        {
            get => _patternsToMatches ?? (_patternsToMatches = new InputList<string>());
            set => _patternsToMatches = value;
        }

        /// <summary>
        /// A `redirect_configuration` block as defined below.
        /// </summary>
        [Input("redirectConfiguration")]
        public Input<Inputs.FrontdoorRoutingRuleRedirectConfigurationArgs>? RedirectConfiguration { get; set; }

        public FrontdoorRoutingRuleArgs()
        {
        }
    }
}
