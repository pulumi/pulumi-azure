// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.FrontDoor
{
    /// <summary>
    /// Manages an Azure Front Door Web Application Firewall Policy instance.
    /// 
    /// &gt; This content is derived from https://github.com/terraform-providers/terraform-provider-azurerm/blob/master/website/docs/r/frontdoor_firewall_policy.html.markdown.
    /// </summary>
    public partial class FirewallPolicy : Pulumi.CustomResource
    {
        /// <summary>
        /// If a `custom_rule` block's action type is `block`, this is the response body. The body must be specified in base64 encoding.
        /// </summary>
        [Output("customBlockResponseBody")]
        public Output<string?> CustomBlockResponseBody { get; private set; } = null!;

        /// <summary>
        /// If a `custom_rule` block's action type is `block`, this is the response status code. Possible values are `200`, `403`, `405`, `406`, or `429`.
        /// </summary>
        [Output("customBlockResponseStatusCode")]
        public Output<int?> CustomBlockResponseStatusCode { get; private set; } = null!;

        /// <summary>
        /// One or more `custom_rule` blocks as defined below.
        /// </summary>
        [Output("customRules")]
        public Output<ImmutableArray<Outputs.FirewallPolicyCustomRules>> CustomRules { get; private set; } = null!;

        /// <summary>
        /// Is the policy a enabled state or disabled state. Defaults to `true`.
        /// </summary>
        [Output("enabled")]
        public Output<bool?> Enabled { get; private set; } = null!;

        /// <summary>
        /// the Frontend Endpoints associated with this Front Door Web Application Firewall policy.
        /// </summary>
        [Output("frontendEndpointIds")]
        public Output<ImmutableArray<string>> FrontendEndpointIds { get; private set; } = null!;

        /// <summary>
        /// Resource location.
        /// </summary>
        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// One or more `managed_rule` blocks as defined below.
        /// </summary>
        [Output("managedRules")]
        public Output<ImmutableArray<Outputs.FirewallPolicyManagedRules>> ManagedRules { get; private set; } = null!;

        /// <summary>
        /// The firewall policy mode. Possible values are `Detection`, `Prevention` and defaults to `Prevention`.
        /// </summary>
        [Output("mode")]
        public Output<string?> Mode { get; private set; } = null!;

        /// <summary>
        /// The name of the policy. Changing this forces a new resource to be created.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// If action type is redirect, this field represents redirect URL for the client.
        /// </summary>
        [Output("redirectUrl")]
        public Output<string?> RedirectUrl { get; private set; } = null!;

        /// <summary>
        /// The name of the resource group. Changing this forces a new resource to be created.
        /// </summary>
        [Output("resourceGroupName")]
        public Output<string> ResourceGroupName { get; private set; } = null!;

        /// <summary>
        /// A mapping of tags to assign to the Web Application Firewall Policy.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;


        /// <summary>
        /// Create a FirewallPolicy resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public FirewallPolicy(string name, FirewallPolicyArgs args, CustomResourceOptions? options = null)
            : base("azure:frontdoor/firewallPolicy:FirewallPolicy", name, args ?? ResourceArgs.Empty, MakeResourceOptions(options, ""))
        {
        }

        private FirewallPolicy(string name, Input<string> id, FirewallPolicyState? state = null, CustomResourceOptions? options = null)
            : base("azure:frontdoor/firewallPolicy:FirewallPolicy", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing FirewallPolicy resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static FirewallPolicy Get(string name, Input<string> id, FirewallPolicyState? state = null, CustomResourceOptions? options = null)
        {
            return new FirewallPolicy(name, id, state, options);
        }
    }

    public sealed class FirewallPolicyArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// If a `custom_rule` block's action type is `block`, this is the response body. The body must be specified in base64 encoding.
        /// </summary>
        [Input("customBlockResponseBody")]
        public Input<string>? CustomBlockResponseBody { get; set; }

        /// <summary>
        /// If a `custom_rule` block's action type is `block`, this is the response status code. Possible values are `200`, `403`, `405`, `406`, or `429`.
        /// </summary>
        [Input("customBlockResponseStatusCode")]
        public Input<int>? CustomBlockResponseStatusCode { get; set; }

        [Input("customRules")]
        private InputList<Inputs.FirewallPolicyCustomRulesArgs>? _customRules;

        /// <summary>
        /// One or more `custom_rule` blocks as defined below.
        /// </summary>
        public InputList<Inputs.FirewallPolicyCustomRulesArgs> CustomRules
        {
            get => _customRules ?? (_customRules = new InputList<Inputs.FirewallPolicyCustomRulesArgs>());
            set => _customRules = value;
        }

        /// <summary>
        /// Is the policy a enabled state or disabled state. Defaults to `true`.
        /// </summary>
        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        [Input("managedRules")]
        private InputList<Inputs.FirewallPolicyManagedRulesArgs>? _managedRules;

        /// <summary>
        /// One or more `managed_rule` blocks as defined below.
        /// </summary>
        public InputList<Inputs.FirewallPolicyManagedRulesArgs> ManagedRules
        {
            get => _managedRules ?? (_managedRules = new InputList<Inputs.FirewallPolicyManagedRulesArgs>());
            set => _managedRules = value;
        }

        /// <summary>
        /// The firewall policy mode. Possible values are `Detection`, `Prevention` and defaults to `Prevention`.
        /// </summary>
        [Input("mode")]
        public Input<string>? Mode { get; set; }

        /// <summary>
        /// The name of the policy. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// If action type is redirect, this field represents redirect URL for the client.
        /// </summary>
        [Input("redirectUrl")]
        public Input<string>? RedirectUrl { get; set; }

        /// <summary>
        /// The name of the resource group. Changing this forces a new resource to be created.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// A mapping of tags to assign to the Web Application Firewall Policy.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public FirewallPolicyArgs()
        {
        }
    }

    public sealed class FirewallPolicyState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// If a `custom_rule` block's action type is `block`, this is the response body. The body must be specified in base64 encoding.
        /// </summary>
        [Input("customBlockResponseBody")]
        public Input<string>? CustomBlockResponseBody { get; set; }

        /// <summary>
        /// If a `custom_rule` block's action type is `block`, this is the response status code. Possible values are `200`, `403`, `405`, `406`, or `429`.
        /// </summary>
        [Input("customBlockResponseStatusCode")]
        public Input<int>? CustomBlockResponseStatusCode { get; set; }

        [Input("customRules")]
        private InputList<Inputs.FirewallPolicyCustomRulesGetArgs>? _customRules;

        /// <summary>
        /// One or more `custom_rule` blocks as defined below.
        /// </summary>
        public InputList<Inputs.FirewallPolicyCustomRulesGetArgs> CustomRules
        {
            get => _customRules ?? (_customRules = new InputList<Inputs.FirewallPolicyCustomRulesGetArgs>());
            set => _customRules = value;
        }

        /// <summary>
        /// Is the policy a enabled state or disabled state. Defaults to `true`.
        /// </summary>
        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        [Input("frontendEndpointIds")]
        private InputList<string>? _frontendEndpointIds;

        /// <summary>
        /// the Frontend Endpoints associated with this Front Door Web Application Firewall policy.
        /// </summary>
        public InputList<string> FrontendEndpointIds
        {
            get => _frontendEndpointIds ?? (_frontendEndpointIds = new InputList<string>());
            set => _frontendEndpointIds = value;
        }

        /// <summary>
        /// Resource location.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        [Input("managedRules")]
        private InputList<Inputs.FirewallPolicyManagedRulesGetArgs>? _managedRules;

        /// <summary>
        /// One or more `managed_rule` blocks as defined below.
        /// </summary>
        public InputList<Inputs.FirewallPolicyManagedRulesGetArgs> ManagedRules
        {
            get => _managedRules ?? (_managedRules = new InputList<Inputs.FirewallPolicyManagedRulesGetArgs>());
            set => _managedRules = value;
        }

        /// <summary>
        /// The firewall policy mode. Possible values are `Detection`, `Prevention` and defaults to `Prevention`.
        /// </summary>
        [Input("mode")]
        public Input<string>? Mode { get; set; }

        /// <summary>
        /// The name of the policy. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// If action type is redirect, this field represents redirect URL for the client.
        /// </summary>
        [Input("redirectUrl")]
        public Input<string>? RedirectUrl { get; set; }

        /// <summary>
        /// The name of the resource group. Changing this forces a new resource to be created.
        /// </summary>
        [Input("resourceGroupName")]
        public Input<string>? ResourceGroupName { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// A mapping of tags to assign to the Web Application Firewall Policy.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public FirewallPolicyState()
        {
        }
    }

    namespace Inputs
    {

    public sealed class FirewallPolicyCustomRulesArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The action to perform when the rule is matched. Possible values are `Allow`, `Block`, `Log`, or `Redirect`.
        /// </summary>
        [Input("action", required: true)]
        public Input<string> Action { get; set; } = null!;

        /// <summary>
        /// Is the rule is enabled or disabled? Defaults to `true`.
        /// </summary>
        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        [Input("matchConditions")]
        private InputList<FirewallPolicyCustomRulesMatchConditionsArgs>? _matchConditions;

        /// <summary>
        /// One or more `match_condition` block defined below.
        /// </summary>
        public InputList<FirewallPolicyCustomRulesMatchConditionsArgs> MatchConditions
        {
            get => _matchConditions ?? (_matchConditions = new InputList<FirewallPolicyCustomRulesMatchConditionsArgs>());
            set => _matchConditions = value;
        }

        /// <summary>
        /// Gets name of the resource that is unique within a policy. This name can be used to access the resource.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// The priority of the rule. Rules with a lower value will be evaluated before rules with a higher value. Defaults to `1`.
        /// </summary>
        [Input("priority")]
        public Input<int>? Priority { get; set; }

        /// <summary>
        /// The rate limit duration in minutes. Defaults to `1`.
        /// </summary>
        [Input("rateLimitDurationInMinutes")]
        public Input<int>? RateLimitDurationInMinutes { get; set; }

        /// <summary>
        /// The rate limit threshold. Defaults to `10`.
        /// </summary>
        [Input("rateLimitThreshold")]
        public Input<int>? RateLimitThreshold { get; set; }

        /// <summary>
        /// The type of rule. Possible values are `MatchRule` or `RateLimitRule`.
        /// </summary>
        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        public FirewallPolicyCustomRulesArgs()
        {
        }
    }

    public sealed class FirewallPolicyCustomRulesGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The action to perform when the rule is matched. Possible values are `Allow`, `Block`, `Log`, or `Redirect`.
        /// </summary>
        [Input("action", required: true)]
        public Input<string> Action { get; set; } = null!;

        /// <summary>
        /// Is the rule is enabled or disabled? Defaults to `true`.
        /// </summary>
        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        [Input("matchConditions")]
        private InputList<FirewallPolicyCustomRulesMatchConditionsGetArgs>? _matchConditions;

        /// <summary>
        /// One or more `match_condition` block defined below.
        /// </summary>
        public InputList<FirewallPolicyCustomRulesMatchConditionsGetArgs> MatchConditions
        {
            get => _matchConditions ?? (_matchConditions = new InputList<FirewallPolicyCustomRulesMatchConditionsGetArgs>());
            set => _matchConditions = value;
        }

        /// <summary>
        /// Gets name of the resource that is unique within a policy. This name can be used to access the resource.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// The priority of the rule. Rules with a lower value will be evaluated before rules with a higher value. Defaults to `1`.
        /// </summary>
        [Input("priority")]
        public Input<int>? Priority { get; set; }

        /// <summary>
        /// The rate limit duration in minutes. Defaults to `1`.
        /// </summary>
        [Input("rateLimitDurationInMinutes")]
        public Input<int>? RateLimitDurationInMinutes { get; set; }

        /// <summary>
        /// The rate limit threshold. Defaults to `10`.
        /// </summary>
        [Input("rateLimitThreshold")]
        public Input<int>? RateLimitThreshold { get; set; }

        /// <summary>
        /// The type of rule. Possible values are `MatchRule` or `RateLimitRule`.
        /// </summary>
        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        public FirewallPolicyCustomRulesGetArgs()
        {
        }
    }

    public sealed class FirewallPolicyCustomRulesMatchConditionsArgs : Pulumi.ResourceArgs
    {
        [Input("matchValues", required: true)]
        private InputList<string>? _matchValues;

        /// <summary>
        /// Up to `100` possible values to match.
        /// </summary>
        public InputList<string> MatchValues
        {
            get => _matchValues ?? (_matchValues = new InputList<string>());
            set => _matchValues = value;
        }

        /// <summary>
        /// The request variable to compare with. Possible values are `Cookies`, `PostArgs`, `QueryString`, `RemoteAddr`, `RequestBody`, `RequestHeader`, `RequestMethod`, or `RequestUri`.
        /// </summary>
        [Input("matchVariable", required: true)]
        public Input<string> MatchVariable { get; set; } = null!;

        /// <summary>
        /// Should the result of the condition be negated.
        /// </summary>
        [Input("negationCondition")]
        public Input<bool>? NegationCondition { get; set; }

        /// <summary>
        /// Comparison type to use for matching with the variable value. Possible values are `Any`, `BeginsWith`, `Contains`, `EndsWith`, `Equal`, `GeoMatch`, `GreaterThan`, `GreaterThanOrEqual`, `IPMatch`, `LessThan`, `LessThanOrEqual` or `RegEx`.
        /// </summary>
        [Input("operator", required: true)]
        public Input<string> Operator { get; set; } = null!;

        /// <summary>
        /// Match against a specific key if the `match_variable` is `QueryString`, `PostArgs`, `RequestHeader` or `Cookies`.
        /// </summary>
        [Input("selector")]
        public Input<string>? Selector { get; set; }

        [Input("transforms")]
        private InputList<string>? _transforms;

        /// <summary>
        /// Up to `5` transforms to apply. Possible values are `Lowercase`, `RemoveNulls`, `Trim`, `Uppercase`, `URLDecode` or`URLEncode`.
        /// </summary>
        public InputList<string> Transforms
        {
            get => _transforms ?? (_transforms = new InputList<string>());
            set => _transforms = value;
        }

        public FirewallPolicyCustomRulesMatchConditionsArgs()
        {
        }
    }

    public sealed class FirewallPolicyCustomRulesMatchConditionsGetArgs : Pulumi.ResourceArgs
    {
        [Input("matchValues", required: true)]
        private InputList<string>? _matchValues;

        /// <summary>
        /// Up to `100` possible values to match.
        /// </summary>
        public InputList<string> MatchValues
        {
            get => _matchValues ?? (_matchValues = new InputList<string>());
            set => _matchValues = value;
        }

        /// <summary>
        /// The request variable to compare with. Possible values are `Cookies`, `PostArgs`, `QueryString`, `RemoteAddr`, `RequestBody`, `RequestHeader`, `RequestMethod`, or `RequestUri`.
        /// </summary>
        [Input("matchVariable", required: true)]
        public Input<string> MatchVariable { get; set; } = null!;

        /// <summary>
        /// Should the result of the condition be negated.
        /// </summary>
        [Input("negationCondition")]
        public Input<bool>? NegationCondition { get; set; }

        /// <summary>
        /// Comparison type to use for matching with the variable value. Possible values are `Any`, `BeginsWith`, `Contains`, `EndsWith`, `Equal`, `GeoMatch`, `GreaterThan`, `GreaterThanOrEqual`, `IPMatch`, `LessThan`, `LessThanOrEqual` or `RegEx`.
        /// </summary>
        [Input("operator", required: true)]
        public Input<string> Operator { get; set; } = null!;

        /// <summary>
        /// Match against a specific key if the `match_variable` is `QueryString`, `PostArgs`, `RequestHeader` or `Cookies`.
        /// </summary>
        [Input("selector")]
        public Input<string>? Selector { get; set; }

        [Input("transforms")]
        private InputList<string>? _transforms;

        /// <summary>
        /// Up to `5` transforms to apply. Possible values are `Lowercase`, `RemoveNulls`, `Trim`, `Uppercase`, `URLDecode` or`URLEncode`.
        /// </summary>
        public InputList<string> Transforms
        {
            get => _transforms ?? (_transforms = new InputList<string>());
            set => _transforms = value;
        }

        public FirewallPolicyCustomRulesMatchConditionsGetArgs()
        {
        }
    }

    public sealed class FirewallPolicyManagedRulesArgs : Pulumi.ResourceArgs
    {
        [Input("exclusions")]
        private InputList<FirewallPolicyManagedRulesExclusionsArgs>? _exclusions;

        /// <summary>
        /// One or more `exclusion` blocks as defined below.
        /// </summary>
        public InputList<FirewallPolicyManagedRulesExclusionsArgs> Exclusions
        {
            get => _exclusions ?? (_exclusions = new InputList<FirewallPolicyManagedRulesExclusionsArgs>());
            set => _exclusions = value;
        }

        [Input("overrides")]
        private InputList<FirewallPolicyManagedRulesOverridesArgs>? _overrides;

        /// <summary>
        /// One or more `override` blocks as defined below.
        /// </summary>
        public InputList<FirewallPolicyManagedRulesOverridesArgs> Overrides
        {
            get => _overrides ?? (_overrides = new InputList<FirewallPolicyManagedRulesOverridesArgs>());
            set => _overrides = value;
        }

        /// <summary>
        /// The name of the managed rule to use with this resource.
        /// </summary>
        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        /// <summary>
        /// The version on the managed rule to use with this resource.
        /// </summary>
        [Input("version", required: true)]
        public Input<string> Version { get; set; } = null!;

        public FirewallPolicyManagedRulesArgs()
        {
        }
    }

    public sealed class FirewallPolicyManagedRulesExclusionsArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The variable type to be excluded. Possible values are `QueryStringArgNames`, `RequestBodyPostArgNames`, `RequestCookieNames`, `RequestHeaderNames`.
        /// </summary>
        [Input("matchVariable", required: true)]
        public Input<string> MatchVariable { get; set; } = null!;

        /// <summary>
        /// Comparison operator to apply to the selector when specifying which elements in the collection this exclusion applies to. Possible values are: `Equals`, `Contains`, `StartsWith`, `EndsWith`, `EqualsAny`.
        /// </summary>
        [Input("operator", required: true)]
        public Input<string> Operator { get; set; } = null!;

        /// <summary>
        /// Selector for the value in the `match_variable` attribute this exclusion applies to.
        /// </summary>
        [Input("selector", required: true)]
        public Input<string> Selector { get; set; } = null!;

        public FirewallPolicyManagedRulesExclusionsArgs()
        {
        }
    }

    public sealed class FirewallPolicyManagedRulesExclusionsGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The variable type to be excluded. Possible values are `QueryStringArgNames`, `RequestBodyPostArgNames`, `RequestCookieNames`, `RequestHeaderNames`.
        /// </summary>
        [Input("matchVariable", required: true)]
        public Input<string> MatchVariable { get; set; } = null!;

        /// <summary>
        /// Comparison operator to apply to the selector when specifying which elements in the collection this exclusion applies to. Possible values are: `Equals`, `Contains`, `StartsWith`, `EndsWith`, `EqualsAny`.
        /// </summary>
        [Input("operator", required: true)]
        public Input<string> Operator { get; set; } = null!;

        /// <summary>
        /// Selector for the value in the `match_variable` attribute this exclusion applies to.
        /// </summary>
        [Input("selector", required: true)]
        public Input<string> Selector { get; set; } = null!;

        public FirewallPolicyManagedRulesExclusionsGetArgs()
        {
        }
    }

    public sealed class FirewallPolicyManagedRulesGetArgs : Pulumi.ResourceArgs
    {
        [Input("exclusions")]
        private InputList<FirewallPolicyManagedRulesExclusionsGetArgs>? _exclusions;

        /// <summary>
        /// One or more `exclusion` blocks as defined below.
        /// </summary>
        public InputList<FirewallPolicyManagedRulesExclusionsGetArgs> Exclusions
        {
            get => _exclusions ?? (_exclusions = new InputList<FirewallPolicyManagedRulesExclusionsGetArgs>());
            set => _exclusions = value;
        }

        [Input("overrides")]
        private InputList<FirewallPolicyManagedRulesOverridesGetArgs>? _overrides;

        /// <summary>
        /// One or more `override` blocks as defined below.
        /// </summary>
        public InputList<FirewallPolicyManagedRulesOverridesGetArgs> Overrides
        {
            get => _overrides ?? (_overrides = new InputList<FirewallPolicyManagedRulesOverridesGetArgs>());
            set => _overrides = value;
        }

        /// <summary>
        /// The name of the managed rule to use with this resource.
        /// </summary>
        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        /// <summary>
        /// The version on the managed rule to use with this resource.
        /// </summary>
        [Input("version", required: true)]
        public Input<string> Version { get; set; } = null!;

        public FirewallPolicyManagedRulesGetArgs()
        {
        }
    }

    public sealed class FirewallPolicyManagedRulesOverridesArgs : Pulumi.ResourceArgs
    {
        [Input("exclusions")]
        private InputList<FirewallPolicyManagedRulesOverridesExclusionsArgs>? _exclusions;

        /// <summary>
        /// One or more `exclusion` blocks as defined below.
        /// </summary>
        public InputList<FirewallPolicyManagedRulesOverridesExclusionsArgs> Exclusions
        {
            get => _exclusions ?? (_exclusions = new InputList<FirewallPolicyManagedRulesOverridesExclusionsArgs>());
            set => _exclusions = value;
        }

        [Input("rules")]
        private InputList<FirewallPolicyManagedRulesOverridesRulesArgs>? _rules;

        /// <summary>
        /// One or more `rule` blocks as defined below. If none are specified, all of the rules in the group will be disabled.
        /// </summary>
        public InputList<FirewallPolicyManagedRulesOverridesRulesArgs> Rules
        {
            get => _rules ?? (_rules = new InputList<FirewallPolicyManagedRulesOverridesRulesArgs>());
            set => _rules = value;
        }

        /// <summary>
        /// The managed rule group to override.
        /// </summary>
        [Input("ruleGroupName", required: true)]
        public Input<string> RuleGroupName { get; set; } = null!;

        public FirewallPolicyManagedRulesOverridesArgs()
        {
        }
    }

    public sealed class FirewallPolicyManagedRulesOverridesExclusionsArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The variable type to be excluded. Possible values are `QueryStringArgNames`, `RequestBodyPostArgNames`, `RequestCookieNames`, `RequestHeaderNames`.
        /// </summary>
        [Input("matchVariable", required: true)]
        public Input<string> MatchVariable { get; set; } = null!;

        /// <summary>
        /// Comparison operator to apply to the selector when specifying which elements in the collection this exclusion applies to. Possible values are: `Equals`, `Contains`, `StartsWith`, `EndsWith`, `EqualsAny`.
        /// </summary>
        [Input("operator", required: true)]
        public Input<string> Operator { get; set; } = null!;

        /// <summary>
        /// Selector for the value in the `match_variable` attribute this exclusion applies to.
        /// </summary>
        [Input("selector", required: true)]
        public Input<string> Selector { get; set; } = null!;

        public FirewallPolicyManagedRulesOverridesExclusionsArgs()
        {
        }
    }

    public sealed class FirewallPolicyManagedRulesOverridesExclusionsGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The variable type to be excluded. Possible values are `QueryStringArgNames`, `RequestBodyPostArgNames`, `RequestCookieNames`, `RequestHeaderNames`.
        /// </summary>
        [Input("matchVariable", required: true)]
        public Input<string> MatchVariable { get; set; } = null!;

        /// <summary>
        /// Comparison operator to apply to the selector when specifying which elements in the collection this exclusion applies to. Possible values are: `Equals`, `Contains`, `StartsWith`, `EndsWith`, `EqualsAny`.
        /// </summary>
        [Input("operator", required: true)]
        public Input<string> Operator { get; set; } = null!;

        /// <summary>
        /// Selector for the value in the `match_variable` attribute this exclusion applies to.
        /// </summary>
        [Input("selector", required: true)]
        public Input<string> Selector { get; set; } = null!;

        public FirewallPolicyManagedRulesOverridesExclusionsGetArgs()
        {
        }
    }

    public sealed class FirewallPolicyManagedRulesOverridesGetArgs : Pulumi.ResourceArgs
    {
        [Input("exclusions")]
        private InputList<FirewallPolicyManagedRulesOverridesExclusionsGetArgs>? _exclusions;

        /// <summary>
        /// One or more `exclusion` blocks as defined below.
        /// </summary>
        public InputList<FirewallPolicyManagedRulesOverridesExclusionsGetArgs> Exclusions
        {
            get => _exclusions ?? (_exclusions = new InputList<FirewallPolicyManagedRulesOverridesExclusionsGetArgs>());
            set => _exclusions = value;
        }

        [Input("rules")]
        private InputList<FirewallPolicyManagedRulesOverridesRulesGetArgs>? _rules;

        /// <summary>
        /// One or more `rule` blocks as defined below. If none are specified, all of the rules in the group will be disabled.
        /// </summary>
        public InputList<FirewallPolicyManagedRulesOverridesRulesGetArgs> Rules
        {
            get => _rules ?? (_rules = new InputList<FirewallPolicyManagedRulesOverridesRulesGetArgs>());
            set => _rules = value;
        }

        /// <summary>
        /// The managed rule group to override.
        /// </summary>
        [Input("ruleGroupName", required: true)]
        public Input<string> RuleGroupName { get; set; } = null!;

        public FirewallPolicyManagedRulesOverridesGetArgs()
        {
        }
    }

    public sealed class FirewallPolicyManagedRulesOverridesRulesArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The action to be applied when the rule matches. Possible values are `Allow`, `Block`, `Log`, or `Redirect`.
        /// </summary>
        [Input("action", required: true)]
        public Input<string> Action { get; set; } = null!;

        /// <summary>
        /// Is the managed rule override enabled or disabled. Defaults to `false`
        /// </summary>
        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        [Input("exclusions")]
        private InputList<FirewallPolicyManagedRulesOverridesRulesExclusionsArgs>? _exclusions;

        /// <summary>
        /// One or more `exclusion` blocks as defined below.
        /// </summary>
        public InputList<FirewallPolicyManagedRulesOverridesRulesExclusionsArgs> Exclusions
        {
            get => _exclusions ?? (_exclusions = new InputList<FirewallPolicyManagedRulesOverridesRulesExclusionsArgs>());
            set => _exclusions = value;
        }

        /// <summary>
        /// Identifier for the managed rule.
        /// </summary>
        [Input("ruleId", required: true)]
        public Input<string> RuleId { get; set; } = null!;

        public FirewallPolicyManagedRulesOverridesRulesArgs()
        {
        }
    }

    public sealed class FirewallPolicyManagedRulesOverridesRulesExclusionsArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The variable type to be excluded. Possible values are `QueryStringArgNames`, `RequestBodyPostArgNames`, `RequestCookieNames`, `RequestHeaderNames`.
        /// </summary>
        [Input("matchVariable", required: true)]
        public Input<string> MatchVariable { get; set; } = null!;

        /// <summary>
        /// Comparison operator to apply to the selector when specifying which elements in the collection this exclusion applies to. Possible values are: `Equals`, `Contains`, `StartsWith`, `EndsWith`, `EqualsAny`.
        /// </summary>
        [Input("operator", required: true)]
        public Input<string> Operator { get; set; } = null!;

        /// <summary>
        /// Selector for the value in the `match_variable` attribute this exclusion applies to.
        /// </summary>
        [Input("selector", required: true)]
        public Input<string> Selector { get; set; } = null!;

        public FirewallPolicyManagedRulesOverridesRulesExclusionsArgs()
        {
        }
    }

    public sealed class FirewallPolicyManagedRulesOverridesRulesExclusionsGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The variable type to be excluded. Possible values are `QueryStringArgNames`, `RequestBodyPostArgNames`, `RequestCookieNames`, `RequestHeaderNames`.
        /// </summary>
        [Input("matchVariable", required: true)]
        public Input<string> MatchVariable { get; set; } = null!;

        /// <summary>
        /// Comparison operator to apply to the selector when specifying which elements in the collection this exclusion applies to. Possible values are: `Equals`, `Contains`, `StartsWith`, `EndsWith`, `EqualsAny`.
        /// </summary>
        [Input("operator", required: true)]
        public Input<string> Operator { get; set; } = null!;

        /// <summary>
        /// Selector for the value in the `match_variable` attribute this exclusion applies to.
        /// </summary>
        [Input("selector", required: true)]
        public Input<string> Selector { get; set; } = null!;

        public FirewallPolicyManagedRulesOverridesRulesExclusionsGetArgs()
        {
        }
    }

    public sealed class FirewallPolicyManagedRulesOverridesRulesGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The action to be applied when the rule matches. Possible values are `Allow`, `Block`, `Log`, or `Redirect`.
        /// </summary>
        [Input("action", required: true)]
        public Input<string> Action { get; set; } = null!;

        /// <summary>
        /// Is the managed rule override enabled or disabled. Defaults to `false`
        /// </summary>
        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        [Input("exclusions")]
        private InputList<FirewallPolicyManagedRulesOverridesRulesExclusionsGetArgs>? _exclusions;

        /// <summary>
        /// One or more `exclusion` blocks as defined below.
        /// </summary>
        public InputList<FirewallPolicyManagedRulesOverridesRulesExclusionsGetArgs> Exclusions
        {
            get => _exclusions ?? (_exclusions = new InputList<FirewallPolicyManagedRulesOverridesRulesExclusionsGetArgs>());
            set => _exclusions = value;
        }

        /// <summary>
        /// Identifier for the managed rule.
        /// </summary>
        [Input("ruleId", required: true)]
        public Input<string> RuleId { get; set; } = null!;

        public FirewallPolicyManagedRulesOverridesRulesGetArgs()
        {
        }
    }
    }

    namespace Outputs
    {

    [OutputType]
    public sealed class FirewallPolicyCustomRules
    {
        /// <summary>
        /// The action to perform when the rule is matched. Possible values are `Allow`, `Block`, `Log`, or `Redirect`.
        /// </summary>
        public readonly string Action;
        /// <summary>
        /// Is the rule is enabled or disabled? Defaults to `true`.
        /// </summary>
        public readonly bool? Enabled;
        /// <summary>
        /// One or more `match_condition` block defined below.
        /// </summary>
        public readonly ImmutableArray<FirewallPolicyCustomRulesMatchConditions> MatchConditions;
        /// <summary>
        /// Gets name of the resource that is unique within a policy. This name can be used to access the resource.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The priority of the rule. Rules with a lower value will be evaluated before rules with a higher value. Defaults to `1`.
        /// </summary>
        public readonly int? Priority;
        /// <summary>
        /// The rate limit duration in minutes. Defaults to `1`.
        /// </summary>
        public readonly int? RateLimitDurationInMinutes;
        /// <summary>
        /// The rate limit threshold. Defaults to `10`.
        /// </summary>
        public readonly int? RateLimitThreshold;
        /// <summary>
        /// The type of rule. Possible values are `MatchRule` or `RateLimitRule`.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private FirewallPolicyCustomRules(
            string action,
            bool? enabled,
            ImmutableArray<FirewallPolicyCustomRulesMatchConditions> matchConditions,
            string name,
            int? priority,
            int? rateLimitDurationInMinutes,
            int? rateLimitThreshold,
            string type)
        {
            Action = action;
            Enabled = enabled;
            MatchConditions = matchConditions;
            Name = name;
            Priority = priority;
            RateLimitDurationInMinutes = rateLimitDurationInMinutes;
            RateLimitThreshold = rateLimitThreshold;
            Type = type;
        }
    }

    [OutputType]
    public sealed class FirewallPolicyCustomRulesMatchConditions
    {
        /// <summary>
        /// Up to `100` possible values to match.
        /// </summary>
        public readonly ImmutableArray<string> MatchValues;
        /// <summary>
        /// The request variable to compare with. Possible values are `Cookies`, `PostArgs`, `QueryString`, `RemoteAddr`, `RequestBody`, `RequestHeader`, `RequestMethod`, or `RequestUri`.
        /// </summary>
        public readonly string MatchVariable;
        /// <summary>
        /// Should the result of the condition be negated.
        /// </summary>
        public readonly bool? NegationCondition;
        /// <summary>
        /// Comparison type to use for matching with the variable value. Possible values are `Any`, `BeginsWith`, `Contains`, `EndsWith`, `Equal`, `GeoMatch`, `GreaterThan`, `GreaterThanOrEqual`, `IPMatch`, `LessThan`, `LessThanOrEqual` or `RegEx`.
        /// </summary>
        public readonly string Operator;
        /// <summary>
        /// Match against a specific key if the `match_variable` is `QueryString`, `PostArgs`, `RequestHeader` or `Cookies`.
        /// </summary>
        public readonly string? Selector;
        /// <summary>
        /// Up to `5` transforms to apply. Possible values are `Lowercase`, `RemoveNulls`, `Trim`, `Uppercase`, `URLDecode` or`URLEncode`.
        /// </summary>
        public readonly ImmutableArray<string> Transforms;

        [OutputConstructor]
        private FirewallPolicyCustomRulesMatchConditions(
            ImmutableArray<string> matchValues,
            string matchVariable,
            bool? negationCondition,
            string @operator,
            string? selector,
            ImmutableArray<string> transforms)
        {
            MatchValues = matchValues;
            MatchVariable = matchVariable;
            NegationCondition = negationCondition;
            Operator = @operator;
            Selector = selector;
            Transforms = transforms;
        }
    }

    [OutputType]
    public sealed class FirewallPolicyManagedRules
    {
        /// <summary>
        /// One or more `exclusion` blocks as defined below.
        /// </summary>
        public readonly ImmutableArray<FirewallPolicyManagedRulesExclusions> Exclusions;
        /// <summary>
        /// One or more `override` blocks as defined below.
        /// </summary>
        public readonly ImmutableArray<FirewallPolicyManagedRulesOverrides> Overrides;
        /// <summary>
        /// The name of the managed rule to use with this resource.
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// The version on the managed rule to use with this resource.
        /// </summary>
        public readonly string Version;

        [OutputConstructor]
        private FirewallPolicyManagedRules(
            ImmutableArray<FirewallPolicyManagedRulesExclusions> exclusions,
            ImmutableArray<FirewallPolicyManagedRulesOverrides> overrides,
            string type,
            string version)
        {
            Exclusions = exclusions;
            Overrides = overrides;
            Type = type;
            Version = version;
        }
    }

    [OutputType]
    public sealed class FirewallPolicyManagedRulesExclusions
    {
        /// <summary>
        /// The variable type to be excluded. Possible values are `QueryStringArgNames`, `RequestBodyPostArgNames`, `RequestCookieNames`, `RequestHeaderNames`.
        /// </summary>
        public readonly string MatchVariable;
        /// <summary>
        /// Comparison operator to apply to the selector when specifying which elements in the collection this exclusion applies to. Possible values are: `Equals`, `Contains`, `StartsWith`, `EndsWith`, `EqualsAny`.
        /// </summary>
        public readonly string Operator;
        /// <summary>
        /// Selector for the value in the `match_variable` attribute this exclusion applies to.
        /// </summary>
        public readonly string Selector;

        [OutputConstructor]
        private FirewallPolicyManagedRulesExclusions(
            string matchVariable,
            string @operator,
            string selector)
        {
            MatchVariable = matchVariable;
            Operator = @operator;
            Selector = selector;
        }
    }

    [OutputType]
    public sealed class FirewallPolicyManagedRulesOverrides
    {
        /// <summary>
        /// One or more `exclusion` blocks as defined below.
        /// </summary>
        public readonly ImmutableArray<FirewallPolicyManagedRulesOverridesExclusions> Exclusions;
        /// <summary>
        /// One or more `rule` blocks as defined below. If none are specified, all of the rules in the group will be disabled.
        /// </summary>
        public readonly ImmutableArray<FirewallPolicyManagedRulesOverridesRules> Rules;
        /// <summary>
        /// The managed rule group to override.
        /// </summary>
        public readonly string RuleGroupName;

        [OutputConstructor]
        private FirewallPolicyManagedRulesOverrides(
            ImmutableArray<FirewallPolicyManagedRulesOverridesExclusions> exclusions,
            ImmutableArray<FirewallPolicyManagedRulesOverridesRules> rules,
            string ruleGroupName)
        {
            Exclusions = exclusions;
            Rules = rules;
            RuleGroupName = ruleGroupName;
        }
    }

    [OutputType]
    public sealed class FirewallPolicyManagedRulesOverridesExclusions
    {
        /// <summary>
        /// The variable type to be excluded. Possible values are `QueryStringArgNames`, `RequestBodyPostArgNames`, `RequestCookieNames`, `RequestHeaderNames`.
        /// </summary>
        public readonly string MatchVariable;
        /// <summary>
        /// Comparison operator to apply to the selector when specifying which elements in the collection this exclusion applies to. Possible values are: `Equals`, `Contains`, `StartsWith`, `EndsWith`, `EqualsAny`.
        /// </summary>
        public readonly string Operator;
        /// <summary>
        /// Selector for the value in the `match_variable` attribute this exclusion applies to.
        /// </summary>
        public readonly string Selector;

        [OutputConstructor]
        private FirewallPolicyManagedRulesOverridesExclusions(
            string matchVariable,
            string @operator,
            string selector)
        {
            MatchVariable = matchVariable;
            Operator = @operator;
            Selector = selector;
        }
    }

    [OutputType]
    public sealed class FirewallPolicyManagedRulesOverridesRules
    {
        /// <summary>
        /// The action to be applied when the rule matches. Possible values are `Allow`, `Block`, `Log`, or `Redirect`.
        /// </summary>
        public readonly string Action;
        /// <summary>
        /// Is the managed rule override enabled or disabled. Defaults to `false`
        /// </summary>
        public readonly bool? Enabled;
        /// <summary>
        /// One or more `exclusion` blocks as defined below.
        /// </summary>
        public readonly ImmutableArray<FirewallPolicyManagedRulesOverridesRulesExclusions> Exclusions;
        /// <summary>
        /// Identifier for the managed rule.
        /// </summary>
        public readonly string RuleId;

        [OutputConstructor]
        private FirewallPolicyManagedRulesOverridesRules(
            string action,
            bool? enabled,
            ImmutableArray<FirewallPolicyManagedRulesOverridesRulesExclusions> exclusions,
            string ruleId)
        {
            Action = action;
            Enabled = enabled;
            Exclusions = exclusions;
            RuleId = ruleId;
        }
    }

    [OutputType]
    public sealed class FirewallPolicyManagedRulesOverridesRulesExclusions
    {
        /// <summary>
        /// The variable type to be excluded. Possible values are `QueryStringArgNames`, `RequestBodyPostArgNames`, `RequestCookieNames`, `RequestHeaderNames`.
        /// </summary>
        public readonly string MatchVariable;
        /// <summary>
        /// Comparison operator to apply to the selector when specifying which elements in the collection this exclusion applies to. Possible values are: `Equals`, `Contains`, `StartsWith`, `EndsWith`, `EqualsAny`.
        /// </summary>
        public readonly string Operator;
        /// <summary>
        /// Selector for the value in the `match_variable` attribute this exclusion applies to.
        /// </summary>
        public readonly string Selector;

        [OutputConstructor]
        private FirewallPolicyManagedRulesOverridesRulesExclusions(
            string matchVariable,
            string @operator,
            string selector)
        {
            MatchVariable = matchVariable;
            Operator = @operator;
            Selector = selector;
        }
    }
    }
}
