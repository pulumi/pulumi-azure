// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Keyvault
{
    public static partial class Invokes
    {
        /// <summary>
        /// Use this data source to access information about an existing Key Vault Key.
        /// 
        /// &gt; **Note:** All arguments including the secret value will be stored in the raw state as plain-text.
        /// [Read more about sensitive data in state](https://www.terraform.io/docs/state/sensitive-data.html).
        /// 
        /// &gt; This content is derived from https://github.com/terraform-providers/terraform-provider-azurerm/blob/master/website/docs/d/key_vault_key.html.markdown.
        /// </summary>
        public static Task<GetKeyResult> GetKey(GetKeyArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetKeyResult>("azure:keyvault/getKey:getKey", args, options.WithVersion());
    }

    public sealed class GetKeyArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies the ID of the Key Vault instance where the Secret resides, available on the `azure.keyvault.KeyVault` Data Source / Resource. 
        /// </summary>
        [Input("keyVaultId")]
        public Input<string>? KeyVaultId { get; set; }

        /// <summary>
        /// Specifies the name of the Key Vault Key.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        [Input("vaultUri")]
        public Input<string>? VaultUri { get; set; }

        public GetKeyArgs()
        {
        }
    }

    [OutputType]
    public sealed class GetKeyResult
    {
        /// <summary>
        /// The RSA public exponent of this Key Vault Key.
        /// </summary>
        public readonly string E;
        /// <summary>
        /// A list of JSON web key operations assigned to this Key Vault Key
        /// </summary>
        public readonly ImmutableArray<string> KeyOpts;
        /// <summary>
        /// Specifies the Size of this Key Vault Key.
        /// </summary>
        public readonly int KeySize;
        /// <summary>
        /// Specifies the Key Type of this Key Vault Key
        /// </summary>
        public readonly string KeyType;
        public readonly string KeyVaultId;
        /// <summary>
        /// The RSA modulus of this Key Vault Key.
        /// </summary>
        public readonly string N;
        public readonly string Name;
        /// <summary>
        /// A mapping of tags assigned to this Key Vault Key.
        /// </summary>
        public readonly ImmutableDictionary<string, string> Tags;
        public readonly string VaultUri;
        /// <summary>
        /// The current version of the Key Vault Key.
        /// </summary>
        public readonly string Version;
        /// <summary>
        /// id is the provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;

        [OutputConstructor]
        private GetKeyResult(
            string e,
            ImmutableArray<string> keyOpts,
            int keySize,
            string keyType,
            string keyVaultId,
            string n,
            string name,
            ImmutableDictionary<string, string> tags,
            string vaultUri,
            string version,
            string id)
        {
            E = e;
            KeyOpts = keyOpts;
            KeySize = keySize;
            KeyType = keyType;
            KeyVaultId = keyVaultId;
            N = n;
            Name = name;
            Tags = tags;
            VaultUri = vaultUri;
            Version = version;
            Id = id;
        }
    }
}
