// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.DevCenter
{
    public static class GetAttachedNetwork
    {
        /// <summary>
        /// Use this data source to access information about an existing Dev Center Attached Network.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Azure = Pulumi.Azure;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Azure.DevCenter.GetAttachedNetwork.Invoke(new()
        ///     {
        ///         Name = exampleAzurermDevCenterAttachedNetwork.Name,
        ///         DevCenterId = exampleAzurermDevCenterAttachedNetwork.DevCenterId,
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["id"] = example.Apply(getAttachedNetworkResult =&gt; getAttachedNetworkResult.Id),
        ///     };
        /// });
        /// ```
        /// 
        /// ## API Providers
        /// 
        /// &lt;!-- This section is generated, changes will be overwritten --&gt;
        /// This data source uses the following Azure API Providers:
        /// 
        /// * `Microsoft.DevCenter`: 2025-02-01
        /// </summary>
        public static Task<GetAttachedNetworkResult> InvokeAsync(GetAttachedNetworkArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetAttachedNetworkResult>("azure:devcenter/getAttachedNetwork:getAttachedNetwork", args ?? new GetAttachedNetworkArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to access information about an existing Dev Center Attached Network.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Azure = Pulumi.Azure;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Azure.DevCenter.GetAttachedNetwork.Invoke(new()
        ///     {
        ///         Name = exampleAzurermDevCenterAttachedNetwork.Name,
        ///         DevCenterId = exampleAzurermDevCenterAttachedNetwork.DevCenterId,
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["id"] = example.Apply(getAttachedNetworkResult =&gt; getAttachedNetworkResult.Id),
        ///     };
        /// });
        /// ```
        /// 
        /// ## API Providers
        /// 
        /// &lt;!-- This section is generated, changes will be overwritten --&gt;
        /// This data source uses the following Azure API Providers:
        /// 
        /// * `Microsoft.DevCenter`: 2025-02-01
        /// </summary>
        public static Output<GetAttachedNetworkResult> Invoke(GetAttachedNetworkInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetAttachedNetworkResult>("azure:devcenter/getAttachedNetwork:getAttachedNetwork", args ?? new GetAttachedNetworkInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to access information about an existing Dev Center Attached Network.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Azure = Pulumi.Azure;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Azure.DevCenter.GetAttachedNetwork.Invoke(new()
        ///     {
        ///         Name = exampleAzurermDevCenterAttachedNetwork.Name,
        ///         DevCenterId = exampleAzurermDevCenterAttachedNetwork.DevCenterId,
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["id"] = example.Apply(getAttachedNetworkResult =&gt; getAttachedNetworkResult.Id),
        ///     };
        /// });
        /// ```
        /// 
        /// ## API Providers
        /// 
        /// &lt;!-- This section is generated, changes will be overwritten --&gt;
        /// This data source uses the following Azure API Providers:
        /// 
        /// * `Microsoft.DevCenter`: 2025-02-01
        /// </summary>
        public static Output<GetAttachedNetworkResult> Invoke(GetAttachedNetworkInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetAttachedNetworkResult>("azure:devcenter/getAttachedNetwork:getAttachedNetwork", args ?? new GetAttachedNetworkInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetAttachedNetworkArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the associated Dev Center.
        /// </summary>
        [Input("devCenterId", required: true)]
        public string DevCenterId { get; set; } = null!;

        /// <summary>
        /// The name of this Dev Center Attached Network.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        public GetAttachedNetworkArgs()
        {
        }
        public static new GetAttachedNetworkArgs Empty => new GetAttachedNetworkArgs();
    }

    public sealed class GetAttachedNetworkInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the associated Dev Center.
        /// </summary>
        [Input("devCenterId", required: true)]
        public Input<string> DevCenterId { get; set; } = null!;

        /// <summary>
        /// The name of this Dev Center Attached Network.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        public GetAttachedNetworkInvokeArgs()
        {
        }
        public static new GetAttachedNetworkInvokeArgs Empty => new GetAttachedNetworkInvokeArgs();
    }


    [OutputType]
    public sealed class GetAttachedNetworkResult
    {
        public readonly string DevCenterId;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string Name;
        /// <summary>
        /// The ID of the attached Dev Center Network Connection.
        /// </summary>
        public readonly string NetworkConnectionId;

        [OutputConstructor]
        private GetAttachedNetworkResult(
            string devCenterId,

            string id,

            string name,

            string networkConnectionId)
        {
            DevCenterId = devCenterId;
            Id = id;
            Name = name;
            NetworkConnectionId = networkConnectionId;
        }
    }
}
