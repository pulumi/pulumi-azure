// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.EventGrid.Outputs
{

    [OutputType]
    public sealed class NamespaceTopicSpacesConfiguration
    {
        /// <summary>
        /// Specifies a list of alternative sources for the client authentication name from the client certificate. Possible values are `ClientCertificateDns`, `ClientCertificateEmail`, `ClientCertificateIp`, `ClientCertificateSubject` and `ClientCertificateUri`.
        /// </summary>
        public readonly ImmutableArray<string> AlternativeAuthenticationNameSources;
        /// <summary>
        /// One or more `DynamicRoutingEnrichment` blocks as defined below.
        /// </summary>
        public readonly ImmutableArray<Outputs.NamespaceTopicSpacesConfigurationDynamicRoutingEnrichment> DynamicRoutingEnrichments;
        /// <summary>
        /// Specifies the maximum number of client sessions per authentication name. Valid values can be between `1` and `100`.
        /// </summary>
        public readonly int? MaximumClientSessionsPerAuthenticationName;
        /// <summary>
        /// Specifies the maximum session expiry interval allowed for all MQTT clients connecting to the Event Grid namespace. Valid values can be between `1` and `8`.
        /// </summary>
        public readonly int? MaximumSessionExpiryInHours;
        /// <summary>
        /// Specifies the Event Grid topic resource ID to route messages to.
        /// </summary>
        public readonly string? RouteTopicId;
        /// <summary>
        /// One or more `StaticRoutingEnrichment` blocks as defined below.
        /// </summary>
        public readonly ImmutableArray<Outputs.NamespaceTopicSpacesConfigurationStaticRoutingEnrichment> StaticRoutingEnrichments;

        [OutputConstructor]
        private NamespaceTopicSpacesConfiguration(
            ImmutableArray<string> alternativeAuthenticationNameSources,

            ImmutableArray<Outputs.NamespaceTopicSpacesConfigurationDynamicRoutingEnrichment> dynamicRoutingEnrichments,

            int? maximumClientSessionsPerAuthenticationName,

            int? maximumSessionExpiryInHours,

            string? routeTopicId,

            ImmutableArray<Outputs.NamespaceTopicSpacesConfigurationStaticRoutingEnrichment> staticRoutingEnrichments)
        {
            AlternativeAuthenticationNameSources = alternativeAuthenticationNameSources;
            DynamicRoutingEnrichments = dynamicRoutingEnrichments;
            MaximumClientSessionsPerAuthenticationName = maximumClientSessionsPerAuthenticationName;
            MaximumSessionExpiryInHours = maximumSessionExpiryInHours;
            RouteTopicId = routeTopicId;
            StaticRoutingEnrichments = staticRoutingEnrichments;
        }
    }
}
