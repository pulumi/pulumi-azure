// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.EventGrid
{
    /// <summary>
    /// Manages an EventGrid Domain Topic
    /// </summary>
    public partial class DomainTopic : Pulumi.CustomResource
    {
        /// <summary>
        /// Specifies the name of the EventGrid Domain. Changing this forces a new resource to be created.
        /// </summary>
        [Output("domainName")]
        public Output<string> DomainName { get; private set; } = null!;

        /// <summary>
        /// Specifies the name of the EventGrid Domain Topic resource. Changing this forces a new resource to be created.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The name of the resource group in which the EventGrid Domain exists. Changing this forces a new resource to be created.
        /// </summary>
        [Output("resourceGroupName")]
        public Output<string> ResourceGroupName { get; private set; } = null!;


        /// <summary>
        /// Create a DomainTopic resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public DomainTopic(string name, DomainTopicArgs args, CustomResourceOptions? options = null)
            : base("azure:eventgrid/domainTopic:DomainTopic", name, args ?? new DomainTopicArgs(), MakeResourceOptions(options, ""))
        {
        }

        private DomainTopic(string name, Input<string> id, DomainTopicState? state = null, CustomResourceOptions? options = null)
            : base("azure:eventgrid/domainTopic:DomainTopic", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing DomainTopic resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static DomainTopic Get(string name, Input<string> id, DomainTopicState? state = null, CustomResourceOptions? options = null)
        {
            return new DomainTopic(name, id, state, options);
        }
    }

    public sealed class DomainTopicArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies the name of the EventGrid Domain. Changing this forces a new resource to be created.
        /// </summary>
        [Input("domainName", required: true)]
        public Input<string> DomainName { get; set; } = null!;

        /// <summary>
        /// Specifies the name of the EventGrid Domain Topic resource. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The name of the resource group in which the EventGrid Domain exists. Changing this forces a new resource to be created.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public DomainTopicArgs()
        {
        }
    }

    public sealed class DomainTopicState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies the name of the EventGrid Domain. Changing this forces a new resource to be created.
        /// </summary>
        [Input("domainName")]
        public Input<string>? DomainName { get; set; }

        /// <summary>
        /// Specifies the name of the EventGrid Domain Topic resource. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The name of the resource group in which the EventGrid Domain exists. Changing this forces a new resource to be created.
        /// </summary>
        [Input("resourceGroupName")]
        public Input<string>? ResourceGroupName { get; set; }

        public DomainTopicState()
        {
        }
    }
}
