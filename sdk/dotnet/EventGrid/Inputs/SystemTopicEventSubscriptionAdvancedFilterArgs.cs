// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.EventGrid.Inputs
{

    public sealed class SystemTopicEventSubscriptionAdvancedFilterArgs : Pulumi.ResourceArgs
    {
        [Input("boolEquals")]
        private InputList<Inputs.SystemTopicEventSubscriptionAdvancedFilterBoolEqualArgs>? _boolEquals;

        /// <summary>
        /// Compares a value of an event using a single boolean value.
        /// </summary>
        public InputList<Inputs.SystemTopicEventSubscriptionAdvancedFilterBoolEqualArgs> BoolEquals
        {
            get => _boolEquals ?? (_boolEquals = new InputList<Inputs.SystemTopicEventSubscriptionAdvancedFilterBoolEqualArgs>());
            set => _boolEquals = value;
        }

        [Input("isNotNulls")]
        private InputList<Inputs.SystemTopicEventSubscriptionAdvancedFilterIsNotNullArgs>? _isNotNulls;

        /// <summary>
        /// Evaluates if a value of an event isn't NULL or undefined.
        /// </summary>
        public InputList<Inputs.SystemTopicEventSubscriptionAdvancedFilterIsNotNullArgs> IsNotNulls
        {
            get => _isNotNulls ?? (_isNotNulls = new InputList<Inputs.SystemTopicEventSubscriptionAdvancedFilterIsNotNullArgs>());
            set => _isNotNulls = value;
        }

        [Input("isNullOrUndefineds")]
        private InputList<Inputs.SystemTopicEventSubscriptionAdvancedFilterIsNullOrUndefinedArgs>? _isNullOrUndefineds;

        /// <summary>
        /// Evaluates if a value of an event is NULL or undefined.
        /// </summary>
        public InputList<Inputs.SystemTopicEventSubscriptionAdvancedFilterIsNullOrUndefinedArgs> IsNullOrUndefineds
        {
            get => _isNullOrUndefineds ?? (_isNullOrUndefineds = new InputList<Inputs.SystemTopicEventSubscriptionAdvancedFilterIsNullOrUndefinedArgs>());
            set => _isNullOrUndefineds = value;
        }

        [Input("numberGreaterThanOrEquals")]
        private InputList<Inputs.SystemTopicEventSubscriptionAdvancedFilterNumberGreaterThanOrEqualArgs>? _numberGreaterThanOrEquals;

        /// <summary>
        /// Compares a value of an event using a single floating point number.
        /// </summary>
        public InputList<Inputs.SystemTopicEventSubscriptionAdvancedFilterNumberGreaterThanOrEqualArgs> NumberGreaterThanOrEquals
        {
            get => _numberGreaterThanOrEquals ?? (_numberGreaterThanOrEquals = new InputList<Inputs.SystemTopicEventSubscriptionAdvancedFilterNumberGreaterThanOrEqualArgs>());
            set => _numberGreaterThanOrEquals = value;
        }

        [Input("numberGreaterThans")]
        private InputList<Inputs.SystemTopicEventSubscriptionAdvancedFilterNumberGreaterThanArgs>? _numberGreaterThans;

        /// <summary>
        /// Compares a value of an event using a single floating point number.
        /// </summary>
        public InputList<Inputs.SystemTopicEventSubscriptionAdvancedFilterNumberGreaterThanArgs> NumberGreaterThans
        {
            get => _numberGreaterThans ?? (_numberGreaterThans = new InputList<Inputs.SystemTopicEventSubscriptionAdvancedFilterNumberGreaterThanArgs>());
            set => _numberGreaterThans = value;
        }

        [Input("numberInRanges")]
        private InputList<Inputs.SystemTopicEventSubscriptionAdvancedFilterNumberInRangeArgs>? _numberInRanges;

        /// <summary>
        /// Compares a value of an event using multiple floating point number ranges.
        /// </summary>
        public InputList<Inputs.SystemTopicEventSubscriptionAdvancedFilterNumberInRangeArgs> NumberInRanges
        {
            get => _numberInRanges ?? (_numberInRanges = new InputList<Inputs.SystemTopicEventSubscriptionAdvancedFilterNumberInRangeArgs>());
            set => _numberInRanges = value;
        }

        [Input("numberIns")]
        private InputList<Inputs.SystemTopicEventSubscriptionAdvancedFilterNumberInArgs>? _numberIns;

        /// <summary>
        /// Compares a value of an event using multiple floating point numbers.
        /// </summary>
        public InputList<Inputs.SystemTopicEventSubscriptionAdvancedFilterNumberInArgs> NumberIns
        {
            get => _numberIns ?? (_numberIns = new InputList<Inputs.SystemTopicEventSubscriptionAdvancedFilterNumberInArgs>());
            set => _numberIns = value;
        }

        [Input("numberLessThanOrEquals")]
        private InputList<Inputs.SystemTopicEventSubscriptionAdvancedFilterNumberLessThanOrEqualArgs>? _numberLessThanOrEquals;

        /// <summary>
        /// Compares a value of an event using a single floating point number.
        /// </summary>
        public InputList<Inputs.SystemTopicEventSubscriptionAdvancedFilterNumberLessThanOrEqualArgs> NumberLessThanOrEquals
        {
            get => _numberLessThanOrEquals ?? (_numberLessThanOrEquals = new InputList<Inputs.SystemTopicEventSubscriptionAdvancedFilterNumberLessThanOrEqualArgs>());
            set => _numberLessThanOrEquals = value;
        }

        [Input("numberLessThans")]
        private InputList<Inputs.SystemTopicEventSubscriptionAdvancedFilterNumberLessThanArgs>? _numberLessThans;

        /// <summary>
        /// Compares a value of an event using a single floating point number.
        /// </summary>
        public InputList<Inputs.SystemTopicEventSubscriptionAdvancedFilterNumberLessThanArgs> NumberLessThans
        {
            get => _numberLessThans ?? (_numberLessThans = new InputList<Inputs.SystemTopicEventSubscriptionAdvancedFilterNumberLessThanArgs>());
            set => _numberLessThans = value;
        }

        [Input("numberNotInRanges")]
        private InputList<Inputs.SystemTopicEventSubscriptionAdvancedFilterNumberNotInRangeArgs>? _numberNotInRanges;

        /// <summary>
        /// Compares a value of an event using multiple floating point number ranges.
        /// </summary>
        public InputList<Inputs.SystemTopicEventSubscriptionAdvancedFilterNumberNotInRangeArgs> NumberNotInRanges
        {
            get => _numberNotInRanges ?? (_numberNotInRanges = new InputList<Inputs.SystemTopicEventSubscriptionAdvancedFilterNumberNotInRangeArgs>());
            set => _numberNotInRanges = value;
        }

        [Input("numberNotIns")]
        private InputList<Inputs.SystemTopicEventSubscriptionAdvancedFilterNumberNotInArgs>? _numberNotIns;

        /// <summary>
        /// Compares a value of an event using multiple floating point numbers.
        /// </summary>
        public InputList<Inputs.SystemTopicEventSubscriptionAdvancedFilterNumberNotInArgs> NumberNotIns
        {
            get => _numberNotIns ?? (_numberNotIns = new InputList<Inputs.SystemTopicEventSubscriptionAdvancedFilterNumberNotInArgs>());
            set => _numberNotIns = value;
        }

        [Input("stringBeginsWiths")]
        private InputList<Inputs.SystemTopicEventSubscriptionAdvancedFilterStringBeginsWithArgs>? _stringBeginsWiths;

        /// <summary>
        /// Compares a value of an event using multiple string values.
        /// </summary>
        public InputList<Inputs.SystemTopicEventSubscriptionAdvancedFilterStringBeginsWithArgs> StringBeginsWiths
        {
            get => _stringBeginsWiths ?? (_stringBeginsWiths = new InputList<Inputs.SystemTopicEventSubscriptionAdvancedFilterStringBeginsWithArgs>());
            set => _stringBeginsWiths = value;
        }

        [Input("stringContains")]
        private InputList<Inputs.SystemTopicEventSubscriptionAdvancedFilterStringContainArgs>? _stringContains;

        /// <summary>
        /// Compares a value of an event using multiple string values.
        /// </summary>
        public InputList<Inputs.SystemTopicEventSubscriptionAdvancedFilterStringContainArgs> StringContains
        {
            get => _stringContains ?? (_stringContains = new InputList<Inputs.SystemTopicEventSubscriptionAdvancedFilterStringContainArgs>());
            set => _stringContains = value;
        }

        [Input("stringEndsWiths")]
        private InputList<Inputs.SystemTopicEventSubscriptionAdvancedFilterStringEndsWithArgs>? _stringEndsWiths;

        /// <summary>
        /// Compares a value of an event using multiple string values.
        /// </summary>
        public InputList<Inputs.SystemTopicEventSubscriptionAdvancedFilterStringEndsWithArgs> StringEndsWiths
        {
            get => _stringEndsWiths ?? (_stringEndsWiths = new InputList<Inputs.SystemTopicEventSubscriptionAdvancedFilterStringEndsWithArgs>());
            set => _stringEndsWiths = value;
        }

        [Input("stringIns")]
        private InputList<Inputs.SystemTopicEventSubscriptionAdvancedFilterStringInArgs>? _stringIns;

        /// <summary>
        /// Compares a value of an event using multiple string values.
        /// </summary>
        public InputList<Inputs.SystemTopicEventSubscriptionAdvancedFilterStringInArgs> StringIns
        {
            get => _stringIns ?? (_stringIns = new InputList<Inputs.SystemTopicEventSubscriptionAdvancedFilterStringInArgs>());
            set => _stringIns = value;
        }

        [Input("stringNotBeginsWiths")]
        private InputList<Inputs.SystemTopicEventSubscriptionAdvancedFilterStringNotBeginsWithArgs>? _stringNotBeginsWiths;

        /// <summary>
        /// Compares a value of an event using multiple string values.
        /// </summary>
        public InputList<Inputs.SystemTopicEventSubscriptionAdvancedFilterStringNotBeginsWithArgs> StringNotBeginsWiths
        {
            get => _stringNotBeginsWiths ?? (_stringNotBeginsWiths = new InputList<Inputs.SystemTopicEventSubscriptionAdvancedFilterStringNotBeginsWithArgs>());
            set => _stringNotBeginsWiths = value;
        }

        [Input("stringNotContains")]
        private InputList<Inputs.SystemTopicEventSubscriptionAdvancedFilterStringNotContainArgs>? _stringNotContains;

        /// <summary>
        /// Compares a value of an event using multiple string values.
        /// </summary>
        public InputList<Inputs.SystemTopicEventSubscriptionAdvancedFilterStringNotContainArgs> StringNotContains
        {
            get => _stringNotContains ?? (_stringNotContains = new InputList<Inputs.SystemTopicEventSubscriptionAdvancedFilterStringNotContainArgs>());
            set => _stringNotContains = value;
        }

        [Input("stringNotEndsWiths")]
        private InputList<Inputs.SystemTopicEventSubscriptionAdvancedFilterStringNotEndsWithArgs>? _stringNotEndsWiths;

        /// <summary>
        /// Compares a value of an event using multiple string values.
        /// </summary>
        public InputList<Inputs.SystemTopicEventSubscriptionAdvancedFilterStringNotEndsWithArgs> StringNotEndsWiths
        {
            get => _stringNotEndsWiths ?? (_stringNotEndsWiths = new InputList<Inputs.SystemTopicEventSubscriptionAdvancedFilterStringNotEndsWithArgs>());
            set => _stringNotEndsWiths = value;
        }

        [Input("stringNotIns")]
        private InputList<Inputs.SystemTopicEventSubscriptionAdvancedFilterStringNotInArgs>? _stringNotIns;

        /// <summary>
        /// Compares a value of an event using multiple string values.
        /// </summary>
        public InputList<Inputs.SystemTopicEventSubscriptionAdvancedFilterStringNotInArgs> StringNotIns
        {
            get => _stringNotIns ?? (_stringNotIns = new InputList<Inputs.SystemTopicEventSubscriptionAdvancedFilterStringNotInArgs>());
            set => _stringNotIns = value;
        }

        public SystemTopicEventSubscriptionAdvancedFilterArgs()
        {
        }
    }
}
