// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.EventGrid.Inputs
{

    public sealed class NamespaceTopicSpacesConfigurationArgs : global::Pulumi.ResourceArgs
    {
        [Input("alternativeAuthenticationNameSources")]
        private InputList<string>? _alternativeAuthenticationNameSources;

        /// <summary>
        /// Specifies a list of alternative sources for the client authentication name from the client certificate. Possible values are `ClientCertificateDns`, `ClientCertificateEmail`, `ClientCertificateIp`, `ClientCertificateSubject` and `ClientCertificateUri`.
        /// </summary>
        public InputList<string> AlternativeAuthenticationNameSources
        {
            get => _alternativeAuthenticationNameSources ?? (_alternativeAuthenticationNameSources = new InputList<string>());
            set => _alternativeAuthenticationNameSources = value;
        }

        [Input("dynamicRoutingEnrichments")]
        private InputList<Inputs.NamespaceTopicSpacesConfigurationDynamicRoutingEnrichmentArgs>? _dynamicRoutingEnrichments;

        /// <summary>
        /// One or more `dynamic_routing_enrichment` blocks as defined below.
        /// </summary>
        public InputList<Inputs.NamespaceTopicSpacesConfigurationDynamicRoutingEnrichmentArgs> DynamicRoutingEnrichments
        {
            get => _dynamicRoutingEnrichments ?? (_dynamicRoutingEnrichments = new InputList<Inputs.NamespaceTopicSpacesConfigurationDynamicRoutingEnrichmentArgs>());
            set => _dynamicRoutingEnrichments = value;
        }

        /// <summary>
        /// Specifies the maximum number of client sessions per authentication name. Valid values can be between `1` and `100`.
        /// </summary>
        [Input("maximumClientSessionsPerAuthenticationName")]
        public Input<int>? MaximumClientSessionsPerAuthenticationName { get; set; }

        /// <summary>
        /// Specifies the maximum session expiry interval allowed for all MQTT clients connecting to the Event Grid namespace. Valid values can be between `1` and `8`.
        /// </summary>
        [Input("maximumSessionExpiryInHours")]
        public Input<int>? MaximumSessionExpiryInHours { get; set; }

        /// <summary>
        /// Specifies the Event Grid topic resource ID to route messages to.
        /// </summary>
        [Input("routeTopicId")]
        public Input<string>? RouteTopicId { get; set; }

        [Input("staticRoutingEnrichments")]
        private InputList<Inputs.NamespaceTopicSpacesConfigurationStaticRoutingEnrichmentArgs>? _staticRoutingEnrichments;

        /// <summary>
        /// One or more `static_routing_enrichment` blocks as defined below.
        /// </summary>
        public InputList<Inputs.NamespaceTopicSpacesConfigurationStaticRoutingEnrichmentArgs> StaticRoutingEnrichments
        {
            get => _staticRoutingEnrichments ?? (_staticRoutingEnrichments = new InputList<Inputs.NamespaceTopicSpacesConfigurationStaticRoutingEnrichmentArgs>());
            set => _staticRoutingEnrichments = value;
        }

        public NamespaceTopicSpacesConfigurationArgs()
        {
        }
        public static new NamespaceTopicSpacesConfigurationArgs Empty => new NamespaceTopicSpacesConfigurationArgs();
    }
}
