// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Relay
{
    /// <summary>
    /// Manages an Azure Relay Hybrid Connection.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using Azure = Pulumi.Azure;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var exampleResourceGroup = new Azure.Core.ResourceGroup("exampleResourceGroup", new Azure.Core.ResourceGroupArgs
    ///         {
    ///             Location = "West Europe",
    ///         });
    ///         var exampleNamespace = new Azure.Relay.Namespace("exampleNamespace", new Azure.Relay.NamespaceArgs
    ///         {
    ///             Location = exampleResourceGroup.Location,
    ///             ResourceGroupName = exampleResourceGroup.Name,
    ///             SkuName = "Standard",
    ///             Tags = 
    ///             {
    ///                 { "source", "managed" },
    ///             },
    ///         });
    ///         var exampleHybridConnection = new Azure.Relay.HybridConnection("exampleHybridConnection", new Azure.Relay.HybridConnectionArgs
    ///         {
    ///             ResourceGroupName = exampleResourceGroup.Name,
    ///             RelayNamespaceName = exampleNamespace.Name,
    ///             RequiresClientAuthorization = false,
    ///             UserMetadata = "testmetadata",
    ///         });
    ///     }
    /// 
    /// }
    /// ```
    /// 
    /// ## Import
    /// 
    /// Relay Hybrid Connection's can be imported using the `resource id`, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import azure:relay/hybridConnection:HybridConnection relay1 /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.Relay/namespaces/relay1/hybridConnections/hconn1
    /// ```
    /// </summary>
    public partial class HybridConnection : Pulumi.CustomResource
    {
        /// <summary>
        /// Specifies the name of the Azure Relay Hybrid Connection. Changing this forces a new resource to be created.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The name of the Azure Relay in which to create the Azure Relay Hybrid Connection. Changing this forces a new resource to be created.
        /// </summary>
        [Output("relayNamespaceName")]
        public Output<string> RelayNamespaceName { get; private set; } = null!;

        /// <summary>
        /// Specify if client authorization is needed for this hybrid connection. True by default. Changing this forces a new resource to be created.
        /// </summary>
        [Output("requiresClientAuthorization")]
        public Output<bool?> RequiresClientAuthorization { get; private set; } = null!;

        /// <summary>
        /// The name of the resource group in which to create the Azure Relay Hybrid Connection. Changing this forces a new resource to be created.
        /// </summary>
        [Output("resourceGroupName")]
        public Output<string> ResourceGroupName { get; private set; } = null!;

        /// <summary>
        /// The usermetadata is a placeholder to store user-defined string data for the hybrid connection endpoint. For example, it can be used to store descriptive data, such as a list of teams and their contact information. Also, user-defined configuration settings can be stored.
        /// </summary>
        [Output("userMetadata")]
        public Output<string?> UserMetadata { get; private set; } = null!;


        /// <summary>
        /// Create a HybridConnection resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public HybridConnection(string name, HybridConnectionArgs args, CustomResourceOptions? options = null)
            : base("azure:relay/hybridConnection:HybridConnection", name, args ?? new HybridConnectionArgs(), MakeResourceOptions(options, ""))
        {
        }

        private HybridConnection(string name, Input<string> id, HybridConnectionState? state = null, CustomResourceOptions? options = null)
            : base("azure:relay/hybridConnection:HybridConnection", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing HybridConnection resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static HybridConnection Get(string name, Input<string> id, HybridConnectionState? state = null, CustomResourceOptions? options = null)
        {
            return new HybridConnection(name, id, state, options);
        }
    }

    public sealed class HybridConnectionArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies the name of the Azure Relay Hybrid Connection. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The name of the Azure Relay in which to create the Azure Relay Hybrid Connection. Changing this forces a new resource to be created.
        /// </summary>
        [Input("relayNamespaceName", required: true)]
        public Input<string> RelayNamespaceName { get; set; } = null!;

        /// <summary>
        /// Specify if client authorization is needed for this hybrid connection. True by default. Changing this forces a new resource to be created.
        /// </summary>
        [Input("requiresClientAuthorization")]
        public Input<bool>? RequiresClientAuthorization { get; set; }

        /// <summary>
        /// The name of the resource group in which to create the Azure Relay Hybrid Connection. Changing this forces a new resource to be created.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The usermetadata is a placeholder to store user-defined string data for the hybrid connection endpoint. For example, it can be used to store descriptive data, such as a list of teams and their contact information. Also, user-defined configuration settings can be stored.
        /// </summary>
        [Input("userMetadata")]
        public Input<string>? UserMetadata { get; set; }

        public HybridConnectionArgs()
        {
        }
    }

    public sealed class HybridConnectionState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies the name of the Azure Relay Hybrid Connection. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The name of the Azure Relay in which to create the Azure Relay Hybrid Connection. Changing this forces a new resource to be created.
        /// </summary>
        [Input("relayNamespaceName")]
        public Input<string>? RelayNamespaceName { get; set; }

        /// <summary>
        /// Specify if client authorization is needed for this hybrid connection. True by default. Changing this forces a new resource to be created.
        /// </summary>
        [Input("requiresClientAuthorization")]
        public Input<bool>? RequiresClientAuthorization { get; set; }

        /// <summary>
        /// The name of the resource group in which to create the Azure Relay Hybrid Connection. Changing this forces a new resource to be created.
        /// </summary>
        [Input("resourceGroupName")]
        public Input<string>? ResourceGroupName { get; set; }

        /// <summary>
        /// The usermetadata is a placeholder to store user-defined string data for the hybrid connection endpoint. For example, it can be used to store descriptive data, such as a list of teams and their contact information. Also, user-defined configuration settings can be stored.
        /// </summary>
        [Input("userMetadata")]
        public Input<string>? UserMetadata { get; set; }

        public HybridConnectionState()
        {
        }
    }
}
