// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.DataFactory.Inputs
{

    public sealed class FlowletDataFlowSourceArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// A `Dataset` block as defined below.
        /// </summary>
        [Input("dataset")]
        public Input<Inputs.FlowletDataFlowSourceDatasetArgs>? Dataset { get; set; }

        /// <summary>
        /// The description for the Data Flow Source.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// A `Flowlet` block as defined below.
        /// </summary>
        [Input("flowlet")]
        public Input<Inputs.FlowletDataFlowSourceFlowletArgs>? Flowlet { get; set; }

        /// <summary>
        /// A `LinkedService` block as defined below.
        /// </summary>
        [Input("linkedService")]
        public Input<Inputs.FlowletDataFlowSourceLinkedServiceArgs>? LinkedService { get; set; }

        /// <summary>
        /// The name for the Data Flow Source.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// A `RejectedLinkedService` block as defined below.
        /// </summary>
        [Input("rejectedLinkedService")]
        public Input<Inputs.FlowletDataFlowSourceRejectedLinkedServiceArgs>? RejectedLinkedService { get; set; }

        /// <summary>
        /// A `SchemaLinkedService` block as defined below.
        /// </summary>
        [Input("schemaLinkedService")]
        public Input<Inputs.FlowletDataFlowSourceSchemaLinkedServiceArgs>? SchemaLinkedService { get; set; }

        public FlowletDataFlowSourceArgs()
        {
        }
        public static new FlowletDataFlowSourceArgs Empty => new FlowletDataFlowSourceArgs();
    }
}
