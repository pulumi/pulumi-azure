// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.DataFactory
{
    [AzureResourceType("azure:datafactory/triggerTumblingWindow:TriggerTumblingWindow")]
    public partial class TriggerTumblingWindow : Pulumi.CustomResource
    {
        [Output("activated")]
        public Output<bool?> Activated { get; private set; } = null!;

        [Output("additionalProperties")]
        public Output<ImmutableDictionary<string, string>?> AdditionalProperties { get; private set; } = null!;

        [Output("annotations")]
        public Output<ImmutableArray<string>> Annotations { get; private set; } = null!;

        [Output("dataFactoryId")]
        public Output<string> DataFactoryId { get; private set; } = null!;

        [Output("delay")]
        public Output<string?> Delay { get; private set; } = null!;

        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        [Output("endTime")]
        public Output<string?> EndTime { get; private set; } = null!;

        [Output("frequency")]
        public Output<string> Frequency { get; private set; } = null!;

        [Output("interval")]
        public Output<int> Interval { get; private set; } = null!;

        [Output("maxConcurrency")]
        public Output<int?> MaxConcurrency { get; private set; } = null!;

        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("pipeline")]
        public Output<Outputs.TriggerTumblingWindowPipeline> Pipeline { get; private set; } = null!;

        [Output("retry")]
        public Output<Outputs.TriggerTumblingWindowRetry?> Retry { get; private set; } = null!;

        [Output("startTime")]
        public Output<string> StartTime { get; private set; } = null!;

        [Output("triggerDependencies")]
        public Output<ImmutableArray<Outputs.TriggerTumblingWindowTriggerDependency>> TriggerDependencies { get; private set; } = null!;


        /// <summary>
        /// Create a TriggerTumblingWindow resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public TriggerTumblingWindow(string name, TriggerTumblingWindowArgs args, CustomResourceOptions? options = null)
            : base("azure:datafactory/triggerTumblingWindow:TriggerTumblingWindow", name, args ?? new TriggerTumblingWindowArgs(), MakeResourceOptions(options, ""))
        {
        }

        private TriggerTumblingWindow(string name, Input<string> id, TriggerTumblingWindowState? state = null, CustomResourceOptions? options = null)
            : base("azure:datafactory/triggerTumblingWindow:TriggerTumblingWindow", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing TriggerTumblingWindow resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static TriggerTumblingWindow Get(string name, Input<string> id, TriggerTumblingWindowState? state = null, CustomResourceOptions? options = null)
        {
            return new TriggerTumblingWindow(name, id, state, options);
        }
    }

    public sealed class TriggerTumblingWindowArgs : Pulumi.ResourceArgs
    {
        [Input("activated")]
        public Input<bool>? Activated { get; set; }

        [Input("additionalProperties")]
        private InputMap<string>? _additionalProperties;
        public InputMap<string> AdditionalProperties
        {
            get => _additionalProperties ?? (_additionalProperties = new InputMap<string>());
            set => _additionalProperties = value;
        }

        [Input("annotations")]
        private InputList<string>? _annotations;
        public InputList<string> Annotations
        {
            get => _annotations ?? (_annotations = new InputList<string>());
            set => _annotations = value;
        }

        [Input("dataFactoryId", required: true)]
        public Input<string> DataFactoryId { get; set; } = null!;

        [Input("delay")]
        public Input<string>? Delay { get; set; }

        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("endTime")]
        public Input<string>? EndTime { get; set; }

        [Input("frequency", required: true)]
        public Input<string> Frequency { get; set; } = null!;

        [Input("interval", required: true)]
        public Input<int> Interval { get; set; } = null!;

        [Input("maxConcurrency")]
        public Input<int>? MaxConcurrency { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("pipeline", required: true)]
        public Input<Inputs.TriggerTumblingWindowPipelineArgs> Pipeline { get; set; } = null!;

        [Input("retry")]
        public Input<Inputs.TriggerTumblingWindowRetryArgs>? Retry { get; set; }

        [Input("startTime", required: true)]
        public Input<string> StartTime { get; set; } = null!;

        [Input("triggerDependencies")]
        private InputList<Inputs.TriggerTumblingWindowTriggerDependencyArgs>? _triggerDependencies;
        public InputList<Inputs.TriggerTumblingWindowTriggerDependencyArgs> TriggerDependencies
        {
            get => _triggerDependencies ?? (_triggerDependencies = new InputList<Inputs.TriggerTumblingWindowTriggerDependencyArgs>());
            set => _triggerDependencies = value;
        }

        public TriggerTumblingWindowArgs()
        {
        }
    }

    public sealed class TriggerTumblingWindowState : Pulumi.ResourceArgs
    {
        [Input("activated")]
        public Input<bool>? Activated { get; set; }

        [Input("additionalProperties")]
        private InputMap<string>? _additionalProperties;
        public InputMap<string> AdditionalProperties
        {
            get => _additionalProperties ?? (_additionalProperties = new InputMap<string>());
            set => _additionalProperties = value;
        }

        [Input("annotations")]
        private InputList<string>? _annotations;
        public InputList<string> Annotations
        {
            get => _annotations ?? (_annotations = new InputList<string>());
            set => _annotations = value;
        }

        [Input("dataFactoryId")]
        public Input<string>? DataFactoryId { get; set; }

        [Input("delay")]
        public Input<string>? Delay { get; set; }

        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("endTime")]
        public Input<string>? EndTime { get; set; }

        [Input("frequency")]
        public Input<string>? Frequency { get; set; }

        [Input("interval")]
        public Input<int>? Interval { get; set; }

        [Input("maxConcurrency")]
        public Input<int>? MaxConcurrency { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("pipeline")]
        public Input<Inputs.TriggerTumblingWindowPipelineGetArgs>? Pipeline { get; set; }

        [Input("retry")]
        public Input<Inputs.TriggerTumblingWindowRetryGetArgs>? Retry { get; set; }

        [Input("startTime")]
        public Input<string>? StartTime { get; set; }

        [Input("triggerDependencies")]
        private InputList<Inputs.TriggerTumblingWindowTriggerDependencyGetArgs>? _triggerDependencies;
        public InputList<Inputs.TriggerTumblingWindowTriggerDependencyGetArgs> TriggerDependencies
        {
            get => _triggerDependencies ?? (_triggerDependencies = new InputList<Inputs.TriggerTumblingWindowTriggerDependencyGetArgs>());
            set => _triggerDependencies = value;
        }

        public TriggerTumblingWindowState()
        {
        }
    }
}
