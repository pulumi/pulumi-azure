// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.DataFactory
{
    public static class GetTriggerSchedules
    {
        /// <summary>
        /// Use this data source to access information about all existing trigger schedules in Azure Data Factory.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Azure = Pulumi.Azure;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Azure.DataFactory.GetTriggerSchedules.Invoke(new()
        ///     {
        ///         DataFactoryId = "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg1/providers/Microsoft.DataFactory/factories/datafactory1",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["items"] = example.Apply(getTriggerSchedulesResult =&gt; getTriggerSchedulesResult.Items),
        ///     };
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetTriggerSchedulesResult> InvokeAsync(GetTriggerSchedulesArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetTriggerSchedulesResult>("azure:datafactory/getTriggerSchedules:getTriggerSchedules", args ?? new GetTriggerSchedulesArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to access information about all existing trigger schedules in Azure Data Factory.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Azure = Pulumi.Azure;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Azure.DataFactory.GetTriggerSchedules.Invoke(new()
        ///     {
        ///         DataFactoryId = "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg1/providers/Microsoft.DataFactory/factories/datafactory1",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["items"] = example.Apply(getTriggerSchedulesResult =&gt; getTriggerSchedulesResult.Items),
        ///     };
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetTriggerSchedulesResult> Invoke(GetTriggerSchedulesInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetTriggerSchedulesResult>("azure:datafactory/getTriggerSchedules:getTriggerSchedules", args ?? new GetTriggerSchedulesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetTriggerSchedulesArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the Azure Data Factory to fetch trigger schedules from.
        /// </summary>
        [Input("dataFactoryId", required: true)]
        public string DataFactoryId { get; set; } = null!;

        public GetTriggerSchedulesArgs()
        {
        }
        public static new GetTriggerSchedulesArgs Empty => new GetTriggerSchedulesArgs();
    }

    public sealed class GetTriggerSchedulesInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the Azure Data Factory to fetch trigger schedules from.
        /// </summary>
        [Input("dataFactoryId", required: true)]
        public Input<string> DataFactoryId { get; set; } = null!;

        public GetTriggerSchedulesInvokeArgs()
        {
        }
        public static new GetTriggerSchedulesInvokeArgs Empty => new GetTriggerSchedulesInvokeArgs();
    }


    [OutputType]
    public sealed class GetTriggerSchedulesResult
    {
        public readonly string DataFactoryId;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// A list of trigger schedule names available in this Azure Data Factory.
        /// </summary>
        public readonly ImmutableArray<string> Items;

        [OutputConstructor]
        private GetTriggerSchedulesResult(
            string dataFactoryId,

            string id,

            ImmutableArray<string> items)
        {
            DataFactoryId = dataFactoryId;
            Id = id;
            Items = items;
        }
    }
}
