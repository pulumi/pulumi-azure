// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.DataFactory.Outputs
{

    [OutputType]
    public sealed class FlowletDataFlowSink
    {
        /// <summary>
        /// A `dataset` block as defined below.
        /// </summary>
        public readonly Outputs.FlowletDataFlowSinkDataset? Dataset;
        /// <summary>
        /// The description for the Data Flow Source.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// A `flowlet` block as defined below.
        /// </summary>
        public readonly Outputs.FlowletDataFlowSinkFlowlet? Flowlet;
        /// <summary>
        /// A `linked_service` block as defined below.
        /// </summary>
        public readonly Outputs.FlowletDataFlowSinkLinkedService? LinkedService;
        /// <summary>
        /// The name for the Data Flow Source.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// A `schema_linked_service` block as defined below.
        /// </summary>
        public readonly Outputs.FlowletDataFlowSinkSchemaLinkedService? SchemaLinkedService;

        [OutputConstructor]
        private FlowletDataFlowSink(
            Outputs.FlowletDataFlowSinkDataset? dataset,

            string? description,

            Outputs.FlowletDataFlowSinkFlowlet? flowlet,

            Outputs.FlowletDataFlowSinkLinkedService? linkedService,

            string name,

            Outputs.FlowletDataFlowSinkSchemaLinkedService? schemaLinkedService)
        {
            Dataset = dataset;
            Description = description;
            Flowlet = flowlet;
            LinkedService = linkedService;
            Name = name;
            SchemaLinkedService = schemaLinkedService;
        }
    }
}
