// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.ArcKubernetes
{
    /// <summary>
    /// Manages an Arc Kubernetes Provisioned Cluster.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Azure = Pulumi.Azure;
    /// using AzureAD = Pulumi.AzureAD;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Azure.Core.ResourceGroup("example", new()
    ///     {
    ///         Name = "example-resources",
    ///         Location = "West Europe",
    ///     });
    /// 
    ///     var current = Azure.Core.GetClientConfig.Invoke();
    /// 
    ///     var exampleGroup = new AzureAD.Group("example", new()
    ///     {
    ///         DisplayName = "example-adg",
    ///         Owners = new[]
    ///         {
    ///             current.Apply(getClientConfigResult =&gt; getClientConfigResult.ObjectId),
    ///         },
    ///         SecurityEnabled = true,
    ///     });
    /// 
    ///     var exampleProvisionedCluster = new Azure.ArcKubernetes.ProvisionedCluster("example", new()
    ///     {
    ///         Name = "example-akpc",
    ///         ResourceGroupName = example.Name,
    ///         Location = example.Location,
    ///         AzureActiveDirectory = new Azure.ArcKubernetes.Inputs.ProvisionedClusterAzureActiveDirectoryArgs
    ///         {
    ///             AzureRbacEnabled = true,
    ///             AdminGroupObjectIds = new[]
    ///             {
    ///                 exampleGroup.Id,
    ///             },
    ///             TenantId = current.Apply(getClientConfigResult =&gt; getClientConfigResult.TenantId),
    ///         },
    ///         Identity = new Azure.ArcKubernetes.Inputs.ProvisionedClusterIdentityArgs
    ///         {
    ///             Type = "SystemAssigned",
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Arc Kubernetes Provisioned Clusters can be imported using the `resource id`, e.g.
    /// 
    /// ```sh
    /// $ pulumi import azure:arckubernetes/provisionedCluster:ProvisionedCluster example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg1/providers/Microsoft.Kubernetes/connectedClusters/cluster1
    /// ```
    /// </summary>
    [AzureResourceType("azure:arckubernetes/provisionedCluster:ProvisionedCluster")]
    public partial class ProvisionedCluster : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The version of the agent running on the cluster resource.
        /// </summary>
        [Output("agentVersion")]
        public Output<string> AgentVersion { get; private set; } = null!;

        /// <summary>
        /// Whether the Arc agents will be upgraded automatically to the latest version. Defaults to `true`.
        /// </summary>
        [Output("arcAgentAutoUpgradeEnabled")]
        public Output<bool?> ArcAgentAutoUpgradeEnabled { get; private set; } = null!;

        /// <summary>
        /// The version of the Arc agents to be installed on the cluster.
        /// </summary>
        [Output("arcAgentDesiredVersion")]
        public Output<string?> ArcAgentDesiredVersion { get; private set; } = null!;

        /// <summary>
        /// An `azure_active_directory` block as defined below.
        /// </summary>
        [Output("azureActiveDirectory")]
        public Output<Outputs.ProvisionedClusterAzureActiveDirectory?> AzureActiveDirectory { get; private set; } = null!;

        /// <summary>
        /// The distribution running on this Arc Kubernetes Provisioned Cluster.
        /// </summary>
        [Output("distribution")]
        public Output<string> Distribution { get; private set; } = null!;

        /// <summary>
        /// An `identity` block as defined below. Changing this forces a new Arc Kubernetes Provisioned Cluster to be created.
        /// </summary>
        [Output("identity")]
        public Output<Outputs.ProvisionedClusterIdentity> Identity { get; private set; } = null!;

        /// <summary>
        /// The infrastructure on which the Arc Kubernetes Provisioned Cluster is running on.
        /// </summary>
        [Output("infrastructure")]
        public Output<string> Infrastructure { get; private set; } = null!;

        /// <summary>
        /// The Kubernetes version of the cluster resource.
        /// </summary>
        [Output("kubernetesVersion")]
        public Output<string> KubernetesVersion { get; private set; } = null!;

        /// <summary>
        /// The Azure Region where the Arc Kubernetes Provisioned Cluster should exist. Changing this forces a new Arc Kubernetes Provisioned Cluster to be created.
        /// </summary>
        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// The name which should be used for this Arc Kubernetes Provisioned Cluster. Changing this forces a new Arc Kubernetes Provisioned Cluster to be created.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The cluster offering.
        /// </summary>
        [Output("offering")]
        public Output<string> Offering { get; private set; } = null!;

        /// <summary>
        /// The name of the Resource Group where the Arc Kubernetes Provisioned Cluster should exist. Changing this forces a new Arc Kubernetes Provisioned Cluster to be created.
        /// </summary>
        [Output("resourceGroupName")]
        public Output<string> ResourceGroupName { get; private set; } = null!;

        /// <summary>
        /// A mapping of tags which should be assigned to the Arc Kubernetes Provisioned Cluster.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// The number of CPU cores present in the cluster resource.
        /// </summary>
        [Output("totalCoreCount")]
        public Output<int> TotalCoreCount { get; private set; } = null!;

        /// <summary>
        /// The number of nodes present in the cluster resource.
        /// </summary>
        [Output("totalNodeCount")]
        public Output<int> TotalNodeCount { get; private set; } = null!;


        /// <summary>
        /// Create a ProvisionedCluster resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ProvisionedCluster(string name, ProvisionedClusterArgs args, CustomResourceOptions? options = null)
            : base("azure:arckubernetes/provisionedCluster:ProvisionedCluster", name, args ?? new ProvisionedClusterArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ProvisionedCluster(string name, Input<string> id, ProvisionedClusterState? state = null, CustomResourceOptions? options = null)
            : base("azure:arckubernetes/provisionedCluster:ProvisionedCluster", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ProvisionedCluster resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ProvisionedCluster Get(string name, Input<string> id, ProvisionedClusterState? state = null, CustomResourceOptions? options = null)
        {
            return new ProvisionedCluster(name, id, state, options);
        }
    }

    public sealed class ProvisionedClusterArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Whether the Arc agents will be upgraded automatically to the latest version. Defaults to `true`.
        /// </summary>
        [Input("arcAgentAutoUpgradeEnabled")]
        public Input<bool>? ArcAgentAutoUpgradeEnabled { get; set; }

        /// <summary>
        /// The version of the Arc agents to be installed on the cluster.
        /// </summary>
        [Input("arcAgentDesiredVersion")]
        public Input<string>? ArcAgentDesiredVersion { get; set; }

        /// <summary>
        /// An `azure_active_directory` block as defined below.
        /// </summary>
        [Input("azureActiveDirectory")]
        public Input<Inputs.ProvisionedClusterAzureActiveDirectoryArgs>? AzureActiveDirectory { get; set; }

        /// <summary>
        /// An `identity` block as defined below. Changing this forces a new Arc Kubernetes Provisioned Cluster to be created.
        /// </summary>
        [Input("identity", required: true)]
        public Input<Inputs.ProvisionedClusterIdentityArgs> Identity { get; set; } = null!;

        /// <summary>
        /// The Azure Region where the Arc Kubernetes Provisioned Cluster should exist. Changing this forces a new Arc Kubernetes Provisioned Cluster to be created.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// The name which should be used for this Arc Kubernetes Provisioned Cluster. Changing this forces a new Arc Kubernetes Provisioned Cluster to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The name of the Resource Group where the Arc Kubernetes Provisioned Cluster should exist. Changing this forces a new Arc Kubernetes Provisioned Cluster to be created.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// A mapping of tags which should be assigned to the Arc Kubernetes Provisioned Cluster.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public ProvisionedClusterArgs()
        {
        }
        public static new ProvisionedClusterArgs Empty => new ProvisionedClusterArgs();
    }

    public sealed class ProvisionedClusterState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The version of the agent running on the cluster resource.
        /// </summary>
        [Input("agentVersion")]
        public Input<string>? AgentVersion { get; set; }

        /// <summary>
        /// Whether the Arc agents will be upgraded automatically to the latest version. Defaults to `true`.
        /// </summary>
        [Input("arcAgentAutoUpgradeEnabled")]
        public Input<bool>? ArcAgentAutoUpgradeEnabled { get; set; }

        /// <summary>
        /// The version of the Arc agents to be installed on the cluster.
        /// </summary>
        [Input("arcAgentDesiredVersion")]
        public Input<string>? ArcAgentDesiredVersion { get; set; }

        /// <summary>
        /// An `azure_active_directory` block as defined below.
        /// </summary>
        [Input("azureActiveDirectory")]
        public Input<Inputs.ProvisionedClusterAzureActiveDirectoryGetArgs>? AzureActiveDirectory { get; set; }

        /// <summary>
        /// The distribution running on this Arc Kubernetes Provisioned Cluster.
        /// </summary>
        [Input("distribution")]
        public Input<string>? Distribution { get; set; }

        /// <summary>
        /// An `identity` block as defined below. Changing this forces a new Arc Kubernetes Provisioned Cluster to be created.
        /// </summary>
        [Input("identity")]
        public Input<Inputs.ProvisionedClusterIdentityGetArgs>? Identity { get; set; }

        /// <summary>
        /// The infrastructure on which the Arc Kubernetes Provisioned Cluster is running on.
        /// </summary>
        [Input("infrastructure")]
        public Input<string>? Infrastructure { get; set; }

        /// <summary>
        /// The Kubernetes version of the cluster resource.
        /// </summary>
        [Input("kubernetesVersion")]
        public Input<string>? KubernetesVersion { get; set; }

        /// <summary>
        /// The Azure Region where the Arc Kubernetes Provisioned Cluster should exist. Changing this forces a new Arc Kubernetes Provisioned Cluster to be created.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// The name which should be used for this Arc Kubernetes Provisioned Cluster. Changing this forces a new Arc Kubernetes Provisioned Cluster to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The cluster offering.
        /// </summary>
        [Input("offering")]
        public Input<string>? Offering { get; set; }

        /// <summary>
        /// The name of the Resource Group where the Arc Kubernetes Provisioned Cluster should exist. Changing this forces a new Arc Kubernetes Provisioned Cluster to be created.
        /// </summary>
        [Input("resourceGroupName")]
        public Input<string>? ResourceGroupName { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// A mapping of tags which should be assigned to the Arc Kubernetes Provisioned Cluster.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        /// <summary>
        /// The number of CPU cores present in the cluster resource.
        /// </summary>
        [Input("totalCoreCount")]
        public Input<int>? TotalCoreCount { get; set; }

        /// <summary>
        /// The number of nodes present in the cluster resource.
        /// </summary>
        [Input("totalNodeCount")]
        public Input<int>? TotalNodeCount { get; set; }

        public ProvisionedClusterState()
        {
        }
        public static new ProvisionedClusterState Empty => new ProvisionedClusterState();
    }
}
