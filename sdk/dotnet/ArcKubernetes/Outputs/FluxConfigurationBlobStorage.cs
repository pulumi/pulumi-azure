// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.ArcKubernetes.Outputs
{

    [OutputType]
    public sealed class FluxConfigurationBlobStorage
    {
        /// <summary>
        /// Specifies the account key (shared key) to access the storage account.
        /// </summary>
        public readonly string? AccountKey;
        /// <summary>
        /// Specifies the Azure Blob container ID.
        /// </summary>
        public readonly string ContainerId;
        /// <summary>
        /// Specifies the name of a local secret on the Kubernetes cluster to use as the authentication secret rather than the managed or user-provided configuration secrets.
        /// </summary>
        public readonly string? LocalAuthReference;
        /// <summary>
        /// Specifies the shared access token to access the storage container.
        /// </summary>
        public readonly string? SasToken;
        /// <summary>
        /// A `ServicePrincipal` block as defined below.
        /// </summary>
        public readonly Outputs.FluxConfigurationBlobStorageServicePrincipal? ServicePrincipal;
        /// <summary>
        /// Specifies the interval at which to re-reconcile the cluster Azure Blob source with the remote.
        /// </summary>
        public readonly int? SyncIntervalInSeconds;
        /// <summary>
        /// Specifies the maximum time to attempt to reconcile the cluster Azure Blob source with the remote.
        /// </summary>
        public readonly int? TimeoutInSeconds;

        [OutputConstructor]
        private FluxConfigurationBlobStorage(
            string? accountKey,

            string containerId,

            string? localAuthReference,

            string? sasToken,

            Outputs.FluxConfigurationBlobStorageServicePrincipal? servicePrincipal,

            int? syncIntervalInSeconds,

            int? timeoutInSeconds)
        {
            AccountKey = accountKey;
            ContainerId = containerId;
            LocalAuthReference = localAuthReference;
            SasToken = sasToken;
            ServicePrincipal = servicePrincipal;
            SyncIntervalInSeconds = syncIntervalInSeconds;
            TimeoutInSeconds = timeoutInSeconds;
        }
    }
}
