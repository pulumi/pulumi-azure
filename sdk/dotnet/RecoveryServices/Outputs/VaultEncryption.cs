// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.RecoveryServices.Outputs
{

    [OutputType]
    public sealed class VaultEncryption
    {
        /// <summary>
        /// Enabling/Disabling the Double Encryption state.
        /// </summary>
        public readonly bool InfrastructureEncryptionEnabled;
        /// <summary>
        /// The Key Vault key id used to encrypt this vault. Key managed by Vault Managed Hardware Security Module is also supported.
        /// </summary>
        public readonly string KeyId;
        /// <summary>
        /// Indicate that system assigned identity should be used or not. Defaults to `True`. Must be set to `False` when `UserAssignedIdentityId` is set.
        /// 
        /// !&gt; **Note:** `UseSystemAssignedIdentity` only be able to set to `False` for **new** vaults. Any vaults containing existing items registered or attempted to be registered to it are not supported. Details can be found in [the document](https://learn.microsoft.com/en-us/azure/backup/encryption-at-rest-with-cmk?tabs=portal#before-you-start)
        /// 
        /// !&gt; **Note:** Once `InfrastructureEncryptionEnabled` has been set it's not possible to change it.
        /// </summary>
        public readonly bool? UseSystemAssignedIdentity;
        /// <summary>
        /// Specifies the user assigned identity ID to be used.
        /// </summary>
        public readonly string? UserAssignedIdentityId;

        [OutputConstructor]
        private VaultEncryption(
            bool infrastructureEncryptionEnabled,

            string keyId,

            bool? useSystemAssignedIdentity,

            string? userAssignedIdentityId)
        {
            InfrastructureEncryptionEnabled = infrastructureEncryptionEnabled;
            KeyId = keyId;
            UseSystemAssignedIdentity = useSystemAssignedIdentity;
            UserAssignedIdentityId = userAssignedIdentityId;
        }
    }
}
