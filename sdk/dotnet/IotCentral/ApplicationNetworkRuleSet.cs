// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.IotCentral
{
    /// <summary>
    /// Manages an IoT Central Application Network Rule Set.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Azure = Pulumi.Azure;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var exampleResourceGroup = new Azure.Core.ResourceGroup("exampleResourceGroup", new()
    ///     {
    ///         Location = "West Europe",
    ///     });
    /// 
    ///     var exampleApplication = new Azure.IotCentral.Application("exampleApplication", new()
    ///     {
    ///         ResourceGroupName = exampleResourceGroup.Name,
    ///         Location = exampleResourceGroup.Location,
    ///         SubDomain = "example-iotcentral-app-subdomain",
    ///         DisplayName = "example-iotcentral-app-display-name",
    ///         Sku = "ST1",
    ///         Tags = 
    ///         {
    ///             { "Foo", "Bar" },
    ///         },
    ///     });
    /// 
    ///     var exampleApplicationNetworkRuleSet = new Azure.IotCentral.ApplicationNetworkRuleSet("exampleApplicationNetworkRuleSet", new()
    ///     {
    ///         IotcentralApplicationId = exampleApplication.Id,
    ///         IpRules = new[]
    ///         {
    ///             new Azure.IotCentral.Inputs.ApplicationNetworkRuleSetIpRuleArgs
    ///             {
    ///                 Name = "rule1",
    ///                 IpMask = "10.0.1.0/24",
    ///             },
    ///             new Azure.IotCentral.Inputs.ApplicationNetworkRuleSetIpRuleArgs
    ///             {
    ///                 Name = "rule2",
    ///                 IpMask = "10.1.1.0/24",
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// IoT Central Application Network Rule Sets can be imported using the `resource id`, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import azure:iotcentral/applicationNetworkRuleSet:ApplicationNetworkRuleSet example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.IoTCentral/iotApps/app1
    /// ```
    /// </summary>
    [AzureResourceType("azure:iotcentral/applicationNetworkRuleSet:ApplicationNetworkRuleSet")]
    public partial class ApplicationNetworkRuleSet : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Whether these IP Rules apply for device connectivity to IoT Hub and Device Provisioning Service associated with this IoT Central Application. Possible values are `true`, `false`. Defaults to `true`
        /// </summary>
        [Output("applyToDevice")]
        public Output<bool?> ApplyToDevice { get; private set; } = null!;

        /// <summary>
        /// Specifies the default action for the IoT Central Application Network Rule Set. Possible values are `Allow` and `Deny`. Defaults to `Deny`.
        /// </summary>
        [Output("defaultAction")]
        public Output<string?> DefaultAction { get; private set; } = null!;

        /// <summary>
        /// The ID of the IoT Central Application. Changing this forces a new resource to be created.
        /// </summary>
        [Output("iotcentralApplicationId")]
        public Output<string> IotcentralApplicationId { get; private set; } = null!;

        /// <summary>
        /// One or more `ip_rule` blocks as defined below.
        /// </summary>
        [Output("ipRules")]
        public Output<ImmutableArray<Outputs.ApplicationNetworkRuleSetIpRule>> IpRules { get; private set; } = null!;


        /// <summary>
        /// Create a ApplicationNetworkRuleSet resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ApplicationNetworkRuleSet(string name, ApplicationNetworkRuleSetArgs args, CustomResourceOptions? options = null)
            : base("azure:iotcentral/applicationNetworkRuleSet:ApplicationNetworkRuleSet", name, args ?? new ApplicationNetworkRuleSetArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ApplicationNetworkRuleSet(string name, Input<string> id, ApplicationNetworkRuleSetState? state = null, CustomResourceOptions? options = null)
            : base("azure:iotcentral/applicationNetworkRuleSet:ApplicationNetworkRuleSet", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ApplicationNetworkRuleSet resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ApplicationNetworkRuleSet Get(string name, Input<string> id, ApplicationNetworkRuleSetState? state = null, CustomResourceOptions? options = null)
        {
            return new ApplicationNetworkRuleSet(name, id, state, options);
        }
    }

    public sealed class ApplicationNetworkRuleSetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Whether these IP Rules apply for device connectivity to IoT Hub and Device Provisioning Service associated with this IoT Central Application. Possible values are `true`, `false`. Defaults to `true`
        /// </summary>
        [Input("applyToDevice")]
        public Input<bool>? ApplyToDevice { get; set; }

        /// <summary>
        /// Specifies the default action for the IoT Central Application Network Rule Set. Possible values are `Allow` and `Deny`. Defaults to `Deny`.
        /// </summary>
        [Input("defaultAction")]
        public Input<string>? DefaultAction { get; set; }

        /// <summary>
        /// The ID of the IoT Central Application. Changing this forces a new resource to be created.
        /// </summary>
        [Input("iotcentralApplicationId", required: true)]
        public Input<string> IotcentralApplicationId { get; set; } = null!;

        [Input("ipRules")]
        private InputList<Inputs.ApplicationNetworkRuleSetIpRuleArgs>? _ipRules;

        /// <summary>
        /// One or more `ip_rule` blocks as defined below.
        /// </summary>
        public InputList<Inputs.ApplicationNetworkRuleSetIpRuleArgs> IpRules
        {
            get => _ipRules ?? (_ipRules = new InputList<Inputs.ApplicationNetworkRuleSetIpRuleArgs>());
            set => _ipRules = value;
        }

        public ApplicationNetworkRuleSetArgs()
        {
        }
        public static new ApplicationNetworkRuleSetArgs Empty => new ApplicationNetworkRuleSetArgs();
    }

    public sealed class ApplicationNetworkRuleSetState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Whether these IP Rules apply for device connectivity to IoT Hub and Device Provisioning Service associated with this IoT Central Application. Possible values are `true`, `false`. Defaults to `true`
        /// </summary>
        [Input("applyToDevice")]
        public Input<bool>? ApplyToDevice { get; set; }

        /// <summary>
        /// Specifies the default action for the IoT Central Application Network Rule Set. Possible values are `Allow` and `Deny`. Defaults to `Deny`.
        /// </summary>
        [Input("defaultAction")]
        public Input<string>? DefaultAction { get; set; }

        /// <summary>
        /// The ID of the IoT Central Application. Changing this forces a new resource to be created.
        /// </summary>
        [Input("iotcentralApplicationId")]
        public Input<string>? IotcentralApplicationId { get; set; }

        [Input("ipRules")]
        private InputList<Inputs.ApplicationNetworkRuleSetIpRuleGetArgs>? _ipRules;

        /// <summary>
        /// One or more `ip_rule` blocks as defined below.
        /// </summary>
        public InputList<Inputs.ApplicationNetworkRuleSetIpRuleGetArgs> IpRules
        {
            get => _ipRules ?? (_ipRules = new InputList<Inputs.ApplicationNetworkRuleSetIpRuleGetArgs>());
            set => _ipRules = value;
        }

        public ApplicationNetworkRuleSetState()
        {
        }
        public static new ApplicationNetworkRuleSetState Empty => new ApplicationNetworkRuleSetState();
    }
}
