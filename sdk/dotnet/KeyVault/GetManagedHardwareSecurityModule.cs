// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.KeyVault
{
    public static class GetManagedHardwareSecurityModule
    {
        /// <summary>
        /// Use this data source to access information about an existing Key Vault Managed Hardware Security Module.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Azure = Pulumi.Azure;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Azure.KeyVault.GetManagedHardwareSecurityModule.Invoke(new()
        ///     {
        ///         Name = "mykeyvaultHsm",
        ///         ResourceGroupName = "some-resource-group",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["hsmUri"] = example.Apply(getManagedHardwareSecurityModuleResult =&gt; getManagedHardwareSecurityModuleResult.HsmUri),
        ///     };
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetManagedHardwareSecurityModuleResult> InvokeAsync(GetManagedHardwareSecurityModuleArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetManagedHardwareSecurityModuleResult>("azure:keyvault/getManagedHardwareSecurityModule:getManagedHardwareSecurityModule", args ?? new GetManagedHardwareSecurityModuleArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to access information about an existing Key Vault Managed Hardware Security Module.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Azure = Pulumi.Azure;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Azure.KeyVault.GetManagedHardwareSecurityModule.Invoke(new()
        ///     {
        ///         Name = "mykeyvaultHsm",
        ///         ResourceGroupName = "some-resource-group",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["hsmUri"] = example.Apply(getManagedHardwareSecurityModuleResult =&gt; getManagedHardwareSecurityModuleResult.HsmUri),
        ///     };
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetManagedHardwareSecurityModuleResult> Invoke(GetManagedHardwareSecurityModuleInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetManagedHardwareSecurityModuleResult>("azure:keyvault/getManagedHardwareSecurityModule:getManagedHardwareSecurityModule", args ?? new GetManagedHardwareSecurityModuleInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetManagedHardwareSecurityModuleArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the Key Vault Managed Hardware Security Module.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        /// <summary>
        /// The name of the Resource Group in which the Key Vault Managed Hardware Security Module exists.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetManagedHardwareSecurityModuleArgs()
        {
        }
        public static new GetManagedHardwareSecurityModuleArgs Empty => new GetManagedHardwareSecurityModuleArgs();
    }

    public sealed class GetManagedHardwareSecurityModuleInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the Key Vault Managed Hardware Security Module.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// The name of the Resource Group in which the Key Vault Managed Hardware Security Module exists.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetManagedHardwareSecurityModuleInvokeArgs()
        {
        }
        public static new GetManagedHardwareSecurityModuleInvokeArgs Empty => new GetManagedHardwareSecurityModuleInvokeArgs();
    }


    [OutputType]
    public sealed class GetManagedHardwareSecurityModuleResult
    {
        /// <summary>
        /// Specifies a list of administrators object IDs for the key vault Managed Hardware Security Module.
        /// </summary>
        public readonly ImmutableArray<string> AdminObjectIds;
        /// <summary>
        /// The URI of the Hardware Security Module for performing operations on keys and secrets.
        /// </summary>
        public readonly string HsmUri;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The Azure Region in which the Key Vault managed Hardware Security Module exists.
        /// </summary>
        public readonly string Location;
        public readonly string Name;
        /// <summary>
        /// Is purge protection enabled on this Key Vault Managed Hardware Security Module?
        /// </summary>
        public readonly bool PurgeProtectionEnabled;
        public readonly string ResourceGroupName;
        /// <summary>
        /// The Name of the SKU used for this Key Vault Managed Hardware Security Module.
        /// </summary>
        public readonly string SkuName;
        /// <summary>
        /// The number of days that items should be retained for soft-deleted.
        /// </summary>
        public readonly int SoftDeleteRetentionDays;
        /// <summary>
        /// A mapping of tags assigned to the Key Vault Managed Hardware Security Module.
        /// </summary>
        public readonly ImmutableDictionary<string, string> Tags;
        /// <summary>
        /// The Azure Active Directory Tenant ID used for authenticating requests to the Key Vault Managed Hardware Security Module.
        /// </summary>
        public readonly string TenantId;

        [OutputConstructor]
        private GetManagedHardwareSecurityModuleResult(
            ImmutableArray<string> adminObjectIds,

            string hsmUri,

            string id,

            string location,

            string name,

            bool purgeProtectionEnabled,

            string resourceGroupName,

            string skuName,

            int softDeleteRetentionDays,

            ImmutableDictionary<string, string> tags,

            string tenantId)
        {
            AdminObjectIds = adminObjectIds;
            HsmUri = hsmUri;
            Id = id;
            Location = location;
            Name = name;
            PurgeProtectionEnabled = purgeProtectionEnabled;
            ResourceGroupName = resourceGroupName;
            SkuName = skuName;
            SoftDeleteRetentionDays = softDeleteRetentionDays;
            Tags = tags;
            TenantId = tenantId;
        }
    }
}
