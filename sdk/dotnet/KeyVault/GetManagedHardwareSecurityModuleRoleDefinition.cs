// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.KeyVault
{
    public static class GetManagedHardwareSecurityModuleRoleDefinition
    {
        /// <summary>
        /// Use this data source to access information about an existing KeyVault Role Definition.
        /// </summary>
        public static Task<GetManagedHardwareSecurityModuleRoleDefinitionResult> InvokeAsync(GetManagedHardwareSecurityModuleRoleDefinitionArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetManagedHardwareSecurityModuleRoleDefinitionResult>("azure:keyvault/getManagedHardwareSecurityModuleRoleDefinition:getManagedHardwareSecurityModuleRoleDefinition", args ?? new GetManagedHardwareSecurityModuleRoleDefinitionArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to access information about an existing KeyVault Role Definition.
        /// </summary>
        public static Output<GetManagedHardwareSecurityModuleRoleDefinitionResult> Invoke(GetManagedHardwareSecurityModuleRoleDefinitionInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetManagedHardwareSecurityModuleRoleDefinitionResult>("azure:keyvault/getManagedHardwareSecurityModuleRoleDefinition:getManagedHardwareSecurityModuleRoleDefinition", args ?? new GetManagedHardwareSecurityModuleRoleDefinitionInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetManagedHardwareSecurityModuleRoleDefinitionArgs : global::Pulumi.InvokeArgs
    {
        [Input("managedHsmId", required: true)]
        public string ManagedHsmId { get; set; } = null!;

        /// <summary>
        /// The name in UUID notation of this KeyVault Role Definition.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        public GetManagedHardwareSecurityModuleRoleDefinitionArgs()
        {
        }
        public static new GetManagedHardwareSecurityModuleRoleDefinitionArgs Empty => new GetManagedHardwareSecurityModuleRoleDefinitionArgs();
    }

    public sealed class GetManagedHardwareSecurityModuleRoleDefinitionInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("managedHsmId", required: true)]
        public Input<string> ManagedHsmId { get; set; } = null!;

        /// <summary>
        /// The name in UUID notation of this KeyVault Role Definition.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        public GetManagedHardwareSecurityModuleRoleDefinitionInvokeArgs()
        {
        }
        public static new GetManagedHardwareSecurityModuleRoleDefinitionInvokeArgs Empty => new GetManagedHardwareSecurityModuleRoleDefinitionInvokeArgs();
    }


    [OutputType]
    public sealed class GetManagedHardwareSecurityModuleRoleDefinitionResult
    {
        /// <summary>
        /// A list of assignable role scope. Possible values are `/` and `/keys`.
        /// </summary>
        public readonly ImmutableArray<string> AssignableScopes;
        /// <summary>
        /// A text description of this role definition.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string ManagedHsmId;
        public readonly string Name;
        /// <summary>
        /// A `permission` block as defined below.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetManagedHardwareSecurityModuleRoleDefinitionPermissionResult> Permissions;
        /// <summary>
        /// The ID of the role definition resource without base url.
        /// </summary>
        public readonly string ResourceManagerId;
        /// <summary>
        /// The role name of the role definition.
        /// </summary>
        public readonly string RoleName;
        /// <summary>
        /// The type of the role definition. Possible values are `AKVBuiltInRole` and `CustomRole`.
        /// </summary>
        public readonly string RoleType;

        [OutputConstructor]
        private GetManagedHardwareSecurityModuleRoleDefinitionResult(
            ImmutableArray<string> assignableScopes,

            string description,

            string id,

            string managedHsmId,

            string name,

            ImmutableArray<Outputs.GetManagedHardwareSecurityModuleRoleDefinitionPermissionResult> permissions,

            string resourceManagerId,

            string roleName,

            string roleType)
        {
            AssignableScopes = assignableScopes;
            Description = description;
            Id = id;
            ManagedHsmId = managedHsmId;
            Name = name;
            Permissions = permissions;
            ResourceManagerId = resourceManagerId;
            RoleName = roleName;
            RoleType = roleType;
        }
    }
}
