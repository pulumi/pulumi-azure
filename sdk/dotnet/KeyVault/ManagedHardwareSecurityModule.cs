// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.KeyVault
{
    /// <summary>
    /// Manages a Key Vault Managed Hardware Security Module.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using Azure = Pulumi.Azure;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var current = Azure.Core.GetClientConfig.Invoke();
    /// 
    ///     var exampleResourceGroup = new Azure.Core.ResourceGroup("exampleResourceGroup", new()
    ///     {
    ///         Location = "West Europe",
    ///     });
    /// 
    ///     var exampleManagedHardwareSecurityModule = new Azure.KeyVault.ManagedHardwareSecurityModule("exampleManagedHardwareSecurityModule", new()
    ///     {
    ///         ResourceGroupName = exampleResourceGroup.Name,
    ///         Location = exampleResourceGroup.Location,
    ///         SkuName = "Standard_B1",
    ///         PurgeProtectionEnabled = false,
    ///         SoftDeleteRetentionDays = 90,
    ///         TenantId = current.Apply(getClientConfigResult =&gt; getClientConfigResult.TenantId),
    ///         AdminObjectIds = new[]
    ///         {
    ///             current.Apply(getClientConfigResult =&gt; getClientConfigResult.ObjectId),
    ///         },
    ///         Tags = 
    ///         {
    ///             { "Env", "Test" },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Key Vault Managed Hardware Security Module can be imported using the `resource id`, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import azure:keyvault/managedHardwareSecurityModule:ManagedHardwareSecurityModule example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.KeyVault/managedHSMs/hsm1
    /// ```
    /// </summary>
    [AzureResourceType("azure:keyvault/managedHardwareSecurityModule:ManagedHardwareSecurityModule")]
    public partial class ManagedHardwareSecurityModule : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Specifies a list of administrators object IDs for the key vault Managed Hardware Security Module. Changing this forces a new resource to be created.
        /// </summary>
        [Output("adminObjectIds")]
        public Output<ImmutableArray<string>> AdminObjectIds { get; private set; } = null!;

        /// <summary>
        /// The URI of the Key Vault Managed Hardware Security Module, used for performing operations on keys.
        /// </summary>
        [Output("hsmUri")]
        public Output<string> HsmUri { get; private set; } = null!;

        /// <summary>
        /// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
        /// </summary>
        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// Specifies the name of the Key Vault Managed Hardware Security Module. Changing this forces a new resource to be created.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Is Purge Protection enabled for this Key Vault Managed Hardware Security Module? Defaults to `false`. Changing this forces a new resource to be created.
        /// </summary>
        [Output("purgeProtectionEnabled")]
        public Output<bool?> PurgeProtectionEnabled { get; private set; } = null!;

        /// <summary>
        /// The name of the resource group in which to create the Key Vault Managed Hardware Security Module. Changing this forces a new resource to be created.
        /// </summary>
        [Output("resourceGroupName")]
        public Output<string> ResourceGroupName { get; private set; } = null!;

        /// <summary>
        /// The Name of the SKU used for this Key Vault Managed Hardware Security Module. Possible value is `Standard_B1`. Changing this forces a new resource to be created.
        /// </summary>
        [Output("skuName")]
        public Output<string> SkuName { get; private set; } = null!;

        /// <summary>
        /// The number of days that items should be retained for once soft-deleted. This value can be between `7` and `90` days. Defaults to `90`. Changing this forces a new resource to be created.
        /// </summary>
        [Output("softDeleteRetentionDays")]
        public Output<int?> SoftDeleteRetentionDays { get; private set; } = null!;

        /// <summary>
        /// A mapping of tags to assign to the resource. Changing this forces a new resource to be created.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// The Azure Active Directory Tenant ID that should be used for authenticating requests to the key vault Managed Hardware Security Module. Changing this forces a new resource to be created.
        /// </summary>
        [Output("tenantId")]
        public Output<string> TenantId { get; private set; } = null!;


        /// <summary>
        /// Create a ManagedHardwareSecurityModule resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ManagedHardwareSecurityModule(string name, ManagedHardwareSecurityModuleArgs args, CustomResourceOptions? options = null)
            : base("azure:keyvault/managedHardwareSecurityModule:ManagedHardwareSecurityModule", name, args ?? new ManagedHardwareSecurityModuleArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ManagedHardwareSecurityModule(string name, Input<string> id, ManagedHardwareSecurityModuleState? state = null, CustomResourceOptions? options = null)
            : base("azure:keyvault/managedHardwareSecurityModule:ManagedHardwareSecurityModule", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ManagedHardwareSecurityModule resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ManagedHardwareSecurityModule Get(string name, Input<string> id, ManagedHardwareSecurityModuleState? state = null, CustomResourceOptions? options = null)
        {
            return new ManagedHardwareSecurityModule(name, id, state, options);
        }
    }

    public sealed class ManagedHardwareSecurityModuleArgs : global::Pulumi.ResourceArgs
    {
        [Input("adminObjectIds", required: true)]
        private InputList<string>? _adminObjectIds;

        /// <summary>
        /// Specifies a list of administrators object IDs for the key vault Managed Hardware Security Module. Changing this forces a new resource to be created.
        /// </summary>
        public InputList<string> AdminObjectIds
        {
            get => _adminObjectIds ?? (_adminObjectIds = new InputList<string>());
            set => _adminObjectIds = value;
        }

        /// <summary>
        /// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// Specifies the name of the Key Vault Managed Hardware Security Module. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Is Purge Protection enabled for this Key Vault Managed Hardware Security Module? Defaults to `false`. Changing this forces a new resource to be created.
        /// </summary>
        [Input("purgeProtectionEnabled")]
        public Input<bool>? PurgeProtectionEnabled { get; set; }

        /// <summary>
        /// The name of the resource group in which to create the Key Vault Managed Hardware Security Module. Changing this forces a new resource to be created.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The Name of the SKU used for this Key Vault Managed Hardware Security Module. Possible value is `Standard_B1`. Changing this forces a new resource to be created.
        /// </summary>
        [Input("skuName", required: true)]
        public Input<string> SkuName { get; set; } = null!;

        /// <summary>
        /// The number of days that items should be retained for once soft-deleted. This value can be between `7` and `90` days. Defaults to `90`. Changing this forces a new resource to be created.
        /// </summary>
        [Input("softDeleteRetentionDays")]
        public Input<int>? SoftDeleteRetentionDays { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// A mapping of tags to assign to the resource. Changing this forces a new resource to be created.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        /// <summary>
        /// The Azure Active Directory Tenant ID that should be used for authenticating requests to the key vault Managed Hardware Security Module. Changing this forces a new resource to be created.
        /// </summary>
        [Input("tenantId", required: true)]
        public Input<string> TenantId { get; set; } = null!;

        public ManagedHardwareSecurityModuleArgs()
        {
        }
        public static new ManagedHardwareSecurityModuleArgs Empty => new ManagedHardwareSecurityModuleArgs();
    }

    public sealed class ManagedHardwareSecurityModuleState : global::Pulumi.ResourceArgs
    {
        [Input("adminObjectIds")]
        private InputList<string>? _adminObjectIds;

        /// <summary>
        /// Specifies a list of administrators object IDs for the key vault Managed Hardware Security Module. Changing this forces a new resource to be created.
        /// </summary>
        public InputList<string> AdminObjectIds
        {
            get => _adminObjectIds ?? (_adminObjectIds = new InputList<string>());
            set => _adminObjectIds = value;
        }

        /// <summary>
        /// The URI of the Key Vault Managed Hardware Security Module, used for performing operations on keys.
        /// </summary>
        [Input("hsmUri")]
        public Input<string>? HsmUri { get; set; }

        /// <summary>
        /// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// Specifies the name of the Key Vault Managed Hardware Security Module. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Is Purge Protection enabled for this Key Vault Managed Hardware Security Module? Defaults to `false`. Changing this forces a new resource to be created.
        /// </summary>
        [Input("purgeProtectionEnabled")]
        public Input<bool>? PurgeProtectionEnabled { get; set; }

        /// <summary>
        /// The name of the resource group in which to create the Key Vault Managed Hardware Security Module. Changing this forces a new resource to be created.
        /// </summary>
        [Input("resourceGroupName")]
        public Input<string>? ResourceGroupName { get; set; }

        /// <summary>
        /// The Name of the SKU used for this Key Vault Managed Hardware Security Module. Possible value is `Standard_B1`. Changing this forces a new resource to be created.
        /// </summary>
        [Input("skuName")]
        public Input<string>? SkuName { get; set; }

        /// <summary>
        /// The number of days that items should be retained for once soft-deleted. This value can be between `7` and `90` days. Defaults to `90`. Changing this forces a new resource to be created.
        /// </summary>
        [Input("softDeleteRetentionDays")]
        public Input<int>? SoftDeleteRetentionDays { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// A mapping of tags to assign to the resource. Changing this forces a new resource to be created.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        /// <summary>
        /// The Azure Active Directory Tenant ID that should be used for authenticating requests to the key vault Managed Hardware Security Module. Changing this forces a new resource to be created.
        /// </summary>
        [Input("tenantId")]
        public Input<string>? TenantId { get; set; }

        public ManagedHardwareSecurityModuleState()
        {
        }
        public static new ManagedHardwareSecurityModuleState Empty => new ManagedHardwareSecurityModuleState();
    }
}
