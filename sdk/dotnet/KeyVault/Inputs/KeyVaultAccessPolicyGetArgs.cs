// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.KeyVault.Inputs
{

    public sealed class KeyVaultAccessPolicyGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The object ID of an Application in Azure Active Directory.
        /// </summary>
        [Input("applicationId")]
        public Input<string>? ApplicationId { get; set; }

        [Input("certificatePermissions")]
        private InputList<string>? _certificatePermissions;

        /// <summary>
        /// List of certificate permissions, must be one or more from the following: `Backup`, `Create`, `Delete`, `DeleteIssuers`, `Get`, `GetIssuers`, `Import`, `List`, `ListIssuers`, `ManageContacts`, `ManageIssuers`, `Purge`, `Recover`, `Restore`, `SetIssuers` and `Update`.
        /// </summary>
        public InputList<string> CertificatePermissions
        {
            get => _certificatePermissions ?? (_certificatePermissions = new InputList<string>());
            set => _certificatePermissions = value;
        }

        [Input("keyPermissions")]
        private InputList<string>? _keyPermissions;

        /// <summary>
        /// List of key permissions, must be one or more from the following: `Backup`, `Create`, `Decrypt`, `Delete`, `Encrypt`, `Get`, `Import`, `List`, `Purge`, `Recover`, `Restore`, `Sign`, `UnwrapKey`, `Update`, `Verify` and `WrapKey`.
        /// </summary>
        public InputList<string> KeyPermissions
        {
            get => _keyPermissions ?? (_keyPermissions = new InputList<string>());
            set => _keyPermissions = value;
        }

        /// <summary>
        /// The object ID of a user, service principal or security group in the Azure Active Directory tenant for the vault. The object ID must be unique for the list of access policies.
        /// </summary>
        [Input("objectId", required: true)]
        public Input<string> ObjectId { get; set; } = null!;

        [Input("secretPermissions")]
        private InputList<string>? _secretPermissions;

        /// <summary>
        /// List of secret permissions, must be one or more from the following: `Backup`, `Delete`, `Get`, `List`, `Purge`, `Recover`, `Restore` and `Set`.
        /// </summary>
        public InputList<string> SecretPermissions
        {
            get => _secretPermissions ?? (_secretPermissions = new InputList<string>());
            set => _secretPermissions = value;
        }

        [Input("storagePermissions")]
        private InputList<string>? _storagePermissions;

        /// <summary>
        /// List of storage permissions, must be one or more from the following: `Backup`, `Delete`, `DeleteSAS`, `Get`, `GetSAS`, `List`, `ListSAS`, `Purge`, `Recover`, `RegenerateKey`, `Restore`, `Set`, `SetSAS` and `Update`.
        /// </summary>
        public InputList<string> StoragePermissions
        {
            get => _storagePermissions ?? (_storagePermissions = new InputList<string>());
            set => _storagePermissions = value;
        }

        /// <summary>
        /// The Azure Active Directory tenant ID that should be used for authenticating requests to the key vault. Must match the `tenant_id` used above.
        /// </summary>
        [Input("tenantId", required: true)]
        public Input<string> TenantId { get; set; } = null!;

        public KeyVaultAccessPolicyGetArgs()
        {
        }
        public static new KeyVaultAccessPolicyGetArgs Empty => new KeyVaultAccessPolicyGetArgs();
    }
}
