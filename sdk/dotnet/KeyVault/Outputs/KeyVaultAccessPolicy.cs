// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.KeyVault.Outputs
{

    [OutputType]
    public sealed class KeyVaultAccessPolicy
    {
        /// <summary>
        /// The object ID of an Application in Azure Active Directory.
        /// </summary>
        public readonly string? ApplicationId;
        /// <summary>
        /// List of certificate permissions, must be one or more from the following: `backup`, `create`, `delete`, `deleteissuers`, `get`, `getissuers`, `import`, `list`, `listissuers`, `managecontacts`, `manageissuers`, `purge`, `recover`, `restore`, `setissuers` and `update`.
        /// </summary>
        public readonly ImmutableArray<string> CertificatePermissions;
        /// <summary>
        /// List of key permissions, must be one or more from the following: `backup`, `create`, `decrypt`, `delete`, `encrypt`, `get`, `import`, `list`, `purge`, `recover`, `restore`, `sign`, `unwrapKey`, `update`, `verify` and `wrapKey`.
        /// </summary>
        public readonly ImmutableArray<string> KeyPermissions;
        /// <summary>
        /// The object ID of a user, service principal or security group in the Azure Active Directory tenant for the vault. The object ID must be unique for the list of access policies.
        /// </summary>
        public readonly string ObjectId;
        /// <summary>
        /// List of secret permissions, must be one or more from the following: `backup`, `delete`, `get`, `list`, `purge`, `recover`, `restore` and `set`.
        /// </summary>
        public readonly ImmutableArray<string> SecretPermissions;
        /// <summary>
        /// List of storage permissions, must be one or more from the following: `backup`, `delete`, `deletesas`, `get`, `getsas`, `list`, `listsas`, `purge`, `recover`, `regeneratekey`, `restore`, `set`, `setsas` and `update`.
        /// </summary>
        public readonly ImmutableArray<string> StoragePermissions;
        /// <summary>
        /// The Azure Active Directory tenant ID that should be used for authenticating requests to the key vault. Must match the `tenant_id` used above.
        /// </summary>
        public readonly string TenantId;

        [OutputConstructor]
        private KeyVaultAccessPolicy(
            string? applicationId,

            ImmutableArray<string> certificatePermissions,

            ImmutableArray<string> keyPermissions,

            string objectId,

            ImmutableArray<string> secretPermissions,

            ImmutableArray<string> storagePermissions,

            string tenantId)
        {
            ApplicationId = applicationId;
            CertificatePermissions = certificatePermissions;
            KeyPermissions = keyPermissions;
            ObjectId = objectId;
            SecretPermissions = secretPermissions;
            StoragePermissions = storagePermissions;
            TenantId = tenantId;
        }
    }
}
