// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.KeyVault
{
    /// <summary>
    /// Manages a KeyVault Managed Hardware Security Module Role Definition. This resource works together with Managed hardware security module resource.
    /// 
    /// ## Import
    /// 
    /// KeyVaults can be imported using the `resource id`, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import azure:keyvault/managedHardwareSecurityModuleRoleDefinition:ManagedHardwareSecurityModuleRoleDefinition example https://0000.managedhsm.azure.net///RoleDefinition/00000000-0000-0000-0000-000000000000
    /// ```
    /// </summary>
    [AzureResourceType("azure:keyvault/managedHardwareSecurityModuleRoleDefinition:ManagedHardwareSecurityModuleRoleDefinition")]
    public partial class ManagedHardwareSecurityModuleRoleDefinition : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Specifies a text description about this KeyVault Role Definition.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// The name which should be used for this KeyVault Role Definition. Changing this forces a new KeyVault Role Definition to be created.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// One or more `permission` blocks as defined below.
        /// </summary>
        [Output("permissions")]
        public Output<ImmutableArray<Outputs.ManagedHardwareSecurityModuleRoleDefinitionPermission>> Permissions { get; private set; } = null!;

        [Output("resourceManagerId")]
        public Output<string> ResourceManagerId { get; private set; } = null!;

        /// <summary>
        /// Specify a name for this KeyVault Role Definition.
        /// </summary>
        [Output("roleName")]
        public Output<string?> RoleName { get; private set; } = null!;

        /// <summary>
        /// The type of the role definition. Possible values are `AKVBuiltInRole` and `CustomRole`.
        /// </summary>
        [Output("roleType")]
        public Output<string> RoleType { get; private set; } = null!;

        /// <summary>
        /// The base URL of the managed hardware security module resource. Changing this forces a new KeyVault Role Definition to be created.
        /// </summary>
        [Output("vaultBaseUrl")]
        public Output<string> VaultBaseUrl { get; private set; } = null!;


        /// <summary>
        /// Create a ManagedHardwareSecurityModuleRoleDefinition resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ManagedHardwareSecurityModuleRoleDefinition(string name, ManagedHardwareSecurityModuleRoleDefinitionArgs args, CustomResourceOptions? options = null)
            : base("azure:keyvault/managedHardwareSecurityModuleRoleDefinition:ManagedHardwareSecurityModuleRoleDefinition", name, args ?? new ManagedHardwareSecurityModuleRoleDefinitionArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ManagedHardwareSecurityModuleRoleDefinition(string name, Input<string> id, ManagedHardwareSecurityModuleRoleDefinitionState? state = null, CustomResourceOptions? options = null)
            : base("azure:keyvault/managedHardwareSecurityModuleRoleDefinition:ManagedHardwareSecurityModuleRoleDefinition", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ManagedHardwareSecurityModuleRoleDefinition resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ManagedHardwareSecurityModuleRoleDefinition Get(string name, Input<string> id, ManagedHardwareSecurityModuleRoleDefinitionState? state = null, CustomResourceOptions? options = null)
        {
            return new ManagedHardwareSecurityModuleRoleDefinition(name, id, state, options);
        }
    }

    public sealed class ManagedHardwareSecurityModuleRoleDefinitionArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies a text description about this KeyVault Role Definition.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The name which should be used for this KeyVault Role Definition. Changing this forces a new KeyVault Role Definition to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("permissions")]
        private InputList<Inputs.ManagedHardwareSecurityModuleRoleDefinitionPermissionArgs>? _permissions;

        /// <summary>
        /// One or more `permission` blocks as defined below.
        /// </summary>
        public InputList<Inputs.ManagedHardwareSecurityModuleRoleDefinitionPermissionArgs> Permissions
        {
            get => _permissions ?? (_permissions = new InputList<Inputs.ManagedHardwareSecurityModuleRoleDefinitionPermissionArgs>());
            set => _permissions = value;
        }

        /// <summary>
        /// Specify a name for this KeyVault Role Definition.
        /// </summary>
        [Input("roleName")]
        public Input<string>? RoleName { get; set; }

        /// <summary>
        /// The base URL of the managed hardware security module resource. Changing this forces a new KeyVault Role Definition to be created.
        /// </summary>
        [Input("vaultBaseUrl", required: true)]
        public Input<string> VaultBaseUrl { get; set; } = null!;

        public ManagedHardwareSecurityModuleRoleDefinitionArgs()
        {
        }
        public static new ManagedHardwareSecurityModuleRoleDefinitionArgs Empty => new ManagedHardwareSecurityModuleRoleDefinitionArgs();
    }

    public sealed class ManagedHardwareSecurityModuleRoleDefinitionState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies a text description about this KeyVault Role Definition.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The name which should be used for this KeyVault Role Definition. Changing this forces a new KeyVault Role Definition to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("permissions")]
        private InputList<Inputs.ManagedHardwareSecurityModuleRoleDefinitionPermissionGetArgs>? _permissions;

        /// <summary>
        /// One or more `permission` blocks as defined below.
        /// </summary>
        public InputList<Inputs.ManagedHardwareSecurityModuleRoleDefinitionPermissionGetArgs> Permissions
        {
            get => _permissions ?? (_permissions = new InputList<Inputs.ManagedHardwareSecurityModuleRoleDefinitionPermissionGetArgs>());
            set => _permissions = value;
        }

        [Input("resourceManagerId")]
        public Input<string>? ResourceManagerId { get; set; }

        /// <summary>
        /// Specify a name for this KeyVault Role Definition.
        /// </summary>
        [Input("roleName")]
        public Input<string>? RoleName { get; set; }

        /// <summary>
        /// The type of the role definition. Possible values are `AKVBuiltInRole` and `CustomRole`.
        /// </summary>
        [Input("roleType")]
        public Input<string>? RoleType { get; set; }

        /// <summary>
        /// The base URL of the managed hardware security module resource. Changing this forces a new KeyVault Role Definition to be created.
        /// </summary>
        [Input("vaultBaseUrl")]
        public Input<string>? VaultBaseUrl { get; set; }

        public ManagedHardwareSecurityModuleRoleDefinitionState()
        {
        }
        public static new ManagedHardwareSecurityModuleRoleDefinitionState Empty => new ManagedHardwareSecurityModuleRoleDefinitionState();
    }
}
