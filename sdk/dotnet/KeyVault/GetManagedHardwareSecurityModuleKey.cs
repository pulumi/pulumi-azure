// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.KeyVault
{
    public static class GetManagedHardwareSecurityModuleKey
    {
        /// <summary>
        /// Use this data source to access information about an existing Managed Hardware Security Module Key.
        /// 
        /// &gt; **Note:** All arguments including the secret value will be stored in the raw state as plain-text.
        /// [Read more about sensitive data in state](https://www.terraform.io/docs/state/sensitive-data.html).
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Azure = Pulumi.Azure;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Azure.KeyVault.GetManagedHardwareSecurityModuleKey.Invoke(new()
        ///     {
        ///         ManagedHsmId = exampleAzurermKeyVaultManagedHardwareSecurityModule.Id,
        ///         Name = exampleAzurermKeyVaultManagedHardwareSecurityModuleKey.Name,
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["hsm-key-vesrion"] = example.Apply(getManagedHardwareSecurityModuleKeyResult =&gt; getManagedHardwareSecurityModuleKeyResult.Version),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Task<GetManagedHardwareSecurityModuleKeyResult> InvokeAsync(GetManagedHardwareSecurityModuleKeyArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetManagedHardwareSecurityModuleKeyResult>("azure:keyvault/getManagedHardwareSecurityModuleKey:getManagedHardwareSecurityModuleKey", args ?? new GetManagedHardwareSecurityModuleKeyArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to access information about an existing Managed Hardware Security Module Key.
        /// 
        /// &gt; **Note:** All arguments including the secret value will be stored in the raw state as plain-text.
        /// [Read more about sensitive data in state](https://www.terraform.io/docs/state/sensitive-data.html).
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Azure = Pulumi.Azure;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Azure.KeyVault.GetManagedHardwareSecurityModuleKey.Invoke(new()
        ///     {
        ///         ManagedHsmId = exampleAzurermKeyVaultManagedHardwareSecurityModule.Id,
        ///         Name = exampleAzurermKeyVaultManagedHardwareSecurityModuleKey.Name,
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["hsm-key-vesrion"] = example.Apply(getManagedHardwareSecurityModuleKeyResult =&gt; getManagedHardwareSecurityModuleKeyResult.Version),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Output<GetManagedHardwareSecurityModuleKeyResult> Invoke(GetManagedHardwareSecurityModuleKeyInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetManagedHardwareSecurityModuleKeyResult>("azure:keyvault/getManagedHardwareSecurityModuleKey:getManagedHardwareSecurityModuleKey", args ?? new GetManagedHardwareSecurityModuleKeyInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to access information about an existing Managed Hardware Security Module Key.
        /// 
        /// &gt; **Note:** All arguments including the secret value will be stored in the raw state as plain-text.
        /// [Read more about sensitive data in state](https://www.terraform.io/docs/state/sensitive-data.html).
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Azure = Pulumi.Azure;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Azure.KeyVault.GetManagedHardwareSecurityModuleKey.Invoke(new()
        ///     {
        ///         ManagedHsmId = exampleAzurermKeyVaultManagedHardwareSecurityModule.Id,
        ///         Name = exampleAzurermKeyVaultManagedHardwareSecurityModuleKey.Name,
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["hsm-key-vesrion"] = example.Apply(getManagedHardwareSecurityModuleKeyResult =&gt; getManagedHardwareSecurityModuleKeyResult.Version),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Output<GetManagedHardwareSecurityModuleKeyResult> Invoke(GetManagedHardwareSecurityModuleKeyInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetManagedHardwareSecurityModuleKeyResult>("azure:keyvault/getManagedHardwareSecurityModuleKey:getManagedHardwareSecurityModuleKey", args ?? new GetManagedHardwareSecurityModuleKeyInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetManagedHardwareSecurityModuleKeyArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Specifies the ID of the Managed Hardware Security Module instance where the Secret resides, available on the `azure.keyvault.ManagedHardwareSecurityModuleKey` Data Source / Resource.
        /// 
        /// **NOTE:** The Managed Hardware Security Module must be in the same subscription as the provider. If the Managed Hardware Security Module is in another subscription, you must create an aliased provider for that subscription.
        /// </summary>
        [Input("managedHsmId", required: true)]
        public string ManagedHsmId { get; set; } = null!;

        /// <summary>
        /// Specifies the name of the Managed Hardware Security Module Key.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        public GetManagedHardwareSecurityModuleKeyArgs()
        {
        }
        public static new GetManagedHardwareSecurityModuleKeyArgs Empty => new GetManagedHardwareSecurityModuleKeyArgs();
    }

    public sealed class GetManagedHardwareSecurityModuleKeyInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Specifies the ID of the Managed Hardware Security Module instance where the Secret resides, available on the `azure.keyvault.ManagedHardwareSecurityModuleKey` Data Source / Resource.
        /// 
        /// **NOTE:** The Managed Hardware Security Module must be in the same subscription as the provider. If the Managed Hardware Security Module is in another subscription, you must create an aliased provider for that subscription.
        /// </summary>
        [Input("managedHsmId", required: true)]
        public Input<string> ManagedHsmId { get; set; } = null!;

        /// <summary>
        /// Specifies the name of the Managed Hardware Security Module Key.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        public GetManagedHardwareSecurityModuleKeyInvokeArgs()
        {
        }
        public static new GetManagedHardwareSecurityModuleKeyInvokeArgs Empty => new GetManagedHardwareSecurityModuleKeyInvokeArgs();
    }


    [OutputType]
    public sealed class GetManagedHardwareSecurityModuleKeyResult
    {
        /// <summary>
        /// The EC Curve name of this Managed Hardware Security Module Key.
        /// </summary>
        public readonly string Curve;
        public readonly string ExpirationDate;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// A list of JSON web key operations assigned to this Managed Hardware Security Module Key
        /// </summary>
        public readonly ImmutableArray<string> KeyOpts;
        /// <summary>
        /// Specifies the Size of this Managed Hardware Security Module Key.
        /// </summary>
        public readonly int KeySize;
        /// <summary>
        /// Specifies the Key Type of this Managed Hardware Security Module Key
        /// </summary>
        public readonly string KeyType;
        public readonly string ManagedHsmId;
        public readonly string Name;
        public readonly string NotBeforeDate;
        /// <summary>
        /// A mapping of tags assigned to this Managed Hardware Security Module Key.
        /// </summary>
        public readonly ImmutableDictionary<string, string> Tags;
        /// <summary>
        /// The current version of the Managed Hardware Security Module Key.
        /// </summary>
        public readonly string Version;
        /// <summary>
        /// The versioned ID of the Managed Hardware Security Module Key.
        /// </summary>
        public readonly string VersionedId;

        [OutputConstructor]
        private GetManagedHardwareSecurityModuleKeyResult(
            string curve,

            string expirationDate,

            string id,

            ImmutableArray<string> keyOpts,

            int keySize,

            string keyType,

            string managedHsmId,

            string name,

            string notBeforeDate,

            ImmutableDictionary<string, string> tags,

            string version,

            string versionedId)
        {
            Curve = curve;
            ExpirationDate = expirationDate;
            Id = id;
            KeyOpts = keyOpts;
            KeySize = keySize;
            KeyType = keyType;
            ManagedHsmId = managedHsmId;
            Name = name;
            NotBeforeDate = notBeforeDate;
            Tags = tags;
            Version = version;
            VersionedId = versionedId;
        }
    }
}
