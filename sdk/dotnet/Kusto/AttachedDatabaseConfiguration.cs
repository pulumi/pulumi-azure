// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Kusto
{
    /// <summary>
    /// Manages a Kusto (also known as Azure Data Explorer) Attached Database Configuration
    /// 
    /// ## Import
    /// 
    /// Kusto Attached Database Configurations can be imported using the `resource id`, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import azure:kusto/attachedDatabaseConfiguration:AttachedDatabaseConfiguration example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Kusto/Clusters/cluster1/AttachedDatabaseConfigurations/configuration1
    /// ```
    /// </summary>
    [AzureResourceType("azure:kusto/attachedDatabaseConfiguration:AttachedDatabaseConfiguration")]
    public partial class AttachedDatabaseConfiguration : Pulumi.CustomResource
    {
        /// <summary>
        /// The list of databases from the `cluster_resource_id` which are currently attached to the cluster.
        /// </summary>
        [Output("attachedDatabaseNames")]
        public Output<ImmutableArray<string>> AttachedDatabaseNames { get; private set; } = null!;

        /// <summary>
        /// Specifies the name of the Kusto Cluster for which the configuration will be created. Changing this forces a new resource to be created.
        /// </summary>
        [Output("clusterName")]
        public Output<string> ClusterName { get; private set; } = null!;

        /// <summary>
        /// The resource id of the cluster where the databases you would like to attach reside.
        /// </summary>
        [Output("clusterResourceId")]
        public Output<string> ClusterResourceId { get; private set; } = null!;

        /// <summary>
        /// The name of the database which you would like to attach, use * if you want to follow all current and future databases.
        /// </summary>
        [Output("databaseName")]
        public Output<string> DatabaseName { get; private set; } = null!;

        /// <summary>
        /// The default principals modification kind. Valid values are: `None` (default), `Replace` and `Union`.
        /// </summary>
        [Output("defaultPrincipalModificationKind")]
        public Output<string?> DefaultPrincipalModificationKind { get; private set; } = null!;

        /// <summary>
        /// Specifies the location of the Kusto Cluster for which the configuration will be created. Changing this forces a new resource to be created.
        /// </summary>
        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// The name of the Kusto Attached Database Configuration to create. Changing this forces a new resource to be created.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Specifies the resource group of the Kusto Cluster for which the configuration will be created. Changing this forces a new resource to be created.
        /// </summary>
        [Output("resourceGroupName")]
        public Output<string> ResourceGroupName { get; private set; } = null!;


        /// <summary>
        /// Create a AttachedDatabaseConfiguration resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public AttachedDatabaseConfiguration(string name, AttachedDatabaseConfigurationArgs args, CustomResourceOptions? options = null)
            : base("azure:kusto/attachedDatabaseConfiguration:AttachedDatabaseConfiguration", name, args ?? new AttachedDatabaseConfigurationArgs(), MakeResourceOptions(options, ""))
        {
        }

        private AttachedDatabaseConfiguration(string name, Input<string> id, AttachedDatabaseConfigurationState? state = null, CustomResourceOptions? options = null)
            : base("azure:kusto/attachedDatabaseConfiguration:AttachedDatabaseConfiguration", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing AttachedDatabaseConfiguration resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static AttachedDatabaseConfiguration Get(string name, Input<string> id, AttachedDatabaseConfigurationState? state = null, CustomResourceOptions? options = null)
        {
            return new AttachedDatabaseConfiguration(name, id, state, options);
        }
    }

    public sealed class AttachedDatabaseConfigurationArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies the name of the Kusto Cluster for which the configuration will be created. Changing this forces a new resource to be created.
        /// </summary>
        [Input("clusterName", required: true)]
        public Input<string> ClusterName { get; set; } = null!;

        /// <summary>
        /// The resource id of the cluster where the databases you would like to attach reside.
        /// </summary>
        [Input("clusterResourceId", required: true)]
        public Input<string> ClusterResourceId { get; set; } = null!;

        /// <summary>
        /// The name of the database which you would like to attach, use * if you want to follow all current and future databases.
        /// </summary>
        [Input("databaseName", required: true)]
        public Input<string> DatabaseName { get; set; } = null!;

        /// <summary>
        /// The default principals modification kind. Valid values are: `None` (default), `Replace` and `Union`.
        /// </summary>
        [Input("defaultPrincipalModificationKind")]
        public Input<string>? DefaultPrincipalModificationKind { get; set; }

        /// <summary>
        /// Specifies the location of the Kusto Cluster for which the configuration will be created. Changing this forces a new resource to be created.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// The name of the Kusto Attached Database Configuration to create. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Specifies the resource group of the Kusto Cluster for which the configuration will be created. Changing this forces a new resource to be created.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public AttachedDatabaseConfigurationArgs()
        {
        }
    }

    public sealed class AttachedDatabaseConfigurationState : Pulumi.ResourceArgs
    {
        [Input("attachedDatabaseNames")]
        private InputList<string>? _attachedDatabaseNames;

        /// <summary>
        /// The list of databases from the `cluster_resource_id` which are currently attached to the cluster.
        /// </summary>
        public InputList<string> AttachedDatabaseNames
        {
            get => _attachedDatabaseNames ?? (_attachedDatabaseNames = new InputList<string>());
            set => _attachedDatabaseNames = value;
        }

        /// <summary>
        /// Specifies the name of the Kusto Cluster for which the configuration will be created. Changing this forces a new resource to be created.
        /// </summary>
        [Input("clusterName")]
        public Input<string>? ClusterName { get; set; }

        /// <summary>
        /// The resource id of the cluster where the databases you would like to attach reside.
        /// </summary>
        [Input("clusterResourceId")]
        public Input<string>? ClusterResourceId { get; set; }

        /// <summary>
        /// The name of the database which you would like to attach, use * if you want to follow all current and future databases.
        /// </summary>
        [Input("databaseName")]
        public Input<string>? DatabaseName { get; set; }

        /// <summary>
        /// The default principals modification kind. Valid values are: `None` (default), `Replace` and `Union`.
        /// </summary>
        [Input("defaultPrincipalModificationKind")]
        public Input<string>? DefaultPrincipalModificationKind { get; set; }

        /// <summary>
        /// Specifies the location of the Kusto Cluster for which the configuration will be created. Changing this forces a new resource to be created.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// The name of the Kusto Attached Database Configuration to create. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Specifies the resource group of the Kusto Cluster for which the configuration will be created. Changing this forces a new resource to be created.
        /// </summary>
        [Input("resourceGroupName")]
        public Input<string>? ResourceGroupName { get; set; }

        public AttachedDatabaseConfigurationState()
        {
        }
    }
}
