// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Kusto
{
    /// <summary>
    /// Manages a Kusto / Cosmos Database Data Connection.
    /// 
    /// ## Import
    /// 
    /// Kusto / Cosmos Database Data Connection can be imported using the `resource id`, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import azure:kusto/cosmosdbDataConnection:CosmosdbDataConnection example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Kusto/clusters/cluster1/databases/database1/dataConnections/dataConnection1
    /// ```
    /// </summary>
    [AzureResourceType("azure:kusto/cosmosdbDataConnection:CosmosdbDataConnection")]
    public partial class CosmosdbDataConnection : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The name of an existing container in the Cosmos DB database. Changing this forces a new Kusto Cosmos DB Connection to be created.
        /// </summary>
        [Output("cosmosdbContainerId")]
        public Output<string> CosmosdbContainerId { get; private set; } = null!;

        /// <summary>
        /// The name of the database in the Kusto cluster. Changing this forces a new Kusto Cosmos DB Connection to be created.
        /// </summary>
        [Output("kustoDatabaseId")]
        public Output<string> KustoDatabaseId { get; private set; } = null!;

        /// <summary>
        /// The Azure Region where the Data Explorer should exist. Changing this forces a new Kusto Cosmos DB Connection to be created.
        /// </summary>
        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// The resource ID of a managed system or user-assigned identity. The identity is used to authenticate with Cosmos DB. Changing this forces a new Kusto Cosmos DB Connection to be created.
        /// </summary>
        [Output("managedIdentityId")]
        public Output<string> ManagedIdentityId { get; private set; } = null!;

        /// <summary>
        /// The name of an existing mapping rule to use when ingesting the retrieved data. Changing this forces a new Kusto Cosmos DB Connection to be created.
        /// </summary>
        [Output("mappingRuleName")]
        public Output<string?> MappingRuleName { get; private set; } = null!;

        /// <summary>
        /// The name of the data connection. Changing this forces a new Kusto Cosmos DB Connection to be created.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// If defined, the data connection retrieves Cosmos DB documents created or updated after the specified retrieval start date. Changing this forces a new Kusto Cosmos DB Connection to be created.
        /// </summary>
        [Output("retrievalStartDate")]
        public Output<string?> RetrievalStartDate { get; private set; } = null!;

        /// <summary>
        /// The case-sensitive name of the existing target table in your cluster. Retrieved data is ingested into this table. Changing this forces a new Kusto Cosmos DB Connection to be created.
        /// </summary>
        [Output("tableName")]
        public Output<string> TableName { get; private set; } = null!;


        /// <summary>
        /// Create a CosmosdbDataConnection resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public CosmosdbDataConnection(string name, CosmosdbDataConnectionArgs args, CustomResourceOptions? options = null)
            : base("azure:kusto/cosmosdbDataConnection:CosmosdbDataConnection", name, args ?? new CosmosdbDataConnectionArgs(), MakeResourceOptions(options, ""))
        {
        }

        private CosmosdbDataConnection(string name, Input<string> id, CosmosdbDataConnectionState? state = null, CustomResourceOptions? options = null)
            : base("azure:kusto/cosmosdbDataConnection:CosmosdbDataConnection", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing CosmosdbDataConnection resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static CosmosdbDataConnection Get(string name, Input<string> id, CosmosdbDataConnectionState? state = null, CustomResourceOptions? options = null)
        {
            return new CosmosdbDataConnection(name, id, state, options);
        }
    }

    public sealed class CosmosdbDataConnectionArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of an existing container in the Cosmos DB database. Changing this forces a new Kusto Cosmos DB Connection to be created.
        /// </summary>
        [Input("cosmosdbContainerId", required: true)]
        public Input<string> CosmosdbContainerId { get; set; } = null!;

        /// <summary>
        /// The name of the database in the Kusto cluster. Changing this forces a new Kusto Cosmos DB Connection to be created.
        /// </summary>
        [Input("kustoDatabaseId", required: true)]
        public Input<string> KustoDatabaseId { get; set; } = null!;

        /// <summary>
        /// The Azure Region where the Data Explorer should exist. Changing this forces a new Kusto Cosmos DB Connection to be created.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// The resource ID of a managed system or user-assigned identity. The identity is used to authenticate with Cosmos DB. Changing this forces a new Kusto Cosmos DB Connection to be created.
        /// </summary>
        [Input("managedIdentityId", required: true)]
        public Input<string> ManagedIdentityId { get; set; } = null!;

        /// <summary>
        /// The name of an existing mapping rule to use when ingesting the retrieved data. Changing this forces a new Kusto Cosmos DB Connection to be created.
        /// </summary>
        [Input("mappingRuleName")]
        public Input<string>? MappingRuleName { get; set; }

        /// <summary>
        /// The name of the data connection. Changing this forces a new Kusto Cosmos DB Connection to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// If defined, the data connection retrieves Cosmos DB documents created or updated after the specified retrieval start date. Changing this forces a new Kusto Cosmos DB Connection to be created.
        /// </summary>
        [Input("retrievalStartDate")]
        public Input<string>? RetrievalStartDate { get; set; }

        /// <summary>
        /// The case-sensitive name of the existing target table in your cluster. Retrieved data is ingested into this table. Changing this forces a new Kusto Cosmos DB Connection to be created.
        /// </summary>
        [Input("tableName", required: true)]
        public Input<string> TableName { get; set; } = null!;

        public CosmosdbDataConnectionArgs()
        {
        }
        public static new CosmosdbDataConnectionArgs Empty => new CosmosdbDataConnectionArgs();
    }

    public sealed class CosmosdbDataConnectionState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of an existing container in the Cosmos DB database. Changing this forces a new Kusto Cosmos DB Connection to be created.
        /// </summary>
        [Input("cosmosdbContainerId")]
        public Input<string>? CosmosdbContainerId { get; set; }

        /// <summary>
        /// The name of the database in the Kusto cluster. Changing this forces a new Kusto Cosmos DB Connection to be created.
        /// </summary>
        [Input("kustoDatabaseId")]
        public Input<string>? KustoDatabaseId { get; set; }

        /// <summary>
        /// The Azure Region where the Data Explorer should exist. Changing this forces a new Kusto Cosmos DB Connection to be created.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// The resource ID of a managed system or user-assigned identity. The identity is used to authenticate with Cosmos DB. Changing this forces a new Kusto Cosmos DB Connection to be created.
        /// </summary>
        [Input("managedIdentityId")]
        public Input<string>? ManagedIdentityId { get; set; }

        /// <summary>
        /// The name of an existing mapping rule to use when ingesting the retrieved data. Changing this forces a new Kusto Cosmos DB Connection to be created.
        /// </summary>
        [Input("mappingRuleName")]
        public Input<string>? MappingRuleName { get; set; }

        /// <summary>
        /// The name of the data connection. Changing this forces a new Kusto Cosmos DB Connection to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// If defined, the data connection retrieves Cosmos DB documents created or updated after the specified retrieval start date. Changing this forces a new Kusto Cosmos DB Connection to be created.
        /// </summary>
        [Input("retrievalStartDate")]
        public Input<string>? RetrievalStartDate { get; set; }

        /// <summary>
        /// The case-sensitive name of the existing target table in your cluster. Retrieved data is ingested into this table. Changing this forces a new Kusto Cosmos DB Connection to be created.
        /// </summary>
        [Input("tableName")]
        public Input<string>? TableName { get; set; }

        public CosmosdbDataConnectionState()
        {
        }
        public static new CosmosdbDataConnectionState Empty => new CosmosdbDataConnectionState();
    }
}
