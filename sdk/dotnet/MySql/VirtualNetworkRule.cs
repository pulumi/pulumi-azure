// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.MySql
{
    /// <summary>
    /// Manages a MySQL Virtual Network Rule.
    /// 
    /// &gt; **NOTE:** MySQL Virtual Network Rules [can only be used with SKU Tiers of `GeneralPurpose` or `MemoryOptimized`](https://docs.microsoft.com/azure/mysql/concepts-data-access-and-security-vnet)
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Azure = Pulumi.Azure;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var exampleResourceGroup = new Azure.Core.ResourceGroup("exampleResourceGroup", new()
    ///     {
    ///         Location = "West Europe",
    ///     });
    /// 
    ///     var exampleVirtualNetwork = new Azure.Network.VirtualNetwork("exampleVirtualNetwork", new()
    ///     {
    ///         AddressSpaces = new[]
    ///         {
    ///             "10.7.29.0/29",
    ///         },
    ///         Location = exampleResourceGroup.Location,
    ///         ResourceGroupName = exampleResourceGroup.Name,
    ///     });
    /// 
    ///     var @internal = new Azure.Network.Subnet("internal", new()
    ///     {
    ///         ResourceGroupName = exampleResourceGroup.Name,
    ///         VirtualNetworkName = exampleVirtualNetwork.Name,
    ///         AddressPrefixes = new[]
    ///         {
    ///             "10.7.29.0/29",
    ///         },
    ///         ServiceEndpoints = new[]
    ///         {
    ///             "Microsoft.Sql",
    ///         },
    ///     });
    /// 
    ///     var exampleServer = new Azure.MySql.Server("exampleServer", new()
    ///     {
    ///         Location = exampleResourceGroup.Location,
    ///         ResourceGroupName = exampleResourceGroup.Name,
    ///         AdministratorLogin = "mysqladminun",
    ///         AdministratorLoginPassword = "H@Sh1CoR3!",
    ///         SkuName = "GP_Gen5_2",
    ///         StorageMb = 5120,
    ///         Version = "5.7",
    ///         BackupRetentionDays = 7,
    ///         GeoRedundantBackupEnabled = false,
    ///         SslEnforcementEnabled = true,
    ///     });
    /// 
    ///     var exampleVirtualNetworkRule = new Azure.MySql.VirtualNetworkRule("exampleVirtualNetworkRule", new()
    ///     {
    ///         ResourceGroupName = exampleResourceGroup.Name,
    ///         ServerName = exampleServer.Name,
    ///         SubnetId = @internal.Id,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// MySQL Virtual Network Rules can be imported using the `resource id`, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import azure:mysql/virtualNetworkRule:VirtualNetworkRule rule1 /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myresourcegroup/providers/Microsoft.DBforMySQL/servers/myserver/virtualNetworkRules/vnetrulename
    /// ```
    /// </summary>
    [AzureResourceType("azure:mysql/virtualNetworkRule:VirtualNetworkRule")]
    public partial class VirtualNetworkRule : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The name of the MySQL Virtual Network Rule. Cannot be empty and must only contain alphanumeric characters and hyphens. Cannot start with a number, and cannot start or end with a hyphen. Changing this forces a new resource to be created.
        /// 
        /// &gt; **NOTE:** `name` must be between 1-128 characters long and must satisfy all of the requirements below:
        /// 
        /// 1. Contains only alphanumeric and hyphen characters
        /// 2. Cannot start with a number or hyphen
        /// 3. Cannot end with a hyphen
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The name of the resource group where the MySQL server resides. Changing this forces a new resource to be created.
        /// </summary>
        [Output("resourceGroupName")]
        public Output<string> ResourceGroupName { get; private set; } = null!;

        /// <summary>
        /// The name of the SQL Server to which this MySQL virtual network rule will be applied to. Changing this forces a new resource to be created.
        /// </summary>
        [Output("serverName")]
        public Output<string> ServerName { get; private set; } = null!;

        /// <summary>
        /// The ID of the subnet that the MySQL server will be connected to.
        /// 
        /// &gt; **NOTE:** Due to [a bug in the Azure API](https://github.com/Azure/azure-rest-api-specs/issues/3719) this resource currently doesn't expose the `ignore_missing_vnet_service_endpoint` field and defaults this to `false`. This provider will check during the provisioning of the Virtual Network Rule that the Subnet contains the Service Rule to verify that the Virtual Network Rule can be created.
        /// </summary>
        [Output("subnetId")]
        public Output<string> SubnetId { get; private set; } = null!;


        /// <summary>
        /// Create a VirtualNetworkRule resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public VirtualNetworkRule(string name, VirtualNetworkRuleArgs args, CustomResourceOptions? options = null)
            : base("azure:mysql/virtualNetworkRule:VirtualNetworkRule", name, args ?? new VirtualNetworkRuleArgs(), MakeResourceOptions(options, ""))
        {
        }

        private VirtualNetworkRule(string name, Input<string> id, VirtualNetworkRuleState? state = null, CustomResourceOptions? options = null)
            : base("azure:mysql/virtualNetworkRule:VirtualNetworkRule", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing VirtualNetworkRule resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static VirtualNetworkRule Get(string name, Input<string> id, VirtualNetworkRuleState? state = null, CustomResourceOptions? options = null)
        {
            return new VirtualNetworkRule(name, id, state, options);
        }
    }

    public sealed class VirtualNetworkRuleArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the MySQL Virtual Network Rule. Cannot be empty and must only contain alphanumeric characters and hyphens. Cannot start with a number, and cannot start or end with a hyphen. Changing this forces a new resource to be created.
        /// 
        /// &gt; **NOTE:** `name` must be between 1-128 characters long and must satisfy all of the requirements below:
        /// 
        /// 1. Contains only alphanumeric and hyphen characters
        /// 2. Cannot start with a number or hyphen
        /// 3. Cannot end with a hyphen
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The name of the resource group where the MySQL server resides. Changing this forces a new resource to be created.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the SQL Server to which this MySQL virtual network rule will be applied to. Changing this forces a new resource to be created.
        /// </summary>
        [Input("serverName", required: true)]
        public Input<string> ServerName { get; set; } = null!;

        /// <summary>
        /// The ID of the subnet that the MySQL server will be connected to.
        /// 
        /// &gt; **NOTE:** Due to [a bug in the Azure API](https://github.com/Azure/azure-rest-api-specs/issues/3719) this resource currently doesn't expose the `ignore_missing_vnet_service_endpoint` field and defaults this to `false`. This provider will check during the provisioning of the Virtual Network Rule that the Subnet contains the Service Rule to verify that the Virtual Network Rule can be created.
        /// </summary>
        [Input("subnetId", required: true)]
        public Input<string> SubnetId { get; set; } = null!;

        public VirtualNetworkRuleArgs()
        {
        }
        public static new VirtualNetworkRuleArgs Empty => new VirtualNetworkRuleArgs();
    }

    public sealed class VirtualNetworkRuleState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the MySQL Virtual Network Rule. Cannot be empty and must only contain alphanumeric characters and hyphens. Cannot start with a number, and cannot start or end with a hyphen. Changing this forces a new resource to be created.
        /// 
        /// &gt; **NOTE:** `name` must be between 1-128 characters long and must satisfy all of the requirements below:
        /// 
        /// 1. Contains only alphanumeric and hyphen characters
        /// 2. Cannot start with a number or hyphen
        /// 3. Cannot end with a hyphen
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The name of the resource group where the MySQL server resides. Changing this forces a new resource to be created.
        /// </summary>
        [Input("resourceGroupName")]
        public Input<string>? ResourceGroupName { get; set; }

        /// <summary>
        /// The name of the SQL Server to which this MySQL virtual network rule will be applied to. Changing this forces a new resource to be created.
        /// </summary>
        [Input("serverName")]
        public Input<string>? ServerName { get; set; }

        /// <summary>
        /// The ID of the subnet that the MySQL server will be connected to.
        /// 
        /// &gt; **NOTE:** Due to [a bug in the Azure API](https://github.com/Azure/azure-rest-api-specs/issues/3719) this resource currently doesn't expose the `ignore_missing_vnet_service_endpoint` field and defaults this to `false`. This provider will check during the provisioning of the Virtual Network Rule that the Subnet contains the Service Rule to verify that the Virtual Network Rule can be created.
        /// </summary>
        [Input("subnetId")]
        public Input<string>? SubnetId { get; set; }

        public VirtualNetworkRuleState()
        {
        }
        public static new VirtualNetworkRuleState Empty => new VirtualNetworkRuleState();
    }
}
