// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.ManagedLustre
{
    /// <summary>
    /// Manages an Azure Managed Lustre File System.
    /// 
    /// ## Import
    /// 
    /// Azure Managed Lustre File Systems can be imported using the `resource id`, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import azure:managedlustre/fileSystem:FileSystem example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resourceGroup1/providers/Microsoft.StorageCache/amlFilesystems/amlFilesystem1
    /// ```
    /// </summary>
    [AzureResourceType("azure:managedlustre/fileSystem:FileSystem")]
    public partial class FileSystem : global::Pulumi.CustomResource
    {
        /// <summary>
        /// An `encryption_key` block as defined below.
        /// 
        /// &gt; **NOTE:** Removing `encryption_key` forces a new resource to be created.
        /// </summary>
        [Output("encryptionKey")]
        public Output<Outputs.FileSystemEncryptionKey?> EncryptionKey { get; private set; } = null!;

        /// <summary>
        /// A `hsm_setting` block as defined below. Changing this forces a new resource to be created.
        /// </summary>
        [Output("hsmSetting")]
        public Output<Outputs.FileSystemHsmSetting?> HsmSetting { get; private set; } = null!;

        /// <summary>
        /// An `identity` block as defined below. Changing this forces a new resource to be created.
        /// </summary>
        [Output("identity")]
        public Output<Outputs.FileSystemIdentity?> Identity { get; private set; } = null!;

        /// <summary>
        /// The Azure Region where the Azure Managed Lustre File System should exist. Changing this forces a new resource to be created.
        /// </summary>
        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// A `maintenance_window` block as defined below.
        /// </summary>
        [Output("maintenanceWindow")]
        public Output<Outputs.FileSystemMaintenanceWindow> MaintenanceWindow { get; private set; } = null!;

        /// <summary>
        /// IP Address of Managed Lustre File System Services.
        /// </summary>
        [Output("mgsAddress")]
        public Output<string> MgsAddress { get; private set; } = null!;

        /// <summary>
        /// The name which should be used for this Azure Managed Lustre File System. Changing this forces a new resource to be created.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The name of the Resource Group where the Azure Managed Lustre File System should exist. Changing this forces a new resource to be created.
        /// </summary>
        [Output("resourceGroupName")]
        public Output<string> ResourceGroupName { get; private set; } = null!;

        /// <summary>
        /// The SKU name for the Azure Managed Lustre File System. Possible values are `AMLFS-Durable-Premium-40`, `AMLFS-Durable-Premium-125`, `AMLFS-Durable-Premium-250` and `AMLFS-Durable-Premium-500`. Changing this forces a new resource to be created.
        /// </summary>
        [Output("skuName")]
        public Output<string> SkuName { get; private set; } = null!;

        /// <summary>
        /// The size of the Azure Managed Lustre File System in TiB. The valid values for this field are dependant on which `sku_name` has been defined in the configuration file. For more information on the valid values for this field please see the [product documentation](https://learn.microsoft.com/azure/azure-managed-lustre/create-file-system-resource-manager#file-system-type-and-size-options). Changing this forces a new resource to be created.
        /// </summary>
        [Output("storageCapacityInTb")]
        public Output<int> StorageCapacityInTb { get; private set; } = null!;

        /// <summary>
        /// The resource ID of the Subnet that is used for managing the Azure Managed Lustre file system and for client-facing operations. This subnet should have at least a /24 subnet mask within the Virtual Network's address space. Changing this forces a new resource to be created.
        /// </summary>
        [Output("subnetId")]
        public Output<string> SubnetId { get; private set; } = null!;

        /// <summary>
        /// A mapping of tags which should be assigned to the Azure Managed Lustre File System.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// A list of availability zones for the Azure Managed Lustre File System. Changing this forces a new resource to be created.
        /// </summary>
        [Output("zones")]
        public Output<ImmutableArray<string>> Zones { get; private set; } = null!;


        /// <summary>
        /// Create a FileSystem resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public FileSystem(string name, FileSystemArgs args, CustomResourceOptions? options = null)
            : base("azure:managedlustre/fileSystem:FileSystem", name, args ?? new FileSystemArgs(), MakeResourceOptions(options, ""))
        {
        }

        private FileSystem(string name, Input<string> id, FileSystemState? state = null, CustomResourceOptions? options = null)
            : base("azure:managedlustre/fileSystem:FileSystem", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing FileSystem resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static FileSystem Get(string name, Input<string> id, FileSystemState? state = null, CustomResourceOptions? options = null)
        {
            return new FileSystem(name, id, state, options);
        }
    }

    public sealed class FileSystemArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// An `encryption_key` block as defined below.
        /// 
        /// &gt; **NOTE:** Removing `encryption_key` forces a new resource to be created.
        /// </summary>
        [Input("encryptionKey")]
        public Input<Inputs.FileSystemEncryptionKeyArgs>? EncryptionKey { get; set; }

        /// <summary>
        /// A `hsm_setting` block as defined below. Changing this forces a new resource to be created.
        /// </summary>
        [Input("hsmSetting")]
        public Input<Inputs.FileSystemHsmSettingArgs>? HsmSetting { get; set; }

        /// <summary>
        /// An `identity` block as defined below. Changing this forces a new resource to be created.
        /// </summary>
        [Input("identity")]
        public Input<Inputs.FileSystemIdentityArgs>? Identity { get; set; }

        /// <summary>
        /// The Azure Region where the Azure Managed Lustre File System should exist. Changing this forces a new resource to be created.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// A `maintenance_window` block as defined below.
        /// </summary>
        [Input("maintenanceWindow", required: true)]
        public Input<Inputs.FileSystemMaintenanceWindowArgs> MaintenanceWindow { get; set; } = null!;

        /// <summary>
        /// The name which should be used for this Azure Managed Lustre File System. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The name of the Resource Group where the Azure Managed Lustre File System should exist. Changing this forces a new resource to be created.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The SKU name for the Azure Managed Lustre File System. Possible values are `AMLFS-Durable-Premium-40`, `AMLFS-Durable-Premium-125`, `AMLFS-Durable-Premium-250` and `AMLFS-Durable-Premium-500`. Changing this forces a new resource to be created.
        /// </summary>
        [Input("skuName", required: true)]
        public Input<string> SkuName { get; set; } = null!;

        /// <summary>
        /// The size of the Azure Managed Lustre File System in TiB. The valid values for this field are dependant on which `sku_name` has been defined in the configuration file. For more information on the valid values for this field please see the [product documentation](https://learn.microsoft.com/azure/azure-managed-lustre/create-file-system-resource-manager#file-system-type-and-size-options). Changing this forces a new resource to be created.
        /// </summary>
        [Input("storageCapacityInTb", required: true)]
        public Input<int> StorageCapacityInTb { get; set; } = null!;

        /// <summary>
        /// The resource ID of the Subnet that is used for managing the Azure Managed Lustre file system and for client-facing operations. This subnet should have at least a /24 subnet mask within the Virtual Network's address space. Changing this forces a new resource to be created.
        /// </summary>
        [Input("subnetId", required: true)]
        public Input<string> SubnetId { get; set; } = null!;

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// A mapping of tags which should be assigned to the Azure Managed Lustre File System.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("zones", required: true)]
        private InputList<string>? _zones;

        /// <summary>
        /// A list of availability zones for the Azure Managed Lustre File System. Changing this forces a new resource to be created.
        /// </summary>
        public InputList<string> Zones
        {
            get => _zones ?? (_zones = new InputList<string>());
            set => _zones = value;
        }

        public FileSystemArgs()
        {
        }
        public static new FileSystemArgs Empty => new FileSystemArgs();
    }

    public sealed class FileSystemState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// An `encryption_key` block as defined below.
        /// 
        /// &gt; **NOTE:** Removing `encryption_key` forces a new resource to be created.
        /// </summary>
        [Input("encryptionKey")]
        public Input<Inputs.FileSystemEncryptionKeyGetArgs>? EncryptionKey { get; set; }

        /// <summary>
        /// A `hsm_setting` block as defined below. Changing this forces a new resource to be created.
        /// </summary>
        [Input("hsmSetting")]
        public Input<Inputs.FileSystemHsmSettingGetArgs>? HsmSetting { get; set; }

        /// <summary>
        /// An `identity` block as defined below. Changing this forces a new resource to be created.
        /// </summary>
        [Input("identity")]
        public Input<Inputs.FileSystemIdentityGetArgs>? Identity { get; set; }

        /// <summary>
        /// The Azure Region where the Azure Managed Lustre File System should exist. Changing this forces a new resource to be created.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// A `maintenance_window` block as defined below.
        /// </summary>
        [Input("maintenanceWindow")]
        public Input<Inputs.FileSystemMaintenanceWindowGetArgs>? MaintenanceWindow { get; set; }

        /// <summary>
        /// IP Address of Managed Lustre File System Services.
        /// </summary>
        [Input("mgsAddress")]
        public Input<string>? MgsAddress { get; set; }

        /// <summary>
        /// The name which should be used for this Azure Managed Lustre File System. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The name of the Resource Group where the Azure Managed Lustre File System should exist. Changing this forces a new resource to be created.
        /// </summary>
        [Input("resourceGroupName")]
        public Input<string>? ResourceGroupName { get; set; }

        /// <summary>
        /// The SKU name for the Azure Managed Lustre File System. Possible values are `AMLFS-Durable-Premium-40`, `AMLFS-Durable-Premium-125`, `AMLFS-Durable-Premium-250` and `AMLFS-Durable-Premium-500`. Changing this forces a new resource to be created.
        /// </summary>
        [Input("skuName")]
        public Input<string>? SkuName { get; set; }

        /// <summary>
        /// The size of the Azure Managed Lustre File System in TiB. The valid values for this field are dependant on which `sku_name` has been defined in the configuration file. For more information on the valid values for this field please see the [product documentation](https://learn.microsoft.com/azure/azure-managed-lustre/create-file-system-resource-manager#file-system-type-and-size-options). Changing this forces a new resource to be created.
        /// </summary>
        [Input("storageCapacityInTb")]
        public Input<int>? StorageCapacityInTb { get; set; }

        /// <summary>
        /// The resource ID of the Subnet that is used for managing the Azure Managed Lustre file system and for client-facing operations. This subnet should have at least a /24 subnet mask within the Virtual Network's address space. Changing this forces a new resource to be created.
        /// </summary>
        [Input("subnetId")]
        public Input<string>? SubnetId { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// A mapping of tags which should be assigned to the Azure Managed Lustre File System.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("zones")]
        private InputList<string>? _zones;

        /// <summary>
        /// A list of availability zones for the Azure Managed Lustre File System. Changing this forces a new resource to be created.
        /// </summary>
        public InputList<string> Zones
        {
            get => _zones ?? (_zones = new InputList<string>());
            set => _zones = value;
        }

        public FileSystemState()
        {
        }
        public static new FileSystemState Empty => new FileSystemState();
    }
}
