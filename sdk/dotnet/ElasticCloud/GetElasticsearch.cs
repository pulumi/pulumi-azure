// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.ElasticCloud
{
    public static class GetElasticsearch
    {
        /// <summary>
        /// Use this data source to access information about an existing Elasticsearch resource.
        /// </summary>
        public static Task<GetElasticsearchResult> InvokeAsync(GetElasticsearchArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetElasticsearchResult>("azure:elasticcloud/getElasticsearch:getElasticsearch", args ?? new GetElasticsearchArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to access information about an existing Elasticsearch resource.
        /// </summary>
        public static Output<GetElasticsearchResult> Invoke(GetElasticsearchInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetElasticsearchResult>("azure:elasticcloud/getElasticsearch:getElasticsearch", args ?? new GetElasticsearchInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetElasticsearchArgs : global::Pulumi.InvokeArgs
    {
        [Input("logs")]
        private List<Inputs.GetElasticsearchLogArgs>? _logs;

        /// <summary>
        /// A `logs` block as defined below.
        /// </summary>
        public List<Inputs.GetElasticsearchLogArgs> Logs
        {
            get => _logs ?? (_logs = new List<Inputs.GetElasticsearchLogArgs>());
            set => _logs = value;
        }

        /// <summary>
        /// The name of the Elasticsearch resource.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        /// <summary>
        /// The name of the resource group in which the Elasticsearch exists.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetElasticsearchArgs()
        {
        }
        public static new GetElasticsearchArgs Empty => new GetElasticsearchArgs();
    }

    public sealed class GetElasticsearchInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("logs")]
        private InputList<Inputs.GetElasticsearchLogInputArgs>? _logs;

        /// <summary>
        /// A `logs` block as defined below.
        /// </summary>
        public InputList<Inputs.GetElasticsearchLogInputArgs> Logs
        {
            get => _logs ?? (_logs = new InputList<Inputs.GetElasticsearchLogInputArgs>());
            set => _logs = value;
        }

        /// <summary>
        /// The name of the Elasticsearch resource.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// The name of the resource group in which the Elasticsearch exists.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetElasticsearchInvokeArgs()
        {
        }
        public static new GetElasticsearchInvokeArgs Empty => new GetElasticsearchInvokeArgs();
    }


    [OutputType]
    public sealed class GetElasticsearchResult
    {
        /// <summary>
        /// The ID of the Deployment within Elastic Cloud.
        /// </summary>
        public readonly string ElasticCloudDeploymentId;
        /// <summary>
        /// The Email Address which is associated with this Elasticsearch account.
        /// </summary>
        public readonly string ElasticCloudEmailAddress;
        /// <summary>
        /// The Default URL used for Single Sign On (SSO) to Elastic Cloud.
        /// </summary>
        public readonly string ElasticCloudSsoDefaultUrl;
        /// <summary>
        /// The ID of the User Account within Elastic Cloud.
        /// </summary>
        public readonly string ElasticCloudUserId;
        /// <summary>
        /// The URL to the Elasticsearch Service associated with this Elasticsearch.
        /// </summary>
        public readonly string ElasticsearchServiceUrl;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The URL to the Kibana Dashboard associated with this Elasticsearch.
        /// </summary>
        public readonly string KibanaServiceUrl;
        /// <summary>
        /// The URI used for SSO to the Kibana Dashboard associated with this Elasticsearch.
        /// </summary>
        public readonly string KibanaSsoUri;
        /// <summary>
        /// The Azure Region in which this Elasticsearch exists.
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// A `logs` block as defined below.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetElasticsearchLogResult> Logs;
        /// <summary>
        /// Specifies if monitoring is enabled on this Elasticsearch or not.
        /// </summary>
        public readonly bool MonitoringEnabled;
        /// <summary>
        /// The name (key) of the Tag which should be filtered.
        /// </summary>
        public readonly string Name;
        public readonly string ResourceGroupName;
        /// <summary>
        /// The name of the SKU used for this Elasticsearch.
        /// </summary>
        public readonly string SkuName;
        /// <summary>
        /// A mapping of tags assigned to the Elasticsearch.
        /// </summary>
        public readonly ImmutableDictionary<string, string> Tags;

        [OutputConstructor]
        private GetElasticsearchResult(
            string elasticCloudDeploymentId,

            string elasticCloudEmailAddress,

            string elasticCloudSsoDefaultUrl,

            string elasticCloudUserId,

            string elasticsearchServiceUrl,

            string id,

            string kibanaServiceUrl,

            string kibanaSsoUri,

            string location,

            ImmutableArray<Outputs.GetElasticsearchLogResult> logs,

            bool monitoringEnabled,

            string name,

            string resourceGroupName,

            string skuName,

            ImmutableDictionary<string, string> tags)
        {
            ElasticCloudDeploymentId = elasticCloudDeploymentId;
            ElasticCloudEmailAddress = elasticCloudEmailAddress;
            ElasticCloudSsoDefaultUrl = elasticCloudSsoDefaultUrl;
            ElasticCloudUserId = elasticCloudUserId;
            ElasticsearchServiceUrl = elasticsearchServiceUrl;
            Id = id;
            KibanaServiceUrl = kibanaServiceUrl;
            KibanaSsoUri = kibanaSsoUri;
            Location = location;
            Logs = logs;
            MonitoringEnabled = monitoringEnabled;
            Name = name;
            ResourceGroupName = resourceGroupName;
            SkuName = skuName;
            Tags = tags;
        }
    }
}
