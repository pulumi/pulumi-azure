// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.ArcMachine
{
    public static class Get
    {
        /// <summary>
        /// Use this data source to access information about an existing Azure Arc machine.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Azure = Pulumi.Azure;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Azure.ArcMachine.Get.Invoke(new()
        ///     {
        ///         Name = "existing-hcmachine",
        ///         ResourceGroupName = "existing-rg",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["id"] = example.Apply(getResult =&gt; getResult.Id),
        ///     };
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetResult> InvokeAsync(GetArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetResult>("azure:arcmachine/get:get", args ?? new GetArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to access information about an existing Azure Arc machine.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Azure = Pulumi.Azure;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Azure.ArcMachine.Get.Invoke(new()
        ///     {
        ///         Name = "existing-hcmachine",
        ///         ResourceGroupName = "existing-rg",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["id"] = example.Apply(getResult =&gt; getResult.Id),
        ///     };
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetResult> Invoke(GetInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetResult>("azure:arcmachine/get:get", args ?? new GetInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of this Azure Arc machine.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        /// <summary>
        /// The name of the Resource Group where the Hybrid Compute exists.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetArgs()
        {
        }
        public static new GetArgs Empty => new GetArgs();
    }

    public sealed class GetInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of this Azure Arc machine.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// The name of the Resource Group where the Hybrid Compute exists.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetInvokeArgs()
        {
        }
        public static new GetInvokeArgs Empty => new GetInvokeArgs();
    }


    [OutputType]
    public sealed class GetResult
    {
        /// <summary>
        /// Specifies the AD fully qualified display name.
        /// </summary>
        public readonly string ActiveDirectoryFqdn;
        /// <summary>
        /// The Azure Arc machine agent full version.
        /// </summary>
        public readonly string AgentVersion;
        /// <summary>
        /// A `agent` block as defined below.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetAgentResult> Agents;
        /// <summary>
        /// Public Key that the client provides to be used during initial resource onboarding.
        /// </summary>
        public readonly string ClientPublicKey;
        /// <summary>
        /// A `cloud_metadata` block as defined below.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetCloudMetadataResult> CloudMetadatas;
        /// <summary>
        /// A `detected_properties` block as defined below.
        /// </summary>
        public readonly ImmutableDictionary<string, string> DetectedProperties;
        /// <summary>
        /// Specifies the Azure Arc machine display name.
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// Specifies the DNS fully qualified display name.
        /// </summary>
        public readonly string DnsFqdn;
        /// <summary>
        /// Specifies the Windows domain name.
        /// </summary>
        public readonly string DomainName;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// A `identity` block as defined below.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetIdentityResult> Identities;
        /// <summary>
        /// The time of the last status change.
        /// </summary>
        public readonly string LastStatusChangeTime;
        /// <summary>
        /// The Azure Region where the Azure Arc machine exists.
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// A `location_data` block as defined below.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetLocationDataResult> LocationDatas;
        /// <summary>
        /// Specifies the Azure Arc machine fully qualified display name.
        /// </summary>
        public readonly string MachineFqdn;
        /// <summary>
        /// Specifies whether any MS SQL instance is discovered on the machine.
        /// </summary>
        public readonly bool MssqlDiscovered;
        /// <summary>
        /// A canonical name for the geographic or physical location.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The Operating System running on the Azure Arc machine.
        /// </summary>
        public readonly string OsName;
        /// <summary>
        /// A `os_profile` block as defined below.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetOsProfileResult> OsProfiles;
        /// <summary>
        /// Specifies the Operating System product SKU.
        /// </summary>
        public readonly string OsSku;
        /// <summary>
        /// The type of Operating System. Possible values are `windows` and `linux`.
        /// </summary>
        public readonly string OsType;
        /// <summary>
        /// The version of Operating System running on the Azure Arc machine.
        /// </summary>
        public readonly string OsVersion;
        /// <summary>
        /// The resource id of the parent cluster (Azure HCI) this machine is assigned to, if any.
        /// </summary>
        public readonly string ParentClusterResourceId;
        /// <summary>
        /// The resource id of the parent cluster (Azure HCI) this machine is assigned to, if any.
        /// </summary>
        public readonly string PrivateLinkScopeResourceId;
        public readonly string ResourceGroupName;
        /// <summary>
        /// A `service_status` block as defined below.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetServiceStatusResult> ServiceStatuses;
        /// <summary>
        /// The current status of the service.
        /// </summary>
        public readonly string Status;
        /// <summary>
        /// A mapping of tags assigned to the Hybrid Compute.
        /// </summary>
        public readonly ImmutableDictionary<string, string> Tags;
        /// <summary>
        /// Specifies the Azure Arc machine unique ID.
        /// </summary>
        public readonly string VmId;
        /// <summary>
        /// Specifies the Arc Machine's unique SMBIOS ID.
        /// </summary>
        public readonly string VmUuid;

        [OutputConstructor]
        private GetResult(
            string activeDirectoryFqdn,

            string agentVersion,

            ImmutableArray<Outputs.GetAgentResult> agents,

            string clientPublicKey,

            ImmutableArray<Outputs.GetCloudMetadataResult> cloudMetadatas,

            ImmutableDictionary<string, string> detectedProperties,

            string displayName,

            string dnsFqdn,

            string domainName,

            string id,

            ImmutableArray<Outputs.GetIdentityResult> identities,

            string lastStatusChangeTime,

            string location,

            ImmutableArray<Outputs.GetLocationDataResult> locationDatas,

            string machineFqdn,

            bool mssqlDiscovered,

            string name,

            string osName,

            ImmutableArray<Outputs.GetOsProfileResult> osProfiles,

            string osSku,

            string osType,

            string osVersion,

            string parentClusterResourceId,

            string privateLinkScopeResourceId,

            string resourceGroupName,

            ImmutableArray<Outputs.GetServiceStatusResult> serviceStatuses,

            string status,

            ImmutableDictionary<string, string> tags,

            string vmId,

            string vmUuid)
        {
            ActiveDirectoryFqdn = activeDirectoryFqdn;
            AgentVersion = agentVersion;
            Agents = agents;
            ClientPublicKey = clientPublicKey;
            CloudMetadatas = cloudMetadatas;
            DetectedProperties = detectedProperties;
            DisplayName = displayName;
            DnsFqdn = dnsFqdn;
            DomainName = domainName;
            Id = id;
            Identities = identities;
            LastStatusChangeTime = lastStatusChangeTime;
            Location = location;
            LocationDatas = locationDatas;
            MachineFqdn = machineFqdn;
            MssqlDiscovered = mssqlDiscovered;
            Name = name;
            OsName = osName;
            OsProfiles = osProfiles;
            OsSku = osSku;
            OsType = osType;
            OsVersion = osVersion;
            ParentClusterResourceId = parentClusterResourceId;
            PrivateLinkScopeResourceId = privateLinkScopeResourceId;
            ResourceGroupName = resourceGroupName;
            ServiceStatuses = serviceStatuses;
            Status = status;
            Tags = tags;
            VmId = vmId;
            VmUuid = vmUuid;
        }
    }
}
