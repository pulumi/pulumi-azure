// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Maintenance
{
    /// <summary>
    /// Manages a maintenance assignment to a virtual machine scale set.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Azure = Pulumi.Azure;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Azure.Core.ResourceGroup.ResourceGroup("example", new()
    ///     {
    ///         Name = "example-resources",
    ///         Location = "West Europe",
    ///     });
    /// 
    ///     var exampleVirtualNetwork = new Azure.Network.VirtualNetwork.VirtualNetwork("example", new()
    ///     {
    ///         Name = "example-network",
    ///         AddressSpaces = new[]
    ///         {
    ///             "10.0.0.0/16",
    ///         },
    ///         Location = example.Location,
    ///         ResourceGroupName = example.Name,
    ///     });
    /// 
    ///     var exampleSubnet = new Azure.Network.Subnet.Subnet("example", new()
    ///     {
    ///         Name = "internal",
    ///         ResourceGroupName = example.Name,
    ///         VirtualNetworkName = exampleVirtualNetwork.Name,
    ///         AddressPrefixes = new[]
    ///         {
    ///             "10.0.2.0/24",
    ///         },
    ///     });
    /// 
    ///     var examplePublicIp = new Azure.Network.PublicIp.PublicIp("example", new()
    ///     {
    ///         Name = example.Name,
    ///         Location = example.Location,
    ///         ResourceGroupName = example.Name,
    ///         AllocationMethod = "Static",
    ///     });
    /// 
    ///     var exampleLoadBalancer = new Azure.Lb.LoadBalancer.LoadBalancer("example", new()
    ///     {
    ///         Name = example.Name,
    ///         Location = example.Location,
    ///         ResourceGroupName = example.Name,
    ///         FrontendIpConfigurations = new[]
    ///         {
    ///             
    ///             {
    ///                 { "name", "internal" },
    ///                 { "publicIpAddressId", examplePublicIp.Id },
    ///             },
    ///         },
    ///     });
    /// 
    ///     var exampleBackendAddressPool = new Azure.Lb.BackendAddressPool.BackendAddressPool("example", new()
    ///     {
    ///         Name = "example",
    ///         LoadbalancerId = exampleLoadBalancer.Id,
    ///     });
    /// 
    ///     var exampleProbe = new Azure.Lb.Probe.Probe("example", new()
    ///     {
    ///         Name = "example",
    ///         LoadbalancerId = exampleLoadBalancer.Id,
    ///         Port = 22,
    ///         Protocol = "Tcp",
    ///     });
    /// 
    ///     var exampleRule = new Azure.Lb.Rule.Rule("example", new()
    ///     {
    ///         Name = "example",
    ///         LoadbalancerId = exampleLoadBalancer.Id,
    ///         ProbeId = exampleProbe.Id,
    ///         FrontendIpConfigurationName = "internal",
    ///         Protocol = "Tcp",
    ///         FrontendPort = 22,
    ///         BackendPort = 22,
    ///     });
    /// 
    ///     var exampleConfiguration = new Azure.Maintenance.Configuration.Configuration("example", new()
    ///     {
    ///         Name = "example",
    ///         ResourceGroupName = example.Name,
    ///         Location = example.Location,
    ///         Scope = "OSImage",
    ///         Visibility = "Custom",
    ///         Window = 
    ///         {
    ///             { "startDateTime", "2021-12-31 00:00" },
    ///             { "expirationDateTime", "9999-12-31 00:00" },
    ///             { "duration", "06:00" },
    ///             { "timeZone", "Pacific Standard Time" },
    ///             { "recurEvery", "1Days" },
    ///         },
    ///     });
    /// 
    ///     var exampleNetworkInterface = new Azure.Network.NetworkInterface.NetworkInterface("example", new()
    ///     {
    ///         Name = "sample-nic",
    ///         Location = example.Location,
    ///         ResourceGroupName = example.Name,
    ///         IpConfigurations = new[]
    ///         {
    ///             
    ///             {
    ///                 { "name", "testconfiguration1" },
    ///                 { "privateIpAddressAllocation", "Dynamic" },
    ///             },
    ///         },
    ///     });
    /// 
    ///     var exampleLinuxVirtualMachine = new Azure.Compute.LinuxVirtualMachine.LinuxVirtualMachine("example", new()
    ///     {
    ///         Name = "example-machine",
    ///         ResourceGroupName = example.Name,
    ///         Location = example.Location,
    ///         Size = "Standard_F2",
    ///         AdminUsername = "adminuser",
    ///         NetworkInterfaceIds = new[]
    ///         {
    ///             exampleNetworkInterface.Id,
    ///         },
    ///         OsDisk = 
    ///         {
    ///             { "caching", "ReadWrite" },
    ///             { "storageAccountType", "Standard_LRS" },
    ///         },
    ///     });
    /// 
    ///     var exampleLinuxVirtualMachineScaleSet = new Azure.Compute.LinuxVirtualMachineScaleSet.LinuxVirtualMachineScaleSet("example", new()
    ///     {
    ///         Name = "example",
    ///         ResourceGroupName = example.Name,
    ///         Location = example.Location,
    ///         Sku = "Standard_F2",
    ///         Instances = 1,
    ///         AdminUsername = "adminuser",
    ///         AdminPassword = "P@ssword1234!",
    ///         UpgradeMode = "Automatic",
    ///         HealthProbeId = exampleProbe.Id,
    ///         DisablePasswordAuthentication = false,
    ///         SourceImageReference = 
    ///         {
    ///             { "publisher", "Canonical" },
    ///             { "offer", "0001-com-ubuntu-server-jammy" },
    ///             { "sku", "22_04-lts" },
    ///             { "version", "latest" },
    ///         },
    ///         OsDisk = 
    ///         {
    ///             { "storageAccountType", "Standard_LRS" },
    ///             { "caching", "ReadWrite" },
    ///         },
    ///         NetworkInterfaces = new[]
    ///         {
    ///             
    ///             {
    ///                 { "name", "example" },
    ///                 { "primary", true },
    ///                 { "ipConfigurations", new[]
    ///                 {
    ///                     
    ///                     {
    ///                         { "name", "internal" },
    ///                         { "primary", true },
    ///                         { "subnetId", exampleSubnet.Id },
    ///                         { "loadBalancerBackendAddressPoolIds", new[]
    ///                         {
    ///                             exampleBackendAddressPool.Id,
    ///                         } },
    ///                     },
    ///                 } },
    ///             },
    ///         },
    ///         AutomaticOsUpgradePolicy = 
    ///         {
    ///             { "disableAutomaticRollback", true },
    ///             { "enableAutomaticOsUpgrade", true },
    ///         },
    ///         RollingUpgradePolicy = 
    ///         {
    ///             { "maxBatchInstancePercent", 20 },
    ///             { "maxUnhealthyInstancePercent", 20 },
    ///             { "maxUnhealthyUpgradedInstancePercent", 20 },
    ///             { "pauseTimeBetweenBatches", "PT0S" },
    ///         },
    ///     });
    /// 
    ///     var exampleAssignmentVirtualMachineScaleSet = new Azure.Maintenance.AssignmentVirtualMachineScaleSet.AssignmentVirtualMachineScaleSet("example", new()
    ///     {
    ///         Location = example.Location,
    ///         MaintenanceConfigurationId = exampleConfiguration.Id,
    ///         VirtualMachineScaleSetId = exampleLinuxVirtualMachine.Id,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Maintenance Assignment can be imported using the `resource id`, e.g.
    /// 
    /// ```sh
    /// $ pulumi import azure:maintenance/assignmentVirtualMachineScaleSet:AssignmentVirtualMachineScaleSet example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resGroup1/providers/Microsoft.Compute/virtualMachineScaleSets/vmss1/providers/Microsoft.Maintenance/configurationAssignments/assign1
    /// ```
    /// </summary>
    [AzureResourceType("azure:maintenance/assignmentVirtualMachineScaleSet:AssignmentVirtualMachineScaleSet")]
    public partial class AssignmentVirtualMachineScaleSet : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
        /// </summary>
        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// Specifies the ID of the Maintenance Configuration Resource. Changing this forces a new resource to be created.
        /// </summary>
        [Output("maintenanceConfigurationId")]
        public Output<string> MaintenanceConfigurationId { get; private set; } = null!;

        /// <summary>
        /// Specifies the Virtual Machine Scale Set ID to which the Maintenance Configuration will be assigned. Changing this forces a new resource to be created.
        /// </summary>
        [Output("virtualMachineScaleSetId")]
        public Output<string> VirtualMachineScaleSetId { get; private set; } = null!;


        /// <summary>
        /// Create a AssignmentVirtualMachineScaleSet resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public AssignmentVirtualMachineScaleSet(string name, AssignmentVirtualMachineScaleSetArgs args, CustomResourceOptions? options = null)
            : base("azure:maintenance/assignmentVirtualMachineScaleSet:AssignmentVirtualMachineScaleSet", name, args ?? new AssignmentVirtualMachineScaleSetArgs(), MakeResourceOptions(options, ""))
        {
        }

        private AssignmentVirtualMachineScaleSet(string name, Input<string> id, AssignmentVirtualMachineScaleSetState? state = null, CustomResourceOptions? options = null)
            : base("azure:maintenance/assignmentVirtualMachineScaleSet:AssignmentVirtualMachineScaleSet", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing AssignmentVirtualMachineScaleSet resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static AssignmentVirtualMachineScaleSet Get(string name, Input<string> id, AssignmentVirtualMachineScaleSetState? state = null, CustomResourceOptions? options = null)
        {
            return new AssignmentVirtualMachineScaleSet(name, id, state, options);
        }
    }

    public sealed class AssignmentVirtualMachineScaleSetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// Specifies the ID of the Maintenance Configuration Resource. Changing this forces a new resource to be created.
        /// </summary>
        [Input("maintenanceConfigurationId", required: true)]
        public Input<string> MaintenanceConfigurationId { get; set; } = null!;

        /// <summary>
        /// Specifies the Virtual Machine Scale Set ID to which the Maintenance Configuration will be assigned. Changing this forces a new resource to be created.
        /// </summary>
        [Input("virtualMachineScaleSetId", required: true)]
        public Input<string> VirtualMachineScaleSetId { get; set; } = null!;

        public AssignmentVirtualMachineScaleSetArgs()
        {
        }
        public static new AssignmentVirtualMachineScaleSetArgs Empty => new AssignmentVirtualMachineScaleSetArgs();
    }

    public sealed class AssignmentVirtualMachineScaleSetState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// Specifies the ID of the Maintenance Configuration Resource. Changing this forces a new resource to be created.
        /// </summary>
        [Input("maintenanceConfigurationId")]
        public Input<string>? MaintenanceConfigurationId { get; set; }

        /// <summary>
        /// Specifies the Virtual Machine Scale Set ID to which the Maintenance Configuration will be assigned. Changing this forces a new resource to be created.
        /// </summary>
        [Input("virtualMachineScaleSetId")]
        public Input<string>? VirtualMachineScaleSetId { get; set; }

        public AssignmentVirtualMachineScaleSetState()
        {
        }
        public static new AssignmentVirtualMachineScaleSetState Empty => new AssignmentVirtualMachineScaleSetState();
    }
}
