// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Maintenance.Inputs
{

    public sealed class AssignmentDynamicScopeFilterArgs : global::Pulumi.ResourceArgs
    {
        [Input("locations")]
        private InputList<string>? _locations;

        /// <summary>
        /// Specifies a list of locations to scope the query to.
        /// </summary>
        public InputList<string> Locations
        {
            get => _locations ?? (_locations = new InputList<string>());
            set => _locations = value;
        }

        [Input("osTypes")]
        private InputList<string>? _osTypes;

        /// <summary>
        /// Specifies a list of allowed operating systems.
        /// </summary>
        public InputList<string> OsTypes
        {
            get => _osTypes ?? (_osTypes = new InputList<string>());
            set => _osTypes = value;
        }

        [Input("resourceGroups")]
        private InputList<string>? _resourceGroups;

        /// <summary>
        /// Specifies a list of allowed resource groups.
        /// </summary>
        public InputList<string> ResourceGroups
        {
            get => _resourceGroups ?? (_resourceGroups = new InputList<string>());
            set => _resourceGroups = value;
        }

        [Input("resourceTypes")]
        private InputList<string>? _resourceTypes;

        /// <summary>
        /// Specifies a list of allowed resources.
        /// </summary>
        public InputList<string> ResourceTypes
        {
            get => _resourceTypes ?? (_resourceTypes = new InputList<string>());
            set => _resourceTypes = value;
        }

        /// <summary>
        /// Filter VMs by `Any` or `All` specified tags. Defaults to `Any`.
        /// </summary>
        [Input("tagFilter")]
        public Input<string>? TagFilter { get; set; }

        [Input("tags")]
        private InputList<Inputs.AssignmentDynamicScopeFilterTagArgs>? _tags;

        /// <summary>
        /// A mapping of tags for the VM
        /// </summary>
        public InputList<Inputs.AssignmentDynamicScopeFilterTagArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Inputs.AssignmentDynamicScopeFilterTagArgs>());
            set => _tags = value;
        }

        public AssignmentDynamicScopeFilterArgs()
        {
        }
        public static new AssignmentDynamicScopeFilterArgs Empty => new AssignmentDynamicScopeFilterArgs();
    }
}
