// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.FrontDoor
{
    /// <summary>
    /// !&gt; **IMPORTANT** This deploys an Azure Front Door (classic) resource which has been deprecated and will receive security updates only. Please migrate your existing Azure Front Door (classic) deployments to the new Azure Front Door (standard/premium) resources. For your convenience, the service team has exposed a `Front Door Classic` to `Front Door Standard/Premium` [migration tool](https://learn.microsoft.com/azure/frontdoor/tier-migration) to allow you to migrate your existing `Front Door Classic` instances to the new `Front Door Standard/Premium` product tiers.
    /// 
    /// Manages the Custom HTTPS Configuration for an Azure Front Door (classic) Frontend Endpoint.
    /// 
    /// &gt; **NOTE:** Defining custom HTTPS configurations using a separate `azure.frontdoor.CustomHttpsConfiguration` resource allows for parallel creation/update.
    /// 
    /// !&gt; **BREAKING CHANGE:** In order to address the ordering issue we have changed the design on how to retrieve existing sub resources such as frontend endpoints. Existing design will be deprecated and will result in an incorrect configuration. Please refer to the updated documentation below for more information.
    /// 
    /// !&gt; **BREAKING CHANGE:** The `resource_group_name` field has been removed as of the `v2.58.0` provider release. If the `resource_group_name` field has been defined in your current `azure.frontdoor.CustomHttpsConfiguration` resource configuration file please remove it else you will receive a `An argument named "resource_group_name" is not expected here.` error. If your pre-existing Front Door instance contained inline `custom_https_configuration` blocks there are additional steps that will need to be completed to successfully migrate your Front Door onto the `v2.58.0` provider which can be found in this guide.
    /// 
    /// !&gt; **Be Aware:** Azure is rolling out a breaking change on Friday 9th April 2021 which may cause issues with the CDN/FrontDoor resources. More information is available in this GitHub issue as the necessary changes are identified.
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Azure = Pulumi.Azure;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var exampleResourceGroup = new Azure.Core.ResourceGroup("exampleResourceGroup", new()
    ///     {
    ///         Location = "West Europe",
    ///     });
    /// 
    ///     var vault = Azure.KeyVault.GetKeyVault.Invoke(new()
    ///     {
    ///         Name = "example-vault",
    ///         ResourceGroupName = "example-vault-rg",
    ///     });
    /// 
    ///     var exampleFrontdoor = new Azure.FrontDoor.Frontdoor("exampleFrontdoor", new()
    ///     {
    ///         ResourceGroupName = exampleResourceGroup.Name,
    ///         RoutingRules = new[]
    ///         {
    ///             new Azure.FrontDoor.Inputs.FrontdoorRoutingRuleArgs
    ///             {
    ///                 Name = "exampleRoutingRule1",
    ///                 AcceptedProtocols = new[]
    ///                 {
    ///                     "Http",
    ///                     "Https",
    ///                 },
    ///                 PatternsToMatches = new[]
    ///                 {
    ///                     "/*",
    ///                 },
    ///                 FrontendEndpoints = new[]
    ///                 {
    ///                     "exampleFrontendEndpoint1",
    ///                 },
    ///                 ForwardingConfiguration = new Azure.FrontDoor.Inputs.FrontdoorRoutingRuleForwardingConfigurationArgs
    ///                 {
    ///                     ForwardingProtocol = "MatchRequest",
    ///                     BackendPoolName = "exampleBackendBing",
    ///                 },
    ///             },
    ///         },
    ///         BackendPoolLoadBalancings = new[]
    ///         {
    ///             new Azure.FrontDoor.Inputs.FrontdoorBackendPoolLoadBalancingArgs
    ///             {
    ///                 Name = "exampleLoadBalancingSettings1",
    ///             },
    ///         },
    ///         BackendPoolHealthProbes = new[]
    ///         {
    ///             new Azure.FrontDoor.Inputs.FrontdoorBackendPoolHealthProbeArgs
    ///             {
    ///                 Name = "exampleHealthProbeSetting1",
    ///             },
    ///         },
    ///         BackendPools = new[]
    ///         {
    ///             new Azure.FrontDoor.Inputs.FrontdoorBackendPoolArgs
    ///             {
    ///                 Name = "exampleBackendBing",
    ///                 Backends = new[]
    ///                 {
    ///                     new Azure.FrontDoor.Inputs.FrontdoorBackendPoolBackendArgs
    ///                     {
    ///                         HostHeader = "www.bing.com",
    ///                         Address = "www.bing.com",
    ///                         HttpPort = 80,
    ///                         HttpsPort = 443,
    ///                     },
    ///                 },
    ///                 LoadBalancingName = "exampleLoadBalancingSettings1",
    ///                 HealthProbeName = "exampleHealthProbeSetting1",
    ///             },
    ///         },
    ///         FrontendEndpoints = new[]
    ///         {
    ///             new Azure.FrontDoor.Inputs.FrontdoorFrontendEndpointArgs
    ///             {
    ///                 Name = "exampleFrontendEndpoint1",
    ///                 HostName = "example-FrontDoor.azurefd.net",
    ///             },
    ///             new Azure.FrontDoor.Inputs.FrontdoorFrontendEndpointArgs
    ///             {
    ///                 Name = "exampleFrontendEndpoint2",
    ///                 HostName = "examplefd1.examplefd.net",
    ///             },
    ///         },
    ///     });
    /// 
    ///     var exampleCustomHttps0 = new Azure.FrontDoor.CustomHttpsConfiguration("exampleCustomHttps0", new()
    ///     {
    ///         FrontendEndpointId = exampleFrontdoor.FrontendEndpointsMap.Apply(frontendEndpointsMap =&gt; frontendEndpointsMap.ExampleFrontendEndpoint1),
    ///         CustomHttpsProvisioningEnabled = false,
    ///     });
    /// 
    ///     var exampleCustomHttps1 = new Azure.FrontDoor.CustomHttpsConfiguration("exampleCustomHttps1", new()
    ///     {
    ///         FrontendEndpointId = exampleFrontdoor.FrontendEndpointsMap.Apply(frontendEndpointsMap =&gt; frontendEndpointsMap.ExampleFrontendEndpoint2),
    ///         CustomHttpsProvisioningEnabled = true,
    ///         CustomHttpsConfigurationConfig = new Azure.FrontDoor.Inputs.CustomHttpsConfigurationCustomHttpsConfigurationArgs
    ///         {
    ///             CertificateSource = "AzureKeyVault",
    ///             AzureKeyVaultCertificateSecretName = "examplefd1",
    ///             AzureKeyVaultCertificateVaultId = vault.Apply(getKeyVaultResult =&gt; getKeyVaultResult.Id),
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Front Door Custom HTTPS Configurations can be imported using the `resource id` of the Front Door Custom HTTPS Configuration, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import azure:frontdoor/customHttpsConfiguration:CustomHttpsConfiguration example_custom_https_1 /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.Network/frontDoors/frontdoor1/customHttpsConfiguration/endpoint1
    /// ```
    /// </summary>
    [AzureResourceType("azure:frontdoor/customHttpsConfiguration:CustomHttpsConfiguration")]
    public partial class CustomHttpsConfiguration : global::Pulumi.CustomResource
    {
        /// <summary>
        /// A `custom_https_configuration` block as defined above.
        /// </summary>
        [Output("customHttpsConfiguration")]
        public Output<Outputs.CustomHttpsConfigurationCustomHttpsConfiguration?> CustomHttpsConfigurationConfig { get; private set; } = null!;

        /// <summary>
        /// Should the HTTPS protocol be enabled for this custom domain associated with the Front Door?
        /// </summary>
        [Output("customHttpsProvisioningEnabled")]
        public Output<bool> CustomHttpsProvisioningEnabled { get; private set; } = null!;

        /// <summary>
        /// The ID of the Front Door Frontend Endpoint which this configuration refers to. Changing this forces a new resource to be created.
        /// </summary>
        [Output("frontendEndpointId")]
        public Output<string> FrontendEndpointId { get; private set; } = null!;


        /// <summary>
        /// Create a CustomHttpsConfiguration resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public CustomHttpsConfiguration(string name, CustomHttpsConfigurationArgs args, CustomResourceOptions? options = null)
            : base("azure:frontdoor/customHttpsConfiguration:CustomHttpsConfiguration", name, args ?? new CustomHttpsConfigurationArgs(), MakeResourceOptions(options, ""))
        {
        }

        private CustomHttpsConfiguration(string name, Input<string> id, CustomHttpsConfigurationState? state = null, CustomResourceOptions? options = null)
            : base("azure:frontdoor/customHttpsConfiguration:CustomHttpsConfiguration", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing CustomHttpsConfiguration resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static CustomHttpsConfiguration Get(string name, Input<string> id, CustomHttpsConfigurationState? state = null, CustomResourceOptions? options = null)
        {
            return new CustomHttpsConfiguration(name, id, state, options);
        }
    }

    public sealed class CustomHttpsConfigurationArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// A `custom_https_configuration` block as defined above.
        /// </summary>
        [Input("customHttpsConfiguration")]
        public Input<Inputs.CustomHttpsConfigurationCustomHttpsConfigurationArgs>? CustomHttpsConfigurationConfig { get; set; }

        /// <summary>
        /// Should the HTTPS protocol be enabled for this custom domain associated with the Front Door?
        /// </summary>
        [Input("customHttpsProvisioningEnabled", required: true)]
        public Input<bool> CustomHttpsProvisioningEnabled { get; set; } = null!;

        /// <summary>
        /// The ID of the Front Door Frontend Endpoint which this configuration refers to. Changing this forces a new resource to be created.
        /// </summary>
        [Input("frontendEndpointId", required: true)]
        public Input<string> FrontendEndpointId { get; set; } = null!;

        public CustomHttpsConfigurationArgs()
        {
        }
        public static new CustomHttpsConfigurationArgs Empty => new CustomHttpsConfigurationArgs();
    }

    public sealed class CustomHttpsConfigurationState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// A `custom_https_configuration` block as defined above.
        /// </summary>
        [Input("customHttpsConfiguration")]
        public Input<Inputs.CustomHttpsConfigurationCustomHttpsConfigurationGetArgs>? CustomHttpsConfigurationConfig { get; set; }

        /// <summary>
        /// Should the HTTPS protocol be enabled for this custom domain associated with the Front Door?
        /// </summary>
        [Input("customHttpsProvisioningEnabled")]
        public Input<bool>? CustomHttpsProvisioningEnabled { get; set; }

        /// <summary>
        /// The ID of the Front Door Frontend Endpoint which this configuration refers to. Changing this forces a new resource to be created.
        /// </summary>
        [Input("frontendEndpointId")]
        public Input<string>? FrontendEndpointId { get; set; }

        public CustomHttpsConfigurationState()
        {
        }
        public static new CustomHttpsConfigurationState Empty => new CustomHttpsConfigurationState();
    }
}
