// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.FrontDoor
{
    /// <summary>
    /// ## Import
    /// 
    /// Front Door Custom HTTPS Configurations can be imported using the `resource id` of the Front Door Custom HTTPS Configuration, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import azure:frontdoor/customHttpsConfiguration:CustomHttpsConfiguration example_custom_https_1 /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.Network/frontDoors/frontdoor1/customHttpsConfiguration/endpoint1
    /// ```
    /// </summary>
    [AzureResourceType("azure:frontdoor/customHttpsConfiguration:CustomHttpsConfiguration")]
    public partial class CustomHttpsConfiguration : global::Pulumi.CustomResource
    {
        /// <summary>
        /// (Optional) A `custom_https_configuration` block as defined below.
        /// </summary>
        [Output("customHttpsConfiguration")]
        public Output<Outputs.CustomHttpsConfigurationCustomHttpsConfiguration?> CustomHttpsConfigurationConfig { get; private set; } = null!;

        /// <summary>
        /// Should the HTTPS protocol be enabled for this custom domain associated with the Front Door?
        /// </summary>
        [Output("customHttpsProvisioningEnabled")]
        public Output<bool> CustomHttpsProvisioningEnabled { get; private set; } = null!;

        /// <summary>
        /// The ID of the Front Door Frontend Endpoint which this configuration refers to. Changing this forces a new resource to be created.
        /// </summary>
        [Output("frontendEndpointId")]
        public Output<string> FrontendEndpointId { get; private set; } = null!;


        /// <summary>
        /// Create a CustomHttpsConfiguration resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public CustomHttpsConfiguration(string name, CustomHttpsConfigurationArgs args, CustomResourceOptions? options = null)
            : base("azure:frontdoor/customHttpsConfiguration:CustomHttpsConfiguration", name, args ?? new CustomHttpsConfigurationArgs(), MakeResourceOptions(options, ""))
        {
        }

        private CustomHttpsConfiguration(string name, Input<string> id, CustomHttpsConfigurationState? state = null, CustomResourceOptions? options = null)
            : base("azure:frontdoor/customHttpsConfiguration:CustomHttpsConfiguration", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing CustomHttpsConfiguration resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static CustomHttpsConfiguration Get(string name, Input<string> id, CustomHttpsConfigurationState? state = null, CustomResourceOptions? options = null)
        {
            return new CustomHttpsConfiguration(name, id, state, options);
        }
    }

    public sealed class CustomHttpsConfigurationArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// (Optional) A `custom_https_configuration` block as defined below.
        /// </summary>
        [Input("customHttpsConfiguration")]
        public Input<Inputs.CustomHttpsConfigurationCustomHttpsConfigurationArgs>? CustomHttpsConfigurationConfig { get; set; }

        /// <summary>
        /// Should the HTTPS protocol be enabled for this custom domain associated with the Front Door?
        /// </summary>
        [Input("customHttpsProvisioningEnabled", required: true)]
        public Input<bool> CustomHttpsProvisioningEnabled { get; set; } = null!;

        /// <summary>
        /// The ID of the Front Door Frontend Endpoint which this configuration refers to. Changing this forces a new resource to be created.
        /// </summary>
        [Input("frontendEndpointId", required: true)]
        public Input<string> FrontendEndpointId { get; set; } = null!;

        public CustomHttpsConfigurationArgs()
        {
        }
        public static new CustomHttpsConfigurationArgs Empty => new CustomHttpsConfigurationArgs();
    }

    public sealed class CustomHttpsConfigurationState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// (Optional) A `custom_https_configuration` block as defined below.
        /// </summary>
        [Input("customHttpsConfiguration")]
        public Input<Inputs.CustomHttpsConfigurationCustomHttpsConfigurationGetArgs>? CustomHttpsConfigurationConfig { get; set; }

        /// <summary>
        /// Should the HTTPS protocol be enabled for this custom domain associated with the Front Door?
        /// </summary>
        [Input("customHttpsProvisioningEnabled")]
        public Input<bool>? CustomHttpsProvisioningEnabled { get; set; }

        /// <summary>
        /// The ID of the Front Door Frontend Endpoint which this configuration refers to. Changing this forces a new resource to be created.
        /// </summary>
        [Input("frontendEndpointId")]
        public Input<string>? FrontendEndpointId { get; set; }

        public CustomHttpsConfigurationState()
        {
        }
        public static new CustomHttpsConfigurationState Empty => new CustomHttpsConfigurationState();
    }
}
