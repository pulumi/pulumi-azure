// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.FrontDoor
{
    /// <summary>
    /// Manages an Azure Front Door Rules Engine configuration and rules.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using Azure = Pulumi.Azure;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var exampleResourceGroup = new Azure.Core.ResourceGroup("exampleResourceGroup", new()
    ///     {
    ///         Location = "West Europe",
    ///     });
    /// 
    ///     var exampleFrontdoor = new Azure.FrontDoor.Frontdoor("exampleFrontdoor", new()
    ///     {
    ///         ResourceGroupName = exampleResourceGroup.Name,
    ///         BackendPools = new[]
    ///         {
    ///             new Azure.FrontDoor.Inputs.FrontdoorBackendPoolArgs
    ///             {
    ///                 Name = "exampleBackendBing",
    ///                 LoadBalancingName = "exampleLoadBalancingSettings1",
    ///                 HealthProbeName = "exampleHealthProbeSetting1",
    ///                 Backends = new[]
    ///                 {
    ///                     new Azure.FrontDoor.Inputs.FrontdoorBackendPoolBackendArgs
    ///                     {
    ///                         HostHeader = "www.bing.com",
    ///                         Address = "www.bing.com",
    ///                         HttpPort = 80,
    ///                         HttpsPort = 443,
    ///                     },
    ///                 },
    ///             },
    ///         },
    ///         BackendPoolHealthProbes = new[]
    ///         {
    ///             new Azure.FrontDoor.Inputs.FrontdoorBackendPoolHealthProbeArgs
    ///             {
    ///                 Name = "exampleHealthProbeSetting1",
    ///             },
    ///         },
    ///         BackendPoolLoadBalancings = new[]
    ///         {
    ///             new Azure.FrontDoor.Inputs.FrontdoorBackendPoolLoadBalancingArgs
    ///             {
    ///                 Name = "exampleLoadBalancingSettings1",
    ///             },
    ///         },
    ///         FrontendEndpoints = new[]
    ///         {
    ///             new Azure.FrontDoor.Inputs.FrontdoorFrontendEndpointArgs
    ///             {
    ///                 Name = "exampleFrontendEndpoint1",
    ///                 HostName = "example-FrontDoor.azurefd.net",
    ///             },
    ///         },
    ///         RoutingRules = new[]
    ///         {
    ///             new Azure.FrontDoor.Inputs.FrontdoorRoutingRuleArgs
    ///             {
    ///                 Name = "exampleRoutingRule1",
    ///                 AcceptedProtocols = new[]
    ///                 {
    ///                     "Http",
    ///                     "Https",
    ///                 },
    ///                 PatternsToMatches = new[]
    ///                 {
    ///                     "/*",
    ///                 },
    ///                 FrontendEndpoints = new[]
    ///                 {
    ///                     "exampleFrontendEndpoint1",
    ///                 },
    ///             },
    ///         },
    ///     });
    /// 
    ///     var exampleRulesEngine = new Azure.FrontDoor.RulesEngine("exampleRulesEngine", new()
    ///     {
    ///         FrontdoorName = exampleFrontdoor.Name,
    ///         ResourceGroupName = exampleFrontdoor.ResourceGroupName,
    ///         Rules = new[]
    ///         {
    ///             new Azure.FrontDoor.Inputs.RulesEngineRuleArgs
    ///             {
    ///                 Name = "debuggingoutput",
    ///                 Priority = 1,
    ///                 Action = new Azure.FrontDoor.Inputs.RulesEngineRuleActionArgs
    ///                 {
    ///                     ResponseHeaders = new[]
    ///                     {
    ///                         new Azure.FrontDoor.Inputs.RulesEngineRuleActionResponseHeaderArgs
    ///                         {
    ///                             HeaderActionType = "Append",
    ///                             HeaderName = "X-TEST-HEADER",
    ///                             Value = "Append Header Rule",
    ///                         },
    ///                     },
    ///                 },
    ///             },
    ///             new Azure.FrontDoor.Inputs.RulesEngineRuleArgs
    ///             {
    ///                 Name = "overwriteorigin",
    ///                 Priority = 2,
    ///                 MatchConditions = new[]
    ///                 {
    ///                     new Azure.FrontDoor.Inputs.RulesEngineRuleMatchConditionArgs
    ///                     {
    ///                         Variable = "RequestMethod",
    ///                         Operator = "Equal",
    ///                         Values = new[]
    ///                         {
    ///                             "GET",
    ///                             "POST",
    ///                         },
    ///                     },
    ///                 },
    ///                 Action = new Azure.FrontDoor.Inputs.RulesEngineRuleActionArgs
    ///                 {
    ///                     ResponseHeaders = new[]
    ///                     {
    ///                         new Azure.FrontDoor.Inputs.RulesEngineRuleActionResponseHeaderArgs
    ///                         {
    ///                             HeaderActionType = "Overwrite",
    ///                             HeaderName = "Access-Control-Allow-Origin",
    ///                             Value = "*",
    ///                         },
    ///                         new Azure.FrontDoor.Inputs.RulesEngineRuleActionResponseHeaderArgs
    ///                         {
    ///                             HeaderActionType = "Overwrite",
    ///                             HeaderName = "Access-Control-Allow-Credentials",
    ///                             Value = "true",
    ///                         },
    ///                     },
    ///                 },
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Azure Front Door Rules Engine's can be imported using the `resource id`, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import azure:frontdoor/rulesEngine:RulesEngine example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resGroup1/providers/Microsoft.Network/frontdoors/frontdoor1/rulesengines/rule1
    /// ```
    /// </summary>
    [AzureResourceType("azure:frontdoor/rulesEngine:RulesEngine")]
    public partial class RulesEngine : global::Pulumi.CustomResource
    {
        [Output("enabled")]
        public Output<bool?> Enabled { get; private set; } = null!;

        /// <summary>
        /// The name of the Front Door instance. Changing this forces a new resource to be created.
        /// </summary>
        [Output("frontdoorName")]
        public Output<string> FrontdoorName { get; private set; } = null!;

        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// The name of the Rules engine configuration. Changing this forces a new resource to be created.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The name of the resource group. Changing this forces a new resource to be created.
        /// </summary>
        [Output("resourceGroupName")]
        public Output<string> ResourceGroupName { get; private set; } = null!;

        /// <summary>
        /// A `rule` block as defined below.
        /// </summary>
        [Output("rules")]
        public Output<ImmutableArray<Outputs.RulesEngineRule>> Rules { get; private set; } = null!;


        /// <summary>
        /// Create a RulesEngine resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public RulesEngine(string name, RulesEngineArgs args, CustomResourceOptions? options = null)
            : base("azure:frontdoor/rulesEngine:RulesEngine", name, args ?? new RulesEngineArgs(), MakeResourceOptions(options, ""))
        {
        }

        private RulesEngine(string name, Input<string> id, RulesEngineState? state = null, CustomResourceOptions? options = null)
            : base("azure:frontdoor/rulesEngine:RulesEngine", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing RulesEngine resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static RulesEngine Get(string name, Input<string> id, RulesEngineState? state = null, CustomResourceOptions? options = null)
        {
            return new RulesEngine(name, id, state, options);
        }
    }

    public sealed class RulesEngineArgs : global::Pulumi.ResourceArgs
    {
        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        /// <summary>
        /// The name of the Front Door instance. Changing this forces a new resource to be created.
        /// </summary>
        [Input("frontdoorName", required: true)]
        public Input<string> FrontdoorName { get; set; } = null!;

        /// <summary>
        /// The name of the Rules engine configuration. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The name of the resource group. Changing this forces a new resource to be created.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        [Input("rules")]
        private InputList<Inputs.RulesEngineRuleArgs>? _rules;

        /// <summary>
        /// A `rule` block as defined below.
        /// </summary>
        public InputList<Inputs.RulesEngineRuleArgs> Rules
        {
            get => _rules ?? (_rules = new InputList<Inputs.RulesEngineRuleArgs>());
            set => _rules = value;
        }

        public RulesEngineArgs()
        {
        }
        public static new RulesEngineArgs Empty => new RulesEngineArgs();
    }

    public sealed class RulesEngineState : global::Pulumi.ResourceArgs
    {
        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        /// <summary>
        /// The name of the Front Door instance. Changing this forces a new resource to be created.
        /// </summary>
        [Input("frontdoorName")]
        public Input<string>? FrontdoorName { get; set; }

        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// The name of the Rules engine configuration. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The name of the resource group. Changing this forces a new resource to be created.
        /// </summary>
        [Input("resourceGroupName")]
        public Input<string>? ResourceGroupName { get; set; }

        [Input("rules")]
        private InputList<Inputs.RulesEngineRuleGetArgs>? _rules;

        /// <summary>
        /// A `rule` block as defined below.
        /// </summary>
        public InputList<Inputs.RulesEngineRuleGetArgs> Rules
        {
            get => _rules ?? (_rules = new InputList<Inputs.RulesEngineRuleGetArgs>());
            set => _rules = value;
        }

        public RulesEngineState()
        {
        }
        public static new RulesEngineState Empty => new RulesEngineState();
    }
}
