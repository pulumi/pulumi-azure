// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.AppConfiguration
{
    public static class GetConfigurationKey
    {
        /// <summary>
        /// Use this data source to access information about an existing Azure App Configuration Key.
        /// 
        /// &gt; **Note:** App Configuration Keys are provisioned using a Data Plane API which requires the role `App Configuration Data Owner` on either the App Configuration or a parent scope (such as the Resource Group/Subscription). [More information can be found in the Azure Documentation for App Configuration](https://docs.microsoft.com/azure/azure-app-configuration/concept-enable-rbac#azure-built-in-roles-for-azure-app-configuration).
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Azure = Pulumi.Azure;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var test = Output.Create(Azure.AppConfiguration.GetConfigurationKey.InvokeAsync(new Azure.AppConfiguration.GetConfigurationKeyArgs
        ///         {
        ///             ConfigurationStoreId = azurerm_app_configuration.Appconf.Id,
        ///             Key = "appConfKey1",
        ///             Label = "somelabel",
        ///         }));
        ///         this.Value = test.Apply(test =&gt; test.Value);
        ///     }
        /// 
        ///     [Output("value")]
        ///     public Output&lt;string&gt; Value { get; set; }
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetConfigurationKeyResult> InvokeAsync(GetConfigurationKeyArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetConfigurationKeyResult>("azure:appconfiguration/getConfigurationKey:getConfigurationKey", args ?? new GetConfigurationKeyArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to access information about an existing Azure App Configuration Key.
        /// 
        /// &gt; **Note:** App Configuration Keys are provisioned using a Data Plane API which requires the role `App Configuration Data Owner` on either the App Configuration or a parent scope (such as the Resource Group/Subscription). [More information can be found in the Azure Documentation for App Configuration](https://docs.microsoft.com/azure/azure-app-configuration/concept-enable-rbac#azure-built-in-roles-for-azure-app-configuration).
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Azure = Pulumi.Azure;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var test = Output.Create(Azure.AppConfiguration.GetConfigurationKey.InvokeAsync(new Azure.AppConfiguration.GetConfigurationKeyArgs
        ///         {
        ///             ConfigurationStoreId = azurerm_app_configuration.Appconf.Id,
        ///             Key = "appConfKey1",
        ///             Label = "somelabel",
        ///         }));
        ///         this.Value = test.Apply(test =&gt; test.Value);
        ///     }
        /// 
        ///     [Output("value")]
        ///     public Output&lt;string&gt; Value { get; set; }
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetConfigurationKeyResult> Invoke(GetConfigurationKeyInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetConfigurationKeyResult>("azure:appconfiguration/getConfigurationKey:getConfigurationKey", args ?? new GetConfigurationKeyInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetConfigurationKeyArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// Specifies the id of the App Configuration.
        /// </summary>
        [Input("configurationStoreId", required: true)]
        public string ConfigurationStoreId { get; set; } = null!;

        /// <summary>
        /// The name of the App Configuration Key.
        /// </summary>
        [Input("key", required: true)]
        public string Key { get; set; } = null!;

        /// <summary>
        /// The label of the App Configuration Key.
        /// </summary>
        [Input("label")]
        public string? Label { get; set; }

        public GetConfigurationKeyArgs()
        {
        }
    }

    public sealed class GetConfigurationKeyInvokeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// Specifies the id of the App Configuration.
        /// </summary>
        [Input("configurationStoreId", required: true)]
        public Input<string> ConfigurationStoreId { get; set; } = null!;

        /// <summary>
        /// The name of the App Configuration Key.
        /// </summary>
        [Input("key", required: true)]
        public Input<string> Key { get; set; } = null!;

        /// <summary>
        /// The label of the App Configuration Key.
        /// </summary>
        [Input("label")]
        public Input<string>? Label { get; set; }

        public GetConfigurationKeyInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetConfigurationKeyResult
    {
        public readonly string ConfigurationStoreId;
        /// <summary>
        /// The content type of the App Configuration Key.
        /// </summary>
        public readonly string ContentType;
        /// <summary>
        /// The ETag of the key.
        /// </summary>
        public readonly string Etag;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string Key;
        public readonly string? Label;
        /// <summary>
        /// Is this App Configuration Key be Locked to prevent changes.
        /// </summary>
        public readonly bool Locked;
        /// <summary>
        /// A mapping of tags assigned to the resource.
        /// </summary>
        public readonly ImmutableDictionary<string, string> Tags;
        /// <summary>
        /// The type of the App Configuration Key. It can either be `kv` (simple [key/value](https://docs.microsoft.com/en-us/azure/azure-app-configuration/concept-key-value)) or `vault` (where the value is a reference to a [Key Vault Secret](https://azure.microsoft.com/en-gb/services/key-vault/).
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// The value of the App Configuration Key.
        /// </summary>
        public readonly string Value;
        /// <summary>
        /// The ID of the vault secret this App Configuration Key refers to, when `type` is `vault`.
        /// </summary>
        public readonly string VaultKeyReference;

        [OutputConstructor]
        private GetConfigurationKeyResult(
            string configurationStoreId,

            string contentType,

            string etag,

            string id,

            string key,

            string? label,

            bool locked,

            ImmutableDictionary<string, string> tags,

            string type,

            string value,

            string vaultKeyReference)
        {
            ConfigurationStoreId = configurationStoreId;
            ContentType = contentType;
            Etag = etag;
            Id = id;
            Key = key;
            Label = label;
            Locked = locked;
            Tags = tags;
            Type = type;
            Value = value;
            VaultKeyReference = vaultKeyReference;
        }
    }
}
