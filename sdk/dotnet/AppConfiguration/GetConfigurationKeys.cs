// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.AppConfiguration
{
    public static class GetConfigurationKeys
    {
        /// <summary>
        /// Use this data source to access information about existing Azure App Configuration Keys.
        /// 
        /// &gt; **Note:** App Configuration Keys are provisioned using a Data Plane API which requires the role `App Configuration Data Owner` on either the App Configuration or a parent scope (such as the Resource Group/Subscription). [More information can be found in the Azure Documentation for App Configuration](https://docs.microsoft.com/azure/azure-app-configuration/concept-enable-rbac#azure-built-in-roles-for-azure-app-configuration).
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Azure = Pulumi.Azure;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var test = Output.Create(Azure.AppConfiguration.GetConfigurationKeys.InvokeAsync(new Azure.AppConfiguration.GetConfigurationKeysArgs
        ///         {
        ///             ConfigurationStoreId = azurerm_app_configuration.Appconf.Id,
        ///         }));
        ///         this.Value = test.Apply(test =&gt; test.Items);
        ///     }
        /// 
        ///     [Output("value")]
        ///     public Output&lt;string&gt; Value { get; set; }
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetConfigurationKeysResult> InvokeAsync(GetConfigurationKeysArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetConfigurationKeysResult>("azure:appconfiguration/getConfigurationKeys:getConfigurationKeys", args ?? new GetConfigurationKeysArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to access information about existing Azure App Configuration Keys.
        /// 
        /// &gt; **Note:** App Configuration Keys are provisioned using a Data Plane API which requires the role `App Configuration Data Owner` on either the App Configuration or a parent scope (such as the Resource Group/Subscription). [More information can be found in the Azure Documentation for App Configuration](https://docs.microsoft.com/azure/azure-app-configuration/concept-enable-rbac#azure-built-in-roles-for-azure-app-configuration).
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Azure = Pulumi.Azure;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var test = Output.Create(Azure.AppConfiguration.GetConfigurationKeys.InvokeAsync(new Azure.AppConfiguration.GetConfigurationKeysArgs
        ///         {
        ///             ConfigurationStoreId = azurerm_app_configuration.Appconf.Id,
        ///         }));
        ///         this.Value = test.Apply(test =&gt; test.Items);
        ///     }
        /// 
        ///     [Output("value")]
        ///     public Output&lt;string&gt; Value { get; set; }
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetConfigurationKeysResult> Invoke(GetConfigurationKeysInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetConfigurationKeysResult>("azure:appconfiguration/getConfigurationKeys:getConfigurationKeys", args ?? new GetConfigurationKeysInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetConfigurationKeysArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// Specifies the id of the App Configuration.
        /// </summary>
        [Input("configurationStoreId", required: true)]
        public string ConfigurationStoreId { get; set; } = null!;

        /// <summary>
        /// The name of the App Configuration Keys to look up.
        /// </summary>
        [Input("key")]
        public string? Key { get; set; }

        /// <summary>
        /// The label of the App Configuration Keys tp look up.
        /// </summary>
        [Input("label")]
        public string? Label { get; set; }

        public GetConfigurationKeysArgs()
        {
        }
    }

    public sealed class GetConfigurationKeysInvokeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// Specifies the id of the App Configuration.
        /// </summary>
        [Input("configurationStoreId", required: true)]
        public Input<string> ConfigurationStoreId { get; set; } = null!;

        /// <summary>
        /// The name of the App Configuration Keys to look up.
        /// </summary>
        [Input("key")]
        public Input<string>? Key { get; set; }

        /// <summary>
        /// The label of the App Configuration Keys tp look up.
        /// </summary>
        [Input("label")]
        public Input<string>? Label { get; set; }

        public GetConfigurationKeysInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetConfigurationKeysResult
    {
        public readonly string ConfigurationStoreId;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// A list of `items` blocks as defined below.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetConfigurationKeysItemResult> Items;
        /// <summary>
        /// The name of the App Configuration Key.
        /// </summary>
        public readonly string? Key;
        /// <summary>
        /// The label of the App Configuration Key.
        /// </summary>
        public readonly string? Label;

        [OutputConstructor]
        private GetConfigurationKeysResult(
            string configurationStoreId,

            string id,

            ImmutableArray<Outputs.GetConfigurationKeysItemResult> items,

            string? key,

            string? label)
        {
            ConfigurationStoreId = configurationStoreId;
            Id = id;
            Items = items;
            Key = key;
            Label = label;
        }
    }
}
