// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.ApiManagement
{
    /// <summary>
    /// Manages a API Management Custom Domain.
    /// 
    /// ## Disclaimers
    /// 
    /// &gt; **Note:** It's possible to define Custom Domains both within the `azure.apimanagement.Service` resource via the `hostname_configurations` block and by using this resource. However it's not possible to use both methods to manage Custom Domains within an API Management Service, since there will be conflicts.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Azure = Pulumi.Azure;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var exampleResourceGroup = new Azure.Core.ResourceGroup("exampleResourceGroup", new()
    ///     {
    ///         Location = "West Europe",
    ///     });
    /// 
    ///     var exampleKeyVault = Azure.KeyVault.GetKeyVault.Invoke(new()
    ///     {
    ///         Name = "mykeyvault",
    ///         ResourceGroupName = "some-resource-group",
    ///     });
    /// 
    ///     var exampleService = new Azure.ApiManagement.Service("exampleService", new()
    ///     {
    ///         Location = exampleResourceGroup.Location,
    ///         ResourceGroupName = exampleResourceGroup.Name,
    ///         PublisherName = "pub1",
    ///         PublisherEmail = "pub1@email.com",
    ///         SkuName = "Developer_1",
    ///     });
    /// 
    ///     var exampleCertificate = new Azure.KeyVault.Certificate("exampleCertificate", new()
    ///     {
    ///         KeyVaultId = exampleKeyVault.Apply(getKeyVaultResult =&gt; getKeyVaultResult.Id),
    ///         CertificatePolicy = new Azure.KeyVault.Inputs.CertificateCertificatePolicyArgs
    ///         {
    ///             IssuerParameters = new Azure.KeyVault.Inputs.CertificateCertificatePolicyIssuerParametersArgs
    ///             {
    ///                 Name = "Self",
    ///             },
    ///             KeyProperties = new Azure.KeyVault.Inputs.CertificateCertificatePolicyKeyPropertiesArgs
    ///             {
    ///                 Exportable = true,
    ///                 KeySize = 2048,
    ///                 KeyType = "RSA",
    ///                 ReuseKey = true,
    ///             },
    ///             LifetimeActions = new[]
    ///             {
    ///                 new Azure.KeyVault.Inputs.CertificateCertificatePolicyLifetimeActionArgs
    ///                 {
    ///                     Action = new Azure.KeyVault.Inputs.CertificateCertificatePolicyLifetimeActionActionArgs
    ///                     {
    ///                         ActionType = "AutoRenew",
    ///                     },
    ///                     Trigger = new Azure.KeyVault.Inputs.CertificateCertificatePolicyLifetimeActionTriggerArgs
    ///                     {
    ///                         DaysBeforeExpiry = 30,
    ///                     },
    ///                 },
    ///             },
    ///             SecretProperties = new Azure.KeyVault.Inputs.CertificateCertificatePolicySecretPropertiesArgs
    ///             {
    ///                 ContentType = "application/x-pkcs12",
    ///             },
    ///             X509CertificateProperties = new Azure.KeyVault.Inputs.CertificateCertificatePolicyX509CertificatePropertiesArgs
    ///             {
    ///                 KeyUsages = new[]
    ///                 {
    ///                     "cRLSign",
    ///                     "dataEncipherment",
    ///                     "digitalSignature",
    ///                     "keyAgreement",
    ///                     "keyCertSign",
    ///                     "keyEncipherment",
    ///                 },
    ///                 Subject = "CN=api.example.com",
    ///                 ValidityInMonths = 12,
    ///                 SubjectAlternativeNames = new Azure.KeyVault.Inputs.CertificateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesArgs
    ///                 {
    ///                     DnsNames = new[]
    ///                     {
    ///                         "api.example.com",
    ///                         "portal.example.com",
    ///                     },
    ///                 },
    ///             },
    ///         },
    ///     });
    /// 
    ///     var exampleCustomDomain = new Azure.ApiManagement.CustomDomain("exampleCustomDomain", new()
    ///     {
    ///         ApiManagementId = exampleService.Id,
    ///         Gateways = new[]
    ///         {
    ///             new Azure.ApiManagement.Inputs.CustomDomainGatewayArgs
    ///             {
    ///                 HostName = "api.example.com",
    ///                 KeyVaultId = exampleCertificate.VersionlessSecretId,
    ///             },
    ///         },
    ///         DeveloperPortals = new[]
    ///         {
    ///             new Azure.ApiManagement.Inputs.CustomDomainDeveloperPortalArgs
    ///             {
    ///                 HostName = "portal.example.com",
    ///                 KeyVaultId = exampleCertificate.VersionlessSecretId,
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// API Management Custom Domains can be imported using the `resource id`, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import azure:apimanagement/customDomain:CustomDomain example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.ApiManagement/service/instance1/customDomains/default
    /// ```
    /// </summary>
    [AzureResourceType("azure:apimanagement/customDomain:CustomDomain")]
    public partial class CustomDomain : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The ID of the API Management service for which to configure Custom Domains. Changing this forces a new API Management Custom Domain resource to be created.
        /// </summary>
        [Output("apiManagementId")]
        public Output<string> ApiManagementId { get; private set; } = null!;

        /// <summary>
        /// One or more `developer_portal` blocks as defined below.
        /// </summary>
        [Output("developerPortals")]
        public Output<ImmutableArray<Outputs.CustomDomainDeveloperPortal>> DeveloperPortals { get; private set; } = null!;

        /// <summary>
        /// One or more `gateway` blocks as defined below.
        /// </summary>
        [Output("gateways")]
        public Output<ImmutableArray<Outputs.CustomDomainGateway>> Gateways { get; private set; } = null!;

        /// <summary>
        /// One or more `management` blocks as defined below.
        /// </summary>
        [Output("managements")]
        public Output<ImmutableArray<Outputs.CustomDomainManagement>> Managements { get; private set; } = null!;

        /// <summary>
        /// One or more `portal` blocks as defined below.
        /// </summary>
        [Output("portals")]
        public Output<ImmutableArray<Outputs.CustomDomainPortal>> Portals { get; private set; } = null!;

        /// <summary>
        /// One or more `scm` blocks as defined below.
        /// </summary>
        [Output("scms")]
        public Output<ImmutableArray<Outputs.CustomDomainScm>> Scms { get; private set; } = null!;


        /// <summary>
        /// Create a CustomDomain resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public CustomDomain(string name, CustomDomainArgs args, CustomResourceOptions? options = null)
            : base("azure:apimanagement/customDomain:CustomDomain", name, args ?? new CustomDomainArgs(), MakeResourceOptions(options, ""))
        {
        }

        private CustomDomain(string name, Input<string> id, CustomDomainState? state = null, CustomResourceOptions? options = null)
            : base("azure:apimanagement/customDomain:CustomDomain", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing CustomDomain resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static CustomDomain Get(string name, Input<string> id, CustomDomainState? state = null, CustomResourceOptions? options = null)
        {
            return new CustomDomain(name, id, state, options);
        }
    }

    public sealed class CustomDomainArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the API Management service for which to configure Custom Domains. Changing this forces a new API Management Custom Domain resource to be created.
        /// </summary>
        [Input("apiManagementId", required: true)]
        public Input<string> ApiManagementId { get; set; } = null!;

        [Input("developerPortals")]
        private InputList<Inputs.CustomDomainDeveloperPortalArgs>? _developerPortals;

        /// <summary>
        /// One or more `developer_portal` blocks as defined below.
        /// </summary>
        public InputList<Inputs.CustomDomainDeveloperPortalArgs> DeveloperPortals
        {
            get => _developerPortals ?? (_developerPortals = new InputList<Inputs.CustomDomainDeveloperPortalArgs>());
            set => _developerPortals = value;
        }

        [Input("gateways")]
        private InputList<Inputs.CustomDomainGatewayArgs>? _gateways;

        /// <summary>
        /// One or more `gateway` blocks as defined below.
        /// </summary>
        public InputList<Inputs.CustomDomainGatewayArgs> Gateways
        {
            get => _gateways ?? (_gateways = new InputList<Inputs.CustomDomainGatewayArgs>());
            set => _gateways = value;
        }

        [Input("managements")]
        private InputList<Inputs.CustomDomainManagementArgs>? _managements;

        /// <summary>
        /// One or more `management` blocks as defined below.
        /// </summary>
        public InputList<Inputs.CustomDomainManagementArgs> Managements
        {
            get => _managements ?? (_managements = new InputList<Inputs.CustomDomainManagementArgs>());
            set => _managements = value;
        }

        [Input("portals")]
        private InputList<Inputs.CustomDomainPortalArgs>? _portals;

        /// <summary>
        /// One or more `portal` blocks as defined below.
        /// </summary>
        public InputList<Inputs.CustomDomainPortalArgs> Portals
        {
            get => _portals ?? (_portals = new InputList<Inputs.CustomDomainPortalArgs>());
            set => _portals = value;
        }

        [Input("scms")]
        private InputList<Inputs.CustomDomainScmArgs>? _scms;

        /// <summary>
        /// One or more `scm` blocks as defined below.
        /// </summary>
        public InputList<Inputs.CustomDomainScmArgs> Scms
        {
            get => _scms ?? (_scms = new InputList<Inputs.CustomDomainScmArgs>());
            set => _scms = value;
        }

        public CustomDomainArgs()
        {
        }
        public static new CustomDomainArgs Empty => new CustomDomainArgs();
    }

    public sealed class CustomDomainState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the API Management service for which to configure Custom Domains. Changing this forces a new API Management Custom Domain resource to be created.
        /// </summary>
        [Input("apiManagementId")]
        public Input<string>? ApiManagementId { get; set; }

        [Input("developerPortals")]
        private InputList<Inputs.CustomDomainDeveloperPortalGetArgs>? _developerPortals;

        /// <summary>
        /// One or more `developer_portal` blocks as defined below.
        /// </summary>
        public InputList<Inputs.CustomDomainDeveloperPortalGetArgs> DeveloperPortals
        {
            get => _developerPortals ?? (_developerPortals = new InputList<Inputs.CustomDomainDeveloperPortalGetArgs>());
            set => _developerPortals = value;
        }

        [Input("gateways")]
        private InputList<Inputs.CustomDomainGatewayGetArgs>? _gateways;

        /// <summary>
        /// One or more `gateway` blocks as defined below.
        /// </summary>
        public InputList<Inputs.CustomDomainGatewayGetArgs> Gateways
        {
            get => _gateways ?? (_gateways = new InputList<Inputs.CustomDomainGatewayGetArgs>());
            set => _gateways = value;
        }

        [Input("managements")]
        private InputList<Inputs.CustomDomainManagementGetArgs>? _managements;

        /// <summary>
        /// One or more `management` blocks as defined below.
        /// </summary>
        public InputList<Inputs.CustomDomainManagementGetArgs> Managements
        {
            get => _managements ?? (_managements = new InputList<Inputs.CustomDomainManagementGetArgs>());
            set => _managements = value;
        }

        [Input("portals")]
        private InputList<Inputs.CustomDomainPortalGetArgs>? _portals;

        /// <summary>
        /// One or more `portal` blocks as defined below.
        /// </summary>
        public InputList<Inputs.CustomDomainPortalGetArgs> Portals
        {
            get => _portals ?? (_portals = new InputList<Inputs.CustomDomainPortalGetArgs>());
            set => _portals = value;
        }

        [Input("scms")]
        private InputList<Inputs.CustomDomainScmGetArgs>? _scms;

        /// <summary>
        /// One or more `scm` blocks as defined below.
        /// </summary>
        public InputList<Inputs.CustomDomainScmGetArgs> Scms
        {
            get => _scms ?? (_scms = new InputList<Inputs.CustomDomainScmGetArgs>());
            set => _scms = value;
        }

        public CustomDomainState()
        {
        }
        public static new CustomDomainState Empty => new CustomDomainState();
    }
}
