// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.ApiManagement
{
    /// <summary>
    /// Manages an API Management Workspace Policy.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Azure = Pulumi.Azure;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Azure.Core.ResourceGroup("example", new()
    ///     {
    ///         Name = "example-resources",
    ///         Location = "West Europe",
    ///     });
    /// 
    ///     var exampleService = new Azure.ApiManagement.Service("example", new()
    ///     {
    ///         Name = "example-apimanagement",
    ///         Location = example.Location,
    ///         ResourceGroupName = example.Name,
    ///         PublisherName = "pub1",
    ///         PublisherEmail = "pub1@email.com",
    ///         SkuName = "Premium_1",
    ///     });
    /// 
    ///     var exampleWorkspace = new Azure.ApiManagement.Workspace("example", new()
    ///     {
    ///         Name = "example-workspace",
    ///         ApiManagementId = exampleService.Id,
    ///         DisplayName = "my workspace",
    ///     });
    /// 
    ///     var exampleWorkspacePolicy = new Azure.ApiManagement.WorkspacePolicy("example", new()
    ///     {
    ///         ApiManagementWorkspaceId = exampleWorkspace.Id,
    ///         XmlContent = @"&lt;policies&gt;
    ///   &lt;inbound&gt;
    ///     &lt;find-and-replace from=""abc"" to=""xyz"" /&gt;
    ///   &lt;/inbound&gt;
    /// &lt;/policies&gt;
    /// ",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## API Providers
    /// 
    /// &lt;!-- This section is generated, changes will be overwritten --&gt;
    /// This resource uses the following Azure API Providers:
    /// 
    /// * `Microsoft.ApiManagement` - 2024-05-01
    /// 
    /// ## Import
    /// 
    /// API Management Workspace Policies can be imported using the `resource id`, e.g.
    /// 
    /// ```sh
    /// $ pulumi import azure:apimanagement/workspacePolicy:WorkspacePolicy example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.ApiManagement/service/service1/workspaces/workspace1
    /// ```
    /// </summary>
    [AzureResourceType("azure:apimanagement/workspacePolicy:WorkspacePolicy")]
    public partial class WorkspacePolicy : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Specifies the ID of the API Management Workspace. Changing this forces a new resource to be created.
        /// </summary>
        [Output("apiManagementWorkspaceId")]
        public Output<string> ApiManagementWorkspaceId { get; private set; } = null!;

        /// <summary>
        /// Specifies the API Management Workspace Policy as an XML string.
        /// </summary>
        [Output("xmlContent")]
        public Output<string> XmlContent { get; private set; } = null!;

        /// <summary>
        /// Specifies a publicly accessible URL to a policy XML document.
        /// 
        /// &gt; **Note:** Exactly one of `xml_content` or `xml_link` must be specified.
        /// </summary>
        [Output("xmlLink")]
        public Output<string?> XmlLink { get; private set; } = null!;


        /// <summary>
        /// Create a WorkspacePolicy resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public WorkspacePolicy(string name, WorkspacePolicyArgs args, CustomResourceOptions? options = null)
            : base("azure:apimanagement/workspacePolicy:WorkspacePolicy", name, args ?? new WorkspacePolicyArgs(), MakeResourceOptions(options, ""))
        {
        }

        private WorkspacePolicy(string name, Input<string> id, WorkspacePolicyState? state = null, CustomResourceOptions? options = null)
            : base("azure:apimanagement/workspacePolicy:WorkspacePolicy", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing WorkspacePolicy resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static WorkspacePolicy Get(string name, Input<string> id, WorkspacePolicyState? state = null, CustomResourceOptions? options = null)
        {
            return new WorkspacePolicy(name, id, state, options);
        }
    }

    public sealed class WorkspacePolicyArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies the ID of the API Management Workspace. Changing this forces a new resource to be created.
        /// </summary>
        [Input("apiManagementWorkspaceId", required: true)]
        public Input<string> ApiManagementWorkspaceId { get; set; } = null!;

        /// <summary>
        /// Specifies the API Management Workspace Policy as an XML string.
        /// </summary>
        [Input("xmlContent")]
        public Input<string>? XmlContent { get; set; }

        /// <summary>
        /// Specifies a publicly accessible URL to a policy XML document.
        /// 
        /// &gt; **Note:** Exactly one of `xml_content` or `xml_link` must be specified.
        /// </summary>
        [Input("xmlLink")]
        public Input<string>? XmlLink { get; set; }

        public WorkspacePolicyArgs()
        {
        }
        public static new WorkspacePolicyArgs Empty => new WorkspacePolicyArgs();
    }

    public sealed class WorkspacePolicyState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies the ID of the API Management Workspace. Changing this forces a new resource to be created.
        /// </summary>
        [Input("apiManagementWorkspaceId")]
        public Input<string>? ApiManagementWorkspaceId { get; set; }

        /// <summary>
        /// Specifies the API Management Workspace Policy as an XML string.
        /// </summary>
        [Input("xmlContent")]
        public Input<string>? XmlContent { get; set; }

        /// <summary>
        /// Specifies a publicly accessible URL to a policy XML document.
        /// 
        /// &gt; **Note:** Exactly one of `xml_content` or `xml_link` must be specified.
        /// </summary>
        [Input("xmlLink")]
        public Input<string>? XmlLink { get; set; }

        public WorkspacePolicyState()
        {
        }
        public static new WorkspacePolicyState Empty => new WorkspacePolicyState();
    }
}
