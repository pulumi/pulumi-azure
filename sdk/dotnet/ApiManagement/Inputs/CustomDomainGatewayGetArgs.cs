// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.ApiManagement.Inputs
{

    public sealed class CustomDomainGatewayGetArgs : global::Pulumi.ResourceArgs
    {
        [Input("certificate")]
        private Input<string>? _certificate;

        /// <summary>
        /// The Base64 Encoded Certificate. (Mutually exclusive with `key_vault_id`.)
        /// </summary>
        public Input<string>? Certificate
        {
            get => _certificate;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _certificate = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("certificatePassword")]
        private Input<string>? _certificatePassword;

        /// <summary>
        /// The password associated with the certificate provided above.
        /// </summary>
        public Input<string>? CertificatePassword
        {
            get => _certificatePassword;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _certificatePassword = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("certificateSource")]
        public Input<string>? CertificateSource { get; set; }

        [Input("certificateStatus")]
        public Input<string>? CertificateStatus { get; set; }

        /// <summary>
        /// Is the certificate associated with this Hostname the Default SSL Certificate? This is used when an SNI header isn't specified by a client. Defaults to `false`.
        /// </summary>
        [Input("defaultSslBinding")]
        public Input<bool>? DefaultSslBinding { get; set; }

        [Input("expiry")]
        public Input<string>? Expiry { get; set; }

        /// <summary>
        /// The Hostname to use for the API Proxy Endpoint.
        /// </summary>
        [Input("hostName", required: true)]
        public Input<string> HostName { get; set; } = null!;

        /// <summary>
        /// The ID of the Key Vault Secret containing the SSL Certificate, which must be should be of the type application/x-pkcs12.
        /// </summary>
        [Input("keyVaultId")]
        public Input<string>? KeyVaultId { get; set; }

        /// <summary>
        /// Should Client Certificate Negotiation be enabled for this Hostname? Defaults to `false`.
        /// </summary>
        [Input("negotiateClientCertificate")]
        public Input<bool>? NegotiateClientCertificate { get; set; }

        [Input("sslKeyvaultIdentityClientId")]
        public Input<string>? SslKeyvaultIdentityClientId { get; set; }

        [Input("subject")]
        public Input<string>? Subject { get; set; }

        [Input("thumbprint")]
        public Input<string>? Thumbprint { get; set; }

        public CustomDomainGatewayGetArgs()
        {
        }
        public static new CustomDomainGatewayGetArgs Empty => new CustomDomainGatewayGetArgs();
    }
}
