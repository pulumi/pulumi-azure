// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.ApiManagement.Inputs
{

    public sealed class ServiceHostnameConfigurationManagementArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The Base64 Encoded Certificate.
        /// </summary>
        [Input("certificate")]
        public Input<string>? Certificate { get; set; }

        /// <summary>
        /// The password associated with the certificate provided above.
        /// </summary>
        [Input("certificatePassword")]
        public Input<string>? CertificatePassword { get; set; }

        /// <summary>
        /// The expiration date of the certificate in RFC3339 format: `2000-01-02T03:04:05Z`.
        /// </summary>
        [Input("expiry")]
        public Input<string>? Expiry { get; set; }

        /// <summary>
        /// The Hostname to use for the Management API.
        /// </summary>
        [Input("hostName", required: true)]
        public Input<string> HostName { get; set; } = null!;

        /// <summary>
        /// The ID of the Key Vault Secret containing the SSL Certificate, which must be should be of the type `application/x-pkcs12`.
        /// </summary>
        [Input("keyVaultId")]
        public Input<string>? KeyVaultId { get; set; }

        /// <summary>
        /// Should Client Certificate Negotiation be enabled for this Hostname? Defaults to `false`.
        /// </summary>
        [Input("negotiateClientCertificate")]
        public Input<bool>? NegotiateClientCertificate { get; set; }

        /// <summary>
        /// The client id of the System or User Assigned Managed identity generated by Azure AD, which has `GET` access to the keyVault containing the SSL certificate.
        /// </summary>
        [Input("sslKeyvaultIdentityClientId")]
        public Input<string>? SslKeyvaultIdentityClientId { get; set; }

        /// <summary>
        /// The subject of the certificate.
        /// </summary>
        [Input("subject")]
        public Input<string>? Subject { get; set; }

        /// <summary>
        /// The thumbprint of the certificate.
        /// </summary>
        [Input("thumbprint")]
        public Input<string>? Thumbprint { get; set; }

        public ServiceHostnameConfigurationManagementArgs()
        {
        }
    }
}
