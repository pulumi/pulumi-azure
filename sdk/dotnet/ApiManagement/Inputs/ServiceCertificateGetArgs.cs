// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.ApiManagement.Inputs
{

    public sealed class ServiceCertificateGetArgs : global::Pulumi.ResourceArgs
    {
        [Input("certificatePassword")]
        private Input<string>? _certificatePassword;

        /// <summary>
        /// The password for the certificate.
        /// </summary>
        public Input<string>? CertificatePassword
        {
            get => _certificatePassword;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _certificatePassword = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("encodedCertificate", required: true)]
        private Input<string>? _encodedCertificate;

        /// <summary>
        /// The Base64 Encoded PFX or Base64 Encoded X.509 Certificate.
        /// </summary>
        public Input<string>? EncodedCertificate
        {
            get => _encodedCertificate;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _encodedCertificate = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// The expiration date of the certificate in RFC3339 format: `2000-01-02T03:04:05Z`.
        /// </summary>
        [Input("expiry")]
        public Input<string>? Expiry { get; set; }

        /// <summary>
        /// The name of the Certificate Store where this certificate should be stored. Possible values are `CertificateAuthority` and `Root`.
        /// </summary>
        [Input("storeName", required: true)]
        public Input<string> StoreName { get; set; } = null!;

        /// <summary>
        /// The subject of the certificate.
        /// </summary>
        [Input("subject")]
        public Input<string>? Subject { get; set; }

        /// <summary>
        /// The thumbprint of the certificate.
        /// </summary>
        [Input("thumbprint")]
        public Input<string>? Thumbprint { get; set; }

        public ServiceCertificateGetArgs()
        {
        }
        public static new ServiceCertificateGetArgs Empty => new ServiceCertificateGetArgs();
    }
}
