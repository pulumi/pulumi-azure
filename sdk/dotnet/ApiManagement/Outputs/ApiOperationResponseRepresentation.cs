// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.ApiManagement.Outputs
{

    [OutputType]
    public sealed class ApiOperationResponseRepresentation
    {
        /// <summary>
        /// The Content Type of this representation, such as `application/json`.
        /// </summary>
        public readonly string ContentType;
        /// <summary>
        /// One or more `Example` blocks as defined above.
        /// </summary>
        public readonly ImmutableArray<Outputs.ApiOperationResponseRepresentationExample> Examples;
        /// <summary>
        /// One or more `FormParameter` block as defined above.
        /// 
        /// &gt; **Note:** This is Required when `ContentType` is set to `application/x-www-form-urlencoded` or `multipart/form-data`.
        /// </summary>
        public readonly ImmutableArray<Outputs.ApiOperationResponseRepresentationFormParameter> FormParameters;
        /// <summary>
        /// The ID of an API Management Schema which represents this Response.
        /// 
        /// &gt; **Note:** This can only be specified when `ContentType` is not set to `application/x-www-form-urlencoded` or `multipart/form-data`.
        /// </summary>
        public readonly string? SchemaId;
        /// <summary>
        /// The Type Name defined by the Schema.
        /// 
        /// &gt; **Note:** This can only be specified when `ContentType` is not set to `application/x-www-form-urlencoded` or `multipart/form-data`.
        /// </summary>
        public readonly string? TypeName;

        [OutputConstructor]
        private ApiOperationResponseRepresentation(
            string contentType,

            ImmutableArray<Outputs.ApiOperationResponseRepresentationExample> examples,

            ImmutableArray<Outputs.ApiOperationResponseRepresentationFormParameter> formParameters,

            string? schemaId,

            string? typeName)
        {
            ContentType = contentType;
            Examples = examples;
            FormParameters = formParameters;
            SchemaId = schemaId;
            TypeName = typeName;
        }
    }
}
