// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.ApiManagement.Outputs
{

    [OutputType]
    public sealed class ServiceSecurity
    {
        /// <summary>
        /// Should SSL 3.0 be enabled on the backend of the gateway? Defaults to `false`.
        /// </summary>
        public readonly bool? EnableBackendSsl30;
        /// <summary>
        /// Should TLS 1.0 be enabled on the backend of the gateway? Defaults to `false`.
        /// </summary>
        public readonly bool? EnableBackendTls10;
        /// <summary>
        /// Should TLS 1.1 be enabled on the backend of the gateway? Defaults to `false`.
        /// </summary>
        public readonly bool? EnableBackendTls11;
        /// <summary>
        /// Should SSL 3.0 be enabled on the frontend of the gateway? Defaults to `false`.
        /// </summary>
        public readonly bool? EnableFrontendSsl30;
        /// <summary>
        /// Should TLS 1.0 be enabled on the frontend of the gateway? Defaults to `false`.
        /// </summary>
        public readonly bool? EnableFrontendTls10;
        /// <summary>
        /// Should TLS 1.1 be enabled on the frontend of the gateway? Defaults to `false`.
        /// </summary>
        public readonly bool? EnableFrontendTls11;
        /// <summary>
        /// Should the `TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA` cipher be enabled? Defaults to `false`.
        /// </summary>
        public readonly bool? TlsEcdheEcdsaWithAes128CbcShaCiphersEnabled;
        /// <summary>
        /// Should the `TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA` cipher be enabled? Defaults to `false`.
        /// </summary>
        public readonly bool? TlsEcdheEcdsaWithAes256CbcShaCiphersEnabled;
        /// <summary>
        /// Should the `TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA` cipher be enabled? Defaults to `false`.
        /// </summary>
        public readonly bool? TlsEcdheRsaWithAes128CbcShaCiphersEnabled;
        /// <summary>
        /// Should the `TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA` cipher be enabled? Defaults to `false`.
        /// </summary>
        public readonly bool? TlsEcdheRsaWithAes256CbcShaCiphersEnabled;
        /// <summary>
        /// Should the `TLS_RSA_WITH_AES_128_CBC_SHA256` cipher be enabled? Defaults to `false`.
        /// </summary>
        public readonly bool? TlsRsaWithAes128CbcSha256CiphersEnabled;
        /// <summary>
        /// Should the `TLS_RSA_WITH_AES_128_CBC_SHA` cipher be enabled? Defaults to `false`.
        /// </summary>
        public readonly bool? TlsRsaWithAes128CbcShaCiphersEnabled;
        /// <summary>
        /// Should the `TLS_RSA_WITH_AES_128_GCM_SHA256` cipher be enabled? Defaults to `false`.
        /// </summary>
        public readonly bool? TlsRsaWithAes128GcmSha256CiphersEnabled;
        /// <summary>
        /// Should the `TLS_RSA_WITH_AES_256_CBC_SHA256` cipher be enabled? Defaults to `false`.
        /// </summary>
        public readonly bool? TlsRsaWithAes256CbcSha256CiphersEnabled;
        /// <summary>
        /// Should the `TLS_RSA_WITH_AES_256_CBC_SHA` cipher be enabled? Defaults to `false`.
        /// </summary>
        public readonly bool? TlsRsaWithAes256CbcShaCiphersEnabled;
        /// <summary>
        /// Should the `TLS_RSA_WITH_AES_256_GCM_SHA384` cipher be enabled? Defaults to `false`.
        /// </summary>
        public readonly bool? TlsRsaWithAes256GcmSha384CiphersEnabled;
        /// <summary>
        /// Should the `TLS_RSA_WITH_3DES_EDE_CBC_SHA` cipher be enabled for alL TLS versions (1.0, 1.1 and 1.2)? Defaults to `false`.
        /// </summary>
        public readonly bool? TripleDesCiphersEnabled;

        [OutputConstructor]
        private ServiceSecurity(
            bool? enableBackendSsl30,

            bool? enableBackendTls10,

            bool? enableBackendTls11,

            bool? enableFrontendSsl30,

            bool? enableFrontendTls10,

            bool? enableFrontendTls11,

            bool? tlsEcdheEcdsaWithAes128CbcShaCiphersEnabled,

            bool? tlsEcdheEcdsaWithAes256CbcShaCiphersEnabled,

            bool? tlsEcdheRsaWithAes128CbcShaCiphersEnabled,

            bool? tlsEcdheRsaWithAes256CbcShaCiphersEnabled,

            bool? tlsRsaWithAes128CbcSha256CiphersEnabled,

            bool? tlsRsaWithAes128CbcShaCiphersEnabled,

            bool? tlsRsaWithAes128GcmSha256CiphersEnabled,

            bool? tlsRsaWithAes256CbcSha256CiphersEnabled,

            bool? tlsRsaWithAes256CbcShaCiphersEnabled,

            bool? tlsRsaWithAes256GcmSha384CiphersEnabled,

            bool? tripleDesCiphersEnabled)
        {
            EnableBackendSsl30 = enableBackendSsl30;
            EnableBackendTls10 = enableBackendTls10;
            EnableBackendTls11 = enableBackendTls11;
            EnableFrontendSsl30 = enableFrontendSsl30;
            EnableFrontendTls10 = enableFrontendTls10;
            EnableFrontendTls11 = enableFrontendTls11;
            TlsEcdheEcdsaWithAes128CbcShaCiphersEnabled = tlsEcdheEcdsaWithAes128CbcShaCiphersEnabled;
            TlsEcdheEcdsaWithAes256CbcShaCiphersEnabled = tlsEcdheEcdsaWithAes256CbcShaCiphersEnabled;
            TlsEcdheRsaWithAes128CbcShaCiphersEnabled = tlsEcdheRsaWithAes128CbcShaCiphersEnabled;
            TlsEcdheRsaWithAes256CbcShaCiphersEnabled = tlsEcdheRsaWithAes256CbcShaCiphersEnabled;
            TlsRsaWithAes128CbcSha256CiphersEnabled = tlsRsaWithAes128CbcSha256CiphersEnabled;
            TlsRsaWithAes128CbcShaCiphersEnabled = tlsRsaWithAes128CbcShaCiphersEnabled;
            TlsRsaWithAes128GcmSha256CiphersEnabled = tlsRsaWithAes128GcmSha256CiphersEnabled;
            TlsRsaWithAes256CbcSha256CiphersEnabled = tlsRsaWithAes256CbcSha256CiphersEnabled;
            TlsRsaWithAes256CbcShaCiphersEnabled = tlsRsaWithAes256CbcShaCiphersEnabled;
            TlsRsaWithAes256GcmSha384CiphersEnabled = tlsRsaWithAes256GcmSha384CiphersEnabled;
            TripleDesCiphersEnabled = tripleDesCiphersEnabled;
        }
    }
}
