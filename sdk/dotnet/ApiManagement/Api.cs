// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.ApiManagement
{
    /// <summary>
    /// Manages an API within an API Management Service.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Azure = Pulumi.Azure;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var exampleResourceGroup = new Azure.Core.ResourceGroup("exampleResourceGroup", new()
    ///     {
    ///         Location = "West Europe",
    ///     });
    /// 
    ///     var exampleService = new Azure.ApiManagement.Service("exampleService", new()
    ///     {
    ///         Location = exampleResourceGroup.Location,
    ///         ResourceGroupName = exampleResourceGroup.Name,
    ///         PublisherName = "My Company",
    ///         PublisherEmail = "company@exmaple.com",
    ///         SkuName = "Developer_1",
    ///     });
    /// 
    ///     var exampleApi = new Azure.ApiManagement.Api("exampleApi", new()
    ///     {
    ///         ResourceGroupName = exampleResourceGroup.Name,
    ///         ApiManagementName = exampleService.Name,
    ///         Revision = "1",
    ///         DisplayName = "Example API",
    ///         Path = "example",
    ///         Protocols = new[]
    ///         {
    ///             "https",
    ///         },
    ///         Import = new Azure.ApiManagement.Inputs.ApiImportArgs
    ///         {
    ///             ContentFormat = "swagger-link-json",
    ///             ContentValue = "http://conferenceapi.azurewebsites.net/?format=json",
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// API Management API's can be imported using the `resource id`, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import azure:apimanagement/api:Api example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.ApiManagement/service/instance1/apis/api1;rev=1
    /// ```
    /// </summary>
    [AzureResourceType("azure:apimanagement/api:Api")]
    public partial class Api : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The Name of the API Management Service where this API should be created. Changing this forces a new resource to be created.
        /// </summary>
        [Output("apiManagementName")]
        public Output<string> ApiManagementName { get; private set; } = null!;

        /// <summary>
        /// Type of API. Possible values are `graphql`, `http`, `soap`, and `websocket`. Defaults to `http`.
        /// </summary>
        [Output("apiType")]
        public Output<string> ApiType { get; private set; } = null!;

        /// <summary>
        /// A `contact` block as documented below.
        /// </summary>
        [Output("contact")]
        public Output<Outputs.ApiContact?> Contact { get; private set; } = null!;

        /// <summary>
        /// A description of the API Management API, which may include HTML formatting tags.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// The display name of the API.
        /// </summary>
        [Output("displayName")]
        public Output<string> DisplayName { get; private set; } = null!;

        /// <summary>
        /// A `import` block as documented below.
        /// </summary>
        [Output("import")]
        public Output<Outputs.ApiImport?> Import { get; private set; } = null!;

        /// <summary>
        /// Is this the current API Revision?
        /// </summary>
        [Output("isCurrent")]
        public Output<bool> IsCurrent { get; private set; } = null!;

        /// <summary>
        /// Is this API Revision online/accessible via the Gateway?
        /// </summary>
        [Output("isOnline")]
        public Output<bool> IsOnline { get; private set; } = null!;

        /// <summary>
        /// A `license` block as documented below.
        /// </summary>
        [Output("license")]
        public Output<Outputs.ApiLicense?> License { get; private set; } = null!;

        /// <summary>
        /// The name of the API Management API. Changing this forces a new resource to be created.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// An `oauth2_authorization` block as documented below.
        /// </summary>
        [Output("oauth2Authorization")]
        public Output<Outputs.ApiOauth2Authorization?> Oauth2Authorization { get; private set; } = null!;

        /// <summary>
        /// An `openid_authentication` block as documented below.
        /// </summary>
        [Output("openidAuthentication")]
        public Output<Outputs.ApiOpenidAuthentication?> OpenidAuthentication { get; private set; } = null!;

        /// <summary>
        /// The Path for this API Management API, which is a relative URL which uniquely identifies this API and all of its resource paths within the API Management Service.
        /// </summary>
        [Output("path")]
        public Output<string> Path { get; private set; } = null!;

        /// <summary>
        /// A list of protocols the operations in this API can be invoked. Possible values are `http`, `https`, `ws`, and `wss`.
        /// 
        /// &gt; **NOTE:** `display_name`, `path` and `protocols` are required when `source_api_id` is not set.
        /// </summary>
        [Output("protocols")]
        public Output<ImmutableArray<string>> Protocols { get; private set; } = null!;

        /// <summary>
        /// The Name of the Resource Group where the API Management API exists. Changing this forces a new resource to be created.
        /// </summary>
        [Output("resourceGroupName")]
        public Output<string> ResourceGroupName { get; private set; } = null!;

        /// <summary>
        /// The Revision which used for this API. Changing this forces a new resource to be created.
        /// </summary>
        [Output("revision")]
        public Output<string> Revision { get; private set; } = null!;

        /// <summary>
        /// The description of the API Revision of the API Management API.
        /// </summary>
        [Output("revisionDescription")]
        public Output<string?> RevisionDescription { get; private set; } = null!;

        /// <summary>
        /// Absolute URL of the backend service implementing this API.
        /// </summary>
        [Output("serviceUrl")]
        public Output<string> ServiceUrl { get; private set; } = null!;

        /// <summary>
        /// Should this API expose a SOAP frontend, rather than a HTTP frontend? Defaults to `false`.
        /// 
        /// &gt; **NOTE:** This property has been deprecated in favour of the `api_type` property and will be removed in version 4.0 of the provider.
        /// </summary>
        [Output("soapPassThrough")]
        public Output<bool> SoapPassThrough { get; private set; } = null!;

        /// <summary>
        /// The API id of the source API, which could be in format `azurerm_api_management_api.example.id` or in format `azurerm_api_management_api.example.id;rev=1`
        /// </summary>
        [Output("sourceApiId")]
        public Output<string?> SourceApiId { get; private set; } = null!;

        /// <summary>
        /// A `subscription_key_parameter_names` block as documented below.
        /// </summary>
        [Output("subscriptionKeyParameterNames")]
        public Output<Outputs.ApiSubscriptionKeyParameterNames> SubscriptionKeyParameterNames { get; private set; } = null!;

        /// <summary>
        /// Should this API require a subscription key? Defaults to `true`.
        /// </summary>
        [Output("subscriptionRequired")]
        public Output<bool?> SubscriptionRequired { get; private set; } = null!;

        /// <summary>
        /// Absolute URL of the Terms of Service for the API.
        /// </summary>
        [Output("termsOfServiceUrl")]
        public Output<string?> TermsOfServiceUrl { get; private set; } = null!;

        /// <summary>
        /// The Version number of this API, if this API is versioned.
        /// </summary>
        [Output("version")]
        public Output<string> Version { get; private set; } = null!;

        /// <summary>
        /// The description of the API Version of the API Management API.
        /// </summary>
        [Output("versionDescription")]
        public Output<string?> VersionDescription { get; private set; } = null!;

        /// <summary>
        /// The ID of the Version Set which this API is associated with.
        /// 
        /// &gt; **NOTE:** When `version` is set, `version_set_id` must also be specified
        /// </summary>
        [Output("versionSetId")]
        public Output<string> VersionSetId { get; private set; } = null!;


        /// <summary>
        /// Create a Api resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Api(string name, ApiArgs args, CustomResourceOptions? options = null)
            : base("azure:apimanagement/api:Api", name, args ?? new ApiArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Api(string name, Input<string> id, ApiState? state = null, CustomResourceOptions? options = null)
            : base("azure:apimanagement/api:Api", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Api resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Api Get(string name, Input<string> id, ApiState? state = null, CustomResourceOptions? options = null)
        {
            return new Api(name, id, state, options);
        }
    }

    public sealed class ApiArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The Name of the API Management Service where this API should be created. Changing this forces a new resource to be created.
        /// </summary>
        [Input("apiManagementName", required: true)]
        public Input<string> ApiManagementName { get; set; } = null!;

        /// <summary>
        /// Type of API. Possible values are `graphql`, `http`, `soap`, and `websocket`. Defaults to `http`.
        /// </summary>
        [Input("apiType")]
        public Input<string>? ApiType { get; set; }

        /// <summary>
        /// A `contact` block as documented below.
        /// </summary>
        [Input("contact")]
        public Input<Inputs.ApiContactArgs>? Contact { get; set; }

        /// <summary>
        /// A description of the API Management API, which may include HTML formatting tags.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The display name of the API.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        /// <summary>
        /// A `import` block as documented below.
        /// </summary>
        [Input("import")]
        public Input<Inputs.ApiImportArgs>? Import { get; set; }

        /// <summary>
        /// A `license` block as documented below.
        /// </summary>
        [Input("license")]
        public Input<Inputs.ApiLicenseArgs>? License { get; set; }

        /// <summary>
        /// The name of the API Management API. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// An `oauth2_authorization` block as documented below.
        /// </summary>
        [Input("oauth2Authorization")]
        public Input<Inputs.ApiOauth2AuthorizationArgs>? Oauth2Authorization { get; set; }

        /// <summary>
        /// An `openid_authentication` block as documented below.
        /// </summary>
        [Input("openidAuthentication")]
        public Input<Inputs.ApiOpenidAuthenticationArgs>? OpenidAuthentication { get; set; }

        /// <summary>
        /// The Path for this API Management API, which is a relative URL which uniquely identifies this API and all of its resource paths within the API Management Service.
        /// </summary>
        [Input("path")]
        public Input<string>? Path { get; set; }

        [Input("protocols")]
        private InputList<string>? _protocols;

        /// <summary>
        /// A list of protocols the operations in this API can be invoked. Possible values are `http`, `https`, `ws`, and `wss`.
        /// 
        /// &gt; **NOTE:** `display_name`, `path` and `protocols` are required when `source_api_id` is not set.
        /// </summary>
        public InputList<string> Protocols
        {
            get => _protocols ?? (_protocols = new InputList<string>());
            set => _protocols = value;
        }

        /// <summary>
        /// The Name of the Resource Group where the API Management API exists. Changing this forces a new resource to be created.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The Revision which used for this API. Changing this forces a new resource to be created.
        /// </summary>
        [Input("revision", required: true)]
        public Input<string> Revision { get; set; } = null!;

        /// <summary>
        /// The description of the API Revision of the API Management API.
        /// </summary>
        [Input("revisionDescription")]
        public Input<string>? RevisionDescription { get; set; }

        /// <summary>
        /// Absolute URL of the backend service implementing this API.
        /// </summary>
        [Input("serviceUrl")]
        public Input<string>? ServiceUrl { get; set; }

        /// <summary>
        /// Should this API expose a SOAP frontend, rather than a HTTP frontend? Defaults to `false`.
        /// 
        /// &gt; **NOTE:** This property has been deprecated in favour of the `api_type` property and will be removed in version 4.0 of the provider.
        /// </summary>
        [Input("soapPassThrough")]
        public Input<bool>? SoapPassThrough { get; set; }

        /// <summary>
        /// The API id of the source API, which could be in format `azurerm_api_management_api.example.id` or in format `azurerm_api_management_api.example.id;rev=1`
        /// </summary>
        [Input("sourceApiId")]
        public Input<string>? SourceApiId { get; set; }

        /// <summary>
        /// A `subscription_key_parameter_names` block as documented below.
        /// </summary>
        [Input("subscriptionKeyParameterNames")]
        public Input<Inputs.ApiSubscriptionKeyParameterNamesArgs>? SubscriptionKeyParameterNames { get; set; }

        /// <summary>
        /// Should this API require a subscription key? Defaults to `true`.
        /// </summary>
        [Input("subscriptionRequired")]
        public Input<bool>? SubscriptionRequired { get; set; }

        /// <summary>
        /// Absolute URL of the Terms of Service for the API.
        /// </summary>
        [Input("termsOfServiceUrl")]
        public Input<string>? TermsOfServiceUrl { get; set; }

        /// <summary>
        /// The Version number of this API, if this API is versioned.
        /// </summary>
        [Input("version")]
        public Input<string>? Version { get; set; }

        /// <summary>
        /// The description of the API Version of the API Management API.
        /// </summary>
        [Input("versionDescription")]
        public Input<string>? VersionDescription { get; set; }

        /// <summary>
        /// The ID of the Version Set which this API is associated with.
        /// 
        /// &gt; **NOTE:** When `version` is set, `version_set_id` must also be specified
        /// </summary>
        [Input("versionSetId")]
        public Input<string>? VersionSetId { get; set; }

        public ApiArgs()
        {
        }
        public static new ApiArgs Empty => new ApiArgs();
    }

    public sealed class ApiState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The Name of the API Management Service where this API should be created. Changing this forces a new resource to be created.
        /// </summary>
        [Input("apiManagementName")]
        public Input<string>? ApiManagementName { get; set; }

        /// <summary>
        /// Type of API. Possible values are `graphql`, `http`, `soap`, and `websocket`. Defaults to `http`.
        /// </summary>
        [Input("apiType")]
        public Input<string>? ApiType { get; set; }

        /// <summary>
        /// A `contact` block as documented below.
        /// </summary>
        [Input("contact")]
        public Input<Inputs.ApiContactGetArgs>? Contact { get; set; }

        /// <summary>
        /// A description of the API Management API, which may include HTML formatting tags.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The display name of the API.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        /// <summary>
        /// A `import` block as documented below.
        /// </summary>
        [Input("import")]
        public Input<Inputs.ApiImportGetArgs>? Import { get; set; }

        /// <summary>
        /// Is this the current API Revision?
        /// </summary>
        [Input("isCurrent")]
        public Input<bool>? IsCurrent { get; set; }

        /// <summary>
        /// Is this API Revision online/accessible via the Gateway?
        /// </summary>
        [Input("isOnline")]
        public Input<bool>? IsOnline { get; set; }

        /// <summary>
        /// A `license` block as documented below.
        /// </summary>
        [Input("license")]
        public Input<Inputs.ApiLicenseGetArgs>? License { get; set; }

        /// <summary>
        /// The name of the API Management API. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// An `oauth2_authorization` block as documented below.
        /// </summary>
        [Input("oauth2Authorization")]
        public Input<Inputs.ApiOauth2AuthorizationGetArgs>? Oauth2Authorization { get; set; }

        /// <summary>
        /// An `openid_authentication` block as documented below.
        /// </summary>
        [Input("openidAuthentication")]
        public Input<Inputs.ApiOpenidAuthenticationGetArgs>? OpenidAuthentication { get; set; }

        /// <summary>
        /// The Path for this API Management API, which is a relative URL which uniquely identifies this API and all of its resource paths within the API Management Service.
        /// </summary>
        [Input("path")]
        public Input<string>? Path { get; set; }

        [Input("protocols")]
        private InputList<string>? _protocols;

        /// <summary>
        /// A list of protocols the operations in this API can be invoked. Possible values are `http`, `https`, `ws`, and `wss`.
        /// 
        /// &gt; **NOTE:** `display_name`, `path` and `protocols` are required when `source_api_id` is not set.
        /// </summary>
        public InputList<string> Protocols
        {
            get => _protocols ?? (_protocols = new InputList<string>());
            set => _protocols = value;
        }

        /// <summary>
        /// The Name of the Resource Group where the API Management API exists. Changing this forces a new resource to be created.
        /// </summary>
        [Input("resourceGroupName")]
        public Input<string>? ResourceGroupName { get; set; }

        /// <summary>
        /// The Revision which used for this API. Changing this forces a new resource to be created.
        /// </summary>
        [Input("revision")]
        public Input<string>? Revision { get; set; }

        /// <summary>
        /// The description of the API Revision of the API Management API.
        /// </summary>
        [Input("revisionDescription")]
        public Input<string>? RevisionDescription { get; set; }

        /// <summary>
        /// Absolute URL of the backend service implementing this API.
        /// </summary>
        [Input("serviceUrl")]
        public Input<string>? ServiceUrl { get; set; }

        /// <summary>
        /// Should this API expose a SOAP frontend, rather than a HTTP frontend? Defaults to `false`.
        /// 
        /// &gt; **NOTE:** This property has been deprecated in favour of the `api_type` property and will be removed in version 4.0 of the provider.
        /// </summary>
        [Input("soapPassThrough")]
        public Input<bool>? SoapPassThrough { get; set; }

        /// <summary>
        /// The API id of the source API, which could be in format `azurerm_api_management_api.example.id` or in format `azurerm_api_management_api.example.id;rev=1`
        /// </summary>
        [Input("sourceApiId")]
        public Input<string>? SourceApiId { get; set; }

        /// <summary>
        /// A `subscription_key_parameter_names` block as documented below.
        /// </summary>
        [Input("subscriptionKeyParameterNames")]
        public Input<Inputs.ApiSubscriptionKeyParameterNamesGetArgs>? SubscriptionKeyParameterNames { get; set; }

        /// <summary>
        /// Should this API require a subscription key? Defaults to `true`.
        /// </summary>
        [Input("subscriptionRequired")]
        public Input<bool>? SubscriptionRequired { get; set; }

        /// <summary>
        /// Absolute URL of the Terms of Service for the API.
        /// </summary>
        [Input("termsOfServiceUrl")]
        public Input<string>? TermsOfServiceUrl { get; set; }

        /// <summary>
        /// The Version number of this API, if this API is versioned.
        /// </summary>
        [Input("version")]
        public Input<string>? Version { get; set; }

        /// <summary>
        /// The description of the API Version of the API Management API.
        /// </summary>
        [Input("versionDescription")]
        public Input<string>? VersionDescription { get; set; }

        /// <summary>
        /// The ID of the Version Set which this API is associated with.
        /// 
        /// &gt; **NOTE:** When `version` is set, `version_set_id` must also be specified
        /// </summary>
        [Input("versionSetId")]
        public Input<string>? VersionSetId { get; set; }

        public ApiState()
        {
        }
        public static new ApiState Empty => new ApiState();
    }
}
