// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.ApiManagement
{
    /// <summary>
    /// Manages a Global Schema within an API Management Service.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.IO;
    /// using Pulumi;
    /// using Azure = Pulumi.Azure;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var exampleResourceGroup = new Azure.Core.ResourceGroup("exampleResourceGroup", new()
    ///     {
    ///         Location = "West Europe",
    ///     });
    /// 
    ///     var exampleService = new Azure.ApiManagement.Service("exampleService", new()
    ///     {
    ///         Location = exampleResourceGroup.Location,
    ///         ResourceGroupName = exampleResourceGroup.Name,
    ///         PublisherName = "pub1",
    ///         PublisherEmail = "pub1@email.com",
    ///         SkuName = "Consumption_0",
    ///     });
    /// 
    ///     var exampleGlobalSchema = new Azure.ApiManagement.GlobalSchema("exampleGlobalSchema", new()
    ///     {
    ///         SchemaId = "example-schema1",
    ///         ApiManagementName = exampleService.Name,
    ///         ResourceGroupName = exampleResourceGroup.Name,
    ///         Type = "xml",
    ///         Value = File.ReadAllText("api_management_api_schema.xml"),
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// API Management API Schema's can be imported using the `resource id`, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import azure:apimanagement/globalSchema:GlobalSchema example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.ApiManagement/service/instance1/schemas/schema1
    /// ```
    /// </summary>
    [AzureResourceType("azure:apimanagement/globalSchema:GlobalSchema")]
    public partial class GlobalSchema : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The Name of the API Management Service where the API exists. Changing this forces a new resource to be created.
        /// </summary>
        [Output("apiManagementName")]
        public Output<string> ApiManagementName { get; private set; } = null!;

        /// <summary>
        /// The description of the schema.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// The Name of the Resource Group in which the API Management Service exists. Changing this forces a new resource to be created.
        /// </summary>
        [Output("resourceGroupName")]
        public Output<string> ResourceGroupName { get; private set; } = null!;

        /// <summary>
        /// A unique identifier for this Schema. Changing this forces a new resource to be created.
        /// </summary>
        [Output("schemaId")]
        public Output<string> SchemaId { get; private set; } = null!;

        /// <summary>
        /// The content type of the Schema. Possible values are `xml` and `json`.
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;

        /// <summary>
        /// The string defining the document representing the Schema.
        /// </summary>
        [Output("value")]
        public Output<string> Value { get; private set; } = null!;


        /// <summary>
        /// Create a GlobalSchema resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public GlobalSchema(string name, GlobalSchemaArgs args, CustomResourceOptions? options = null)
            : base("azure:apimanagement/globalSchema:GlobalSchema", name, args ?? new GlobalSchemaArgs(), MakeResourceOptions(options, ""))
        {
        }

        private GlobalSchema(string name, Input<string> id, GlobalSchemaState? state = null, CustomResourceOptions? options = null)
            : base("azure:apimanagement/globalSchema:GlobalSchema", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing GlobalSchema resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static GlobalSchema Get(string name, Input<string> id, GlobalSchemaState? state = null, CustomResourceOptions? options = null)
        {
            return new GlobalSchema(name, id, state, options);
        }
    }

    public sealed class GlobalSchemaArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The Name of the API Management Service where the API exists. Changing this forces a new resource to be created.
        /// </summary>
        [Input("apiManagementName", required: true)]
        public Input<string> ApiManagementName { get; set; } = null!;

        /// <summary>
        /// The description of the schema.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The Name of the Resource Group in which the API Management Service exists. Changing this forces a new resource to be created.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// A unique identifier for this Schema. Changing this forces a new resource to be created.
        /// </summary>
        [Input("schemaId", required: true)]
        public Input<string> SchemaId { get; set; } = null!;

        /// <summary>
        /// The content type of the Schema. Possible values are `xml` and `json`.
        /// </summary>
        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        /// <summary>
        /// The string defining the document representing the Schema.
        /// </summary>
        [Input("value", required: true)]
        public Input<string> Value { get; set; } = null!;

        public GlobalSchemaArgs()
        {
        }
        public static new GlobalSchemaArgs Empty => new GlobalSchemaArgs();
    }

    public sealed class GlobalSchemaState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The Name of the API Management Service where the API exists. Changing this forces a new resource to be created.
        /// </summary>
        [Input("apiManagementName")]
        public Input<string>? ApiManagementName { get; set; }

        /// <summary>
        /// The description of the schema.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The Name of the Resource Group in which the API Management Service exists. Changing this forces a new resource to be created.
        /// </summary>
        [Input("resourceGroupName")]
        public Input<string>? ResourceGroupName { get; set; }

        /// <summary>
        /// A unique identifier for this Schema. Changing this forces a new resource to be created.
        /// </summary>
        [Input("schemaId")]
        public Input<string>? SchemaId { get; set; }

        /// <summary>
        /// The content type of the Schema. Possible values are `xml` and `json`.
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        /// <summary>
        /// The string defining the document representing the Schema.
        /// </summary>
        [Input("value")]
        public Input<string>? Value { get; set; }

        public GlobalSchemaState()
        {
        }
        public static new GlobalSchemaState Empty => new GlobalSchemaState();
    }
}
