// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.ApiManagement
{
    public static class GetGatewayHostNameConfiguration
    {
        /// <summary>
        /// Use this data source to access information about an existing API Management Gateway Host Configuration.
        /// </summary>
        public static Task<GetGatewayHostNameConfigurationResult> InvokeAsync(GetGatewayHostNameConfigurationArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetGatewayHostNameConfigurationResult>("azure:apimanagement/getGatewayHostNameConfiguration:getGatewayHostNameConfiguration", args ?? new GetGatewayHostNameConfigurationArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to access information about an existing API Management Gateway Host Configuration.
        /// </summary>
        public static Output<GetGatewayHostNameConfigurationResult> Invoke(GetGatewayHostNameConfigurationInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetGatewayHostNameConfigurationResult>("azure:apimanagement/getGatewayHostNameConfiguration:getGatewayHostNameConfiguration", args ?? new GetGatewayHostNameConfigurationInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetGatewayHostNameConfigurationArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the API Management Service.
        /// </summary>
        [Input("apiManagementId", required: true)]
        public string ApiManagementId { get; set; } = null!;

        /// <summary>
        /// The name of the API Management Gateway.
        /// *
        /// </summary>
        [Input("gatewayName", required: true)]
        public string GatewayName { get; set; } = null!;

        /// <summary>
        /// The name of the API Management Gateway Host Name Configuration.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        public GetGatewayHostNameConfigurationArgs()
        {
        }
        public static new GetGatewayHostNameConfigurationArgs Empty => new GetGatewayHostNameConfigurationArgs();
    }

    public sealed class GetGatewayHostNameConfigurationInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the API Management Service.
        /// </summary>
        [Input("apiManagementId", required: true)]
        public Input<string> ApiManagementId { get; set; } = null!;

        /// <summary>
        /// The name of the API Management Gateway.
        /// *
        /// </summary>
        [Input("gatewayName", required: true)]
        public Input<string> GatewayName { get; set; } = null!;

        /// <summary>
        /// The name of the API Management Gateway Host Name Configuration.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        public GetGatewayHostNameConfigurationInvokeArgs()
        {
        }
        public static new GetGatewayHostNameConfigurationInvokeArgs Empty => new GetGatewayHostNameConfigurationInvokeArgs();
    }


    [OutputType]
    public sealed class GetGatewayHostNameConfigurationResult
    {
        public readonly string ApiManagementId;
        /// <summary>
        /// The ID of the certificate used for TLS connection establishment.
        /// </summary>
        public readonly string CertificateId;
        public readonly string GatewayName;
        /// <summary>
        /// The host name used for the API Management Gateway Host Name Configuration.
        /// </summary>
        public readonly string HostName;
        /// <summary>
        /// Whether HTTP/2.0 is supported.
        /// </summary>
        public readonly bool Http2Enabled;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string Name;
        /// <summary>
        /// Whether the API Management Gateway requests a client certificate.
        /// </summary>
        public readonly bool RequestClientCertificateEnabled;
        /// <summary>
        /// Whether TLS 1.0 is supported.
        /// </summary>
        public readonly bool Tls10Enabled;
        /// <summary>
        /// Whether TLS 1.1 is supported.
        /// </summary>
        public readonly bool Tls11Enabled;

        [OutputConstructor]
        private GetGatewayHostNameConfigurationResult(
            string apiManagementId,

            string certificateId,

            string gatewayName,

            string hostName,

            bool http2Enabled,

            string id,

            string name,

            bool requestClientCertificateEnabled,

            bool tls10Enabled,

            bool tls11Enabled)
        {
            ApiManagementId = apiManagementId;
            CertificateId = certificateId;
            GatewayName = gatewayName;
            HostName = hostName;
            Http2Enabled = http2Enabled;
            Id = id;
            Name = name;
            RequestClientCertificateEnabled = requestClientCertificateEnabled;
            Tls10Enabled = tls10Enabled;
            Tls11Enabled = tls11Enabled;
        }
    }
}
