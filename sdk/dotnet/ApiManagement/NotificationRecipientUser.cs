// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.ApiManagement
{
    /// <summary>
    /// Manages a API Management Notification Recipient User.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using Azure = Pulumi.Azure;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var exampleResourceGroup = new Azure.Core.ResourceGroup("exampleResourceGroup", new Azure.Core.ResourceGroupArgs
    ///         {
    ///             Location = "West Europe",
    ///         });
    ///         var exampleService = new Azure.ApiManagement.Service("exampleService", new Azure.ApiManagement.ServiceArgs
    ///         {
    ///             Location = exampleResourceGroup.Location,
    ///             ResourceGroupName = exampleResourceGroup.Name,
    ///             PublisherName = "My Company",
    ///             PublisherEmail = "company@terraform.io",
    ///             SkuName = "Developer_1",
    ///         });
    ///         var exampleUser = new Azure.ApiManagement.User("exampleUser", new Azure.ApiManagement.UserArgs
    ///         {
    ///             UserId = "123",
    ///             ApiManagementName = exampleService.Name,
    ///             ResourceGroupName = exampleResourceGroup.Name,
    ///             FirstName = "Example",
    ///             LastName = "User",
    ///             Email = "foo@bar.com",
    ///             State = "active",
    ///         });
    ///         var exampleNotificationRecipientUser = new Azure.ApiManagement.NotificationRecipientUser("exampleNotificationRecipientUser", new Azure.ApiManagement.NotificationRecipientUserArgs
    ///         {
    ///             ApiManagementId = exampleService.Id,
    ///             NotificationType = "AccountClosedPublisher",
    ///             UserId = exampleUser.UserId,
    ///         });
    ///     }
    /// 
    /// }
    /// ```
    /// 
    /// ## Import
    /// 
    /// API Management Notification Recipient Users can be imported using the `resource id`, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import azure:apimanagement/notificationRecipientUser:NotificationRecipientUser example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.ApiManagement/service/service1/notifications/notificationName1/recipientUsers/userid1
    /// ```
    /// </summary>
    [AzureResourceType("azure:apimanagement/notificationRecipientUser:NotificationRecipientUser")]
    public partial class NotificationRecipientUser : Pulumi.CustomResource
    {
        /// <summary>
        /// The ID of the API Management Service from which to create this Notification Recipient User. Changing this forces a new API Management Notification Recipient User to be created.
        /// </summary>
        [Output("apiManagementId")]
        public Output<string> ApiManagementId { get; private set; } = null!;

        /// <summary>
        /// The Notification Name to be received. Changing this forces a new API Management Notification Recipient User to be created. Possible values are `AccountClosedPublisher`, `BCC`, `NewApplicationNotificationMessage`, `NewIssuePublisherNotificationMessage`, `PurchasePublisherNotificationMessage`, `QuotaLimitApproachingPublisherNotificationMessage`, and `RequestPublisherNotificationMessage`.
        /// </summary>
        [Output("notificationType")]
        public Output<string> NotificationType { get; private set; } = null!;

        /// <summary>
        /// The recipient user ID. Changing this forces a new API Management Notification Recipient User to be created.
        /// </summary>
        [Output("userId")]
        public Output<string> UserId { get; private set; } = null!;


        /// <summary>
        /// Create a NotificationRecipientUser resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public NotificationRecipientUser(string name, NotificationRecipientUserArgs args, CustomResourceOptions? options = null)
            : base("azure:apimanagement/notificationRecipientUser:NotificationRecipientUser", name, args ?? new NotificationRecipientUserArgs(), MakeResourceOptions(options, ""))
        {
        }

        private NotificationRecipientUser(string name, Input<string> id, NotificationRecipientUserState? state = null, CustomResourceOptions? options = null)
            : base("azure:apimanagement/notificationRecipientUser:NotificationRecipientUser", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing NotificationRecipientUser resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static NotificationRecipientUser Get(string name, Input<string> id, NotificationRecipientUserState? state = null, CustomResourceOptions? options = null)
        {
            return new NotificationRecipientUser(name, id, state, options);
        }
    }

    public sealed class NotificationRecipientUserArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the API Management Service from which to create this Notification Recipient User. Changing this forces a new API Management Notification Recipient User to be created.
        /// </summary>
        [Input("apiManagementId", required: true)]
        public Input<string> ApiManagementId { get; set; } = null!;

        /// <summary>
        /// The Notification Name to be received. Changing this forces a new API Management Notification Recipient User to be created. Possible values are `AccountClosedPublisher`, `BCC`, `NewApplicationNotificationMessage`, `NewIssuePublisherNotificationMessage`, `PurchasePublisherNotificationMessage`, `QuotaLimitApproachingPublisherNotificationMessage`, and `RequestPublisherNotificationMessage`.
        /// </summary>
        [Input("notificationType", required: true)]
        public Input<string> NotificationType { get; set; } = null!;

        /// <summary>
        /// The recipient user ID. Changing this forces a new API Management Notification Recipient User to be created.
        /// </summary>
        [Input("userId", required: true)]
        public Input<string> UserId { get; set; } = null!;

        public NotificationRecipientUserArgs()
        {
        }
    }

    public sealed class NotificationRecipientUserState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the API Management Service from which to create this Notification Recipient User. Changing this forces a new API Management Notification Recipient User to be created.
        /// </summary>
        [Input("apiManagementId")]
        public Input<string>? ApiManagementId { get; set; }

        /// <summary>
        /// The Notification Name to be received. Changing this forces a new API Management Notification Recipient User to be created. Possible values are `AccountClosedPublisher`, `BCC`, `NewApplicationNotificationMessage`, `NewIssuePublisherNotificationMessage`, `PurchasePublisherNotificationMessage`, `QuotaLimitApproachingPublisherNotificationMessage`, and `RequestPublisherNotificationMessage`.
        /// </summary>
        [Input("notificationType")]
        public Input<string>? NotificationType { get; set; }

        /// <summary>
        /// The recipient user ID. Changing this forces a new API Management Notification Recipient User to be created.
        /// </summary>
        [Input("userId")]
        public Input<string>? UserId { get; set; }

        public NotificationRecipientUserState()
        {
        }
    }
}
