// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.ApiManagement
{
    /// <summary>
    /// Manages an API Operation within an API Management Service.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using Azure = Pulumi.Azure;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var exampleApi = Output.Create(Azure.ApiManagement.GetApi.InvokeAsync(new Azure.ApiManagement.GetApiArgs
    ///         {
    ///             Name = "search-api",
    ///             ApiManagementName = "search-api-management",
    ///             ResourceGroupName = "search-service",
    ///             Revision = "2",
    ///         }));
    ///         var exampleApiOperation = new Azure.ApiManagement.ApiOperation("exampleApiOperation", new Azure.ApiManagement.ApiOperationArgs
    ///         {
    ///             OperationId = "user-delete",
    ///             ApiName = exampleApi.Apply(exampleApi =&gt; exampleApi.Name),
    ///             ApiManagementName = exampleApi.Apply(exampleApi =&gt; exampleApi.ApiManagementName),
    ///             ResourceGroupName = exampleApi.Apply(exampleApi =&gt; exampleApi.ResourceGroupName),
    ///             DisplayName = "Delete User Operation",
    ///             Method = "DELETE",
    ///             UrlTemplate = "/users/{id}/delete",
    ///             Description = "This can only be done by the logged in user.",
    ///             Responses = 
    ///             {
    ///                 new Azure.ApiManagement.Inputs.ApiOperationResponseArgs
    ///                 {
    ///                     StatusCode = 200,
    ///                 },
    ///             },
    ///         });
    ///     }
    /// 
    /// }
    /// ```
    /// 
    /// ## Import
    /// 
    /// API Management API Operation's can be imported using the `resource id`, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import azure:apimanagement/apiOperation:ApiOperation example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.ApiManagement/service/instance1/apis/api1/operations/operation1
    /// ```
    /// </summary>
    [AzureResourceType("azure:apimanagement/apiOperation:ApiOperation")]
    public partial class ApiOperation : Pulumi.CustomResource
    {
        /// <summary>
        /// The Name of the API Management Service where the API exists. Changing this forces a new resource to be created.
        /// </summary>
        [Output("apiManagementName")]
        public Output<string> ApiManagementName { get; private set; } = null!;

        /// <summary>
        /// The name of the API within the API Management Service where this API Operation should be created. Changing this forces a new resource to be created.
        /// </summary>
        [Output("apiName")]
        public Output<string> ApiName { get; private set; } = null!;

        /// <summary>
        /// A description for this API Operation, which may include HTML formatting tags.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// The Display Name for this API Management Operation.
        /// </summary>
        [Output("displayName")]
        public Output<string> DisplayName { get; private set; } = null!;

        /// <summary>
        /// The HTTP Method used for this API Management Operation, like `GET`, `DELETE`, `PUT` or `POST` - but not limited to these values.
        /// </summary>
        [Output("method")]
        public Output<string> Method { get; private set; } = null!;

        /// <summary>
        /// A unique identifier for this API Operation. Changing this forces a new resource to be created.
        /// </summary>
        [Output("operationId")]
        public Output<string> OperationId { get; private set; } = null!;

        /// <summary>
        /// A `request` block as defined below.
        /// </summary>
        [Output("request")]
        public Output<Outputs.ApiOperationRequest> Request { get; private set; } = null!;

        /// <summary>
        /// The Name of the Resource Group in which the API Management Service exists. Changing this forces a new resource to be created.
        /// </summary>
        [Output("resourceGroupName")]
        public Output<string> ResourceGroupName { get; private set; } = null!;

        /// <summary>
        /// One or more `response` blocks as defined below.
        /// </summary>
        [Output("responses")]
        public Output<ImmutableArray<Outputs.ApiOperationResponse>> Responses { get; private set; } = null!;

        /// <summary>
        /// One or more `template_parameter` blocks as defined below.
        /// </summary>
        [Output("templateParameters")]
        public Output<ImmutableArray<Outputs.ApiOperationTemplateParameter>> TemplateParameters { get; private set; } = null!;

        /// <summary>
        /// The relative URL Template identifying the target resource for this operation, which may include parameters.
        /// </summary>
        [Output("urlTemplate")]
        public Output<string> UrlTemplate { get; private set; } = null!;


        /// <summary>
        /// Create a ApiOperation resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ApiOperation(string name, ApiOperationArgs args, CustomResourceOptions? options = null)
            : base("azure:apimanagement/apiOperation:ApiOperation", name, args ?? new ApiOperationArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ApiOperation(string name, Input<string> id, ApiOperationState? state = null, CustomResourceOptions? options = null)
            : base("azure:apimanagement/apiOperation:ApiOperation", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ApiOperation resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ApiOperation Get(string name, Input<string> id, ApiOperationState? state = null, CustomResourceOptions? options = null)
        {
            return new ApiOperation(name, id, state, options);
        }
    }

    public sealed class ApiOperationArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The Name of the API Management Service where the API exists. Changing this forces a new resource to be created.
        /// </summary>
        [Input("apiManagementName", required: true)]
        public Input<string> ApiManagementName { get; set; } = null!;

        /// <summary>
        /// The name of the API within the API Management Service where this API Operation should be created. Changing this forces a new resource to be created.
        /// </summary>
        [Input("apiName", required: true)]
        public Input<string> ApiName { get; set; } = null!;

        /// <summary>
        /// A description for this API Operation, which may include HTML formatting tags.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The Display Name for this API Management Operation.
        /// </summary>
        [Input("displayName", required: true)]
        public Input<string> DisplayName { get; set; } = null!;

        /// <summary>
        /// The HTTP Method used for this API Management Operation, like `GET`, `DELETE`, `PUT` or `POST` - but not limited to these values.
        /// </summary>
        [Input("method", required: true)]
        public Input<string> Method { get; set; } = null!;

        /// <summary>
        /// A unique identifier for this API Operation. Changing this forces a new resource to be created.
        /// </summary>
        [Input("operationId", required: true)]
        public Input<string> OperationId { get; set; } = null!;

        /// <summary>
        /// A `request` block as defined below.
        /// </summary>
        [Input("request")]
        public Input<Inputs.ApiOperationRequestArgs>? Request { get; set; }

        /// <summary>
        /// The Name of the Resource Group in which the API Management Service exists. Changing this forces a new resource to be created.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        [Input("responses")]
        private InputList<Inputs.ApiOperationResponseArgs>? _responses;

        /// <summary>
        /// One or more `response` blocks as defined below.
        /// </summary>
        public InputList<Inputs.ApiOperationResponseArgs> Responses
        {
            get => _responses ?? (_responses = new InputList<Inputs.ApiOperationResponseArgs>());
            set => _responses = value;
        }

        [Input("templateParameters")]
        private InputList<Inputs.ApiOperationTemplateParameterArgs>? _templateParameters;

        /// <summary>
        /// One or more `template_parameter` blocks as defined below.
        /// </summary>
        public InputList<Inputs.ApiOperationTemplateParameterArgs> TemplateParameters
        {
            get => _templateParameters ?? (_templateParameters = new InputList<Inputs.ApiOperationTemplateParameterArgs>());
            set => _templateParameters = value;
        }

        /// <summary>
        /// The relative URL Template identifying the target resource for this operation, which may include parameters.
        /// </summary>
        [Input("urlTemplate", required: true)]
        public Input<string> UrlTemplate { get; set; } = null!;

        public ApiOperationArgs()
        {
        }
    }

    public sealed class ApiOperationState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The Name of the API Management Service where the API exists. Changing this forces a new resource to be created.
        /// </summary>
        [Input("apiManagementName")]
        public Input<string>? ApiManagementName { get; set; }

        /// <summary>
        /// The name of the API within the API Management Service where this API Operation should be created. Changing this forces a new resource to be created.
        /// </summary>
        [Input("apiName")]
        public Input<string>? ApiName { get; set; }

        /// <summary>
        /// A description for this API Operation, which may include HTML formatting tags.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The Display Name for this API Management Operation.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        /// <summary>
        /// The HTTP Method used for this API Management Operation, like `GET`, `DELETE`, `PUT` or `POST` - but not limited to these values.
        /// </summary>
        [Input("method")]
        public Input<string>? Method { get; set; }

        /// <summary>
        /// A unique identifier for this API Operation. Changing this forces a new resource to be created.
        /// </summary>
        [Input("operationId")]
        public Input<string>? OperationId { get; set; }

        /// <summary>
        /// A `request` block as defined below.
        /// </summary>
        [Input("request")]
        public Input<Inputs.ApiOperationRequestGetArgs>? Request { get; set; }

        /// <summary>
        /// The Name of the Resource Group in which the API Management Service exists. Changing this forces a new resource to be created.
        /// </summary>
        [Input("resourceGroupName")]
        public Input<string>? ResourceGroupName { get; set; }

        [Input("responses")]
        private InputList<Inputs.ApiOperationResponseGetArgs>? _responses;

        /// <summary>
        /// One or more `response` blocks as defined below.
        /// </summary>
        public InputList<Inputs.ApiOperationResponseGetArgs> Responses
        {
            get => _responses ?? (_responses = new InputList<Inputs.ApiOperationResponseGetArgs>());
            set => _responses = value;
        }

        [Input("templateParameters")]
        private InputList<Inputs.ApiOperationTemplateParameterGetArgs>? _templateParameters;

        /// <summary>
        /// One or more `template_parameter` blocks as defined below.
        /// </summary>
        public InputList<Inputs.ApiOperationTemplateParameterGetArgs> TemplateParameters
        {
            get => _templateParameters ?? (_templateParameters = new InputList<Inputs.ApiOperationTemplateParameterGetArgs>());
            set => _templateParameters = value;
        }

        /// <summary>
        /// The relative URL Template identifying the target resource for this operation, which may include parameters.
        /// </summary>
        [Input("urlTemplate")]
        public Input<string>? UrlTemplate { get; set; }

        public ApiOperationState()
        {
        }
    }
}
