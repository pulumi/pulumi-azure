// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.AppPlatform
{
    /// <summary>
    /// &gt; **NOTE:** This resource is applicable only for Spring Cloud Service with enterprise tier.
    /// 
    /// Manages a Spring Cloud Dev Tool Portal.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using Azure = Pulumi.Azure;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var exampleResourceGroup = new Azure.Core.ResourceGroup("exampleResourceGroup", new()
    ///     {
    ///         Location = "West Europe",
    ///     });
    /// 
    ///     var exampleSpringCloudService = new Azure.AppPlatform.SpringCloudService("exampleSpringCloudService", new()
    ///     {
    ///         Location = exampleResourceGroup.Location,
    ///         ResourceGroupName = exampleResourceGroup.Name,
    ///         SkuName = "E0",
    ///     });
    /// 
    ///     var exampleSpringCloudDevToolPortal = new Azure.AppPlatform.SpringCloudDevToolPortal("exampleSpringCloudDevToolPortal", new()
    ///     {
    ///         SpringCloudServiceId = exampleSpringCloudService.Id,
    ///         PublicNetworkAccessEnabled = true,
    ///         Sso = new Azure.AppPlatform.Inputs.SpringCloudDevToolPortalSsoArgs
    ///         {
    ///             ClientId = "example id",
    ///             ClientSecret = "example secret",
    ///             MetadataUrl = "https://www.example.com/metadata",
    ///             Scopes = new[]
    ///             {
    ///                 "openid",
    ///                 "profile",
    ///                 "email",
    ///             },
    ///         },
    ///         ApplicationAcceleratorEnabled = true,
    ///         ApplicationLiveViewEnabled = true,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Spring Cloud Dev Tool Portals can be imported using the `resource id`, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import azure:appplatform/springCloudDevToolPortal:SpringCloudDevToolPortal example /subscriptions/12345678-1234-9876-4563-123456789012/resourceGroups/resourceGroup1/providers/Microsoft.AppPlatform/Spring/service1/DevToolPortals/default
    /// ```
    /// </summary>
    [AzureResourceType("azure:appplatform/springCloudDevToolPortal:SpringCloudDevToolPortal")]
    public partial class SpringCloudDevToolPortal : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Should the Accelerator plugin be enabled?
        /// </summary>
        [Output("applicationAcceleratorEnabled")]
        public Output<bool> ApplicationAcceleratorEnabled { get; private set; } = null!;

        /// <summary>
        /// Should the Application Live View be enabled?
        /// </summary>
        [Output("applicationLiveViewEnabled")]
        public Output<bool> ApplicationLiveViewEnabled { get; private set; } = null!;

        /// <summary>
        /// The name which should be used for this Spring Cloud Dev Tool Portal. The only possible value is `default`. Changing this forces a new Spring Cloud Dev Tool Portal to be created.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Is public network access enabled?
        /// </summary>
        [Output("publicNetworkAccessEnabled")]
        public Output<bool?> PublicNetworkAccessEnabled { get; private set; } = null!;

        /// <summary>
        /// The ID of the Spring Cloud Service. Changing this forces a new Spring Cloud Dev Tool Portal to be created.
        /// </summary>
        [Output("springCloudServiceId")]
        public Output<string> SpringCloudServiceId { get; private set; } = null!;

        /// <summary>
        /// A `sso` block as defined below.
        /// </summary>
        [Output("sso")]
        public Output<Outputs.SpringCloudDevToolPortalSso?> Sso { get; private set; } = null!;


        /// <summary>
        /// Create a SpringCloudDevToolPortal resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public SpringCloudDevToolPortal(string name, SpringCloudDevToolPortalArgs args, CustomResourceOptions? options = null)
            : base("azure:appplatform/springCloudDevToolPortal:SpringCloudDevToolPortal", name, args ?? new SpringCloudDevToolPortalArgs(), MakeResourceOptions(options, ""))
        {
        }

        private SpringCloudDevToolPortal(string name, Input<string> id, SpringCloudDevToolPortalState? state = null, CustomResourceOptions? options = null)
            : base("azure:appplatform/springCloudDevToolPortal:SpringCloudDevToolPortal", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing SpringCloudDevToolPortal resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static SpringCloudDevToolPortal Get(string name, Input<string> id, SpringCloudDevToolPortalState? state = null, CustomResourceOptions? options = null)
        {
            return new SpringCloudDevToolPortal(name, id, state, options);
        }
    }

    public sealed class SpringCloudDevToolPortalArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Should the Accelerator plugin be enabled?
        /// </summary>
        [Input("applicationAcceleratorEnabled")]
        public Input<bool>? ApplicationAcceleratorEnabled { get; set; }

        /// <summary>
        /// Should the Application Live View be enabled?
        /// </summary>
        [Input("applicationLiveViewEnabled")]
        public Input<bool>? ApplicationLiveViewEnabled { get; set; }

        /// <summary>
        /// The name which should be used for this Spring Cloud Dev Tool Portal. The only possible value is `default`. Changing this forces a new Spring Cloud Dev Tool Portal to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Is public network access enabled?
        /// </summary>
        [Input("publicNetworkAccessEnabled")]
        public Input<bool>? PublicNetworkAccessEnabled { get; set; }

        /// <summary>
        /// The ID of the Spring Cloud Service. Changing this forces a new Spring Cloud Dev Tool Portal to be created.
        /// </summary>
        [Input("springCloudServiceId", required: true)]
        public Input<string> SpringCloudServiceId { get; set; } = null!;

        /// <summary>
        /// A `sso` block as defined below.
        /// </summary>
        [Input("sso")]
        public Input<Inputs.SpringCloudDevToolPortalSsoArgs>? Sso { get; set; }

        public SpringCloudDevToolPortalArgs()
        {
        }
        public static new SpringCloudDevToolPortalArgs Empty => new SpringCloudDevToolPortalArgs();
    }

    public sealed class SpringCloudDevToolPortalState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Should the Accelerator plugin be enabled?
        /// </summary>
        [Input("applicationAcceleratorEnabled")]
        public Input<bool>? ApplicationAcceleratorEnabled { get; set; }

        /// <summary>
        /// Should the Application Live View be enabled?
        /// </summary>
        [Input("applicationLiveViewEnabled")]
        public Input<bool>? ApplicationLiveViewEnabled { get; set; }

        /// <summary>
        /// The name which should be used for this Spring Cloud Dev Tool Portal. The only possible value is `default`. Changing this forces a new Spring Cloud Dev Tool Portal to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Is public network access enabled?
        /// </summary>
        [Input("publicNetworkAccessEnabled")]
        public Input<bool>? PublicNetworkAccessEnabled { get; set; }

        /// <summary>
        /// The ID of the Spring Cloud Service. Changing this forces a new Spring Cloud Dev Tool Portal to be created.
        /// </summary>
        [Input("springCloudServiceId")]
        public Input<string>? SpringCloudServiceId { get; set; }

        /// <summary>
        /// A `sso` block as defined below.
        /// </summary>
        [Input("sso")]
        public Input<Inputs.SpringCloudDevToolPortalSsoGetArgs>? Sso { get; set; }

        public SpringCloudDevToolPortalState()
        {
        }
        public static new SpringCloudDevToolPortalState Empty => new SpringCloudDevToolPortalState();
    }
}
