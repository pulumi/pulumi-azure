// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.AppPlatform.Inputs
{

    public sealed class SpringCloudConfigurationServiceRepositoryGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies the SSH public key of git repository.
        /// </summary>
        [Input("hostKey")]
        public Input<string>? HostKey { get; set; }

        /// <summary>
        /// Specifies the SSH key algorithm of git repository.
        /// </summary>
        [Input("hostKeyAlgorithm")]
        public Input<string>? HostKeyAlgorithm { get; set; }

        /// <summary>
        /// Specifies the label of the repository.
        /// </summary>
        [Input("label", required: true)]
        public Input<string> Label { get; set; } = null!;

        /// <summary>
        /// Specifies the name which should be used for this repository.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// Specifies the password of git repository basic auth.
        /// </summary>
        [Input("password")]
        public Input<string>? Password { get; set; }

        [Input("patterns", required: true)]
        private InputList<string>? _patterns;

        /// <summary>
        /// Specifies the collection of patterns of the repository.
        /// </summary>
        public InputList<string> Patterns
        {
            get => _patterns ?? (_patterns = new InputList<string>());
            set => _patterns = value;
        }

        /// <summary>
        /// Specifies the SSH private key of git repository.
        /// </summary>
        [Input("privateKey")]
        public Input<string>? PrivateKey { get; set; }

        [Input("searchPaths")]
        private InputList<string>? _searchPaths;

        /// <summary>
        /// Specifies a list of searching path of the repository
        /// </summary>
        public InputList<string> SearchPaths
        {
            get => _searchPaths ?? (_searchPaths = new InputList<string>());
            set => _searchPaths = value;
        }

        /// <summary>
        /// Specifies whether enable the strict host key checking.
        /// </summary>
        [Input("strictHostKeyChecking")]
        public Input<bool>? StrictHostKeyChecking { get; set; }

        /// <summary>
        /// Specifies the URI of the repository.
        /// </summary>
        [Input("uri", required: true)]
        public Input<string> Uri { get; set; } = null!;

        /// <summary>
        /// Specifies the username of git repository basic auth.
        /// </summary>
        [Input("username")]
        public Input<string>? Username { get; set; }

        public SpringCloudConfigurationServiceRepositoryGetArgs()
        {
        }
        public static new SpringCloudConfigurationServiceRepositoryGetArgs Empty => new SpringCloudConfigurationServiceRepositoryGetArgs();
    }
}
