// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.AppPlatform
{
    /// <summary>
    /// &gt; **NOTE:** This resource is only applicable for Spring Cloud Service enterprise tier
    /// 
    /// Manages a Spring Cloud Application Performance Monitoring resource for Dynatrace.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Azure = Pulumi.Azure;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var exampleResourceGroup = new Azure.Core.ResourceGroup("exampleResourceGroup", new()
    ///     {
    ///         Location = "West Europe",
    ///     });
    /// 
    ///     var exampleSpringCloudService = new Azure.AppPlatform.SpringCloudService("exampleSpringCloudService", new()
    ///     {
    ///         Location = exampleResourceGroup.Location,
    ///         ResourceGroupName = exampleResourceGroup.Name,
    ///         SkuName = "E0",
    ///     });
    /// 
    ///     var exampleSpringCloudDynatraceApplicationPerformanceMonitoring = new Azure.AppPlatform.SpringCloudDynatraceApplicationPerformanceMonitoring("exampleSpringCloudDynatraceApplicationPerformanceMonitoring", new()
    ///     {
    ///         SpringCloudServiceId = exampleSpringCloudService.Id,
    ///         GloballyEnabled = true,
    ///         ApiUrl = "https://example-api-url.com",
    ///         ApiToken = "dt0s01.AAAAAAAAAAAAAAAAAAAAAAAA.BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB",
    ///         EnvironmentId = "example-environment-id",
    ///         Tenant = "example-tenant",
    ///         TenantToken = "dt0s01.AAAAAAAAAAAAAAAAAAAAAAAA.BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB",
    ///         ConnectionPoint = "https://example.live.dynatrace.com:443",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Spring Cloud Application Performance Monitoring resource for Dynatrace can be imported using the `resource id`, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import azure:appplatform/springCloudDynatraceApplicationPerformanceMonitoring:SpringCloudDynatraceApplicationPerformanceMonitoring example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.AppPlatform/spring/service1/apms/apm1
    /// ```
    /// </summary>
    [AzureResourceType("azure:appplatform/springCloudDynatraceApplicationPerformanceMonitoring:SpringCloudDynatraceApplicationPerformanceMonitoring")]
    public partial class SpringCloudDynatraceApplicationPerformanceMonitoring : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Specifies the API token of the Dynatrace environment.
        /// </summary>
        [Output("apiToken")]
        public Output<string?> ApiToken { get; private set; } = null!;

        /// <summary>
        /// Specifies the API Url of the Dynatrace environment.
        /// </summary>
        [Output("apiUrl")]
        public Output<string?> ApiUrl { get; private set; } = null!;

        /// <summary>
        /// Specifies the endpoint to connect to the Dynatrace environment.
        /// </summary>
        [Output("connectionPoint")]
        public Output<string> ConnectionPoint { get; private set; } = null!;

        /// <summary>
        /// Specifies the Dynatrace environment ID.
        /// </summary>
        [Output("environmentId")]
        public Output<string?> EnvironmentId { get; private set; } = null!;

        /// <summary>
        /// Specifies whether the Spring Cloud Application Performance Monitoring resource for Application Insights is enabled globally. Defaults to `false`.
        /// </summary>
        [Output("globallyEnabled")]
        public Output<bool?> GloballyEnabled { get; private set; } = null!;

        /// <summary>
        /// The name which should be used for this Spring Cloud Application Performance Monitoring resource for Dynatrace. Changing this forces a new resource to be created.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The ID of the Spring Cloud Service. Changing this forces a new resource to be created.
        /// </summary>
        [Output("springCloudServiceId")]
        public Output<string> SpringCloudServiceId { get; private set; } = null!;

        /// <summary>
        /// Specifies the Dynatrace tenant.
        /// </summary>
        [Output("tenant")]
        public Output<string> Tenant { get; private set; } = null!;

        /// <summary>
        /// Specifies the internal token that is used for authentication when OneAgent connects to the Dynatrace cluster to send data.
        /// </summary>
        [Output("tenantToken")]
        public Output<string> TenantToken { get; private set; } = null!;


        /// <summary>
        /// Create a SpringCloudDynatraceApplicationPerformanceMonitoring resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public SpringCloudDynatraceApplicationPerformanceMonitoring(string name, SpringCloudDynatraceApplicationPerformanceMonitoringArgs args, CustomResourceOptions? options = null)
            : base("azure:appplatform/springCloudDynatraceApplicationPerformanceMonitoring:SpringCloudDynatraceApplicationPerformanceMonitoring", name, args ?? new SpringCloudDynatraceApplicationPerformanceMonitoringArgs(), MakeResourceOptions(options, ""))
        {
        }

        private SpringCloudDynatraceApplicationPerformanceMonitoring(string name, Input<string> id, SpringCloudDynatraceApplicationPerformanceMonitoringState? state = null, CustomResourceOptions? options = null)
            : base("azure:appplatform/springCloudDynatraceApplicationPerformanceMonitoring:SpringCloudDynatraceApplicationPerformanceMonitoring", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                AdditionalSecretOutputs =
                {
                    "apiToken",
                    "tenant",
                    "tenantToken",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing SpringCloudDynatraceApplicationPerformanceMonitoring resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static SpringCloudDynatraceApplicationPerformanceMonitoring Get(string name, Input<string> id, SpringCloudDynatraceApplicationPerformanceMonitoringState? state = null, CustomResourceOptions? options = null)
        {
            return new SpringCloudDynatraceApplicationPerformanceMonitoring(name, id, state, options);
        }
    }

    public sealed class SpringCloudDynatraceApplicationPerformanceMonitoringArgs : global::Pulumi.ResourceArgs
    {
        [Input("apiToken")]
        private Input<string>? _apiToken;

        /// <summary>
        /// Specifies the API token of the Dynatrace environment.
        /// </summary>
        public Input<string>? ApiToken
        {
            get => _apiToken;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _apiToken = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// Specifies the API Url of the Dynatrace environment.
        /// </summary>
        [Input("apiUrl")]
        public Input<string>? ApiUrl { get; set; }

        /// <summary>
        /// Specifies the endpoint to connect to the Dynatrace environment.
        /// </summary>
        [Input("connectionPoint", required: true)]
        public Input<string> ConnectionPoint { get; set; } = null!;

        /// <summary>
        /// Specifies the Dynatrace environment ID.
        /// </summary>
        [Input("environmentId")]
        public Input<string>? EnvironmentId { get; set; }

        /// <summary>
        /// Specifies whether the Spring Cloud Application Performance Monitoring resource for Application Insights is enabled globally. Defaults to `false`.
        /// </summary>
        [Input("globallyEnabled")]
        public Input<bool>? GloballyEnabled { get; set; }

        /// <summary>
        /// The name which should be used for this Spring Cloud Application Performance Monitoring resource for Dynatrace. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The ID of the Spring Cloud Service. Changing this forces a new resource to be created.
        /// </summary>
        [Input("springCloudServiceId", required: true)]
        public Input<string> SpringCloudServiceId { get; set; } = null!;

        [Input("tenant", required: true)]
        private Input<string>? _tenant;

        /// <summary>
        /// Specifies the Dynatrace tenant.
        /// </summary>
        public Input<string>? Tenant
        {
            get => _tenant;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _tenant = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("tenantToken", required: true)]
        private Input<string>? _tenantToken;

        /// <summary>
        /// Specifies the internal token that is used for authentication when OneAgent connects to the Dynatrace cluster to send data.
        /// </summary>
        public Input<string>? TenantToken
        {
            get => _tenantToken;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _tenantToken = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        public SpringCloudDynatraceApplicationPerformanceMonitoringArgs()
        {
        }
        public static new SpringCloudDynatraceApplicationPerformanceMonitoringArgs Empty => new SpringCloudDynatraceApplicationPerformanceMonitoringArgs();
    }

    public sealed class SpringCloudDynatraceApplicationPerformanceMonitoringState : global::Pulumi.ResourceArgs
    {
        [Input("apiToken")]
        private Input<string>? _apiToken;

        /// <summary>
        /// Specifies the API token of the Dynatrace environment.
        /// </summary>
        public Input<string>? ApiToken
        {
            get => _apiToken;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _apiToken = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// Specifies the API Url of the Dynatrace environment.
        /// </summary>
        [Input("apiUrl")]
        public Input<string>? ApiUrl { get; set; }

        /// <summary>
        /// Specifies the endpoint to connect to the Dynatrace environment.
        /// </summary>
        [Input("connectionPoint")]
        public Input<string>? ConnectionPoint { get; set; }

        /// <summary>
        /// Specifies the Dynatrace environment ID.
        /// </summary>
        [Input("environmentId")]
        public Input<string>? EnvironmentId { get; set; }

        /// <summary>
        /// Specifies whether the Spring Cloud Application Performance Monitoring resource for Application Insights is enabled globally. Defaults to `false`.
        /// </summary>
        [Input("globallyEnabled")]
        public Input<bool>? GloballyEnabled { get; set; }

        /// <summary>
        /// The name which should be used for this Spring Cloud Application Performance Monitoring resource for Dynatrace. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The ID of the Spring Cloud Service. Changing this forces a new resource to be created.
        /// </summary>
        [Input("springCloudServiceId")]
        public Input<string>? SpringCloudServiceId { get; set; }

        [Input("tenant")]
        private Input<string>? _tenant;

        /// <summary>
        /// Specifies the Dynatrace tenant.
        /// </summary>
        public Input<string>? Tenant
        {
            get => _tenant;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _tenant = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("tenantToken")]
        private Input<string>? _tenantToken;

        /// <summary>
        /// Specifies the internal token that is used for authentication when OneAgent connects to the Dynatrace cluster to send data.
        /// </summary>
        public Input<string>? TenantToken
        {
            get => _tenantToken;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _tenantToken = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        public SpringCloudDynatraceApplicationPerformanceMonitoringState()
        {
        }
        public static new SpringCloudDynatraceApplicationPerformanceMonitoringState Empty => new SpringCloudDynatraceApplicationPerformanceMonitoringState();
    }
}
