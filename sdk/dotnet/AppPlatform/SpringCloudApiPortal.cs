// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.AppPlatform
{
    /// <summary>
    /// Manages a Spring Cloud API Portal.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using Azure = Pulumi.Azure;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var exampleResourceGroup = new Azure.Core.ResourceGroup("exampleResourceGroup", new Azure.Core.ResourceGroupArgs
    ///         {
    ///             Location = "West Europe",
    ///         });
    ///         var exampleSpringCloudService = new Azure.AppPlatform.SpringCloudService("exampleSpringCloudService", new Azure.AppPlatform.SpringCloudServiceArgs
    ///         {
    ///             Location = exampleResourceGroup.Location,
    ///             ResourceGroupName = exampleResourceGroup.Name,
    ///             SkuName = "E0",
    ///         });
    ///         var exampleSpringCloudGateway = new Azure.AppPlatform.SpringCloudGateway("exampleSpringCloudGateway", new Azure.AppPlatform.SpringCloudGatewayArgs
    ///         {
    ///             SpringCloudServiceId = exampleSpringCloudService.Id,
    ///         });
    ///         var exampleSpringCloudApiPortal = new Azure.AppPlatform.SpringCloudApiPortal("exampleSpringCloudApiPortal", new Azure.AppPlatform.SpringCloudApiPortalArgs
    ///         {
    ///             SpringCloudServiceId = exampleSpringCloudService.Id,
    ///             GatewayIds = 
    ///             {
    ///                 exampleSpringCloudGateway.Id,
    ///             },
    ///             HttpsOnlyEnabled = false,
    ///             PublicNetworkAccessEnabled = true,
    ///             InstanceCount = 1,
    ///             Sso = new Azure.AppPlatform.Inputs.SpringCloudApiPortalSsoArgs
    ///             {
    ///                 ClientId = "test",
    ///                 ClientSecret = "secret",
    ///                 IssuerUri = "https://www.example.com/issueToken",
    ///                 Scopes = 
    ///                 {
    ///                     "read",
    ///                 },
    ///             },
    ///         });
    ///     }
    /// 
    /// }
    /// ```
    /// 
    /// ## Import
    /// 
    /// Spring Cloud API Portals can be imported using the `resource id`, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import azure:appplatform/springCloudApiPortal:SpringCloudApiPortal example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resourceGroup1/providers/Microsoft.AppPlatform/Spring/service1/apiPortals/apiPortal1
    /// ```
    /// </summary>
    [AzureResourceType("azure:appplatform/springCloudApiPortal:SpringCloudApiPortal")]
    public partial class SpringCloudApiPortal : Pulumi.CustomResource
    {
        /// <summary>
        /// Specifies a list of Spring Cloud Gateway.
        /// </summary>
        [Output("gatewayIds")]
        public Output<ImmutableArray<string>> GatewayIds { get; private set; } = null!;

        /// <summary>
        /// is only https is allowed?
        /// </summary>
        [Output("httpsOnlyEnabled")]
        public Output<bool?> HttpsOnlyEnabled { get; private set; } = null!;

        /// <summary>
        /// Specifies the required instance count of the Spring Cloud API Portal. Possible Values are between `1` and `500`. Defaults to `1` if not specified.
        /// </summary>
        [Output("instanceCount")]
        public Output<int?> InstanceCount { get; private set; } = null!;

        /// <summary>
        /// The name which should be used for this Spring Cloud API Portal. Changing this forces a new Spring Cloud API Portal to be created.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Is the public network access enabled?
        /// </summary>
        [Output("publicNetworkAccessEnabled")]
        public Output<bool?> PublicNetworkAccessEnabled { get; private set; } = null!;

        /// <summary>
        /// The ID of the Spring Cloud Service. Changing this forces a new Spring Cloud API Portal to be created.
        /// </summary>
        [Output("springCloudServiceId")]
        public Output<string> SpringCloudServiceId { get; private set; } = null!;

        /// <summary>
        /// A `sso` block as defined below.
        /// </summary>
        [Output("sso")]
        public Output<Outputs.SpringCloudApiPortalSso?> Sso { get; private set; } = null!;

        /// <summary>
        /// TODO.
        /// </summary>
        [Output("url")]
        public Output<string> Url { get; private set; } = null!;


        /// <summary>
        /// Create a SpringCloudApiPortal resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public SpringCloudApiPortal(string name, SpringCloudApiPortalArgs args, CustomResourceOptions? options = null)
            : base("azure:appplatform/springCloudApiPortal:SpringCloudApiPortal", name, args ?? new SpringCloudApiPortalArgs(), MakeResourceOptions(options, ""))
        {
        }

        private SpringCloudApiPortal(string name, Input<string> id, SpringCloudApiPortalState? state = null, CustomResourceOptions? options = null)
            : base("azure:appplatform/springCloudApiPortal:SpringCloudApiPortal", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing SpringCloudApiPortal resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static SpringCloudApiPortal Get(string name, Input<string> id, SpringCloudApiPortalState? state = null, CustomResourceOptions? options = null)
        {
            return new SpringCloudApiPortal(name, id, state, options);
        }
    }

    public sealed class SpringCloudApiPortalArgs : Pulumi.ResourceArgs
    {
        [Input("gatewayIds")]
        private InputList<string>? _gatewayIds;

        /// <summary>
        /// Specifies a list of Spring Cloud Gateway.
        /// </summary>
        public InputList<string> GatewayIds
        {
            get => _gatewayIds ?? (_gatewayIds = new InputList<string>());
            set => _gatewayIds = value;
        }

        /// <summary>
        /// is only https is allowed?
        /// </summary>
        [Input("httpsOnlyEnabled")]
        public Input<bool>? HttpsOnlyEnabled { get; set; }

        /// <summary>
        /// Specifies the required instance count of the Spring Cloud API Portal. Possible Values are between `1` and `500`. Defaults to `1` if not specified.
        /// </summary>
        [Input("instanceCount")]
        public Input<int>? InstanceCount { get; set; }

        /// <summary>
        /// The name which should be used for this Spring Cloud API Portal. Changing this forces a new Spring Cloud API Portal to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Is the public network access enabled?
        /// </summary>
        [Input("publicNetworkAccessEnabled")]
        public Input<bool>? PublicNetworkAccessEnabled { get; set; }

        /// <summary>
        /// The ID of the Spring Cloud Service. Changing this forces a new Spring Cloud API Portal to be created.
        /// </summary>
        [Input("springCloudServiceId", required: true)]
        public Input<string> SpringCloudServiceId { get; set; } = null!;

        /// <summary>
        /// A `sso` block as defined below.
        /// </summary>
        [Input("sso")]
        public Input<Inputs.SpringCloudApiPortalSsoArgs>? Sso { get; set; }

        public SpringCloudApiPortalArgs()
        {
        }
    }

    public sealed class SpringCloudApiPortalState : Pulumi.ResourceArgs
    {
        [Input("gatewayIds")]
        private InputList<string>? _gatewayIds;

        /// <summary>
        /// Specifies a list of Spring Cloud Gateway.
        /// </summary>
        public InputList<string> GatewayIds
        {
            get => _gatewayIds ?? (_gatewayIds = new InputList<string>());
            set => _gatewayIds = value;
        }

        /// <summary>
        /// is only https is allowed?
        /// </summary>
        [Input("httpsOnlyEnabled")]
        public Input<bool>? HttpsOnlyEnabled { get; set; }

        /// <summary>
        /// Specifies the required instance count of the Spring Cloud API Portal. Possible Values are between `1` and `500`. Defaults to `1` if not specified.
        /// </summary>
        [Input("instanceCount")]
        public Input<int>? InstanceCount { get; set; }

        /// <summary>
        /// The name which should be used for this Spring Cloud API Portal. Changing this forces a new Spring Cloud API Portal to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Is the public network access enabled?
        /// </summary>
        [Input("publicNetworkAccessEnabled")]
        public Input<bool>? PublicNetworkAccessEnabled { get; set; }

        /// <summary>
        /// The ID of the Spring Cloud Service. Changing this forces a new Spring Cloud API Portal to be created.
        /// </summary>
        [Input("springCloudServiceId")]
        public Input<string>? SpringCloudServiceId { get; set; }

        /// <summary>
        /// A `sso` block as defined below.
        /// </summary>
        [Input("sso")]
        public Input<Inputs.SpringCloudApiPortalSsoGetArgs>? Sso { get; set; }

        /// <summary>
        /// TODO.
        /// </summary>
        [Input("url")]
        public Input<string>? Url { get; set; }

        public SpringCloudApiPortalState()
        {
        }
    }
}
