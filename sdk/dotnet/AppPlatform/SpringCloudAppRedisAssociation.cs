// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.AppPlatform
{
    /// <summary>
    /// Associates a Spring Cloud Application with a Redis Cache.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using Azure = Pulumi.Azure;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var exampleResourceGroup = new Azure.Core.ResourceGroup("exampleResourceGroup", new()
    ///     {
    ///         Location = "West Europe",
    ///     });
    /// 
    ///     var exampleSpringCloudService = new Azure.AppPlatform.SpringCloudService("exampleSpringCloudService", new()
    ///     {
    ///         ResourceGroupName = exampleResourceGroup.Name,
    ///         Location = exampleResourceGroup.Location,
    ///     });
    /// 
    ///     var exampleSpringCloudApp = new Azure.AppPlatform.SpringCloudApp("exampleSpringCloudApp", new()
    ///     {
    ///         ResourceGroupName = exampleResourceGroup.Name,
    ///         ServiceName = exampleSpringCloudService.Name,
    ///     });
    /// 
    ///     var exampleCache = new Azure.Redis.Cache("exampleCache", new()
    ///     {
    ///         Location = exampleResourceGroup.Location,
    ///         ResourceGroupName = exampleResourceGroup.Name,
    ///         Capacity = 0,
    ///         Family = "C",
    ///         SkuName = "Basic",
    ///         EnableNonSslPort = true,
    ///     });
    /// 
    ///     var exampleSpringCloudAppRedisAssociation = new Azure.AppPlatform.SpringCloudAppRedisAssociation("exampleSpringCloudAppRedisAssociation", new()
    ///     {
    ///         SpringCloudAppId = exampleSpringCloudApp.Id,
    ///         RedisCacheId = exampleCache.Id,
    ///         RedisAccessKey = exampleCache.PrimaryAccessKey,
    ///         SslEnabled = true,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Spring Cloud Application Redis Association can be imported using the `resource id`, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import azure:appplatform/springCloudAppRedisAssociation:SpringCloudAppRedisAssociation example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myresourcegroup/providers/Microsoft.AppPlatform/spring/myservice/apps/myapp/bindings/bind1
    /// ```
    /// </summary>
    [AzureResourceType("azure:appplatform/springCloudAppRedisAssociation:SpringCloudAppRedisAssociation")]
    public partial class SpringCloudAppRedisAssociation : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Specifies the name of the Spring Cloud Application Association. Changing this forces a new resource to be created.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Specifies the Redis Cache access key.
        /// </summary>
        [Output("redisAccessKey")]
        public Output<string> RedisAccessKey { get; private set; } = null!;

        /// <summary>
        /// Specifies the Redis Cache resource ID. Changing this forces a new resource to be created.
        /// </summary>
        [Output("redisCacheId")]
        public Output<string> RedisCacheId { get; private set; } = null!;

        /// <summary>
        /// Specifies the Spring Cloud Application resource ID in which the Association is created. Changing this forces a new resource to be created.
        /// </summary>
        [Output("springCloudAppId")]
        public Output<string> SpringCloudAppId { get; private set; } = null!;

        /// <summary>
        /// Should SSL be used when connecting to Redis? Defaults to `true`.
        /// </summary>
        [Output("sslEnabled")]
        public Output<bool?> SslEnabled { get; private set; } = null!;


        /// <summary>
        /// Create a SpringCloudAppRedisAssociation resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public SpringCloudAppRedisAssociation(string name, SpringCloudAppRedisAssociationArgs args, CustomResourceOptions? options = null)
            : base("azure:appplatform/springCloudAppRedisAssociation:SpringCloudAppRedisAssociation", name, args ?? new SpringCloudAppRedisAssociationArgs(), MakeResourceOptions(options, ""))
        {
        }

        private SpringCloudAppRedisAssociation(string name, Input<string> id, SpringCloudAppRedisAssociationState? state = null, CustomResourceOptions? options = null)
            : base("azure:appplatform/springCloudAppRedisAssociation:SpringCloudAppRedisAssociation", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing SpringCloudAppRedisAssociation resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static SpringCloudAppRedisAssociation Get(string name, Input<string> id, SpringCloudAppRedisAssociationState? state = null, CustomResourceOptions? options = null)
        {
            return new SpringCloudAppRedisAssociation(name, id, state, options);
        }
    }

    public sealed class SpringCloudAppRedisAssociationArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies the name of the Spring Cloud Application Association. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Specifies the Redis Cache access key.
        /// </summary>
        [Input("redisAccessKey", required: true)]
        public Input<string> RedisAccessKey { get; set; } = null!;

        /// <summary>
        /// Specifies the Redis Cache resource ID. Changing this forces a new resource to be created.
        /// </summary>
        [Input("redisCacheId", required: true)]
        public Input<string> RedisCacheId { get; set; } = null!;

        /// <summary>
        /// Specifies the Spring Cloud Application resource ID in which the Association is created. Changing this forces a new resource to be created.
        /// </summary>
        [Input("springCloudAppId", required: true)]
        public Input<string> SpringCloudAppId { get; set; } = null!;

        /// <summary>
        /// Should SSL be used when connecting to Redis? Defaults to `true`.
        /// </summary>
        [Input("sslEnabled")]
        public Input<bool>? SslEnabled { get; set; }

        public SpringCloudAppRedisAssociationArgs()
        {
        }
        public static new SpringCloudAppRedisAssociationArgs Empty => new SpringCloudAppRedisAssociationArgs();
    }

    public sealed class SpringCloudAppRedisAssociationState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies the name of the Spring Cloud Application Association. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Specifies the Redis Cache access key.
        /// </summary>
        [Input("redisAccessKey")]
        public Input<string>? RedisAccessKey { get; set; }

        /// <summary>
        /// Specifies the Redis Cache resource ID. Changing this forces a new resource to be created.
        /// </summary>
        [Input("redisCacheId")]
        public Input<string>? RedisCacheId { get; set; }

        /// <summary>
        /// Specifies the Spring Cloud Application resource ID in which the Association is created. Changing this forces a new resource to be created.
        /// </summary>
        [Input("springCloudAppId")]
        public Input<string>? SpringCloudAppId { get; set; }

        /// <summary>
        /// Should SSL be used when connecting to Redis? Defaults to `true`.
        /// </summary>
        [Input("sslEnabled")]
        public Input<bool>? SslEnabled { get; set; }

        public SpringCloudAppRedisAssociationState()
        {
        }
        public static new SpringCloudAppRedisAssociationState Empty => new SpringCloudAppRedisAssociationState();
    }
}
