// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.AppPlatform
{
    /// <summary>
    /// Associates a Spring Cloud Application with a CosmosDB Account.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Azure = Pulumi.Azure;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var exampleResourceGroup = new Azure.Core.ResourceGroup("exampleResourceGroup", new()
    ///     {
    ///         Location = "West Europe",
    ///     });
    /// 
    ///     var exampleSpringCloudService = new Azure.AppPlatform.SpringCloudService("exampleSpringCloudService", new()
    ///     {
    ///         ResourceGroupName = exampleResourceGroup.Name,
    ///         Location = exampleResourceGroup.Location,
    ///     });
    /// 
    ///     var exampleSpringCloudApp = new Azure.AppPlatform.SpringCloudApp("exampleSpringCloudApp", new()
    ///     {
    ///         ResourceGroupName = exampleResourceGroup.Name,
    ///         ServiceName = exampleSpringCloudService.Name,
    ///     });
    /// 
    ///     var exampleAccount = new Azure.CosmosDB.Account("exampleAccount", new()
    ///     {
    ///         Location = exampleResourceGroup.Location,
    ///         ResourceGroupName = exampleResourceGroup.Name,
    ///         OfferType = "Standard",
    ///         Kind = "GlobalDocumentDB",
    ///         ConsistencyPolicy = new Azure.CosmosDB.Inputs.AccountConsistencyPolicyArgs
    ///         {
    ///             ConsistencyLevel = "Strong",
    ///         },
    ///         GeoLocations = new[]
    ///         {
    ///             new Azure.CosmosDB.Inputs.AccountGeoLocationArgs
    ///             {
    ///                 Location = exampleResourceGroup.Location,
    ///                 FailoverPriority = 0,
    ///             },
    ///         },
    ///     });
    /// 
    ///     var exampleSpringCloudAppCosmosDBAssociation = new Azure.AppPlatform.SpringCloudAppCosmosDBAssociation("exampleSpringCloudAppCosmosDBAssociation", new()
    ///     {
    ///         SpringCloudAppId = exampleSpringCloudApp.Id,
    ///         CosmosdbAccountId = exampleAccount.Id,
    ///         ApiType = "table",
    ///         CosmosdbAccessKey = exampleAccount.PrimaryKey,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Spring Cloud Application CosmosDB Association can be imported using the `resource id`, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import azure:appplatform/springCloudAppCosmosDBAssociation:SpringCloudAppCosmosDBAssociation example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resourcegroup1/providers/Microsoft.AppPlatform/spring/service1/apps/app1/bindings/bind1
    /// ```
    /// </summary>
    [AzureResourceType("azure:appplatform/springCloudAppCosmosDBAssociation:SpringCloudAppCosmosDBAssociation")]
    public partial class SpringCloudAppCosmosDBAssociation : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Specifies the API type which should be used when connecting to the CosmosDB Account. Possible values are `cassandra`, `gremlin`, `mongo`, `sql` or `table`. Changing this forces a new resource to be created.
        /// </summary>
        [Output("apiType")]
        public Output<string> ApiType { get; private set; } = null!;

        /// <summary>
        /// Specifies the CosmosDB Account access key.
        /// </summary>
        [Output("cosmosdbAccessKey")]
        public Output<string> CosmosdbAccessKey { get; private set; } = null!;

        /// <summary>
        /// Specifies the ID of the CosmosDB Account. Changing this forces a new resource to be created.
        /// </summary>
        [Output("cosmosdbAccountId")]
        public Output<string> CosmosdbAccountId { get; private set; } = null!;

        /// <summary>
        /// Specifies the name of the Cassandra Keyspace which the Spring Cloud App should be associated with. Should only be set when `api_type` is `cassandra`.
        /// </summary>
        [Output("cosmosdbCassandraKeyspaceName")]
        public Output<string?> CosmosdbCassandraKeyspaceName { get; private set; } = null!;

        /// <summary>
        /// Specifies the name of the Gremlin Database which the Spring Cloud App should be associated with. Should only be set when `api_type` is `gremlin`.
        /// </summary>
        [Output("cosmosdbGremlinDatabaseName")]
        public Output<string?> CosmosdbGremlinDatabaseName { get; private set; } = null!;

        /// <summary>
        /// Specifies the name of the Gremlin Graph which the Spring Cloud App should be associated with. Should only be set when `api_type` is `gremlin`.
        /// </summary>
        [Output("cosmosdbGremlinGraphName")]
        public Output<string?> CosmosdbGremlinGraphName { get; private set; } = null!;

        /// <summary>
        /// Specifies the name of the Mongo Database which the Spring Cloud App should be associated with. Should only be set when `api_type` is `mongo`.
        /// </summary>
        [Output("cosmosdbMongoDatabaseName")]
        public Output<string?> CosmosdbMongoDatabaseName { get; private set; } = null!;

        /// <summary>
        /// Specifies the name of the SQL Database which the Spring Cloud App should be associated with. Should only be set when `api_type` is `sql`.
        /// </summary>
        [Output("cosmosdbSqlDatabaseName")]
        public Output<string?> CosmosdbSqlDatabaseName { get; private set; } = null!;

        /// <summary>
        /// Specifies the name of the Spring Cloud Application Association. Changing this forces a new resource to be created.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Specifies the ID of the Spring Cloud Application where this Association is created. Changing this forces a new resource to be created.
        /// </summary>
        [Output("springCloudAppId")]
        public Output<string> SpringCloudAppId { get; private set; } = null!;


        /// <summary>
        /// Create a SpringCloudAppCosmosDBAssociation resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public SpringCloudAppCosmosDBAssociation(string name, SpringCloudAppCosmosDBAssociationArgs args, CustomResourceOptions? options = null)
            : base("azure:appplatform/springCloudAppCosmosDBAssociation:SpringCloudAppCosmosDBAssociation", name, args ?? new SpringCloudAppCosmosDBAssociationArgs(), MakeResourceOptions(options, ""))
        {
        }

        private SpringCloudAppCosmosDBAssociation(string name, Input<string> id, SpringCloudAppCosmosDBAssociationState? state = null, CustomResourceOptions? options = null)
            : base("azure:appplatform/springCloudAppCosmosDBAssociation:SpringCloudAppCosmosDBAssociation", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing SpringCloudAppCosmosDBAssociation resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static SpringCloudAppCosmosDBAssociation Get(string name, Input<string> id, SpringCloudAppCosmosDBAssociationState? state = null, CustomResourceOptions? options = null)
        {
            return new SpringCloudAppCosmosDBAssociation(name, id, state, options);
        }
    }

    public sealed class SpringCloudAppCosmosDBAssociationArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies the API type which should be used when connecting to the CosmosDB Account. Possible values are `cassandra`, `gremlin`, `mongo`, `sql` or `table`. Changing this forces a new resource to be created.
        /// </summary>
        [Input("apiType", required: true)]
        public Input<string> ApiType { get; set; } = null!;

        /// <summary>
        /// Specifies the CosmosDB Account access key.
        /// </summary>
        [Input("cosmosdbAccessKey", required: true)]
        public Input<string> CosmosdbAccessKey { get; set; } = null!;

        /// <summary>
        /// Specifies the ID of the CosmosDB Account. Changing this forces a new resource to be created.
        /// </summary>
        [Input("cosmosdbAccountId", required: true)]
        public Input<string> CosmosdbAccountId { get; set; } = null!;

        /// <summary>
        /// Specifies the name of the Cassandra Keyspace which the Spring Cloud App should be associated with. Should only be set when `api_type` is `cassandra`.
        /// </summary>
        [Input("cosmosdbCassandraKeyspaceName")]
        public Input<string>? CosmosdbCassandraKeyspaceName { get; set; }

        /// <summary>
        /// Specifies the name of the Gremlin Database which the Spring Cloud App should be associated with. Should only be set when `api_type` is `gremlin`.
        /// </summary>
        [Input("cosmosdbGremlinDatabaseName")]
        public Input<string>? CosmosdbGremlinDatabaseName { get; set; }

        /// <summary>
        /// Specifies the name of the Gremlin Graph which the Spring Cloud App should be associated with. Should only be set when `api_type` is `gremlin`.
        /// </summary>
        [Input("cosmosdbGremlinGraphName")]
        public Input<string>? CosmosdbGremlinGraphName { get; set; }

        /// <summary>
        /// Specifies the name of the Mongo Database which the Spring Cloud App should be associated with. Should only be set when `api_type` is `mongo`.
        /// </summary>
        [Input("cosmosdbMongoDatabaseName")]
        public Input<string>? CosmosdbMongoDatabaseName { get; set; }

        /// <summary>
        /// Specifies the name of the SQL Database which the Spring Cloud App should be associated with. Should only be set when `api_type` is `sql`.
        /// </summary>
        [Input("cosmosdbSqlDatabaseName")]
        public Input<string>? CosmosdbSqlDatabaseName { get; set; }

        /// <summary>
        /// Specifies the name of the Spring Cloud Application Association. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Specifies the ID of the Spring Cloud Application where this Association is created. Changing this forces a new resource to be created.
        /// </summary>
        [Input("springCloudAppId", required: true)]
        public Input<string> SpringCloudAppId { get; set; } = null!;

        public SpringCloudAppCosmosDBAssociationArgs()
        {
        }
        public static new SpringCloudAppCosmosDBAssociationArgs Empty => new SpringCloudAppCosmosDBAssociationArgs();
    }

    public sealed class SpringCloudAppCosmosDBAssociationState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies the API type which should be used when connecting to the CosmosDB Account. Possible values are `cassandra`, `gremlin`, `mongo`, `sql` or `table`. Changing this forces a new resource to be created.
        /// </summary>
        [Input("apiType")]
        public Input<string>? ApiType { get; set; }

        /// <summary>
        /// Specifies the CosmosDB Account access key.
        /// </summary>
        [Input("cosmosdbAccessKey")]
        public Input<string>? CosmosdbAccessKey { get; set; }

        /// <summary>
        /// Specifies the ID of the CosmosDB Account. Changing this forces a new resource to be created.
        /// </summary>
        [Input("cosmosdbAccountId")]
        public Input<string>? CosmosdbAccountId { get; set; }

        /// <summary>
        /// Specifies the name of the Cassandra Keyspace which the Spring Cloud App should be associated with. Should only be set when `api_type` is `cassandra`.
        /// </summary>
        [Input("cosmosdbCassandraKeyspaceName")]
        public Input<string>? CosmosdbCassandraKeyspaceName { get; set; }

        /// <summary>
        /// Specifies the name of the Gremlin Database which the Spring Cloud App should be associated with. Should only be set when `api_type` is `gremlin`.
        /// </summary>
        [Input("cosmosdbGremlinDatabaseName")]
        public Input<string>? CosmosdbGremlinDatabaseName { get; set; }

        /// <summary>
        /// Specifies the name of the Gremlin Graph which the Spring Cloud App should be associated with. Should only be set when `api_type` is `gremlin`.
        /// </summary>
        [Input("cosmosdbGremlinGraphName")]
        public Input<string>? CosmosdbGremlinGraphName { get; set; }

        /// <summary>
        /// Specifies the name of the Mongo Database which the Spring Cloud App should be associated with. Should only be set when `api_type` is `mongo`.
        /// </summary>
        [Input("cosmosdbMongoDatabaseName")]
        public Input<string>? CosmosdbMongoDatabaseName { get; set; }

        /// <summary>
        /// Specifies the name of the SQL Database which the Spring Cloud App should be associated with. Should only be set when `api_type` is `sql`.
        /// </summary>
        [Input("cosmosdbSqlDatabaseName")]
        public Input<string>? CosmosdbSqlDatabaseName { get; set; }

        /// <summary>
        /// Specifies the name of the Spring Cloud Application Association. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Specifies the ID of the Spring Cloud Application where this Association is created. Changing this forces a new resource to be created.
        /// </summary>
        [Input("springCloudAppId")]
        public Input<string>? SpringCloudAppId { get; set; }

        public SpringCloudAppCosmosDBAssociationState()
        {
        }
        public static new SpringCloudAppCosmosDBAssociationState Empty => new SpringCloudAppCosmosDBAssociationState();
    }
}
