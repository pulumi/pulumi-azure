// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.AppPlatform
{
    /// <summary>
    /// Manages a Spring Cloud Builder.
    /// 
    /// &gt; **NOTE:** This resource is applicable only for Spring Cloud Service with enterprise tier.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using Azure = Pulumi.Azure;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var exampleResourceGroup = new Azure.Core.ResourceGroup("exampleResourceGroup", new()
    ///     {
    ///         Location = "West Europe",
    ///     });
    /// 
    ///     var exampleSpringCloudService = new Azure.AppPlatform.SpringCloudService("exampleSpringCloudService", new()
    ///     {
    ///         ResourceGroupName = exampleResourceGroup.Name,
    ///         Location = exampleResourceGroup.Location,
    ///         SkuName = "E0",
    ///     });
    /// 
    ///     var exampleSpringCloudBuilder = new Azure.AppPlatform.SpringCloudBuilder("exampleSpringCloudBuilder", new()
    ///     {
    ///         SpringCloudServiceId = exampleSpringCloudService.Id,
    ///         BuildPackGroups = new[]
    ///         {
    ///             new Azure.AppPlatform.Inputs.SpringCloudBuilderBuildPackGroupArgs
    ///             {
    ///                 Name = "mix",
    ///                 BuildPackIds = new[]
    ///                 {
    ///                     "tanzu-buildpacks/java-azure",
    ///                 },
    ///             },
    ///         },
    ///         Stack = new Azure.AppPlatform.Inputs.SpringCloudBuilderStackArgs
    ///         {
    ///             Id = "io.buildpacks.stacks.bionic",
    ///             Version = "base",
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Spring Cloud Builders can be imported using the `resource id`, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import azure:appplatform/springCloudBuilder:SpringCloudBuilder example /subscriptions/12345678-1234-9876-4563-123456789012/resourceGroups/resourceGroup1/providers/Microsoft.AppPlatform/spring/service1/buildServices/buildService1/builders/builder1
    /// ```
    /// </summary>
    [AzureResourceType("azure:appplatform/springCloudBuilder:SpringCloudBuilder")]
    public partial class SpringCloudBuilder : global::Pulumi.CustomResource
    {
        /// <summary>
        /// One or more `build_pack_group` blocks as defined below.
        /// </summary>
        [Output("buildPackGroups")]
        public Output<ImmutableArray<Outputs.SpringCloudBuilderBuildPackGroup>> BuildPackGroups { get; private set; } = null!;

        /// <summary>
        /// The name which should be used for this Spring Cloud Builder. Changing this forces a new Spring Cloud Builder to be created.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The ID of the Spring Cloud Service. Changing this forces a new Spring Cloud Builder to be created.
        /// </summary>
        [Output("springCloudServiceId")]
        public Output<string> SpringCloudServiceId { get; private set; } = null!;

        /// <summary>
        /// A `stack` block as defined below.
        /// </summary>
        [Output("stack")]
        public Output<Outputs.SpringCloudBuilderStack> Stack { get; private set; } = null!;


        /// <summary>
        /// Create a SpringCloudBuilder resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public SpringCloudBuilder(string name, SpringCloudBuilderArgs args, CustomResourceOptions? options = null)
            : base("azure:appplatform/springCloudBuilder:SpringCloudBuilder", name, args ?? new SpringCloudBuilderArgs(), MakeResourceOptions(options, ""))
        {
        }

        private SpringCloudBuilder(string name, Input<string> id, SpringCloudBuilderState? state = null, CustomResourceOptions? options = null)
            : base("azure:appplatform/springCloudBuilder:SpringCloudBuilder", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing SpringCloudBuilder resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static SpringCloudBuilder Get(string name, Input<string> id, SpringCloudBuilderState? state = null, CustomResourceOptions? options = null)
        {
            return new SpringCloudBuilder(name, id, state, options);
        }
    }

    public sealed class SpringCloudBuilderArgs : global::Pulumi.ResourceArgs
    {
        [Input("buildPackGroups", required: true)]
        private InputList<Inputs.SpringCloudBuilderBuildPackGroupArgs>? _buildPackGroups;

        /// <summary>
        /// One or more `build_pack_group` blocks as defined below.
        /// </summary>
        public InputList<Inputs.SpringCloudBuilderBuildPackGroupArgs> BuildPackGroups
        {
            get => _buildPackGroups ?? (_buildPackGroups = new InputList<Inputs.SpringCloudBuilderBuildPackGroupArgs>());
            set => _buildPackGroups = value;
        }

        /// <summary>
        /// The name which should be used for this Spring Cloud Builder. Changing this forces a new Spring Cloud Builder to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The ID of the Spring Cloud Service. Changing this forces a new Spring Cloud Builder to be created.
        /// </summary>
        [Input("springCloudServiceId", required: true)]
        public Input<string> SpringCloudServiceId { get; set; } = null!;

        /// <summary>
        /// A `stack` block as defined below.
        /// </summary>
        [Input("stack", required: true)]
        public Input<Inputs.SpringCloudBuilderStackArgs> Stack { get; set; } = null!;

        public SpringCloudBuilderArgs()
        {
        }
        public static new SpringCloudBuilderArgs Empty => new SpringCloudBuilderArgs();
    }

    public sealed class SpringCloudBuilderState : global::Pulumi.ResourceArgs
    {
        [Input("buildPackGroups")]
        private InputList<Inputs.SpringCloudBuilderBuildPackGroupGetArgs>? _buildPackGroups;

        /// <summary>
        /// One or more `build_pack_group` blocks as defined below.
        /// </summary>
        public InputList<Inputs.SpringCloudBuilderBuildPackGroupGetArgs> BuildPackGroups
        {
            get => _buildPackGroups ?? (_buildPackGroups = new InputList<Inputs.SpringCloudBuilderBuildPackGroupGetArgs>());
            set => _buildPackGroups = value;
        }

        /// <summary>
        /// The name which should be used for this Spring Cloud Builder. Changing this forces a new Spring Cloud Builder to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The ID of the Spring Cloud Service. Changing this forces a new Spring Cloud Builder to be created.
        /// </summary>
        [Input("springCloudServiceId")]
        public Input<string>? SpringCloudServiceId { get; set; }

        /// <summary>
        /// A `stack` block as defined below.
        /// </summary>
        [Input("stack")]
        public Input<Inputs.SpringCloudBuilderStackGetArgs>? Stack { get; set; }

        public SpringCloudBuilderState()
        {
        }
        public static new SpringCloudBuilderState Empty => new SpringCloudBuilderState();
    }
}
