// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.AppPlatform
{
    /// <summary>
    /// Manages a Spring Cloud Configuration Service.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using Azure = Pulumi.Azure;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var exampleResourceGroup = new Azure.Core.ResourceGroup("exampleResourceGroup", new Azure.Core.ResourceGroupArgs
    ///         {
    ///             Location = "West Europe",
    ///         });
    ///         var exampleSpringCloudService = new Azure.AppPlatform.SpringCloudService("exampleSpringCloudService", new Azure.AppPlatform.SpringCloudServiceArgs
    ///         {
    ///             Location = exampleResourceGroup.Location,
    ///             ResourceGroupName = exampleResourceGroup.Name,
    ///             SkuName = "E0",
    ///         });
    ///         var exampleSpringCloudConfigurationService = new Azure.AppPlatform.SpringCloudConfigurationService("exampleSpringCloudConfigurationService", new Azure.AppPlatform.SpringCloudConfigurationServiceArgs
    ///         {
    ///             SpringCloudServiceId = exampleSpringCloudService.Id,
    ///             Repositories = 
    ///             {
    ///                 new Azure.AppPlatform.Inputs.SpringCloudConfigurationServiceRepositoryArgs
    ///                 {
    ///                     Name = "fake",
    ///                     Label = "master",
    ///                     Patterns = 
    ///                     {
    ///                         "app/dev",
    ///                     },
    ///                     Uri = "https://github.com/Azure-Samples/piggymetrics",
    ///                     SearchPaths = 
    ///                     {
    ///                         "dir1",
    ///                         "dir2",
    ///                     },
    ///                     StrictHostKeyChecking = false,
    ///                     Username = "adminuser",
    ///                     Password = "H@Sh1CoR3!",
    ///                 },
    ///             },
    ///         });
    ///     }
    /// 
    /// }
    /// ```
    /// 
    /// ## Import
    /// 
    /// Spring Cloud Configuration Services can be imported using the `resource id`, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import azure:appplatform/springCloudConfigurationService:SpringCloudConfigurationService example /subscriptions/12345678-1234-9876-4563-123456789012/resourceGroups/resourceGroup1/providers/Microsoft.AppPlatform/Spring/service1/configurationServices/configurationService1
    /// ```
    /// </summary>
    [AzureResourceType("azure:appplatform/springCloudConfigurationService:SpringCloudConfigurationService")]
    public partial class SpringCloudConfigurationService : Pulumi.CustomResource
    {
        /// <summary>
        /// The name which should be used for this Spring Cloud Configuration Service. Changing this forces a new Spring Cloud Configuration Service to be created.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// One or more `repository` blocks as defined below.
        /// </summary>
        [Output("repositories")]
        public Output<ImmutableArray<Outputs.SpringCloudConfigurationServiceRepository>> Repositories { get; private set; } = null!;

        /// <summary>
        /// The ID of the Spring Cloud Service. Changing this forces a new Spring Cloud Configuration Service to be created.
        /// </summary>
        [Output("springCloudServiceId")]
        public Output<string> SpringCloudServiceId { get; private set; } = null!;


        /// <summary>
        /// Create a SpringCloudConfigurationService resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public SpringCloudConfigurationService(string name, SpringCloudConfigurationServiceArgs args, CustomResourceOptions? options = null)
            : base("azure:appplatform/springCloudConfigurationService:SpringCloudConfigurationService", name, args ?? new SpringCloudConfigurationServiceArgs(), MakeResourceOptions(options, ""))
        {
        }

        private SpringCloudConfigurationService(string name, Input<string> id, SpringCloudConfigurationServiceState? state = null, CustomResourceOptions? options = null)
            : base("azure:appplatform/springCloudConfigurationService:SpringCloudConfigurationService", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing SpringCloudConfigurationService resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static SpringCloudConfigurationService Get(string name, Input<string> id, SpringCloudConfigurationServiceState? state = null, CustomResourceOptions? options = null)
        {
            return new SpringCloudConfigurationService(name, id, state, options);
        }
    }

    public sealed class SpringCloudConfigurationServiceArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name which should be used for this Spring Cloud Configuration Service. Changing this forces a new Spring Cloud Configuration Service to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("repositories")]
        private InputList<Inputs.SpringCloudConfigurationServiceRepositoryArgs>? _repositories;

        /// <summary>
        /// One or more `repository` blocks as defined below.
        /// </summary>
        public InputList<Inputs.SpringCloudConfigurationServiceRepositoryArgs> Repositories
        {
            get => _repositories ?? (_repositories = new InputList<Inputs.SpringCloudConfigurationServiceRepositoryArgs>());
            set => _repositories = value;
        }

        /// <summary>
        /// The ID of the Spring Cloud Service. Changing this forces a new Spring Cloud Configuration Service to be created.
        /// </summary>
        [Input("springCloudServiceId", required: true)]
        public Input<string> SpringCloudServiceId { get; set; } = null!;

        public SpringCloudConfigurationServiceArgs()
        {
        }
    }

    public sealed class SpringCloudConfigurationServiceState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name which should be used for this Spring Cloud Configuration Service. Changing this forces a new Spring Cloud Configuration Service to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("repositories")]
        private InputList<Inputs.SpringCloudConfigurationServiceRepositoryGetArgs>? _repositories;

        /// <summary>
        /// One or more `repository` blocks as defined below.
        /// </summary>
        public InputList<Inputs.SpringCloudConfigurationServiceRepositoryGetArgs> Repositories
        {
            get => _repositories ?? (_repositories = new InputList<Inputs.SpringCloudConfigurationServiceRepositoryGetArgs>());
            set => _repositories = value;
        }

        /// <summary>
        /// The ID of the Spring Cloud Service. Changing this forces a new Spring Cloud Configuration Service to be created.
        /// </summary>
        [Input("springCloudServiceId")]
        public Input<string>? SpringCloudServiceId { get; set; }

        public SpringCloudConfigurationServiceState()
        {
        }
    }
}
