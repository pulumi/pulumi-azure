// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.AppPlatform
{
    /// <summary>
    /// Manages an Active Azure Spring Cloud Deployment.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using Azure = Pulumi.Azure;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var exampleResourceGroup = new Azure.Core.ResourceGroup("exampleResourceGroup", new Azure.Core.ResourceGroupArgs
    ///         {
    ///             Location = "West Europe",
    ///         });
    ///         var exampleSpringCloudService = new Azure.AppPlatform.SpringCloudService("exampleSpringCloudService", new Azure.AppPlatform.SpringCloudServiceArgs
    ///         {
    ///             ResourceGroupName = exampleResourceGroup.Name,
    ///             Location = exampleResourceGroup.Location,
    ///         });
    ///         var exampleSpringCloudApp = new Azure.AppPlatform.SpringCloudApp("exampleSpringCloudApp", new Azure.AppPlatform.SpringCloudAppArgs
    ///         {
    ///             ResourceGroupName = exampleResourceGroup.Name,
    ///             ServiceName = exampleSpringCloudService.Name,
    ///             Identity = new Azure.AppPlatform.Inputs.SpringCloudAppIdentityArgs
    ///             {
    ///                 Type = "SystemAssigned",
    ///             },
    ///         });
    ///         var exampleSpringCloudJavaDeployment = new Azure.AppPlatform.SpringCloudJavaDeployment("exampleSpringCloudJavaDeployment", new Azure.AppPlatform.SpringCloudJavaDeploymentArgs
    ///         {
    ///             SpringCloudAppId = exampleSpringCloudApp.Id,
    ///             Cpu = 2,
    ///             MemoryInGb = 4,
    ///             InstanceCount = 2,
    ///             JvmOptions = "-XX:+PrintGC",
    ///             RuntimeVersion = "Java_11",
    ///             EnvironmentVariables = 
    ///             {
    ///                 { "Env", "Staging" },
    ///             },
    ///         });
    ///         var exampleSpringCloudActiveDeployment = new Azure.AppPlatform.SpringCloudActiveDeployment("exampleSpringCloudActiveDeployment", new Azure.AppPlatform.SpringCloudActiveDeploymentArgs
    ///         {
    ///             SpringCloudAppId = exampleSpringCloudApp.Id,
    ///             DeploymentName = exampleSpringCloudJavaDeployment.Name,
    ///         });
    ///     }
    /// 
    /// }
    /// ```
    /// 
    /// ## Import
    /// 
    /// Spring Cloud Active Deployment can be imported using the `resource id`, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import azure:appplatform/springCloudActiveDeployment:SpringCloudActiveDeployment example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resourcegroup1/providers/Microsoft.AppPlatform/Spring/service1/apps/app1
    /// ```
    /// </summary>
    [AzureResourceType("azure:appplatform/springCloudActiveDeployment:SpringCloudActiveDeployment")]
    public partial class SpringCloudActiveDeployment : Pulumi.CustomResource
    {
        /// <summary>
        /// Specifies the name of Spring Cloud Deployment which is going to be active.
        /// </summary>
        [Output("deploymentName")]
        public Output<string> DeploymentName { get; private set; } = null!;

        /// <summary>
        /// Specifies the id of the Spring Cloud Application. Changing this forces a new resource to be created.
        /// </summary>
        [Output("springCloudAppId")]
        public Output<string> SpringCloudAppId { get; private set; } = null!;


        /// <summary>
        /// Create a SpringCloudActiveDeployment resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public SpringCloudActiveDeployment(string name, SpringCloudActiveDeploymentArgs args, CustomResourceOptions? options = null)
            : base("azure:appplatform/springCloudActiveDeployment:SpringCloudActiveDeployment", name, args ?? new SpringCloudActiveDeploymentArgs(), MakeResourceOptions(options, ""))
        {
        }

        private SpringCloudActiveDeployment(string name, Input<string> id, SpringCloudActiveDeploymentState? state = null, CustomResourceOptions? options = null)
            : base("azure:appplatform/springCloudActiveDeployment:SpringCloudActiveDeployment", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing SpringCloudActiveDeployment resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static SpringCloudActiveDeployment Get(string name, Input<string> id, SpringCloudActiveDeploymentState? state = null, CustomResourceOptions? options = null)
        {
            return new SpringCloudActiveDeployment(name, id, state, options);
        }
    }

    public sealed class SpringCloudActiveDeploymentArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies the name of Spring Cloud Deployment which is going to be active.
        /// </summary>
        [Input("deploymentName", required: true)]
        public Input<string> DeploymentName { get; set; } = null!;

        /// <summary>
        /// Specifies the id of the Spring Cloud Application. Changing this forces a new resource to be created.
        /// </summary>
        [Input("springCloudAppId", required: true)]
        public Input<string> SpringCloudAppId { get; set; } = null!;

        public SpringCloudActiveDeploymentArgs()
        {
        }
    }

    public sealed class SpringCloudActiveDeploymentState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies the name of Spring Cloud Deployment which is going to be active.
        /// </summary>
        [Input("deploymentName")]
        public Input<string>? DeploymentName { get; set; }

        /// <summary>
        /// Specifies the id of the Spring Cloud Application. Changing this forces a new resource to be created.
        /// </summary>
        [Input("springCloudAppId")]
        public Input<string>? SpringCloudAppId { get; set; }

        public SpringCloudActiveDeploymentState()
        {
        }
    }
}
