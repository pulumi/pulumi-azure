// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.AppPlatform
{
    /// <summary>
    /// Manages an Azure Spring Cloud Deployment with a Java runtime.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using Azure = Pulumi.Azure;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var exampleResourceGroup = new Azure.Core.ResourceGroup("exampleResourceGroup", new Azure.Core.ResourceGroupArgs
    ///         {
    ///             Location = "West Europe",
    ///         });
    ///         var exampleSpringCloudService = new Azure.AppPlatform.SpringCloudService("exampleSpringCloudService", new Azure.AppPlatform.SpringCloudServiceArgs
    ///         {
    ///             ResourceGroupName = exampleResourceGroup.Name,
    ///             Location = exampleResourceGroup.Location,
    ///         });
    ///         var exampleSpringCloudApp = new Azure.AppPlatform.SpringCloudApp("exampleSpringCloudApp", new Azure.AppPlatform.SpringCloudAppArgs
    ///         {
    ///             ResourceGroupName = exampleResourceGroup.Name,
    ///             ServiceName = exampleSpringCloudService.Name,
    ///             Identity = new Azure.AppPlatform.Inputs.SpringCloudAppIdentityArgs
    ///             {
    ///                 Type = "SystemAssigned",
    ///             },
    ///         });
    ///         var exampleSpringCloudJavaDeployment = new Azure.AppPlatform.SpringCloudJavaDeployment("exampleSpringCloudJavaDeployment", new Azure.AppPlatform.SpringCloudJavaDeploymentArgs
    ///         {
    ///             SpringCloudAppId = exampleSpringCloudApp.Id,
    ///             Cpu = 2,
    ///             InstanceCount = 2,
    ///             JvmOptions = "-XX:+PrintGC",
    ///             MemoryInGb = 4,
    ///             RuntimeVersion = "Java_11",
    ///             EnvironmentVariables = 
    ///             {
    ///                 { "Foo", "Bar" },
    ///                 { "Env", "Staging" },
    ///             },
    ///         });
    ///     }
    /// 
    /// }
    /// ```
    /// 
    /// ## Import
    /// 
    /// Spring Cloud Deployment can be imported using the `resource id`, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import azure:appplatform/springCloudJavaDeployment:SpringCloudJavaDeployment example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resourcegroup1/providers/Microsoft.AppPlatform/Spring/service1/apps/app1/deployments/deploy1
    /// ```
    /// </summary>
    [AzureResourceType("azure:appplatform/springCloudJavaDeployment:SpringCloudJavaDeployment")]
    public partial class SpringCloudJavaDeployment : Pulumi.CustomResource
    {
        /// <summary>
        /// Specifies the required cpu of the Spring Cloud Deployment. Possible Values are between `1` and `4`. Defaults to `1` if not specified.
        /// </summary>
        [Output("cpu")]
        public Output<int?> Cpu { get; private set; } = null!;

        /// <summary>
        /// Specifies the environment variables of the Spring Cloud Deployment as a map of key-value pairs.
        /// </summary>
        [Output("environmentVariables")]
        public Output<ImmutableDictionary<string, string>?> EnvironmentVariables { get; private set; } = null!;

        /// <summary>
        /// Specifies the required instance count of the Spring Cloud Deployment. Possible Values are between `1` and `500`. Defaults to `1` if not specified.
        /// </summary>
        [Output("instanceCount")]
        public Output<int?> InstanceCount { get; private set; } = null!;

        /// <summary>
        /// Specifies the jvm option of the Spring Cloud Deployment.
        /// </summary>
        [Output("jvmOptions")]
        public Output<string?> JvmOptions { get; private set; } = null!;

        /// <summary>
        /// Specifies the required memory size of the Spring Cloud Deployment. Possible Values are between `1` and `8`. Defaults to `1` if not specified.
        /// </summary>
        [Output("memoryInGb")]
        public Output<int?> MemoryInGb { get; private set; } = null!;

        /// <summary>
        /// Specifies the name of the Spring Cloud Deployment. Changing this forces a new resource to be created.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Specifies the runtime version of the Spring Cloud Deployment. Possible Values are `Java_8` and `Java_11`. Defaults to `Java_8`.
        /// </summary>
        [Output("runtimeVersion")]
        public Output<string?> RuntimeVersion { get; private set; } = null!;

        /// <summary>
        /// Specifies the id of the Spring Cloud Application in which to create the Deployment. Changing this forces a new resource to be created.
        /// </summary>
        [Output("springCloudAppId")]
        public Output<string> SpringCloudAppId { get; private set; } = null!;


        /// <summary>
        /// Create a SpringCloudJavaDeployment resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public SpringCloudJavaDeployment(string name, SpringCloudJavaDeploymentArgs args, CustomResourceOptions? options = null)
            : base("azure:appplatform/springCloudJavaDeployment:SpringCloudJavaDeployment", name, args ?? new SpringCloudJavaDeploymentArgs(), MakeResourceOptions(options, ""))
        {
        }

        private SpringCloudJavaDeployment(string name, Input<string> id, SpringCloudJavaDeploymentState? state = null, CustomResourceOptions? options = null)
            : base("azure:appplatform/springCloudJavaDeployment:SpringCloudJavaDeployment", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing SpringCloudJavaDeployment resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static SpringCloudJavaDeployment Get(string name, Input<string> id, SpringCloudJavaDeploymentState? state = null, CustomResourceOptions? options = null)
        {
            return new SpringCloudJavaDeployment(name, id, state, options);
        }
    }

    public sealed class SpringCloudJavaDeploymentArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies the required cpu of the Spring Cloud Deployment. Possible Values are between `1` and `4`. Defaults to `1` if not specified.
        /// </summary>
        [Input("cpu")]
        public Input<int>? Cpu { get; set; }

        [Input("environmentVariables")]
        private InputMap<string>? _environmentVariables;

        /// <summary>
        /// Specifies the environment variables of the Spring Cloud Deployment as a map of key-value pairs.
        /// </summary>
        public InputMap<string> EnvironmentVariables
        {
            get => _environmentVariables ?? (_environmentVariables = new InputMap<string>());
            set => _environmentVariables = value;
        }

        /// <summary>
        /// Specifies the required instance count of the Spring Cloud Deployment. Possible Values are between `1` and `500`. Defaults to `1` if not specified.
        /// </summary>
        [Input("instanceCount")]
        public Input<int>? InstanceCount { get; set; }

        /// <summary>
        /// Specifies the jvm option of the Spring Cloud Deployment.
        /// </summary>
        [Input("jvmOptions")]
        public Input<string>? JvmOptions { get; set; }

        /// <summary>
        /// Specifies the required memory size of the Spring Cloud Deployment. Possible Values are between `1` and `8`. Defaults to `1` if not specified.
        /// </summary>
        [Input("memoryInGb")]
        public Input<int>? MemoryInGb { get; set; }

        /// <summary>
        /// Specifies the name of the Spring Cloud Deployment. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Specifies the runtime version of the Spring Cloud Deployment. Possible Values are `Java_8` and `Java_11`. Defaults to `Java_8`.
        /// </summary>
        [Input("runtimeVersion")]
        public Input<string>? RuntimeVersion { get; set; }

        /// <summary>
        /// Specifies the id of the Spring Cloud Application in which to create the Deployment. Changing this forces a new resource to be created.
        /// </summary>
        [Input("springCloudAppId", required: true)]
        public Input<string> SpringCloudAppId { get; set; } = null!;

        public SpringCloudJavaDeploymentArgs()
        {
        }
    }

    public sealed class SpringCloudJavaDeploymentState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies the required cpu of the Spring Cloud Deployment. Possible Values are between `1` and `4`. Defaults to `1` if not specified.
        /// </summary>
        [Input("cpu")]
        public Input<int>? Cpu { get; set; }

        [Input("environmentVariables")]
        private InputMap<string>? _environmentVariables;

        /// <summary>
        /// Specifies the environment variables of the Spring Cloud Deployment as a map of key-value pairs.
        /// </summary>
        public InputMap<string> EnvironmentVariables
        {
            get => _environmentVariables ?? (_environmentVariables = new InputMap<string>());
            set => _environmentVariables = value;
        }

        /// <summary>
        /// Specifies the required instance count of the Spring Cloud Deployment. Possible Values are between `1` and `500`. Defaults to `1` if not specified.
        /// </summary>
        [Input("instanceCount")]
        public Input<int>? InstanceCount { get; set; }

        /// <summary>
        /// Specifies the jvm option of the Spring Cloud Deployment.
        /// </summary>
        [Input("jvmOptions")]
        public Input<string>? JvmOptions { get; set; }

        /// <summary>
        /// Specifies the required memory size of the Spring Cloud Deployment. Possible Values are between `1` and `8`. Defaults to `1` if not specified.
        /// </summary>
        [Input("memoryInGb")]
        public Input<int>? MemoryInGb { get; set; }

        /// <summary>
        /// Specifies the name of the Spring Cloud Deployment. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Specifies the runtime version of the Spring Cloud Deployment. Possible Values are `Java_8` and `Java_11`. Defaults to `Java_8`.
        /// </summary>
        [Input("runtimeVersion")]
        public Input<string>? RuntimeVersion { get; set; }

        /// <summary>
        /// Specifies the id of the Spring Cloud Application in which to create the Deployment. Changing this forces a new resource to be created.
        /// </summary>
        [Input("springCloudAppId")]
        public Input<string>? SpringCloudAppId { get; set; }

        public SpringCloudJavaDeploymentState()
        {
        }
    }
}
