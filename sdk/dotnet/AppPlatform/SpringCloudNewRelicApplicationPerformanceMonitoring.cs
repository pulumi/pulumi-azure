// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.AppPlatform
{
    /// <summary>
    /// &gt; **NOTE:** This resource is only applicable for Spring Cloud Service enterprise tier
    /// 
    /// Manages a Spring Cloud Application Performance Monitoring resource for New Relic.
    /// 
    /// ## Example Usage
    /// 
    /// &lt;!--Start PulumiCodeChooser --&gt;
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Azure = Pulumi.Azure;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Azure.Core.ResourceGroup("example", new()
    ///     {
    ///         Name = "example",
    ///         Location = "West Europe",
    ///     });
    /// 
    ///     var exampleSpringCloudService = new Azure.AppPlatform.SpringCloudService("example", new()
    ///     {
    ///         Name = "example",
    ///         Location = example.Location,
    ///         ResourceGroupName = example.Name,
    ///         SkuName = "E0",
    ///     });
    /// 
    ///     var exampleSpringCloudNewRelicApplicationPerformanceMonitoring = new Azure.AppPlatform.SpringCloudNewRelicApplicationPerformanceMonitoring("example", new()
    ///     {
    ///         Name = "example",
    ///         SpringCloudServiceId = exampleSpringCloudService.Id,
    ///         AppName = "example-app-name",
    ///         LicenseKey = "example-license-key",
    ///         AppServerPort = 8080,
    ///         Labels = 
    ///         {
    ///             { "tagName1", "tagValue1" },
    ///             { "tagName2", "tagValue2" },
    ///         },
    ///         GloballyEnabled = true,
    ///     });
    /// 
    /// });
    /// ```
    /// &lt;!--End PulumiCodeChooser --&gt;
    /// 
    /// ## Import
    /// 
    /// Spring Cloud Application Performance Monitoring resource for New Relic can be imported using the `resource id`, e.g.
    /// 
    /// ```sh
    /// $ pulumi import azure:appplatform/springCloudNewRelicApplicationPerformanceMonitoring:SpringCloudNewRelicApplicationPerformanceMonitoring example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.AppPlatform/spring/service1/apms/apm1
    /// ```
    /// </summary>
    [AzureResourceType("azure:appplatform/springCloudNewRelicApplicationPerformanceMonitoring:SpringCloudNewRelicApplicationPerformanceMonitoring")]
    public partial class SpringCloudNewRelicApplicationPerformanceMonitoring : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Specifies whether enable the agent. Defaults to `true`.
        /// </summary>
        [Output("agentEnabled")]
        public Output<bool?> AgentEnabled { get; private set; } = null!;

        /// <summary>
        /// Specifies the application name used to report data to New Relic.
        /// </summary>
        [Output("appName")]
        public Output<string> AppName { get; private set; } = null!;

        /// <summary>
        /// Specifies the port number to differentiate JVMs for the same app on the same machine.
        /// </summary>
        [Output("appServerPort")]
        public Output<int?> AppServerPort { get; private set; } = null!;

        /// <summary>
        /// Specifies whether enable plain text logging of all data sent to New Relic to the agent logfile. Defaults to `false`.
        /// </summary>
        [Output("auditModeEnabled")]
        public Output<bool?> AuditModeEnabled { get; private set; } = null!;

        /// <summary>
        /// Specifies whether enable the reporting of data separately for each web app. Defaults to `false`.
        /// </summary>
        [Output("autoAppNamingEnabled")]
        public Output<bool?> AutoAppNamingEnabled { get; private set; } = null!;

        /// <summary>
        /// Specifies whether enable the component-based transaction naming. Defaults to `true`.
        /// </summary>
        [Output("autoTransactionNamingEnabled")]
        public Output<bool?> AutoTransactionNamingEnabled { get; private set; } = null!;

        /// <summary>
        /// Specifies whether enable all instrumentation using an `@Trace` annotation. Disabling this causes `@Trace` annotations to be ignored. Defaults to `true`.
        /// </summary>
        [Output("customTracingEnabled")]
        public Output<bool?> CustomTracingEnabled { get; private set; } = null!;

        /// <summary>
        /// Specifies whether the Spring Cloud Application Performance Monitoring resource for Application Insights is enabled globally. Defaults to `false`.
        /// </summary>
        [Output("globallyEnabled")]
        public Output<bool?> GloballyEnabled { get; private set; } = null!;

        /// <summary>
        /// Specifies a mapping of labels to be added to the New Relic application.
        /// </summary>
        [Output("labels")]
        public Output<ImmutableDictionary<string, string>?> Labels { get; private set; } = null!;

        /// <summary>
        /// Specifies the license key associated with the New Relic account. This key binds your agent's data to your account in New Relic service.
        /// </summary>
        [Output("licenseKey")]
        public Output<string> LicenseKey { get; private set; } = null!;

        /// <summary>
        /// The name which should be used for this Spring Cloud Application Performance Monitoring resource for New Relic. Changing this forces a new resource to be created.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The ID of the Spring Cloud Service. Changing this forces a new resource to be created.
        /// </summary>
        [Output("springCloudServiceId")]
        public Output<string> SpringCloudServiceId { get; private set; } = null!;


        /// <summary>
        /// Create a SpringCloudNewRelicApplicationPerformanceMonitoring resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public SpringCloudNewRelicApplicationPerformanceMonitoring(string name, SpringCloudNewRelicApplicationPerformanceMonitoringArgs args, CustomResourceOptions? options = null)
            : base("azure:appplatform/springCloudNewRelicApplicationPerformanceMonitoring:SpringCloudNewRelicApplicationPerformanceMonitoring", name, args ?? new SpringCloudNewRelicApplicationPerformanceMonitoringArgs(), MakeResourceOptions(options, ""))
        {
        }

        private SpringCloudNewRelicApplicationPerformanceMonitoring(string name, Input<string> id, SpringCloudNewRelicApplicationPerformanceMonitoringState? state = null, CustomResourceOptions? options = null)
            : base("azure:appplatform/springCloudNewRelicApplicationPerformanceMonitoring:SpringCloudNewRelicApplicationPerformanceMonitoring", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                AdditionalSecretOutputs =
                {
                    "licenseKey",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing SpringCloudNewRelicApplicationPerformanceMonitoring resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static SpringCloudNewRelicApplicationPerformanceMonitoring Get(string name, Input<string> id, SpringCloudNewRelicApplicationPerformanceMonitoringState? state = null, CustomResourceOptions? options = null)
        {
            return new SpringCloudNewRelicApplicationPerformanceMonitoring(name, id, state, options);
        }
    }

    public sealed class SpringCloudNewRelicApplicationPerformanceMonitoringArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies whether enable the agent. Defaults to `true`.
        /// </summary>
        [Input("agentEnabled")]
        public Input<bool>? AgentEnabled { get; set; }

        /// <summary>
        /// Specifies the application name used to report data to New Relic.
        /// </summary>
        [Input("appName", required: true)]
        public Input<string> AppName { get; set; } = null!;

        /// <summary>
        /// Specifies the port number to differentiate JVMs for the same app on the same machine.
        /// </summary>
        [Input("appServerPort")]
        public Input<int>? AppServerPort { get; set; }

        /// <summary>
        /// Specifies whether enable plain text logging of all data sent to New Relic to the agent logfile. Defaults to `false`.
        /// </summary>
        [Input("auditModeEnabled")]
        public Input<bool>? AuditModeEnabled { get; set; }

        /// <summary>
        /// Specifies whether enable the reporting of data separately for each web app. Defaults to `false`.
        /// </summary>
        [Input("autoAppNamingEnabled")]
        public Input<bool>? AutoAppNamingEnabled { get; set; }

        /// <summary>
        /// Specifies whether enable the component-based transaction naming. Defaults to `true`.
        /// </summary>
        [Input("autoTransactionNamingEnabled")]
        public Input<bool>? AutoTransactionNamingEnabled { get; set; }

        /// <summary>
        /// Specifies whether enable all instrumentation using an `@Trace` annotation. Disabling this causes `@Trace` annotations to be ignored. Defaults to `true`.
        /// </summary>
        [Input("customTracingEnabled")]
        public Input<bool>? CustomTracingEnabled { get; set; }

        /// <summary>
        /// Specifies whether the Spring Cloud Application Performance Monitoring resource for Application Insights is enabled globally. Defaults to `false`.
        /// </summary>
        [Input("globallyEnabled")]
        public Input<bool>? GloballyEnabled { get; set; }

        [Input("labels")]
        private InputMap<string>? _labels;

        /// <summary>
        /// Specifies a mapping of labels to be added to the New Relic application.
        /// </summary>
        public InputMap<string> Labels
        {
            get => _labels ?? (_labels = new InputMap<string>());
            set => _labels = value;
        }

        [Input("licenseKey", required: true)]
        private Input<string>? _licenseKey;

        /// <summary>
        /// Specifies the license key associated with the New Relic account. This key binds your agent's data to your account in New Relic service.
        /// </summary>
        public Input<string>? LicenseKey
        {
            get => _licenseKey;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _licenseKey = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// The name which should be used for this Spring Cloud Application Performance Monitoring resource for New Relic. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The ID of the Spring Cloud Service. Changing this forces a new resource to be created.
        /// </summary>
        [Input("springCloudServiceId", required: true)]
        public Input<string> SpringCloudServiceId { get; set; } = null!;

        public SpringCloudNewRelicApplicationPerformanceMonitoringArgs()
        {
        }
        public static new SpringCloudNewRelicApplicationPerformanceMonitoringArgs Empty => new SpringCloudNewRelicApplicationPerformanceMonitoringArgs();
    }

    public sealed class SpringCloudNewRelicApplicationPerformanceMonitoringState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies whether enable the agent. Defaults to `true`.
        /// </summary>
        [Input("agentEnabled")]
        public Input<bool>? AgentEnabled { get; set; }

        /// <summary>
        /// Specifies the application name used to report data to New Relic.
        /// </summary>
        [Input("appName")]
        public Input<string>? AppName { get; set; }

        /// <summary>
        /// Specifies the port number to differentiate JVMs for the same app on the same machine.
        /// </summary>
        [Input("appServerPort")]
        public Input<int>? AppServerPort { get; set; }

        /// <summary>
        /// Specifies whether enable plain text logging of all data sent to New Relic to the agent logfile. Defaults to `false`.
        /// </summary>
        [Input("auditModeEnabled")]
        public Input<bool>? AuditModeEnabled { get; set; }

        /// <summary>
        /// Specifies whether enable the reporting of data separately for each web app. Defaults to `false`.
        /// </summary>
        [Input("autoAppNamingEnabled")]
        public Input<bool>? AutoAppNamingEnabled { get; set; }

        /// <summary>
        /// Specifies whether enable the component-based transaction naming. Defaults to `true`.
        /// </summary>
        [Input("autoTransactionNamingEnabled")]
        public Input<bool>? AutoTransactionNamingEnabled { get; set; }

        /// <summary>
        /// Specifies whether enable all instrumentation using an `@Trace` annotation. Disabling this causes `@Trace` annotations to be ignored. Defaults to `true`.
        /// </summary>
        [Input("customTracingEnabled")]
        public Input<bool>? CustomTracingEnabled { get; set; }

        /// <summary>
        /// Specifies whether the Spring Cloud Application Performance Monitoring resource for Application Insights is enabled globally. Defaults to `false`.
        /// </summary>
        [Input("globallyEnabled")]
        public Input<bool>? GloballyEnabled { get; set; }

        [Input("labels")]
        private InputMap<string>? _labels;

        /// <summary>
        /// Specifies a mapping of labels to be added to the New Relic application.
        /// </summary>
        public InputMap<string> Labels
        {
            get => _labels ?? (_labels = new InputMap<string>());
            set => _labels = value;
        }

        [Input("licenseKey")]
        private Input<string>? _licenseKey;

        /// <summary>
        /// Specifies the license key associated with the New Relic account. This key binds your agent's data to your account in New Relic service.
        /// </summary>
        public Input<string>? LicenseKey
        {
            get => _licenseKey;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _licenseKey = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// The name which should be used for this Spring Cloud Application Performance Monitoring resource for New Relic. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The ID of the Spring Cloud Service. Changing this forces a new resource to be created.
        /// </summary>
        [Input("springCloudServiceId")]
        public Input<string>? SpringCloudServiceId { get; set; }

        public SpringCloudNewRelicApplicationPerformanceMonitoringState()
        {
        }
        public static new SpringCloudNewRelicApplicationPerformanceMonitoringState Empty => new SpringCloudNewRelicApplicationPerformanceMonitoringState();
    }
}
