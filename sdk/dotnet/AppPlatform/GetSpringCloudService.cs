// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.AppPlatform
{
    public static class GetSpringCloudService
    {
        /// <summary>
        /// Use this data source to access information about an existing Spring Cloud Service.
        /// 
        /// !&gt; **Note:** Azure Spring Apps is now deprecated and will be retired on 2028-05-31 - as such the `azure.appplatform.SpringCloudService` data source is deprecated and will be removed in a future major version of the AzureRM Provider. See https://aka.ms/asaretirement for more information.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Azure = Pulumi.Azure;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Azure.AppPlatform.GetSpringCloudService.Invoke(new()
        ///     {
        ///         Name = exampleAzurermSpringCloudService.Name,
        ///         ResourceGroupName = exampleAzurermSpringCloudService.ResourceGroupName,
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["springCloudServiceId"] = example.Apply(getSpringCloudServiceResult =&gt; getSpringCloudServiceResult.Id),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Task<GetSpringCloudServiceResult> InvokeAsync(GetSpringCloudServiceArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSpringCloudServiceResult>("azure:appplatform/getSpringCloudService:getSpringCloudService", args ?? new GetSpringCloudServiceArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to access information about an existing Spring Cloud Service.
        /// 
        /// !&gt; **Note:** Azure Spring Apps is now deprecated and will be retired on 2028-05-31 - as such the `azure.appplatform.SpringCloudService` data source is deprecated and will be removed in a future major version of the AzureRM Provider. See https://aka.ms/asaretirement for more information.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Azure = Pulumi.Azure;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Azure.AppPlatform.GetSpringCloudService.Invoke(new()
        ///     {
        ///         Name = exampleAzurermSpringCloudService.Name,
        ///         ResourceGroupName = exampleAzurermSpringCloudService.ResourceGroupName,
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["springCloudServiceId"] = example.Apply(getSpringCloudServiceResult =&gt; getSpringCloudServiceResult.Id),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Output<GetSpringCloudServiceResult> Invoke(GetSpringCloudServiceInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSpringCloudServiceResult>("azure:appplatform/getSpringCloudService:getSpringCloudService", args ?? new GetSpringCloudServiceInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to access information about an existing Spring Cloud Service.
        /// 
        /// !&gt; **Note:** Azure Spring Apps is now deprecated and will be retired on 2028-05-31 - as such the `azure.appplatform.SpringCloudService` data source is deprecated and will be removed in a future major version of the AzureRM Provider. See https://aka.ms/asaretirement for more information.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Azure = Pulumi.Azure;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Azure.AppPlatform.GetSpringCloudService.Invoke(new()
        ///     {
        ///         Name = exampleAzurermSpringCloudService.Name,
        ///         ResourceGroupName = exampleAzurermSpringCloudService.ResourceGroupName,
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["springCloudServiceId"] = example.Apply(getSpringCloudServiceResult =&gt; getSpringCloudServiceResult.Id),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Output<GetSpringCloudServiceResult> Invoke(GetSpringCloudServiceInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetSpringCloudServiceResult>("azure:appplatform/getSpringCloudService:getSpringCloudService", args ?? new GetSpringCloudServiceInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSpringCloudServiceArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Specifies The name of the Spring Cloud Service resource.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        /// <summary>
        /// Specifies the name of the Resource Group where the Spring Cloud Service exists.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetSpringCloudServiceArgs()
        {
        }
        public static new GetSpringCloudServiceArgs Empty => new GetSpringCloudServiceArgs();
    }

    public sealed class GetSpringCloudServiceInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Specifies The name of the Spring Cloud Service resource.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// Specifies the name of the Resource Group where the Spring Cloud Service exists.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetSpringCloudServiceInvokeArgs()
        {
        }
        public static new GetSpringCloudServiceInvokeArgs Empty => new GetSpringCloudServiceInvokeArgs();
    }


    [OutputType]
    public sealed class GetSpringCloudServiceResult
    {
        /// <summary>
        /// A `ConfigServerGitSetting` block as defined below.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetSpringCloudServiceConfigServerGitSettingResult> ConfigServerGitSettings;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The location of Spring Cloud Service.
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// The name to identify on the Git repository.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// A list of the outbound Public IP Addresses used by this Spring Cloud Service.
        /// </summary>
        public readonly ImmutableArray<string> OutboundPublicIpAddresses;
        /// <summary>
        /// A list of `RequiredNetworkTrafficRules` blocks as defined below.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetSpringCloudServiceRequiredNetworkTrafficRuleResult> RequiredNetworkTrafficRules;
        public readonly string ResourceGroupName;
        /// <summary>
        /// A mapping of tags assigned to Spring Cloud Service.
        /// </summary>
        public readonly ImmutableDictionary<string, string> Tags;

        [OutputConstructor]
        private GetSpringCloudServiceResult(
            ImmutableArray<Outputs.GetSpringCloudServiceConfigServerGitSettingResult> configServerGitSettings,

            string id,

            string location,

            string name,

            ImmutableArray<string> outboundPublicIpAddresses,

            ImmutableArray<Outputs.GetSpringCloudServiceRequiredNetworkTrafficRuleResult> requiredNetworkTrafficRules,

            string resourceGroupName,

            ImmutableDictionary<string, string> tags)
        {
            ConfigServerGitSettings = configServerGitSettings;
            Id = id;
            Location = location;
            Name = name;
            OutboundPublicIpAddresses = outboundPublicIpAddresses;
            RequiredNetworkTrafficRules = requiredNetworkTrafficRules;
            ResourceGroupName = resourceGroupName;
            Tags = tags;
        }
    }
}
