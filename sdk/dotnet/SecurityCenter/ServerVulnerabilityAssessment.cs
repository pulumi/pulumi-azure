// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.SecurityCenter
{
    /// <summary>
    /// Manages an Azure Server Vulnerability Assessment (Qualys) to a VM.
    /// 
    /// &gt; **NOTE** This resource has been deprecated in favour of the `azure.securitycenter.ServerVulnerabilityAssessmentVirtualMachine` resource and will be removed in v4.0 of the AzureRM Provider.
    /// 
    /// &gt; **NOTE** Azure Defender has to be enabled on the subscription in order for this resource to work.
    /// See this [documentation](https://docs.microsoft.com/azure/security-center/security-center-get-started) to get started.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Azure = Pulumi.Azure;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var exampleResourceGroup = new Azure.Core.ResourceGroup("exampleResourceGroup", new()
    ///     {
    ///         Location = "West Europe",
    ///     });
    /// 
    ///     var exampleVirtualNetwork = new Azure.Network.VirtualNetwork("exampleVirtualNetwork", new()
    ///     {
    ///         ResourceGroupName = exampleResourceGroup.Name,
    ///         AddressSpaces = new[]
    ///         {
    ///             "192.168.1.0/24",
    ///         },
    ///         Location = exampleResourceGroup.Location,
    ///     });
    /// 
    ///     var exampleSubnet = new Azure.Network.Subnet("exampleSubnet", new()
    ///     {
    ///         ResourceGroupName = exampleResourceGroup.Name,
    ///         VirtualNetworkName = exampleVirtualNetwork.Name,
    ///         AddressPrefixes = new[]
    ///         {
    ///             "192.168.1.0/24",
    ///         },
    ///     });
    /// 
    ///     var exampleNetworkInterface = new Azure.Network.NetworkInterface("exampleNetworkInterface", new()
    ///     {
    ///         Location = exampleResourceGroup.Location,
    ///         ResourceGroupName = exampleResourceGroup.Name,
    ///         IpConfigurations = new[]
    ///         {
    ///             new Azure.Network.Inputs.NetworkInterfaceIpConfigurationArgs
    ///             {
    ///                 Name = "vm-example",
    ///                 SubnetId = exampleSubnet.Id,
    ///                 PrivateIpAddressAllocation = "Dynamic",
    ///             },
    ///         },
    ///     });
    /// 
    ///     var exampleLinuxVirtualMachine = new Azure.Compute.LinuxVirtualMachine("exampleLinuxVirtualMachine", new()
    ///     {
    ///         Location = exampleResourceGroup.Location,
    ///         ResourceGroupName = exampleResourceGroup.Name,
    ///         Size = "Standard_B1s",
    ///         AdminUsername = "testadmin",
    ///         AdminPassword = "Password1234!",
    ///         DisablePasswordAuthentication = false,
    ///         SourceImageReference = new Azure.Compute.Inputs.LinuxVirtualMachineSourceImageReferenceArgs
    ///         {
    ///             Publisher = "Canonical",
    ///             Offer = "0001-com-ubuntu-server-jammy",
    ///             Sku = "22_04-lts",
    ///             Version = "latest",
    ///         },
    ///         OsDisk = new Azure.Compute.Inputs.LinuxVirtualMachineOsDiskArgs
    ///         {
    ///             Caching = "ReadWrite",
    ///             StorageAccountType = "Standard_LRS",
    ///         },
    ///         NetworkInterfaceIds = new[]
    ///         {
    ///             exampleNetworkInterface.Id,
    ///         },
    ///     });
    /// 
    ///     var exampleServerVulnerabilityAssessment = new Azure.SecurityCenter.ServerVulnerabilityAssessment("exampleServerVulnerabilityAssessment", new()
    ///     {
    ///         VirtualMachineId = exampleLinuxVirtualMachine.Id,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Server Vulnerability Assessments can be imported using the `resource id`, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import azure:securitycenter/serverVulnerabilityAssessment:ServerVulnerabilityAssessment example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resource-group-name/providers/Microsoft.Compute/virtualMachines/vm-name/providers/Microsoft.Security/serverVulnerabilityAssessments/Default
    /// ```
    /// 
    ///  or
    /// 
    /// ```sh
    ///  $ pulumi import azure:securitycenter/serverVulnerabilityAssessment:ServerVulnerabilityAssessment example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resource-group-name/providers/Microsoft.HybridCompute/machines/machine-name/providers/Microsoft.Security/serverVulnerabilityAssessments/Default
    /// ```
    /// </summary>
    [AzureResourceType("azure:securitycenter/serverVulnerabilityAssessment:ServerVulnerabilityAssessment")]
    public partial class ServerVulnerabilityAssessment : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The ID of the Azure ARC server to be monitored by vulnerability assessment. Changing this forces a new resource to be created.
        /// 
        /// &gt; **NOTE:** One of either `virtual_machine_id` or `hybrid_machine_id` must be set.
        /// </summary>
        [Output("hybridMachineId")]
        public Output<string?> HybridMachineId { get; private set; } = null!;

        /// <summary>
        /// The ID of the virtual machine to be monitored by vulnerability assessment. Changing this forces a new resource to be created.
        /// 
        /// &gt; **NOTE:** One of either `virtual_machine_id` or `hybrid_machine_id` must be set.
        /// </summary>
        [Output("virtualMachineId")]
        public Output<string?> VirtualMachineId { get; private set; } = null!;


        /// <summary>
        /// Create a ServerVulnerabilityAssessment resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ServerVulnerabilityAssessment(string name, ServerVulnerabilityAssessmentArgs? args = null, CustomResourceOptions? options = null)
            : base("azure:securitycenter/serverVulnerabilityAssessment:ServerVulnerabilityAssessment", name, args ?? new ServerVulnerabilityAssessmentArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ServerVulnerabilityAssessment(string name, Input<string> id, ServerVulnerabilityAssessmentState? state = null, CustomResourceOptions? options = null)
            : base("azure:securitycenter/serverVulnerabilityAssessment:ServerVulnerabilityAssessment", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ServerVulnerabilityAssessment resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ServerVulnerabilityAssessment Get(string name, Input<string> id, ServerVulnerabilityAssessmentState? state = null, CustomResourceOptions? options = null)
        {
            return new ServerVulnerabilityAssessment(name, id, state, options);
        }
    }

    public sealed class ServerVulnerabilityAssessmentArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the Azure ARC server to be monitored by vulnerability assessment. Changing this forces a new resource to be created.
        /// 
        /// &gt; **NOTE:** One of either `virtual_machine_id` or `hybrid_machine_id` must be set.
        /// </summary>
        [Input("hybridMachineId")]
        public Input<string>? HybridMachineId { get; set; }

        /// <summary>
        /// The ID of the virtual machine to be monitored by vulnerability assessment. Changing this forces a new resource to be created.
        /// 
        /// &gt; **NOTE:** One of either `virtual_machine_id` or `hybrid_machine_id` must be set.
        /// </summary>
        [Input("virtualMachineId")]
        public Input<string>? VirtualMachineId { get; set; }

        public ServerVulnerabilityAssessmentArgs()
        {
        }
        public static new ServerVulnerabilityAssessmentArgs Empty => new ServerVulnerabilityAssessmentArgs();
    }

    public sealed class ServerVulnerabilityAssessmentState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the Azure ARC server to be monitored by vulnerability assessment. Changing this forces a new resource to be created.
        /// 
        /// &gt; **NOTE:** One of either `virtual_machine_id` or `hybrid_machine_id` must be set.
        /// </summary>
        [Input("hybridMachineId")]
        public Input<string>? HybridMachineId { get; set; }

        /// <summary>
        /// The ID of the virtual machine to be monitored by vulnerability assessment. Changing this forces a new resource to be created.
        /// 
        /// &gt; **NOTE:** One of either `virtual_machine_id` or `hybrid_machine_id` must be set.
        /// </summary>
        [Input("virtualMachineId")]
        public Input<string>? VirtualMachineId { get; set; }

        public ServerVulnerabilityAssessmentState()
        {
        }
        public static new ServerVulnerabilityAssessmentState Empty => new ServerVulnerabilityAssessmentState();
    }
}
