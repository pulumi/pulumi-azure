// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.SecurityCenter
{
    /// <summary>
    /// Manages the Security Center Assessment for Azure Security Center.
    /// 
    /// ## Import
    /// 
    /// Security Assessment can be imported using the `resource id`, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import azure:securitycenter/assessment:Assessment example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resGroup1/providers/Microsoft.Compute/virtualMachineScaleSets/vmss1/providers/Microsoft.Security/assessments/00000000-0000-0000-0000-000000000000
    /// ```
    /// </summary>
    [AzureResourceType("azure:securitycenter/assessment:Assessment")]
    public partial class Assessment : global::Pulumi.CustomResource
    {
        /// <summary>
        /// A map of additional data to associate with the assessment.
        /// </summary>
        [Output("additionalData")]
        public Output<ImmutableDictionary<string, string>?> AdditionalData { get; private set; } = null!;

        /// <summary>
        /// The ID of the security Assessment policy to apply to this resource. Changing this forces a new security Assessment to be created.
        /// </summary>
        [Output("assessmentPolicyId")]
        public Output<string> AssessmentPolicyId { get; private set; } = null!;

        /// <summary>
        /// A `status` block as defined below.
        /// </summary>
        [Output("status")]
        public Output<Outputs.AssessmentStatus> Status { get; private set; } = null!;

        /// <summary>
        /// The ID of the target resource. Changing this forces a new security Assessment to be created.
        /// </summary>
        [Output("targetResourceId")]
        public Output<string> TargetResourceId { get; private set; } = null!;


        /// <summary>
        /// Create a Assessment resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Assessment(string name, AssessmentArgs args, CustomResourceOptions? options = null)
            : base("azure:securitycenter/assessment:Assessment", name, args ?? new AssessmentArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Assessment(string name, Input<string> id, AssessmentState? state = null, CustomResourceOptions? options = null)
            : base("azure:securitycenter/assessment:Assessment", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Assessment resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Assessment Get(string name, Input<string> id, AssessmentState? state = null, CustomResourceOptions? options = null)
        {
            return new Assessment(name, id, state, options);
        }
    }

    public sealed class AssessmentArgs : global::Pulumi.ResourceArgs
    {
        [Input("additionalData")]
        private InputMap<string>? _additionalData;

        /// <summary>
        /// A map of additional data to associate with the assessment.
        /// </summary>
        public InputMap<string> AdditionalData
        {
            get => _additionalData ?? (_additionalData = new InputMap<string>());
            set => _additionalData = value;
        }

        /// <summary>
        /// The ID of the security Assessment policy to apply to this resource. Changing this forces a new security Assessment to be created.
        /// </summary>
        [Input("assessmentPolicyId", required: true)]
        public Input<string> AssessmentPolicyId { get; set; } = null!;

        /// <summary>
        /// A `status` block as defined below.
        /// </summary>
        [Input("status", required: true)]
        public Input<Inputs.AssessmentStatusArgs> Status { get; set; } = null!;

        /// <summary>
        /// The ID of the target resource. Changing this forces a new security Assessment to be created.
        /// </summary>
        [Input("targetResourceId", required: true)]
        public Input<string> TargetResourceId { get; set; } = null!;

        public AssessmentArgs()
        {
        }
        public static new AssessmentArgs Empty => new AssessmentArgs();
    }

    public sealed class AssessmentState : global::Pulumi.ResourceArgs
    {
        [Input("additionalData")]
        private InputMap<string>? _additionalData;

        /// <summary>
        /// A map of additional data to associate with the assessment.
        /// </summary>
        public InputMap<string> AdditionalData
        {
            get => _additionalData ?? (_additionalData = new InputMap<string>());
            set => _additionalData = value;
        }

        /// <summary>
        /// The ID of the security Assessment policy to apply to this resource. Changing this forces a new security Assessment to be created.
        /// </summary>
        [Input("assessmentPolicyId")]
        public Input<string>? AssessmentPolicyId { get; set; }

        /// <summary>
        /// A `status` block as defined below.
        /// </summary>
        [Input("status")]
        public Input<Inputs.AssessmentStatusGetArgs>? Status { get; set; }

        /// <summary>
        /// The ID of the target resource. Changing this forces a new security Assessment to be created.
        /// </summary>
        [Input("targetResourceId")]
        public Input<string>? TargetResourceId { get; set; }

        public AssessmentState()
        {
        }
        public static new AssessmentState Empty => new AssessmentState();
    }
}
