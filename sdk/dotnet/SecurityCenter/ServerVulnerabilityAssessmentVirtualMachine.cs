// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.SecurityCenter
{
    /// <summary>
    /// Manages an Azure Server Vulnerability Assessment (Qualys) to a VM.
    /// 
    /// &gt; **NOTE** Azure Defender has to be enabled on the subscription in order for this resource to work.
    /// See this [documentation](https://docs.microsoft.com/azure/security-center/security-center-get-started) to get started.
    /// 
    /// ## Import
    /// 
    /// Server Vulnerability Assessments can be imported using the `resource id`, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import azure:securitycenter/serverVulnerabilityAssessmentVirtualMachine:ServerVulnerabilityAssessmentVirtualMachine example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resource-group-name/providers/Microsoft.Compute/virtualMachines/vm-name/providers/Microsoft.Security/serverVulnerabilityAssessments/Default
    /// ```
    /// </summary>
    [AzureResourceType("azure:securitycenter/serverVulnerabilityAssessmentVirtualMachine:ServerVulnerabilityAssessmentVirtualMachine")]
    public partial class ServerVulnerabilityAssessmentVirtualMachine : Pulumi.CustomResource
    {
        /// <summary>
        /// The ID of the virtual machine to be monitored by vulnerability assessment. Changing this forces a new resource to be created.
        /// </summary>
        [Output("virtualMachineId")]
        public Output<string> VirtualMachineId { get; private set; } = null!;


        /// <summary>
        /// Create a ServerVulnerabilityAssessmentVirtualMachine resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ServerVulnerabilityAssessmentVirtualMachine(string name, ServerVulnerabilityAssessmentVirtualMachineArgs args, CustomResourceOptions? options = null)
            : base("azure:securitycenter/serverVulnerabilityAssessmentVirtualMachine:ServerVulnerabilityAssessmentVirtualMachine", name, args ?? new ServerVulnerabilityAssessmentVirtualMachineArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ServerVulnerabilityAssessmentVirtualMachine(string name, Input<string> id, ServerVulnerabilityAssessmentVirtualMachineState? state = null, CustomResourceOptions? options = null)
            : base("azure:securitycenter/serverVulnerabilityAssessmentVirtualMachine:ServerVulnerabilityAssessmentVirtualMachine", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ServerVulnerabilityAssessmentVirtualMachine resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ServerVulnerabilityAssessmentVirtualMachine Get(string name, Input<string> id, ServerVulnerabilityAssessmentVirtualMachineState? state = null, CustomResourceOptions? options = null)
        {
            return new ServerVulnerabilityAssessmentVirtualMachine(name, id, state, options);
        }
    }

    public sealed class ServerVulnerabilityAssessmentVirtualMachineArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the virtual machine to be monitored by vulnerability assessment. Changing this forces a new resource to be created.
        /// </summary>
        [Input("virtualMachineId", required: true)]
        public Input<string> VirtualMachineId { get; set; } = null!;

        public ServerVulnerabilityAssessmentVirtualMachineArgs()
        {
        }
    }

    public sealed class ServerVulnerabilityAssessmentVirtualMachineState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the virtual machine to be monitored by vulnerability assessment. Changing this forces a new resource to be created.
        /// </summary>
        [Input("virtualMachineId")]
        public Input<string>? VirtualMachineId { get; set; }

        public ServerVulnerabilityAssessmentVirtualMachineState()
        {
        }
    }
}
