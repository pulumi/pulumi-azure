// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.SecurityCenter
{
    /// <summary>
    /// Manages the Server Vulnerability Assesments Setting for Azure Security Center.
    /// 
    /// &gt; **NOTE:** This resource requires the `Owner` permission on the Subscription.
    /// 
    /// &gt; **NOTE:** Deletion of this resource disables the setting.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Azure = Pulumi.Azure;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Azure.SecurityCenter.ServerVulnerabilityAssessmentsSetting("example", new()
    ///     {
    ///         VulnerabilityAssessmentProvider = "MdeTvm",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// The setting can be imported using the `resource id`, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import azure:securitycenter/serverVulnerabilityAssessmentsSetting:ServerVulnerabilityAssessmentsSetting example /subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Security/serverVulnerabilityAssessmentsSettings/AzureServersSetting
    /// ```
    /// </summary>
    [AzureResourceType("azure:securitycenter/serverVulnerabilityAssessmentsSetting:ServerVulnerabilityAssessmentsSetting")]
    public partial class ServerVulnerabilityAssessmentsSetting : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The vulnerability assesment provider to use. The only possible values is `MdeTvm`.
        /// </summary>
        [Output("vulnerabilityAssessmentProvider")]
        public Output<string> VulnerabilityAssessmentProvider { get; private set; } = null!;


        /// <summary>
        /// Create a ServerVulnerabilityAssessmentsSetting resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ServerVulnerabilityAssessmentsSetting(string name, ServerVulnerabilityAssessmentsSettingArgs args, CustomResourceOptions? options = null)
            : base("azure:securitycenter/serverVulnerabilityAssessmentsSetting:ServerVulnerabilityAssessmentsSetting", name, args ?? new ServerVulnerabilityAssessmentsSettingArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ServerVulnerabilityAssessmentsSetting(string name, Input<string> id, ServerVulnerabilityAssessmentsSettingState? state = null, CustomResourceOptions? options = null)
            : base("azure:securitycenter/serverVulnerabilityAssessmentsSetting:ServerVulnerabilityAssessmentsSetting", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ServerVulnerabilityAssessmentsSetting resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ServerVulnerabilityAssessmentsSetting Get(string name, Input<string> id, ServerVulnerabilityAssessmentsSettingState? state = null, CustomResourceOptions? options = null)
        {
            return new ServerVulnerabilityAssessmentsSetting(name, id, state, options);
        }
    }

    public sealed class ServerVulnerabilityAssessmentsSettingArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The vulnerability assesment provider to use. The only possible values is `MdeTvm`.
        /// </summary>
        [Input("vulnerabilityAssessmentProvider", required: true)]
        public Input<string> VulnerabilityAssessmentProvider { get; set; } = null!;

        public ServerVulnerabilityAssessmentsSettingArgs()
        {
        }
        public static new ServerVulnerabilityAssessmentsSettingArgs Empty => new ServerVulnerabilityAssessmentsSettingArgs();
    }

    public sealed class ServerVulnerabilityAssessmentsSettingState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The vulnerability assesment provider to use. The only possible values is `MdeTvm`.
        /// </summary>
        [Input("vulnerabilityAssessmentProvider")]
        public Input<string>? VulnerabilityAssessmentProvider { get; set; }

        public ServerVulnerabilityAssessmentsSettingState()
        {
        }
        public static new ServerVulnerabilityAssessmentsSettingState Empty => new ServerVulnerabilityAssessmentsSettingState();
    }
}
