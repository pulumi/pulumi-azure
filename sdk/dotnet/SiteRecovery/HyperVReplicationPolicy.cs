// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.SiteRecovery
{
    /// <summary>
    /// Manages a Azure Site Recovery replication policy for HyperV within a Recovery Vault. Replication policies define the frequency at which recovery points are created and how long they are stored.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Azure = Pulumi.Azure;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Azure.Core.ResourceGroup("example", new()
    ///     {
    ///         Location = "East US",
    ///     });
    /// 
    ///     var vault = new Azure.RecoveryServices.Vault("vault", new()
    ///     {
    ///         Location = example.Location,
    ///         ResourceGroupName = example.Name,
    ///         Sku = "Standard",
    ///     });
    /// 
    ///     var policy = new Azure.SiteRecovery.HyperVReplicationPolicy("policy", new()
    ///     {
    ///         RecoveryVaultId = vault.Id,
    ///         RecoveryPointRetentionInHours = 2,
    ///         ApplicationConsistentSnapshotFrequencyInHours = 1,
    ///         ReplicationIntervalInSeconds = 300,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Site Recovery Replication Policies can be imported using the `resource id`, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import azure:siterecovery/hyperVReplicationPolicy:HyperVReplicationPolicy mypolicy /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resource-group-name/providers/Microsoft.RecoveryServices/vaults/recovery-vault-name/replicationPolicies/policy-name
    /// ```
    /// </summary>
    [AzureResourceType("azure:siterecovery/hyperVReplicationPolicy:HyperVReplicationPolicy")]
    public partial class HyperVReplicationPolicy : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Specifies the frequency at which to create application consistent recovery points.
        /// </summary>
        [Output("applicationConsistentSnapshotFrequencyInHours")]
        public Output<int> ApplicationConsistentSnapshotFrequencyInHours { get; private set; } = null!;

        /// <summary>
        /// The name of the replication policy. Changing this forces a new resource to be created.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The duration in hours for which the recovery points need to be stored.
        /// </summary>
        [Output("recoveryPointRetentionInHours")]
        public Output<int> RecoveryPointRetentionInHours { get; private set; } = null!;

        /// <summary>
        /// The id of the vault that should be updated. Changing this forces a new resource to be created.
        /// </summary>
        [Output("recoveryVaultId")]
        public Output<string> RecoveryVaultId { get; private set; } = null!;

        /// <summary>
        /// Specifies how frequently data should be synchronized between source and target locations. Possible values are `30` and `300`.
        /// </summary>
        [Output("replicationIntervalInSeconds")]
        public Output<int> ReplicationIntervalInSeconds { get; private set; } = null!;


        /// <summary>
        /// Create a HyperVReplicationPolicy resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public HyperVReplicationPolicy(string name, HyperVReplicationPolicyArgs args, CustomResourceOptions? options = null)
            : base("azure:siterecovery/hyperVReplicationPolicy:HyperVReplicationPolicy", name, args ?? new HyperVReplicationPolicyArgs(), MakeResourceOptions(options, ""))
        {
        }

        private HyperVReplicationPolicy(string name, Input<string> id, HyperVReplicationPolicyState? state = null, CustomResourceOptions? options = null)
            : base("azure:siterecovery/hyperVReplicationPolicy:HyperVReplicationPolicy", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing HyperVReplicationPolicy resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static HyperVReplicationPolicy Get(string name, Input<string> id, HyperVReplicationPolicyState? state = null, CustomResourceOptions? options = null)
        {
            return new HyperVReplicationPolicy(name, id, state, options);
        }
    }

    public sealed class HyperVReplicationPolicyArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies the frequency at which to create application consistent recovery points.
        /// </summary>
        [Input("applicationConsistentSnapshotFrequencyInHours", required: true)]
        public Input<int> ApplicationConsistentSnapshotFrequencyInHours { get; set; } = null!;

        /// <summary>
        /// The name of the replication policy. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The duration in hours for which the recovery points need to be stored.
        /// </summary>
        [Input("recoveryPointRetentionInHours", required: true)]
        public Input<int> RecoveryPointRetentionInHours { get; set; } = null!;

        /// <summary>
        /// The id of the vault that should be updated. Changing this forces a new resource to be created.
        /// </summary>
        [Input("recoveryVaultId", required: true)]
        public Input<string> RecoveryVaultId { get; set; } = null!;

        /// <summary>
        /// Specifies how frequently data should be synchronized between source and target locations. Possible values are `30` and `300`.
        /// </summary>
        [Input("replicationIntervalInSeconds", required: true)]
        public Input<int> ReplicationIntervalInSeconds { get; set; } = null!;

        public HyperVReplicationPolicyArgs()
        {
        }
        public static new HyperVReplicationPolicyArgs Empty => new HyperVReplicationPolicyArgs();
    }

    public sealed class HyperVReplicationPolicyState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies the frequency at which to create application consistent recovery points.
        /// </summary>
        [Input("applicationConsistentSnapshotFrequencyInHours")]
        public Input<int>? ApplicationConsistentSnapshotFrequencyInHours { get; set; }

        /// <summary>
        /// The name of the replication policy. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The duration in hours for which the recovery points need to be stored.
        /// </summary>
        [Input("recoveryPointRetentionInHours")]
        public Input<int>? RecoveryPointRetentionInHours { get; set; }

        /// <summary>
        /// The id of the vault that should be updated. Changing this forces a new resource to be created.
        /// </summary>
        [Input("recoveryVaultId")]
        public Input<string>? RecoveryVaultId { get; set; }

        /// <summary>
        /// Specifies how frequently data should be synchronized between source and target locations. Possible values are `30` and `300`.
        /// </summary>
        [Input("replicationIntervalInSeconds")]
        public Input<int>? ReplicationIntervalInSeconds { get; set; }

        public HyperVReplicationPolicyState()
        {
        }
        public static new HyperVReplicationPolicyState Empty => new HyperVReplicationPolicyState();
    }
}
