// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Mobile
{
    /// <summary>
    /// Manages a Mobile Network Attached Data Network.
    /// 
    /// ## Import
    /// 
    /// Mobile Network Attached Data Network can be imported using the `resource id`, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import azure:mobile/networkAttachedDataNetwork:NetworkAttachedDataNetwork example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resourceGroup1/providers/Microsoft.MobileNetwork/packetCoreControlPlanes/packetCoreControlPlane1/packetCoreDataPlanes/packetCoreDataPlane1/attachedDataNetworks/attachedDataNetwork1
    /// ```
    /// </summary>
    [AzureResourceType("azure:mobile/networkAttachedDataNetwork:NetworkAttachedDataNetwork")]
    public partial class NetworkAttachedDataNetwork : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Specifies the DNS servers to signal to UEs to use for this attached data network.
        /// </summary>
        [Output("dnsAddresses")]
        public Output<ImmutableArray<string>> DnsAddresses { get; private set; } = null!;

        /// <summary>
        /// Specifies the Azure Region where the Mobile Network Attached Data Network should exist. Changing this forces a new Mobile Network Attached Data Network to be created.
        /// </summary>
        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// Specifies the name of the `azure.mobile.NetworkDataNetwork` which the Attached Data Network belongs to, Changing this forces a new Mobile Network Attached Data Network to be created.
        /// </summary>
        [Output("mobileNetworkDataNetworkName")]
        public Output<string> MobileNetworkDataNetworkName { get; private set; } = null!;

        /// <summary>
        /// Specifies the ID of the `azure.mobile.NetworkPacketCoreDataPlane` which the Mobile Network Attached Data Network belongs to. Changing this forces a new Mobile Network Attached Data Network to be created.
        /// </summary>
        [Output("mobileNetworkPacketCoreDataPlaneId")]
        public Output<string> MobileNetworkPacketCoreDataPlaneId { get; private set; } = null!;

        /// <summary>
        /// A `network_address_port_translation` block as defined below.
        /// </summary>
        [Output("networkAddressPortTranslation")]
        public Output<Outputs.NetworkAttachedDataNetworkNetworkAddressPortTranslation?> NetworkAddressPortTranslation { get; private set; } = null!;

        /// <summary>
        /// A mapping of tags which should be assigned to the Mobile Network Attached Data Network.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// Specifies the user equipment (UE) address pool prefixes for the attached data network from which the packet core instance will dynamically assign IP addresses to UEs. The packet core instance assigns an IP address to a UE when the UE sets up a PDU session. At least one of `user_equipment_address_pool_prefixes` and `user_equipment_static_address_pool_prefix`. If you define both, they must be of the same size.
        /// </summary>
        [Output("userEquipmentAddressPoolPrefixes")]
        public Output<ImmutableArray<string>> UserEquipmentAddressPoolPrefixes { get; private set; } = null!;

        /// <summary>
        /// Specifies the user equipment (UE) address pool prefixes for the attached data network from which the packet core instance will assign static IP addresses to UEs. The packet core instance assigns an IP address to a UE when the UE sets up a PDU session. The static IP address for a specific UE is set in StaticIPConfiguration on the corresponding SIM resource. At least one of `user_equipment_address_pool_prefix` and `user_equipment_static_address_pool_prefixes`. If you define both, they must be of the same size.
        /// 
        /// &gt; **Note:** At least one of `user_equipment_address_pool_prefixes` and `user_equipment_static_address_pool_prefixes` must be specified.
        /// </summary>
        [Output("userEquipmentStaticAddressPoolPrefixes")]
        public Output<ImmutableArray<string>> UserEquipmentStaticAddressPoolPrefixes { get; private set; } = null!;

        /// <summary>
        /// The IPv4 address for the user data plane interface. This should match one of the interfaces configured on your Azure Stack Edge device.
        /// </summary>
        [Output("userPlaneAccessIpv4Address")]
        public Output<string?> UserPlaneAccessIpv4Address { get; private set; } = null!;

        /// <summary>
        /// The default IPv4 gateway for the user data plane interface. This should match one of the interfaces configured on your Azure Stack Edge device.
        /// </summary>
        [Output("userPlaneAccessIpv4Gateway")]
        public Output<string?> UserPlaneAccessIpv4Gateway { get; private set; } = null!;

        /// <summary>
        /// The IPv4 subnet for the user data plane interface. This should match one of the interfaces configured on your Azure Stack Edge device.
        /// </summary>
        [Output("userPlaneAccessIpv4Subnet")]
        public Output<string?> UserPlaneAccessIpv4Subnet { get; private set; } = null!;

        /// <summary>
        /// Specifies the logical name for the user data plane interface. This should match one of the interfaces configured on your Azure Stack Edge device.
        /// </summary>
        [Output("userPlaneAccessName")]
        public Output<string?> UserPlaneAccessName { get; private set; } = null!;


        /// <summary>
        /// Create a NetworkAttachedDataNetwork resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public NetworkAttachedDataNetwork(string name, NetworkAttachedDataNetworkArgs args, CustomResourceOptions? options = null)
            : base("azure:mobile/networkAttachedDataNetwork:NetworkAttachedDataNetwork", name, args ?? new NetworkAttachedDataNetworkArgs(), MakeResourceOptions(options, ""))
        {
        }

        private NetworkAttachedDataNetwork(string name, Input<string> id, NetworkAttachedDataNetworkState? state = null, CustomResourceOptions? options = null)
            : base("azure:mobile/networkAttachedDataNetwork:NetworkAttachedDataNetwork", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing NetworkAttachedDataNetwork resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static NetworkAttachedDataNetwork Get(string name, Input<string> id, NetworkAttachedDataNetworkState? state = null, CustomResourceOptions? options = null)
        {
            return new NetworkAttachedDataNetwork(name, id, state, options);
        }
    }

    public sealed class NetworkAttachedDataNetworkArgs : global::Pulumi.ResourceArgs
    {
        [Input("dnsAddresses", required: true)]
        private InputList<string>? _dnsAddresses;

        /// <summary>
        /// Specifies the DNS servers to signal to UEs to use for this attached data network.
        /// </summary>
        public InputList<string> DnsAddresses
        {
            get => _dnsAddresses ?? (_dnsAddresses = new InputList<string>());
            set => _dnsAddresses = value;
        }

        /// <summary>
        /// Specifies the Azure Region where the Mobile Network Attached Data Network should exist. Changing this forces a new Mobile Network Attached Data Network to be created.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// Specifies the name of the `azure.mobile.NetworkDataNetwork` which the Attached Data Network belongs to, Changing this forces a new Mobile Network Attached Data Network to be created.
        /// </summary>
        [Input("mobileNetworkDataNetworkName", required: true)]
        public Input<string> MobileNetworkDataNetworkName { get; set; } = null!;

        /// <summary>
        /// Specifies the ID of the `azure.mobile.NetworkPacketCoreDataPlane` which the Mobile Network Attached Data Network belongs to. Changing this forces a new Mobile Network Attached Data Network to be created.
        /// </summary>
        [Input("mobileNetworkPacketCoreDataPlaneId", required: true)]
        public Input<string> MobileNetworkPacketCoreDataPlaneId { get; set; } = null!;

        /// <summary>
        /// A `network_address_port_translation` block as defined below.
        /// </summary>
        [Input("networkAddressPortTranslation")]
        public Input<Inputs.NetworkAttachedDataNetworkNetworkAddressPortTranslationArgs>? NetworkAddressPortTranslation { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// A mapping of tags which should be assigned to the Mobile Network Attached Data Network.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("userEquipmentAddressPoolPrefixes")]
        private InputList<string>? _userEquipmentAddressPoolPrefixes;

        /// <summary>
        /// Specifies the user equipment (UE) address pool prefixes for the attached data network from which the packet core instance will dynamically assign IP addresses to UEs. The packet core instance assigns an IP address to a UE when the UE sets up a PDU session. At least one of `user_equipment_address_pool_prefixes` and `user_equipment_static_address_pool_prefix`. If you define both, they must be of the same size.
        /// </summary>
        public InputList<string> UserEquipmentAddressPoolPrefixes
        {
            get => _userEquipmentAddressPoolPrefixes ?? (_userEquipmentAddressPoolPrefixes = new InputList<string>());
            set => _userEquipmentAddressPoolPrefixes = value;
        }

        [Input("userEquipmentStaticAddressPoolPrefixes")]
        private InputList<string>? _userEquipmentStaticAddressPoolPrefixes;

        /// <summary>
        /// Specifies the user equipment (UE) address pool prefixes for the attached data network from which the packet core instance will assign static IP addresses to UEs. The packet core instance assigns an IP address to a UE when the UE sets up a PDU session. The static IP address for a specific UE is set in StaticIPConfiguration on the corresponding SIM resource. At least one of `user_equipment_address_pool_prefix` and `user_equipment_static_address_pool_prefixes`. If you define both, they must be of the same size.
        /// 
        /// &gt; **Note:** At least one of `user_equipment_address_pool_prefixes` and `user_equipment_static_address_pool_prefixes` must be specified.
        /// </summary>
        public InputList<string> UserEquipmentStaticAddressPoolPrefixes
        {
            get => _userEquipmentStaticAddressPoolPrefixes ?? (_userEquipmentStaticAddressPoolPrefixes = new InputList<string>());
            set => _userEquipmentStaticAddressPoolPrefixes = value;
        }

        /// <summary>
        /// The IPv4 address for the user data plane interface. This should match one of the interfaces configured on your Azure Stack Edge device.
        /// </summary>
        [Input("userPlaneAccessIpv4Address")]
        public Input<string>? UserPlaneAccessIpv4Address { get; set; }

        /// <summary>
        /// The default IPv4 gateway for the user data plane interface. This should match one of the interfaces configured on your Azure Stack Edge device.
        /// </summary>
        [Input("userPlaneAccessIpv4Gateway")]
        public Input<string>? UserPlaneAccessIpv4Gateway { get; set; }

        /// <summary>
        /// The IPv4 subnet for the user data plane interface. This should match one of the interfaces configured on your Azure Stack Edge device.
        /// </summary>
        [Input("userPlaneAccessIpv4Subnet")]
        public Input<string>? UserPlaneAccessIpv4Subnet { get; set; }

        /// <summary>
        /// Specifies the logical name for the user data plane interface. This should match one of the interfaces configured on your Azure Stack Edge device.
        /// </summary>
        [Input("userPlaneAccessName")]
        public Input<string>? UserPlaneAccessName { get; set; }

        public NetworkAttachedDataNetworkArgs()
        {
        }
        public static new NetworkAttachedDataNetworkArgs Empty => new NetworkAttachedDataNetworkArgs();
    }

    public sealed class NetworkAttachedDataNetworkState : global::Pulumi.ResourceArgs
    {
        [Input("dnsAddresses")]
        private InputList<string>? _dnsAddresses;

        /// <summary>
        /// Specifies the DNS servers to signal to UEs to use for this attached data network.
        /// </summary>
        public InputList<string> DnsAddresses
        {
            get => _dnsAddresses ?? (_dnsAddresses = new InputList<string>());
            set => _dnsAddresses = value;
        }

        /// <summary>
        /// Specifies the Azure Region where the Mobile Network Attached Data Network should exist. Changing this forces a new Mobile Network Attached Data Network to be created.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// Specifies the name of the `azure.mobile.NetworkDataNetwork` which the Attached Data Network belongs to, Changing this forces a new Mobile Network Attached Data Network to be created.
        /// </summary>
        [Input("mobileNetworkDataNetworkName")]
        public Input<string>? MobileNetworkDataNetworkName { get; set; }

        /// <summary>
        /// Specifies the ID of the `azure.mobile.NetworkPacketCoreDataPlane` which the Mobile Network Attached Data Network belongs to. Changing this forces a new Mobile Network Attached Data Network to be created.
        /// </summary>
        [Input("mobileNetworkPacketCoreDataPlaneId")]
        public Input<string>? MobileNetworkPacketCoreDataPlaneId { get; set; }

        /// <summary>
        /// A `network_address_port_translation` block as defined below.
        /// </summary>
        [Input("networkAddressPortTranslation")]
        public Input<Inputs.NetworkAttachedDataNetworkNetworkAddressPortTranslationGetArgs>? NetworkAddressPortTranslation { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// A mapping of tags which should be assigned to the Mobile Network Attached Data Network.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("userEquipmentAddressPoolPrefixes")]
        private InputList<string>? _userEquipmentAddressPoolPrefixes;

        /// <summary>
        /// Specifies the user equipment (UE) address pool prefixes for the attached data network from which the packet core instance will dynamically assign IP addresses to UEs. The packet core instance assigns an IP address to a UE when the UE sets up a PDU session. At least one of `user_equipment_address_pool_prefixes` and `user_equipment_static_address_pool_prefix`. If you define both, they must be of the same size.
        /// </summary>
        public InputList<string> UserEquipmentAddressPoolPrefixes
        {
            get => _userEquipmentAddressPoolPrefixes ?? (_userEquipmentAddressPoolPrefixes = new InputList<string>());
            set => _userEquipmentAddressPoolPrefixes = value;
        }

        [Input("userEquipmentStaticAddressPoolPrefixes")]
        private InputList<string>? _userEquipmentStaticAddressPoolPrefixes;

        /// <summary>
        /// Specifies the user equipment (UE) address pool prefixes for the attached data network from which the packet core instance will assign static IP addresses to UEs. The packet core instance assigns an IP address to a UE when the UE sets up a PDU session. The static IP address for a specific UE is set in StaticIPConfiguration on the corresponding SIM resource. At least one of `user_equipment_address_pool_prefix` and `user_equipment_static_address_pool_prefixes`. If you define both, they must be of the same size.
        /// 
        /// &gt; **Note:** At least one of `user_equipment_address_pool_prefixes` and `user_equipment_static_address_pool_prefixes` must be specified.
        /// </summary>
        public InputList<string> UserEquipmentStaticAddressPoolPrefixes
        {
            get => _userEquipmentStaticAddressPoolPrefixes ?? (_userEquipmentStaticAddressPoolPrefixes = new InputList<string>());
            set => _userEquipmentStaticAddressPoolPrefixes = value;
        }

        /// <summary>
        /// The IPv4 address for the user data plane interface. This should match one of the interfaces configured on your Azure Stack Edge device.
        /// </summary>
        [Input("userPlaneAccessIpv4Address")]
        public Input<string>? UserPlaneAccessIpv4Address { get; set; }

        /// <summary>
        /// The default IPv4 gateway for the user data plane interface. This should match one of the interfaces configured on your Azure Stack Edge device.
        /// </summary>
        [Input("userPlaneAccessIpv4Gateway")]
        public Input<string>? UserPlaneAccessIpv4Gateway { get; set; }

        /// <summary>
        /// The IPv4 subnet for the user data plane interface. This should match one of the interfaces configured on your Azure Stack Edge device.
        /// </summary>
        [Input("userPlaneAccessIpv4Subnet")]
        public Input<string>? UserPlaneAccessIpv4Subnet { get; set; }

        /// <summary>
        /// Specifies the logical name for the user data plane interface. This should match one of the interfaces configured on your Azure Stack Edge device.
        /// </summary>
        [Input("userPlaneAccessName")]
        public Input<string>? UserPlaneAccessName { get; set; }

        public NetworkAttachedDataNetworkState()
        {
        }
        public static new NetworkAttachedDataNetworkState Empty => new NetworkAttachedDataNetworkState();
    }
}
