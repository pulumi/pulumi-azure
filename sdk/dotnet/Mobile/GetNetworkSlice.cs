// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Mobile
{
    public static class GetNetworkSlice
    {
        /// <summary>
        /// Get information about a Mobile Network Slice.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Azure = Pulumi.Azure;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleNetwork = Azure.Mobile.GetNetwork.Invoke(new()
        ///     {
        ///         Name = "example-mn",
        ///         ResourceGroupName = "example-rg",
        ///     });
        /// 
        ///     var exampleNetworkSlice = Azure.Mobile.GetNetworkSlice.Invoke(new()
        ///     {
        ///         Name = "example-mns",
        ///         MobileNetworkId = data.Azurerm_mobile_network.Test.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetNetworkSliceResult> InvokeAsync(GetNetworkSliceArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetNetworkSliceResult>("azure:mobile/getNetworkSlice:getNetworkSlice", args ?? new GetNetworkSliceArgs(), options.WithDefaults());

        /// <summary>
        /// Get information about a Mobile Network Slice.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Azure = Pulumi.Azure;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleNetwork = Azure.Mobile.GetNetwork.Invoke(new()
        ///     {
        ///         Name = "example-mn",
        ///         ResourceGroupName = "example-rg",
        ///     });
        /// 
        ///     var exampleNetworkSlice = Azure.Mobile.GetNetworkSlice.Invoke(new()
        ///     {
        ///         Name = "example-mns",
        ///         MobileNetworkId = data.Azurerm_mobile_network.Test.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetNetworkSliceResult> Invoke(GetNetworkSliceInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetNetworkSliceResult>("azure:mobile/getNetworkSlice:getNetworkSlice", args ?? new GetNetworkSliceInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetNetworkSliceArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of Mobile Network which the Mobile Network Slice belongs to.
        /// </summary>
        [Input("mobileNetworkId", required: true)]
        public string MobileNetworkId { get; set; } = null!;

        /// <summary>
        /// Specifies the name which should be used for this Mobile Network Slice.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        public GetNetworkSliceArgs()
        {
        }
        public static new GetNetworkSliceArgs Empty => new GetNetworkSliceArgs();
    }

    public sealed class GetNetworkSliceInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of Mobile Network which the Mobile Network Slice belongs to.
        /// </summary>
        [Input("mobileNetworkId", required: true)]
        public Input<string> MobileNetworkId { get; set; } = null!;

        /// <summary>
        /// Specifies the name which should be used for this Mobile Network Slice.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        public GetNetworkSliceInvokeArgs()
        {
        }
        public static new GetNetworkSliceInvokeArgs Empty => new GetNetworkSliceInvokeArgs();
    }


    [OutputType]
    public sealed class GetNetworkSliceResult
    {
        /// <summary>
        /// A description of this Mobile Network Slice.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The Azure Region where the Mobile Network Slice exists.
        /// </summary>
        public readonly string Location;
        public readonly string MobileNetworkId;
        public readonly string Name;
        /// <summary>
        /// A `single_network_slice_selection_assistance_information` block as defined below. Single-network slice selection assistance information (S-NSSAI).
        /// </summary>
        public readonly ImmutableArray<Outputs.GetNetworkSliceSingleNetworkSliceSelectionAssistanceInformationResult> SingleNetworkSliceSelectionAssistanceInformations;
        /// <summary>
        /// A mapping of tags which are assigned to the Mobile Network Slice.
        /// </summary>
        public readonly ImmutableDictionary<string, string> Tags;

        [OutputConstructor]
        private GetNetworkSliceResult(
            string description,

            string id,

            string location,

            string mobileNetworkId,

            string name,

            ImmutableArray<Outputs.GetNetworkSliceSingleNetworkSliceSelectionAssistanceInformationResult> singleNetworkSliceSelectionAssistanceInformations,

            ImmutableDictionary<string, string> tags)
        {
            Description = description;
            Id = id;
            Location = location;
            MobileNetworkId = mobileNetworkId;
            Name = name;
            SingleNetworkSliceSelectionAssistanceInformations = singleNetworkSliceSelectionAssistanceInformations;
            Tags = tags;
        }
    }
}
