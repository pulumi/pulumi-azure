// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Mobile
{
    public static class GetNetworkAttachedDataNetwork
    {
        /// <summary>
        /// Use this data source to access information about an existing Mobile Network Attached Data Network.
        /// </summary>
        public static Task<GetNetworkAttachedDataNetworkResult> InvokeAsync(GetNetworkAttachedDataNetworkArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetNetworkAttachedDataNetworkResult>("azure:mobile/getNetworkAttachedDataNetwork:getNetworkAttachedDataNetwork", args ?? new GetNetworkAttachedDataNetworkArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to access information about an existing Mobile Network Attached Data Network.
        /// </summary>
        public static Output<GetNetworkAttachedDataNetworkResult> Invoke(GetNetworkAttachedDataNetworkInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetNetworkAttachedDataNetworkResult>("azure:mobile/getNetworkAttachedDataNetwork:getNetworkAttachedDataNetwork", args ?? new GetNetworkAttachedDataNetworkInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetNetworkAttachedDataNetworkArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The Name of the `azure.mobile.NetworkDataNetwork` this resource belongs to.
        /// </summary>
        [Input("mobileNetworkDataNetworkName", required: true)]
        public string MobileNetworkDataNetworkName { get; set; } = null!;

        /// <summary>
        /// The ID of the `azure.mobile.NetworkPacketCoreDataPlane` which the Mobile Network Attached Data Network belongs to.
        /// </summary>
        [Input("mobileNetworkPacketCoreDataPlaneId", required: true)]
        public string MobileNetworkPacketCoreDataPlaneId { get; set; } = null!;

        public GetNetworkAttachedDataNetworkArgs()
        {
        }
        public static new GetNetworkAttachedDataNetworkArgs Empty => new GetNetworkAttachedDataNetworkArgs();
    }

    public sealed class GetNetworkAttachedDataNetworkInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The Name of the `azure.mobile.NetworkDataNetwork` this resource belongs to.
        /// </summary>
        [Input("mobileNetworkDataNetworkName", required: true)]
        public Input<string> MobileNetworkDataNetworkName { get; set; } = null!;

        /// <summary>
        /// The ID of the `azure.mobile.NetworkPacketCoreDataPlane` which the Mobile Network Attached Data Network belongs to.
        /// </summary>
        [Input("mobileNetworkPacketCoreDataPlaneId", required: true)]
        public Input<string> MobileNetworkPacketCoreDataPlaneId { get; set; } = null!;

        public GetNetworkAttachedDataNetworkInvokeArgs()
        {
        }
        public static new GetNetworkAttachedDataNetworkInvokeArgs Empty => new GetNetworkAttachedDataNetworkInvokeArgs();
    }


    [OutputType]
    public sealed class GetNetworkAttachedDataNetworkResult
    {
        /// <summary>
        /// The DNS servers to signal to UEs to use for this attached data network.
        /// </summary>
        public readonly ImmutableArray<string> DnsAddresses;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The Azure Region where the Mobile Network Attached Data Network should exist.
        /// </summary>
        public readonly string Location;
        public readonly string MobileNetworkDataNetworkName;
        public readonly string MobileNetworkPacketCoreDataPlaneId;
        /// <summary>
        /// A `network_address_port_translation` block as defined below.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetNetworkAttachedDataNetworkNetworkAddressPortTranslationResult> NetworkAddressPortTranslations;
        /// <summary>
        /// A mapping of tags which should be assigned to the Mobile Network Attached Data Network.
        /// </summary>
        public readonly ImmutableDictionary<string, string> Tags;
        public readonly ImmutableArray<string> UserEquipmentAddressPoolPrefixes;
        public readonly ImmutableArray<string> UserEquipmentStaticAddressPoolPrefixes;
        /// <summary>
        /// The IPv4 address for the user data plane interface.
        /// </summary>
        public readonly string UserPlaneAccessIpv4Address;
        /// <summary>
        /// The default IPv4 gateway for the user data plane interface.
        /// </summary>
        public readonly string UserPlaneAccessIpv4Gateway;
        /// <summary>
        /// The IPv4 subnet for the user data plane interface.
        /// </summary>
        public readonly string UserPlaneAccessIpv4Subnet;
        /// <summary>
        /// The logical name for thie user data plane interface.
        /// </summary>
        public readonly string UserPlaneAccessName;

        [OutputConstructor]
        private GetNetworkAttachedDataNetworkResult(
            ImmutableArray<string> dnsAddresses,

            string id,

            string location,

            string mobileNetworkDataNetworkName,

            string mobileNetworkPacketCoreDataPlaneId,

            ImmutableArray<Outputs.GetNetworkAttachedDataNetworkNetworkAddressPortTranslationResult> networkAddressPortTranslations,

            ImmutableDictionary<string, string> tags,

            ImmutableArray<string> userEquipmentAddressPoolPrefixes,

            ImmutableArray<string> userEquipmentStaticAddressPoolPrefixes,

            string userPlaneAccessIpv4Address,

            string userPlaneAccessIpv4Gateway,

            string userPlaneAccessIpv4Subnet,

            string userPlaneAccessName)
        {
            DnsAddresses = dnsAddresses;
            Id = id;
            Location = location;
            MobileNetworkDataNetworkName = mobileNetworkDataNetworkName;
            MobileNetworkPacketCoreDataPlaneId = mobileNetworkPacketCoreDataPlaneId;
            NetworkAddressPortTranslations = networkAddressPortTranslations;
            Tags = tags;
            UserEquipmentAddressPoolPrefixes = userEquipmentAddressPoolPrefixes;
            UserEquipmentStaticAddressPoolPrefixes = userEquipmentStaticAddressPoolPrefixes;
            UserPlaneAccessIpv4Address = userPlaneAccessIpv4Address;
            UserPlaneAccessIpv4Gateway = userPlaneAccessIpv4Gateway;
            UserPlaneAccessIpv4Subnet = userPlaneAccessIpv4Subnet;
            UserPlaneAccessName = userPlaneAccessName;
        }
    }
}
