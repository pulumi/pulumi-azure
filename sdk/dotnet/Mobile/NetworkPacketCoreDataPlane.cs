// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Mobile
{
    /// <summary>
    /// Manages a Mobile Network Packet Core Data Plane.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Azure = Pulumi.Azure;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Azure.Core.ResourceGroup.ResourceGroup("example", new()
    ///     {
    ///         Name = "example-resources",
    ///         Location = "West Europe",
    ///     });
    /// 
    ///     var exampleDevice = new Azure.Databoxedge.Device.Device("example", new()
    ///     {
    ///         Name = "example-device",
    ///         ResourceGroupName = example.Name,
    ///         Location = example.Location,
    ///         SkuName = "EdgeP_Base-Standard",
    ///     });
    /// 
    ///     var exampleNetwork = new Azure.Mobile.Network.Network("example", new()
    ///     {
    ///         Name = "example-mn",
    ///         ResourceGroupName = example.Name,
    ///         Location = example.Location,
    ///         MobileCountryCode = "001",
    ///         MobileNetworkCode = "01",
    ///     });
    /// 
    ///     var exampleNetworkPacketCoreControlPlane = new Azure.Mobile.NetworkPacketCoreControlPlane.NetworkPacketCoreControlPlane("example", new()
    ///     {
    ///         Name = "example-mnpccp",
    ///         ResourceGroupName = example.Name,
    ///         Location = example.Location,
    ///         Sku = "G0",
    ///         MobileNetworkId = exampleNetwork.Id,
    ///         ControlPlaneAccessName = "default-interface",
    ///         ControlPlaneAccessIpv4Address = "192.168.1.199",
    ///         ControlPlaneAccessIpv4Gateway = "192.168.1.1",
    ///         ControlPlaneAccessIpv4Subnet = "192.168.1.0/25",
    ///         Platform = 
    ///         {
    ///             { "type", "AKS-HCI" },
    ///             { "edgeDeviceId", exampleDevice.Id },
    ///         },
    ///     });
    /// 
    ///     var exampleNetworkPacketCoreDataPlane = new Azure.Mobile.NetworkPacketCoreDataPlane.NetworkPacketCoreDataPlane("example", new()
    ///     {
    ///         Name = "example-mnpcdp",
    ///         MobileNetworkPacketCoreControlPlaneId = exampleNetworkPacketCoreControlPlane.Id,
    ///         Location = example.Location,
    ///         UserPlaneAccessName = "default-interface",
    ///         UserPlaneAccessIpv4Address = "192.168.1.199",
    ///         UserPlaneAccessIpv4Gateway = "192.168.1.1",
    ///         UserPlaneAccessIpv4Subnet = "192.168.1.0/25",
    ///         Tags = 
    ///         {
    ///             { "key", "value" },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Mobile Network Packet Core Data Plane can be imported using the `resource id`, e.g.
    /// 
    /// ```sh
    /// $ pulumi import azure:mobile/networkPacketCoreDataPlane:NetworkPacketCoreDataPlane example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resourceGroup1/providers/Microsoft.MobileNetwork/packetCoreControlPlanes/packetCoreControlPlane1/packetCoreDataPlanes/packetCoreDataPlane1
    /// ```
    /// </summary>
    [AzureResourceType("azure:mobile/networkPacketCoreDataPlane:NetworkPacketCoreDataPlane")]
    public partial class NetworkPacketCoreDataPlane : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Specifies the Azure Region where the Mobile Network Packet Core Data Plane should exist. Changing this forces a new Mobile Network Packet Core Data Plane to be created.
        /// </summary>
        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// Specifies the ID of the Mobile Network Packet Core Data Plane. Changing this forces a new Mobile Network Packet Core Data Plane to be created.
        /// </summary>
        [Output("mobileNetworkPacketCoreControlPlaneId")]
        public Output<string> MobileNetworkPacketCoreControlPlaneId { get; private set; } = null!;

        /// <summary>
        /// Specifies the name which should be used for this Mobile Network Packet Core Data Plane. Changing this forces a new Mobile Network Packet Core Data Plane to be created.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// A mapping of tags which should be assigned to the Mobile Network Packet Core Data Plane.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// The IPv4 address for the user plane interface. This should match one of the interfaces configured on your Azure Stack Edge device.
        /// </summary>
        [Output("userPlaneAccessIpv4Address")]
        public Output<string?> UserPlaneAccessIpv4Address { get; private set; } = null!;

        /// <summary>
        /// The default IPv4 gateway for the user plane interface. This should match one of the interfaces configured on your Azure Stack Edge device.
        /// </summary>
        [Output("userPlaneAccessIpv4Gateway")]
        public Output<string?> UserPlaneAccessIpv4Gateway { get; private set; } = null!;

        /// <summary>
        /// The IPv4 subnet for the user plane interface. This should match one of the interfaces configured on your Azure Stack Edge device.
        /// </summary>
        [Output("userPlaneAccessIpv4Subnet")]
        public Output<string?> UserPlaneAccessIpv4Subnet { get; private set; } = null!;

        /// <summary>
        /// Specifies the logical name for thie user plane interface. This should match one of the interfaces configured on your Azure Stack Edge device.
        /// </summary>
        [Output("userPlaneAccessName")]
        public Output<string?> UserPlaneAccessName { get; private set; } = null!;


        /// <summary>
        /// Create a NetworkPacketCoreDataPlane resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public NetworkPacketCoreDataPlane(string name, NetworkPacketCoreDataPlaneArgs args, CustomResourceOptions? options = null)
            : base("azure:mobile/networkPacketCoreDataPlane:NetworkPacketCoreDataPlane", name, args ?? new NetworkPacketCoreDataPlaneArgs(), MakeResourceOptions(options, ""))
        {
        }

        private NetworkPacketCoreDataPlane(string name, Input<string> id, NetworkPacketCoreDataPlaneState? state = null, CustomResourceOptions? options = null)
            : base("azure:mobile/networkPacketCoreDataPlane:NetworkPacketCoreDataPlane", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing NetworkPacketCoreDataPlane resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static NetworkPacketCoreDataPlane Get(string name, Input<string> id, NetworkPacketCoreDataPlaneState? state = null, CustomResourceOptions? options = null)
        {
            return new NetworkPacketCoreDataPlane(name, id, state, options);
        }
    }

    public sealed class NetworkPacketCoreDataPlaneArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies the Azure Region where the Mobile Network Packet Core Data Plane should exist. Changing this forces a new Mobile Network Packet Core Data Plane to be created.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// Specifies the ID of the Mobile Network Packet Core Data Plane. Changing this forces a new Mobile Network Packet Core Data Plane to be created.
        /// </summary>
        [Input("mobileNetworkPacketCoreControlPlaneId", required: true)]
        public Input<string> MobileNetworkPacketCoreControlPlaneId { get; set; } = null!;

        /// <summary>
        /// Specifies the name which should be used for this Mobile Network Packet Core Data Plane. Changing this forces a new Mobile Network Packet Core Data Plane to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// A mapping of tags which should be assigned to the Mobile Network Packet Core Data Plane.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        /// <summary>
        /// The IPv4 address for the user plane interface. This should match one of the interfaces configured on your Azure Stack Edge device.
        /// </summary>
        [Input("userPlaneAccessIpv4Address")]
        public Input<string>? UserPlaneAccessIpv4Address { get; set; }

        /// <summary>
        /// The default IPv4 gateway for the user plane interface. This should match one of the interfaces configured on your Azure Stack Edge device.
        /// </summary>
        [Input("userPlaneAccessIpv4Gateway")]
        public Input<string>? UserPlaneAccessIpv4Gateway { get; set; }

        /// <summary>
        /// The IPv4 subnet for the user plane interface. This should match one of the interfaces configured on your Azure Stack Edge device.
        /// </summary>
        [Input("userPlaneAccessIpv4Subnet")]
        public Input<string>? UserPlaneAccessIpv4Subnet { get; set; }

        /// <summary>
        /// Specifies the logical name for thie user plane interface. This should match one of the interfaces configured on your Azure Stack Edge device.
        /// </summary>
        [Input("userPlaneAccessName")]
        public Input<string>? UserPlaneAccessName { get; set; }

        public NetworkPacketCoreDataPlaneArgs()
        {
        }
        public static new NetworkPacketCoreDataPlaneArgs Empty => new NetworkPacketCoreDataPlaneArgs();
    }

    public sealed class NetworkPacketCoreDataPlaneState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies the Azure Region where the Mobile Network Packet Core Data Plane should exist. Changing this forces a new Mobile Network Packet Core Data Plane to be created.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// Specifies the ID of the Mobile Network Packet Core Data Plane. Changing this forces a new Mobile Network Packet Core Data Plane to be created.
        /// </summary>
        [Input("mobileNetworkPacketCoreControlPlaneId")]
        public Input<string>? MobileNetworkPacketCoreControlPlaneId { get; set; }

        /// <summary>
        /// Specifies the name which should be used for this Mobile Network Packet Core Data Plane. Changing this forces a new Mobile Network Packet Core Data Plane to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// A mapping of tags which should be assigned to the Mobile Network Packet Core Data Plane.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        /// <summary>
        /// The IPv4 address for the user plane interface. This should match one of the interfaces configured on your Azure Stack Edge device.
        /// </summary>
        [Input("userPlaneAccessIpv4Address")]
        public Input<string>? UserPlaneAccessIpv4Address { get; set; }

        /// <summary>
        /// The default IPv4 gateway for the user plane interface. This should match one of the interfaces configured on your Azure Stack Edge device.
        /// </summary>
        [Input("userPlaneAccessIpv4Gateway")]
        public Input<string>? UserPlaneAccessIpv4Gateway { get; set; }

        /// <summary>
        /// The IPv4 subnet for the user plane interface. This should match one of the interfaces configured on your Azure Stack Edge device.
        /// </summary>
        [Input("userPlaneAccessIpv4Subnet")]
        public Input<string>? UserPlaneAccessIpv4Subnet { get; set; }

        /// <summary>
        /// Specifies the logical name for thie user plane interface. This should match one of the interfaces configured on your Azure Stack Edge device.
        /// </summary>
        [Input("userPlaneAccessName")]
        public Input<string>? UserPlaneAccessName { get; set; }

        public NetworkPacketCoreDataPlaneState()
        {
        }
        public static new NetworkPacketCoreDataPlaneState Empty => new NetworkPacketCoreDataPlaneState();
    }
}
