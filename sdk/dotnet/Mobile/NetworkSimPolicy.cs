// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Mobile
{
    /// <summary>
    /// Manages a Mobile Network Sim Policy.
    /// 
    /// ## Import
    /// 
    /// Mobile Network Sim Policies can be imported using the `resource id`, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import azure:mobile/networkSimPolicy:NetworkSimPolicy example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resourceGroup1/providers/Microsoft.MobileNetwork/mobileNetworks/mobileNetwork1/simPolicies/simPolicy1
    /// ```
    /// </summary>
    [AzureResourceType("azure:mobile/networkSimPolicy:NetworkSimPolicy")]
    public partial class NetworkSimPolicy : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The ID of default slice to use if the UE does not explicitly specify it. This slice must exist in the `slice` block.
        /// </summary>
        [Output("defaultSliceId")]
        public Output<string> DefaultSliceId { get; private set; } = null!;

        /// <summary>
        /// Specifies the Azure Region where the Mobile Network Sim Policy should exist. Changing this forces a new Mobile Network Sim Policies to be created.
        /// </summary>
        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// The ID of the Mobile Network which the Sim Policy belongs to. Changing this forces a new Mobile Network Sim Policies to be created.
        /// </summary>
        [Output("mobileNetworkId")]
        public Output<string> MobileNetworkId { get; private set; } = null!;

        /// <summary>
        /// The name which should be used for this Mobile Network Sim Policies. Changing this forces a new Mobile Network Sim Policies to be created.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// RAT/Frequency Selection Priority Index, defined in 3GPP TS 36.413.
        /// </summary>
        [Output("ratFrequencySelectionPriorityIndex")]
        public Output<int?> RatFrequencySelectionPriorityIndex { get; private set; } = null!;

        /// <summary>
        /// Interval for the user equipment periodic registration update procedure. Defaults to `3240`.
        /// </summary>
        [Output("registrationTimerInSeconds")]
        public Output<int?> RegistrationTimerInSeconds { get; private set; } = null!;

        /// <summary>
        /// An array of `slice` block as defined below. The allowed slices and the settings to use for them. The list must not contain duplicate items and must contain at least one item.
        /// </summary>
        [Output("slices")]
        public Output<ImmutableArray<Outputs.NetworkSimPolicySlice>> Slices { get; private set; } = null!;

        /// <summary>
        /// A mapping of tags which should be assigned to the Mobile Network Sim Policies.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// A `user_equipment_aggregate_maximum_bit_rate` block as defined below.
        /// </summary>
        [Output("userEquipmentAggregateMaximumBitRate")]
        public Output<Outputs.NetworkSimPolicyUserEquipmentAggregateMaximumBitRate> UserEquipmentAggregateMaximumBitRate { get; private set; } = null!;


        /// <summary>
        /// Create a NetworkSimPolicy resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public NetworkSimPolicy(string name, NetworkSimPolicyArgs args, CustomResourceOptions? options = null)
            : base("azure:mobile/networkSimPolicy:NetworkSimPolicy", name, args ?? new NetworkSimPolicyArgs(), MakeResourceOptions(options, ""))
        {
        }

        private NetworkSimPolicy(string name, Input<string> id, NetworkSimPolicyState? state = null, CustomResourceOptions? options = null)
            : base("azure:mobile/networkSimPolicy:NetworkSimPolicy", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing NetworkSimPolicy resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static NetworkSimPolicy Get(string name, Input<string> id, NetworkSimPolicyState? state = null, CustomResourceOptions? options = null)
        {
            return new NetworkSimPolicy(name, id, state, options);
        }
    }

    public sealed class NetworkSimPolicyArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of default slice to use if the UE does not explicitly specify it. This slice must exist in the `slice` block.
        /// </summary>
        [Input("defaultSliceId", required: true)]
        public Input<string> DefaultSliceId { get; set; } = null!;

        /// <summary>
        /// Specifies the Azure Region where the Mobile Network Sim Policy should exist. Changing this forces a new Mobile Network Sim Policies to be created.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// The ID of the Mobile Network which the Sim Policy belongs to. Changing this forces a new Mobile Network Sim Policies to be created.
        /// </summary>
        [Input("mobileNetworkId", required: true)]
        public Input<string> MobileNetworkId { get; set; } = null!;

        /// <summary>
        /// The name which should be used for this Mobile Network Sim Policies. Changing this forces a new Mobile Network Sim Policies to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// RAT/Frequency Selection Priority Index, defined in 3GPP TS 36.413.
        /// </summary>
        [Input("ratFrequencySelectionPriorityIndex")]
        public Input<int>? RatFrequencySelectionPriorityIndex { get; set; }

        /// <summary>
        /// Interval for the user equipment periodic registration update procedure. Defaults to `3240`.
        /// </summary>
        [Input("registrationTimerInSeconds")]
        public Input<int>? RegistrationTimerInSeconds { get; set; }

        [Input("slices", required: true)]
        private InputList<Inputs.NetworkSimPolicySliceArgs>? _slices;

        /// <summary>
        /// An array of `slice` block as defined below. The allowed slices and the settings to use for them. The list must not contain duplicate items and must contain at least one item.
        /// </summary>
        public InputList<Inputs.NetworkSimPolicySliceArgs> Slices
        {
            get => _slices ?? (_slices = new InputList<Inputs.NetworkSimPolicySliceArgs>());
            set => _slices = value;
        }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// A mapping of tags which should be assigned to the Mobile Network Sim Policies.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        /// <summary>
        /// A `user_equipment_aggregate_maximum_bit_rate` block as defined below.
        /// </summary>
        [Input("userEquipmentAggregateMaximumBitRate", required: true)]
        public Input<Inputs.NetworkSimPolicyUserEquipmentAggregateMaximumBitRateArgs> UserEquipmentAggregateMaximumBitRate { get; set; } = null!;

        public NetworkSimPolicyArgs()
        {
        }
        public static new NetworkSimPolicyArgs Empty => new NetworkSimPolicyArgs();
    }

    public sealed class NetworkSimPolicyState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of default slice to use if the UE does not explicitly specify it. This slice must exist in the `slice` block.
        /// </summary>
        [Input("defaultSliceId")]
        public Input<string>? DefaultSliceId { get; set; }

        /// <summary>
        /// Specifies the Azure Region where the Mobile Network Sim Policy should exist. Changing this forces a new Mobile Network Sim Policies to be created.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// The ID of the Mobile Network which the Sim Policy belongs to. Changing this forces a new Mobile Network Sim Policies to be created.
        /// </summary>
        [Input("mobileNetworkId")]
        public Input<string>? MobileNetworkId { get; set; }

        /// <summary>
        /// The name which should be used for this Mobile Network Sim Policies. Changing this forces a new Mobile Network Sim Policies to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// RAT/Frequency Selection Priority Index, defined in 3GPP TS 36.413.
        /// </summary>
        [Input("ratFrequencySelectionPriorityIndex")]
        public Input<int>? RatFrequencySelectionPriorityIndex { get; set; }

        /// <summary>
        /// Interval for the user equipment periodic registration update procedure. Defaults to `3240`.
        /// </summary>
        [Input("registrationTimerInSeconds")]
        public Input<int>? RegistrationTimerInSeconds { get; set; }

        [Input("slices")]
        private InputList<Inputs.NetworkSimPolicySliceGetArgs>? _slices;

        /// <summary>
        /// An array of `slice` block as defined below. The allowed slices and the settings to use for them. The list must not contain duplicate items and must contain at least one item.
        /// </summary>
        public InputList<Inputs.NetworkSimPolicySliceGetArgs> Slices
        {
            get => _slices ?? (_slices = new InputList<Inputs.NetworkSimPolicySliceGetArgs>());
            set => _slices = value;
        }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// A mapping of tags which should be assigned to the Mobile Network Sim Policies.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        /// <summary>
        /// A `user_equipment_aggregate_maximum_bit_rate` block as defined below.
        /// </summary>
        [Input("userEquipmentAggregateMaximumBitRate")]
        public Input<Inputs.NetworkSimPolicyUserEquipmentAggregateMaximumBitRateGetArgs>? UserEquipmentAggregateMaximumBitRate { get; set; }

        public NetworkSimPolicyState()
        {
        }
        public static new NetworkSimPolicyState Empty => new NetworkSimPolicyState();
    }
}
