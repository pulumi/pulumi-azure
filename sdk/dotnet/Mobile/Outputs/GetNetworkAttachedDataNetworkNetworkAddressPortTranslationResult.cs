// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Mobile.Outputs
{

    [OutputType]
    public sealed class GetNetworkAttachedDataNetworkNetworkAddressPortTranslationResult
    {
        public readonly int IcmpPinholeTimeoutInSeconds;
        public readonly int? PinholeMaximumNumber;
        /// <summary>
        /// A `port_range` block as defined below.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetNetworkAttachedDataNetworkNetworkAddressPortTranslationPortRangeResult> PortRanges;
        public readonly int TcpPinholeTimeoutInSeconds;
        /// <summary>
        /// Minimum time in seconds that will pass before a TCP port that was used by a closed pinhole can be reused.
        /// </summary>
        public readonly int TcpPortReuseMinimumHoldTimeInSeconds;
        public readonly int UdpPinholeTimeoutInSeconds;
        /// <summary>
        /// Minimum time in seconds that will pass before a UDP port that was used by a closed pinhole can be reused.
        /// </summary>
        public readonly int UdpPortReuseMinimumHoldTimeInSeconds;

        [OutputConstructor]
        private GetNetworkAttachedDataNetworkNetworkAddressPortTranslationResult(
            int icmpPinholeTimeoutInSeconds,

            int? pinholeMaximumNumber,

            ImmutableArray<Outputs.GetNetworkAttachedDataNetworkNetworkAddressPortTranslationPortRangeResult> portRanges,

            int tcpPinholeTimeoutInSeconds,

            int tcpPortReuseMinimumHoldTimeInSeconds,

            int udpPinholeTimeoutInSeconds,

            int udpPortReuseMinimumHoldTimeInSeconds)
        {
            IcmpPinholeTimeoutInSeconds = icmpPinholeTimeoutInSeconds;
            PinholeMaximumNumber = pinholeMaximumNumber;
            PortRanges = portRanges;
            TcpPinholeTimeoutInSeconds = tcpPinholeTimeoutInSeconds;
            TcpPortReuseMinimumHoldTimeInSeconds = tcpPortReuseMinimumHoldTimeInSeconds;
            UdpPinholeTimeoutInSeconds = udpPinholeTimeoutInSeconds;
            UdpPortReuseMinimumHoldTimeInSeconds = udpPortReuseMinimumHoldTimeInSeconds;
        }
    }
}
