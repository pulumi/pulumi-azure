// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.LogAnalytics
{
    public static class GetWorkspaceTable
    {
        /// <summary>
        /// Use this data source to access information about an existing Log Analytics Workspace Table.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Azure = Pulumi.Azure;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Azure.LogAnalytics.GetWorkspaceTable.Invoke(new()
        ///     {
        ///         Name = "InsightsMetrics",
        ///         WorkspaceId = exampleAzurermLogAnalyticsWorkspace.Id,
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["retentionInDays"] = example.Apply(getWorkspaceTableResult =&gt; getWorkspaceTableResult.RetentionInDays),
        ///     };
        /// });
        /// ```
        /// 
        /// ## API Providers
        /// 
        /// &lt;!-- This section is generated, changes will be overwritten --&gt;
        /// This data source uses the following Azure API Providers:
        /// 
        /// * `Microsoft.OperationalInsights` - 2022-10-01
        /// </summary>
        public static Task<GetWorkspaceTableResult> InvokeAsync(GetWorkspaceTableArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetWorkspaceTableResult>("azure:loganalytics/getWorkspaceTable:getWorkspaceTable", args ?? new GetWorkspaceTableArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to access information about an existing Log Analytics Workspace Table.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Azure = Pulumi.Azure;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Azure.LogAnalytics.GetWorkspaceTable.Invoke(new()
        ///     {
        ///         Name = "InsightsMetrics",
        ///         WorkspaceId = exampleAzurermLogAnalyticsWorkspace.Id,
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["retentionInDays"] = example.Apply(getWorkspaceTableResult =&gt; getWorkspaceTableResult.RetentionInDays),
        ///     };
        /// });
        /// ```
        /// 
        /// ## API Providers
        /// 
        /// &lt;!-- This section is generated, changes will be overwritten --&gt;
        /// This data source uses the following Azure API Providers:
        /// 
        /// * `Microsoft.OperationalInsights` - 2022-10-01
        /// </summary>
        public static Output<GetWorkspaceTableResult> Invoke(GetWorkspaceTableInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetWorkspaceTableResult>("azure:loganalytics/getWorkspaceTable:getWorkspaceTable", args ?? new GetWorkspaceTableInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to access information about an existing Log Analytics Workspace Table.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Azure = Pulumi.Azure;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Azure.LogAnalytics.GetWorkspaceTable.Invoke(new()
        ///     {
        ///         Name = "InsightsMetrics",
        ///         WorkspaceId = exampleAzurermLogAnalyticsWorkspace.Id,
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["retentionInDays"] = example.Apply(getWorkspaceTableResult =&gt; getWorkspaceTableResult.RetentionInDays),
        ///     };
        /// });
        /// ```
        /// 
        /// ## API Providers
        /// 
        /// &lt;!-- This section is generated, changes will be overwritten --&gt;
        /// This data source uses the following Azure API Providers:
        /// 
        /// * `Microsoft.OperationalInsights` - 2022-10-01
        /// </summary>
        public static Output<GetWorkspaceTableResult> Invoke(GetWorkspaceTableInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetWorkspaceTableResult>("azure:loganalytics/getWorkspaceTable:getWorkspaceTable", args ?? new GetWorkspaceTableInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetWorkspaceTableArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of this Log Analytics Workspace Table.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        /// <summary>
        /// The ID of the Log Analytics Workspace the table belongs to.
        /// </summary>
        [Input("workspaceId", required: true)]
        public string WorkspaceId { get; set; } = null!;

        public GetWorkspaceTableArgs()
        {
        }
        public static new GetWorkspaceTableArgs Empty => new GetWorkspaceTableArgs();
    }

    public sealed class GetWorkspaceTableInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of this Log Analytics Workspace Table.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// The ID of the Log Analytics Workspace the table belongs to.
        /// </summary>
        [Input("workspaceId", required: true)]
        public Input<string> WorkspaceId { get; set; } = null!;

        public GetWorkspaceTableInvokeArgs()
        {
        }
        public static new GetWorkspaceTableInvokeArgs Empty => new GetWorkspaceTableInvokeArgs();
    }


    [OutputType]
    public sealed class GetWorkspaceTableResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string Name;
        /// <summary>
        /// The billing plan information for the Log Analytics Workspace Table.
        /// </summary>
        public readonly string Plan;
        /// <summary>
        /// The table's data retention in days.
        /// </summary>
        public readonly int RetentionInDays;
        /// <summary>
        /// The table's total data retention in days.
        /// </summary>
        public readonly int TotalRetentionInDays;
        public readonly string WorkspaceId;

        [OutputConstructor]
        private GetWorkspaceTableResult(
            string id,

            string name,

            string plan,

            int retentionInDays,

            int totalRetentionInDays,

            string workspaceId)
        {
            Id = id;
            Name = name;
            Plan = plan;
            RetentionInDays = retentionInDays;
            TotalRetentionInDays = totalRetentionInDays;
            WorkspaceId = workspaceId;
        }
    }
}
