// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.LogAnalytics
{
    /// <summary>
    /// Manages a Log Analytics Data Export Rule.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using Azure = Pulumi.Azure;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var exampleResourceGroup = new Azure.Core.ResourceGroup("exampleResourceGroup", new Azure.Core.ResourceGroupArgs
    ///         {
    ///             Location = "West Europe",
    ///         });
    ///         var exampleAnalyticsWorkspace = new Azure.OperationalInsights.AnalyticsWorkspace("exampleAnalyticsWorkspace", new Azure.OperationalInsights.AnalyticsWorkspaceArgs
    ///         {
    ///             Location = exampleResourceGroup.Location,
    ///             ResourceGroupName = exampleResourceGroup.Name,
    ///             Sku = "PerGB2018",
    ///             RetentionInDays = 30,
    ///         });
    ///         var exampleAccount = new Azure.Storage.Account("exampleAccount", new Azure.Storage.AccountArgs
    ///         {
    ///             ResourceGroupName = exampleResourceGroup.Name,
    ///             Location = exampleResourceGroup.Location,
    ///             AccountTier = "Standard",
    ///             AccountReplicationType = "LRS",
    ///         });
    ///         var exampleDataExportRule = new Azure.LogAnalytics.DataExportRule("exampleDataExportRule", new Azure.LogAnalytics.DataExportRuleArgs
    ///         {
    ///             ResourceGroupName = exampleResourceGroup.Name,
    ///             WorkspaceResourceId = exampleAnalyticsWorkspace.Id,
    ///             DestinationResourceId = exampleAccount.Id,
    ///             TableNames = 
    ///             {
    ///                 "Heartbeat",
    ///             },
    ///         });
    ///     }
    /// 
    /// }
    /// ```
    /// 
    /// ## Import
    /// 
    /// Log Analytics Data Export Rule can be imported using the `resource id`, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import azure:loganalytics/dataExportRule:DataExportRule example /subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/group1/providers/Microsoft.OperationalInsights/workspaces/workspace1/dataExports/dataExport1
    /// ```
    /// </summary>
    public partial class DataExportRule : Pulumi.CustomResource
    {
        /// <summary>
        /// The destination resource ID. It should be a storage account, an event hub namespace or an event hub. If the destination is an event hub namespace, an event hub would be created for each table automatically.
        /// </summary>
        [Output("destinationResourceId")]
        public Output<string> DestinationResourceId { get; private set; } = null!;

        /// <summary>
        /// Is this Log Analytics Data Export Rule when enabled? Possible values include `true` or `false`. Defaults to `false`.
        /// </summary>
        [Output("enabled")]
        public Output<bool?> Enabled { get; private set; } = null!;

        /// <summary>
        /// The ID of the created Data Export Rule.
        /// </summary>
        [Output("exportRuleId")]
        public Output<string> ExportRuleId { get; private set; } = null!;

        /// <summary>
        /// The name of the Log Analytics Data Export Rule. Changing this forces a new Log Analytics Data Export Rule to be created.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The name of the Resource Group where the Log Analytics Data Export should exist. Changing this forces a new Log Analytics Data Export Rule to be created.
        /// </summary>
        [Output("resourceGroupName")]
        public Output<string> ResourceGroupName { get; private set; } = null!;

        /// <summary>
        /// A list of table names to export to the destination resource, for example: `["Heartbeat", "SecurityEvent"]`.
        /// </summary>
        [Output("tableNames")]
        public Output<ImmutableArray<string>> TableNames { get; private set; } = null!;

        /// <summary>
        /// The resource ID of the workspace. Changing this forces a new Log Analytics Data Export Rule to be created.
        /// </summary>
        [Output("workspaceResourceId")]
        public Output<string> WorkspaceResourceId { get; private set; } = null!;


        /// <summary>
        /// Create a DataExportRule resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public DataExportRule(string name, DataExportRuleArgs args, CustomResourceOptions? options = null)
            : base("azure:loganalytics/dataExportRule:DataExportRule", name, args ?? new DataExportRuleArgs(), MakeResourceOptions(options, ""))
        {
        }

        private DataExportRule(string name, Input<string> id, DataExportRuleState? state = null, CustomResourceOptions? options = null)
            : base("azure:loganalytics/dataExportRule:DataExportRule", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing DataExportRule resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static DataExportRule Get(string name, Input<string> id, DataExportRuleState? state = null, CustomResourceOptions? options = null)
        {
            return new DataExportRule(name, id, state, options);
        }
    }

    public sealed class DataExportRuleArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The destination resource ID. It should be a storage account, an event hub namespace or an event hub. If the destination is an event hub namespace, an event hub would be created for each table automatically.
        /// </summary>
        [Input("destinationResourceId", required: true)]
        public Input<string> DestinationResourceId { get; set; } = null!;

        /// <summary>
        /// Is this Log Analytics Data Export Rule when enabled? Possible values include `true` or `false`. Defaults to `false`.
        /// </summary>
        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        /// <summary>
        /// The name of the Log Analytics Data Export Rule. Changing this forces a new Log Analytics Data Export Rule to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The name of the Resource Group where the Log Analytics Data Export should exist. Changing this forces a new Log Analytics Data Export Rule to be created.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        [Input("tableNames", required: true)]
        private InputList<string>? _tableNames;

        /// <summary>
        /// A list of table names to export to the destination resource, for example: `["Heartbeat", "SecurityEvent"]`.
        /// </summary>
        public InputList<string> TableNames
        {
            get => _tableNames ?? (_tableNames = new InputList<string>());
            set => _tableNames = value;
        }

        /// <summary>
        /// The resource ID of the workspace. Changing this forces a new Log Analytics Data Export Rule to be created.
        /// </summary>
        [Input("workspaceResourceId", required: true)]
        public Input<string> WorkspaceResourceId { get; set; } = null!;

        public DataExportRuleArgs()
        {
        }
    }

    public sealed class DataExportRuleState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The destination resource ID. It should be a storage account, an event hub namespace or an event hub. If the destination is an event hub namespace, an event hub would be created for each table automatically.
        /// </summary>
        [Input("destinationResourceId")]
        public Input<string>? DestinationResourceId { get; set; }

        /// <summary>
        /// Is this Log Analytics Data Export Rule when enabled? Possible values include `true` or `false`. Defaults to `false`.
        /// </summary>
        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        /// <summary>
        /// The ID of the created Data Export Rule.
        /// </summary>
        [Input("exportRuleId")]
        public Input<string>? ExportRuleId { get; set; }

        /// <summary>
        /// The name of the Log Analytics Data Export Rule. Changing this forces a new Log Analytics Data Export Rule to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The name of the Resource Group where the Log Analytics Data Export should exist. Changing this forces a new Log Analytics Data Export Rule to be created.
        /// </summary>
        [Input("resourceGroupName")]
        public Input<string>? ResourceGroupName { get; set; }

        [Input("tableNames")]
        private InputList<string>? _tableNames;

        /// <summary>
        /// A list of table names to export to the destination resource, for example: `["Heartbeat", "SecurityEvent"]`.
        /// </summary>
        public InputList<string> TableNames
        {
            get => _tableNames ?? (_tableNames = new InputList<string>());
            set => _tableNames = value;
        }

        /// <summary>
        /// The resource ID of the workspace. Changing this forces a new Log Analytics Data Export Rule to be created.
        /// </summary>
        [Input("workspaceResourceId")]
        public Input<string>? WorkspaceResourceId { get; set; }

        public DataExportRuleState()
        {
        }
    }
}
