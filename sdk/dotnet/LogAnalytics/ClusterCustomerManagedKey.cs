// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.LogAnalytics
{
    /// <summary>
    /// Manages a Log Analytics Cluster Customer Managed Key.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using Azure = Pulumi.Azure;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var exampleResourceGroup = new Azure.Core.ResourceGroup("exampleResourceGroup", new()
    ///     {
    ///         Location = "West Europe",
    ///     });
    /// 
    ///     var current = Azure.Core.GetClientConfig.Invoke();
    /// 
    ///     var exampleCluster = new Azure.LogAnalytics.Cluster("exampleCluster", new()
    ///     {
    ///         ResourceGroupName = exampleResourceGroup.Name,
    ///         Location = exampleResourceGroup.Location,
    ///         Identity = new Azure.LogAnalytics.Inputs.ClusterIdentityArgs
    ///         {
    ///             Type = "SystemAssigned",
    ///         },
    ///     });
    /// 
    ///     var exampleKeyVault = new Azure.KeyVault.KeyVault("exampleKeyVault", new()
    ///     {
    ///         Location = exampleResourceGroup.Location,
    ///         ResourceGroupName = exampleResourceGroup.Name,
    ///         TenantId = current.Apply(getClientConfigResult =&gt; getClientConfigResult.TenantId),
    ///         SkuName = "premium",
    ///         AccessPolicies = new[]
    ///         {
    ///             new Azure.KeyVault.Inputs.KeyVaultAccessPolicyArgs
    ///             {
    ///                 TenantId = current.Apply(getClientConfigResult =&gt; getClientConfigResult.TenantId),
    ///                 ObjectId = current.Apply(getClientConfigResult =&gt; getClientConfigResult.ObjectId),
    ///                 KeyPermissions = new[]
    ///                 {
    ///                     "Create",
    ///                     "Get",
    ///                     "GetRotationPolicy",
    ///                 },
    ///                 SecretPermissions = new[]
    ///                 {
    ///                     "Set",
    ///                 },
    ///             },
    ///             new Azure.KeyVault.Inputs.KeyVaultAccessPolicyArgs
    ///             {
    ///                 TenantId = exampleCluster.Identity.Apply(identity =&gt; identity.TenantId),
    ///                 ObjectId = exampleCluster.Identity.Apply(identity =&gt; identity.PrincipalId),
    ///                 KeyPermissions = new[]
    ///                 {
    ///                     "Get",
    ///                     "Unwrapkey",
    ///                     "Wrapkey",
    ///                 },
    ///             },
    ///         },
    ///         Tags = 
    ///         {
    ///             { "environment", "Production" },
    ///         },
    ///     });
    /// 
    ///     var exampleKey = new Azure.KeyVault.Key("exampleKey", new()
    ///     {
    ///         KeyVaultId = exampleKeyVault.Id,
    ///         KeyType = "RSA",
    ///         KeySize = 2048,
    ///         KeyOpts = new[]
    ///         {
    ///             "decrypt",
    ///             "encrypt",
    ///             "sign",
    ///             "unwrapKey",
    ///             "verify",
    ///             "wrapKey",
    ///         },
    ///     });
    /// 
    ///     var exampleClusterCustomerManagedKey = new Azure.LogAnalytics.ClusterCustomerManagedKey("exampleClusterCustomerManagedKey", new()
    ///     {
    ///         LogAnalyticsClusterId = exampleCluster.Id,
    ///         KeyVaultKeyId = exampleKey.Id,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Log Analytics Cluster Customer Managed Keys can be imported using the `resource id`, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import azure:loganalytics/clusterCustomerManagedKey:ClusterCustomerManagedKey example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.OperationalInsights/clusters/cluster1
    /// ```
    /// </summary>
    [AzureResourceType("azure:loganalytics/clusterCustomerManagedKey:ClusterCustomerManagedKey")]
    public partial class ClusterCustomerManagedKey : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The ID of the Key Vault Key to use for encryption.
        /// </summary>
        [Output("keyVaultKeyId")]
        public Output<string> KeyVaultKeyId { get; private set; } = null!;

        /// <summary>
        /// The ID of the Log Analytics Cluster. Changing this forces a new Log Analytics Cluster Customer Managed Key to be created.
        /// </summary>
        [Output("logAnalyticsClusterId")]
        public Output<string> LogAnalyticsClusterId { get; private set; } = null!;


        /// <summary>
        /// Create a ClusterCustomerManagedKey resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ClusterCustomerManagedKey(string name, ClusterCustomerManagedKeyArgs args, CustomResourceOptions? options = null)
            : base("azure:loganalytics/clusterCustomerManagedKey:ClusterCustomerManagedKey", name, args ?? new ClusterCustomerManagedKeyArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ClusterCustomerManagedKey(string name, Input<string> id, ClusterCustomerManagedKeyState? state = null, CustomResourceOptions? options = null)
            : base("azure:loganalytics/clusterCustomerManagedKey:ClusterCustomerManagedKey", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ClusterCustomerManagedKey resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ClusterCustomerManagedKey Get(string name, Input<string> id, ClusterCustomerManagedKeyState? state = null, CustomResourceOptions? options = null)
        {
            return new ClusterCustomerManagedKey(name, id, state, options);
        }
    }

    public sealed class ClusterCustomerManagedKeyArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the Key Vault Key to use for encryption.
        /// </summary>
        [Input("keyVaultKeyId", required: true)]
        public Input<string> KeyVaultKeyId { get; set; } = null!;

        /// <summary>
        /// The ID of the Log Analytics Cluster. Changing this forces a new Log Analytics Cluster Customer Managed Key to be created.
        /// </summary>
        [Input("logAnalyticsClusterId", required: true)]
        public Input<string> LogAnalyticsClusterId { get; set; } = null!;

        public ClusterCustomerManagedKeyArgs()
        {
        }
        public static new ClusterCustomerManagedKeyArgs Empty => new ClusterCustomerManagedKeyArgs();
    }

    public sealed class ClusterCustomerManagedKeyState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the Key Vault Key to use for encryption.
        /// </summary>
        [Input("keyVaultKeyId")]
        public Input<string>? KeyVaultKeyId { get; set; }

        /// <summary>
        /// The ID of the Log Analytics Cluster. Changing this forces a new Log Analytics Cluster Customer Managed Key to be created.
        /// </summary>
        [Input("logAnalyticsClusterId")]
        public Input<string>? LogAnalyticsClusterId { get; set; }

        public ClusterCustomerManagedKeyState()
        {
        }
        public static new ClusterCustomerManagedKeyState Empty => new ClusterCustomerManagedKeyState();
    }
}
