// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Scheduler
{
    /// <summary>
    /// Manages a Scheduler Job.
    /// 
    /// &gt; **NOTE:** Support for Scheduler Job has been deprecated by Microsoft in favour of Logic Apps ([more information can be found at this link](https://docs.microsoft.com/en-us/azure/scheduler/migrate-from-scheduler-to-logic-apps)) - as such we plan to remove support for this resource as a part of version 2.0 of the AzureRM Provider.
    /// 
    /// &gt; This content is derived from https://github.com/terraform-providers/terraform-provider-azurerm/blob/master/website/docs/r/scheduler_job.html.markdown.
    /// </summary>
    public partial class Job : Pulumi.CustomResource
    {
        /// <summary>
        /// A `action_storage_queue` block defining a storage queue job action as described below. Note this is identical to an `error_action_storage_queue` block.
        /// </summary>
        [Output("actionStorageQueue")]
        public Output<Outputs.JobActionStorageQueue?> ActionStorageQueue { get; private set; } = null!;

        /// <summary>
        /// A `action_web` block defining the job action as described below. Note this is identical to an `error_action_web` block.
        /// </summary>
        [Output("actionWeb")]
        public Output<Outputs.JobActionWeb?> ActionWeb { get; private set; } = null!;

        /// <summary>
        /// A `error_action_storage_queue` block defining the a web action to take on an error as described below. Note this is identical to an `action_storage_queue` block.
        /// </summary>
        [Output("errorActionStorageQueue")]
        public Output<Outputs.JobErrorActionStorageQueue?> ErrorActionStorageQueue { get; private set; } = null!;

        /// <summary>
        /// A `error_action_web` block defining the action to take on an error as described below. Note this is identical to an `action_web` block.
        /// </summary>
        [Output("errorActionWeb")]
        public Output<Outputs.JobErrorActionWeb?> ErrorActionWeb { get; private set; } = null!;

        /// <summary>
        /// Specifies the name of the Scheduler Job Collection in which the Job should exist. Changing this forces a new resource to be created.
        /// </summary>
        [Output("jobCollectionName")]
        public Output<string> JobCollectionName { get; private set; } = null!;

        /// <summary>
        /// The name of the Scheduler Job. Changing this forces a new resource to be created.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// A `recurrence` block defining a job occurrence schedule.
        /// </summary>
        [Output("recurrence")]
        public Output<Outputs.JobRecurrence?> Recurrence { get; private set; } = null!;

        /// <summary>
        /// The name of the resource group in which to create the Scheduler Job. Changing this forces a new resource to be created.
        /// </summary>
        [Output("resourceGroupName")]
        public Output<string> ResourceGroupName { get; private set; } = null!;

        /// <summary>
        /// A `retry` block defining how to retry as described below.
        /// </summary>
        [Output("retry")]
        public Output<Outputs.JobRetry?> Retry { get; private set; } = null!;

        /// <summary>
        /// The time the first instance of the job is to start running at.
        /// </summary>
        [Output("startTime")]
        public Output<string> StartTime { get; private set; } = null!;

        /// <summary>
        /// The sets or gets the current state of the job. Can be set to either `Enabled` or `Completed`
        /// </summary>
        [Output("state")]
        public Output<string> State { get; private set; } = null!;


        /// <summary>
        /// Create a Job resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Job(string name, JobArgs args, CustomResourceOptions? options = null)
            : base("azure:scheduler/job:Job", name, args ?? ResourceArgs.Empty, MakeResourceOptions(options, ""))
        {
        }

        private Job(string name, Input<string> id, JobState? state = null, CustomResourceOptions? options = null)
            : base("azure:scheduler/job:Job", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Job resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Job Get(string name, Input<string> id, JobState? state = null, CustomResourceOptions? options = null)
        {
            return new Job(name, id, state, options);
        }
    }

    public sealed class JobArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// A `action_storage_queue` block defining a storage queue job action as described below. Note this is identical to an `error_action_storage_queue` block.
        /// </summary>
        [Input("actionStorageQueue")]
        public Input<Inputs.JobActionStorageQueueArgs>? ActionStorageQueue { get; set; }

        /// <summary>
        /// A `action_web` block defining the job action as described below. Note this is identical to an `error_action_web` block.
        /// </summary>
        [Input("actionWeb")]
        public Input<Inputs.JobActionWebArgs>? ActionWeb { get; set; }

        /// <summary>
        /// A `error_action_storage_queue` block defining the a web action to take on an error as described below. Note this is identical to an `action_storage_queue` block.
        /// </summary>
        [Input("errorActionStorageQueue")]
        public Input<Inputs.JobErrorActionStorageQueueArgs>? ErrorActionStorageQueue { get; set; }

        /// <summary>
        /// A `error_action_web` block defining the action to take on an error as described below. Note this is identical to an `action_web` block.
        /// </summary>
        [Input("errorActionWeb")]
        public Input<Inputs.JobErrorActionWebArgs>? ErrorActionWeb { get; set; }

        /// <summary>
        /// Specifies the name of the Scheduler Job Collection in which the Job should exist. Changing this forces a new resource to be created.
        /// </summary>
        [Input("jobCollectionName", required: true)]
        public Input<string> JobCollectionName { get; set; } = null!;

        /// <summary>
        /// The name of the Scheduler Job. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// A `recurrence` block defining a job occurrence schedule.
        /// </summary>
        [Input("recurrence")]
        public Input<Inputs.JobRecurrenceArgs>? Recurrence { get; set; }

        /// <summary>
        /// The name of the resource group in which to create the Scheduler Job. Changing this forces a new resource to be created.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// A `retry` block defining how to retry as described below.
        /// </summary>
        [Input("retry")]
        public Input<Inputs.JobRetryArgs>? Retry { get; set; }

        /// <summary>
        /// The time the first instance of the job is to start running at.
        /// </summary>
        [Input("startTime")]
        public Input<string>? StartTime { get; set; }

        /// <summary>
        /// The sets or gets the current state of the job. Can be set to either `Enabled` or `Completed`
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        public JobArgs()
        {
        }
    }

    public sealed class JobState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// A `action_storage_queue` block defining a storage queue job action as described below. Note this is identical to an `error_action_storage_queue` block.
        /// </summary>
        [Input("actionStorageQueue")]
        public Input<Inputs.JobActionStorageQueueGetArgs>? ActionStorageQueue { get; set; }

        /// <summary>
        /// A `action_web` block defining the job action as described below. Note this is identical to an `error_action_web` block.
        /// </summary>
        [Input("actionWeb")]
        public Input<Inputs.JobActionWebGetArgs>? ActionWeb { get; set; }

        /// <summary>
        /// A `error_action_storage_queue` block defining the a web action to take on an error as described below. Note this is identical to an `action_storage_queue` block.
        /// </summary>
        [Input("errorActionStorageQueue")]
        public Input<Inputs.JobErrorActionStorageQueueGetArgs>? ErrorActionStorageQueue { get; set; }

        /// <summary>
        /// A `error_action_web` block defining the action to take on an error as described below. Note this is identical to an `action_web` block.
        /// </summary>
        [Input("errorActionWeb")]
        public Input<Inputs.JobErrorActionWebGetArgs>? ErrorActionWeb { get; set; }

        /// <summary>
        /// Specifies the name of the Scheduler Job Collection in which the Job should exist. Changing this forces a new resource to be created.
        /// </summary>
        [Input("jobCollectionName")]
        public Input<string>? JobCollectionName { get; set; }

        /// <summary>
        /// The name of the Scheduler Job. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// A `recurrence` block defining a job occurrence schedule.
        /// </summary>
        [Input("recurrence")]
        public Input<Inputs.JobRecurrenceGetArgs>? Recurrence { get; set; }

        /// <summary>
        /// The name of the resource group in which to create the Scheduler Job. Changing this forces a new resource to be created.
        /// </summary>
        [Input("resourceGroupName")]
        public Input<string>? ResourceGroupName { get; set; }

        /// <summary>
        /// A `retry` block defining how to retry as described below.
        /// </summary>
        [Input("retry")]
        public Input<Inputs.JobRetryGetArgs>? Retry { get; set; }

        /// <summary>
        /// The time the first instance of the job is to start running at.
        /// </summary>
        [Input("startTime")]
        public Input<string>? StartTime { get; set; }

        /// <summary>
        /// The sets or gets the current state of the job. Can be set to either `Enabled` or `Completed`
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        public JobState()
        {
        }
    }

    namespace Inputs
    {

    public sealed class JobActionStorageQueueArgs : Pulumi.ResourceArgs
    {
        [Input("message", required: true)]
        public Input<string> Message { get; set; } = null!;

        [Input("sasToken", required: true)]
        public Input<string> SasToken { get; set; } = null!;

        [Input("storageAccountName", required: true)]
        public Input<string> StorageAccountName { get; set; } = null!;

        [Input("storageQueueName", required: true)]
        public Input<string> StorageQueueName { get; set; } = null!;

        public JobActionStorageQueueArgs()
        {
        }
    }

    public sealed class JobActionStorageQueueGetArgs : Pulumi.ResourceArgs
    {
        [Input("message", required: true)]
        public Input<string> Message { get; set; } = null!;

        [Input("sasToken", required: true)]
        public Input<string> SasToken { get; set; } = null!;

        [Input("storageAccountName", required: true)]
        public Input<string> StorageAccountName { get; set; } = null!;

        [Input("storageQueueName", required: true)]
        public Input<string> StorageQueueName { get; set; } = null!;

        public JobActionStorageQueueGetArgs()
        {
        }
    }

    public sealed class JobActionWebArgs : Pulumi.ResourceArgs
    {
        [Input("authenticationActiveDirectory")]
        public Input<JobActionWebAuthenticationActiveDirectoryArgs>? AuthenticationActiveDirectory { get; set; }

        [Input("authenticationBasic")]
        public Input<JobActionWebAuthenticationBasicArgs>? AuthenticationBasic { get; set; }

        [Input("authenticationCertificate")]
        public Input<JobActionWebAuthenticationCertificateArgs>? AuthenticationCertificate { get; set; }

        [Input("body")]
        public Input<string>? Body { get; set; }

        [Input("headers")]
        private InputMap<string>? _headers;
        public InputMap<string> Headers
        {
            get => _headers ?? (_headers = new InputMap<string>());
            set => _headers = value;
        }

        [Input("method", required: true)]
        public Input<string> Method { get; set; } = null!;

        [Input("url", required: true)]
        public Input<string> Url { get; set; } = null!;

        public JobActionWebArgs()
        {
        }
    }

    public sealed class JobActionWebAuthenticationActiveDirectoryArgs : Pulumi.ResourceArgs
    {
        [Input("audience")]
        public Input<string>? Audience { get; set; }

        [Input("clientId", required: true)]
        public Input<string> ClientId { get; set; } = null!;

        [Input("secret", required: true)]
        public Input<string> Secret { get; set; } = null!;

        [Input("tenantId", required: true)]
        public Input<string> TenantId { get; set; } = null!;

        public JobActionWebAuthenticationActiveDirectoryArgs()
        {
        }
    }

    public sealed class JobActionWebAuthenticationActiveDirectoryGetArgs : Pulumi.ResourceArgs
    {
        [Input("audience")]
        public Input<string>? Audience { get; set; }

        [Input("clientId", required: true)]
        public Input<string> ClientId { get; set; } = null!;

        [Input("secret", required: true)]
        public Input<string> Secret { get; set; } = null!;

        [Input("tenantId", required: true)]
        public Input<string> TenantId { get; set; } = null!;

        public JobActionWebAuthenticationActiveDirectoryGetArgs()
        {
        }
    }

    public sealed class JobActionWebAuthenticationBasicArgs : Pulumi.ResourceArgs
    {
        [Input("password", required: true)]
        public Input<string> Password { get; set; } = null!;

        [Input("username", required: true)]
        public Input<string> Username { get; set; } = null!;

        public JobActionWebAuthenticationBasicArgs()
        {
        }
    }

    public sealed class JobActionWebAuthenticationBasicGetArgs : Pulumi.ResourceArgs
    {
        [Input("password", required: true)]
        public Input<string> Password { get; set; } = null!;

        [Input("username", required: true)]
        public Input<string> Username { get; set; } = null!;

        public JobActionWebAuthenticationBasicGetArgs()
        {
        }
    }

    public sealed class JobActionWebAuthenticationCertificateArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// (Computed)  The certificate expiration date.
        /// </summary>
        [Input("expiration")]
        public Input<string>? Expiration { get; set; }

        [Input("password", required: true)]
        public Input<string> Password { get; set; } = null!;

        [Input("pfx", required: true)]
        public Input<string> Pfx { get; set; } = null!;

        /// <summary>
        /// (Computed) The certificate's certificate subject name.
        /// </summary>
        [Input("subjectName")]
        public Input<string>? SubjectName { get; set; }

        /// <summary>
        /// (Computed) The certificate thumbprint.
        /// </summary>
        [Input("thumbprint")]
        public Input<string>? Thumbprint { get; set; }

        public JobActionWebAuthenticationCertificateArgs()
        {
        }
    }

    public sealed class JobActionWebAuthenticationCertificateGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// (Computed)  The certificate expiration date.
        /// </summary>
        [Input("expiration")]
        public Input<string>? Expiration { get; set; }

        [Input("password", required: true)]
        public Input<string> Password { get; set; } = null!;

        [Input("pfx", required: true)]
        public Input<string> Pfx { get; set; } = null!;

        /// <summary>
        /// (Computed) The certificate's certificate subject name.
        /// </summary>
        [Input("subjectName")]
        public Input<string>? SubjectName { get; set; }

        /// <summary>
        /// (Computed) The certificate thumbprint.
        /// </summary>
        [Input("thumbprint")]
        public Input<string>? Thumbprint { get; set; }

        public JobActionWebAuthenticationCertificateGetArgs()
        {
        }
    }

    public sealed class JobActionWebGetArgs : Pulumi.ResourceArgs
    {
        [Input("authenticationActiveDirectory")]
        public Input<JobActionWebAuthenticationActiveDirectoryGetArgs>? AuthenticationActiveDirectory { get; set; }

        [Input("authenticationBasic")]
        public Input<JobActionWebAuthenticationBasicGetArgs>? AuthenticationBasic { get; set; }

        [Input("authenticationCertificate")]
        public Input<JobActionWebAuthenticationCertificateGetArgs>? AuthenticationCertificate { get; set; }

        [Input("body")]
        public Input<string>? Body { get; set; }

        [Input("headers")]
        private InputMap<string>? _headers;
        public InputMap<string> Headers
        {
            get => _headers ?? (_headers = new InputMap<string>());
            set => _headers = value;
        }

        [Input("method", required: true)]
        public Input<string> Method { get; set; } = null!;

        [Input("url", required: true)]
        public Input<string> Url { get; set; } = null!;

        public JobActionWebGetArgs()
        {
        }
    }

    public sealed class JobErrorActionStorageQueueArgs : Pulumi.ResourceArgs
    {
        [Input("message", required: true)]
        public Input<string> Message { get; set; } = null!;

        [Input("sasToken", required: true)]
        public Input<string> SasToken { get; set; } = null!;

        [Input("storageAccountName", required: true)]
        public Input<string> StorageAccountName { get; set; } = null!;

        [Input("storageQueueName", required: true)]
        public Input<string> StorageQueueName { get; set; } = null!;

        public JobErrorActionStorageQueueArgs()
        {
        }
    }

    public sealed class JobErrorActionStorageQueueGetArgs : Pulumi.ResourceArgs
    {
        [Input("message", required: true)]
        public Input<string> Message { get; set; } = null!;

        [Input("sasToken", required: true)]
        public Input<string> SasToken { get; set; } = null!;

        [Input("storageAccountName", required: true)]
        public Input<string> StorageAccountName { get; set; } = null!;

        [Input("storageQueueName", required: true)]
        public Input<string> StorageQueueName { get; set; } = null!;

        public JobErrorActionStorageQueueGetArgs()
        {
        }
    }

    public sealed class JobErrorActionWebArgs : Pulumi.ResourceArgs
    {
        [Input("authenticationActiveDirectory")]
        public Input<JobErrorActionWebAuthenticationActiveDirectoryArgs>? AuthenticationActiveDirectory { get; set; }

        [Input("authenticationBasic")]
        public Input<JobErrorActionWebAuthenticationBasicArgs>? AuthenticationBasic { get; set; }

        [Input("authenticationCertificate")]
        public Input<JobErrorActionWebAuthenticationCertificateArgs>? AuthenticationCertificate { get; set; }

        [Input("body")]
        public Input<string>? Body { get; set; }

        [Input("headers")]
        private InputMap<string>? _headers;
        public InputMap<string> Headers
        {
            get => _headers ?? (_headers = new InputMap<string>());
            set => _headers = value;
        }

        [Input("method", required: true)]
        public Input<string> Method { get; set; } = null!;

        [Input("url", required: true)]
        public Input<string> Url { get; set; } = null!;

        public JobErrorActionWebArgs()
        {
        }
    }

    public sealed class JobErrorActionWebAuthenticationActiveDirectoryArgs : Pulumi.ResourceArgs
    {
        [Input("audience")]
        public Input<string>? Audience { get; set; }

        [Input("clientId", required: true)]
        public Input<string> ClientId { get; set; } = null!;

        [Input("secret", required: true)]
        public Input<string> Secret { get; set; } = null!;

        [Input("tenantId", required: true)]
        public Input<string> TenantId { get; set; } = null!;

        public JobErrorActionWebAuthenticationActiveDirectoryArgs()
        {
        }
    }

    public sealed class JobErrorActionWebAuthenticationActiveDirectoryGetArgs : Pulumi.ResourceArgs
    {
        [Input("audience")]
        public Input<string>? Audience { get; set; }

        [Input("clientId", required: true)]
        public Input<string> ClientId { get; set; } = null!;

        [Input("secret", required: true)]
        public Input<string> Secret { get; set; } = null!;

        [Input("tenantId", required: true)]
        public Input<string> TenantId { get; set; } = null!;

        public JobErrorActionWebAuthenticationActiveDirectoryGetArgs()
        {
        }
    }

    public sealed class JobErrorActionWebAuthenticationBasicArgs : Pulumi.ResourceArgs
    {
        [Input("password", required: true)]
        public Input<string> Password { get; set; } = null!;

        [Input("username", required: true)]
        public Input<string> Username { get; set; } = null!;

        public JobErrorActionWebAuthenticationBasicArgs()
        {
        }
    }

    public sealed class JobErrorActionWebAuthenticationBasicGetArgs : Pulumi.ResourceArgs
    {
        [Input("password", required: true)]
        public Input<string> Password { get; set; } = null!;

        [Input("username", required: true)]
        public Input<string> Username { get; set; } = null!;

        public JobErrorActionWebAuthenticationBasicGetArgs()
        {
        }
    }

    public sealed class JobErrorActionWebAuthenticationCertificateArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// (Computed)  The certificate expiration date.
        /// </summary>
        [Input("expiration")]
        public Input<string>? Expiration { get; set; }

        [Input("password", required: true)]
        public Input<string> Password { get; set; } = null!;

        [Input("pfx", required: true)]
        public Input<string> Pfx { get; set; } = null!;

        /// <summary>
        /// (Computed) The certificate's certificate subject name.
        /// </summary>
        [Input("subjectName")]
        public Input<string>? SubjectName { get; set; }

        /// <summary>
        /// (Computed) The certificate thumbprint.
        /// </summary>
        [Input("thumbprint")]
        public Input<string>? Thumbprint { get; set; }

        public JobErrorActionWebAuthenticationCertificateArgs()
        {
        }
    }

    public sealed class JobErrorActionWebAuthenticationCertificateGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// (Computed)  The certificate expiration date.
        /// </summary>
        [Input("expiration")]
        public Input<string>? Expiration { get; set; }

        [Input("password", required: true)]
        public Input<string> Password { get; set; } = null!;

        [Input("pfx", required: true)]
        public Input<string> Pfx { get; set; } = null!;

        /// <summary>
        /// (Computed) The certificate's certificate subject name.
        /// </summary>
        [Input("subjectName")]
        public Input<string>? SubjectName { get; set; }

        /// <summary>
        /// (Computed) The certificate thumbprint.
        /// </summary>
        [Input("thumbprint")]
        public Input<string>? Thumbprint { get; set; }

        public JobErrorActionWebAuthenticationCertificateGetArgs()
        {
        }
    }

    public sealed class JobErrorActionWebGetArgs : Pulumi.ResourceArgs
    {
        [Input("authenticationActiveDirectory")]
        public Input<JobErrorActionWebAuthenticationActiveDirectoryGetArgs>? AuthenticationActiveDirectory { get; set; }

        [Input("authenticationBasic")]
        public Input<JobErrorActionWebAuthenticationBasicGetArgs>? AuthenticationBasic { get; set; }

        [Input("authenticationCertificate")]
        public Input<JobErrorActionWebAuthenticationCertificateGetArgs>? AuthenticationCertificate { get; set; }

        [Input("body")]
        public Input<string>? Body { get; set; }

        [Input("headers")]
        private InputMap<string>? _headers;
        public InputMap<string> Headers
        {
            get => _headers ?? (_headers = new InputMap<string>());
            set => _headers = value;
        }

        [Input("method", required: true)]
        public Input<string> Method { get; set; } = null!;

        [Input("url", required: true)]
        public Input<string> Url { get; set; } = null!;

        public JobErrorActionWebGetArgs()
        {
        }
    }

    public sealed class JobRecurrenceArgs : Pulumi.ResourceArgs
    {
        [Input("count")]
        public Input<int>? Count { get; set; }

        [Input("endTime")]
        public Input<string>? EndTime { get; set; }

        [Input("frequency", required: true)]
        public Input<string> Frequency { get; set; } = null!;

        [Input("hours")]
        private InputList<int>? _hours;
        public InputList<int> Hours
        {
            get => _hours ?? (_hours = new InputList<int>());
            set => _hours = value;
        }

        [Input("interval")]
        public Input<int>? Interval { get; set; }

        [Input("minutes")]
        private InputList<int>? _minutes;
        public InputList<int> Minutes
        {
            get => _minutes ?? (_minutes = new InputList<int>());
            set => _minutes = value;
        }

        [Input("monthDays")]
        private InputList<int>? _monthDays;
        public InputList<int> MonthDays
        {
            get => _monthDays ?? (_monthDays = new InputList<int>());
            set => _monthDays = value;
        }

        [Input("monthlyOccurrences")]
        private InputList<JobRecurrenceMonthlyOccurrencesArgs>? _monthlyOccurrences;
        public InputList<JobRecurrenceMonthlyOccurrencesArgs> MonthlyOccurrences
        {
            get => _monthlyOccurrences ?? (_monthlyOccurrences = new InputList<JobRecurrenceMonthlyOccurrencesArgs>());
            set => _monthlyOccurrences = value;
        }

        [Input("weekDays")]
        private InputList<string>? _weekDays;
        public InputList<string> WeekDays
        {
            get => _weekDays ?? (_weekDays = new InputList<string>());
            set => _weekDays = value;
        }

        public JobRecurrenceArgs()
        {
        }
    }

    public sealed class JobRecurrenceGetArgs : Pulumi.ResourceArgs
    {
        [Input("count")]
        public Input<int>? Count { get; set; }

        [Input("endTime")]
        public Input<string>? EndTime { get; set; }

        [Input("frequency", required: true)]
        public Input<string> Frequency { get; set; } = null!;

        [Input("hours")]
        private InputList<int>? _hours;
        public InputList<int> Hours
        {
            get => _hours ?? (_hours = new InputList<int>());
            set => _hours = value;
        }

        [Input("interval")]
        public Input<int>? Interval { get; set; }

        [Input("minutes")]
        private InputList<int>? _minutes;
        public InputList<int> Minutes
        {
            get => _minutes ?? (_minutes = new InputList<int>());
            set => _minutes = value;
        }

        [Input("monthDays")]
        private InputList<int>? _monthDays;
        public InputList<int> MonthDays
        {
            get => _monthDays ?? (_monthDays = new InputList<int>());
            set => _monthDays = value;
        }

        [Input("monthlyOccurrences")]
        private InputList<JobRecurrenceMonthlyOccurrencesGetArgs>? _monthlyOccurrences;
        public InputList<JobRecurrenceMonthlyOccurrencesGetArgs> MonthlyOccurrences
        {
            get => _monthlyOccurrences ?? (_monthlyOccurrences = new InputList<JobRecurrenceMonthlyOccurrencesGetArgs>());
            set => _monthlyOccurrences = value;
        }

        [Input("weekDays")]
        private InputList<string>? _weekDays;
        public InputList<string> WeekDays
        {
            get => _weekDays ?? (_weekDays = new InputList<string>());
            set => _weekDays = value;
        }

        public JobRecurrenceGetArgs()
        {
        }
    }

    public sealed class JobRecurrenceMonthlyOccurrencesArgs : Pulumi.ResourceArgs
    {
        [Input("day", required: true)]
        public Input<string> Day { get; set; } = null!;

        [Input("occurrence", required: true)]
        public Input<int> Occurrence { get; set; } = null!;

        public JobRecurrenceMonthlyOccurrencesArgs()
        {
        }
    }

    public sealed class JobRecurrenceMonthlyOccurrencesGetArgs : Pulumi.ResourceArgs
    {
        [Input("day", required: true)]
        public Input<string> Day { get; set; } = null!;

        [Input("occurrence", required: true)]
        public Input<int> Occurrence { get; set; } = null!;

        public JobRecurrenceMonthlyOccurrencesGetArgs()
        {
        }
    }

    public sealed class JobRetryArgs : Pulumi.ResourceArgs
    {
        [Input("count")]
        public Input<int>? Count { get; set; }

        [Input("interval")]
        public Input<string>? Interval { get; set; }

        public JobRetryArgs()
        {
        }
    }

    public sealed class JobRetryGetArgs : Pulumi.ResourceArgs
    {
        [Input("count")]
        public Input<int>? Count { get; set; }

        [Input("interval")]
        public Input<string>? Interval { get; set; }

        public JobRetryGetArgs()
        {
        }
    }
    }

    namespace Outputs
    {

    [OutputType]
    public sealed class JobActionStorageQueue
    {
        public readonly string Message;
        public readonly string SasToken;
        public readonly string StorageAccountName;
        public readonly string StorageQueueName;

        [OutputConstructor]
        private JobActionStorageQueue(
            string message,
            string sasToken,
            string storageAccountName,
            string storageQueueName)
        {
            Message = message;
            SasToken = sasToken;
            StorageAccountName = storageAccountName;
            StorageQueueName = storageQueueName;
        }
    }

    [OutputType]
    public sealed class JobActionWeb
    {
        public readonly JobActionWebAuthenticationActiveDirectory? AuthenticationActiveDirectory;
        public readonly JobActionWebAuthenticationBasic? AuthenticationBasic;
        public readonly JobActionWebAuthenticationCertificate? AuthenticationCertificate;
        public readonly string? Body;
        public readonly ImmutableDictionary<string, string>? Headers;
        public readonly string Method;
        public readonly string Url;

        [OutputConstructor]
        private JobActionWeb(
            JobActionWebAuthenticationActiveDirectory? authenticationActiveDirectory,
            JobActionWebAuthenticationBasic? authenticationBasic,
            JobActionWebAuthenticationCertificate? authenticationCertificate,
            string? body,
            ImmutableDictionary<string, string>? headers,
            string method,
            string url)
        {
            AuthenticationActiveDirectory = authenticationActiveDirectory;
            AuthenticationBasic = authenticationBasic;
            AuthenticationCertificate = authenticationCertificate;
            Body = body;
            Headers = headers;
            Method = method;
            Url = url;
        }
    }

    [OutputType]
    public sealed class JobActionWebAuthenticationActiveDirectory
    {
        public readonly string Audience;
        public readonly string ClientId;
        public readonly string Secret;
        public readonly string TenantId;

        [OutputConstructor]
        private JobActionWebAuthenticationActiveDirectory(
            string audience,
            string clientId,
            string secret,
            string tenantId)
        {
            Audience = audience;
            ClientId = clientId;
            Secret = secret;
            TenantId = tenantId;
        }
    }

    [OutputType]
    public sealed class JobActionWebAuthenticationBasic
    {
        public readonly string Password;
        public readonly string Username;

        [OutputConstructor]
        private JobActionWebAuthenticationBasic(
            string password,
            string username)
        {
            Password = password;
            Username = username;
        }
    }

    [OutputType]
    public sealed class JobActionWebAuthenticationCertificate
    {
        /// <summary>
        /// (Computed)  The certificate expiration date.
        /// </summary>
        public readonly string Expiration;
        public readonly string Password;
        public readonly string Pfx;
        /// <summary>
        /// (Computed) The certificate's certificate subject name.
        /// </summary>
        public readonly string SubjectName;
        /// <summary>
        /// (Computed) The certificate thumbprint.
        /// </summary>
        public readonly string Thumbprint;

        [OutputConstructor]
        private JobActionWebAuthenticationCertificate(
            string expiration,
            string password,
            string pfx,
            string subjectName,
            string thumbprint)
        {
            Expiration = expiration;
            Password = password;
            Pfx = pfx;
            SubjectName = subjectName;
            Thumbprint = thumbprint;
        }
    }

    [OutputType]
    public sealed class JobErrorActionStorageQueue
    {
        public readonly string Message;
        public readonly string SasToken;
        public readonly string StorageAccountName;
        public readonly string StorageQueueName;

        [OutputConstructor]
        private JobErrorActionStorageQueue(
            string message,
            string sasToken,
            string storageAccountName,
            string storageQueueName)
        {
            Message = message;
            SasToken = sasToken;
            StorageAccountName = storageAccountName;
            StorageQueueName = storageQueueName;
        }
    }

    [OutputType]
    public sealed class JobErrorActionWeb
    {
        public readonly JobErrorActionWebAuthenticationActiveDirectory? AuthenticationActiveDirectory;
        public readonly JobErrorActionWebAuthenticationBasic? AuthenticationBasic;
        public readonly JobErrorActionWebAuthenticationCertificate? AuthenticationCertificate;
        public readonly string? Body;
        public readonly ImmutableDictionary<string, string>? Headers;
        public readonly string Method;
        public readonly string Url;

        [OutputConstructor]
        private JobErrorActionWeb(
            JobErrorActionWebAuthenticationActiveDirectory? authenticationActiveDirectory,
            JobErrorActionWebAuthenticationBasic? authenticationBasic,
            JobErrorActionWebAuthenticationCertificate? authenticationCertificate,
            string? body,
            ImmutableDictionary<string, string>? headers,
            string method,
            string url)
        {
            AuthenticationActiveDirectory = authenticationActiveDirectory;
            AuthenticationBasic = authenticationBasic;
            AuthenticationCertificate = authenticationCertificate;
            Body = body;
            Headers = headers;
            Method = method;
            Url = url;
        }
    }

    [OutputType]
    public sealed class JobErrorActionWebAuthenticationActiveDirectory
    {
        public readonly string Audience;
        public readonly string ClientId;
        public readonly string Secret;
        public readonly string TenantId;

        [OutputConstructor]
        private JobErrorActionWebAuthenticationActiveDirectory(
            string audience,
            string clientId,
            string secret,
            string tenantId)
        {
            Audience = audience;
            ClientId = clientId;
            Secret = secret;
            TenantId = tenantId;
        }
    }

    [OutputType]
    public sealed class JobErrorActionWebAuthenticationBasic
    {
        public readonly string Password;
        public readonly string Username;

        [OutputConstructor]
        private JobErrorActionWebAuthenticationBasic(
            string password,
            string username)
        {
            Password = password;
            Username = username;
        }
    }

    [OutputType]
    public sealed class JobErrorActionWebAuthenticationCertificate
    {
        /// <summary>
        /// (Computed)  The certificate expiration date.
        /// </summary>
        public readonly string Expiration;
        public readonly string Password;
        public readonly string Pfx;
        /// <summary>
        /// (Computed) The certificate's certificate subject name.
        /// </summary>
        public readonly string SubjectName;
        /// <summary>
        /// (Computed) The certificate thumbprint.
        /// </summary>
        public readonly string Thumbprint;

        [OutputConstructor]
        private JobErrorActionWebAuthenticationCertificate(
            string expiration,
            string password,
            string pfx,
            string subjectName,
            string thumbprint)
        {
            Expiration = expiration;
            Password = password;
            Pfx = pfx;
            SubjectName = subjectName;
            Thumbprint = thumbprint;
        }
    }

    [OutputType]
    public sealed class JobRecurrence
    {
        public readonly int? Count;
        public readonly string EndTime;
        public readonly string Frequency;
        public readonly ImmutableArray<int> Hours;
        public readonly int? Interval;
        public readonly ImmutableArray<int> Minutes;
        public readonly ImmutableArray<int> MonthDays;
        public readonly ImmutableArray<JobRecurrenceMonthlyOccurrences> MonthlyOccurrences;
        public readonly ImmutableArray<string> WeekDays;

        [OutputConstructor]
        private JobRecurrence(
            int? count,
            string endTime,
            string frequency,
            ImmutableArray<int> hours,
            int? interval,
            ImmutableArray<int> minutes,
            ImmutableArray<int> monthDays,
            ImmutableArray<JobRecurrenceMonthlyOccurrences> monthlyOccurrences,
            ImmutableArray<string> weekDays)
        {
            Count = count;
            EndTime = endTime;
            Frequency = frequency;
            Hours = hours;
            Interval = interval;
            Minutes = minutes;
            MonthDays = monthDays;
            MonthlyOccurrences = monthlyOccurrences;
            WeekDays = weekDays;
        }
    }

    [OutputType]
    public sealed class JobRecurrenceMonthlyOccurrences
    {
        public readonly string Day;
        public readonly int Occurrence;

        [OutputConstructor]
        private JobRecurrenceMonthlyOccurrences(
            string day,
            int occurrence)
        {
            Day = day;
            Occurrence = occurrence;
        }
    }

    [OutputType]
    public sealed class JobRetry
    {
        public readonly int? Count;
        public readonly string? Interval;

        [OutputConstructor]
        private JobRetry(
            int? count,
            string? interval)
        {
            Count = count;
            Interval = interval;
        }
    }
    }
}
