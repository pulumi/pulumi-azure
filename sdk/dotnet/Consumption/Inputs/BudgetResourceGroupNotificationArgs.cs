// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Consumption.Inputs
{

    public sealed class BudgetResourceGroupNotificationArgs : global::Pulumi.ResourceArgs
    {
        [Input("contactEmails")]
        private InputList<string>? _contactEmails;

        /// <summary>
        /// Specifies a list of email addresses to send the budget notification to when the threshold is exceeded.
        /// </summary>
        public InputList<string> ContactEmails
        {
            get => _contactEmails ?? (_contactEmails = new InputList<string>());
            set => _contactEmails = value;
        }

        [Input("contactGroups")]
        private InputList<string>? _contactGroups;

        /// <summary>
        /// Specifies a list of Action Group IDs to send the budget notification to when the threshold is exceeded.
        /// </summary>
        public InputList<string> ContactGroups
        {
            get => _contactGroups ?? (_contactGroups = new InputList<string>());
            set => _contactGroups = value;
        }

        [Input("contactRoles")]
        private InputList<string>? _contactRoles;

        /// <summary>
        /// Specifies a list of contact roles to send the budget notification to when the threshold is exceeded.
        /// </summary>
        public InputList<string> ContactRoles
        {
            get => _contactRoles ?? (_contactRoles = new InputList<string>());
            set => _contactRoles = value;
        }

        /// <summary>
        /// Should the notification be enabled?
        /// </summary>
        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        /// <summary>
        /// The comparison operator for the notification. Must be one of `EqualTo`, `GreaterThan`, or `GreaterThanOrEqualTo`.
        /// </summary>
        [Input("operator", required: true)]
        public Input<string> Operator { get; set; } = null!;

        /// <summary>
        /// Threshold value associated with a notification. Notification is sent when the cost exceeded the threshold. It is always percent and has to be between 0 and 1000.
        /// </summary>
        [Input("threshold", required: true)]
        public Input<int> Threshold { get; set; } = null!;

        /// <summary>
        /// The type of threshold for the notification. This determines whether the notification is triggered by forecasted costs or actual costs. The allowed values are `Actual` and `Forecasted`. Default is `Actual`.
        /// </summary>
        [Input("thresholdType")]
        public Input<string>? ThresholdType { get; set; }

        public BudgetResourceGroupNotificationArgs()
        {
        }
        public static new BudgetResourceGroupNotificationArgs Empty => new BudgetResourceGroupNotificationArgs();
    }
}
