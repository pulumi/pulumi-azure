// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Consumption
{
    /// <summary>
    /// Manages a Consumption Budget for a Management Group.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using Azure = Pulumi.Azure;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var exampleGroup = new Azure.Management.Group("exampleGroup", new()
    ///     {
    ///         DisplayName = "example",
    ///     });
    /// 
    ///     var exampleResourceGroup = new Azure.Core.ResourceGroup("exampleResourceGroup", new()
    ///     {
    ///         Location = "eastus",
    ///     });
    /// 
    ///     var exampleBudgetManagementGroup = new Azure.Consumption.BudgetManagementGroup("exampleBudgetManagementGroup", new()
    ///     {
    ///         ManagementGroupId = exampleGroup.Id,
    ///         Amount = 1000,
    ///         TimeGrain = "Monthly",
    ///         TimePeriod = new Azure.Consumption.Inputs.BudgetManagementGroupTimePeriodArgs
    ///         {
    ///             StartDate = "2022-06-01T00:00:00Z",
    ///             EndDate = "2022-07-01T00:00:00Z",
    ///         },
    ///         Filter = new Azure.Consumption.Inputs.BudgetManagementGroupFilterArgs
    ///         {
    ///             Dimensions = new[]
    ///             {
    ///                 new Azure.Consumption.Inputs.BudgetManagementGroupFilterDimensionArgs
    ///                 {
    ///                     Name = "ResourceGroupName",
    ///                     Values = new[]
    ///                     {
    ///                         exampleResourceGroup.Name,
    ///                     },
    ///                 },
    ///             },
    ///             Tags = new[]
    ///             {
    ///                 new Azure.Consumption.Inputs.BudgetManagementGroupFilterTagArgs
    ///                 {
    ///                     Name = "foo",
    ///                     Values = new[]
    ///                     {
    ///                         "bar",
    ///                         "baz",
    ///                     },
    ///                 },
    ///             },
    ///         },
    ///         Notifications = new[]
    ///         {
    ///             new Azure.Consumption.Inputs.BudgetManagementGroupNotificationArgs
    ///             {
    ///                 Enabled = true,
    ///                 Threshold = 90,
    ///                 Operator = "EqualTo",
    ///                 ContactEmails = new[]
    ///                 {
    ///                     "foo@example.com",
    ///                     "bar@example.com",
    ///                 },
    ///             },
    ///             new Azure.Consumption.Inputs.BudgetManagementGroupNotificationArgs
    ///             {
    ///                 Enabled = false,
    ///                 Threshold = 100,
    ///                 Operator = "GreaterThan",
    ///                 ThresholdType = "Forecasted",
    ///                 ContactEmails = new[]
    ///                 {
    ///                     "foo@example.com",
    ///                     "bar@example.com",
    ///                 },
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Management Group Consumption Budgets can be imported using the `resource id`, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import azure:consumption/budgetManagementGroup:BudgetManagementGroup example /providers/Microsoft.Management/managementGroups/00000000-0000-0000-0000-000000000000/providers/Microsoft.Consumption/budgets/budget1
    /// ```
    /// </summary>
    [AzureResourceType("azure:consumption/budgetManagementGroup:BudgetManagementGroup")]
    public partial class BudgetManagementGroup : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The total amount of cost to track with the budget.
        /// </summary>
        [Output("amount")]
        public Output<double> Amount { get; private set; } = null!;

        /// <summary>
        /// (Optional) The ETag of the Management Group Consumption Budget.
        /// </summary>
        [Output("etag")]
        public Output<string> Etag { get; private set; } = null!;

        /// <summary>
        /// A `filter` block as defined below.
        /// </summary>
        [Output("filter")]
        public Output<Outputs.BudgetManagementGroupFilter?> Filter { get; private set; } = null!;

        /// <summary>
        /// The ID of the Management Group. Changing this forces a new resource to be created.
        /// </summary>
        [Output("managementGroupId")]
        public Output<string> ManagementGroupId { get; private set; } = null!;

        /// <summary>
        /// The name which should be used for this Management Group Consumption Budget. Changing this forces a new resource to be created.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// One or more `notification` blocks as defined below.
        /// </summary>
        [Output("notifications")]
        public Output<ImmutableArray<Outputs.BudgetManagementGroupNotification>> Notifications { get; private set; } = null!;

        /// <summary>
        /// The time covered by a budget. Tracking of the amount will be reset based on the time grain. Must be one of `BillingAnnual`, `BillingMonth`, `BillingQuarter`, `Annually`, `Monthly` and `Quarterly`. Defaults to `Monthly`.
        /// </summary>
        [Output("timeGrain")]
        public Output<string?> TimeGrain { get; private set; } = null!;

        /// <summary>
        /// A `time_period` block as defined below.
        /// </summary>
        [Output("timePeriod")]
        public Output<Outputs.BudgetManagementGroupTimePeriod> TimePeriod { get; private set; } = null!;


        /// <summary>
        /// Create a BudgetManagementGroup resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public BudgetManagementGroup(string name, BudgetManagementGroupArgs args, CustomResourceOptions? options = null)
            : base("azure:consumption/budgetManagementGroup:BudgetManagementGroup", name, args ?? new BudgetManagementGroupArgs(), MakeResourceOptions(options, ""))
        {
        }

        private BudgetManagementGroup(string name, Input<string> id, BudgetManagementGroupState? state = null, CustomResourceOptions? options = null)
            : base("azure:consumption/budgetManagementGroup:BudgetManagementGroup", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing BudgetManagementGroup resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static BudgetManagementGroup Get(string name, Input<string> id, BudgetManagementGroupState? state = null, CustomResourceOptions? options = null)
        {
            return new BudgetManagementGroup(name, id, state, options);
        }
    }

    public sealed class BudgetManagementGroupArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The total amount of cost to track with the budget.
        /// </summary>
        [Input("amount", required: true)]
        public Input<double> Amount { get; set; } = null!;

        /// <summary>
        /// (Optional) The ETag of the Management Group Consumption Budget.
        /// </summary>
        [Input("etag")]
        public Input<string>? Etag { get; set; }

        /// <summary>
        /// A `filter` block as defined below.
        /// </summary>
        [Input("filter")]
        public Input<Inputs.BudgetManagementGroupFilterArgs>? Filter { get; set; }

        /// <summary>
        /// The ID of the Management Group. Changing this forces a new resource to be created.
        /// </summary>
        [Input("managementGroupId", required: true)]
        public Input<string> ManagementGroupId { get; set; } = null!;

        /// <summary>
        /// The name which should be used for this Management Group Consumption Budget. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("notifications", required: true)]
        private InputList<Inputs.BudgetManagementGroupNotificationArgs>? _notifications;

        /// <summary>
        /// One or more `notification` blocks as defined below.
        /// </summary>
        public InputList<Inputs.BudgetManagementGroupNotificationArgs> Notifications
        {
            get => _notifications ?? (_notifications = new InputList<Inputs.BudgetManagementGroupNotificationArgs>());
            set => _notifications = value;
        }

        /// <summary>
        /// The time covered by a budget. Tracking of the amount will be reset based on the time grain. Must be one of `BillingAnnual`, `BillingMonth`, `BillingQuarter`, `Annually`, `Monthly` and `Quarterly`. Defaults to `Monthly`.
        /// </summary>
        [Input("timeGrain")]
        public Input<string>? TimeGrain { get; set; }

        /// <summary>
        /// A `time_period` block as defined below.
        /// </summary>
        [Input("timePeriod", required: true)]
        public Input<Inputs.BudgetManagementGroupTimePeriodArgs> TimePeriod { get; set; } = null!;

        public BudgetManagementGroupArgs()
        {
        }
        public static new BudgetManagementGroupArgs Empty => new BudgetManagementGroupArgs();
    }

    public sealed class BudgetManagementGroupState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The total amount of cost to track with the budget.
        /// </summary>
        [Input("amount")]
        public Input<double>? Amount { get; set; }

        /// <summary>
        /// (Optional) The ETag of the Management Group Consumption Budget.
        /// </summary>
        [Input("etag")]
        public Input<string>? Etag { get; set; }

        /// <summary>
        /// A `filter` block as defined below.
        /// </summary>
        [Input("filter")]
        public Input<Inputs.BudgetManagementGroupFilterGetArgs>? Filter { get; set; }

        /// <summary>
        /// The ID of the Management Group. Changing this forces a new resource to be created.
        /// </summary>
        [Input("managementGroupId")]
        public Input<string>? ManagementGroupId { get; set; }

        /// <summary>
        /// The name which should be used for this Management Group Consumption Budget. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("notifications")]
        private InputList<Inputs.BudgetManagementGroupNotificationGetArgs>? _notifications;

        /// <summary>
        /// One or more `notification` blocks as defined below.
        /// </summary>
        public InputList<Inputs.BudgetManagementGroupNotificationGetArgs> Notifications
        {
            get => _notifications ?? (_notifications = new InputList<Inputs.BudgetManagementGroupNotificationGetArgs>());
            set => _notifications = value;
        }

        /// <summary>
        /// The time covered by a budget. Tracking of the amount will be reset based on the time grain. Must be one of `BillingAnnual`, `BillingMonth`, `BillingQuarter`, `Annually`, `Monthly` and `Quarterly`. Defaults to `Monthly`.
        /// </summary>
        [Input("timeGrain")]
        public Input<string>? TimeGrain { get; set; }

        /// <summary>
        /// A `time_period` block as defined below.
        /// </summary>
        [Input("timePeriod")]
        public Input<Inputs.BudgetManagementGroupTimePeriodGetArgs>? TimePeriod { get; set; }

        public BudgetManagementGroupState()
        {
        }
        public static new BudgetManagementGroupState Empty => new BudgetManagementGroupState();
    }
}
