// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.DevSpace
{
    /// <summary>
    /// ## Import
    /// 
    /// DevSpace Controller's can be imported using the `resource id`, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import azure:devspace/controller:Controller controller1 /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.DevSpaces/controllers/controller1Name
    /// ```
    /// </summary>
    [AzureResourceType("azure:devspace/controller:Controller")]
    public partial class Controller : Pulumi.CustomResource
    {
        /// <summary>
        /// DNS name for accessing DataPlane services.
        /// </summary>
        [Output("dataPlaneFqdn")]
        public Output<string> DataPlaneFqdn { get; private set; } = null!;

        /// <summary>
        /// The host suffix for the DevSpace Controller.
        /// </summary>
        [Output("hostSuffix")]
        public Output<string> HostSuffix { get; private set; } = null!;

        /// <summary>
        /// Specifies the supported location where the DevSpace Controller should exist. Changing this forces a new resource to be created.
        /// </summary>
        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// Specifies the name of the DevSpace Controller. Changing this forces a new resource to be created.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The name of the resource group under which the DevSpace Controller resource has to be created. Changing this forces a new resource to be created.
        /// </summary>
        [Output("resourceGroupName")]
        public Output<string> ResourceGroupName { get; private set; } = null!;

        /// <summary>
        /// Specifies the SKU Name for this DevSpace Controller. Possible values are `S1`.
        /// </summary>
        [Output("skuName")]
        public Output<string> SkuName { get; private set; } = null!;

        /// <summary>
        /// A mapping of tags to assign to the resource.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// Base64 encoding of `kube_config_raw` of Azure Kubernetes Service cluster. Changing this forces a new resource to be created.
        /// </summary>
        [Output("targetContainerHostCredentialsBase64")]
        public Output<string> TargetContainerHostCredentialsBase64 { get; private set; } = null!;

        /// <summary>
        /// The resource id of Azure Kubernetes Service cluster. Changing this forces a new resource to be created.
        /// </summary>
        [Output("targetContainerHostResourceId")]
        public Output<string> TargetContainerHostResourceId { get; private set; } = null!;


        /// <summary>
        /// Create a Controller resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Controller(string name, ControllerArgs args, CustomResourceOptions? options = null)
            : base("azure:devspace/controller:Controller", name, args ?? new ControllerArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Controller(string name, Input<string> id, ControllerState? state = null, CustomResourceOptions? options = null)
            : base("azure:devspace/controller:Controller", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Controller resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Controller Get(string name, Input<string> id, ControllerState? state = null, CustomResourceOptions? options = null)
        {
            return new Controller(name, id, state, options);
        }
    }

    public sealed class ControllerArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies the supported location where the DevSpace Controller should exist. Changing this forces a new resource to be created.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// Specifies the name of the DevSpace Controller. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The name of the resource group under which the DevSpace Controller resource has to be created. Changing this forces a new resource to be created.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// Specifies the SKU Name for this DevSpace Controller. Possible values are `S1`.
        /// </summary>
        [Input("skuName", required: true)]
        public Input<string> SkuName { get; set; } = null!;

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// A mapping of tags to assign to the resource.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        /// <summary>
        /// Base64 encoding of `kube_config_raw` of Azure Kubernetes Service cluster. Changing this forces a new resource to be created.
        /// </summary>
        [Input("targetContainerHostCredentialsBase64", required: true)]
        public Input<string> TargetContainerHostCredentialsBase64 { get; set; } = null!;

        /// <summary>
        /// The resource id of Azure Kubernetes Service cluster. Changing this forces a new resource to be created.
        /// </summary>
        [Input("targetContainerHostResourceId", required: true)]
        public Input<string> TargetContainerHostResourceId { get; set; } = null!;

        public ControllerArgs()
        {
        }
    }

    public sealed class ControllerState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// DNS name for accessing DataPlane services.
        /// </summary>
        [Input("dataPlaneFqdn")]
        public Input<string>? DataPlaneFqdn { get; set; }

        /// <summary>
        /// The host suffix for the DevSpace Controller.
        /// </summary>
        [Input("hostSuffix")]
        public Input<string>? HostSuffix { get; set; }

        /// <summary>
        /// Specifies the supported location where the DevSpace Controller should exist. Changing this forces a new resource to be created.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// Specifies the name of the DevSpace Controller. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The name of the resource group under which the DevSpace Controller resource has to be created. Changing this forces a new resource to be created.
        /// </summary>
        [Input("resourceGroupName")]
        public Input<string>? ResourceGroupName { get; set; }

        /// <summary>
        /// Specifies the SKU Name for this DevSpace Controller. Possible values are `S1`.
        /// </summary>
        [Input("skuName")]
        public Input<string>? SkuName { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// A mapping of tags to assign to the resource.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        /// <summary>
        /// Base64 encoding of `kube_config_raw` of Azure Kubernetes Service cluster. Changing this forces a new resource to be created.
        /// </summary>
        [Input("targetContainerHostCredentialsBase64")]
        public Input<string>? TargetContainerHostCredentialsBase64 { get; set; }

        /// <summary>
        /// The resource id of Azure Kubernetes Service cluster. Changing this forces a new resource to be created.
        /// </summary>
        [Input("targetContainerHostResourceId")]
        public Input<string>? TargetContainerHostResourceId { get; set; }

        public ControllerState()
        {
        }
    }
}
