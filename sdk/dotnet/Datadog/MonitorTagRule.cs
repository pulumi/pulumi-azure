// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Datadog
{
    /// <summary>
    /// Manages TagRules on the datadog Monitor.
    /// 
    /// ## Example Usage
    /// ### Adding TagRules on monitor
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Azure = Pulumi.Azure;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var exampleResourceGroup = new Azure.Core.ResourceGroup("exampleResourceGroup", new()
    ///     {
    ///         Location = "West US 2",
    ///     });
    /// 
    ///     var exampleMonitor = new Azure.Datadog.Monitor("exampleMonitor", new()
    ///     {
    ///         ResourceGroupName = exampleResourceGroup.Name,
    ///         Location = exampleResourceGroup.Location,
    ///         DatadogOrganization = new Azure.Datadog.Inputs.MonitorDatadogOrganizationArgs
    ///         {
    ///             ApiKey = "XXXX",
    ///             ApplicationKey = "XXXX",
    ///         },
    ///         User = new Azure.Datadog.Inputs.MonitorUserArgs
    ///         {
    ///             Name = "Example",
    ///             Email = "abc@xyz.com",
    ///         },
    ///         SkuName = "Linked",
    ///         Identity = new Azure.Datadog.Inputs.MonitorIdentityArgs
    ///         {
    ///             Type = "SystemAssigned",
    ///         },
    ///     });
    /// 
    ///     var exampleMonitorTagRule = new Azure.Datadog.MonitorTagRule("exampleMonitorTagRule", new()
    ///     {
    ///         DatadogMonitorId = exampleMonitor.Id,
    ///         Logs = new[]
    ///         {
    ///             new Azure.Datadog.Inputs.MonitorTagRuleLogArgs
    ///             {
    ///                 SubscriptionLogEnabled = true,
    ///             },
    ///         },
    ///         Metrics = new[]
    ///         {
    ///             new Azure.Datadog.Inputs.MonitorTagRuleMetricArgs
    ///             {
    ///                 Filters = new[]
    ///                 {
    ///                     new Azure.Datadog.Inputs.MonitorTagRuleMetricFilterArgs
    ///                     {
    ///                         Name = "Test",
    ///                         Value = "Logs",
    ///                         Action = "Include",
    ///                     },
    ///                 },
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Tag Rules on the Datadog Monitor can be imported using the `tag rule resource id`, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import azure:datadog/monitorTagRule:MonitorTagRule example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Datadog/monitors/monitor1/tagRules/default
    /// ```
    /// </summary>
    [AzureResourceType("azure:datadog/monitorTagRule:MonitorTagRule")]
    public partial class MonitorTagRule : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The Datadog Monitor Id which should be used for this Datadog Monitor Tag Rule. Changing this forces a new Datadog Monitor Tag Rule to be created.
        /// </summary>
        [Output("datadogMonitorId")]
        public Output<string> DatadogMonitorId { get; private set; } = null!;

        /// <summary>
        /// A `log` block as defined below.
        /// </summary>
        [Output("logs")]
        public Output<ImmutableArray<Outputs.MonitorTagRuleLog>> Logs { get; private set; } = null!;

        /// <summary>
        /// A `metric` block as defined below.
        /// </summary>
        [Output("metrics")]
        public Output<ImmutableArray<Outputs.MonitorTagRuleMetric>> Metrics { get; private set; } = null!;

        /// <summary>
        /// The name of the Tag Rules configuration. The allowed value is `default`. Defaults to `default`.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;


        /// <summary>
        /// Create a MonitorTagRule resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public MonitorTagRule(string name, MonitorTagRuleArgs args, CustomResourceOptions? options = null)
            : base("azure:datadog/monitorTagRule:MonitorTagRule", name, args ?? new MonitorTagRuleArgs(), MakeResourceOptions(options, ""))
        {
        }

        private MonitorTagRule(string name, Input<string> id, MonitorTagRuleState? state = null, CustomResourceOptions? options = null)
            : base("azure:datadog/monitorTagRule:MonitorTagRule", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing MonitorTagRule resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static MonitorTagRule Get(string name, Input<string> id, MonitorTagRuleState? state = null, CustomResourceOptions? options = null)
        {
            return new MonitorTagRule(name, id, state, options);
        }
    }

    public sealed class MonitorTagRuleArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The Datadog Monitor Id which should be used for this Datadog Monitor Tag Rule. Changing this forces a new Datadog Monitor Tag Rule to be created.
        /// </summary>
        [Input("datadogMonitorId", required: true)]
        public Input<string> DatadogMonitorId { get; set; } = null!;

        [Input("logs")]
        private InputList<Inputs.MonitorTagRuleLogArgs>? _logs;

        /// <summary>
        /// A `log` block as defined below.
        /// </summary>
        public InputList<Inputs.MonitorTagRuleLogArgs> Logs
        {
            get => _logs ?? (_logs = new InputList<Inputs.MonitorTagRuleLogArgs>());
            set => _logs = value;
        }

        [Input("metrics")]
        private InputList<Inputs.MonitorTagRuleMetricArgs>? _metrics;

        /// <summary>
        /// A `metric` block as defined below.
        /// </summary>
        public InputList<Inputs.MonitorTagRuleMetricArgs> Metrics
        {
            get => _metrics ?? (_metrics = new InputList<Inputs.MonitorTagRuleMetricArgs>());
            set => _metrics = value;
        }

        /// <summary>
        /// The name of the Tag Rules configuration. The allowed value is `default`. Defaults to `default`.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        public MonitorTagRuleArgs()
        {
        }
        public static new MonitorTagRuleArgs Empty => new MonitorTagRuleArgs();
    }

    public sealed class MonitorTagRuleState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The Datadog Monitor Id which should be used for this Datadog Monitor Tag Rule. Changing this forces a new Datadog Monitor Tag Rule to be created.
        /// </summary>
        [Input("datadogMonitorId")]
        public Input<string>? DatadogMonitorId { get; set; }

        [Input("logs")]
        private InputList<Inputs.MonitorTagRuleLogGetArgs>? _logs;

        /// <summary>
        /// A `log` block as defined below.
        /// </summary>
        public InputList<Inputs.MonitorTagRuleLogGetArgs> Logs
        {
            get => _logs ?? (_logs = new InputList<Inputs.MonitorTagRuleLogGetArgs>());
            set => _logs = value;
        }

        [Input("metrics")]
        private InputList<Inputs.MonitorTagRuleMetricGetArgs>? _metrics;

        /// <summary>
        /// A `metric` block as defined below.
        /// </summary>
        public InputList<Inputs.MonitorTagRuleMetricGetArgs> Metrics
        {
            get => _metrics ?? (_metrics = new InputList<Inputs.MonitorTagRuleMetricGetArgs>());
            set => _metrics = value;
        }

        /// <summary>
        /// The name of the Tag Rules configuration. The allowed value is `default`. Defaults to `default`.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        public MonitorTagRuleState()
        {
        }
        public static new MonitorTagRuleState Empty => new MonitorTagRuleState();
    }
}
