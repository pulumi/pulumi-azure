// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Datadog.Inputs
{

    public sealed class MonitorTagRuleLogArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Whether AAD logs should be sent for the Monitor resource?
        /// </summary>
        [Input("aadLogEnabled")]
        public Input<bool>? AadLogEnabled { get; set; }

        [Input("filters")]
        private InputList<Inputs.MonitorTagRuleLogFilterArgs>? _filters;

        /// <summary>
        /// A `filter` block as defined below.
        /// 
        /// &gt; **NOTE:** List of filtering tags to be used for capturing logs. This only takes effect if `resource_log_enabled` flag is enabled. If empty, all resources will be captured. If only Exclude action is specified, the rules will apply to the list of all available resources. If Include actions are specified, the rules will only include resources with the associated tags.
        /// </summary>
        public InputList<Inputs.MonitorTagRuleLogFilterArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.MonitorTagRuleLogFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// Whether Azure resource logs should be sent for the Monitor resource?
        /// </summary>
        [Input("resourceLogEnabled")]
        public Input<bool>? ResourceLogEnabled { get; set; }

        /// <summary>
        /// Whether Azure subscription logs should be sent for the Monitor resource?
        /// </summary>
        [Input("subscriptionLogEnabled")]
        public Input<bool>? SubscriptionLogEnabled { get; set; }

        public MonitorTagRuleLogArgs()
        {
        }
        public static new MonitorTagRuleLogArgs Empty => new MonitorTagRuleLogArgs();
    }
}
