// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Waf.Inputs
{

    public sealed class PolicyCustomRuleGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Type of action. Possible values are `Allow`, `Block` and `Log`.
        /// </summary>
        [Input("action", required: true)]
        public Input<string> Action { get; set; } = null!;

        /// <summary>
        /// Describes if the policy is in enabled state or disabled state. Defaults to `true`.
        /// </summary>
        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        /// <summary>
        /// Specifies what grouping the rate limit will count requests by. Possible values are `GeoLocation`, `ClientAddr` and `None`.
        /// </summary>
        [Input("groupRateLimitBy")]
        public Input<string>? GroupRateLimitBy { get; set; }

        [Input("matchConditions", required: true)]
        private InputList<Inputs.PolicyCustomRuleMatchConditionGetArgs>? _matchConditions;

        /// <summary>
        /// One or more `match_conditions` blocks as defined below.
        /// </summary>
        public InputList<Inputs.PolicyCustomRuleMatchConditionGetArgs> MatchConditions
        {
            get => _matchConditions ?? (_matchConditions = new InputList<Inputs.PolicyCustomRuleMatchConditionGetArgs>());
            set => _matchConditions = value;
        }

        /// <summary>
        /// Gets name of the resource that is unique within a policy. This name can be used to access the resource.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Describes priority of the rule. Rules with a lower value will be evaluated before rules with a higher value.
        /// </summary>
        [Input("priority", required: true)]
        public Input<int> Priority { get; set; } = null!;

        /// <summary>
        /// Specifies the duration at which the rate limit policy will be applied. Should be used with `RateLimitRule` rule type. Possible values are `FiveMins` and `OneMin`.
        /// </summary>
        [Input("rateLimitDuration")]
        public Input<string>? RateLimitDuration { get; set; }

        /// <summary>
        /// Specifies the threshold value for the rate limit policy. Must be greater than or equal to 1 if provided.
        /// </summary>
        [Input("rateLimitThreshold")]
        public Input<int>? RateLimitThreshold { get; set; }

        /// <summary>
        /// Describes the type of rule. Possible values are `MatchRule`, `RateLimitRule` and `Invalid`.
        /// </summary>
        [Input("ruleType", required: true)]
        public Input<string> RuleType { get; set; } = null!;

        public PolicyCustomRuleGetArgs()
        {
        }
        public static new PolicyCustomRuleGetArgs Empty => new PolicyCustomRuleGetArgs();
    }
}
