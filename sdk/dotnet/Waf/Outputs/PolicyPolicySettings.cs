// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Waf.Outputs
{

    [OutputType]
    public sealed class PolicyPolicySettings
    {
        /// <summary>
        /// Describes if the policy is in enabled state or disabled state. Defaults to `True`.
        /// </summary>
        public readonly bool? Enabled;
        /// <summary>
        /// Whether the firewall should block a request with upload size greater then `FileUploadLimitInMb`.
        /// </summary>
        public readonly bool? FileUploadEnforcement;
        /// <summary>
        /// The File Upload Limit in MB. Accepted values are in the range `1` to `4000`. Defaults to `100`.
        /// </summary>
        public readonly int? FileUploadLimitInMb;
        /// <summary>
        /// Specifies the JavaScript challenge cookie validity lifetime in minutes. The user is challenged after the lifetime expires. Accepted values are in the range `5` to `1440`. Defaults to `30`.
        /// </summary>
        public readonly int? JsChallengeCookieExpirationInMinutes;
        /// <summary>
        /// One `LogScrubbing` block as defined below.
        /// </summary>
        public readonly Outputs.PolicyPolicySettingsLogScrubbing? LogScrubbing;
        /// <summary>
        /// The Maximum Request Body Size in KB. Accepted values are in the range `8` to `2000`. Defaults to `128`.
        /// </summary>
        public readonly int? MaxRequestBodySizeInKb;
        /// <summary>
        /// Describes if it is in detection mode or prevention mode at the policy level. Valid values are `Detection` and `Prevention`. Defaults to `Prevention`.
        /// </summary>
        public readonly string? Mode;
        /// <summary>
        /// Is Request Body Inspection enabled? Defaults to `True`.
        /// </summary>
        public readonly bool? RequestBodyCheck;
        /// <summary>
        /// Whether the firewall should block a request with body size greater then `MaxRequestBodySizeInKb`. Defaults to `True`.
        /// </summary>
        public readonly bool? RequestBodyEnforcement;
        /// <summary>
        /// Specifies the maximum request body inspection limit in KB for the Web Application Firewall. Defaults to `128`.
        /// </summary>
        public readonly int? RequestBodyInspectLimitInKb;

        [OutputConstructor]
        private PolicyPolicySettings(
            bool? enabled,

            bool? fileUploadEnforcement,

            int? fileUploadLimitInMb,

            int? jsChallengeCookieExpirationInMinutes,

            Outputs.PolicyPolicySettingsLogScrubbing? logScrubbing,

            int? maxRequestBodySizeInKb,

            string? mode,

            bool? requestBodyCheck,

            bool? requestBodyEnforcement,

            int? requestBodyInspectLimitInKb)
        {
            Enabled = enabled;
            FileUploadEnforcement = fileUploadEnforcement;
            FileUploadLimitInMb = fileUploadLimitInMb;
            JsChallengeCookieExpirationInMinutes = jsChallengeCookieExpirationInMinutes;
            LogScrubbing = logScrubbing;
            MaxRequestBodySizeInKb = maxRequestBodySizeInKb;
            Mode = mode;
            RequestBodyCheck = requestBodyCheck;
            RequestBodyEnforcement = requestBodyEnforcement;
            RequestBodyInspectLimitInKb = requestBodyInspectLimitInKb;
        }
    }
}
