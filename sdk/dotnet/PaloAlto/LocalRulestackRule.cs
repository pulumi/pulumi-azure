// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.PaloAlto
{
    /// <summary>
    /// Manages a Palo Alto Local Rulestack Rule.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Azure = Pulumi.Azure;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var exampleResourceGroup = new Azure.Core.ResourceGroup("exampleResourceGroup", new()
    ///     {
    ///         Location = "West Europe",
    ///     });
    /// 
    ///     var exampleLocalRulestack = new Azure.PaloAlto.LocalRulestack("exampleLocalRulestack", new()
    ///     {
    ///         ResourceGroupName = exampleResourceGroup.Name,
    ///         Location = exampleResourceGroup.Location,
    ///     });
    /// 
    ///     var exampleLocalRulestackRule = new Azure.PaloAlto.LocalRulestackRule("exampleLocalRulestackRule", new()
    ///     {
    ///         RulestackId = exampleLocalRulestack.Id,
    ///         Priority = 1000,
    ///         Action = "Allow",
    ///         Applications = new[]
    ///         {
    ///             "any",
    ///         },
    ///         Source = new Azure.PaloAlto.Inputs.LocalRulestackRuleSourceArgs
    ///         {
    ///             Cidrs = new[]
    ///             {
    ///                 "10.0.0.0/8",
    ///             },
    ///         },
    ///         Destination = new Azure.PaloAlto.Inputs.LocalRulestackRuleDestinationArgs
    ///         {
    ///             Cidrs = new[]
    ///             {
    ///                 "192.168.16.0/24",
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Palo Alto Local Rulestack Rules can be imported using the `resource id`, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import azure:paloalto/localRulestackRule:LocalRulestackRule example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/PaloAltoNetworks.Cloudngfw/localRulestacks/myLocalRulestack/localRules/myRule1
    /// ```
    /// </summary>
    [AzureResourceType("azure:paloalto/localRulestackRule:LocalRulestackRule")]
    public partial class LocalRulestackRule : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The action to take on the rule being triggered. Possible values are `Allow`, `DenyResetBoth`, `DenyResetServer` and `DenySilent`.
        /// </summary>
        [Output("action")]
        public Output<string> Action { get; private set; } = null!;

        /// <summary>
        /// Specifies a list of Applications.
        /// </summary>
        [Output("applications")]
        public Output<ImmutableArray<string>> Applications { get; private set; } = null!;

        /// <summary>
        /// The comment for Audit purposes.
        /// </summary>
        [Output("auditComment")]
        public Output<string?> AuditComment { get; private set; } = null!;

        /// <summary>
        /// A `category` block as defined below.
        /// </summary>
        [Output("category")]
        public Output<Outputs.LocalRulestackRuleCategory?> Category { get; private set; } = null!;

        /// <summary>
        /// The type of Decryption to perform on the rule. Possible values include `SSLInboundInspection`, `SSLOutboundInspection`, and `None`. Defaults to `None`.
        /// </summary>
        [Output("decryptionRuleType")]
        public Output<string?> DecryptionRuleType { get; private set; } = null!;

        /// <summary>
        /// The description for the rule.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// One or more `destination` blocks as defined below.
        /// </summary>
        [Output("destination")]
        public Output<Outputs.LocalRulestackRuleDestination> Destination { get; private set; } = null!;

        /// <summary>
        /// Should this Rule be enabled? Defaults to `true`.
        /// </summary>
        [Output("enabled")]
        public Output<bool?> Enabled { get; private set; } = null!;

        /// <summary>
        /// The ID of the certificate for inbound inspection. Only valid when `decryption_rule_type` is set to `SSLInboundInspection`.
        /// </summary>
        [Output("inspectionCertificateId")]
        public Output<string?> InspectionCertificateId { get; private set; } = null!;

        /// <summary>
        /// Should Logging be enabled? Defaults to `false`.
        /// </summary>
        [Output("loggingEnabled")]
        public Output<bool?> LoggingEnabled { get; private set; } = null!;

        /// <summary>
        /// The name which should be used for this Palo Alto Local Rulestack Rule.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Should the inverse of the Destination configuration be used. Defaults to `false`.
        /// </summary>
        [Output("negateDestination")]
        public Output<bool?> NegateDestination { get; private set; } = null!;

        /// <summary>
        /// Should the inverse of the Source configuration be used. Defaults to `false`.
        /// </summary>
        [Output("negateSource")]
        public Output<bool?> NegateSource { get; private set; } = null!;

        /// <summary>
        /// The Priority of this rule. Rules are executed in numerical order. Changing this forces a new Palo Alto Local Rulestack Rule to be created.
        /// 
        /// &gt; **NOTE:** This is the primary identifier of a rule, as such it is not possible to change the Priority of a rule once created.
        /// </summary>
        [Output("priority")]
        public Output<int> Priority { get; private set; } = null!;

        /// <summary>
        /// The Protocol and port to use in the form `[protocol]:[port_number]` e.g. `TCP:8080` or `UDP:53`. Conflicts with `protocol_ports`. Defaults to `application-default`.
        /// </summary>
        [Output("protocol")]
        public Output<string?> Protocol { get; private set; } = null!;

        /// <summary>
        /// Specifies a list of Protocol:Port entries. E.g. `[ "TCP:80", "UDP:5431" ]`. Conflicts with `protocol`.
        /// </summary>
        [Output("protocolPorts")]
        public Output<ImmutableArray<string>> ProtocolPorts { get; private set; } = null!;

        /// <summary>
        /// The ID of the Local Rulestack in which to create this Rule. Changing this forces a new Palo Alto Local Rulestack Rule to be created.
        /// </summary>
        [Output("rulestackId")]
        public Output<string> RulestackId { get; private set; } = null!;

        /// <summary>
        /// One or more `source` blocks as defined below.
        /// </summary>
        [Output("source")]
        public Output<Outputs.LocalRulestackRuleSource> Source { get; private set; } = null!;

        /// <summary>
        /// A mapping of tags which should be assigned to the Palo Alto Local Rulestack Rule.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;


        /// <summary>
        /// Create a LocalRulestackRule resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public LocalRulestackRule(string name, LocalRulestackRuleArgs args, CustomResourceOptions? options = null)
            : base("azure:paloalto/localRulestackRule:LocalRulestackRule", name, args ?? new LocalRulestackRuleArgs(), MakeResourceOptions(options, ""))
        {
        }

        private LocalRulestackRule(string name, Input<string> id, LocalRulestackRuleState? state = null, CustomResourceOptions? options = null)
            : base("azure:paloalto/localRulestackRule:LocalRulestackRule", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing LocalRulestackRule resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static LocalRulestackRule Get(string name, Input<string> id, LocalRulestackRuleState? state = null, CustomResourceOptions? options = null)
        {
            return new LocalRulestackRule(name, id, state, options);
        }
    }

    public sealed class LocalRulestackRuleArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The action to take on the rule being triggered. Possible values are `Allow`, `DenyResetBoth`, `DenyResetServer` and `DenySilent`.
        /// </summary>
        [Input("action", required: true)]
        public Input<string> Action { get; set; } = null!;

        [Input("applications", required: true)]
        private InputList<string>? _applications;

        /// <summary>
        /// Specifies a list of Applications.
        /// </summary>
        public InputList<string> Applications
        {
            get => _applications ?? (_applications = new InputList<string>());
            set => _applications = value;
        }

        /// <summary>
        /// The comment for Audit purposes.
        /// </summary>
        [Input("auditComment")]
        public Input<string>? AuditComment { get; set; }

        /// <summary>
        /// A `category` block as defined below.
        /// </summary>
        [Input("category")]
        public Input<Inputs.LocalRulestackRuleCategoryArgs>? Category { get; set; }

        /// <summary>
        /// The type of Decryption to perform on the rule. Possible values include `SSLInboundInspection`, `SSLOutboundInspection`, and `None`. Defaults to `None`.
        /// </summary>
        [Input("decryptionRuleType")]
        public Input<string>? DecryptionRuleType { get; set; }

        /// <summary>
        /// The description for the rule.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// One or more `destination` blocks as defined below.
        /// </summary>
        [Input("destination", required: true)]
        public Input<Inputs.LocalRulestackRuleDestinationArgs> Destination { get; set; } = null!;

        /// <summary>
        /// Should this Rule be enabled? Defaults to `true`.
        /// </summary>
        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        /// <summary>
        /// The ID of the certificate for inbound inspection. Only valid when `decryption_rule_type` is set to `SSLInboundInspection`.
        /// </summary>
        [Input("inspectionCertificateId")]
        public Input<string>? InspectionCertificateId { get; set; }

        /// <summary>
        /// Should Logging be enabled? Defaults to `false`.
        /// </summary>
        [Input("loggingEnabled")]
        public Input<bool>? LoggingEnabled { get; set; }

        /// <summary>
        /// The name which should be used for this Palo Alto Local Rulestack Rule.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Should the inverse of the Destination configuration be used. Defaults to `false`.
        /// </summary>
        [Input("negateDestination")]
        public Input<bool>? NegateDestination { get; set; }

        /// <summary>
        /// Should the inverse of the Source configuration be used. Defaults to `false`.
        /// </summary>
        [Input("negateSource")]
        public Input<bool>? NegateSource { get; set; }

        /// <summary>
        /// The Priority of this rule. Rules are executed in numerical order. Changing this forces a new Palo Alto Local Rulestack Rule to be created.
        /// 
        /// &gt; **NOTE:** This is the primary identifier of a rule, as such it is not possible to change the Priority of a rule once created.
        /// </summary>
        [Input("priority", required: true)]
        public Input<int> Priority { get; set; } = null!;

        /// <summary>
        /// The Protocol and port to use in the form `[protocol]:[port_number]` e.g. `TCP:8080` or `UDP:53`. Conflicts with `protocol_ports`. Defaults to `application-default`.
        /// </summary>
        [Input("protocol")]
        public Input<string>? Protocol { get; set; }

        [Input("protocolPorts")]
        private InputList<string>? _protocolPorts;

        /// <summary>
        /// Specifies a list of Protocol:Port entries. E.g. `[ "TCP:80", "UDP:5431" ]`. Conflicts with `protocol`.
        /// </summary>
        public InputList<string> ProtocolPorts
        {
            get => _protocolPorts ?? (_protocolPorts = new InputList<string>());
            set => _protocolPorts = value;
        }

        /// <summary>
        /// The ID of the Local Rulestack in which to create this Rule. Changing this forces a new Palo Alto Local Rulestack Rule to be created.
        /// </summary>
        [Input("rulestackId", required: true)]
        public Input<string> RulestackId { get; set; } = null!;

        /// <summary>
        /// One or more `source` blocks as defined below.
        /// </summary>
        [Input("source", required: true)]
        public Input<Inputs.LocalRulestackRuleSourceArgs> Source { get; set; } = null!;

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// A mapping of tags which should be assigned to the Palo Alto Local Rulestack Rule.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public LocalRulestackRuleArgs()
        {
        }
        public static new LocalRulestackRuleArgs Empty => new LocalRulestackRuleArgs();
    }

    public sealed class LocalRulestackRuleState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The action to take on the rule being triggered. Possible values are `Allow`, `DenyResetBoth`, `DenyResetServer` and `DenySilent`.
        /// </summary>
        [Input("action")]
        public Input<string>? Action { get; set; }

        [Input("applications")]
        private InputList<string>? _applications;

        /// <summary>
        /// Specifies a list of Applications.
        /// </summary>
        public InputList<string> Applications
        {
            get => _applications ?? (_applications = new InputList<string>());
            set => _applications = value;
        }

        /// <summary>
        /// The comment for Audit purposes.
        /// </summary>
        [Input("auditComment")]
        public Input<string>? AuditComment { get; set; }

        /// <summary>
        /// A `category` block as defined below.
        /// </summary>
        [Input("category")]
        public Input<Inputs.LocalRulestackRuleCategoryGetArgs>? Category { get; set; }

        /// <summary>
        /// The type of Decryption to perform on the rule. Possible values include `SSLInboundInspection`, `SSLOutboundInspection`, and `None`. Defaults to `None`.
        /// </summary>
        [Input("decryptionRuleType")]
        public Input<string>? DecryptionRuleType { get; set; }

        /// <summary>
        /// The description for the rule.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// One or more `destination` blocks as defined below.
        /// </summary>
        [Input("destination")]
        public Input<Inputs.LocalRulestackRuleDestinationGetArgs>? Destination { get; set; }

        /// <summary>
        /// Should this Rule be enabled? Defaults to `true`.
        /// </summary>
        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        /// <summary>
        /// The ID of the certificate for inbound inspection. Only valid when `decryption_rule_type` is set to `SSLInboundInspection`.
        /// </summary>
        [Input("inspectionCertificateId")]
        public Input<string>? InspectionCertificateId { get; set; }

        /// <summary>
        /// Should Logging be enabled? Defaults to `false`.
        /// </summary>
        [Input("loggingEnabled")]
        public Input<bool>? LoggingEnabled { get; set; }

        /// <summary>
        /// The name which should be used for this Palo Alto Local Rulestack Rule.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Should the inverse of the Destination configuration be used. Defaults to `false`.
        /// </summary>
        [Input("negateDestination")]
        public Input<bool>? NegateDestination { get; set; }

        /// <summary>
        /// Should the inverse of the Source configuration be used. Defaults to `false`.
        /// </summary>
        [Input("negateSource")]
        public Input<bool>? NegateSource { get; set; }

        /// <summary>
        /// The Priority of this rule. Rules are executed in numerical order. Changing this forces a new Palo Alto Local Rulestack Rule to be created.
        /// 
        /// &gt; **NOTE:** This is the primary identifier of a rule, as such it is not possible to change the Priority of a rule once created.
        /// </summary>
        [Input("priority")]
        public Input<int>? Priority { get; set; }

        /// <summary>
        /// The Protocol and port to use in the form `[protocol]:[port_number]` e.g. `TCP:8080` or `UDP:53`. Conflicts with `protocol_ports`. Defaults to `application-default`.
        /// </summary>
        [Input("protocol")]
        public Input<string>? Protocol { get; set; }

        [Input("protocolPorts")]
        private InputList<string>? _protocolPorts;

        /// <summary>
        /// Specifies a list of Protocol:Port entries. E.g. `[ "TCP:80", "UDP:5431" ]`. Conflicts with `protocol`.
        /// </summary>
        public InputList<string> ProtocolPorts
        {
            get => _protocolPorts ?? (_protocolPorts = new InputList<string>());
            set => _protocolPorts = value;
        }

        /// <summary>
        /// The ID of the Local Rulestack in which to create this Rule. Changing this forces a new Palo Alto Local Rulestack Rule to be created.
        /// </summary>
        [Input("rulestackId")]
        public Input<string>? RulestackId { get; set; }

        /// <summary>
        /// One or more `source` blocks as defined below.
        /// </summary>
        [Input("source")]
        public Input<Inputs.LocalRulestackRuleSourceGetArgs>? Source { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// A mapping of tags which should be assigned to the Palo Alto Local Rulestack Rule.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public LocalRulestackRuleState()
        {
        }
        public static new LocalRulestackRuleState Empty => new LocalRulestackRuleState();
    }
}
