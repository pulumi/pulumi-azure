// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.DesktopVirtualization
{
    /// <summary>
    /// Manages a Virtual Desktop Scaling Plan Host Pool Association.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Azure = Pulumi.Azure;
    /// using AzureAD = Pulumi.AzureAD;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var exampleResourceGroup = new Azure.Core.ResourceGroup("example", new()
    ///     {
    ///         Name = "rg-example-virtualdesktop",
    ///         Location = "West Europe",
    ///     });
    /// 
    ///     var example = AzureAD.GetServicePrincipal.Invoke(new()
    ///     {
    ///         DisplayName = "Windows Virtual Desktop",
    ///     });
    /// 
    ///     var exampleAssignment = new Azure.Authorization.Assignment("example", new()
    ///     {
    ///         Scope = exampleResourceGroup.Id,
    ///         RoleDefinitionName = "Desktop Virtualization Power On Off Contributor",
    ///         PrincipalId = example.Apply(getServicePrincipalResult =&gt; getServicePrincipalResult.ObjectId),
    ///     });
    /// 
    ///     var exampleHostPool = new Azure.DesktopVirtualization.HostPool("example", new()
    ///     {
    ///         Name = "example-hostpool",
    ///         Location = exampleResourceGroup.Location,
    ///         ResourceGroupName = exampleResourceGroup.Name,
    ///         Type = "Pooled",
    ///         ValidateEnvironment = true,
    ///         LoadBalancerType = "BreadthFirst",
    ///     });
    /// 
    ///     var exampleScalingPlan = new Azure.DesktopVirtualization.ScalingPlan("example", new()
    ///     {
    ///         Name = "example-scaling-plan",
    ///         Location = exampleResourceGroup.Location,
    ///         ResourceGroupName = exampleResourceGroup.Name,
    ///         FriendlyName = "Scaling Plan Test",
    ///         Description = "Test Scaling Plan",
    ///         TimeZone = "GMT Standard Time",
    ///         Schedules = new[]
    ///         {
    ///             new Azure.DesktopVirtualization.Inputs.ScalingPlanScheduleArgs
    ///             {
    ///                 Name = "Weekdays",
    ///                 DaysOfWeeks = new[]
    ///                 {
    ///                     "Monday",
    ///                     "Tuesday",
    ///                     "Wednesday",
    ///                     "Thursday",
    ///                     "Friday",
    ///                 },
    ///                 RampUpStartTime = "06:00",
    ///                 RampUpLoadBalancingAlgorithm = "BreadthFirst",
    ///                 RampUpMinimumHostsPercent = 20,
    ///                 RampUpCapacityThresholdPercent = 10,
    ///                 PeakStartTime = "09:00",
    ///                 PeakLoadBalancingAlgorithm = "BreadthFirst",
    ///                 RampDownStartTime = "18:00",
    ///                 RampDownLoadBalancingAlgorithm = "BreadthFirst",
    ///                 RampDownMinimumHostsPercent = 10,
    ///                 RampDownForceLogoffUsers = false,
    ///                 RampDownWaitTimeMinutes = 45,
    ///                 RampDownNotificationMessage = "Please log of in the next 45 minutes...",
    ///                 RampDownCapacityThresholdPercent = 5,
    ///                 RampDownStopHostsWhen = "ZeroSessions",
    ///                 OffPeakStartTime = "22:00",
    ///                 OffPeakLoadBalancingAlgorithm = "BreadthFirst",
    ///             },
    ///         },
    ///     }, new CustomResourceOptions
    ///     {
    ///         DependsOn =
    ///         {
    ///             exampleAssignment,
    ///         },
    ///     });
    /// 
    ///     var exampleScalingPlanHostPoolAssociation = new Azure.DesktopVirtualization.ScalingPlanHostPoolAssociation("example", new()
    ///     {
    ///         HostPoolId = exampleHostPool.Id,
    ///         ScalingPlanId = exampleScalingPlan.Id,
    ///         Enabled = true,
    ///     }, new CustomResourceOptions
    ///     {
    ///         DependsOn =
    ///         {
    ///             exampleAssignment,
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## API Providers
    /// 
    /// &lt;!-- This section is generated, changes will be overwritten --&gt;
    /// This resource uses the following Azure API Providers:
    /// 
    /// * `Microsoft.DesktopVirtualization` - 2024-04-03
    /// 
    /// ## Import
    /// 
    /// Associations between Virtual Desktop Scaling Plans and Virtual Desktop Host Pools can be imported using the `resource id`, e.g.
    /// 
    /// ```sh
    /// $ pulumi import azure:desktopvirtualization/scalingPlanHostPoolAssociation:ScalingPlanHostPoolAssociation example "/subscriptions/12345678-1234-9876-4563-123456789012/resourceGroups/resGroup1/providers/Microsoft.DesktopVirtualization/scalingPlans/plan1|/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myGroup1/providers/Microsoft.DesktopVirtualization/hostPools/myhostpool"
    /// ```
    /// </summary>
    [AzureResourceType("azure:desktopvirtualization/scalingPlanHostPoolAssociation:ScalingPlanHostPoolAssociation")]
    public partial class ScalingPlanHostPoolAssociation : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Should the Scaling Plan be enabled on this Host Pool.
        /// </summary>
        [Output("enabled")]
        public Output<bool> Enabled { get; private set; } = null!;

        /// <summary>
        /// The resource ID for the Virtual Desktop Host Pool. Changing this forces a new resource to be created.
        /// </summary>
        [Output("hostPoolId")]
        public Output<string> HostPoolId { get; private set; } = null!;

        /// <summary>
        /// The resource ID for the Virtual Desktop Scaling Plan. Changing this forces a new resource to be created.
        /// </summary>
        [Output("scalingPlanId")]
        public Output<string> ScalingPlanId { get; private set; } = null!;


        /// <summary>
        /// Create a ScalingPlanHostPoolAssociation resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ScalingPlanHostPoolAssociation(string name, ScalingPlanHostPoolAssociationArgs args, CustomResourceOptions? options = null)
            : base("azure:desktopvirtualization/scalingPlanHostPoolAssociation:ScalingPlanHostPoolAssociation", name, args ?? new ScalingPlanHostPoolAssociationArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ScalingPlanHostPoolAssociation(string name, Input<string> id, ScalingPlanHostPoolAssociationState? state = null, CustomResourceOptions? options = null)
            : base("azure:desktopvirtualization/scalingPlanHostPoolAssociation:ScalingPlanHostPoolAssociation", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ScalingPlanHostPoolAssociation resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ScalingPlanHostPoolAssociation Get(string name, Input<string> id, ScalingPlanHostPoolAssociationState? state = null, CustomResourceOptions? options = null)
        {
            return new ScalingPlanHostPoolAssociation(name, id, state, options);
        }
    }

    public sealed class ScalingPlanHostPoolAssociationArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Should the Scaling Plan be enabled on this Host Pool.
        /// </summary>
        [Input("enabled", required: true)]
        public Input<bool> Enabled { get; set; } = null!;

        /// <summary>
        /// The resource ID for the Virtual Desktop Host Pool. Changing this forces a new resource to be created.
        /// </summary>
        [Input("hostPoolId", required: true)]
        public Input<string> HostPoolId { get; set; } = null!;

        /// <summary>
        /// The resource ID for the Virtual Desktop Scaling Plan. Changing this forces a new resource to be created.
        /// </summary>
        [Input("scalingPlanId", required: true)]
        public Input<string> ScalingPlanId { get; set; } = null!;

        public ScalingPlanHostPoolAssociationArgs()
        {
        }
        public static new ScalingPlanHostPoolAssociationArgs Empty => new ScalingPlanHostPoolAssociationArgs();
    }

    public sealed class ScalingPlanHostPoolAssociationState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Should the Scaling Plan be enabled on this Host Pool.
        /// </summary>
        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        /// <summary>
        /// The resource ID for the Virtual Desktop Host Pool. Changing this forces a new resource to be created.
        /// </summary>
        [Input("hostPoolId")]
        public Input<string>? HostPoolId { get; set; }

        /// <summary>
        /// The resource ID for the Virtual Desktop Scaling Plan. Changing this forces a new resource to be created.
        /// </summary>
        [Input("scalingPlanId")]
        public Input<string>? ScalingPlanId { get; set; }

        public ScalingPlanHostPoolAssociationState()
        {
        }
        public static new ScalingPlanHostPoolAssociationState Empty => new ScalingPlanHostPoolAssociationState();
    }
}
