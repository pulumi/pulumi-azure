// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.DesktopVirtualization
{
    /// <summary>
    /// Manages a Virtual Desktop Workspace Application Group Association.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using Azure = Pulumi.Azure;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var example = new Azure.Core.ResourceGroup("example", new Azure.Core.ResourceGroupArgs
    ///         {
    ///             Location = "eastus",
    ///         });
    ///         var pooledbreadthfirst = new Azure.DesktopVirtualization.HostPool("pooledbreadthfirst", new Azure.DesktopVirtualization.HostPoolArgs
    ///         {
    ///             Location = example.Location,
    ///             ResourceGroupName = example.Name,
    ///             Type = "Pooled",
    ///             LoadBalancerType = "BreadthFirst",
    ///         });
    ///         var remoteapp = new Azure.DesktopVirtualization.ApplicationGroup("remoteapp", new Azure.DesktopVirtualization.ApplicationGroupArgs
    ///         {
    ///             Location = example.Location,
    ///             ResourceGroupName = example.Name,
    ///             Type = "RemoteApp",
    ///             HostPoolId = pooledbreadthfirst.Id,
    ///         });
    ///         var workspace = new Azure.DesktopVirtualization.Workspace("workspace", new Azure.DesktopVirtualization.WorkspaceArgs
    ///         {
    ///             Location = example.Location,
    ///             ResourceGroupName = example.Name,
    ///         });
    ///         var workspaceremoteapp = new Azure.DesktopVirtualization.WorkspaceApplicationGroupAssociation("workspaceremoteapp", new Azure.DesktopVirtualization.WorkspaceApplicationGroupAssociationArgs
    ///         {
    ///             WorkspaceId = workspace.Id,
    ///             ApplicationGroupId = remoteapp.Id,
    ///         });
    ///     }
    /// 
    /// }
    /// ```
    /// 
    /// ## Import
    /// 
    /// Associations between Virtual Desktop Workspaces and Virtual Desktop Application Groups can be imported using the `resource id`, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import azure:desktopvirtualization/workspaceApplicationGroupAssociation:WorkspaceApplicationGroupAssociation association1 "/subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/myGroup1/providers/Microsoft.DesktopVirtualization/workspaces/myworkspace|/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myGroup1/providers/Microsoft.DesktopVirtualization/applicationGroups/myapplicationgroup"
    /// ```
    /// </summary>
    public partial class WorkspaceApplicationGroupAssociation : Pulumi.CustomResource
    {
        /// <summary>
        /// The resource ID for the Virtual Desktop Application Group.
        /// </summary>
        [Output("applicationGroupId")]
        public Output<string> ApplicationGroupId { get; private set; } = null!;

        /// <summary>
        /// The resource ID for the Virtual Desktop Workspace.
        /// </summary>
        [Output("workspaceId")]
        public Output<string> WorkspaceId { get; private set; } = null!;


        /// <summary>
        /// Create a WorkspaceApplicationGroupAssociation resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public WorkspaceApplicationGroupAssociation(string name, WorkspaceApplicationGroupAssociationArgs args, CustomResourceOptions? options = null)
            : base("azure:desktopvirtualization/workspaceApplicationGroupAssociation:WorkspaceApplicationGroupAssociation", name, args ?? new WorkspaceApplicationGroupAssociationArgs(), MakeResourceOptions(options, ""))
        {
        }

        private WorkspaceApplicationGroupAssociation(string name, Input<string> id, WorkspaceApplicationGroupAssociationState? state = null, CustomResourceOptions? options = null)
            : base("azure:desktopvirtualization/workspaceApplicationGroupAssociation:WorkspaceApplicationGroupAssociation", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing WorkspaceApplicationGroupAssociation resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static WorkspaceApplicationGroupAssociation Get(string name, Input<string> id, WorkspaceApplicationGroupAssociationState? state = null, CustomResourceOptions? options = null)
        {
            return new WorkspaceApplicationGroupAssociation(name, id, state, options);
        }
    }

    public sealed class WorkspaceApplicationGroupAssociationArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The resource ID for the Virtual Desktop Application Group.
        /// </summary>
        [Input("applicationGroupId", required: true)]
        public Input<string> ApplicationGroupId { get; set; } = null!;

        /// <summary>
        /// The resource ID for the Virtual Desktop Workspace.
        /// </summary>
        [Input("workspaceId", required: true)]
        public Input<string> WorkspaceId { get; set; } = null!;

        public WorkspaceApplicationGroupAssociationArgs()
        {
        }
    }

    public sealed class WorkspaceApplicationGroupAssociationState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The resource ID for the Virtual Desktop Application Group.
        /// </summary>
        [Input("applicationGroupId")]
        public Input<string>? ApplicationGroupId { get; set; }

        /// <summary>
        /// The resource ID for the Virtual Desktop Workspace.
        /// </summary>
        [Input("workspaceId")]
        public Input<string>? WorkspaceId { get; set; }

        public WorkspaceApplicationGroupAssociationState()
        {
        }
    }
}
