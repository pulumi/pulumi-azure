// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Purview
{
    /// <summary>
    /// Manages a Purview Account.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using Azure = Pulumi.Azure;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var exampleResourceGroup = new Azure.Core.ResourceGroup("exampleResourceGroup", new Azure.Core.ResourceGroupArgs
    ///         {
    ///             Location = "West Europe",
    ///         });
    ///         var exampleAccount = new Azure.Purview.Account("exampleAccount", new Azure.Purview.AccountArgs
    ///         {
    ///             ResourceGroupName = exampleResourceGroup.Name,
    ///             Location = exampleResourceGroup.Location,
    ///             SkuName = "Standard_4",
    ///         });
    ///     }
    /// 
    /// }
    /// ```
    /// 
    /// ## Import
    /// 
    /// Purview Accounts can be imported using the `resource id`, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import azure:purview/account:Account example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Purview/accounts/account1
    /// ```
    /// </summary>
    [AzureResourceType("azure:purview/account:Account")]
    public partial class Account : Pulumi.CustomResource
    {
        /// <summary>
        /// Atlas Kafka endpoint primary connection string.
        /// </summary>
        [Output("atlasKafkaEndpointPrimaryConnectionString")]
        public Output<string> AtlasKafkaEndpointPrimaryConnectionString { get; private set; } = null!;

        /// <summary>
        /// Atlas Kafka endpoint secondary connection string.
        /// </summary>
        [Output("atlasKafkaEndpointSecondaryConnectionString")]
        public Output<string> AtlasKafkaEndpointSecondaryConnectionString { get; private set; } = null!;

        /// <summary>
        /// Catalog endpoint.
        /// </summary>
        [Output("catalogEndpoint")]
        public Output<string> CatalogEndpoint { get; private set; } = null!;

        /// <summary>
        /// Guardian endpoint.
        /// </summary>
        [Output("guardianEndpoint")]
        public Output<string> GuardianEndpoint { get; private set; } = null!;

        /// <summary>
        /// A `identity` block as defined below.
        /// </summary>
        [Output("identities")]
        public Output<ImmutableArray<Outputs.AccountIdentity>> Identities { get; private set; } = null!;

        /// <summary>
        /// The Azure Region where the Purview Account should exist. Changing this forces a new Purview Account to be created.
        /// </summary>
        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// The name which should be used for this Purview Account. Changing this forces a new Purview Account to be created.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Should the Purview Account be visible to the public network? Defaults to `true`.
        /// </summary>
        [Output("publicNetworkEnabled")]
        public Output<bool?> PublicNetworkEnabled { get; private set; } = null!;

        /// <summary>
        /// The name of the Resource Group where the Purview Account should exist. Changing this forces a new Purview Account to be created.
        /// </summary>
        [Output("resourceGroupName")]
        public Output<string> ResourceGroupName { get; private set; } = null!;

        /// <summary>
        /// Scan endpoint.
        /// </summary>
        [Output("scanEndpoint")]
        public Output<string> ScanEndpoint { get; private set; } = null!;

        /// <summary>
        /// The SKU's capacity for platform size and catalog capabilities. Accepted values are `Standard_4` and `Standard_16`.
        /// </summary>
        [Output("skuName")]
        public Output<string> SkuName { get; private set; } = null!;

        /// <summary>
        /// A mapping of tags which should be assigned to the Purview Account.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;


        /// <summary>
        /// Create a Account resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Account(string name, AccountArgs args, CustomResourceOptions? options = null)
            : base("azure:purview/account:Account", name, args ?? new AccountArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Account(string name, Input<string> id, AccountState? state = null, CustomResourceOptions? options = null)
            : base("azure:purview/account:Account", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Account resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Account Get(string name, Input<string> id, AccountState? state = null, CustomResourceOptions? options = null)
        {
            return new Account(name, id, state, options);
        }
    }

    public sealed class AccountArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The Azure Region where the Purview Account should exist. Changing this forces a new Purview Account to be created.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// The name which should be used for this Purview Account. Changing this forces a new Purview Account to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Should the Purview Account be visible to the public network? Defaults to `true`.
        /// </summary>
        [Input("publicNetworkEnabled")]
        public Input<bool>? PublicNetworkEnabled { get; set; }

        /// <summary>
        /// The name of the Resource Group where the Purview Account should exist. Changing this forces a new Purview Account to be created.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The SKU's capacity for platform size and catalog capabilities. Accepted values are `Standard_4` and `Standard_16`.
        /// </summary>
        [Input("skuName", required: true)]
        public Input<string> SkuName { get; set; } = null!;

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// A mapping of tags which should be assigned to the Purview Account.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public AccountArgs()
        {
        }
    }

    public sealed class AccountState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Atlas Kafka endpoint primary connection string.
        /// </summary>
        [Input("atlasKafkaEndpointPrimaryConnectionString")]
        public Input<string>? AtlasKafkaEndpointPrimaryConnectionString { get; set; }

        /// <summary>
        /// Atlas Kafka endpoint secondary connection string.
        /// </summary>
        [Input("atlasKafkaEndpointSecondaryConnectionString")]
        public Input<string>? AtlasKafkaEndpointSecondaryConnectionString { get; set; }

        /// <summary>
        /// Catalog endpoint.
        /// </summary>
        [Input("catalogEndpoint")]
        public Input<string>? CatalogEndpoint { get; set; }

        /// <summary>
        /// Guardian endpoint.
        /// </summary>
        [Input("guardianEndpoint")]
        public Input<string>? GuardianEndpoint { get; set; }

        [Input("identities")]
        private InputList<Inputs.AccountIdentityGetArgs>? _identities;

        /// <summary>
        /// A `identity` block as defined below.
        /// </summary>
        public InputList<Inputs.AccountIdentityGetArgs> Identities
        {
            get => _identities ?? (_identities = new InputList<Inputs.AccountIdentityGetArgs>());
            set => _identities = value;
        }

        /// <summary>
        /// The Azure Region where the Purview Account should exist. Changing this forces a new Purview Account to be created.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// The name which should be used for this Purview Account. Changing this forces a new Purview Account to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Should the Purview Account be visible to the public network? Defaults to `true`.
        /// </summary>
        [Input("publicNetworkEnabled")]
        public Input<bool>? PublicNetworkEnabled { get; set; }

        /// <summary>
        /// The name of the Resource Group where the Purview Account should exist. Changing this forces a new Purview Account to be created.
        /// </summary>
        [Input("resourceGroupName")]
        public Input<string>? ResourceGroupName { get; set; }

        /// <summary>
        /// Scan endpoint.
        /// </summary>
        [Input("scanEndpoint")]
        public Input<string>? ScanEndpoint { get; set; }

        /// <summary>
        /// The SKU's capacity for platform size and catalog capabilities. Accepted values are `Standard_4` and `Standard_16`.
        /// </summary>
        [Input("skuName")]
        public Input<string>? SkuName { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// A mapping of tags which should be assigned to the Purview Account.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public AccountState()
        {
        }
    }
}
