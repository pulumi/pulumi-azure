// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Compute
{
    /// <summary>
    /// &gt; This content is derived from https://github.com/terraform-providers/terraform-provider-azurerm/blob/master/website/docs/r/linux_virtual_machine_scale_set.html.markdown.
    /// </summary>
    public partial class LinuxVirtualMachineScaleSet : Pulumi.CustomResource
    {
        /// <summary>
        /// A `additional_capabilities` block as defined below.
        /// </summary>
        [Output("additionalCapabilities")]
        public Output<Outputs.LinuxVirtualMachineScaleSetAdditionalCapabilities?> AdditionalCapabilities { get; private set; } = null!;

        /// <summary>
        /// The Password which should be used for the local-administrator on this Virtual Machine. Changing this forces a new resource to be created.
        /// </summary>
        [Output("adminPassword")]
        public Output<string?> AdminPassword { get; private set; } = null!;

        /// <summary>
        /// One or more `admin_ssh_key` blocks as defined below.
        /// </summary>
        [Output("adminSshKeys")]
        public Output<ImmutableArray<Outputs.LinuxVirtualMachineScaleSetAdminSshKeys>> AdminSshKeys { get; private set; } = null!;

        /// <summary>
        /// The username of the local administrator on each Virtual Machine Scale Set instance. Changing this forces a new resource to be created.
        /// </summary>
        [Output("adminUsername")]
        public Output<string> AdminUsername { get; private set; } = null!;

        /// <summary>
        /// A `automatic_os_upgrade_policy` block as defined below. This is Required and can only be specified when `upgrade_mode` is set to `Automatic`.
        /// </summary>
        [Output("automaticOsUpgradePolicy")]
        public Output<Outputs.LinuxVirtualMachineScaleSetAutomaticOsUpgradePolicy?> AutomaticOsUpgradePolicy { get; private set; } = null!;

        /// <summary>
        /// A `boot_diagnostics` block as defined below.
        /// </summary>
        [Output("bootDiagnostics")]
        public Output<Outputs.LinuxVirtualMachineScaleSetBootDiagnostics?> BootDiagnostics { get; private set; } = null!;

        /// <summary>
        /// The prefix which should be used for the name of the Virtual Machines in this Scale Set. If unspecified this defaults to the value for the `name` field.
        /// </summary>
        [Output("computerNamePrefix")]
        public Output<string> ComputerNamePrefix { get; private set; } = null!;

        /// <summary>
        /// The Base64-Encoded Custom Data which should be used for this Virtual Machine Scale Set.
        /// </summary>
        [Output("customData")]
        public Output<string?> CustomData { get; private set; } = null!;

        /// <summary>
        /// One or more `data_disk` blocks as defined below.
        /// </summary>
        [Output("dataDisks")]
        public Output<ImmutableArray<Outputs.LinuxVirtualMachineScaleSetDataDisks>> DataDisks { get; private set; } = null!;

        /// <summary>
        /// Should Password Authentication be disabled on this Virtual Machine Scale Set? Defaults to `true`.
        /// </summary>
        [Output("disablePasswordAuthentication")]
        public Output<bool?> DisablePasswordAuthentication { get; private set; } = null!;

        /// <summary>
        /// Should Virtual Machine Extensions be run on Overprovisioned Virtual Machines in the Scale Set? Defaults to `false`.
        /// </summary>
        [Output("doNotRunExtensionsOnOverprovisionedMachines")]
        public Output<bool?> DoNotRunExtensionsOnOverprovisionedMachines { get; private set; } = null!;

        /// <summary>
        /// The Policy which should be used Virtual Machines are Evicted from the Scale Set. Changing this forces a new resource to be created.
        /// </summary>
        [Output("evictionPolicy")]
        public Output<string?> EvictionPolicy { get; private set; } = null!;

        /// <summary>
        /// The ID of a Load Balancer Probe which should be used to determine the health of an instance. Changing this forces a new resource to be created. This is Required and can only be specified when `upgrade_mode` is set to `Automatic` or `Rolling`.
        /// </summary>
        [Output("healthProbeId")]
        public Output<string?> HealthProbeId { get; private set; } = null!;

        /// <summary>
        /// A `identity` block as defined below.
        /// </summary>
        [Output("identity")]
        public Output<Outputs.LinuxVirtualMachineScaleSetIdentity?> Identity { get; private set; } = null!;

        /// <summary>
        /// The number of Virtual Machines in the Scale Set.
        /// </summary>
        [Output("instances")]
        public Output<int> Instances { get; private set; } = null!;

        /// <summary>
        /// The Azure location where the Linux Virtual Machine Scale Set should exist. Changing this forces a new resource to be created.
        /// </summary>
        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// The maximum price you're willing to pay for each Virtual Machine in this Scale Set, in US Dollars; which must be greater than the current spot price. If this bid price falls below the current spot price the Virtual Machines in the Scale Set will be evicted using the `eviction_policy`. Defaults to `-1`, which means that each Virtual Machine in this Scale Set should not be evicted for price reasons.
        /// </summary>
        [Output("maxBidPrice")]
        public Output<double?> MaxBidPrice { get; private set; } = null!;

        /// <summary>
        /// The name of the Linux Virtual Machine Scale Set. Changing this forces a new resource to be created.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// One or more `network_interface` blocks as defined below.
        /// </summary>
        [Output("networkInterfaces")]
        public Output<ImmutableArray<Outputs.LinuxVirtualMachineScaleSetNetworkInterfaces>> NetworkInterfaces { get; private set; } = null!;

        /// <summary>
        /// An `os_disk` block as defined below.
        /// </summary>
        [Output("osDisk")]
        public Output<Outputs.LinuxVirtualMachineScaleSetOsDisk> OsDisk { get; private set; } = null!;

        /// <summary>
        /// Should Azure over-provision Virtual Machines in this Scale Set? This means that multiple Virtual Machines will be provisioned and Azure will keep the instances which become available first - which improves provisioning success rates and improves deployment time. You're not billed for these over-provisioned VM's and they don't count towards the Subscription Quota. Defaults to `false`.
        /// </summary>
        [Output("overprovision")]
        public Output<bool?> Overprovision { get; private set; } = null!;

        [Output("plan")]
        public Output<Outputs.LinuxVirtualMachineScaleSetPlan?> Plan { get; private set; } = null!;

        /// <summary>
        /// The Priority of this Virtual Machine Scale Set. Possible values are `Regular` and `Spot`. Defaults to `Regular`. Changing this value forces a new resource.
        /// </summary>
        [Output("priority")]
        public Output<string?> Priority { get; private set; } = null!;

        /// <summary>
        /// Should the Azure VM Agent be provisioned on each Virtual Machine in the Scale Set? Defaults to `true`. Changing this value forces a new resource to be created.
        /// </summary>
        [Output("provisionVmAgent")]
        public Output<bool?> ProvisionVmAgent { get; private set; } = null!;

        /// <summary>
        /// The ID of the Proximity Placement Group in which the Virtual Machine Scale Set should be assigned to. Changing this forces a new resource to be created.
        /// </summary>
        [Output("proximityPlacementGroupId")]
        public Output<string?> ProximityPlacementGroupId { get; private set; } = null!;

        /// <summary>
        /// The name of the Resource Group in which the Linux Virtual Machine Scale Set should be exist. Changing this forces a new resource to be created.
        /// </summary>
        [Output("resourceGroupName")]
        public Output<string> ResourceGroupName { get; private set; } = null!;

        /// <summary>
        /// A `rolling_upgrade_policy` block as defined below. This is Required and can only be specified when `upgrade_mode` is set to `Automatic` or `Rolling`.
        /// </summary>
        [Output("rollingUpgradePolicy")]
        public Output<Outputs.LinuxVirtualMachineScaleSetRollingUpgradePolicy?> RollingUpgradePolicy { get; private set; } = null!;

        /// <summary>
        /// One or more `secret` blocks as defined below.
        /// </summary>
        [Output("secrets")]
        public Output<ImmutableArray<Outputs.LinuxVirtualMachineScaleSetSecrets>> Secrets { get; private set; } = null!;

        /// <summary>
        /// Should this Virtual Machine Scale Set be limited to a Single Placement Group, which means the number of instances will be capped at 100 Virtual Machines. Defaults to `true`.
        /// </summary>
        [Output("singlePlacementGroup")]
        public Output<bool?> SinglePlacementGroup { get; private set; } = null!;

        /// <summary>
        /// The Virtual Machine SKU for the Scale Set, such as `Standard_F2`.
        /// </summary>
        [Output("sku")]
        public Output<string> Sku { get; private set; } = null!;

        /// <summary>
        /// The ID of an Image which each Virtual Machine in this Scale Set should be based on.
        /// </summary>
        [Output("sourceImageId")]
        public Output<string?> SourceImageId { get; private set; } = null!;

        /// <summary>
        /// A `source_image_reference` block as defined below.
        /// </summary>
        [Output("sourceImageReference")]
        public Output<Outputs.LinuxVirtualMachineScaleSetSourceImageReference?> SourceImageReference { get; private set; } = null!;

        /// <summary>
        /// A mapping of tags which should be assigned to this Virtual Machine Scale Set.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// The Unique ID for this Linux Virtual Machine Scale Set.
        /// </summary>
        [Output("uniqueId")]
        public Output<string> UniqueId { get; private set; } = null!;

        /// <summary>
        /// Specifies how Upgrades (e.g. changing the Image/SKU) should be performed to Virtual Machine Instances. Possible values are `Automatic`, `Manual` and `Rolling`. Defaults to `Manual`.
        /// </summary>
        [Output("upgradeMode")]
        public Output<string?> UpgradeMode { get; private set; } = null!;

        /// <summary>
        /// Should the Virtual Machines in this Scale Set be strictly evenly distributed across Availability Zones? Defaults to `false`. Changing this forces a new resource to be created.
        /// </summary>
        [Output("zoneBalance")]
        public Output<bool?> ZoneBalance { get; private set; } = null!;

        /// <summary>
        /// A list of Availability Zones in which the Virtual Machines in this Scale Set should be created in. Changing this forces a new resource to be created.
        /// </summary>
        [Output("zones")]
        public Output<ImmutableArray<string>> Zones { get; private set; } = null!;


        /// <summary>
        /// Create a LinuxVirtualMachineScaleSet resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public LinuxVirtualMachineScaleSet(string name, LinuxVirtualMachineScaleSetArgs args, CustomResourceOptions? options = null)
            : base("azure:compute/linuxVirtualMachineScaleSet:LinuxVirtualMachineScaleSet", name, args ?? ResourceArgs.Empty, MakeResourceOptions(options, ""))
        {
        }

        private LinuxVirtualMachineScaleSet(string name, Input<string> id, LinuxVirtualMachineScaleSetState? state = null, CustomResourceOptions? options = null)
            : base("azure:compute/linuxVirtualMachineScaleSet:LinuxVirtualMachineScaleSet", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing LinuxVirtualMachineScaleSet resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static LinuxVirtualMachineScaleSet Get(string name, Input<string> id, LinuxVirtualMachineScaleSetState? state = null, CustomResourceOptions? options = null)
        {
            return new LinuxVirtualMachineScaleSet(name, id, state, options);
        }
    }

    public sealed class LinuxVirtualMachineScaleSetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// A `additional_capabilities` block as defined below.
        /// </summary>
        [Input("additionalCapabilities")]
        public Input<Inputs.LinuxVirtualMachineScaleSetAdditionalCapabilitiesArgs>? AdditionalCapabilities { get; set; }

        /// <summary>
        /// The Password which should be used for the local-administrator on this Virtual Machine. Changing this forces a new resource to be created.
        /// </summary>
        [Input("adminPassword")]
        public Input<string>? AdminPassword { get; set; }

        [Input("adminSshKeys")]
        private InputList<Inputs.LinuxVirtualMachineScaleSetAdminSshKeysArgs>? _adminSshKeys;

        /// <summary>
        /// One or more `admin_ssh_key` blocks as defined below.
        /// </summary>
        public InputList<Inputs.LinuxVirtualMachineScaleSetAdminSshKeysArgs> AdminSshKeys
        {
            get => _adminSshKeys ?? (_adminSshKeys = new InputList<Inputs.LinuxVirtualMachineScaleSetAdminSshKeysArgs>());
            set => _adminSshKeys = value;
        }

        /// <summary>
        /// The username of the local administrator on each Virtual Machine Scale Set instance. Changing this forces a new resource to be created.
        /// </summary>
        [Input("adminUsername", required: true)]
        public Input<string> AdminUsername { get; set; } = null!;

        /// <summary>
        /// A `automatic_os_upgrade_policy` block as defined below. This is Required and can only be specified when `upgrade_mode` is set to `Automatic`.
        /// </summary>
        [Input("automaticOsUpgradePolicy")]
        public Input<Inputs.LinuxVirtualMachineScaleSetAutomaticOsUpgradePolicyArgs>? AutomaticOsUpgradePolicy { get; set; }

        /// <summary>
        /// A `boot_diagnostics` block as defined below.
        /// </summary>
        [Input("bootDiagnostics")]
        public Input<Inputs.LinuxVirtualMachineScaleSetBootDiagnosticsArgs>? BootDiagnostics { get; set; }

        /// <summary>
        /// The prefix which should be used for the name of the Virtual Machines in this Scale Set. If unspecified this defaults to the value for the `name` field.
        /// </summary>
        [Input("computerNamePrefix")]
        public Input<string>? ComputerNamePrefix { get; set; }

        /// <summary>
        /// The Base64-Encoded Custom Data which should be used for this Virtual Machine Scale Set.
        /// </summary>
        [Input("customData")]
        public Input<string>? CustomData { get; set; }

        [Input("dataDisks")]
        private InputList<Inputs.LinuxVirtualMachineScaleSetDataDisksArgs>? _dataDisks;

        /// <summary>
        /// One or more `data_disk` blocks as defined below.
        /// </summary>
        public InputList<Inputs.LinuxVirtualMachineScaleSetDataDisksArgs> DataDisks
        {
            get => _dataDisks ?? (_dataDisks = new InputList<Inputs.LinuxVirtualMachineScaleSetDataDisksArgs>());
            set => _dataDisks = value;
        }

        /// <summary>
        /// Should Password Authentication be disabled on this Virtual Machine Scale Set? Defaults to `true`.
        /// </summary>
        [Input("disablePasswordAuthentication")]
        public Input<bool>? DisablePasswordAuthentication { get; set; }

        /// <summary>
        /// Should Virtual Machine Extensions be run on Overprovisioned Virtual Machines in the Scale Set? Defaults to `false`.
        /// </summary>
        [Input("doNotRunExtensionsOnOverprovisionedMachines")]
        public Input<bool>? DoNotRunExtensionsOnOverprovisionedMachines { get; set; }

        /// <summary>
        /// The Policy which should be used Virtual Machines are Evicted from the Scale Set. Changing this forces a new resource to be created.
        /// </summary>
        [Input("evictionPolicy")]
        public Input<string>? EvictionPolicy { get; set; }

        /// <summary>
        /// The ID of a Load Balancer Probe which should be used to determine the health of an instance. Changing this forces a new resource to be created. This is Required and can only be specified when `upgrade_mode` is set to `Automatic` or `Rolling`.
        /// </summary>
        [Input("healthProbeId")]
        public Input<string>? HealthProbeId { get; set; }

        /// <summary>
        /// A `identity` block as defined below.
        /// </summary>
        [Input("identity")]
        public Input<Inputs.LinuxVirtualMachineScaleSetIdentityArgs>? Identity { get; set; }

        /// <summary>
        /// The number of Virtual Machines in the Scale Set.
        /// </summary>
        [Input("instances", required: true)]
        public Input<int> Instances { get; set; } = null!;

        /// <summary>
        /// The Azure location where the Linux Virtual Machine Scale Set should exist. Changing this forces a new resource to be created.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// The maximum price you're willing to pay for each Virtual Machine in this Scale Set, in US Dollars; which must be greater than the current spot price. If this bid price falls below the current spot price the Virtual Machines in the Scale Set will be evicted using the `eviction_policy`. Defaults to `-1`, which means that each Virtual Machine in this Scale Set should not be evicted for price reasons.
        /// </summary>
        [Input("maxBidPrice")]
        public Input<double>? MaxBidPrice { get; set; }

        /// <summary>
        /// The name of the Linux Virtual Machine Scale Set. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("networkInterfaces", required: true)]
        private InputList<Inputs.LinuxVirtualMachineScaleSetNetworkInterfacesArgs>? _networkInterfaces;

        /// <summary>
        /// One or more `network_interface` blocks as defined below.
        /// </summary>
        public InputList<Inputs.LinuxVirtualMachineScaleSetNetworkInterfacesArgs> NetworkInterfaces
        {
            get => _networkInterfaces ?? (_networkInterfaces = new InputList<Inputs.LinuxVirtualMachineScaleSetNetworkInterfacesArgs>());
            set => _networkInterfaces = value;
        }

        /// <summary>
        /// An `os_disk` block as defined below.
        /// </summary>
        [Input("osDisk", required: true)]
        public Input<Inputs.LinuxVirtualMachineScaleSetOsDiskArgs> OsDisk { get; set; } = null!;

        /// <summary>
        /// Should Azure over-provision Virtual Machines in this Scale Set? This means that multiple Virtual Machines will be provisioned and Azure will keep the instances which become available first - which improves provisioning success rates and improves deployment time. You're not billed for these over-provisioned VM's and they don't count towards the Subscription Quota. Defaults to `false`.
        /// </summary>
        [Input("overprovision")]
        public Input<bool>? Overprovision { get; set; }

        [Input("plan")]
        public Input<Inputs.LinuxVirtualMachineScaleSetPlanArgs>? Plan { get; set; }

        /// <summary>
        /// The Priority of this Virtual Machine Scale Set. Possible values are `Regular` and `Spot`. Defaults to `Regular`. Changing this value forces a new resource.
        /// </summary>
        [Input("priority")]
        public Input<string>? Priority { get; set; }

        /// <summary>
        /// Should the Azure VM Agent be provisioned on each Virtual Machine in the Scale Set? Defaults to `true`. Changing this value forces a new resource to be created.
        /// </summary>
        [Input("provisionVmAgent")]
        public Input<bool>? ProvisionVmAgent { get; set; }

        /// <summary>
        /// The ID of the Proximity Placement Group in which the Virtual Machine Scale Set should be assigned to. Changing this forces a new resource to be created.
        /// </summary>
        [Input("proximityPlacementGroupId")]
        public Input<string>? ProximityPlacementGroupId { get; set; }

        /// <summary>
        /// The name of the Resource Group in which the Linux Virtual Machine Scale Set should be exist. Changing this forces a new resource to be created.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// A `rolling_upgrade_policy` block as defined below. This is Required and can only be specified when `upgrade_mode` is set to `Automatic` or `Rolling`.
        /// </summary>
        [Input("rollingUpgradePolicy")]
        public Input<Inputs.LinuxVirtualMachineScaleSetRollingUpgradePolicyArgs>? RollingUpgradePolicy { get; set; }

        [Input("secrets")]
        private InputList<Inputs.LinuxVirtualMachineScaleSetSecretsArgs>? _secrets;

        /// <summary>
        /// One or more `secret` blocks as defined below.
        /// </summary>
        public InputList<Inputs.LinuxVirtualMachineScaleSetSecretsArgs> Secrets
        {
            get => _secrets ?? (_secrets = new InputList<Inputs.LinuxVirtualMachineScaleSetSecretsArgs>());
            set => _secrets = value;
        }

        /// <summary>
        /// Should this Virtual Machine Scale Set be limited to a Single Placement Group, which means the number of instances will be capped at 100 Virtual Machines. Defaults to `true`.
        /// </summary>
        [Input("singlePlacementGroup")]
        public Input<bool>? SinglePlacementGroup { get; set; }

        /// <summary>
        /// The Virtual Machine SKU for the Scale Set, such as `Standard_F2`.
        /// </summary>
        [Input("sku", required: true)]
        public Input<string> Sku { get; set; } = null!;

        /// <summary>
        /// The ID of an Image which each Virtual Machine in this Scale Set should be based on.
        /// </summary>
        [Input("sourceImageId")]
        public Input<string>? SourceImageId { get; set; }

        /// <summary>
        /// A `source_image_reference` block as defined below.
        /// </summary>
        [Input("sourceImageReference")]
        public Input<Inputs.LinuxVirtualMachineScaleSetSourceImageReferenceArgs>? SourceImageReference { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// A mapping of tags which should be assigned to this Virtual Machine Scale Set.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        /// <summary>
        /// Specifies how Upgrades (e.g. changing the Image/SKU) should be performed to Virtual Machine Instances. Possible values are `Automatic`, `Manual` and `Rolling`. Defaults to `Manual`.
        /// </summary>
        [Input("upgradeMode")]
        public Input<string>? UpgradeMode { get; set; }

        /// <summary>
        /// Should the Virtual Machines in this Scale Set be strictly evenly distributed across Availability Zones? Defaults to `false`. Changing this forces a new resource to be created.
        /// </summary>
        [Input("zoneBalance")]
        public Input<bool>? ZoneBalance { get; set; }

        [Input("zones")]
        private InputList<string>? _zones;

        /// <summary>
        /// A list of Availability Zones in which the Virtual Machines in this Scale Set should be created in. Changing this forces a new resource to be created.
        /// </summary>
        public InputList<string> Zones
        {
            get => _zones ?? (_zones = new InputList<string>());
            set => _zones = value;
        }

        public LinuxVirtualMachineScaleSetArgs()
        {
        }
    }

    public sealed class LinuxVirtualMachineScaleSetState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// A `additional_capabilities` block as defined below.
        /// </summary>
        [Input("additionalCapabilities")]
        public Input<Inputs.LinuxVirtualMachineScaleSetAdditionalCapabilitiesGetArgs>? AdditionalCapabilities { get; set; }

        /// <summary>
        /// The Password which should be used for the local-administrator on this Virtual Machine. Changing this forces a new resource to be created.
        /// </summary>
        [Input("adminPassword")]
        public Input<string>? AdminPassword { get; set; }

        [Input("adminSshKeys")]
        private InputList<Inputs.LinuxVirtualMachineScaleSetAdminSshKeysGetArgs>? _adminSshKeys;

        /// <summary>
        /// One or more `admin_ssh_key` blocks as defined below.
        /// </summary>
        public InputList<Inputs.LinuxVirtualMachineScaleSetAdminSshKeysGetArgs> AdminSshKeys
        {
            get => _adminSshKeys ?? (_adminSshKeys = new InputList<Inputs.LinuxVirtualMachineScaleSetAdminSshKeysGetArgs>());
            set => _adminSshKeys = value;
        }

        /// <summary>
        /// The username of the local administrator on each Virtual Machine Scale Set instance. Changing this forces a new resource to be created.
        /// </summary>
        [Input("adminUsername")]
        public Input<string>? AdminUsername { get; set; }

        /// <summary>
        /// A `automatic_os_upgrade_policy` block as defined below. This is Required and can only be specified when `upgrade_mode` is set to `Automatic`.
        /// </summary>
        [Input("automaticOsUpgradePolicy")]
        public Input<Inputs.LinuxVirtualMachineScaleSetAutomaticOsUpgradePolicyGetArgs>? AutomaticOsUpgradePolicy { get; set; }

        /// <summary>
        /// A `boot_diagnostics` block as defined below.
        /// </summary>
        [Input("bootDiagnostics")]
        public Input<Inputs.LinuxVirtualMachineScaleSetBootDiagnosticsGetArgs>? BootDiagnostics { get; set; }

        /// <summary>
        /// The prefix which should be used for the name of the Virtual Machines in this Scale Set. If unspecified this defaults to the value for the `name` field.
        /// </summary>
        [Input("computerNamePrefix")]
        public Input<string>? ComputerNamePrefix { get; set; }

        /// <summary>
        /// The Base64-Encoded Custom Data which should be used for this Virtual Machine Scale Set.
        /// </summary>
        [Input("customData")]
        public Input<string>? CustomData { get; set; }

        [Input("dataDisks")]
        private InputList<Inputs.LinuxVirtualMachineScaleSetDataDisksGetArgs>? _dataDisks;

        /// <summary>
        /// One or more `data_disk` blocks as defined below.
        /// </summary>
        public InputList<Inputs.LinuxVirtualMachineScaleSetDataDisksGetArgs> DataDisks
        {
            get => _dataDisks ?? (_dataDisks = new InputList<Inputs.LinuxVirtualMachineScaleSetDataDisksGetArgs>());
            set => _dataDisks = value;
        }

        /// <summary>
        /// Should Password Authentication be disabled on this Virtual Machine Scale Set? Defaults to `true`.
        /// </summary>
        [Input("disablePasswordAuthentication")]
        public Input<bool>? DisablePasswordAuthentication { get; set; }

        /// <summary>
        /// Should Virtual Machine Extensions be run on Overprovisioned Virtual Machines in the Scale Set? Defaults to `false`.
        /// </summary>
        [Input("doNotRunExtensionsOnOverprovisionedMachines")]
        public Input<bool>? DoNotRunExtensionsOnOverprovisionedMachines { get; set; }

        /// <summary>
        /// The Policy which should be used Virtual Machines are Evicted from the Scale Set. Changing this forces a new resource to be created.
        /// </summary>
        [Input("evictionPolicy")]
        public Input<string>? EvictionPolicy { get; set; }

        /// <summary>
        /// The ID of a Load Balancer Probe which should be used to determine the health of an instance. Changing this forces a new resource to be created. This is Required and can only be specified when `upgrade_mode` is set to `Automatic` or `Rolling`.
        /// </summary>
        [Input("healthProbeId")]
        public Input<string>? HealthProbeId { get; set; }

        /// <summary>
        /// A `identity` block as defined below.
        /// </summary>
        [Input("identity")]
        public Input<Inputs.LinuxVirtualMachineScaleSetIdentityGetArgs>? Identity { get; set; }

        /// <summary>
        /// The number of Virtual Machines in the Scale Set.
        /// </summary>
        [Input("instances")]
        public Input<int>? Instances { get; set; }

        /// <summary>
        /// The Azure location where the Linux Virtual Machine Scale Set should exist. Changing this forces a new resource to be created.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// The maximum price you're willing to pay for each Virtual Machine in this Scale Set, in US Dollars; which must be greater than the current spot price. If this bid price falls below the current spot price the Virtual Machines in the Scale Set will be evicted using the `eviction_policy`. Defaults to `-1`, which means that each Virtual Machine in this Scale Set should not be evicted for price reasons.
        /// </summary>
        [Input("maxBidPrice")]
        public Input<double>? MaxBidPrice { get; set; }

        /// <summary>
        /// The name of the Linux Virtual Machine Scale Set. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("networkInterfaces")]
        private InputList<Inputs.LinuxVirtualMachineScaleSetNetworkInterfacesGetArgs>? _networkInterfaces;

        /// <summary>
        /// One or more `network_interface` blocks as defined below.
        /// </summary>
        public InputList<Inputs.LinuxVirtualMachineScaleSetNetworkInterfacesGetArgs> NetworkInterfaces
        {
            get => _networkInterfaces ?? (_networkInterfaces = new InputList<Inputs.LinuxVirtualMachineScaleSetNetworkInterfacesGetArgs>());
            set => _networkInterfaces = value;
        }

        /// <summary>
        /// An `os_disk` block as defined below.
        /// </summary>
        [Input("osDisk")]
        public Input<Inputs.LinuxVirtualMachineScaleSetOsDiskGetArgs>? OsDisk { get; set; }

        /// <summary>
        /// Should Azure over-provision Virtual Machines in this Scale Set? This means that multiple Virtual Machines will be provisioned and Azure will keep the instances which become available first - which improves provisioning success rates and improves deployment time. You're not billed for these over-provisioned VM's and they don't count towards the Subscription Quota. Defaults to `false`.
        /// </summary>
        [Input("overprovision")]
        public Input<bool>? Overprovision { get; set; }

        [Input("plan")]
        public Input<Inputs.LinuxVirtualMachineScaleSetPlanGetArgs>? Plan { get; set; }

        /// <summary>
        /// The Priority of this Virtual Machine Scale Set. Possible values are `Regular` and `Spot`. Defaults to `Regular`. Changing this value forces a new resource.
        /// </summary>
        [Input("priority")]
        public Input<string>? Priority { get; set; }

        /// <summary>
        /// Should the Azure VM Agent be provisioned on each Virtual Machine in the Scale Set? Defaults to `true`. Changing this value forces a new resource to be created.
        /// </summary>
        [Input("provisionVmAgent")]
        public Input<bool>? ProvisionVmAgent { get; set; }

        /// <summary>
        /// The ID of the Proximity Placement Group in which the Virtual Machine Scale Set should be assigned to. Changing this forces a new resource to be created.
        /// </summary>
        [Input("proximityPlacementGroupId")]
        public Input<string>? ProximityPlacementGroupId { get; set; }

        /// <summary>
        /// The name of the Resource Group in which the Linux Virtual Machine Scale Set should be exist. Changing this forces a new resource to be created.
        /// </summary>
        [Input("resourceGroupName")]
        public Input<string>? ResourceGroupName { get; set; }

        /// <summary>
        /// A `rolling_upgrade_policy` block as defined below. This is Required and can only be specified when `upgrade_mode` is set to `Automatic` or `Rolling`.
        /// </summary>
        [Input("rollingUpgradePolicy")]
        public Input<Inputs.LinuxVirtualMachineScaleSetRollingUpgradePolicyGetArgs>? RollingUpgradePolicy { get; set; }

        [Input("secrets")]
        private InputList<Inputs.LinuxVirtualMachineScaleSetSecretsGetArgs>? _secrets;

        /// <summary>
        /// One or more `secret` blocks as defined below.
        /// </summary>
        public InputList<Inputs.LinuxVirtualMachineScaleSetSecretsGetArgs> Secrets
        {
            get => _secrets ?? (_secrets = new InputList<Inputs.LinuxVirtualMachineScaleSetSecretsGetArgs>());
            set => _secrets = value;
        }

        /// <summary>
        /// Should this Virtual Machine Scale Set be limited to a Single Placement Group, which means the number of instances will be capped at 100 Virtual Machines. Defaults to `true`.
        /// </summary>
        [Input("singlePlacementGroup")]
        public Input<bool>? SinglePlacementGroup { get; set; }

        /// <summary>
        /// The Virtual Machine SKU for the Scale Set, such as `Standard_F2`.
        /// </summary>
        [Input("sku")]
        public Input<string>? Sku { get; set; }

        /// <summary>
        /// The ID of an Image which each Virtual Machine in this Scale Set should be based on.
        /// </summary>
        [Input("sourceImageId")]
        public Input<string>? SourceImageId { get; set; }

        /// <summary>
        /// A `source_image_reference` block as defined below.
        /// </summary>
        [Input("sourceImageReference")]
        public Input<Inputs.LinuxVirtualMachineScaleSetSourceImageReferenceGetArgs>? SourceImageReference { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// A mapping of tags which should be assigned to this Virtual Machine Scale Set.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        /// <summary>
        /// The Unique ID for this Linux Virtual Machine Scale Set.
        /// </summary>
        [Input("uniqueId")]
        public Input<string>? UniqueId { get; set; }

        /// <summary>
        /// Specifies how Upgrades (e.g. changing the Image/SKU) should be performed to Virtual Machine Instances. Possible values are `Automatic`, `Manual` and `Rolling`. Defaults to `Manual`.
        /// </summary>
        [Input("upgradeMode")]
        public Input<string>? UpgradeMode { get; set; }

        /// <summary>
        /// Should the Virtual Machines in this Scale Set be strictly evenly distributed across Availability Zones? Defaults to `false`. Changing this forces a new resource to be created.
        /// </summary>
        [Input("zoneBalance")]
        public Input<bool>? ZoneBalance { get; set; }

        [Input("zones")]
        private InputList<string>? _zones;

        /// <summary>
        /// A list of Availability Zones in which the Virtual Machines in this Scale Set should be created in. Changing this forces a new resource to be created.
        /// </summary>
        public InputList<string> Zones
        {
            get => _zones ?? (_zones = new InputList<string>());
            set => _zones = value;
        }

        public LinuxVirtualMachineScaleSetState()
        {
        }
    }

    namespace Inputs
    {

    public sealed class LinuxVirtualMachineScaleSetAdditionalCapabilitiesArgs : Pulumi.ResourceArgs
    {
        [Input("ultraSsdEnabled")]
        public Input<bool>? UltraSsdEnabled { get; set; }

        public LinuxVirtualMachineScaleSetAdditionalCapabilitiesArgs()
        {
        }
    }

    public sealed class LinuxVirtualMachineScaleSetAdditionalCapabilitiesGetArgs : Pulumi.ResourceArgs
    {
        [Input("ultraSsdEnabled")]
        public Input<bool>? UltraSsdEnabled { get; set; }

        public LinuxVirtualMachineScaleSetAdditionalCapabilitiesGetArgs()
        {
        }
    }

    public sealed class LinuxVirtualMachineScaleSetAdminSshKeysArgs : Pulumi.ResourceArgs
    {
        [Input("publicKey", required: true)]
        public Input<string> PublicKey { get; set; } = null!;

        [Input("username", required: true)]
        public Input<string> Username { get; set; } = null!;

        public LinuxVirtualMachineScaleSetAdminSshKeysArgs()
        {
        }
    }

    public sealed class LinuxVirtualMachineScaleSetAdminSshKeysGetArgs : Pulumi.ResourceArgs
    {
        [Input("publicKey", required: true)]
        public Input<string> PublicKey { get; set; } = null!;

        [Input("username", required: true)]
        public Input<string> Username { get; set; } = null!;

        public LinuxVirtualMachineScaleSetAdminSshKeysGetArgs()
        {
        }
    }

    public sealed class LinuxVirtualMachineScaleSetAutomaticOsUpgradePolicyArgs : Pulumi.ResourceArgs
    {
        [Input("disableAutomaticRollback", required: true)]
        public Input<bool> DisableAutomaticRollback { get; set; } = null!;

        [Input("enableAutomaticOsUpgrade", required: true)]
        public Input<bool> EnableAutomaticOsUpgrade { get; set; } = null!;

        public LinuxVirtualMachineScaleSetAutomaticOsUpgradePolicyArgs()
        {
        }
    }

    public sealed class LinuxVirtualMachineScaleSetAutomaticOsUpgradePolicyGetArgs : Pulumi.ResourceArgs
    {
        [Input("disableAutomaticRollback", required: true)]
        public Input<bool> DisableAutomaticRollback { get; set; } = null!;

        [Input("enableAutomaticOsUpgrade", required: true)]
        public Input<bool> EnableAutomaticOsUpgrade { get; set; } = null!;

        public LinuxVirtualMachineScaleSetAutomaticOsUpgradePolicyGetArgs()
        {
        }
    }

    public sealed class LinuxVirtualMachineScaleSetBootDiagnosticsArgs : Pulumi.ResourceArgs
    {
        [Input("storageAccountUri", required: true)]
        public Input<string> StorageAccountUri { get; set; } = null!;

        public LinuxVirtualMachineScaleSetBootDiagnosticsArgs()
        {
        }
    }

    public sealed class LinuxVirtualMachineScaleSetBootDiagnosticsGetArgs : Pulumi.ResourceArgs
    {
        [Input("storageAccountUri", required: true)]
        public Input<string> StorageAccountUri { get; set; } = null!;

        public LinuxVirtualMachineScaleSetBootDiagnosticsGetArgs()
        {
        }
    }

    public sealed class LinuxVirtualMachineScaleSetDataDisksArgs : Pulumi.ResourceArgs
    {
        [Input("caching", required: true)]
        public Input<string> Caching { get; set; } = null!;

        [Input("diskEncryptionSetId")]
        public Input<string>? DiskEncryptionSetId { get; set; }

        [Input("diskSizeGb", required: true)]
        public Input<int> DiskSizeGb { get; set; } = null!;

        [Input("lun", required: true)]
        public Input<int> Lun { get; set; } = null!;

        [Input("storageAccountType", required: true)]
        public Input<string> StorageAccountType { get; set; } = null!;

        [Input("writeAcceleratorEnabled")]
        public Input<bool>? WriteAcceleratorEnabled { get; set; }

        public LinuxVirtualMachineScaleSetDataDisksArgs()
        {
        }
    }

    public sealed class LinuxVirtualMachineScaleSetDataDisksGetArgs : Pulumi.ResourceArgs
    {
        [Input("caching", required: true)]
        public Input<string> Caching { get; set; } = null!;

        [Input("diskEncryptionSetId")]
        public Input<string>? DiskEncryptionSetId { get; set; }

        [Input("diskSizeGb", required: true)]
        public Input<int> DiskSizeGb { get; set; } = null!;

        [Input("lun", required: true)]
        public Input<int> Lun { get; set; } = null!;

        [Input("storageAccountType", required: true)]
        public Input<string> StorageAccountType { get; set; } = null!;

        [Input("writeAcceleratorEnabled")]
        public Input<bool>? WriteAcceleratorEnabled { get; set; }

        public LinuxVirtualMachineScaleSetDataDisksGetArgs()
        {
        }
    }

    public sealed class LinuxVirtualMachineScaleSetIdentityArgs : Pulumi.ResourceArgs
    {
        [Input("identityIds")]
        private InputList<string>? _identityIds;
        public InputList<string> IdentityIds
        {
            get => _identityIds ?? (_identityIds = new InputList<string>());
            set => _identityIds = value;
        }

        /// <summary>
        /// The ID of the System Managed Service Principal.
        /// </summary>
        [Input("principalId")]
        public Input<string>? PrincipalId { get; set; }

        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        public LinuxVirtualMachineScaleSetIdentityArgs()
        {
        }
    }

    public sealed class LinuxVirtualMachineScaleSetIdentityGetArgs : Pulumi.ResourceArgs
    {
        [Input("identityIds")]
        private InputList<string>? _identityIds;
        public InputList<string> IdentityIds
        {
            get => _identityIds ?? (_identityIds = new InputList<string>());
            set => _identityIds = value;
        }

        /// <summary>
        /// The ID of the System Managed Service Principal.
        /// </summary>
        [Input("principalId")]
        public Input<string>? PrincipalId { get; set; }

        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        public LinuxVirtualMachineScaleSetIdentityGetArgs()
        {
        }
    }

    public sealed class LinuxVirtualMachineScaleSetNetworkInterfacesArgs : Pulumi.ResourceArgs
    {
        [Input("dnsServers")]
        private InputList<string>? _dnsServers;
        public InputList<string> DnsServers
        {
            get => _dnsServers ?? (_dnsServers = new InputList<string>());
            set => _dnsServers = value;
        }

        [Input("enableAcceleratedNetworking")]
        public Input<bool>? EnableAcceleratedNetworking { get; set; }

        [Input("enableIpForwarding")]
        public Input<bool>? EnableIpForwarding { get; set; }

        [Input("ipConfigurations", required: true)]
        private InputList<LinuxVirtualMachineScaleSetNetworkInterfacesIpConfigurationsArgs>? _ipConfigurations;
        public InputList<LinuxVirtualMachineScaleSetNetworkInterfacesIpConfigurationsArgs> IpConfigurations
        {
            get => _ipConfigurations ?? (_ipConfigurations = new InputList<LinuxVirtualMachineScaleSetNetworkInterfacesIpConfigurationsArgs>());
            set => _ipConfigurations = value;
        }

        /// <summary>
        /// The name of the Linux Virtual Machine Scale Set. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        [Input("networkSecurityGroupId")]
        public Input<string>? NetworkSecurityGroupId { get; set; }

        [Input("primary")]
        public Input<bool>? Primary { get; set; }

        public LinuxVirtualMachineScaleSetNetworkInterfacesArgs()
        {
        }
    }

    public sealed class LinuxVirtualMachineScaleSetNetworkInterfacesGetArgs : Pulumi.ResourceArgs
    {
        [Input("dnsServers")]
        private InputList<string>? _dnsServers;
        public InputList<string> DnsServers
        {
            get => _dnsServers ?? (_dnsServers = new InputList<string>());
            set => _dnsServers = value;
        }

        [Input("enableAcceleratedNetworking")]
        public Input<bool>? EnableAcceleratedNetworking { get; set; }

        [Input("enableIpForwarding")]
        public Input<bool>? EnableIpForwarding { get; set; }

        [Input("ipConfigurations", required: true)]
        private InputList<LinuxVirtualMachineScaleSetNetworkInterfacesIpConfigurationsGetArgs>? _ipConfigurations;
        public InputList<LinuxVirtualMachineScaleSetNetworkInterfacesIpConfigurationsGetArgs> IpConfigurations
        {
            get => _ipConfigurations ?? (_ipConfigurations = new InputList<LinuxVirtualMachineScaleSetNetworkInterfacesIpConfigurationsGetArgs>());
            set => _ipConfigurations = value;
        }

        /// <summary>
        /// The name of the Linux Virtual Machine Scale Set. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        [Input("networkSecurityGroupId")]
        public Input<string>? NetworkSecurityGroupId { get; set; }

        [Input("primary")]
        public Input<bool>? Primary { get; set; }

        public LinuxVirtualMachineScaleSetNetworkInterfacesGetArgs()
        {
        }
    }

    public sealed class LinuxVirtualMachineScaleSetNetworkInterfacesIpConfigurationsArgs : Pulumi.ResourceArgs
    {
        [Input("applicationGatewayBackendAddressPoolIds")]
        private InputList<string>? _applicationGatewayBackendAddressPoolIds;
        public InputList<string> ApplicationGatewayBackendAddressPoolIds
        {
            get => _applicationGatewayBackendAddressPoolIds ?? (_applicationGatewayBackendAddressPoolIds = new InputList<string>());
            set => _applicationGatewayBackendAddressPoolIds = value;
        }

        [Input("applicationSecurityGroupIds")]
        private InputList<string>? _applicationSecurityGroupIds;
        public InputList<string> ApplicationSecurityGroupIds
        {
            get => _applicationSecurityGroupIds ?? (_applicationSecurityGroupIds = new InputList<string>());
            set => _applicationSecurityGroupIds = value;
        }

        [Input("loadBalancerBackendAddressPoolIds")]
        private InputList<string>? _loadBalancerBackendAddressPoolIds;
        public InputList<string> LoadBalancerBackendAddressPoolIds
        {
            get => _loadBalancerBackendAddressPoolIds ?? (_loadBalancerBackendAddressPoolIds = new InputList<string>());
            set => _loadBalancerBackendAddressPoolIds = value;
        }

        [Input("loadBalancerInboundNatRulesIds")]
        private InputList<string>? _loadBalancerInboundNatRulesIds;
        public InputList<string> LoadBalancerInboundNatRulesIds
        {
            get => _loadBalancerInboundNatRulesIds ?? (_loadBalancerInboundNatRulesIds = new InputList<string>());
            set => _loadBalancerInboundNatRulesIds = value;
        }

        /// <summary>
        /// The name of the Linux Virtual Machine Scale Set. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        [Input("primary")]
        public Input<bool>? Primary { get; set; }

        [Input("publicIpAddresses")]
        private InputList<LinuxVirtualMachineScaleSetNetworkInterfacesIpConfigurationsPublicIpAddressesArgs>? _publicIpAddresses;
        public InputList<LinuxVirtualMachineScaleSetNetworkInterfacesIpConfigurationsPublicIpAddressesArgs> PublicIpAddresses
        {
            get => _publicIpAddresses ?? (_publicIpAddresses = new InputList<LinuxVirtualMachineScaleSetNetworkInterfacesIpConfigurationsPublicIpAddressesArgs>());
            set => _publicIpAddresses = value;
        }

        [Input("subnetId")]
        public Input<string>? SubnetId { get; set; }

        [Input("version")]
        public Input<string>? Version { get; set; }

        public LinuxVirtualMachineScaleSetNetworkInterfacesIpConfigurationsArgs()
        {
        }
    }

    public sealed class LinuxVirtualMachineScaleSetNetworkInterfacesIpConfigurationsGetArgs : Pulumi.ResourceArgs
    {
        [Input("applicationGatewayBackendAddressPoolIds")]
        private InputList<string>? _applicationGatewayBackendAddressPoolIds;
        public InputList<string> ApplicationGatewayBackendAddressPoolIds
        {
            get => _applicationGatewayBackendAddressPoolIds ?? (_applicationGatewayBackendAddressPoolIds = new InputList<string>());
            set => _applicationGatewayBackendAddressPoolIds = value;
        }

        [Input("applicationSecurityGroupIds")]
        private InputList<string>? _applicationSecurityGroupIds;
        public InputList<string> ApplicationSecurityGroupIds
        {
            get => _applicationSecurityGroupIds ?? (_applicationSecurityGroupIds = new InputList<string>());
            set => _applicationSecurityGroupIds = value;
        }

        [Input("loadBalancerBackendAddressPoolIds")]
        private InputList<string>? _loadBalancerBackendAddressPoolIds;
        public InputList<string> LoadBalancerBackendAddressPoolIds
        {
            get => _loadBalancerBackendAddressPoolIds ?? (_loadBalancerBackendAddressPoolIds = new InputList<string>());
            set => _loadBalancerBackendAddressPoolIds = value;
        }

        [Input("loadBalancerInboundNatRulesIds")]
        private InputList<string>? _loadBalancerInboundNatRulesIds;
        public InputList<string> LoadBalancerInboundNatRulesIds
        {
            get => _loadBalancerInboundNatRulesIds ?? (_loadBalancerInboundNatRulesIds = new InputList<string>());
            set => _loadBalancerInboundNatRulesIds = value;
        }

        /// <summary>
        /// The name of the Linux Virtual Machine Scale Set. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        [Input("primary")]
        public Input<bool>? Primary { get; set; }

        [Input("publicIpAddresses")]
        private InputList<LinuxVirtualMachineScaleSetNetworkInterfacesIpConfigurationsPublicIpAddressesGetArgs>? _publicIpAddresses;
        public InputList<LinuxVirtualMachineScaleSetNetworkInterfacesIpConfigurationsPublicIpAddressesGetArgs> PublicIpAddresses
        {
            get => _publicIpAddresses ?? (_publicIpAddresses = new InputList<LinuxVirtualMachineScaleSetNetworkInterfacesIpConfigurationsPublicIpAddressesGetArgs>());
            set => _publicIpAddresses = value;
        }

        [Input("subnetId")]
        public Input<string>? SubnetId { get; set; }

        [Input("version")]
        public Input<string>? Version { get; set; }

        public LinuxVirtualMachineScaleSetNetworkInterfacesIpConfigurationsGetArgs()
        {
        }
    }

    public sealed class LinuxVirtualMachineScaleSetNetworkInterfacesIpConfigurationsPublicIpAddressesArgs : Pulumi.ResourceArgs
    {
        [Input("domainNameLabel")]
        public Input<string>? DomainNameLabel { get; set; }

        [Input("idleTimeoutInMinutes")]
        public Input<int>? IdleTimeoutInMinutes { get; set; }

        [Input("ipTags")]
        private InputList<LinuxVirtualMachineScaleSetNetworkInterfacesIpConfigurationsPublicIpAddressesIpTagsArgs>? _ipTags;
        public InputList<LinuxVirtualMachineScaleSetNetworkInterfacesIpConfigurationsPublicIpAddressesIpTagsArgs> IpTags
        {
            get => _ipTags ?? (_ipTags = new InputList<LinuxVirtualMachineScaleSetNetworkInterfacesIpConfigurationsPublicIpAddressesIpTagsArgs>());
            set => _ipTags = value;
        }

        /// <summary>
        /// The name of the Linux Virtual Machine Scale Set. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        [Input("publicIpPrefixId")]
        public Input<string>? PublicIpPrefixId { get; set; }

        public LinuxVirtualMachineScaleSetNetworkInterfacesIpConfigurationsPublicIpAddressesArgs()
        {
        }
    }

    public sealed class LinuxVirtualMachineScaleSetNetworkInterfacesIpConfigurationsPublicIpAddressesGetArgs : Pulumi.ResourceArgs
    {
        [Input("domainNameLabel")]
        public Input<string>? DomainNameLabel { get; set; }

        [Input("idleTimeoutInMinutes")]
        public Input<int>? IdleTimeoutInMinutes { get; set; }

        [Input("ipTags")]
        private InputList<LinuxVirtualMachineScaleSetNetworkInterfacesIpConfigurationsPublicIpAddressesIpTagsGetArgs>? _ipTags;
        public InputList<LinuxVirtualMachineScaleSetNetworkInterfacesIpConfigurationsPublicIpAddressesIpTagsGetArgs> IpTags
        {
            get => _ipTags ?? (_ipTags = new InputList<LinuxVirtualMachineScaleSetNetworkInterfacesIpConfigurationsPublicIpAddressesIpTagsGetArgs>());
            set => _ipTags = value;
        }

        /// <summary>
        /// The name of the Linux Virtual Machine Scale Set. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        [Input("publicIpPrefixId")]
        public Input<string>? PublicIpPrefixId { get; set; }

        public LinuxVirtualMachineScaleSetNetworkInterfacesIpConfigurationsPublicIpAddressesGetArgs()
        {
        }
    }

    public sealed class LinuxVirtualMachineScaleSetNetworkInterfacesIpConfigurationsPublicIpAddressesIpTagsArgs : Pulumi.ResourceArgs
    {
        [Input("tag", required: true)]
        public Input<string> Tag { get; set; } = null!;

        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        public LinuxVirtualMachineScaleSetNetworkInterfacesIpConfigurationsPublicIpAddressesIpTagsArgs()
        {
        }
    }

    public sealed class LinuxVirtualMachineScaleSetNetworkInterfacesIpConfigurationsPublicIpAddressesIpTagsGetArgs : Pulumi.ResourceArgs
    {
        [Input("tag", required: true)]
        public Input<string> Tag { get; set; } = null!;

        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        public LinuxVirtualMachineScaleSetNetworkInterfacesIpConfigurationsPublicIpAddressesIpTagsGetArgs()
        {
        }
    }

    public sealed class LinuxVirtualMachineScaleSetOsDiskArgs : Pulumi.ResourceArgs
    {
        [Input("caching", required: true)]
        public Input<string> Caching { get; set; } = null!;

        [Input("diffDiskSettings")]
        public Input<LinuxVirtualMachineScaleSetOsDiskDiffDiskSettingsArgs>? DiffDiskSettings { get; set; }

        [Input("diskEncryptionSetId")]
        public Input<string>? DiskEncryptionSetId { get; set; }

        [Input("diskSizeGb")]
        public Input<int>? DiskSizeGb { get; set; }

        [Input("storageAccountType", required: true)]
        public Input<string> StorageAccountType { get; set; } = null!;

        [Input("writeAcceleratorEnabled")]
        public Input<bool>? WriteAcceleratorEnabled { get; set; }

        public LinuxVirtualMachineScaleSetOsDiskArgs()
        {
        }
    }

    public sealed class LinuxVirtualMachineScaleSetOsDiskDiffDiskSettingsArgs : Pulumi.ResourceArgs
    {
        [Input("option", required: true)]
        public Input<string> Option { get; set; } = null!;

        public LinuxVirtualMachineScaleSetOsDiskDiffDiskSettingsArgs()
        {
        }
    }

    public sealed class LinuxVirtualMachineScaleSetOsDiskDiffDiskSettingsGetArgs : Pulumi.ResourceArgs
    {
        [Input("option", required: true)]
        public Input<string> Option { get; set; } = null!;

        public LinuxVirtualMachineScaleSetOsDiskDiffDiskSettingsGetArgs()
        {
        }
    }

    public sealed class LinuxVirtualMachineScaleSetOsDiskGetArgs : Pulumi.ResourceArgs
    {
        [Input("caching", required: true)]
        public Input<string> Caching { get; set; } = null!;

        [Input("diffDiskSettings")]
        public Input<LinuxVirtualMachineScaleSetOsDiskDiffDiskSettingsGetArgs>? DiffDiskSettings { get; set; }

        [Input("diskEncryptionSetId")]
        public Input<string>? DiskEncryptionSetId { get; set; }

        [Input("diskSizeGb")]
        public Input<int>? DiskSizeGb { get; set; }

        [Input("storageAccountType", required: true)]
        public Input<string> StorageAccountType { get; set; } = null!;

        [Input("writeAcceleratorEnabled")]
        public Input<bool>? WriteAcceleratorEnabled { get; set; }

        public LinuxVirtualMachineScaleSetOsDiskGetArgs()
        {
        }
    }

    public sealed class LinuxVirtualMachineScaleSetPlanArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the Linux Virtual Machine Scale Set. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        [Input("product", required: true)]
        public Input<string> Product { get; set; } = null!;

        [Input("publisher", required: true)]
        public Input<string> Publisher { get; set; } = null!;

        public LinuxVirtualMachineScaleSetPlanArgs()
        {
        }
    }

    public sealed class LinuxVirtualMachineScaleSetPlanGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the Linux Virtual Machine Scale Set. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        [Input("product", required: true)]
        public Input<string> Product { get; set; } = null!;

        [Input("publisher", required: true)]
        public Input<string> Publisher { get; set; } = null!;

        public LinuxVirtualMachineScaleSetPlanGetArgs()
        {
        }
    }

    public sealed class LinuxVirtualMachineScaleSetRollingUpgradePolicyArgs : Pulumi.ResourceArgs
    {
        [Input("maxBatchInstancePercent", required: true)]
        public Input<int> MaxBatchInstancePercent { get; set; } = null!;

        [Input("maxUnhealthyInstancePercent", required: true)]
        public Input<int> MaxUnhealthyInstancePercent { get; set; } = null!;

        [Input("maxUnhealthyUpgradedInstancePercent", required: true)]
        public Input<int> MaxUnhealthyUpgradedInstancePercent { get; set; } = null!;

        [Input("pauseTimeBetweenBatches", required: true)]
        public Input<string> PauseTimeBetweenBatches { get; set; } = null!;

        public LinuxVirtualMachineScaleSetRollingUpgradePolicyArgs()
        {
        }
    }

    public sealed class LinuxVirtualMachineScaleSetRollingUpgradePolicyGetArgs : Pulumi.ResourceArgs
    {
        [Input("maxBatchInstancePercent", required: true)]
        public Input<int> MaxBatchInstancePercent { get; set; } = null!;

        [Input("maxUnhealthyInstancePercent", required: true)]
        public Input<int> MaxUnhealthyInstancePercent { get; set; } = null!;

        [Input("maxUnhealthyUpgradedInstancePercent", required: true)]
        public Input<int> MaxUnhealthyUpgradedInstancePercent { get; set; } = null!;

        [Input("pauseTimeBetweenBatches", required: true)]
        public Input<string> PauseTimeBetweenBatches { get; set; } = null!;

        public LinuxVirtualMachineScaleSetRollingUpgradePolicyGetArgs()
        {
        }
    }

    public sealed class LinuxVirtualMachineScaleSetSecretsArgs : Pulumi.ResourceArgs
    {
        [Input("certificates", required: true)]
        private InputList<LinuxVirtualMachineScaleSetSecretsCertificatesArgs>? _certificates;
        public InputList<LinuxVirtualMachineScaleSetSecretsCertificatesArgs> Certificates
        {
            get => _certificates ?? (_certificates = new InputList<LinuxVirtualMachineScaleSetSecretsCertificatesArgs>());
            set => _certificates = value;
        }

        [Input("keyVaultId", required: true)]
        public Input<string> KeyVaultId { get; set; } = null!;

        public LinuxVirtualMachineScaleSetSecretsArgs()
        {
        }
    }

    public sealed class LinuxVirtualMachineScaleSetSecretsCertificatesArgs : Pulumi.ResourceArgs
    {
        [Input("url", required: true)]
        public Input<string> Url { get; set; } = null!;

        public LinuxVirtualMachineScaleSetSecretsCertificatesArgs()
        {
        }
    }

    public sealed class LinuxVirtualMachineScaleSetSecretsCertificatesGetArgs : Pulumi.ResourceArgs
    {
        [Input("url", required: true)]
        public Input<string> Url { get; set; } = null!;

        public LinuxVirtualMachineScaleSetSecretsCertificatesGetArgs()
        {
        }
    }

    public sealed class LinuxVirtualMachineScaleSetSecretsGetArgs : Pulumi.ResourceArgs
    {
        [Input("certificates", required: true)]
        private InputList<LinuxVirtualMachineScaleSetSecretsCertificatesGetArgs>? _certificates;
        public InputList<LinuxVirtualMachineScaleSetSecretsCertificatesGetArgs> Certificates
        {
            get => _certificates ?? (_certificates = new InputList<LinuxVirtualMachineScaleSetSecretsCertificatesGetArgs>());
            set => _certificates = value;
        }

        [Input("keyVaultId", required: true)]
        public Input<string> KeyVaultId { get; set; } = null!;

        public LinuxVirtualMachineScaleSetSecretsGetArgs()
        {
        }
    }

    public sealed class LinuxVirtualMachineScaleSetSourceImageReferenceArgs : Pulumi.ResourceArgs
    {
        [Input("offer", required: true)]
        public Input<string> Offer { get; set; } = null!;

        [Input("publisher", required: true)]
        public Input<string> Publisher { get; set; } = null!;

        /// <summary>
        /// The Virtual Machine SKU for the Scale Set, such as `Standard_F2`.
        /// </summary>
        [Input("sku", required: true)]
        public Input<string> Sku { get; set; } = null!;

        [Input("version", required: true)]
        public Input<string> Version { get; set; } = null!;

        public LinuxVirtualMachineScaleSetSourceImageReferenceArgs()
        {
        }
    }

    public sealed class LinuxVirtualMachineScaleSetSourceImageReferenceGetArgs : Pulumi.ResourceArgs
    {
        [Input("offer", required: true)]
        public Input<string> Offer { get; set; } = null!;

        [Input("publisher", required: true)]
        public Input<string> Publisher { get; set; } = null!;

        /// <summary>
        /// The Virtual Machine SKU for the Scale Set, such as `Standard_F2`.
        /// </summary>
        [Input("sku", required: true)]
        public Input<string> Sku { get; set; } = null!;

        [Input("version", required: true)]
        public Input<string> Version { get; set; } = null!;

        public LinuxVirtualMachineScaleSetSourceImageReferenceGetArgs()
        {
        }
    }
    }

    namespace Outputs
    {

    [OutputType]
    public sealed class LinuxVirtualMachineScaleSetAdditionalCapabilities
    {
        public readonly bool? UltraSsdEnabled;

        [OutputConstructor]
        private LinuxVirtualMachineScaleSetAdditionalCapabilities(bool? ultraSsdEnabled)
        {
            UltraSsdEnabled = ultraSsdEnabled;
        }
    }

    [OutputType]
    public sealed class LinuxVirtualMachineScaleSetAdminSshKeys
    {
        public readonly string PublicKey;
        public readonly string Username;

        [OutputConstructor]
        private LinuxVirtualMachineScaleSetAdminSshKeys(
            string publicKey,
            string username)
        {
            PublicKey = publicKey;
            Username = username;
        }
    }

    [OutputType]
    public sealed class LinuxVirtualMachineScaleSetAutomaticOsUpgradePolicy
    {
        public readonly bool DisableAutomaticRollback;
        public readonly bool EnableAutomaticOsUpgrade;

        [OutputConstructor]
        private LinuxVirtualMachineScaleSetAutomaticOsUpgradePolicy(
            bool disableAutomaticRollback,
            bool enableAutomaticOsUpgrade)
        {
            DisableAutomaticRollback = disableAutomaticRollback;
            EnableAutomaticOsUpgrade = enableAutomaticOsUpgrade;
        }
    }

    [OutputType]
    public sealed class LinuxVirtualMachineScaleSetBootDiagnostics
    {
        public readonly string StorageAccountUri;

        [OutputConstructor]
        private LinuxVirtualMachineScaleSetBootDiagnostics(string storageAccountUri)
        {
            StorageAccountUri = storageAccountUri;
        }
    }

    [OutputType]
    public sealed class LinuxVirtualMachineScaleSetDataDisks
    {
        public readonly string Caching;
        public readonly string? DiskEncryptionSetId;
        public readonly int DiskSizeGb;
        public readonly int Lun;
        public readonly string StorageAccountType;
        public readonly bool? WriteAcceleratorEnabled;

        [OutputConstructor]
        private LinuxVirtualMachineScaleSetDataDisks(
            string caching,
            string? diskEncryptionSetId,
            int diskSizeGb,
            int lun,
            string storageAccountType,
            bool? writeAcceleratorEnabled)
        {
            Caching = caching;
            DiskEncryptionSetId = diskEncryptionSetId;
            DiskSizeGb = diskSizeGb;
            Lun = lun;
            StorageAccountType = storageAccountType;
            WriteAcceleratorEnabled = writeAcceleratorEnabled;
        }
    }

    [OutputType]
    public sealed class LinuxVirtualMachineScaleSetIdentity
    {
        public readonly ImmutableArray<string> IdentityIds;
        /// <summary>
        /// The ID of the System Managed Service Principal.
        /// </summary>
        public readonly string PrincipalId;
        public readonly string Type;

        [OutputConstructor]
        private LinuxVirtualMachineScaleSetIdentity(
            ImmutableArray<string> identityIds,
            string principalId,
            string type)
        {
            IdentityIds = identityIds;
            PrincipalId = principalId;
            Type = type;
        }
    }

    [OutputType]
    public sealed class LinuxVirtualMachineScaleSetNetworkInterfaces
    {
        public readonly ImmutableArray<string> DnsServers;
        public readonly bool? EnableAcceleratedNetworking;
        public readonly bool? EnableIpForwarding;
        public readonly ImmutableArray<LinuxVirtualMachineScaleSetNetworkInterfacesIpConfigurations> IpConfigurations;
        /// <summary>
        /// The name of the Linux Virtual Machine Scale Set. Changing this forces a new resource to be created.
        /// </summary>
        public readonly string Name;
        public readonly string? NetworkSecurityGroupId;
        public readonly bool? Primary;

        [OutputConstructor]
        private LinuxVirtualMachineScaleSetNetworkInterfaces(
            ImmutableArray<string> dnsServers,
            bool? enableAcceleratedNetworking,
            bool? enableIpForwarding,
            ImmutableArray<LinuxVirtualMachineScaleSetNetworkInterfacesIpConfigurations> ipConfigurations,
            string name,
            string? networkSecurityGroupId,
            bool? primary)
        {
            DnsServers = dnsServers;
            EnableAcceleratedNetworking = enableAcceleratedNetworking;
            EnableIpForwarding = enableIpForwarding;
            IpConfigurations = ipConfigurations;
            Name = name;
            NetworkSecurityGroupId = networkSecurityGroupId;
            Primary = primary;
        }
    }

    [OutputType]
    public sealed class LinuxVirtualMachineScaleSetNetworkInterfacesIpConfigurations
    {
        public readonly ImmutableArray<string> ApplicationGatewayBackendAddressPoolIds;
        public readonly ImmutableArray<string> ApplicationSecurityGroupIds;
        public readonly ImmutableArray<string> LoadBalancerBackendAddressPoolIds;
        public readonly ImmutableArray<string> LoadBalancerInboundNatRulesIds;
        /// <summary>
        /// The name of the Linux Virtual Machine Scale Set. Changing this forces a new resource to be created.
        /// </summary>
        public readonly string Name;
        public readonly bool? Primary;
        public readonly ImmutableArray<LinuxVirtualMachineScaleSetNetworkInterfacesIpConfigurationsPublicIpAddresses> PublicIpAddresses;
        public readonly string? SubnetId;
        public readonly string? Version;

        [OutputConstructor]
        private LinuxVirtualMachineScaleSetNetworkInterfacesIpConfigurations(
            ImmutableArray<string> applicationGatewayBackendAddressPoolIds,
            ImmutableArray<string> applicationSecurityGroupIds,
            ImmutableArray<string> loadBalancerBackendAddressPoolIds,
            ImmutableArray<string> loadBalancerInboundNatRulesIds,
            string name,
            bool? primary,
            ImmutableArray<LinuxVirtualMachineScaleSetNetworkInterfacesIpConfigurationsPublicIpAddresses> publicIpAddresses,
            string? subnetId,
            string? version)
        {
            ApplicationGatewayBackendAddressPoolIds = applicationGatewayBackendAddressPoolIds;
            ApplicationSecurityGroupIds = applicationSecurityGroupIds;
            LoadBalancerBackendAddressPoolIds = loadBalancerBackendAddressPoolIds;
            LoadBalancerInboundNatRulesIds = loadBalancerInboundNatRulesIds;
            Name = name;
            Primary = primary;
            PublicIpAddresses = publicIpAddresses;
            SubnetId = subnetId;
            Version = version;
        }
    }

    [OutputType]
    public sealed class LinuxVirtualMachineScaleSetNetworkInterfacesIpConfigurationsPublicIpAddresses
    {
        public readonly string? DomainNameLabel;
        public readonly int IdleTimeoutInMinutes;
        public readonly ImmutableArray<LinuxVirtualMachineScaleSetNetworkInterfacesIpConfigurationsPublicIpAddressesIpTags> IpTags;
        /// <summary>
        /// The name of the Linux Virtual Machine Scale Set. Changing this forces a new resource to be created.
        /// </summary>
        public readonly string Name;
        public readonly string? PublicIpPrefixId;

        [OutputConstructor]
        private LinuxVirtualMachineScaleSetNetworkInterfacesIpConfigurationsPublicIpAddresses(
            string? domainNameLabel,
            int idleTimeoutInMinutes,
            ImmutableArray<LinuxVirtualMachineScaleSetNetworkInterfacesIpConfigurationsPublicIpAddressesIpTags> ipTags,
            string name,
            string? publicIpPrefixId)
        {
            DomainNameLabel = domainNameLabel;
            IdleTimeoutInMinutes = idleTimeoutInMinutes;
            IpTags = ipTags;
            Name = name;
            PublicIpPrefixId = publicIpPrefixId;
        }
    }

    [OutputType]
    public sealed class LinuxVirtualMachineScaleSetNetworkInterfacesIpConfigurationsPublicIpAddressesIpTags
    {
        public readonly string Tag;
        public readonly string Type;

        [OutputConstructor]
        private LinuxVirtualMachineScaleSetNetworkInterfacesIpConfigurationsPublicIpAddressesIpTags(
            string tag,
            string type)
        {
            Tag = tag;
            Type = type;
        }
    }

    [OutputType]
    public sealed class LinuxVirtualMachineScaleSetOsDisk
    {
        public readonly string Caching;
        public readonly LinuxVirtualMachineScaleSetOsDiskDiffDiskSettings? DiffDiskSettings;
        public readonly string? DiskEncryptionSetId;
        public readonly int DiskSizeGb;
        public readonly string StorageAccountType;
        public readonly bool? WriteAcceleratorEnabled;

        [OutputConstructor]
        private LinuxVirtualMachineScaleSetOsDisk(
            string caching,
            LinuxVirtualMachineScaleSetOsDiskDiffDiskSettings? diffDiskSettings,
            string? diskEncryptionSetId,
            int diskSizeGb,
            string storageAccountType,
            bool? writeAcceleratorEnabled)
        {
            Caching = caching;
            DiffDiskSettings = diffDiskSettings;
            DiskEncryptionSetId = diskEncryptionSetId;
            DiskSizeGb = diskSizeGb;
            StorageAccountType = storageAccountType;
            WriteAcceleratorEnabled = writeAcceleratorEnabled;
        }
    }

    [OutputType]
    public sealed class LinuxVirtualMachineScaleSetOsDiskDiffDiskSettings
    {
        public readonly string Option;

        [OutputConstructor]
        private LinuxVirtualMachineScaleSetOsDiskDiffDiskSettings(string option)
        {
            Option = option;
        }
    }

    [OutputType]
    public sealed class LinuxVirtualMachineScaleSetPlan
    {
        /// <summary>
        /// The name of the Linux Virtual Machine Scale Set. Changing this forces a new resource to be created.
        /// </summary>
        public readonly string Name;
        public readonly string Product;
        public readonly string Publisher;

        [OutputConstructor]
        private LinuxVirtualMachineScaleSetPlan(
            string name,
            string product,
            string publisher)
        {
            Name = name;
            Product = product;
            Publisher = publisher;
        }
    }

    [OutputType]
    public sealed class LinuxVirtualMachineScaleSetRollingUpgradePolicy
    {
        public readonly int MaxBatchInstancePercent;
        public readonly int MaxUnhealthyInstancePercent;
        public readonly int MaxUnhealthyUpgradedInstancePercent;
        public readonly string PauseTimeBetweenBatches;

        [OutputConstructor]
        private LinuxVirtualMachineScaleSetRollingUpgradePolicy(
            int maxBatchInstancePercent,
            int maxUnhealthyInstancePercent,
            int maxUnhealthyUpgradedInstancePercent,
            string pauseTimeBetweenBatches)
        {
            MaxBatchInstancePercent = maxBatchInstancePercent;
            MaxUnhealthyInstancePercent = maxUnhealthyInstancePercent;
            MaxUnhealthyUpgradedInstancePercent = maxUnhealthyUpgradedInstancePercent;
            PauseTimeBetweenBatches = pauseTimeBetweenBatches;
        }
    }

    [OutputType]
    public sealed class LinuxVirtualMachineScaleSetSecrets
    {
        public readonly ImmutableArray<LinuxVirtualMachineScaleSetSecretsCertificates> Certificates;
        public readonly string KeyVaultId;

        [OutputConstructor]
        private LinuxVirtualMachineScaleSetSecrets(
            ImmutableArray<LinuxVirtualMachineScaleSetSecretsCertificates> certificates,
            string keyVaultId)
        {
            Certificates = certificates;
            KeyVaultId = keyVaultId;
        }
    }

    [OutputType]
    public sealed class LinuxVirtualMachineScaleSetSecretsCertificates
    {
        public readonly string Url;

        [OutputConstructor]
        private LinuxVirtualMachineScaleSetSecretsCertificates(string url)
        {
            Url = url;
        }
    }

    [OutputType]
    public sealed class LinuxVirtualMachineScaleSetSourceImageReference
    {
        public readonly string Offer;
        public readonly string Publisher;
        /// <summary>
        /// The Virtual Machine SKU for the Scale Set, such as `Standard_F2`.
        /// </summary>
        public readonly string Sku;
        public readonly string Version;

        [OutputConstructor]
        private LinuxVirtualMachineScaleSetSourceImageReference(
            string offer,
            string publisher,
            string sku,
            string version)
        {
            Offer = offer;
            Publisher = publisher;
            Sku = sku;
            Version = version;
        }
    }
    }
}
