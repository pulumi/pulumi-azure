// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Compute
{
    /// <summary>
    /// Manages a Standby Pool for Virtual Machine Scale Sets.
    /// &gt; **Note:** please follow the prerequisites mentioned in this [article](https://learn.microsoft.com/azure/virtual-machine-scale-sets/standby-pools-create?tabs=portal#prerequisites) before using this resource.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Azure = Pulumi.Azure;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Azure.Core.ResourceGroup("example", new()
    ///     {
    ///         Name = "example-resources",
    ///         Location = "West Europe",
    ///     });
    /// 
    ///     var exampleOrchestratedVirtualMachineScaleSet = new Azure.Compute.OrchestratedVirtualMachineScaleSet("example", new()
    ///     {
    ///         Name = "example-ovmss",
    ///         Location = example.Location,
    ///         ResourceGroupName = example.Name,
    ///         PlatformFaultDomainCount = 1,
    ///         Zones = new[]
    ///         {
    ///             "1",
    ///         },
    ///     });
    /// 
    ///     var exampleScaleSetStandbyPool = new Azure.Compute.ScaleSetStandbyPool("example", new()
    ///     {
    ///         Name = "example-spsvmp",
    ///         ResourceGroupName = example.Name,
    ///         Location = "West Europe",
    ///         AttachedVirtualMachineScaleSetId = exampleOrchestratedVirtualMachineScaleSet.Id,
    ///         VirtualMachineState = "Running",
    ///         ElasticityProfile = new Azure.Compute.Inputs.ScaleSetStandbyPoolElasticityProfileArgs
    ///         {
    ///             MaxReadyCapacity = 10,
    ///             MinReadyCapacity = 5,
    ///         },
    ///         Tags = 
    ///         {
    ///             { "key", "value" },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## API Providers
    /// 
    /// &lt;!-- This section is generated, changes will be overwritten --&gt;
    /// This resource uses the following Azure API Providers:
    /// 
    /// * `Microsoft.StandbyPool`: 2024-03-01
    /// 
    /// ## Import
    /// 
    /// Standby Pool can be imported using the `resource id`, e.g.
    /// 
    /// ```sh
    /// $ pulumi import azure:compute/scaleSetStandbyPool:ScaleSetStandbyPool example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resourceGroup1/providers/Microsoft.StandbyPool/standbyVirtualMachinePools/standbyVirtualMachinePool1
    /// ```
    /// </summary>
    [AzureResourceType("azure:compute/scaleSetStandbyPool:ScaleSetStandbyPool")]
    public partial class ScaleSetStandbyPool : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Specifies the fully qualified resource ID of a virtual machine scale set the pool is attached to.
        /// </summary>
        [Output("attachedVirtualMachineScaleSetId")]
        public Output<string> AttachedVirtualMachineScaleSetId { get; private set; } = null!;

        /// <summary>
        /// An `elasticity_profile` block as defined below.
        /// </summary>
        [Output("elasticityProfile")]
        public Output<Outputs.ScaleSetStandbyPoolElasticityProfile> ElasticityProfile { get; private set; } = null!;

        /// <summary>
        /// Specifies the Azure Region where the Standby Pool should exist. Changing this forces a new Standby Pool to be created.
        /// </summary>
        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// Specifies the name which should be used for this Standby Pool. Changing this forces a new Standby Pool to be created.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Specifies the name of the Resource Group where the Standby Pool should exist. Changing this forces a new Standby Pool to be created.
        /// </summary>
        [Output("resourceGroupName")]
        public Output<string> ResourceGroupName { get; private set; } = null!;

        /// <summary>
        /// A mapping of tags which should be assigned to the Standby Pool.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// Specifies the desired state of virtual machines in the pool. Possible values are `Running` and `Deallocated`.
        /// </summary>
        [Output("virtualMachineState")]
        public Output<string> VirtualMachineState { get; private set; } = null!;


        /// <summary>
        /// Create a ScaleSetStandbyPool resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ScaleSetStandbyPool(string name, ScaleSetStandbyPoolArgs args, CustomResourceOptions? options = null)
            : base("azure:compute/scaleSetStandbyPool:ScaleSetStandbyPool", name, args ?? new ScaleSetStandbyPoolArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ScaleSetStandbyPool(string name, Input<string> id, ScaleSetStandbyPoolState? state = null, CustomResourceOptions? options = null)
            : base("azure:compute/scaleSetStandbyPool:ScaleSetStandbyPool", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ScaleSetStandbyPool resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ScaleSetStandbyPool Get(string name, Input<string> id, ScaleSetStandbyPoolState? state = null, CustomResourceOptions? options = null)
        {
            return new ScaleSetStandbyPool(name, id, state, options);
        }
    }

    public sealed class ScaleSetStandbyPoolArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies the fully qualified resource ID of a virtual machine scale set the pool is attached to.
        /// </summary>
        [Input("attachedVirtualMachineScaleSetId", required: true)]
        public Input<string> AttachedVirtualMachineScaleSetId { get; set; } = null!;

        /// <summary>
        /// An `elasticity_profile` block as defined below.
        /// </summary>
        [Input("elasticityProfile", required: true)]
        public Input<Inputs.ScaleSetStandbyPoolElasticityProfileArgs> ElasticityProfile { get; set; } = null!;

        /// <summary>
        /// Specifies the Azure Region where the Standby Pool should exist. Changing this forces a new Standby Pool to be created.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// Specifies the name which should be used for this Standby Pool. Changing this forces a new Standby Pool to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Specifies the name of the Resource Group where the Standby Pool should exist. Changing this forces a new Standby Pool to be created.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// A mapping of tags which should be assigned to the Standby Pool.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        /// <summary>
        /// Specifies the desired state of virtual machines in the pool. Possible values are `Running` and `Deallocated`.
        /// </summary>
        [Input("virtualMachineState", required: true)]
        public Input<string> VirtualMachineState { get; set; } = null!;

        public ScaleSetStandbyPoolArgs()
        {
        }
        public static new ScaleSetStandbyPoolArgs Empty => new ScaleSetStandbyPoolArgs();
    }

    public sealed class ScaleSetStandbyPoolState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies the fully qualified resource ID of a virtual machine scale set the pool is attached to.
        /// </summary>
        [Input("attachedVirtualMachineScaleSetId")]
        public Input<string>? AttachedVirtualMachineScaleSetId { get; set; }

        /// <summary>
        /// An `elasticity_profile` block as defined below.
        /// </summary>
        [Input("elasticityProfile")]
        public Input<Inputs.ScaleSetStandbyPoolElasticityProfileGetArgs>? ElasticityProfile { get; set; }

        /// <summary>
        /// Specifies the Azure Region where the Standby Pool should exist. Changing this forces a new Standby Pool to be created.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// Specifies the name which should be used for this Standby Pool. Changing this forces a new Standby Pool to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Specifies the name of the Resource Group where the Standby Pool should exist. Changing this forces a new Standby Pool to be created.
        /// </summary>
        [Input("resourceGroupName")]
        public Input<string>? ResourceGroupName { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// A mapping of tags which should be assigned to the Standby Pool.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        /// <summary>
        /// Specifies the desired state of virtual machines in the pool. Possible values are `Running` and `Deallocated`.
        /// </summary>
        [Input("virtualMachineState")]
        public Input<string>? VirtualMachineState { get; set; }

        public ScaleSetStandbyPoolState()
        {
        }
        public static new ScaleSetStandbyPoolState Empty => new ScaleSetStandbyPoolState();
    }
}
