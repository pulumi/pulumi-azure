// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Compute
{
    public static partial class Invokes
    {
        /// <summary>
        /// Use this data source to access information about an existing Dedicated Host Group.
        /// 
        /// &gt; This content is derived from https://github.com/terraform-providers/terraform-provider-azurerm/blob/master/website/docs/d/dedicated_host_group.html.markdown.
        /// </summary>
        [Obsolete("Use GetDedicatedHostGroup.InvokeAsync() instead")]
        public static Task<GetDedicatedHostGroupResult> GetDedicatedHostGroup(GetDedicatedHostGroupArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetDedicatedHostGroupResult>("azure:compute/getDedicatedHostGroup:getDedicatedHostGroup", args ?? InvokeArgs.Empty, options.WithVersion());
    }
    public static class GetDedicatedHostGroup
    {
        /// <summary>
        /// Use this data source to access information about an existing Dedicated Host Group.
        /// 
        /// &gt; This content is derived from https://github.com/terraform-providers/terraform-provider-azurerm/blob/master/website/docs/d/dedicated_host_group.html.markdown.
        /// </summary>
        public static Task<GetDedicatedHostGroupResult> InvokeAsync(GetDedicatedHostGroupArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetDedicatedHostGroupResult>("azure:compute/getDedicatedHostGroup:getDedicatedHostGroup", args ?? InvokeArgs.Empty, options.WithVersion());
    }

    public sealed class GetDedicatedHostGroupArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// Specifies the name of the Dedicated Host Group.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        /// <summary>
        /// Specifies the name of the resource group the Dedicated Host Group is located in.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetDedicatedHostGroupArgs()
        {
        }
    }

    [OutputType]
    public sealed class GetDedicatedHostGroupResult
    {
        /// <summary>
        /// The Azure location where the Dedicated Host Group exists.
        /// </summary>
        public readonly string Location;
        public readonly string Name;
        /// <summary>
        /// The number of fault domains that the Dedicated Host Group spans.
        /// </summary>
        public readonly int PlatformFaultDomainCount;
        public readonly string ResourceGroupName;
        /// <summary>
        /// A mapping of tags assigned to the resource.
        /// </summary>
        public readonly ImmutableDictionary<string, string> Tags;
        /// <summary>
        /// The Availability Zones in which this Dedicated Host Group is located.
        /// </summary>
        public readonly ImmutableArray<string> Zones;
        /// <summary>
        /// id is the provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;

        [OutputConstructor]
        private GetDedicatedHostGroupResult(
            string location,
            string name,
            int platformFaultDomainCount,
            string resourceGroupName,
            ImmutableDictionary<string, string> tags,
            ImmutableArray<string> zones,
            string id)
        {
            Location = location;
            Name = name;
            PlatformFaultDomainCount = platformFaultDomainCount;
            ResourceGroupName = resourceGroupName;
            Tags = tags;
            Zones = zones;
            Id = id;
        }
    }
}
