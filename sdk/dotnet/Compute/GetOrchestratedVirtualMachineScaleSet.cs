// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Compute
{
    public static class GetOrchestratedVirtualMachineScaleSet
    {
        /// <summary>
        /// Use this data source to access information about an existing Orchestrated Virtual Machine Scale Set.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Azure = Pulumi.Azure;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Azure.Compute.GetOrchestratedVirtualMachineScaleSet.Invoke(new()
        ///     {
        ///         Name = "existing",
        ///         ResourceGroupName = "existing",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["id"] = example.Apply(getOrchestratedVirtualMachineScaleSetResult =&gt; getOrchestratedVirtualMachineScaleSetResult.Id),
        ///     };
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetOrchestratedVirtualMachineScaleSetResult> InvokeAsync(GetOrchestratedVirtualMachineScaleSetArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetOrchestratedVirtualMachineScaleSetResult>("azure:compute/getOrchestratedVirtualMachineScaleSet:getOrchestratedVirtualMachineScaleSet", args ?? new GetOrchestratedVirtualMachineScaleSetArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to access information about an existing Orchestrated Virtual Machine Scale Set.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Azure = Pulumi.Azure;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Azure.Compute.GetOrchestratedVirtualMachineScaleSet.Invoke(new()
        ///     {
        ///         Name = "existing",
        ///         ResourceGroupName = "existing",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["id"] = example.Apply(getOrchestratedVirtualMachineScaleSetResult =&gt; getOrchestratedVirtualMachineScaleSetResult.Id),
        ///     };
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetOrchestratedVirtualMachineScaleSetResult> Invoke(GetOrchestratedVirtualMachineScaleSetInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetOrchestratedVirtualMachineScaleSetResult>("azure:compute/getOrchestratedVirtualMachineScaleSet:getOrchestratedVirtualMachineScaleSet", args ?? new GetOrchestratedVirtualMachineScaleSetInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetOrchestratedVirtualMachineScaleSetArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of this Orchestrated Virtual Machine Scale Set.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        /// <summary>
        /// The name of the Resource Group where the Orchestrated Virtual Machine Scale Set exists.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetOrchestratedVirtualMachineScaleSetArgs()
        {
        }
        public static new GetOrchestratedVirtualMachineScaleSetArgs Empty => new GetOrchestratedVirtualMachineScaleSetArgs();
    }

    public sealed class GetOrchestratedVirtualMachineScaleSetInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of this Orchestrated Virtual Machine Scale Set.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// The name of the Resource Group where the Orchestrated Virtual Machine Scale Set exists.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetOrchestratedVirtualMachineScaleSetInvokeArgs()
        {
        }
        public static new GetOrchestratedVirtualMachineScaleSetInvokeArgs Empty => new GetOrchestratedVirtualMachineScaleSetInvokeArgs();
    }


    [OutputType]
    public sealed class GetOrchestratedVirtualMachineScaleSetResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// A `identity` block as defined below.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetOrchestratedVirtualMachineScaleSetIdentityResult> Identities;
        /// <summary>
        /// The Azure Region in which this Orchestrated Virtual Machine Scale Set exists.
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// The name of the public IP address configuration
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// A list of `network_interface` blocks as defined below.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetOrchestratedVirtualMachineScaleSetNetworkInterfaceResult> NetworkInterfaces;
        public readonly string ResourceGroupName;

        [OutputConstructor]
        private GetOrchestratedVirtualMachineScaleSetResult(
            string id,

            ImmutableArray<Outputs.GetOrchestratedVirtualMachineScaleSetIdentityResult> identities,

            string location,

            string name,

            ImmutableArray<Outputs.GetOrchestratedVirtualMachineScaleSetNetworkInterfaceResult> networkInterfaces,

            string resourceGroupName)
        {
            Id = id;
            Identities = identities;
            Location = location;
            Name = name;
            NetworkInterfaces = networkInterfaces;
            ResourceGroupName = resourceGroupName;
        }
    }
}
