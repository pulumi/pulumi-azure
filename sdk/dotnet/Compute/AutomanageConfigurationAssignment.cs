// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Compute
{
    /// <summary>
    /// Manages a Virtual Machine Automanage Configuration Profile Assignment.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Azure = Pulumi.Azure;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Azure.Core.ResourceGroup("example", new()
    ///     {
    ///         Name = "example-rg",
    ///         Location = "westus",
    ///     });
    /// 
    ///     var exampleVirtualNetwork = new Azure.Network.VirtualNetwork("example", new()
    ///     {
    ///         Name = "examplevnet",
    ///         AddressSpaces = new[]
    ///         {
    ///             "10.0.0.0/16",
    ///         },
    ///         Location = example.Location,
    ///         ResourceGroupName = example.Name,
    ///     });
    /// 
    ///     var exampleSubnet = new Azure.Network.Subnet("example", new()
    ///     {
    ///         Name = "internal",
    ///         ResourceGroupName = example.Name,
    ///         VirtualNetworkName = exampleVirtualNetwork.Name,
    ///         AddressPrefixes = new[]
    ///         {
    ///             "10.0.2.0/24",
    ///         },
    ///     });
    /// 
    ///     var exampleNetworkInterface = new Azure.Network.NetworkInterface("example", new()
    ///     {
    ///         Name = "exampleni",
    ///         Location = example.Location,
    ///         ResourceGroupName = example.Name,
    ///         IpConfigurations = new[]
    ///         {
    ///             new Azure.Network.Inputs.NetworkInterfaceIpConfigurationArgs
    ///             {
    ///                 Name = "internal",
    ///                 SubnetId = exampleSubnet.Id,
    ///                 PrivateIpAddressAllocation = "Dynamic",
    ///             },
    ///         },
    ///     });
    /// 
    ///     var exampleLinuxVirtualMachine = new Azure.Compute.LinuxVirtualMachine("example", new()
    ///     {
    ///         Name = "examplevm",
    ///         ResourceGroupName = example.Name,
    ///         Location = example.Location,
    ///         Size = "Standard_F2",
    ///         AdminUsername = "adminuser",
    ///         AdminPassword = "P@$$w0rd1234!",
    ///         DisablePasswordAuthentication = false,
    ///         NetworkInterfaceIds = new[]
    ///         {
    ///             exampleNetworkInterface.Id,
    ///         },
    ///         OsDisk = new Azure.Compute.Inputs.LinuxVirtualMachineOsDiskArgs
    ///         {
    ///             Caching = "ReadWrite",
    ///             StorageAccountType = "Standard_LRS",
    ///         },
    ///         SourceImageReference = new Azure.Compute.Inputs.LinuxVirtualMachineSourceImageReferenceArgs
    ///         {
    ///             Publisher = "Canonical",
    ///             Offer = "0001-com-ubuntu-server-jammy",
    ///             Sku = "22_04-lts",
    ///             Version = "latest",
    ///         },
    ///     });
    /// 
    ///     var exampleConfiguration = new Azure.Automanage.Configuration("example", new()
    ///     {
    ///         Name = "exampleconfig",
    ///         ResourceGroupName = example.Name,
    ///         Location = example.Location,
    ///     });
    /// 
    ///     var exampleAutomanageConfigurationAssignment = new Azure.Compute.AutomanageConfigurationAssignment("example", new()
    ///     {
    ///         VirtualMachineId = exampleLinuxVirtualMachine.Id,
    ///         ConfigurationId = exampleConfiguration.Id,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## API Providers
    /// 
    /// &lt;!-- This section is generated, changes will be overwritten --&gt;
    /// This resource uses the following Azure API Providers:
    /// 
    /// * `Microsoft.Compute`: 2022-05-04
    /// 
    /// ## Import
    /// 
    /// Virtual Machine Automanage Configuration Profile Assignment can be imported using the `resource id`, e.g.
    /// 
    /// ```sh
    /// $ pulumi import azure:compute/automanageConfigurationAssignment:AutomanageConfigurationAssignment example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Compute/virtualMachines/vm1/providers/Microsoft.AutoManage/configurationProfileAssignments/default
    /// ```
    /// </summary>
    [AzureResourceType("azure:compute/automanageConfigurationAssignment:AutomanageConfigurationAssignment")]
    public partial class AutomanageConfigurationAssignment : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The ARM resource ID of the Automanage Configuration to assign to the Virtual Machine. Changing this forces a new resource to be created.
        /// </summary>
        [Output("configurationId")]
        public Output<string> ConfigurationId { get; private set; } = null!;

        /// <summary>
        /// The ARM resource ID of the Virtual Machine to assign the Automanage Configuration to. Changing this forces a new resource to be created.
        /// </summary>
        [Output("virtualMachineId")]
        public Output<string> VirtualMachineId { get; private set; } = null!;


        /// <summary>
        /// Create a AutomanageConfigurationAssignment resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public AutomanageConfigurationAssignment(string name, AutomanageConfigurationAssignmentArgs args, CustomResourceOptions? options = null)
            : base("azure:compute/automanageConfigurationAssignment:AutomanageConfigurationAssignment", name, args ?? new AutomanageConfigurationAssignmentArgs(), MakeResourceOptions(options, ""))
        {
        }

        private AutomanageConfigurationAssignment(string name, Input<string> id, AutomanageConfigurationAssignmentState? state = null, CustomResourceOptions? options = null)
            : base("azure:compute/automanageConfigurationAssignment:AutomanageConfigurationAssignment", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing AutomanageConfigurationAssignment resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static AutomanageConfigurationAssignment Get(string name, Input<string> id, AutomanageConfigurationAssignmentState? state = null, CustomResourceOptions? options = null)
        {
            return new AutomanageConfigurationAssignment(name, id, state, options);
        }
    }

    public sealed class AutomanageConfigurationAssignmentArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ARM resource ID of the Automanage Configuration to assign to the Virtual Machine. Changing this forces a new resource to be created.
        /// </summary>
        [Input("configurationId", required: true)]
        public Input<string> ConfigurationId { get; set; } = null!;

        /// <summary>
        /// The ARM resource ID of the Virtual Machine to assign the Automanage Configuration to. Changing this forces a new resource to be created.
        /// </summary>
        [Input("virtualMachineId", required: true)]
        public Input<string> VirtualMachineId { get; set; } = null!;

        public AutomanageConfigurationAssignmentArgs()
        {
        }
        public static new AutomanageConfigurationAssignmentArgs Empty => new AutomanageConfigurationAssignmentArgs();
    }

    public sealed class AutomanageConfigurationAssignmentState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ARM resource ID of the Automanage Configuration to assign to the Virtual Machine. Changing this forces a new resource to be created.
        /// </summary>
        [Input("configurationId")]
        public Input<string>? ConfigurationId { get; set; }

        /// <summary>
        /// The ARM resource ID of the Virtual Machine to assign the Automanage Configuration to. Changing this forces a new resource to be created.
        /// </summary>
        [Input("virtualMachineId")]
        public Input<string>? VirtualMachineId { get; set; }

        public AutomanageConfigurationAssignmentState()
        {
        }
        public static new AutomanageConfigurationAssignmentState Empty => new AutomanageConfigurationAssignmentState();
    }
}
