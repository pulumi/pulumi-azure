// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Compute
{
    /// <summary>
    /// &gt; This content is derived from https://github.com/terraform-providers/terraform-provider-azurerm/blob/master/website/docs/r/virtual_machine_scale_set.html.markdown.
    /// </summary>
    public partial class ScaleSet : Pulumi.CustomResource
    {
        /// <summary>
        /// Automatic OS patches can be applied by Azure to your scaleset. This is particularly useful when `upgrade_policy_mode` is set to `Rolling`. Defaults to `false`.
        /// </summary>
        [Output("automaticOsUpgrade")]
        public Output<bool?> AutomaticOsUpgrade { get; private set; } = null!;

        /// <summary>
        /// A boot diagnostics profile block as referenced below.
        /// </summary>
        [Output("bootDiagnostics")]
        public Output<Outputs.ScaleSetBootDiagnostics?> BootDiagnostics { get; private set; } = null!;

        /// <summary>
        /// Specifies the eviction policy for Virtual Machines in this Scale Set. Possible values are `Deallocate` and `Delete`.
        /// </summary>
        [Output("evictionPolicy")]
        public Output<string?> EvictionPolicy { get; private set; } = null!;

        /// <summary>
        /// Can be specified multiple times to add extension profiles to the scale set. Each `extension` block supports the fields documented below.
        /// </summary>
        [Output("extensions")]
        public Output<ImmutableArray<Outputs.ScaleSetExtensions>> Extensions { get; private set; } = null!;

        /// <summary>
        /// Specifies the identifier for the load balancer health probe. Required when using `Rolling` as your `upgrade_policy_mode`.
        /// </summary>
        [Output("healthProbeId")]
        public Output<string?> HealthProbeId { get; private set; } = null!;

        [Output("identity")]
        public Output<Outputs.ScaleSetIdentity> Identity { get; private set; } = null!;

        /// <summary>
        /// Specifies the Windows OS license type. If supplied, the only allowed values are `Windows_Client` and `Windows_Server`.
        /// </summary>
        [Output("licenseType")]
        public Output<string> LicenseType { get; private set; } = null!;

        /// <summary>
        /// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
        /// </summary>
        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// Specifies the name of the image from the marketplace.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// A collection of network profile block as documented below.
        /// </summary>
        [Output("networkProfiles")]
        public Output<ImmutableArray<Outputs.ScaleSetNetworkProfiles>> NetworkProfiles { get; private set; } = null!;

        /// <summary>
        /// A Virtual Machine OS Profile block as documented below.
        /// </summary>
        [Output("osProfile")]
        public Output<Outputs.ScaleSetOsProfile> OsProfile { get; private set; } = null!;

        /// <summary>
        /// A Linux config block as documented below.
        /// </summary>
        [Output("osProfileLinuxConfig")]
        public Output<Outputs.ScaleSetOsProfileLinuxConfig> OsProfileLinuxConfig { get; private set; } = null!;

        /// <summary>
        /// A collection of Secret blocks as documented below.
        /// </summary>
        [Output("osProfileSecrets")]
        public Output<ImmutableArray<Outputs.ScaleSetOsProfileSecrets>> OsProfileSecrets { get; private set; } = null!;

        /// <summary>
        /// A Windows config block as documented below.
        /// </summary>
        [Output("osProfileWindowsConfig")]
        public Output<Outputs.ScaleSetOsProfileWindowsConfig?> OsProfileWindowsConfig { get; private set; } = null!;

        /// <summary>
        /// Specifies whether the virtual machine scale set should be overprovisioned.
        /// </summary>
        [Output("overprovision")]
        public Output<bool?> Overprovision { get; private set; } = null!;

        /// <summary>
        /// A plan block as documented below.
        /// </summary>
        [Output("plan")]
        public Output<Outputs.ScaleSetPlan?> Plan { get; private set; } = null!;

        /// <summary>
        /// Specifies the priority for the Virtual Machines in the Scale Set. Defaults to `Regular`. Possible values are `Low` and `Regular`.
        /// </summary>
        [Output("priority")]
        public Output<string?> Priority { get; private set; } = null!;

        /// <summary>
        /// The ID of the Proximity Placement Group to which this Virtual Machine should be assigned. Changing this forces a new resource to be created
        /// </summary>
        [Output("proximityPlacementGroupId")]
        public Output<string?> ProximityPlacementGroupId { get; private set; } = null!;

        /// <summary>
        /// The name of the resource group in which to create the virtual machine scale set. Changing this forces a new resource to be created.
        /// </summary>
        [Output("resourceGroupName")]
        public Output<string> ResourceGroupName { get; private set; } = null!;

        /// <summary>
        /// A `rolling_upgrade_policy` block as defined below. This is only applicable when the `upgrade_policy_mode` is `Rolling`.
        /// </summary>
        [Output("rollingUpgradePolicy")]
        public Output<Outputs.ScaleSetRollingUpgradePolicy?> RollingUpgradePolicy { get; private set; } = null!;

        /// <summary>
        /// Specifies whether the scale set is limited to a single placement group with a maximum size of 100 virtual machines. If set to false, managed disks must be used. Default is true. Changing this forces a new resource to be created. See [documentation](http://docs.microsoft.com/en-us/azure/virtual-machine-scale-sets/virtual-machine-scale-sets-placement-groups) for more information.
        /// </summary>
        [Output("singlePlacementGroup")]
        public Output<bool?> SinglePlacementGroup { get; private set; } = null!;

        /// <summary>
        /// Specifies the SKU of the image used to create the virtual machines.
        /// </summary>
        [Output("sku")]
        public Output<Outputs.ScaleSetSku> Sku { get; private set; } = null!;

        /// <summary>
        /// A storage profile data disk block as documented below
        /// </summary>
        [Output("storageProfileDataDisks")]
        public Output<ImmutableArray<Outputs.ScaleSetStorageProfileDataDisks>> StorageProfileDataDisks { get; private set; } = null!;

        /// <summary>
        /// A storage profile image reference block as documented below.
        /// </summary>
        [Output("storageProfileImageReference")]
        public Output<Outputs.ScaleSetStorageProfileImageReference> StorageProfileImageReference { get; private set; } = null!;

        /// <summary>
        /// A storage profile os disk block as documented below
        /// </summary>
        [Output("storageProfileOsDisk")]
        public Output<Outputs.ScaleSetStorageProfileOsDisk> StorageProfileOsDisk { get; private set; } = null!;

        /// <summary>
        /// A mapping of tags to assign to the resource.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, object>> Tags { get; private set; } = null!;

        /// <summary>
        /// Specifies the mode of an upgrade to virtual machines in the scale set. Possible values, `Rolling`, `Manual`, or `Automatic`. When choosing `Rolling`, you will need to set a health probe.
        /// </summary>
        [Output("upgradePolicyMode")]
        public Output<string> UpgradePolicyMode { get; private set; } = null!;

        /// <summary>
        /// A collection of availability zones to spread the Virtual Machines over.
        /// </summary>
        [Output("zones")]
        public Output<ImmutableArray<string>> Zones { get; private set; } = null!;


        /// <summary>
        /// Create a ScaleSet resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ScaleSet(string name, ScaleSetArgs args, CustomResourceOptions? options = null)
            : base("azure:compute/scaleSet:ScaleSet", name, args ?? ResourceArgs.Empty, MakeResourceOptions(options, ""))
        {
        }

        private ScaleSet(string name, Input<string> id, ScaleSetState? state = null, CustomResourceOptions? options = null)
            : base("azure:compute/scaleSet:ScaleSet", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ScaleSet resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ScaleSet Get(string name, Input<string> id, ScaleSetState? state = null, CustomResourceOptions? options = null)
        {
            return new ScaleSet(name, id, state, options);
        }
    }

    public sealed class ScaleSetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Automatic OS patches can be applied by Azure to your scaleset. This is particularly useful when `upgrade_policy_mode` is set to `Rolling`. Defaults to `false`.
        /// </summary>
        [Input("automaticOsUpgrade")]
        public Input<bool>? AutomaticOsUpgrade { get; set; }

        /// <summary>
        /// A boot diagnostics profile block as referenced below.
        /// </summary>
        [Input("bootDiagnostics")]
        public Input<Inputs.ScaleSetBootDiagnosticsArgs>? BootDiagnostics { get; set; }

        /// <summary>
        /// Specifies the eviction policy for Virtual Machines in this Scale Set. Possible values are `Deallocate` and `Delete`.
        /// </summary>
        [Input("evictionPolicy")]
        public Input<string>? EvictionPolicy { get; set; }

        [Input("extensions")]
        private InputList<Inputs.ScaleSetExtensionsArgs>? _extensions;

        /// <summary>
        /// Can be specified multiple times to add extension profiles to the scale set. Each `extension` block supports the fields documented below.
        /// </summary>
        public InputList<Inputs.ScaleSetExtensionsArgs> Extensions
        {
            get => _extensions ?? (_extensions = new InputList<Inputs.ScaleSetExtensionsArgs>());
            set => _extensions = value;
        }

        /// <summary>
        /// Specifies the identifier for the load balancer health probe. Required when using `Rolling` as your `upgrade_policy_mode`.
        /// </summary>
        [Input("healthProbeId")]
        public Input<string>? HealthProbeId { get; set; }

        [Input("identity")]
        public Input<Inputs.ScaleSetIdentityArgs>? Identity { get; set; }

        /// <summary>
        /// Specifies the Windows OS license type. If supplied, the only allowed values are `Windows_Client` and `Windows_Server`.
        /// </summary>
        [Input("licenseType")]
        public Input<string>? LicenseType { get; set; }

        /// <summary>
        /// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// Specifies the name of the image from the marketplace.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("networkProfiles", required: true)]
        private InputList<Inputs.ScaleSetNetworkProfilesArgs>? _networkProfiles;

        /// <summary>
        /// A collection of network profile block as documented below.
        /// </summary>
        public InputList<Inputs.ScaleSetNetworkProfilesArgs> NetworkProfiles
        {
            get => _networkProfiles ?? (_networkProfiles = new InputList<Inputs.ScaleSetNetworkProfilesArgs>());
            set => _networkProfiles = value;
        }

        /// <summary>
        /// A Virtual Machine OS Profile block as documented below.
        /// </summary>
        [Input("osProfile", required: true)]
        public Input<Inputs.ScaleSetOsProfileArgs> OsProfile { get; set; } = null!;

        /// <summary>
        /// A Linux config block as documented below.
        /// </summary>
        [Input("osProfileLinuxConfig")]
        public Input<Inputs.ScaleSetOsProfileLinuxConfigArgs>? OsProfileLinuxConfig { get; set; }

        [Input("osProfileSecrets")]
        private InputList<Inputs.ScaleSetOsProfileSecretsArgs>? _osProfileSecrets;

        /// <summary>
        /// A collection of Secret blocks as documented below.
        /// </summary>
        public InputList<Inputs.ScaleSetOsProfileSecretsArgs> OsProfileSecrets
        {
            get => _osProfileSecrets ?? (_osProfileSecrets = new InputList<Inputs.ScaleSetOsProfileSecretsArgs>());
            set => _osProfileSecrets = value;
        }

        /// <summary>
        /// A Windows config block as documented below.
        /// </summary>
        [Input("osProfileWindowsConfig")]
        public Input<Inputs.ScaleSetOsProfileWindowsConfigArgs>? OsProfileWindowsConfig { get; set; }

        /// <summary>
        /// Specifies whether the virtual machine scale set should be overprovisioned.
        /// </summary>
        [Input("overprovision")]
        public Input<bool>? Overprovision { get; set; }

        /// <summary>
        /// A plan block as documented below.
        /// </summary>
        [Input("plan")]
        public Input<Inputs.ScaleSetPlanArgs>? Plan { get; set; }

        /// <summary>
        /// Specifies the priority for the Virtual Machines in the Scale Set. Defaults to `Regular`. Possible values are `Low` and `Regular`.
        /// </summary>
        [Input("priority")]
        public Input<string>? Priority { get; set; }

        /// <summary>
        /// The ID of the Proximity Placement Group to which this Virtual Machine should be assigned. Changing this forces a new resource to be created
        /// </summary>
        [Input("proximityPlacementGroupId")]
        public Input<string>? ProximityPlacementGroupId { get; set; }

        /// <summary>
        /// The name of the resource group in which to create the virtual machine scale set. Changing this forces a new resource to be created.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// A `rolling_upgrade_policy` block as defined below. This is only applicable when the `upgrade_policy_mode` is `Rolling`.
        /// </summary>
        [Input("rollingUpgradePolicy")]
        public Input<Inputs.ScaleSetRollingUpgradePolicyArgs>? RollingUpgradePolicy { get; set; }

        /// <summary>
        /// Specifies whether the scale set is limited to a single placement group with a maximum size of 100 virtual machines. If set to false, managed disks must be used. Default is true. Changing this forces a new resource to be created. See [documentation](http://docs.microsoft.com/en-us/azure/virtual-machine-scale-sets/virtual-machine-scale-sets-placement-groups) for more information.
        /// </summary>
        [Input("singlePlacementGroup")]
        public Input<bool>? SinglePlacementGroup { get; set; }

        /// <summary>
        /// Specifies the SKU of the image used to create the virtual machines.
        /// </summary>
        [Input("sku", required: true)]
        public Input<Inputs.ScaleSetSkuArgs> Sku { get; set; } = null!;

        [Input("storageProfileDataDisks")]
        private InputList<Inputs.ScaleSetStorageProfileDataDisksArgs>? _storageProfileDataDisks;

        /// <summary>
        /// A storage profile data disk block as documented below
        /// </summary>
        public InputList<Inputs.ScaleSetStorageProfileDataDisksArgs> StorageProfileDataDisks
        {
            get => _storageProfileDataDisks ?? (_storageProfileDataDisks = new InputList<Inputs.ScaleSetStorageProfileDataDisksArgs>());
            set => _storageProfileDataDisks = value;
        }

        /// <summary>
        /// A storage profile image reference block as documented below.
        /// </summary>
        [Input("storageProfileImageReference")]
        public Input<Inputs.ScaleSetStorageProfileImageReferenceArgs>? StorageProfileImageReference { get; set; }

        /// <summary>
        /// A storage profile os disk block as documented below
        /// </summary>
        [Input("storageProfileOsDisk", required: true)]
        public Input<Inputs.ScaleSetStorageProfileOsDiskArgs> StorageProfileOsDisk { get; set; } = null!;

        [Input("tags")]
        private InputMap<object>? _tags;

        /// <summary>
        /// A mapping of tags to assign to the resource.
        /// </summary>
        public InputMap<object> Tags
        {
            get => _tags ?? (_tags = new InputMap<object>());
            set => _tags = value;
        }

        /// <summary>
        /// Specifies the mode of an upgrade to virtual machines in the scale set. Possible values, `Rolling`, `Manual`, or `Automatic`. When choosing `Rolling`, you will need to set a health probe.
        /// </summary>
        [Input("upgradePolicyMode", required: true)]
        public Input<string> UpgradePolicyMode { get; set; } = null!;

        [Input("zones")]
        private InputList<string>? _zones;

        /// <summary>
        /// A collection of availability zones to spread the Virtual Machines over.
        /// </summary>
        public InputList<string> Zones
        {
            get => _zones ?? (_zones = new InputList<string>());
            set => _zones = value;
        }

        public ScaleSetArgs()
        {
        }
    }

    public sealed class ScaleSetState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Automatic OS patches can be applied by Azure to your scaleset. This is particularly useful when `upgrade_policy_mode` is set to `Rolling`. Defaults to `false`.
        /// </summary>
        [Input("automaticOsUpgrade")]
        public Input<bool>? AutomaticOsUpgrade { get; set; }

        /// <summary>
        /// A boot diagnostics profile block as referenced below.
        /// </summary>
        [Input("bootDiagnostics")]
        public Input<Inputs.ScaleSetBootDiagnosticsGetArgs>? BootDiagnostics { get; set; }

        /// <summary>
        /// Specifies the eviction policy for Virtual Machines in this Scale Set. Possible values are `Deallocate` and `Delete`.
        /// </summary>
        [Input("evictionPolicy")]
        public Input<string>? EvictionPolicy { get; set; }

        [Input("extensions")]
        private InputList<Inputs.ScaleSetExtensionsGetArgs>? _extensions;

        /// <summary>
        /// Can be specified multiple times to add extension profiles to the scale set. Each `extension` block supports the fields documented below.
        /// </summary>
        public InputList<Inputs.ScaleSetExtensionsGetArgs> Extensions
        {
            get => _extensions ?? (_extensions = new InputList<Inputs.ScaleSetExtensionsGetArgs>());
            set => _extensions = value;
        }

        /// <summary>
        /// Specifies the identifier for the load balancer health probe. Required when using `Rolling` as your `upgrade_policy_mode`.
        /// </summary>
        [Input("healthProbeId")]
        public Input<string>? HealthProbeId { get; set; }

        [Input("identity")]
        public Input<Inputs.ScaleSetIdentityGetArgs>? Identity { get; set; }

        /// <summary>
        /// Specifies the Windows OS license type. If supplied, the only allowed values are `Windows_Client` and `Windows_Server`.
        /// </summary>
        [Input("licenseType")]
        public Input<string>? LicenseType { get; set; }

        /// <summary>
        /// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// Specifies the name of the image from the marketplace.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("networkProfiles")]
        private InputList<Inputs.ScaleSetNetworkProfilesGetArgs>? _networkProfiles;

        /// <summary>
        /// A collection of network profile block as documented below.
        /// </summary>
        public InputList<Inputs.ScaleSetNetworkProfilesGetArgs> NetworkProfiles
        {
            get => _networkProfiles ?? (_networkProfiles = new InputList<Inputs.ScaleSetNetworkProfilesGetArgs>());
            set => _networkProfiles = value;
        }

        /// <summary>
        /// A Virtual Machine OS Profile block as documented below.
        /// </summary>
        [Input("osProfile")]
        public Input<Inputs.ScaleSetOsProfileGetArgs>? OsProfile { get; set; }

        /// <summary>
        /// A Linux config block as documented below.
        /// </summary>
        [Input("osProfileLinuxConfig")]
        public Input<Inputs.ScaleSetOsProfileLinuxConfigGetArgs>? OsProfileLinuxConfig { get; set; }

        [Input("osProfileSecrets")]
        private InputList<Inputs.ScaleSetOsProfileSecretsGetArgs>? _osProfileSecrets;

        /// <summary>
        /// A collection of Secret blocks as documented below.
        /// </summary>
        public InputList<Inputs.ScaleSetOsProfileSecretsGetArgs> OsProfileSecrets
        {
            get => _osProfileSecrets ?? (_osProfileSecrets = new InputList<Inputs.ScaleSetOsProfileSecretsGetArgs>());
            set => _osProfileSecrets = value;
        }

        /// <summary>
        /// A Windows config block as documented below.
        /// </summary>
        [Input("osProfileWindowsConfig")]
        public Input<Inputs.ScaleSetOsProfileWindowsConfigGetArgs>? OsProfileWindowsConfig { get; set; }

        /// <summary>
        /// Specifies whether the virtual machine scale set should be overprovisioned.
        /// </summary>
        [Input("overprovision")]
        public Input<bool>? Overprovision { get; set; }

        /// <summary>
        /// A plan block as documented below.
        /// </summary>
        [Input("plan")]
        public Input<Inputs.ScaleSetPlanGetArgs>? Plan { get; set; }

        /// <summary>
        /// Specifies the priority for the Virtual Machines in the Scale Set. Defaults to `Regular`. Possible values are `Low` and `Regular`.
        /// </summary>
        [Input("priority")]
        public Input<string>? Priority { get; set; }

        /// <summary>
        /// The ID of the Proximity Placement Group to which this Virtual Machine should be assigned. Changing this forces a new resource to be created
        /// </summary>
        [Input("proximityPlacementGroupId")]
        public Input<string>? ProximityPlacementGroupId { get; set; }

        /// <summary>
        /// The name of the resource group in which to create the virtual machine scale set. Changing this forces a new resource to be created.
        /// </summary>
        [Input("resourceGroupName")]
        public Input<string>? ResourceGroupName { get; set; }

        /// <summary>
        /// A `rolling_upgrade_policy` block as defined below. This is only applicable when the `upgrade_policy_mode` is `Rolling`.
        /// </summary>
        [Input("rollingUpgradePolicy")]
        public Input<Inputs.ScaleSetRollingUpgradePolicyGetArgs>? RollingUpgradePolicy { get; set; }

        /// <summary>
        /// Specifies whether the scale set is limited to a single placement group with a maximum size of 100 virtual machines. If set to false, managed disks must be used. Default is true. Changing this forces a new resource to be created. See [documentation](http://docs.microsoft.com/en-us/azure/virtual-machine-scale-sets/virtual-machine-scale-sets-placement-groups) for more information.
        /// </summary>
        [Input("singlePlacementGroup")]
        public Input<bool>? SinglePlacementGroup { get; set; }

        /// <summary>
        /// Specifies the SKU of the image used to create the virtual machines.
        /// </summary>
        [Input("sku")]
        public Input<Inputs.ScaleSetSkuGetArgs>? Sku { get; set; }

        [Input("storageProfileDataDisks")]
        private InputList<Inputs.ScaleSetStorageProfileDataDisksGetArgs>? _storageProfileDataDisks;

        /// <summary>
        /// A storage profile data disk block as documented below
        /// </summary>
        public InputList<Inputs.ScaleSetStorageProfileDataDisksGetArgs> StorageProfileDataDisks
        {
            get => _storageProfileDataDisks ?? (_storageProfileDataDisks = new InputList<Inputs.ScaleSetStorageProfileDataDisksGetArgs>());
            set => _storageProfileDataDisks = value;
        }

        /// <summary>
        /// A storage profile image reference block as documented below.
        /// </summary>
        [Input("storageProfileImageReference")]
        public Input<Inputs.ScaleSetStorageProfileImageReferenceGetArgs>? StorageProfileImageReference { get; set; }

        /// <summary>
        /// A storage profile os disk block as documented below
        /// </summary>
        [Input("storageProfileOsDisk")]
        public Input<Inputs.ScaleSetStorageProfileOsDiskGetArgs>? StorageProfileOsDisk { get; set; }

        [Input("tags")]
        private InputMap<object>? _tags;

        /// <summary>
        /// A mapping of tags to assign to the resource.
        /// </summary>
        public InputMap<object> Tags
        {
            get => _tags ?? (_tags = new InputMap<object>());
            set => _tags = value;
        }

        /// <summary>
        /// Specifies the mode of an upgrade to virtual machines in the scale set. Possible values, `Rolling`, `Manual`, or `Automatic`. When choosing `Rolling`, you will need to set a health probe.
        /// </summary>
        [Input("upgradePolicyMode")]
        public Input<string>? UpgradePolicyMode { get; set; }

        [Input("zones")]
        private InputList<string>? _zones;

        /// <summary>
        /// A collection of availability zones to spread the Virtual Machines over.
        /// </summary>
        public InputList<string> Zones
        {
            get => _zones ?? (_zones = new InputList<string>());
            set => _zones = value;
        }

        public ScaleSetState()
        {
        }
    }

    namespace Inputs
    {

    public sealed class ScaleSetBootDiagnosticsArgs : Pulumi.ResourceArgs
    {
        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        [Input("storageUri", required: true)]
        public Input<string> StorageUri { get; set; } = null!;

        public ScaleSetBootDiagnosticsArgs()
        {
        }
    }

    public sealed class ScaleSetBootDiagnosticsGetArgs : Pulumi.ResourceArgs
    {
        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        [Input("storageUri", required: true)]
        public Input<string> StorageUri { get; set; } = null!;

        public ScaleSetBootDiagnosticsGetArgs()
        {
        }
    }

    public sealed class ScaleSetExtensionsArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies whether or not to use the latest minor version available.
        /// </summary>
        [Input("autoUpgradeMinorVersion")]
        public Input<bool>? AutoUpgradeMinorVersion { get; set; }

        /// <summary>
        /// Specifies the name of the image from the marketplace.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// The protected_settings passed to the extension, like settings, these are specified as a JSON object in a string.
        /// </summary>
        [Input("protectedSettings")]
        public Input<string>? ProtectedSettings { get; set; }

        [Input("provisionAfterExtensions")]
        private InputList<string>? _provisionAfterExtensions;

        /// <summary>
        /// Specifies a dependency array of extensions required to be executed before, the array stores the name of each extension.
        /// </summary>
        public InputList<string> ProvisionAfterExtensions
        {
            get => _provisionAfterExtensions ?? (_provisionAfterExtensions = new InputList<string>());
            set => _provisionAfterExtensions = value;
        }

        /// <summary>
        /// Specifies the publisher of the image.
        /// </summary>
        [Input("publisher", required: true)]
        public Input<string> Publisher { get; set; } = null!;

        /// <summary>
        /// The settings passed to the extension, these are specified as a JSON object in a string.
        /// </summary>
        [Input("settings")]
        public Input<string>? Settings { get; set; }

        /// <summary>
        /// The type of extension, available types for a publisher can be found using the Azure CLI.
        /// </summary>
        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        /// <summary>
        /// Specifies the version of the extension to use, available versions can be found using the Azure CLI.
        /// </summary>
        [Input("typeHandlerVersion", required: true)]
        public Input<string> TypeHandlerVersion { get; set; } = null!;

        public ScaleSetExtensionsArgs()
        {
        }
    }

    public sealed class ScaleSetExtensionsGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies whether or not to use the latest minor version available.
        /// </summary>
        [Input("autoUpgradeMinorVersion")]
        public Input<bool>? AutoUpgradeMinorVersion { get; set; }

        /// <summary>
        /// Specifies the name of the image from the marketplace.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// The protected_settings passed to the extension, like settings, these are specified as a JSON object in a string.
        /// </summary>
        [Input("protectedSettings")]
        public Input<string>? ProtectedSettings { get; set; }

        [Input("provisionAfterExtensions")]
        private InputList<string>? _provisionAfterExtensions;

        /// <summary>
        /// Specifies a dependency array of extensions required to be executed before, the array stores the name of each extension.
        /// </summary>
        public InputList<string> ProvisionAfterExtensions
        {
            get => _provisionAfterExtensions ?? (_provisionAfterExtensions = new InputList<string>());
            set => _provisionAfterExtensions = value;
        }

        /// <summary>
        /// Specifies the publisher of the image.
        /// </summary>
        [Input("publisher", required: true)]
        public Input<string> Publisher { get; set; } = null!;

        /// <summary>
        /// The settings passed to the extension, these are specified as a JSON object in a string.
        /// </summary>
        [Input("settings")]
        public Input<string>? Settings { get; set; }

        /// <summary>
        /// The type of extension, available types for a publisher can be found using the Azure CLI.
        /// </summary>
        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        /// <summary>
        /// Specifies the version of the extension to use, available versions can be found using the Azure CLI.
        /// </summary>
        [Input("typeHandlerVersion", required: true)]
        public Input<string> TypeHandlerVersion { get; set; } = null!;

        public ScaleSetExtensionsGetArgs()
        {
        }
    }

    public sealed class ScaleSetIdentityArgs : Pulumi.ResourceArgs
    {
        [Input("identityIds")]
        private InputList<string>? _identityIds;

        /// <summary>
        /// Specifies a list of user managed identity ids to be assigned to the VMSS. Required if `type` is `UserAssigned`.
        /// </summary>
        public InputList<string> IdentityIds
        {
            get => _identityIds ?? (_identityIds = new InputList<string>());
            set => _identityIds = value;
        }

        [Input("principalId")]
        public Input<string>? PrincipalId { get; set; }

        /// <summary>
        /// The type of extension, available types for a publisher can be found using the Azure CLI.
        /// </summary>
        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        public ScaleSetIdentityArgs()
        {
        }
    }

    public sealed class ScaleSetIdentityGetArgs : Pulumi.ResourceArgs
    {
        [Input("identityIds")]
        private InputList<string>? _identityIds;

        /// <summary>
        /// Specifies a list of user managed identity ids to be assigned to the VMSS. Required if `type` is `UserAssigned`.
        /// </summary>
        public InputList<string> IdentityIds
        {
            get => _identityIds ?? (_identityIds = new InputList<string>());
            set => _identityIds = value;
        }

        [Input("principalId")]
        public Input<string>? PrincipalId { get; set; }

        /// <summary>
        /// The type of extension, available types for a publisher can be found using the Azure CLI.
        /// </summary>
        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        public ScaleSetIdentityGetArgs()
        {
        }
    }

    public sealed class ScaleSetNetworkProfilesArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies whether to enable accelerated networking or not. Defaults to `false`.
        /// </summary>
        [Input("acceleratedNetworking")]
        public Input<bool>? AcceleratedNetworking { get; set; }

        /// <summary>
        /// A dns_settings block as documented below.
        /// </summary>
        [Input("dnsSettings")]
        public Input<ScaleSetNetworkProfilesDnsSettingsArgs>? DnsSettings { get; set; }

        [Input("ipConfigurations", required: true)]
        private InputList<ScaleSetNetworkProfilesIpConfigurationsArgs>? _ipConfigurations;

        /// <summary>
        /// An ip_configuration block as documented below.
        /// </summary>
        public InputList<ScaleSetNetworkProfilesIpConfigurationsArgs> IpConfigurations
        {
            get => _ipConfigurations ?? (_ipConfigurations = new InputList<ScaleSetNetworkProfilesIpConfigurationsArgs>());
            set => _ipConfigurations = value;
        }

        /// <summary>
        /// Whether IP forwarding is enabled on this NIC. Defaults to `false`.
        /// </summary>
        [Input("ipForwarding")]
        public Input<bool>? IpForwarding { get; set; }

        /// <summary>
        /// Specifies the name of the image from the marketplace.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// Specifies the identifier for the network security group.
        /// </summary>
        [Input("networkSecurityGroupId")]
        public Input<string>? NetworkSecurityGroupId { get; set; }

        /// <summary>
        /// Specifies if this ip_configuration is the primary one.
        /// </summary>
        [Input("primary", required: true)]
        public Input<bool> Primary { get; set; } = null!;

        public ScaleSetNetworkProfilesArgs()
        {
        }
    }

    public sealed class ScaleSetNetworkProfilesDnsSettingsArgs : Pulumi.ResourceArgs
    {
        [Input("dnsServers", required: true)]
        private InputList<string>? _dnsServers;

        /// <summary>
        /// Specifies an array of dns servers.
        /// </summary>
        public InputList<string> DnsServers
        {
            get => _dnsServers ?? (_dnsServers = new InputList<string>());
            set => _dnsServers = value;
        }

        public ScaleSetNetworkProfilesDnsSettingsArgs()
        {
        }
    }

    public sealed class ScaleSetNetworkProfilesDnsSettingsGetArgs : Pulumi.ResourceArgs
    {
        [Input("dnsServers", required: true)]
        private InputList<string>? _dnsServers;

        /// <summary>
        /// Specifies an array of dns servers.
        /// </summary>
        public InputList<string> DnsServers
        {
            get => _dnsServers ?? (_dnsServers = new InputList<string>());
            set => _dnsServers = value;
        }

        public ScaleSetNetworkProfilesDnsSettingsGetArgs()
        {
        }
    }

    public sealed class ScaleSetNetworkProfilesGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies whether to enable accelerated networking or not. Defaults to `false`.
        /// </summary>
        [Input("acceleratedNetworking")]
        public Input<bool>? AcceleratedNetworking { get; set; }

        /// <summary>
        /// A dns_settings block as documented below.
        /// </summary>
        [Input("dnsSettings")]
        public Input<ScaleSetNetworkProfilesDnsSettingsGetArgs>? DnsSettings { get; set; }

        [Input("ipConfigurations", required: true)]
        private InputList<ScaleSetNetworkProfilesIpConfigurationsGetArgs>? _ipConfigurations;

        /// <summary>
        /// An ip_configuration block as documented below.
        /// </summary>
        public InputList<ScaleSetNetworkProfilesIpConfigurationsGetArgs> IpConfigurations
        {
            get => _ipConfigurations ?? (_ipConfigurations = new InputList<ScaleSetNetworkProfilesIpConfigurationsGetArgs>());
            set => _ipConfigurations = value;
        }

        /// <summary>
        /// Whether IP forwarding is enabled on this NIC. Defaults to `false`.
        /// </summary>
        [Input("ipForwarding")]
        public Input<bool>? IpForwarding { get; set; }

        /// <summary>
        /// Specifies the name of the image from the marketplace.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// Specifies the identifier for the network security group.
        /// </summary>
        [Input("networkSecurityGroupId")]
        public Input<string>? NetworkSecurityGroupId { get; set; }

        /// <summary>
        /// Specifies if this ip_configuration is the primary one.
        /// </summary>
        [Input("primary", required: true)]
        public Input<bool> Primary { get; set; } = null!;

        public ScaleSetNetworkProfilesGetArgs()
        {
        }
    }

    public sealed class ScaleSetNetworkProfilesIpConfigurationsArgs : Pulumi.ResourceArgs
    {
        [Input("applicationGatewayBackendAddressPoolIds")]
        private InputList<string>? _applicationGatewayBackendAddressPoolIds;

        /// <summary>
        /// Specifies an array of references to backend address pools of application gateways. A scale set can reference backend address pools of multiple application gateways. Multiple scale sets cannot use the same application gateway.
        /// </summary>
        public InputList<string> ApplicationGatewayBackendAddressPoolIds
        {
            get => _applicationGatewayBackendAddressPoolIds ?? (_applicationGatewayBackendAddressPoolIds = new InputList<string>());
            set => _applicationGatewayBackendAddressPoolIds = value;
        }

        [Input("applicationSecurityGroupIds")]
        private InputList<string>? _applicationSecurityGroupIds;

        /// <summary>
        /// Specifies up to `20` application security group IDs.
        /// </summary>
        public InputList<string> ApplicationSecurityGroupIds
        {
            get => _applicationSecurityGroupIds ?? (_applicationSecurityGroupIds = new InputList<string>());
            set => _applicationSecurityGroupIds = value;
        }

        [Input("loadBalancerBackendAddressPoolIds")]
        private InputList<string>? _loadBalancerBackendAddressPoolIds;

        /// <summary>
        /// Specifies an array of references to backend address pools of load balancers. A scale set can reference backend address pools of one public and one internal load balancer. Multiple scale sets cannot use the same load balancer.
        /// </summary>
        public InputList<string> LoadBalancerBackendAddressPoolIds
        {
            get => _loadBalancerBackendAddressPoolIds ?? (_loadBalancerBackendAddressPoolIds = new InputList<string>());
            set => _loadBalancerBackendAddressPoolIds = value;
        }

        [Input("loadBalancerInboundNatRulesIds")]
        private InputList<string>? _loadBalancerInboundNatRulesIds;

        /// <summary>
        /// Specifies an array of references to inbound NAT pools for load balancers. A scale set can reference inbound nat pools of one public and one internal load balancer. Multiple scale sets cannot use the same load balancer.
        /// </summary>
        public InputList<string> LoadBalancerInboundNatRulesIds
        {
            get => _loadBalancerInboundNatRulesIds ?? (_loadBalancerInboundNatRulesIds = new InputList<string>());
            set => _loadBalancerInboundNatRulesIds = value;
        }

        /// <summary>
        /// Specifies the name of the image from the marketplace.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// Specifies if this ip_configuration is the primary one.
        /// </summary>
        [Input("primary", required: true)]
        public Input<bool> Primary { get; set; } = null!;

        /// <summary>
        /// Describes a virtual machines scale set IP Configuration's PublicIPAddress configuration. The public_ip_address_configuration is documented below.
        /// </summary>
        [Input("publicIpAddressConfiguration")]
        public Input<ScaleSetNetworkProfilesIpConfigurationsPublicIpAddressConfigurationArgs>? PublicIpAddressConfiguration { get; set; }

        /// <summary>
        /// Specifies the identifier of the subnet.
        /// </summary>
        [Input("subnetId", required: true)]
        public Input<string> SubnetId { get; set; } = null!;

        public ScaleSetNetworkProfilesIpConfigurationsArgs()
        {
        }
    }

    public sealed class ScaleSetNetworkProfilesIpConfigurationsGetArgs : Pulumi.ResourceArgs
    {
        [Input("applicationGatewayBackendAddressPoolIds")]
        private InputList<string>? _applicationGatewayBackendAddressPoolIds;

        /// <summary>
        /// Specifies an array of references to backend address pools of application gateways. A scale set can reference backend address pools of multiple application gateways. Multiple scale sets cannot use the same application gateway.
        /// </summary>
        public InputList<string> ApplicationGatewayBackendAddressPoolIds
        {
            get => _applicationGatewayBackendAddressPoolIds ?? (_applicationGatewayBackendAddressPoolIds = new InputList<string>());
            set => _applicationGatewayBackendAddressPoolIds = value;
        }

        [Input("applicationSecurityGroupIds")]
        private InputList<string>? _applicationSecurityGroupIds;

        /// <summary>
        /// Specifies up to `20` application security group IDs.
        /// </summary>
        public InputList<string> ApplicationSecurityGroupIds
        {
            get => _applicationSecurityGroupIds ?? (_applicationSecurityGroupIds = new InputList<string>());
            set => _applicationSecurityGroupIds = value;
        }

        [Input("loadBalancerBackendAddressPoolIds")]
        private InputList<string>? _loadBalancerBackendAddressPoolIds;

        /// <summary>
        /// Specifies an array of references to backend address pools of load balancers. A scale set can reference backend address pools of one public and one internal load balancer. Multiple scale sets cannot use the same load balancer.
        /// </summary>
        public InputList<string> LoadBalancerBackendAddressPoolIds
        {
            get => _loadBalancerBackendAddressPoolIds ?? (_loadBalancerBackendAddressPoolIds = new InputList<string>());
            set => _loadBalancerBackendAddressPoolIds = value;
        }

        [Input("loadBalancerInboundNatRulesIds")]
        private InputList<string>? _loadBalancerInboundNatRulesIds;

        /// <summary>
        /// Specifies an array of references to inbound NAT pools for load balancers. A scale set can reference inbound nat pools of one public and one internal load balancer. Multiple scale sets cannot use the same load balancer.
        /// </summary>
        public InputList<string> LoadBalancerInboundNatRulesIds
        {
            get => _loadBalancerInboundNatRulesIds ?? (_loadBalancerInboundNatRulesIds = new InputList<string>());
            set => _loadBalancerInboundNatRulesIds = value;
        }

        /// <summary>
        /// Specifies the name of the image from the marketplace.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// Specifies if this ip_configuration is the primary one.
        /// </summary>
        [Input("primary", required: true)]
        public Input<bool> Primary { get; set; } = null!;

        /// <summary>
        /// Describes a virtual machines scale set IP Configuration's PublicIPAddress configuration. The public_ip_address_configuration is documented below.
        /// </summary>
        [Input("publicIpAddressConfiguration")]
        public Input<ScaleSetNetworkProfilesIpConfigurationsPublicIpAddressConfigurationGetArgs>? PublicIpAddressConfiguration { get; set; }

        /// <summary>
        /// Specifies the identifier of the subnet.
        /// </summary>
        [Input("subnetId", required: true)]
        public Input<string> SubnetId { get; set; } = null!;

        public ScaleSetNetworkProfilesIpConfigurationsGetArgs()
        {
        }
    }

    public sealed class ScaleSetNetworkProfilesIpConfigurationsPublicIpAddressConfigurationArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The domain name label for the dns settings.
        /// </summary>
        [Input("domainNameLabel", required: true)]
        public Input<string> DomainNameLabel { get; set; } = null!;

        /// <summary>
        /// The idle timeout in minutes. This value must be between 4 and 30.
        /// </summary>
        [Input("idleTimeout", required: true)]
        public Input<int> IdleTimeout { get; set; } = null!;

        /// <summary>
        /// Specifies the name of the image from the marketplace.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        public ScaleSetNetworkProfilesIpConfigurationsPublicIpAddressConfigurationArgs()
        {
        }
    }

    public sealed class ScaleSetNetworkProfilesIpConfigurationsPublicIpAddressConfigurationGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The domain name label for the dns settings.
        /// </summary>
        [Input("domainNameLabel", required: true)]
        public Input<string> DomainNameLabel { get; set; } = null!;

        /// <summary>
        /// The idle timeout in minutes. This value must be between 4 and 30.
        /// </summary>
        [Input("idleTimeout", required: true)]
        public Input<int> IdleTimeout { get; set; } = null!;

        /// <summary>
        /// Specifies the name of the image from the marketplace.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        public ScaleSetNetworkProfilesIpConfigurationsPublicIpAddressConfigurationGetArgs()
        {
        }
    }

    public sealed class ScaleSetOsProfileArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies the administrator password to use for all the instances of virtual machines in a scale set.
        /// </summary>
        [Input("adminPassword")]
        public Input<string>? AdminPassword { get; set; }

        /// <summary>
        /// Specifies the administrator account name to use for all the instances of virtual machines in the scale set.
        /// </summary>
        [Input("adminUsername", required: true)]
        public Input<string> AdminUsername { get; set; } = null!;

        /// <summary>
        /// Specifies the computer name prefix for all of the virtual machines in the scale set. Computer name prefixes must be 1 to 9 characters long for windows images and 1 - 58 for linux. Changing this forces a new resource to be created.
        /// </summary>
        [Input("computerNamePrefix", required: true)]
        public Input<string> ComputerNamePrefix { get; set; } = null!;

        /// <summary>
        /// Specifies custom data to supply to the machine. On linux-based systems, this can be used as a cloud-init script. On other systems, this will be copied as a file on disk. Internally, this provider will base64 encode this value before sending it to the API. The maximum length of the binary array is 65535 bytes.
        /// </summary>
        [Input("customData")]
        public Input<string>? CustomData { get; set; }

        public ScaleSetOsProfileArgs()
        {
        }
    }

    public sealed class ScaleSetOsProfileGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies the administrator password to use for all the instances of virtual machines in a scale set.
        /// </summary>
        [Input("adminPassword")]
        public Input<string>? AdminPassword { get; set; }

        /// <summary>
        /// Specifies the administrator account name to use for all the instances of virtual machines in the scale set.
        /// </summary>
        [Input("adminUsername", required: true)]
        public Input<string> AdminUsername { get; set; } = null!;

        /// <summary>
        /// Specifies the computer name prefix for all of the virtual machines in the scale set. Computer name prefixes must be 1 to 9 characters long for windows images and 1 - 58 for linux. Changing this forces a new resource to be created.
        /// </summary>
        [Input("computerNamePrefix", required: true)]
        public Input<string> ComputerNamePrefix { get; set; } = null!;

        /// <summary>
        /// Specifies custom data to supply to the machine. On linux-based systems, this can be used as a cloud-init script. On other systems, this will be copied as a file on disk. Internally, this provider will base64 encode this value before sending it to the API. The maximum length of the binary array is 65535 bytes.
        /// </summary>
        [Input("customData")]
        public Input<string>? CustomData { get; set; }

        public ScaleSetOsProfileGetArgs()
        {
        }
    }

    public sealed class ScaleSetOsProfileLinuxConfigArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies whether password authentication should be disabled. Defaults to `false`. Changing this forces a new resource to be created.
        /// </summary>
        [Input("disablePasswordAuthentication")]
        public Input<bool>? DisablePasswordAuthentication { get; set; }

        [Input("sshKeys")]
        private InputList<ScaleSetOsProfileLinuxConfigSshKeysArgs>? _sshKeys;

        /// <summary>
        /// Specifies a collection of `path` and `key_data` to be placed on the virtual machine.
        /// </summary>
        public InputList<ScaleSetOsProfileLinuxConfigSshKeysArgs> SshKeys
        {
            get => _sshKeys ?? (_sshKeys = new InputList<ScaleSetOsProfileLinuxConfigSshKeysArgs>());
            set => _sshKeys = value;
        }

        public ScaleSetOsProfileLinuxConfigArgs()
        {
        }
    }

    public sealed class ScaleSetOsProfileLinuxConfigGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies whether password authentication should be disabled. Defaults to `false`. Changing this forces a new resource to be created.
        /// </summary>
        [Input("disablePasswordAuthentication")]
        public Input<bool>? DisablePasswordAuthentication { get; set; }

        [Input("sshKeys")]
        private InputList<ScaleSetOsProfileLinuxConfigSshKeysGetArgs>? _sshKeys;

        /// <summary>
        /// Specifies a collection of `path` and `key_data` to be placed on the virtual machine.
        /// </summary>
        public InputList<ScaleSetOsProfileLinuxConfigSshKeysGetArgs> SshKeys
        {
            get => _sshKeys ?? (_sshKeys = new InputList<ScaleSetOsProfileLinuxConfigSshKeysGetArgs>());
            set => _sshKeys = value;
        }

        public ScaleSetOsProfileLinuxConfigGetArgs()
        {
        }
    }

    public sealed class ScaleSetOsProfileLinuxConfigSshKeysArgs : Pulumi.ResourceArgs
    {
        [Input("keyData")]
        public Input<string>? KeyData { get; set; }

        [Input("path", required: true)]
        public Input<string> Path { get; set; } = null!;

        public ScaleSetOsProfileLinuxConfigSshKeysArgs()
        {
        }
    }

    public sealed class ScaleSetOsProfileLinuxConfigSshKeysGetArgs : Pulumi.ResourceArgs
    {
        [Input("keyData")]
        public Input<string>? KeyData { get; set; }

        [Input("path", required: true)]
        public Input<string> Path { get; set; } = null!;

        public ScaleSetOsProfileLinuxConfigSshKeysGetArgs()
        {
        }
    }

    public sealed class ScaleSetOsProfileSecretsArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies the key vault to use.
        /// </summary>
        [Input("sourceVaultId", required: true)]
        public Input<string> SourceVaultId { get; set; } = null!;

        [Input("vaultCertificates")]
        private InputList<ScaleSetOsProfileSecretsVaultCertificatesArgs>? _vaultCertificates;

        /// <summary>
        /// A collection of Vault Certificates as documented below
        /// </summary>
        public InputList<ScaleSetOsProfileSecretsVaultCertificatesArgs> VaultCertificates
        {
            get => _vaultCertificates ?? (_vaultCertificates = new InputList<ScaleSetOsProfileSecretsVaultCertificatesArgs>());
            set => _vaultCertificates = value;
        }

        public ScaleSetOsProfileSecretsArgs()
        {
        }
    }

    public sealed class ScaleSetOsProfileSecretsGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies the key vault to use.
        /// </summary>
        [Input("sourceVaultId", required: true)]
        public Input<string> SourceVaultId { get; set; } = null!;

        [Input("vaultCertificates")]
        private InputList<ScaleSetOsProfileSecretsVaultCertificatesGetArgs>? _vaultCertificates;

        /// <summary>
        /// A collection of Vault Certificates as documented below
        /// </summary>
        public InputList<ScaleSetOsProfileSecretsVaultCertificatesGetArgs> VaultCertificates
        {
            get => _vaultCertificates ?? (_vaultCertificates = new InputList<ScaleSetOsProfileSecretsVaultCertificatesGetArgs>());
            set => _vaultCertificates = value;
        }

        public ScaleSetOsProfileSecretsGetArgs()
        {
        }
    }

    public sealed class ScaleSetOsProfileSecretsVaultCertificatesArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies the certificate store on the Virtual Machine where the certificate should be added to.
        /// </summary>
        [Input("certificateStore")]
        public Input<string>? CertificateStore { get; set; }

        /// <summary>
        /// Specifies URL of the certificate with which new Virtual Machines is provisioned.
        /// </summary>
        [Input("certificateUrl", required: true)]
        public Input<string> CertificateUrl { get; set; } = null!;

        public ScaleSetOsProfileSecretsVaultCertificatesArgs()
        {
        }
    }

    public sealed class ScaleSetOsProfileSecretsVaultCertificatesGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies the certificate store on the Virtual Machine where the certificate should be added to.
        /// </summary>
        [Input("certificateStore")]
        public Input<string>? CertificateStore { get; set; }

        /// <summary>
        /// Specifies URL of the certificate with which new Virtual Machines is provisioned.
        /// </summary>
        [Input("certificateUrl", required: true)]
        public Input<string> CertificateUrl { get; set; } = null!;

        public ScaleSetOsProfileSecretsVaultCertificatesGetArgs()
        {
        }
    }

    public sealed class ScaleSetOsProfileWindowsConfigAdditionalUnattendConfigsArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies the name of the component to configure with the added content. The only allowable value is `Microsoft-Windows-Shell-Setup`.
        /// </summary>
        [Input("component", required: true)]
        public Input<string> Component { get; set; } = null!;

        /// <summary>
        /// Specifies the base-64 encoded XML formatted content that is added to the unattend.xml file for the specified path and component.
        /// </summary>
        [Input("content", required: true)]
        public Input<string> Content { get; set; } = null!;

        /// <summary>
        /// Specifies the name of the pass that the content applies to. The only allowable value is `oobeSystem`.
        /// </summary>
        [Input("pass", required: true)]
        public Input<string> Pass { get; set; } = null!;

        /// <summary>
        /// Specifies the name of the setting to which the content applies. Possible values are: `FirstLogonCommands` and `AutoLogon`.
        /// </summary>
        [Input("settingName", required: true)]
        public Input<string> SettingName { get; set; } = null!;

        public ScaleSetOsProfileWindowsConfigAdditionalUnattendConfigsArgs()
        {
        }
    }

    public sealed class ScaleSetOsProfileWindowsConfigAdditionalUnattendConfigsGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies the name of the component to configure with the added content. The only allowable value is `Microsoft-Windows-Shell-Setup`.
        /// </summary>
        [Input("component", required: true)]
        public Input<string> Component { get; set; } = null!;

        /// <summary>
        /// Specifies the base-64 encoded XML formatted content that is added to the unattend.xml file for the specified path and component.
        /// </summary>
        [Input("content", required: true)]
        public Input<string> Content { get; set; } = null!;

        /// <summary>
        /// Specifies the name of the pass that the content applies to. The only allowable value is `oobeSystem`.
        /// </summary>
        [Input("pass", required: true)]
        public Input<string> Pass { get; set; } = null!;

        /// <summary>
        /// Specifies the name of the setting to which the content applies. Possible values are: `FirstLogonCommands` and `AutoLogon`.
        /// </summary>
        [Input("settingName", required: true)]
        public Input<string> SettingName { get; set; } = null!;

        public ScaleSetOsProfileWindowsConfigAdditionalUnattendConfigsGetArgs()
        {
        }
    }

    public sealed class ScaleSetOsProfileWindowsConfigArgs : Pulumi.ResourceArgs
    {
        [Input("additionalUnattendConfigs")]
        private InputList<ScaleSetOsProfileWindowsConfigAdditionalUnattendConfigsArgs>? _additionalUnattendConfigs;

        /// <summary>
        /// An Additional Unattended Config block as documented below.
        /// </summary>
        public InputList<ScaleSetOsProfileWindowsConfigAdditionalUnattendConfigsArgs> AdditionalUnattendConfigs
        {
            get => _additionalUnattendConfigs ?? (_additionalUnattendConfigs = new InputList<ScaleSetOsProfileWindowsConfigAdditionalUnattendConfigsArgs>());
            set => _additionalUnattendConfigs = value;
        }

        /// <summary>
        /// Indicates whether virtual machines in the scale set are enabled for automatic updates.
        /// </summary>
        [Input("enableAutomaticUpgrades")]
        public Input<bool>? EnableAutomaticUpgrades { get; set; }

        /// <summary>
        /// Indicates whether virtual machine agent should be provisioned on the virtual machines in the scale set.
        /// </summary>
        [Input("provisionVmAgent")]
        public Input<bool>? ProvisionVmAgent { get; set; }

        [Input("winrms")]
        private InputList<ScaleSetOsProfileWindowsConfigWinrmsArgs>? _winrms;

        /// <summary>
        /// A collection of WinRM configuration blocks as documented below.
        /// </summary>
        public InputList<ScaleSetOsProfileWindowsConfigWinrmsArgs> Winrms
        {
            get => _winrms ?? (_winrms = new InputList<ScaleSetOsProfileWindowsConfigWinrmsArgs>());
            set => _winrms = value;
        }

        public ScaleSetOsProfileWindowsConfigArgs()
        {
        }
    }

    public sealed class ScaleSetOsProfileWindowsConfigGetArgs : Pulumi.ResourceArgs
    {
        [Input("additionalUnattendConfigs")]
        private InputList<ScaleSetOsProfileWindowsConfigAdditionalUnattendConfigsGetArgs>? _additionalUnattendConfigs;

        /// <summary>
        /// An Additional Unattended Config block as documented below.
        /// </summary>
        public InputList<ScaleSetOsProfileWindowsConfigAdditionalUnattendConfigsGetArgs> AdditionalUnattendConfigs
        {
            get => _additionalUnattendConfigs ?? (_additionalUnattendConfigs = new InputList<ScaleSetOsProfileWindowsConfigAdditionalUnattendConfigsGetArgs>());
            set => _additionalUnattendConfigs = value;
        }

        /// <summary>
        /// Indicates whether virtual machines in the scale set are enabled for automatic updates.
        /// </summary>
        [Input("enableAutomaticUpgrades")]
        public Input<bool>? EnableAutomaticUpgrades { get; set; }

        /// <summary>
        /// Indicates whether virtual machine agent should be provisioned on the virtual machines in the scale set.
        /// </summary>
        [Input("provisionVmAgent")]
        public Input<bool>? ProvisionVmAgent { get; set; }

        [Input("winrms")]
        private InputList<ScaleSetOsProfileWindowsConfigWinrmsGetArgs>? _winrms;

        /// <summary>
        /// A collection of WinRM configuration blocks as documented below.
        /// </summary>
        public InputList<ScaleSetOsProfileWindowsConfigWinrmsGetArgs> Winrms
        {
            get => _winrms ?? (_winrms = new InputList<ScaleSetOsProfileWindowsConfigWinrmsGetArgs>());
            set => _winrms = value;
        }

        public ScaleSetOsProfileWindowsConfigGetArgs()
        {
        }
    }

    public sealed class ScaleSetOsProfileWindowsConfigWinrmsArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies URL of the certificate with which new Virtual Machines is provisioned.
        /// </summary>
        [Input("certificateUrl")]
        public Input<string>? CertificateUrl { get; set; }

        /// <summary>
        /// Specifies the protocol of listener
        /// </summary>
        [Input("protocol", required: true)]
        public Input<string> Protocol { get; set; } = null!;

        public ScaleSetOsProfileWindowsConfigWinrmsArgs()
        {
        }
    }

    public sealed class ScaleSetOsProfileWindowsConfigWinrmsGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies URL of the certificate with which new Virtual Machines is provisioned.
        /// </summary>
        [Input("certificateUrl")]
        public Input<string>? CertificateUrl { get; set; }

        /// <summary>
        /// Specifies the protocol of listener
        /// </summary>
        [Input("protocol", required: true)]
        public Input<string> Protocol { get; set; } = null!;

        public ScaleSetOsProfileWindowsConfigWinrmsGetArgs()
        {
        }
    }

    public sealed class ScaleSetPlanArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies the name of the image from the marketplace.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// Specifies the product of the image from the marketplace.
        /// </summary>
        [Input("product", required: true)]
        public Input<string> Product { get; set; } = null!;

        /// <summary>
        /// Specifies the publisher of the image.
        /// </summary>
        [Input("publisher", required: true)]
        public Input<string> Publisher { get; set; } = null!;

        public ScaleSetPlanArgs()
        {
        }
    }

    public sealed class ScaleSetPlanGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies the name of the image from the marketplace.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// Specifies the product of the image from the marketplace.
        /// </summary>
        [Input("product", required: true)]
        public Input<string> Product { get; set; } = null!;

        /// <summary>
        /// Specifies the publisher of the image.
        /// </summary>
        [Input("publisher", required: true)]
        public Input<string> Publisher { get; set; } = null!;

        public ScaleSetPlanGetArgs()
        {
        }
    }

    public sealed class ScaleSetRollingUpgradePolicyArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The maximum percent of total virtual machine instances that will be upgraded simultaneously by the rolling upgrade in one batch. As this is a maximum, unhealthy instances in previous or future batches can cause the percentage of instances in a batch to decrease to ensure higher reliability. Defaults to `20`.
        /// </summary>
        [Input("maxBatchInstancePercent")]
        public Input<int>? MaxBatchInstancePercent { get; set; }

        /// <summary>
        /// The maximum percentage of the total virtual machine instances in the scale set that can be simultaneously unhealthy, either as a result of being upgraded, or by being found in an unhealthy state by the virtual machine health checks before the rolling upgrade aborts. This constraint will be checked prior to starting any batch. Defaults to `20`.
        /// </summary>
        [Input("maxUnhealthyInstancePercent")]
        public Input<int>? MaxUnhealthyInstancePercent { get; set; }

        /// <summary>
        /// The maximum percentage of upgraded virtual machine instances that can be found to be in an unhealthy state. This check will happen after each batch is upgraded. If this percentage is ever exceeded, the rolling update aborts. Defaults to `20`.
        /// </summary>
        [Input("maxUnhealthyUpgradedInstancePercent")]
        public Input<int>? MaxUnhealthyUpgradedInstancePercent { get; set; }

        /// <summary>
        /// The wait time between completing the update for all virtual machines in one batch and starting the next batch. The time duration should be specified in ISO 8601 format for duration (https://en.wikipedia.org/wiki/ISO_8601#Durations). Defaults to `0` seconds represented as `PT0S`.
        /// </summary>
        [Input("pauseTimeBetweenBatches")]
        public Input<string>? PauseTimeBetweenBatches { get; set; }

        public ScaleSetRollingUpgradePolicyArgs()
        {
        }
    }

    public sealed class ScaleSetRollingUpgradePolicyGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The maximum percent of total virtual machine instances that will be upgraded simultaneously by the rolling upgrade in one batch. As this is a maximum, unhealthy instances in previous or future batches can cause the percentage of instances in a batch to decrease to ensure higher reliability. Defaults to `20`.
        /// </summary>
        [Input("maxBatchInstancePercent")]
        public Input<int>? MaxBatchInstancePercent { get; set; }

        /// <summary>
        /// The maximum percentage of the total virtual machine instances in the scale set that can be simultaneously unhealthy, either as a result of being upgraded, or by being found in an unhealthy state by the virtual machine health checks before the rolling upgrade aborts. This constraint will be checked prior to starting any batch. Defaults to `20`.
        /// </summary>
        [Input("maxUnhealthyInstancePercent")]
        public Input<int>? MaxUnhealthyInstancePercent { get; set; }

        /// <summary>
        /// The maximum percentage of upgraded virtual machine instances that can be found to be in an unhealthy state. This check will happen after each batch is upgraded. If this percentage is ever exceeded, the rolling update aborts. Defaults to `20`.
        /// </summary>
        [Input("maxUnhealthyUpgradedInstancePercent")]
        public Input<int>? MaxUnhealthyUpgradedInstancePercent { get; set; }

        /// <summary>
        /// The wait time between completing the update for all virtual machines in one batch and starting the next batch. The time duration should be specified in ISO 8601 format for duration (https://en.wikipedia.org/wiki/ISO_8601#Durations). Defaults to `0` seconds represented as `PT0S`.
        /// </summary>
        [Input("pauseTimeBetweenBatches")]
        public Input<string>? PauseTimeBetweenBatches { get; set; }

        public ScaleSetRollingUpgradePolicyGetArgs()
        {
        }
    }

    public sealed class ScaleSetSkuArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies the number of virtual machines in the scale set.
        /// </summary>
        [Input("capacity", required: true)]
        public Input<int> Capacity { get; set; } = null!;

        /// <summary>
        /// Specifies the name of the image from the marketplace.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// Specifies the tier of virtual machines in a scale set. Possible values, `standard` or `basic`.
        /// </summary>
        [Input("tier")]
        public Input<string>? Tier { get; set; }

        public ScaleSetSkuArgs()
        {
        }
    }

    public sealed class ScaleSetSkuGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies the number of virtual machines in the scale set.
        /// </summary>
        [Input("capacity", required: true)]
        public Input<int> Capacity { get; set; } = null!;

        /// <summary>
        /// Specifies the name of the image from the marketplace.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// Specifies the tier of virtual machines in a scale set. Possible values, `standard` or `basic`.
        /// </summary>
        [Input("tier")]
        public Input<string>? Tier { get; set; }

        public ScaleSetSkuGetArgs()
        {
        }
    }

    public sealed class ScaleSetStorageProfileDataDisksArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies the caching requirements. Possible values include: `None` (default), `ReadOnly`, `ReadWrite`.
        /// </summary>
        [Input("caching")]
        public Input<string>? Caching { get; set; }

        /// <summary>
        /// Specifies how the data disk should be created. The only possible options are `FromImage` and `Empty`.
        /// </summary>
        [Input("createOption", required: true)]
        public Input<string> CreateOption { get; set; } = null!;

        /// <summary>
        /// Specifies the size of the disk in GB. This element is required when creating an empty disk.
        /// </summary>
        [Input("diskSizeGb")]
        public Input<int>? DiskSizeGb { get; set; }

        /// <summary>
        /// Specifies the Logical Unit Number of the disk in each virtual machine in the scale set.
        /// </summary>
        [Input("lun", required: true)]
        public Input<int> Lun { get; set; } = null!;

        /// <summary>
        /// Specifies the type of managed disk to create. Value must be either `Standard_LRS`, `StandardSSD_LRS` or `Premium_LRS`.
        /// </summary>
        [Input("managedDiskType")]
        public Input<string>? ManagedDiskType { get; set; }

        public ScaleSetStorageProfileDataDisksArgs()
        {
        }
    }

    public sealed class ScaleSetStorageProfileDataDisksGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies the caching requirements. Possible values include: `None` (default), `ReadOnly`, `ReadWrite`.
        /// </summary>
        [Input("caching")]
        public Input<string>? Caching { get; set; }

        /// <summary>
        /// Specifies how the data disk should be created. The only possible options are `FromImage` and `Empty`.
        /// </summary>
        [Input("createOption", required: true)]
        public Input<string> CreateOption { get; set; } = null!;

        /// <summary>
        /// Specifies the size of the disk in GB. This element is required when creating an empty disk.
        /// </summary>
        [Input("diskSizeGb")]
        public Input<int>? DiskSizeGb { get; set; }

        /// <summary>
        /// Specifies the Logical Unit Number of the disk in each virtual machine in the scale set.
        /// </summary>
        [Input("lun", required: true)]
        public Input<int> Lun { get; set; } = null!;

        /// <summary>
        /// Specifies the type of managed disk to create. Value must be either `Standard_LRS`, `StandardSSD_LRS` or `Premium_LRS`.
        /// </summary>
        [Input("managedDiskType")]
        public Input<string>? ManagedDiskType { get; set; }

        public ScaleSetStorageProfileDataDisksGetArgs()
        {
        }
    }

    public sealed class ScaleSetStorageProfileImageReferenceArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies the ID of the (custom) image to use to create the virtual
        /// machine scale set, as in the example below.
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        /// <summary>
        /// Specifies the offer of the image used to create the virtual machines.
        /// </summary>
        [Input("offer")]
        public Input<string>? Offer { get; set; }

        /// <summary>
        /// Specifies the publisher of the image.
        /// </summary>
        [Input("publisher")]
        public Input<string>? Publisher { get; set; }

        /// <summary>
        /// Specifies the SKU of the image used to create the virtual machines.
        /// </summary>
        [Input("sku")]
        public Input<string>? Sku { get; set; }

        /// <summary>
        /// Specifies the version of the image used to create the virtual machines.
        /// </summary>
        [Input("version")]
        public Input<string>? Version { get; set; }

        public ScaleSetStorageProfileImageReferenceArgs()
        {
        }
    }

    public sealed class ScaleSetStorageProfileImageReferenceGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies the ID of the (custom) image to use to create the virtual
        /// machine scale set, as in the example below.
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        /// <summary>
        /// Specifies the offer of the image used to create the virtual machines.
        /// </summary>
        [Input("offer")]
        public Input<string>? Offer { get; set; }

        /// <summary>
        /// Specifies the publisher of the image.
        /// </summary>
        [Input("publisher")]
        public Input<string>? Publisher { get; set; }

        /// <summary>
        /// Specifies the SKU of the image used to create the virtual machines.
        /// </summary>
        [Input("sku")]
        public Input<string>? Sku { get; set; }

        /// <summary>
        /// Specifies the version of the image used to create the virtual machines.
        /// </summary>
        [Input("version")]
        public Input<string>? Version { get; set; }

        public ScaleSetStorageProfileImageReferenceGetArgs()
        {
        }
    }

    public sealed class ScaleSetStorageProfileOsDiskArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies the caching requirements. Possible values include: `None` (default), `ReadOnly`, `ReadWrite`.
        /// </summary>
        [Input("caching")]
        public Input<string>? Caching { get; set; }

        /// <summary>
        /// Specifies how the data disk should be created. The only possible options are `FromImage` and `Empty`.
        /// </summary>
        [Input("createOption", required: true)]
        public Input<string> CreateOption { get; set; } = null!;

        /// <summary>
        /// Specifies the blob uri for user image. A virtual machine scale set creates an os disk in the same container as the user image.
        /// Updating the osDisk image causes the existing disk to be deleted and a new one created with the new image. If the VM scale set is in Manual upgrade mode then the virtual machines are not updated until they have manualUpgrade applied to them.
        /// When setting this field `os_type` needs to be specified. Cannot be used when `vhd_containers`, `managed_disk_type` or `storage_profile_image_reference` are specified.
        /// </summary>
        [Input("image")]
        public Input<string>? Image { get; set; }

        /// <summary>
        /// Specifies the type of managed disk to create. Value must be either `Standard_LRS`, `StandardSSD_LRS` or `Premium_LRS`.
        /// </summary>
        [Input("managedDiskType")]
        public Input<string>? ManagedDiskType { get; set; }

        /// <summary>
        /// Specifies the name of the image from the marketplace.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Specifies the operating system Type, valid values are windows, linux.
        /// </summary>
        [Input("osType")]
        public Input<string>? OsType { get; set; }

        [Input("vhdContainers")]
        private InputList<string>? _vhdContainers;

        /// <summary>
        /// Specifies the vhd uri. Cannot be used when `image` or `managed_disk_type` is specified.
        /// </summary>
        public InputList<string> VhdContainers
        {
            get => _vhdContainers ?? (_vhdContainers = new InputList<string>());
            set => _vhdContainers = value;
        }

        public ScaleSetStorageProfileOsDiskArgs()
        {
        }
    }

    public sealed class ScaleSetStorageProfileOsDiskGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies the caching requirements. Possible values include: `None` (default), `ReadOnly`, `ReadWrite`.
        /// </summary>
        [Input("caching")]
        public Input<string>? Caching { get; set; }

        /// <summary>
        /// Specifies how the data disk should be created. The only possible options are `FromImage` and `Empty`.
        /// </summary>
        [Input("createOption", required: true)]
        public Input<string> CreateOption { get; set; } = null!;

        /// <summary>
        /// Specifies the blob uri for user image. A virtual machine scale set creates an os disk in the same container as the user image.
        /// Updating the osDisk image causes the existing disk to be deleted and a new one created with the new image. If the VM scale set is in Manual upgrade mode then the virtual machines are not updated until they have manualUpgrade applied to them.
        /// When setting this field `os_type` needs to be specified. Cannot be used when `vhd_containers`, `managed_disk_type` or `storage_profile_image_reference` are specified.
        /// </summary>
        [Input("image")]
        public Input<string>? Image { get; set; }

        /// <summary>
        /// Specifies the type of managed disk to create. Value must be either `Standard_LRS`, `StandardSSD_LRS` or `Premium_LRS`.
        /// </summary>
        [Input("managedDiskType")]
        public Input<string>? ManagedDiskType { get; set; }

        /// <summary>
        /// Specifies the name of the image from the marketplace.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Specifies the operating system Type, valid values are windows, linux.
        /// </summary>
        [Input("osType")]
        public Input<string>? OsType { get; set; }

        [Input("vhdContainers")]
        private InputList<string>? _vhdContainers;

        /// <summary>
        /// Specifies the vhd uri. Cannot be used when `image` or `managed_disk_type` is specified.
        /// </summary>
        public InputList<string> VhdContainers
        {
            get => _vhdContainers ?? (_vhdContainers = new InputList<string>());
            set => _vhdContainers = value;
        }

        public ScaleSetStorageProfileOsDiskGetArgs()
        {
        }
    }
    }

    namespace Outputs
    {

    [OutputType]
    public sealed class ScaleSetBootDiagnostics
    {
        public readonly bool? Enabled;
        public readonly string StorageUri;

        [OutputConstructor]
        private ScaleSetBootDiagnostics(
            bool? enabled,
            string storageUri)
        {
            Enabled = enabled;
            StorageUri = storageUri;
        }
    }

    [OutputType]
    public sealed class ScaleSetExtensions
    {
        /// <summary>
        /// Specifies whether or not to use the latest minor version available.
        /// </summary>
        public readonly bool? AutoUpgradeMinorVersion;
        /// <summary>
        /// Specifies the name of the image from the marketplace.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The protected_settings passed to the extension, like settings, these are specified as a JSON object in a string.
        /// </summary>
        public readonly string? ProtectedSettings;
        /// <summary>
        /// Specifies a dependency array of extensions required to be executed before, the array stores the name of each extension.
        /// </summary>
        public readonly ImmutableArray<string> ProvisionAfterExtensions;
        /// <summary>
        /// Specifies the publisher of the image.
        /// </summary>
        public readonly string Publisher;
        /// <summary>
        /// The settings passed to the extension, these are specified as a JSON object in a string.
        /// </summary>
        public readonly string? Settings;
        /// <summary>
        /// The type of extension, available types for a publisher can be found using the Azure CLI.
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// Specifies the version of the extension to use, available versions can be found using the Azure CLI.
        /// </summary>
        public readonly string TypeHandlerVersion;

        [OutputConstructor]
        private ScaleSetExtensions(
            bool? autoUpgradeMinorVersion,
            string name,
            string? protectedSettings,
            ImmutableArray<string> provisionAfterExtensions,
            string publisher,
            string? settings,
            string type,
            string typeHandlerVersion)
        {
            AutoUpgradeMinorVersion = autoUpgradeMinorVersion;
            Name = name;
            ProtectedSettings = protectedSettings;
            ProvisionAfterExtensions = provisionAfterExtensions;
            Publisher = publisher;
            Settings = settings;
            Type = type;
            TypeHandlerVersion = typeHandlerVersion;
        }
    }

    [OutputType]
    public sealed class ScaleSetIdentity
    {
        /// <summary>
        /// Specifies a list of user managed identity ids to be assigned to the VMSS. Required if `type` is `UserAssigned`.
        /// </summary>
        public readonly ImmutableArray<string> IdentityIds;
        public readonly string PrincipalId;
        /// <summary>
        /// The type of extension, available types for a publisher can be found using the Azure CLI.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private ScaleSetIdentity(
            ImmutableArray<string> identityIds,
            string principalId,
            string type)
        {
            IdentityIds = identityIds;
            PrincipalId = principalId;
            Type = type;
        }
    }

    [OutputType]
    public sealed class ScaleSetNetworkProfiles
    {
        /// <summary>
        /// Specifies whether to enable accelerated networking or not. Defaults to `false`.
        /// </summary>
        public readonly bool? AcceleratedNetworking;
        /// <summary>
        /// A dns_settings block as documented below.
        /// </summary>
        public readonly ScaleSetNetworkProfilesDnsSettings? DnsSettings;
        /// <summary>
        /// An ip_configuration block as documented below.
        /// </summary>
        public readonly ImmutableArray<ScaleSetNetworkProfilesIpConfigurations> IpConfigurations;
        /// <summary>
        /// Whether IP forwarding is enabled on this NIC. Defaults to `false`.
        /// </summary>
        public readonly bool? IpForwarding;
        /// <summary>
        /// Specifies the name of the image from the marketplace.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Specifies the identifier for the network security group.
        /// </summary>
        public readonly string? NetworkSecurityGroupId;
        /// <summary>
        /// Specifies if this ip_configuration is the primary one.
        /// </summary>
        public readonly bool Primary;

        [OutputConstructor]
        private ScaleSetNetworkProfiles(
            bool? acceleratedNetworking,
            ScaleSetNetworkProfilesDnsSettings? dnsSettings,
            ImmutableArray<ScaleSetNetworkProfilesIpConfigurations> ipConfigurations,
            bool? ipForwarding,
            string name,
            string? networkSecurityGroupId,
            bool primary)
        {
            AcceleratedNetworking = acceleratedNetworking;
            DnsSettings = dnsSettings;
            IpConfigurations = ipConfigurations;
            IpForwarding = ipForwarding;
            Name = name;
            NetworkSecurityGroupId = networkSecurityGroupId;
            Primary = primary;
        }
    }

    [OutputType]
    public sealed class ScaleSetNetworkProfilesDnsSettings
    {
        /// <summary>
        /// Specifies an array of dns servers.
        /// </summary>
        public readonly ImmutableArray<string> DnsServers;

        [OutputConstructor]
        private ScaleSetNetworkProfilesDnsSettings(ImmutableArray<string> dnsServers)
        {
            DnsServers = dnsServers;
        }
    }

    [OutputType]
    public sealed class ScaleSetNetworkProfilesIpConfigurations
    {
        /// <summary>
        /// Specifies an array of references to backend address pools of application gateways. A scale set can reference backend address pools of multiple application gateways. Multiple scale sets cannot use the same application gateway.
        /// </summary>
        public readonly ImmutableArray<string> ApplicationGatewayBackendAddressPoolIds;
        /// <summary>
        /// Specifies up to `20` application security group IDs.
        /// </summary>
        public readonly ImmutableArray<string> ApplicationSecurityGroupIds;
        /// <summary>
        /// Specifies an array of references to backend address pools of load balancers. A scale set can reference backend address pools of one public and one internal load balancer. Multiple scale sets cannot use the same load balancer.
        /// </summary>
        public readonly ImmutableArray<string> LoadBalancerBackendAddressPoolIds;
        /// <summary>
        /// Specifies an array of references to inbound NAT pools for load balancers. A scale set can reference inbound nat pools of one public and one internal load balancer. Multiple scale sets cannot use the same load balancer.
        /// </summary>
        public readonly ImmutableArray<string> LoadBalancerInboundNatRulesIds;
        /// <summary>
        /// Specifies the name of the image from the marketplace.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Specifies if this ip_configuration is the primary one.
        /// </summary>
        public readonly bool Primary;
        /// <summary>
        /// Describes a virtual machines scale set IP Configuration's PublicIPAddress configuration. The public_ip_address_configuration is documented below.
        /// </summary>
        public readonly ScaleSetNetworkProfilesIpConfigurationsPublicIpAddressConfiguration? PublicIpAddressConfiguration;
        /// <summary>
        /// Specifies the identifier of the subnet.
        /// </summary>
        public readonly string SubnetId;

        [OutputConstructor]
        private ScaleSetNetworkProfilesIpConfigurations(
            ImmutableArray<string> applicationGatewayBackendAddressPoolIds,
            ImmutableArray<string> applicationSecurityGroupIds,
            ImmutableArray<string> loadBalancerBackendAddressPoolIds,
            ImmutableArray<string> loadBalancerInboundNatRulesIds,
            string name,
            bool primary,
            ScaleSetNetworkProfilesIpConfigurationsPublicIpAddressConfiguration? publicIpAddressConfiguration,
            string subnetId)
        {
            ApplicationGatewayBackendAddressPoolIds = applicationGatewayBackendAddressPoolIds;
            ApplicationSecurityGroupIds = applicationSecurityGroupIds;
            LoadBalancerBackendAddressPoolIds = loadBalancerBackendAddressPoolIds;
            LoadBalancerInboundNatRulesIds = loadBalancerInboundNatRulesIds;
            Name = name;
            Primary = primary;
            PublicIpAddressConfiguration = publicIpAddressConfiguration;
            SubnetId = subnetId;
        }
    }

    [OutputType]
    public sealed class ScaleSetNetworkProfilesIpConfigurationsPublicIpAddressConfiguration
    {
        /// <summary>
        /// The domain name label for the dns settings.
        /// </summary>
        public readonly string DomainNameLabel;
        /// <summary>
        /// The idle timeout in minutes. This value must be between 4 and 30.
        /// </summary>
        public readonly int IdleTimeout;
        /// <summary>
        /// Specifies the name of the image from the marketplace.
        /// </summary>
        public readonly string Name;

        [OutputConstructor]
        private ScaleSetNetworkProfilesIpConfigurationsPublicIpAddressConfiguration(
            string domainNameLabel,
            int idleTimeout,
            string name)
        {
            DomainNameLabel = domainNameLabel;
            IdleTimeout = idleTimeout;
            Name = name;
        }
    }

    [OutputType]
    public sealed class ScaleSetOsProfile
    {
        /// <summary>
        /// Specifies the administrator password to use for all the instances of virtual machines in a scale set.
        /// </summary>
        public readonly string? AdminPassword;
        /// <summary>
        /// Specifies the administrator account name to use for all the instances of virtual machines in the scale set.
        /// </summary>
        public readonly string AdminUsername;
        /// <summary>
        /// Specifies the computer name prefix for all of the virtual machines in the scale set. Computer name prefixes must be 1 to 9 characters long for windows images and 1 - 58 for linux. Changing this forces a new resource to be created.
        /// </summary>
        public readonly string ComputerNamePrefix;
        /// <summary>
        /// Specifies custom data to supply to the machine. On linux-based systems, this can be used as a cloud-init script. On other systems, this will be copied as a file on disk. Internally, this provider will base64 encode this value before sending it to the API. The maximum length of the binary array is 65535 bytes.
        /// </summary>
        public readonly string? CustomData;

        [OutputConstructor]
        private ScaleSetOsProfile(
            string? adminPassword,
            string adminUsername,
            string computerNamePrefix,
            string? customData)
        {
            AdminPassword = adminPassword;
            AdminUsername = adminUsername;
            ComputerNamePrefix = computerNamePrefix;
            CustomData = customData;
        }
    }

    [OutputType]
    public sealed class ScaleSetOsProfileLinuxConfig
    {
        /// <summary>
        /// Specifies whether password authentication should be disabled. Defaults to `false`. Changing this forces a new resource to be created.
        /// </summary>
        public readonly bool? DisablePasswordAuthentication;
        /// <summary>
        /// Specifies a collection of `path` and `key_data` to be placed on the virtual machine.
        /// </summary>
        public readonly ImmutableArray<ScaleSetOsProfileLinuxConfigSshKeys> SshKeys;

        [OutputConstructor]
        private ScaleSetOsProfileLinuxConfig(
            bool? disablePasswordAuthentication,
            ImmutableArray<ScaleSetOsProfileLinuxConfigSshKeys> sshKeys)
        {
            DisablePasswordAuthentication = disablePasswordAuthentication;
            SshKeys = sshKeys;
        }
    }

    [OutputType]
    public sealed class ScaleSetOsProfileLinuxConfigSshKeys
    {
        public readonly string? KeyData;
        public readonly string Path;

        [OutputConstructor]
        private ScaleSetOsProfileLinuxConfigSshKeys(
            string? keyData,
            string path)
        {
            KeyData = keyData;
            Path = path;
        }
    }

    [OutputType]
    public sealed class ScaleSetOsProfileSecrets
    {
        /// <summary>
        /// Specifies the key vault to use.
        /// </summary>
        public readonly string SourceVaultId;
        /// <summary>
        /// A collection of Vault Certificates as documented below
        /// </summary>
        public readonly ImmutableArray<ScaleSetOsProfileSecretsVaultCertificates> VaultCertificates;

        [OutputConstructor]
        private ScaleSetOsProfileSecrets(
            string sourceVaultId,
            ImmutableArray<ScaleSetOsProfileSecretsVaultCertificates> vaultCertificates)
        {
            SourceVaultId = sourceVaultId;
            VaultCertificates = vaultCertificates;
        }
    }

    [OutputType]
    public sealed class ScaleSetOsProfileSecretsVaultCertificates
    {
        /// <summary>
        /// Specifies the certificate store on the Virtual Machine where the certificate should be added to.
        /// </summary>
        public readonly string? CertificateStore;
        /// <summary>
        /// Specifies URL of the certificate with which new Virtual Machines is provisioned.
        /// </summary>
        public readonly string CertificateUrl;

        [OutputConstructor]
        private ScaleSetOsProfileSecretsVaultCertificates(
            string? certificateStore,
            string certificateUrl)
        {
            CertificateStore = certificateStore;
            CertificateUrl = certificateUrl;
        }
    }

    [OutputType]
    public sealed class ScaleSetOsProfileWindowsConfig
    {
        /// <summary>
        /// An Additional Unattended Config block as documented below.
        /// </summary>
        public readonly ImmutableArray<ScaleSetOsProfileWindowsConfigAdditionalUnattendConfigs> AdditionalUnattendConfigs;
        /// <summary>
        /// Indicates whether virtual machines in the scale set are enabled for automatic updates.
        /// </summary>
        public readonly bool? EnableAutomaticUpgrades;
        /// <summary>
        /// Indicates whether virtual machine agent should be provisioned on the virtual machines in the scale set.
        /// </summary>
        public readonly bool? ProvisionVmAgent;
        /// <summary>
        /// A collection of WinRM configuration blocks as documented below.
        /// </summary>
        public readonly ImmutableArray<ScaleSetOsProfileWindowsConfigWinrms> Winrms;

        [OutputConstructor]
        private ScaleSetOsProfileWindowsConfig(
            ImmutableArray<ScaleSetOsProfileWindowsConfigAdditionalUnattendConfigs> additionalUnattendConfigs,
            bool? enableAutomaticUpgrades,
            bool? provisionVmAgent,
            ImmutableArray<ScaleSetOsProfileWindowsConfigWinrms> winrms)
        {
            AdditionalUnattendConfigs = additionalUnattendConfigs;
            EnableAutomaticUpgrades = enableAutomaticUpgrades;
            ProvisionVmAgent = provisionVmAgent;
            Winrms = winrms;
        }
    }

    [OutputType]
    public sealed class ScaleSetOsProfileWindowsConfigAdditionalUnattendConfigs
    {
        /// <summary>
        /// Specifies the name of the component to configure with the added content. The only allowable value is `Microsoft-Windows-Shell-Setup`.
        /// </summary>
        public readonly string Component;
        /// <summary>
        /// Specifies the base-64 encoded XML formatted content that is added to the unattend.xml file for the specified path and component.
        /// </summary>
        public readonly string Content;
        /// <summary>
        /// Specifies the name of the pass that the content applies to. The only allowable value is `oobeSystem`.
        /// </summary>
        public readonly string Pass;
        /// <summary>
        /// Specifies the name of the setting to which the content applies. Possible values are: `FirstLogonCommands` and `AutoLogon`.
        /// </summary>
        public readonly string SettingName;

        [OutputConstructor]
        private ScaleSetOsProfileWindowsConfigAdditionalUnattendConfigs(
            string component,
            string content,
            string pass,
            string settingName)
        {
            Component = component;
            Content = content;
            Pass = pass;
            SettingName = settingName;
        }
    }

    [OutputType]
    public sealed class ScaleSetOsProfileWindowsConfigWinrms
    {
        /// <summary>
        /// Specifies URL of the certificate with which new Virtual Machines is provisioned.
        /// </summary>
        public readonly string? CertificateUrl;
        /// <summary>
        /// Specifies the protocol of listener
        /// </summary>
        public readonly string Protocol;

        [OutputConstructor]
        private ScaleSetOsProfileWindowsConfigWinrms(
            string? certificateUrl,
            string protocol)
        {
            CertificateUrl = certificateUrl;
            Protocol = protocol;
        }
    }

    [OutputType]
    public sealed class ScaleSetPlan
    {
        /// <summary>
        /// Specifies the name of the image from the marketplace.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Specifies the product of the image from the marketplace.
        /// </summary>
        public readonly string Product;
        /// <summary>
        /// Specifies the publisher of the image.
        /// </summary>
        public readonly string Publisher;

        [OutputConstructor]
        private ScaleSetPlan(
            string name,
            string product,
            string publisher)
        {
            Name = name;
            Product = product;
            Publisher = publisher;
        }
    }

    [OutputType]
    public sealed class ScaleSetRollingUpgradePolicy
    {
        /// <summary>
        /// The maximum percent of total virtual machine instances that will be upgraded simultaneously by the rolling upgrade in one batch. As this is a maximum, unhealthy instances in previous or future batches can cause the percentage of instances in a batch to decrease to ensure higher reliability. Defaults to `20`.
        /// </summary>
        public readonly int? MaxBatchInstancePercent;
        /// <summary>
        /// The maximum percentage of the total virtual machine instances in the scale set that can be simultaneously unhealthy, either as a result of being upgraded, or by being found in an unhealthy state by the virtual machine health checks before the rolling upgrade aborts. This constraint will be checked prior to starting any batch. Defaults to `20`.
        /// </summary>
        public readonly int? MaxUnhealthyInstancePercent;
        /// <summary>
        /// The maximum percentage of upgraded virtual machine instances that can be found to be in an unhealthy state. This check will happen after each batch is upgraded. If this percentage is ever exceeded, the rolling update aborts. Defaults to `20`.
        /// </summary>
        public readonly int? MaxUnhealthyUpgradedInstancePercent;
        /// <summary>
        /// The wait time between completing the update for all virtual machines in one batch and starting the next batch. The time duration should be specified in ISO 8601 format for duration (https://en.wikipedia.org/wiki/ISO_8601#Durations). Defaults to `0` seconds represented as `PT0S`.
        /// </summary>
        public readonly string? PauseTimeBetweenBatches;

        [OutputConstructor]
        private ScaleSetRollingUpgradePolicy(
            int? maxBatchInstancePercent,
            int? maxUnhealthyInstancePercent,
            int? maxUnhealthyUpgradedInstancePercent,
            string? pauseTimeBetweenBatches)
        {
            MaxBatchInstancePercent = maxBatchInstancePercent;
            MaxUnhealthyInstancePercent = maxUnhealthyInstancePercent;
            MaxUnhealthyUpgradedInstancePercent = maxUnhealthyUpgradedInstancePercent;
            PauseTimeBetweenBatches = pauseTimeBetweenBatches;
        }
    }

    [OutputType]
    public sealed class ScaleSetSku
    {
        /// <summary>
        /// Specifies the number of virtual machines in the scale set.
        /// </summary>
        public readonly int Capacity;
        /// <summary>
        /// Specifies the name of the image from the marketplace.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Specifies the tier of virtual machines in a scale set. Possible values, `standard` or `basic`.
        /// </summary>
        public readonly string Tier;

        [OutputConstructor]
        private ScaleSetSku(
            int capacity,
            string name,
            string tier)
        {
            Capacity = capacity;
            Name = name;
            Tier = tier;
        }
    }

    [OutputType]
    public sealed class ScaleSetStorageProfileDataDisks
    {
        /// <summary>
        /// Specifies the caching requirements. Possible values include: `None` (default), `ReadOnly`, `ReadWrite`.
        /// </summary>
        public readonly string Caching;
        /// <summary>
        /// Specifies how the data disk should be created. The only possible options are `FromImage` and `Empty`.
        /// </summary>
        public readonly string CreateOption;
        /// <summary>
        /// Specifies the size of the disk in GB. This element is required when creating an empty disk.
        /// </summary>
        public readonly int DiskSizeGb;
        /// <summary>
        /// Specifies the Logical Unit Number of the disk in each virtual machine in the scale set.
        /// </summary>
        public readonly int Lun;
        /// <summary>
        /// Specifies the type of managed disk to create. Value must be either `Standard_LRS`, `StandardSSD_LRS` or `Premium_LRS`.
        /// </summary>
        public readonly string ManagedDiskType;

        [OutputConstructor]
        private ScaleSetStorageProfileDataDisks(
            string caching,
            string createOption,
            int diskSizeGb,
            int lun,
            string managedDiskType)
        {
            Caching = caching;
            CreateOption = createOption;
            DiskSizeGb = diskSizeGb;
            Lun = lun;
            ManagedDiskType = managedDiskType;
        }
    }

    [OutputType]
    public sealed class ScaleSetStorageProfileImageReference
    {
        /// <summary>
        /// Specifies the ID of the (custom) image to use to create the virtual
        /// machine scale set, as in the example below.
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// Specifies the offer of the image used to create the virtual machines.
        /// </summary>
        public readonly string? Offer;
        /// <summary>
        /// Specifies the publisher of the image.
        /// </summary>
        public readonly string? Publisher;
        /// <summary>
        /// Specifies the SKU of the image used to create the virtual machines.
        /// </summary>
        public readonly string? Sku;
        /// <summary>
        /// Specifies the version of the image used to create the virtual machines.
        /// </summary>
        public readonly string? Version;

        [OutputConstructor]
        private ScaleSetStorageProfileImageReference(
            string? id,
            string? offer,
            string? publisher,
            string? sku,
            string? version)
        {
            Id = id;
            Offer = offer;
            Publisher = publisher;
            Sku = sku;
            Version = version;
        }
    }

    [OutputType]
    public sealed class ScaleSetStorageProfileOsDisk
    {
        /// <summary>
        /// Specifies the caching requirements. Possible values include: `None` (default), `ReadOnly`, `ReadWrite`.
        /// </summary>
        public readonly string Caching;
        /// <summary>
        /// Specifies how the data disk should be created. The only possible options are `FromImage` and `Empty`.
        /// </summary>
        public readonly string CreateOption;
        /// <summary>
        /// Specifies the blob uri for user image. A virtual machine scale set creates an os disk in the same container as the user image.
        /// Updating the osDisk image causes the existing disk to be deleted and a new one created with the new image. If the VM scale set is in Manual upgrade mode then the virtual machines are not updated until they have manualUpgrade applied to them.
        /// When setting this field `os_type` needs to be specified. Cannot be used when `vhd_containers`, `managed_disk_type` or `storage_profile_image_reference` are specified.
        /// </summary>
        public readonly string? Image;
        /// <summary>
        /// Specifies the type of managed disk to create. Value must be either `Standard_LRS`, `StandardSSD_LRS` or `Premium_LRS`.
        /// </summary>
        public readonly string ManagedDiskType;
        /// <summary>
        /// Specifies the name of the image from the marketplace.
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// Specifies the operating system Type, valid values are windows, linux.
        /// </summary>
        public readonly string? OsType;
        /// <summary>
        /// Specifies the vhd uri. Cannot be used when `image` or `managed_disk_type` is specified.
        /// </summary>
        public readonly ImmutableArray<string> VhdContainers;

        [OutputConstructor]
        private ScaleSetStorageProfileOsDisk(
            string caching,
            string createOption,
            string? image,
            string managedDiskType,
            string? name,
            string? osType,
            ImmutableArray<string> vhdContainers)
        {
            Caching = caching;
            CreateOption = createOption;
            Image = image;
            ManagedDiskType = managedDiskType;
            Name = name;
            OsType = osType;
            VhdContainers = vhdContainers;
        }
    }
    }
}
