// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Compute.Outputs
{

    [OutputType]
    public sealed class ScaleSetIdentity
    {
        /// <summary>
        /// Specifies a list of user managed identity ids to be assigned to the VMSS. Required if `type` is `UserAssigned`.
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Azure = Pulumi.Azure;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = new Azure.Compute.ScaleSet("example", new()
        ///     {
        ///         ResourceGroupName = azurerm_resource_group.Example.Name,
        ///         Location = azurerm_resource_group.Example.Location,
        ///         Sku = new Azure.Compute.Inputs.ScaleSetSkuArgs
        ///         {
        ///             Name = @var.Vm_sku,
        ///             Tier = "Standard",
        ///             Capacity = @var.Instance_count,
        ///         },
        ///         Identity = new Azure.Compute.Inputs.ScaleSetIdentityArgs
        ///         {
        ///             Type = "SystemAssigned",
        ///         },
        ///         Extensions = new[]
        ///         {
        ///             new Azure.Compute.Inputs.ScaleSetExtensionArgs
        ///             {
        ///                 Name = "MSILinuxExtension",
        ///                 Publisher = "Microsoft.ManagedIdentity",
        ///                 Type = "ManagedIdentityExtensionForLinux",
        ///                 TypeHandlerVersion = "1.0",
        ///                 Settings = "{\"port\": 50342}",
        ///             },
        ///         },
        ///     });
        /// 
        ///     // ...
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["principalId"] = example.Identity.Apply(identity =&gt; identity.PrincipalId),
        ///     };
        /// });
        /// ```
        /// </summary>
        public readonly ImmutableArray<string> IdentityIds;
        public readonly string? PrincipalId;
        /// <summary>
        /// Specifies the identity type to be assigned to the scale set. Allowable values are `SystemAssigned` and `UserAssigned`. For the `SystemAssigned` identity the scale set's Service Principal ID (SPN) can be retrieved after the scale set has been created. See [documentation](https://docs.microsoft.com/azure/active-directory/managed-service-identity/overview) for more information. Possible values are `SystemAssigned`, `UserAssigned` and `SystemAssigned, UserAssigned`.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private ScaleSetIdentity(
            ImmutableArray<string> identityIds,

            string? principalId,

            string type)
        {
            IdentityIds = identityIds;
            PrincipalId = principalId;
            Type = type;
        }
    }
}
