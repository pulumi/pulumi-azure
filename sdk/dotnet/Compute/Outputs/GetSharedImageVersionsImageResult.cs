// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Compute.Outputs
{

    [OutputType]
    public sealed class GetSharedImageVersionsImageResult
    {
        /// <summary>
        /// Is this Image Version excluded from the `Latest` filter?
        /// </summary>
        public readonly bool ExcludeFromLatest;
        /// <summary>
        /// The ID of this Shared Image Version.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The supported Azure location where the Shared Image Gallery exists.
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// The ID of the Managed Image which was the source of this Shared Image Version.
        /// </summary>
        public readonly string ManagedImageId;
        /// <summary>
        /// The Azure Region in which this Image Version exists.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// A mapping of tags assigned to the Shared Image.
        /// </summary>
        public readonly ImmutableDictionary<string, string> Tags;
        /// <summary>
        /// One or more `TargetRegion` blocks as documented below.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetSharedImageVersionsImageTargetRegionResult> TargetRegions;

        [OutputConstructor]
        private GetSharedImageVersionsImageResult(
            bool excludeFromLatest,

            string id,

            string location,

            string managedImageId,

            string name,

            ImmutableDictionary<string, string> tags,

            ImmutableArray<Outputs.GetSharedImageVersionsImageTargetRegionResult> targetRegions)
        {
            ExcludeFromLatest = excludeFromLatest;
            Id = id;
            Location = location;
            ManagedImageId = managedImageId;
            Name = name;
            Tags = tags;
            TargetRegions = targetRegions;
        }
    }
}
