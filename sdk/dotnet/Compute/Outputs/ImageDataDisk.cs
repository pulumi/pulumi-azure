// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Compute.Outputs
{

    [OutputType]
    public sealed class ImageDataDisk
    {
        /// <summary>
        /// Specifies the URI in Azure storage of the blob that you want to use to create the image.
        /// </summary>
        public readonly string? BlobUri;
        /// <summary>
        /// Specifies the caching mode as `ReadWrite`, `ReadOnly`, or `None`. Defaults to `None`.
        /// </summary>
        public readonly string? Caching;
        /// <summary>
        /// The ID of the Disk Encryption Set which should be used to encrypt this disk. Changing this forces a new resource to be created.
        /// </summary>
        public readonly string? DiskEncryptionSetId;
        /// <summary>
        /// Specifies the logical unit number of the data disk.
        /// </summary>
        public readonly int? Lun;
        /// <summary>
        /// Specifies the ID of the managed disk resource that you want to use to create the image. Changing this forces a new resource to be created.
        /// </summary>
        public readonly string? ManagedDiskId;
        /// <summary>
        /// Specifies the size of the image to be created. The target size can't be smaller than the source size.
        /// </summary>
        public readonly int? SizeGb;
        /// <summary>
        /// The type of Storage Disk to use. Possible values are `Premium_LRS`, `PremiumV2_LRS`, `Premium_ZRS`, `Standard_LRS`, `StandardSSD_LRS`, `StandardSSD_ZRS` and `UltraSSD_LRS`. Changing this forces a new resource to be created.
        /// </summary>
        public readonly string StorageType;

        [OutputConstructor]
        private ImageDataDisk(
            string? blobUri,

            string? caching,

            string? diskEncryptionSetId,

            int? lun,

            string? managedDiskId,

            int? sizeGb,

            string storageType)
        {
            BlobUri = blobUri;
            Caching = caching;
            DiskEncryptionSetId = diskEncryptionSetId;
            Lun = lun;
            ManagedDiskId = managedDiskId;
            SizeGb = sizeGb;
            StorageType = storageType;
        }
    }
}
