// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Compute.Outputs
{

    [OutputType]
    public sealed class OrchestratedVirtualMachineScaleSetExtension
    {
        public readonly bool? AutoUpgradeMinorVersionEnabled;
        /// <summary>
        /// An ordered list of Extension names which Orchestrated Virtual Machine Scale Set should provision after VM creation.
        /// </summary>
        public readonly ImmutableArray<string> ExtensionsToProvisionAfterVmCreations;
        /// <summary>
        /// Should failures from the extension be suppressed? Possible values are `true` or `false`. Defaults to `false`.
        /// </summary>
        public readonly bool? FailureSuppressionEnabled;
        public readonly string? ForceExtensionExecutionOnChange;
        /// <summary>
        /// The name of the Orchestrated Virtual Machine Scale Set. Changing this forces a new resource to be created.
        /// </summary>
        public readonly string Name;
        public readonly string? ProtectedSettings;
        public readonly string Publisher;
        public readonly string? Settings;
        public readonly string Type;
        public readonly string TypeHandlerVersion;

        [OutputConstructor]
        private OrchestratedVirtualMachineScaleSetExtension(
            bool? autoUpgradeMinorVersionEnabled,

            ImmutableArray<string> extensionsToProvisionAfterVmCreations,

            bool? failureSuppressionEnabled,

            string? forceExtensionExecutionOnChange,

            string name,

            string? protectedSettings,

            string publisher,

            string? settings,

            string type,

            string typeHandlerVersion)
        {
            AutoUpgradeMinorVersionEnabled = autoUpgradeMinorVersionEnabled;
            ExtensionsToProvisionAfterVmCreations = extensionsToProvisionAfterVmCreations;
            FailureSuppressionEnabled = failureSuppressionEnabled;
            ForceExtensionExecutionOnChange = forceExtensionExecutionOnChange;
            Name = name;
            ProtectedSettings = protectedSettings;
            Publisher = publisher;
            Settings = settings;
            Type = type;
            TypeHandlerVersion = typeHandlerVersion;
        }
    }
}
