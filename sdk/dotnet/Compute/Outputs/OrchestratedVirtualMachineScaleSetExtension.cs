// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Compute.Outputs
{

    [OutputType]
    public sealed class OrchestratedVirtualMachineScaleSetExtension
    {
        /// <summary>
        /// Should the latest version of the Extension be used at Deployment Time, if one is available? This won't auto-update the extension on existing installation. Defaults to `true`.
        /// </summary>
        public readonly bool? AutoUpgradeMinorVersionEnabled;
        /// <summary>
        /// An ordered list of Extension names which Virtual Machine Scale Set should provision after VM creation.
        /// </summary>
        public readonly ImmutableArray<string> ExtensionsToProvisionAfterVmCreations;
        /// <summary>
        /// Should failures from the extension be suppressed? Possible values are `true` or `false`.
        /// 
        /// &gt; **NOTE:** Operational failures such as not connecting to the VM will not be suppressed regardless of the `failure_suppression_enabled` value.
        /// </summary>
        public readonly bool? FailureSuppressionEnabled;
        /// <summary>
        /// A value which, when different to the previous value can be used to force-run the Extension even if the Extension Configuration hasn't changed.
        /// </summary>
        public readonly string? ForceExtensionExecutionOnChange;
        /// <summary>
        /// The name for the Virtual Machine Scale Set Extension.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// A JSON String which specifies Sensitive Settings (such as Passwords) for the Extension.
        /// 
        /// &gt; **NOTE:** Keys within the `protected_settings` block are notoriously case-sensitive, where the casing required (e.g. `TitleCase` vs `snakeCase`) depends on the Extension being used. Please refer to the documentation for the specific Virtual Machine Extension you're looking to use for more information.
        /// </summary>
        public readonly string? ProtectedSettings;
        /// <summary>
        /// A `protected_settings_from_key_vault` block as defined below.
        /// 
        /// &gt; **Note:** `protected_settings_from_key_vault` cannot be used with `protected_settings`
        /// </summary>
        public readonly Outputs.OrchestratedVirtualMachineScaleSetExtensionProtectedSettingsFromKeyVault? ProtectedSettingsFromKeyVault;
        /// <summary>
        /// Specifies the Publisher of the Extension.
        /// </summary>
        public readonly string Publisher;
        /// <summary>
        /// A JSON String which specifies Settings for the Extension.
        /// </summary>
        public readonly string? Settings;
        /// <summary>
        /// Specifies the Type of the Extension.
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// Specifies the version of the extension to use, available versions can be found using the Azure CLI.
        /// </summary>
        public readonly string TypeHandlerVersion;

        [OutputConstructor]
        private OrchestratedVirtualMachineScaleSetExtension(
            bool? autoUpgradeMinorVersionEnabled,

            ImmutableArray<string> extensionsToProvisionAfterVmCreations,

            bool? failureSuppressionEnabled,

            string? forceExtensionExecutionOnChange,

            string name,

            string? protectedSettings,

            Outputs.OrchestratedVirtualMachineScaleSetExtensionProtectedSettingsFromKeyVault? protectedSettingsFromKeyVault,

            string publisher,

            string? settings,

            string type,

            string typeHandlerVersion)
        {
            AutoUpgradeMinorVersionEnabled = autoUpgradeMinorVersionEnabled;
            ExtensionsToProvisionAfterVmCreations = extensionsToProvisionAfterVmCreations;
            FailureSuppressionEnabled = failureSuppressionEnabled;
            ForceExtensionExecutionOnChange = forceExtensionExecutionOnChange;
            Name = name;
            ProtectedSettings = protectedSettings;
            ProtectedSettingsFromKeyVault = protectedSettingsFromKeyVault;
            Publisher = publisher;
            Settings = settings;
            Type = type;
            TypeHandlerVersion = typeHandlerVersion;
        }
    }
}
