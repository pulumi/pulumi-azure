// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Compute.Outputs
{

    [OutputType]
    public sealed class OrchestratedVirtualMachineScaleSetOsProfileWindowsConfiguration
    {
        /// <summary>
        /// One or more `AdditionalUnattendContent` blocks as defined below. Changing this forces a new resource to be created.
        /// </summary>
        public readonly ImmutableArray<Outputs.OrchestratedVirtualMachineScaleSetOsProfileWindowsConfigurationAdditionalUnattendContent> AdditionalUnattendContents;
        /// <summary>
        /// The Password which should be used for the local-administrator on this Virtual Machine. Changing this forces a new resource to be created.
        /// </summary>
        public readonly string AdminPassword;
        /// <summary>
        /// The username of the local administrator on each Virtual Machine Scale Set instance. Changing this forces a new resource to be created.
        /// </summary>
        public readonly string AdminUsername;
        /// <summary>
        /// The prefix which should be used for the name of the Virtual Machines in this Scale Set. If unspecified this defaults to the value for the `Name` field. If the value of the `Name` field is not a valid `ComputerNamePrefix`, then you must specify `ComputerNamePrefix`. Changing this forces a new resource to be created.
        /// </summary>
        public readonly string? ComputerNamePrefix;
        /// <summary>
        /// Are automatic updates enabled for this Virtual Machine? Defaults to `True`.
        /// </summary>
        public readonly bool? EnableAutomaticUpdates;
        /// <summary>
        /// Should the VM be patched without requiring a reboot? Possible values are `True` or `False`. Defaults to `False`. For more information about hot patching please see the [product documentation](https://docs.microsoft.com/azure/automanage/automanage-hotpatch).
        /// 
        /// &gt; **Note:** Hotpatching can only be enabled if the `PatchMode` is set to `AutomaticByPlatform`, the `ProvisionVmAgent` is set to `True`, your `SourceImageReference` references a hotpatching enabled image, the VM's `SkuName` is set to a [Azure generation 2](https://docs.microsoft.com/azure/virtual-machines/generation-2#generation-2-vm-sizes) VM SKU and the `Extension` contains an application health extension. An example of how to correctly configure a Virtual Machine Scale Set to provision a Windows Virtual Machine with hotpatching enabled can be found in the `./examples/orchestrated-vm-scale-set/hotpatching-enabled` directory within the GitHub Repository.
        /// </summary>
        public readonly bool? HotpatchingEnabled;
        /// <summary>
        /// Specifies the mode of VM Guest Patching for the virtual machines that are associated to the Virtual Machine Scale Set. Possible values are `AutomaticByPlatform` or `ImageDefault`. Defaults to `ImageDefault`.
        /// 
        /// &gt; **Note:** If the `PatchAssessmentMode` is set to `AutomaticByPlatform` then the `ProvisionVmAgent` field must be set to `True`.
        /// </summary>
        public readonly string? PatchAssessmentMode;
        /// <summary>
        /// Specifies the mode of in-guest patching of this Windows Virtual Machine. Possible values are `Manual`, `AutomaticByOS` and `AutomaticByPlatform`. Defaults to `AutomaticByOS`. For more information on patch modes please see the [product documentation](https://docs.microsoft.com/azure/virtual-machines/automatic-vm-guest-patching#patch-orchestration-modes).
        /// 
        /// &gt; **Note:** If `PatchMode` is set to `AutomaticByPlatform` the `ProvisionVmAgent` must be set to `True` and the `Extension` must contain at least one application health extension.
        /// </summary>
        public readonly string? PatchMode;
        /// <summary>
        /// Should the Azure VM Agent be provisioned on each Virtual Machine in the Scale Set? Defaults to `True`. Changing this value forces a new resource to be created.
        /// </summary>
        public readonly bool? ProvisionVmAgent;
        /// <summary>
        /// One or more `Secret` blocks as defined below.
        /// </summary>
        public readonly ImmutableArray<Outputs.OrchestratedVirtualMachineScaleSetOsProfileWindowsConfigurationSecret> Secrets;
        /// <summary>
        /// Specifies the time zone of the virtual machine, the possible values are defined [here](https://jackstromberg.com/2017/01/list-of-time-zones-consumed-by-azure/).
        /// </summary>
        public readonly string? Timezone;
        /// <summary>
        /// One or more `WinrmListener` blocks as defined below. Changing this forces a new resource to be created.
        /// </summary>
        public readonly ImmutableArray<Outputs.OrchestratedVirtualMachineScaleSetOsProfileWindowsConfigurationWinrmListener> WinrmListeners;

        [OutputConstructor]
        private OrchestratedVirtualMachineScaleSetOsProfileWindowsConfiguration(
            ImmutableArray<Outputs.OrchestratedVirtualMachineScaleSetOsProfileWindowsConfigurationAdditionalUnattendContent> additionalUnattendContents,

            string adminPassword,

            string adminUsername,

            string? computerNamePrefix,

            bool? enableAutomaticUpdates,

            bool? hotpatchingEnabled,

            string? patchAssessmentMode,

            string? patchMode,

            bool? provisionVmAgent,

            ImmutableArray<Outputs.OrchestratedVirtualMachineScaleSetOsProfileWindowsConfigurationSecret> secrets,

            string? timezone,

            ImmutableArray<Outputs.OrchestratedVirtualMachineScaleSetOsProfileWindowsConfigurationWinrmListener> winrmListeners)
        {
            AdditionalUnattendContents = additionalUnattendContents;
            AdminPassword = adminPassword;
            AdminUsername = adminUsername;
            ComputerNamePrefix = computerNamePrefix;
            EnableAutomaticUpdates = enableAutomaticUpdates;
            HotpatchingEnabled = hotpatchingEnabled;
            PatchAssessmentMode = patchAssessmentMode;
            PatchMode = patchMode;
            ProvisionVmAgent = provisionVmAgent;
            Secrets = secrets;
            Timezone = timezone;
            WinrmListeners = winrmListeners;
        }
    }
}
