// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Compute
{
    /// <summary>
    /// Manages a Virtual Machine Gallery Application Assignment.
    /// 
    /// &gt; **Note:** Gallery Application Assignments can be defined either directly on `azure.compute.LinuxVirtualMachine` and `azure.compute.WindowsVirtualMachine` resources, or using the `azure.compute.GalleryApplicationAssignment` resource - but the two approaches cannot be used together. If both are used with the same Virtual Machine, spurious changes will occur. It's recommended to use `ignore_changes` for the `gallery_application` block on the associated virtual machine resources, to avoid a persistent diff when using this resource.
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Azure = Pulumi.Azure;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = Azure.Compute.GetVirtualMachine.Invoke(new()
    ///     {
    ///         Name = "example-vm",
    ///         ResourceGroupName = "example-resources-vm",
    ///     });
    /// 
    ///     var exampleResourceGroup = new Azure.Core.ResourceGroup("example", new()
    ///     {
    ///         Name = "example-resources",
    ///         Location = "West Europe",
    ///     });
    /// 
    ///     var exampleSharedImageGallery = new Azure.Compute.SharedImageGallery("example", new()
    ///     {
    ///         Name = "examplegallery",
    ///         ResourceGroupName = exampleResourceGroup.Name,
    ///         Location = exampleResourceGroup.Location,
    ///     });
    /// 
    ///     var exampleGalleryApplication = new Azure.Compute.GalleryApplication("example", new()
    ///     {
    ///         Name = "example-app",
    ///         GalleryId = exampleSharedImageGallery.Id,
    ///         Location = exampleResourceGroup.Location,
    ///         SupportedOsType = "Linux",
    ///     });
    /// 
    ///     var exampleAccount = new Azure.Storage.Account("example", new()
    ///     {
    ///         Name = "examplestorage",
    ///         ResourceGroupName = exampleResourceGroup.Name,
    ///         Location = exampleResourceGroup.Location,
    ///         AccountTier = "Standard",
    ///         AccountReplicationType = "LRS",
    ///     });
    /// 
    ///     var exampleContainer = new Azure.Storage.Container("example", new()
    ///     {
    ///         Name = "example-container",
    ///         StorageAccountName = exampleAccount.Name,
    ///         ContainerAccessType = "blob",
    ///     });
    /// 
    ///     var exampleBlob = new Azure.Storage.Blob("example", new()
    ///     {
    ///         Name = "scripts",
    ///         StorageAccountName = exampleAccount.Name,
    ///         StorageContainerName = exampleContainer.Name,
    ///         Type = "Block",
    ///         SourceContent = "[scripts file content]",
    ///     });
    /// 
    ///     var exampleGalleryApplicationVersion = new Azure.Compute.GalleryApplicationVersion("example", new()
    ///     {
    ///         Name = "0.0.1",
    ///         GalleryApplicationId = exampleGalleryApplication.Id,
    ///         Location = exampleGalleryApplication.Location,
    ///         ManageAction = new Azure.Compute.Inputs.GalleryApplicationVersionManageActionArgs
    ///         {
    ///             Install = "[install command]",
    ///             Remove = "[remove command]",
    ///         },
    ///         Source = new Azure.Compute.Inputs.GalleryApplicationVersionSourceArgs
    ///         {
    ///             MediaLink = exampleBlob.Id,
    ///         },
    ///         TargetRegions = new[]
    ///         {
    ///             new Azure.Compute.Inputs.GalleryApplicationVersionTargetRegionArgs
    ///             {
    ///                 Name = exampleGalleryApplication.Location,
    ///                 RegionalReplicaCount = 1,
    ///             },
    ///         },
    ///     });
    /// 
    ///     var exampleGalleryApplicationAssignment = new Azure.Compute.GalleryApplicationAssignment("example", new()
    ///     {
    ///         GalleryApplicationVersionId = exampleGalleryApplicationVersion.Id,
    ///         VirtualMachineId = example.Apply(getVirtualMachineResult =&gt; getVirtualMachineResult.Id),
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## API Providers
    /// 
    /// &lt;!-- This section is generated, changes will be overwritten --&gt;
    /// This resource uses the following Azure API Providers:
    /// 
    /// * `Microsoft.Compute`: 2024-03-01
    /// 
    /// ## Import
    /// 
    /// Virtual Machine Gallery Application Assignments can be imported using the `resource id`, e.g.
    /// 
    /// ```sh
    /// $ pulumi import azure:compute/galleryApplicationAssignment:GalleryApplicationAssignment example subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.Compute/virtualMachines/machine1|/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Compute/galleries/gallery1/applications/galleryApplication1/versions/galleryApplicationVersion1
    /// ```
    /// </summary>
    [AzureResourceType("azure:compute/galleryApplicationAssignment:GalleryApplicationAssignment")]
    public partial class GalleryApplicationAssignment : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Specifies the URI to an Azure Blob that will replace the default configuration for the package if provided. Changing this forces a new resource to be created.
        /// </summary>
        [Output("configurationBlobUri")]
        public Output<string?> ConfigurationBlobUri { get; private set; } = null!;

        /// <summary>
        /// The ID of the Gallery Application Version. Changing this forces a new resource to be created.
        /// </summary>
        [Output("galleryApplicationVersionId")]
        public Output<string> GalleryApplicationVersionId { get; private set; } = null!;

        /// <summary>
        /// Specifies the order in which the packages have to be installed. Possible values are between `0` and `2147483647`. Defaults to `0`.
        /// </summary>
        [Output("order")]
        public Output<int?> Order { get; private set; } = null!;

        /// <summary>
        /// Specifies a passthrough value for more generic context. This field can be any valid `string` value. Changing this forces a new resource to be created.
        /// </summary>
        [Output("tag")]
        public Output<string?> Tag { get; private set; } = null!;

        /// <summary>
        /// The ID of the Virtual Machine. Changing this forces a new resource to be created.
        /// </summary>
        [Output("virtualMachineId")]
        public Output<string> VirtualMachineId { get; private set; } = null!;


        /// <summary>
        /// Create a GalleryApplicationAssignment resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public GalleryApplicationAssignment(string name, GalleryApplicationAssignmentArgs args, CustomResourceOptions? options = null)
            : base("azure:compute/galleryApplicationAssignment:GalleryApplicationAssignment", name, args ?? new GalleryApplicationAssignmentArgs(), MakeResourceOptions(options, ""))
        {
        }

        private GalleryApplicationAssignment(string name, Input<string> id, GalleryApplicationAssignmentState? state = null, CustomResourceOptions? options = null)
            : base("azure:compute/galleryApplicationAssignment:GalleryApplicationAssignment", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing GalleryApplicationAssignment resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static GalleryApplicationAssignment Get(string name, Input<string> id, GalleryApplicationAssignmentState? state = null, CustomResourceOptions? options = null)
        {
            return new GalleryApplicationAssignment(name, id, state, options);
        }
    }

    public sealed class GalleryApplicationAssignmentArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies the URI to an Azure Blob that will replace the default configuration for the package if provided. Changing this forces a new resource to be created.
        /// </summary>
        [Input("configurationBlobUri")]
        public Input<string>? ConfigurationBlobUri { get; set; }

        /// <summary>
        /// The ID of the Gallery Application Version. Changing this forces a new resource to be created.
        /// </summary>
        [Input("galleryApplicationVersionId", required: true)]
        public Input<string> GalleryApplicationVersionId { get; set; } = null!;

        /// <summary>
        /// Specifies the order in which the packages have to be installed. Possible values are between `0` and `2147483647`. Defaults to `0`.
        /// </summary>
        [Input("order")]
        public Input<int>? Order { get; set; }

        /// <summary>
        /// Specifies a passthrough value for more generic context. This field can be any valid `string` value. Changing this forces a new resource to be created.
        /// </summary>
        [Input("tag")]
        public Input<string>? Tag { get; set; }

        /// <summary>
        /// The ID of the Virtual Machine. Changing this forces a new resource to be created.
        /// </summary>
        [Input("virtualMachineId", required: true)]
        public Input<string> VirtualMachineId { get; set; } = null!;

        public GalleryApplicationAssignmentArgs()
        {
        }
        public static new GalleryApplicationAssignmentArgs Empty => new GalleryApplicationAssignmentArgs();
    }

    public sealed class GalleryApplicationAssignmentState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies the URI to an Azure Blob that will replace the default configuration for the package if provided. Changing this forces a new resource to be created.
        /// </summary>
        [Input("configurationBlobUri")]
        public Input<string>? ConfigurationBlobUri { get; set; }

        /// <summary>
        /// The ID of the Gallery Application Version. Changing this forces a new resource to be created.
        /// </summary>
        [Input("galleryApplicationVersionId")]
        public Input<string>? GalleryApplicationVersionId { get; set; }

        /// <summary>
        /// Specifies the order in which the packages have to be installed. Possible values are between `0` and `2147483647`. Defaults to `0`.
        /// </summary>
        [Input("order")]
        public Input<int>? Order { get; set; }

        /// <summary>
        /// Specifies a passthrough value for more generic context. This field can be any valid `string` value. Changing this forces a new resource to be created.
        /// </summary>
        [Input("tag")]
        public Input<string>? Tag { get; set; }

        /// <summary>
        /// The ID of the Virtual Machine. Changing this forces a new resource to be created.
        /// </summary>
        [Input("virtualMachineId")]
        public Input<string>? VirtualMachineId { get; set; }

        public GalleryApplicationAssignmentState()
        {
        }
        public static new GalleryApplicationAssignmentState Empty => new GalleryApplicationAssignmentState();
    }
}
