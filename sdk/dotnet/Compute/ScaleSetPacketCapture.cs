// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Compute
{
    /// <summary>
    /// Configures Network Packet Capturing against a Virtual Machine Scale Set using a Network Watcher.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using Azure = Pulumi.Azure;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var exampleResourceGroup = new Azure.Core.ResourceGroup("exampleResourceGroup", new()
    ///     {
    ///         Location = "West Europe",
    ///     });
    /// 
    ///     var exampleNetworkWatcher = new Azure.Network.NetworkWatcher("exampleNetworkWatcher", new()
    ///     {
    ///         Location = exampleResourceGroup.Location,
    ///         ResourceGroupName = exampleResourceGroup.Name,
    ///     });
    /// 
    ///     var exampleVirtualNetwork = new Azure.Network.VirtualNetwork("exampleVirtualNetwork", new()
    ///     {
    ///         AddressSpaces = new[]
    ///         {
    ///             "10.0.0.0/16",
    ///         },
    ///         Location = exampleResourceGroup.Location,
    ///         ResourceGroupName = exampleResourceGroup.Name,
    ///     });
    /// 
    ///     var exampleSubnet = new Azure.Network.Subnet("exampleSubnet", new()
    ///     {
    ///         ResourceGroupName = exampleResourceGroup.Name,
    ///         VirtualNetworkName = exampleVirtualNetwork.Name,
    ///         AddressPrefixes = new[]
    ///         {
    ///             "10.0.2.0/24",
    ///         },
    ///     });
    /// 
    ///     var exampleLinuxVirtualMachineScaleSet = new Azure.Compute.LinuxVirtualMachineScaleSet("exampleLinuxVirtualMachineScaleSet", new()
    ///     {
    ///         ResourceGroupName = exampleResourceGroup.Name,
    ///         Location = exampleResourceGroup.Location,
    ///         Sku = "Standard_F2",
    ///         Instances = 4,
    ///         AdminUsername = "adminuser",
    ///         AdminPassword = "P@ssword1234!",
    ///         ComputerNamePrefix = "my-linux-computer-name-prefix",
    ///         UpgradeMode = "Automatic",
    ///         DisablePasswordAuthentication = false,
    ///         SourceImageReference = new Azure.Compute.Inputs.LinuxVirtualMachineScaleSetSourceImageReferenceArgs
    ///         {
    ///             Publisher = "Canonical",
    ///             Offer = "UbuntuServer",
    ///             Sku = "16.04-LTS",
    ///             Version = "latest",
    ///         },
    ///         OsDisk = new Azure.Compute.Inputs.LinuxVirtualMachineScaleSetOsDiskArgs
    ///         {
    ///             StorageAccountType = "Standard_LRS",
    ///             Caching = "ReadWrite",
    ///         },
    ///         NetworkInterfaces = new[]
    ///         {
    ///             new Azure.Compute.Inputs.LinuxVirtualMachineScaleSetNetworkInterfaceArgs
    ///             {
    ///                 Name = "example",
    ///                 Primary = true,
    ///                 IpConfigurations = new[]
    ///                 {
    ///                     new Azure.Compute.Inputs.LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationArgs
    ///                     {
    ///                         Name = "internal",
    ///                         Primary = true,
    ///                         SubnetId = exampleSubnet.Id,
    ///                     },
    ///                 },
    ///             },
    ///         },
    ///     });
    /// 
    ///     var exampleVirtualMachineScaleSetExtension = new Azure.Compute.VirtualMachineScaleSetExtension("exampleVirtualMachineScaleSetExtension", new()
    ///     {
    ///         VirtualMachineScaleSetId = exampleLinuxVirtualMachineScaleSet.Id,
    ///         Publisher = "Microsoft.Azure.NetworkWatcher",
    ///         Type = "NetworkWatcherAgentLinux",
    ///         TypeHandlerVersion = "1.4",
    ///         AutoUpgradeMinorVersion = true,
    ///         AutomaticUpgradeEnabled = true,
    ///     });
    /// 
    ///     var exampleScaleSetPacketCapture = new Azure.Compute.ScaleSetPacketCapture("exampleScaleSetPacketCapture", new()
    ///     {
    ///         NetworkWatcherId = exampleNetworkWatcher.Id,
    ///         VirtualMachineScaleSetId = exampleLinuxVirtualMachineScaleSet.Id,
    ///         StorageLocation = new Azure.Compute.Inputs.ScaleSetPacketCaptureStorageLocationArgs
    ///         {
    ///             FilePath = "/var/captures/packet.cap",
    ///         },
    ///         MachineScope = new Azure.Compute.Inputs.ScaleSetPacketCaptureMachineScopeArgs
    ///         {
    ///             IncludeInstanceIds = new[]
    ///             {
    ///                 "0",
    ///             },
    ///             ExcludeInstanceIds = new[]
    ///             {
    ///                 "1",
    ///             },
    ///         },
    ///     }, new CustomResourceOptions
    ///     {
    ///         DependsOn = new[]
    ///         {
    ///             exampleVirtualMachineScaleSetExtension,
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// &gt; **NOTE:** This Resource requires that [the Network Watcher Extension](https://docs.microsoft.com/azure/network-watcher/network-watcher-packet-capture-manage-portal#before-you-begin) is installed on the Virtual Machine Scale Set before capturing can be enabled which can be installed via the `azure.compute.VirtualMachineScaleSetExtension` resource.
    /// 
    /// ## Import
    /// 
    /// Virtual Machine Scale Set Packet Captures can be imported using the `resource id`, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import azure:compute/scaleSetPacketCapture:ScaleSetPacketCapture capture1 /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.Network/networkWatchers/watcher1/packetCaptures/capture1
    /// ```
    /// </summary>
    [AzureResourceType("azure:compute/scaleSetPacketCapture:ScaleSetPacketCapture")]
    public partial class ScaleSetPacketCapture : global::Pulumi.CustomResource
    {
        /// <summary>
        /// One or more `filter` blocks as defined below. Changing this forces a new resource to be created.
        /// </summary>
        [Output("filters")]
        public Output<ImmutableArray<Outputs.ScaleSetPacketCaptureFilter>> Filters { get; private set; } = null!;

        /// <summary>
        /// A `machine_scope` block as defined below. Changing this forces a new resource to be created.
        /// </summary>
        [Output("machineScope")]
        public Output<Outputs.ScaleSetPacketCaptureMachineScope?> MachineScope { get; private set; } = null!;

        /// <summary>
        /// The number of bytes captured per packet. The remaining bytes are truncated. Defaults to `0` (Entire Packet Captured). Changing this forces a new resource to be created.
        /// </summary>
        [Output("maximumBytesPerPacket")]
        public Output<int?> MaximumBytesPerPacket { get; private set; } = null!;

        /// <summary>
        /// Maximum size of the capture in Bytes. Defaults to `1073741824` (1GB). Changing this forces a new resource to be created.
        /// </summary>
        [Output("maximumBytesPerSession")]
        public Output<int?> MaximumBytesPerSession { get; private set; } = null!;

        /// <summary>
        /// The maximum duration of the capture session in seconds. Defaults to `18000` (5 hours). Changing this forces a new resource to be created.
        /// </summary>
        [Output("maximumCaptureDurationInSeconds")]
        public Output<int?> MaximumCaptureDurationInSeconds { get; private set; } = null!;

        /// <summary>
        /// The name to use for this Network Packet Capture. Changing this forces a new resource to be created.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The resource ID of the Network Watcher. Changing this forces a new resource to be created.
        /// </summary>
        [Output("networkWatcherId")]
        public Output<string> NetworkWatcherId { get; private set; } = null!;

        /// <summary>
        /// A `storage_location` block as defined below. Changing this forces a new resource to be created.
        /// </summary>
        [Output("storageLocation")]
        public Output<Outputs.ScaleSetPacketCaptureStorageLocation> StorageLocation { get; private set; } = null!;

        /// <summary>
        /// The resource ID of the Virtual Machine Scale Set to capture packets from. Changing this forces a new resource to be created.
        /// </summary>
        [Output("virtualMachineScaleSetId")]
        public Output<string> VirtualMachineScaleSetId { get; private set; } = null!;


        /// <summary>
        /// Create a ScaleSetPacketCapture resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ScaleSetPacketCapture(string name, ScaleSetPacketCaptureArgs args, CustomResourceOptions? options = null)
            : base("azure:compute/scaleSetPacketCapture:ScaleSetPacketCapture", name, args ?? new ScaleSetPacketCaptureArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ScaleSetPacketCapture(string name, Input<string> id, ScaleSetPacketCaptureState? state = null, CustomResourceOptions? options = null)
            : base("azure:compute/scaleSetPacketCapture:ScaleSetPacketCapture", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ScaleSetPacketCapture resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ScaleSetPacketCapture Get(string name, Input<string> id, ScaleSetPacketCaptureState? state = null, CustomResourceOptions? options = null)
        {
            return new ScaleSetPacketCapture(name, id, state, options);
        }
    }

    public sealed class ScaleSetPacketCaptureArgs : global::Pulumi.ResourceArgs
    {
        [Input("filters")]
        private InputList<Inputs.ScaleSetPacketCaptureFilterArgs>? _filters;

        /// <summary>
        /// One or more `filter` blocks as defined below. Changing this forces a new resource to be created.
        /// </summary>
        public InputList<Inputs.ScaleSetPacketCaptureFilterArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.ScaleSetPacketCaptureFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// A `machine_scope` block as defined below. Changing this forces a new resource to be created.
        /// </summary>
        [Input("machineScope")]
        public Input<Inputs.ScaleSetPacketCaptureMachineScopeArgs>? MachineScope { get; set; }

        /// <summary>
        /// The number of bytes captured per packet. The remaining bytes are truncated. Defaults to `0` (Entire Packet Captured). Changing this forces a new resource to be created.
        /// </summary>
        [Input("maximumBytesPerPacket")]
        public Input<int>? MaximumBytesPerPacket { get; set; }

        /// <summary>
        /// Maximum size of the capture in Bytes. Defaults to `1073741824` (1GB). Changing this forces a new resource to be created.
        /// </summary>
        [Input("maximumBytesPerSession")]
        public Input<int>? MaximumBytesPerSession { get; set; }

        /// <summary>
        /// The maximum duration of the capture session in seconds. Defaults to `18000` (5 hours). Changing this forces a new resource to be created.
        /// </summary>
        [Input("maximumCaptureDurationInSeconds")]
        public Input<int>? MaximumCaptureDurationInSeconds { get; set; }

        /// <summary>
        /// The name to use for this Network Packet Capture. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The resource ID of the Network Watcher. Changing this forces a new resource to be created.
        /// </summary>
        [Input("networkWatcherId", required: true)]
        public Input<string> NetworkWatcherId { get; set; } = null!;

        /// <summary>
        /// A `storage_location` block as defined below. Changing this forces a new resource to be created.
        /// </summary>
        [Input("storageLocation", required: true)]
        public Input<Inputs.ScaleSetPacketCaptureStorageLocationArgs> StorageLocation { get; set; } = null!;

        /// <summary>
        /// The resource ID of the Virtual Machine Scale Set to capture packets from. Changing this forces a new resource to be created.
        /// </summary>
        [Input("virtualMachineScaleSetId", required: true)]
        public Input<string> VirtualMachineScaleSetId { get; set; } = null!;

        public ScaleSetPacketCaptureArgs()
        {
        }
        public static new ScaleSetPacketCaptureArgs Empty => new ScaleSetPacketCaptureArgs();
    }

    public sealed class ScaleSetPacketCaptureState : global::Pulumi.ResourceArgs
    {
        [Input("filters")]
        private InputList<Inputs.ScaleSetPacketCaptureFilterGetArgs>? _filters;

        /// <summary>
        /// One or more `filter` blocks as defined below. Changing this forces a new resource to be created.
        /// </summary>
        public InputList<Inputs.ScaleSetPacketCaptureFilterGetArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.ScaleSetPacketCaptureFilterGetArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// A `machine_scope` block as defined below. Changing this forces a new resource to be created.
        /// </summary>
        [Input("machineScope")]
        public Input<Inputs.ScaleSetPacketCaptureMachineScopeGetArgs>? MachineScope { get; set; }

        /// <summary>
        /// The number of bytes captured per packet. The remaining bytes are truncated. Defaults to `0` (Entire Packet Captured). Changing this forces a new resource to be created.
        /// </summary>
        [Input("maximumBytesPerPacket")]
        public Input<int>? MaximumBytesPerPacket { get; set; }

        /// <summary>
        /// Maximum size of the capture in Bytes. Defaults to `1073741824` (1GB). Changing this forces a new resource to be created.
        /// </summary>
        [Input("maximumBytesPerSession")]
        public Input<int>? MaximumBytesPerSession { get; set; }

        /// <summary>
        /// The maximum duration of the capture session in seconds. Defaults to `18000` (5 hours). Changing this forces a new resource to be created.
        /// </summary>
        [Input("maximumCaptureDurationInSeconds")]
        public Input<int>? MaximumCaptureDurationInSeconds { get; set; }

        /// <summary>
        /// The name to use for this Network Packet Capture. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The resource ID of the Network Watcher. Changing this forces a new resource to be created.
        /// </summary>
        [Input("networkWatcherId")]
        public Input<string>? NetworkWatcherId { get; set; }

        /// <summary>
        /// A `storage_location` block as defined below. Changing this forces a new resource to be created.
        /// </summary>
        [Input("storageLocation")]
        public Input<Inputs.ScaleSetPacketCaptureStorageLocationGetArgs>? StorageLocation { get; set; }

        /// <summary>
        /// The resource ID of the Virtual Machine Scale Set to capture packets from. Changing this forces a new resource to be created.
        /// </summary>
        [Input("virtualMachineScaleSetId")]
        public Input<string>? VirtualMachineScaleSetId { get; set; }

        public ScaleSetPacketCaptureState()
        {
        }
        public static new ScaleSetPacketCaptureState Empty => new ScaleSetPacketCaptureState();
    }
}
