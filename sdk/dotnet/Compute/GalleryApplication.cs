// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Compute
{
    /// <summary>
    /// Manages a Gallery Application.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using Azure = Pulumi.Azure;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var exampleResourceGroup = new Azure.Core.ResourceGroup("exampleResourceGroup", new Azure.Core.ResourceGroupArgs
    ///         {
    ///             Location = "West Europe",
    ///         });
    ///         var exampleSharedImageGallery = new Azure.Compute.SharedImageGallery("exampleSharedImageGallery", new Azure.Compute.SharedImageGalleryArgs
    ///         {
    ///             ResourceGroupName = exampleResourceGroup.Name,
    ///             Location = exampleResourceGroup.Location,
    ///         });
    ///         var exampleGalleryApplication = new Azure.Compute.GalleryApplication("exampleGalleryApplication", new Azure.Compute.GalleryApplicationArgs
    ///         {
    ///             GalleryId = exampleSharedImageGallery.Id,
    ///             Location = exampleResourceGroup.Location,
    ///             SupportedOsType = "Linux",
    ///         });
    ///     }
    /// 
    /// }
    /// ```
    /// 
    /// ## Import
    /// 
    /// Gallery Applications can be imported using the `resource id`, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import azure:compute/galleryApplication:GalleryApplication example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Compute/galleries/gallery1/applications/galleryApplication1
    /// ```
    /// </summary>
    [AzureResourceType("azure:compute/galleryApplication:GalleryApplication")]
    public partial class GalleryApplication : Pulumi.CustomResource
    {
        /// <summary>
        /// A description of the Gallery Application.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// The end of life date in RFC3339 format of the Gallery Application.
        /// </summary>
        [Output("endOfLifeDate")]
        public Output<string?> EndOfLifeDate { get; private set; } = null!;

        /// <summary>
        /// The End User Licence Agreement of the Gallery Application.
        /// </summary>
        [Output("eula")]
        public Output<string?> Eula { get; private set; } = null!;

        /// <summary>
        /// The ID of the Shared Image Gallery. Changing this forces a new resource to be created.
        /// </summary>
        [Output("galleryId")]
        public Output<string> GalleryId { get; private set; } = null!;

        /// <summary>
        /// The Azure Region where the Gallery Application exists. Changing this forces a new resource to be created.
        /// </summary>
        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// The name of the Gallery Application. Changing this forces a new resource to be created.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The URI containing the Privacy Statement associated with the Gallery Application.
        /// </summary>
        [Output("privacyStatementUri")]
        public Output<string?> PrivacyStatementUri { get; private set; } = null!;

        /// <summary>
        /// The URI containing the Release Notes associated with the Gallery Application.
        /// </summary>
        [Output("releaseNoteUri")]
        public Output<string?> ReleaseNoteUri { get; private set; } = null!;

        /// <summary>
        /// The type of the Operating System supported for the Gallery Application. Possible values are `Linux` and `Windows`. Changing this forces a new resource to be created.
        /// </summary>
        [Output("supportedOsType")]
        public Output<string> SupportedOsType { get; private set; } = null!;

        /// <summary>
        /// A mapping of tags to assign to the Gallery Application.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;


        /// <summary>
        /// Create a GalleryApplication resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public GalleryApplication(string name, GalleryApplicationArgs args, CustomResourceOptions? options = null)
            : base("azure:compute/galleryApplication:GalleryApplication", name, args ?? new GalleryApplicationArgs(), MakeResourceOptions(options, ""))
        {
        }

        private GalleryApplication(string name, Input<string> id, GalleryApplicationState? state = null, CustomResourceOptions? options = null)
            : base("azure:compute/galleryApplication:GalleryApplication", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing GalleryApplication resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static GalleryApplication Get(string name, Input<string> id, GalleryApplicationState? state = null, CustomResourceOptions? options = null)
        {
            return new GalleryApplication(name, id, state, options);
        }
    }

    public sealed class GalleryApplicationArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// A description of the Gallery Application.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The end of life date in RFC3339 format of the Gallery Application.
        /// </summary>
        [Input("endOfLifeDate")]
        public Input<string>? EndOfLifeDate { get; set; }

        /// <summary>
        /// The End User Licence Agreement of the Gallery Application.
        /// </summary>
        [Input("eula")]
        public Input<string>? Eula { get; set; }

        /// <summary>
        /// The ID of the Shared Image Gallery. Changing this forces a new resource to be created.
        /// </summary>
        [Input("galleryId", required: true)]
        public Input<string> GalleryId { get; set; } = null!;

        /// <summary>
        /// The Azure Region where the Gallery Application exists. Changing this forces a new resource to be created.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// The name of the Gallery Application. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The URI containing the Privacy Statement associated with the Gallery Application.
        /// </summary>
        [Input("privacyStatementUri")]
        public Input<string>? PrivacyStatementUri { get; set; }

        /// <summary>
        /// The URI containing the Release Notes associated with the Gallery Application.
        /// </summary>
        [Input("releaseNoteUri")]
        public Input<string>? ReleaseNoteUri { get; set; }

        /// <summary>
        /// The type of the Operating System supported for the Gallery Application. Possible values are `Linux` and `Windows`. Changing this forces a new resource to be created.
        /// </summary>
        [Input("supportedOsType", required: true)]
        public Input<string> SupportedOsType { get; set; } = null!;

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// A mapping of tags to assign to the Gallery Application.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public GalleryApplicationArgs()
        {
        }
    }

    public sealed class GalleryApplicationState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// A description of the Gallery Application.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The end of life date in RFC3339 format of the Gallery Application.
        /// </summary>
        [Input("endOfLifeDate")]
        public Input<string>? EndOfLifeDate { get; set; }

        /// <summary>
        /// The End User Licence Agreement of the Gallery Application.
        /// </summary>
        [Input("eula")]
        public Input<string>? Eula { get; set; }

        /// <summary>
        /// The ID of the Shared Image Gallery. Changing this forces a new resource to be created.
        /// </summary>
        [Input("galleryId")]
        public Input<string>? GalleryId { get; set; }

        /// <summary>
        /// The Azure Region where the Gallery Application exists. Changing this forces a new resource to be created.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// The name of the Gallery Application. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The URI containing the Privacy Statement associated with the Gallery Application.
        /// </summary>
        [Input("privacyStatementUri")]
        public Input<string>? PrivacyStatementUri { get; set; }

        /// <summary>
        /// The URI containing the Release Notes associated with the Gallery Application.
        /// </summary>
        [Input("releaseNoteUri")]
        public Input<string>? ReleaseNoteUri { get; set; }

        /// <summary>
        /// The type of the Operating System supported for the Gallery Application. Possible values are `Linux` and `Windows`. Changing this forces a new resource to be created.
        /// </summary>
        [Input("supportedOsType")]
        public Input<string>? SupportedOsType { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// A mapping of tags to assign to the Gallery Application.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public GalleryApplicationState()
        {
        }
    }
}
