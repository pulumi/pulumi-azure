// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Compute
{
    /// <summary>
    /// Manages a Gallery Application Version.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Azure = Pulumi.Azure;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var exampleResourceGroup = new Azure.Core.ResourceGroup("exampleResourceGroup", new()
    ///     {
    ///         Location = "West Europe",
    ///     });
    /// 
    ///     var exampleSharedImageGallery = new Azure.Compute.SharedImageGallery("exampleSharedImageGallery", new()
    ///     {
    ///         ResourceGroupName = exampleResourceGroup.Name,
    ///         Location = exampleResourceGroup.Location,
    ///     });
    /// 
    ///     var exampleGalleryApplication = new Azure.Compute.GalleryApplication("exampleGalleryApplication", new()
    ///     {
    ///         GalleryId = exampleSharedImageGallery.Id,
    ///         Location = exampleResourceGroup.Location,
    ///         SupportedOsType = "Linux",
    ///     });
    /// 
    ///     var exampleAccount = new Azure.Storage.Account("exampleAccount", new()
    ///     {
    ///         ResourceGroupName = exampleResourceGroup.Name,
    ///         Location = exampleResourceGroup.Location,
    ///         AccountTier = "Standard",
    ///         AccountReplicationType = "LRS",
    ///     });
    /// 
    ///     var exampleContainer = new Azure.Storage.Container("exampleContainer", new()
    ///     {
    ///         StorageAccountName = exampleAccount.Name,
    ///         ContainerAccessType = "blob",
    ///     });
    /// 
    ///     var exampleBlob = new Azure.Storage.Blob("exampleBlob", new()
    ///     {
    ///         StorageAccountName = exampleAccount.Name,
    ///         StorageContainerName = exampleContainer.Name,
    ///         Type = "Block",
    ///         SourceContent = "[scripts file content]",
    ///     });
    /// 
    ///     var exampleGalleryApplicationVersion = new Azure.Compute.GalleryApplicationVersion("exampleGalleryApplicationVersion", new()
    ///     {
    ///         GalleryApplicationId = exampleGalleryApplication.Id,
    ///         Location = exampleGalleryApplication.Location,
    ///         ManageAction = new Azure.Compute.Inputs.GalleryApplicationVersionManageActionArgs
    ///         {
    ///             Install = "[install command]",
    ///             Remove = "[remove command]",
    ///         },
    ///         Source = new Azure.Compute.Inputs.GalleryApplicationVersionSourceArgs
    ///         {
    ///             MediaLink = exampleBlob.Id,
    ///         },
    ///         TargetRegions = new[]
    ///         {
    ///             new Azure.Compute.Inputs.GalleryApplicationVersionTargetRegionArgs
    ///             {
    ///                 Name = exampleGalleryApplication.Location,
    ///                 RegionalReplicaCount = 1,
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Gallery Application Versions can be imported using the `resource id`, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import azure:compute/galleryApplicationVersion:GalleryApplicationVersion example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Compute/galleries/gallery1/applications/galleryApplication1/versions/galleryApplicationVersion1
    /// ```
    /// </summary>
    [AzureResourceType("azure:compute/galleryApplicationVersion:GalleryApplicationVersion")]
    public partial class GalleryApplicationVersion : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Specifies the name of the config file on the VM. Changing this forces a new resource to be created.
        /// </summary>
        [Output("configFile")]
        public Output<string?> ConfigFile { get; private set; } = null!;

        /// <summary>
        /// Should the Gallery Application reports health. Defaults to `false`.
        /// </summary>
        [Output("enableHealthCheck")]
        public Output<bool?> EnableHealthCheck { get; private set; } = null!;

        /// <summary>
        /// The end of life date in RFC3339 format of the Gallery Application Version.
        /// </summary>
        [Output("endOfLifeDate")]
        public Output<string?> EndOfLifeDate { get; private set; } = null!;

        /// <summary>
        /// Should the Gallery Application Version be excluded from the `latest` filter? If set to `true` this Gallery Application Version won't be returned for the `latest` version. Defaults to `false`.
        /// </summary>
        [Output("excludeFromLatest")]
        public Output<bool?> ExcludeFromLatest { get; private set; } = null!;

        /// <summary>
        /// The ID of the Gallery Application. Changing this forces a new resource to be created.
        /// </summary>
        [Output("galleryApplicationId")]
        public Output<string> GalleryApplicationId { get; private set; } = null!;

        /// <summary>
        /// The Azure Region where the Gallery Application Version exists. Changing this forces a new resource to be created.
        /// </summary>
        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// A `manage_action` block as defined below.
        /// </summary>
        [Output("manageAction")]
        public Output<Outputs.GalleryApplicationVersionManageAction> ManageAction { get; private set; } = null!;

        /// <summary>
        /// The version name of the Gallery Application Version, such as `1.0.0`. Changing this forces a new resource to be created.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Specifies the name of the package file on the VM. Changing this forces a new resource to be created.
        /// </summary>
        [Output("packageFile")]
        public Output<string?> PackageFile { get; private set; } = null!;

        /// <summary>
        /// A `source` block as defined below.
        /// </summary>
        [Output("source")]
        public Output<Outputs.GalleryApplicationVersionSource> Source { get; private set; } = null!;

        /// <summary>
        /// A mapping of tags to assign to the Gallery Application Version.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// One or more `target_region` blocks as defined below.
        /// </summary>
        [Output("targetRegions")]
        public Output<ImmutableArray<Outputs.GalleryApplicationVersionTargetRegion>> TargetRegions { get; private set; } = null!;


        /// <summary>
        /// Create a GalleryApplicationVersion resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public GalleryApplicationVersion(string name, GalleryApplicationVersionArgs args, CustomResourceOptions? options = null)
            : base("azure:compute/galleryApplicationVersion:GalleryApplicationVersion", name, args ?? new GalleryApplicationVersionArgs(), MakeResourceOptions(options, ""))
        {
        }

        private GalleryApplicationVersion(string name, Input<string> id, GalleryApplicationVersionState? state = null, CustomResourceOptions? options = null)
            : base("azure:compute/galleryApplicationVersion:GalleryApplicationVersion", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing GalleryApplicationVersion resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static GalleryApplicationVersion Get(string name, Input<string> id, GalleryApplicationVersionState? state = null, CustomResourceOptions? options = null)
        {
            return new GalleryApplicationVersion(name, id, state, options);
        }
    }

    public sealed class GalleryApplicationVersionArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies the name of the config file on the VM. Changing this forces a new resource to be created.
        /// </summary>
        [Input("configFile")]
        public Input<string>? ConfigFile { get; set; }

        /// <summary>
        /// Should the Gallery Application reports health. Defaults to `false`.
        /// </summary>
        [Input("enableHealthCheck")]
        public Input<bool>? EnableHealthCheck { get; set; }

        /// <summary>
        /// The end of life date in RFC3339 format of the Gallery Application Version.
        /// </summary>
        [Input("endOfLifeDate")]
        public Input<string>? EndOfLifeDate { get; set; }

        /// <summary>
        /// Should the Gallery Application Version be excluded from the `latest` filter? If set to `true` this Gallery Application Version won't be returned for the `latest` version. Defaults to `false`.
        /// </summary>
        [Input("excludeFromLatest")]
        public Input<bool>? ExcludeFromLatest { get; set; }

        /// <summary>
        /// The ID of the Gallery Application. Changing this forces a new resource to be created.
        /// </summary>
        [Input("galleryApplicationId", required: true)]
        public Input<string> GalleryApplicationId { get; set; } = null!;

        /// <summary>
        /// The Azure Region where the Gallery Application Version exists. Changing this forces a new resource to be created.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// A `manage_action` block as defined below.
        /// </summary>
        [Input("manageAction", required: true)]
        public Input<Inputs.GalleryApplicationVersionManageActionArgs> ManageAction { get; set; } = null!;

        /// <summary>
        /// The version name of the Gallery Application Version, such as `1.0.0`. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Specifies the name of the package file on the VM. Changing this forces a new resource to be created.
        /// </summary>
        [Input("packageFile")]
        public Input<string>? PackageFile { get; set; }

        /// <summary>
        /// A `source` block as defined below.
        /// </summary>
        [Input("source", required: true)]
        public Input<Inputs.GalleryApplicationVersionSourceArgs> Source { get; set; } = null!;

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// A mapping of tags to assign to the Gallery Application Version.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("targetRegions", required: true)]
        private InputList<Inputs.GalleryApplicationVersionTargetRegionArgs>? _targetRegions;

        /// <summary>
        /// One or more `target_region` blocks as defined below.
        /// </summary>
        public InputList<Inputs.GalleryApplicationVersionTargetRegionArgs> TargetRegions
        {
            get => _targetRegions ?? (_targetRegions = new InputList<Inputs.GalleryApplicationVersionTargetRegionArgs>());
            set => _targetRegions = value;
        }

        public GalleryApplicationVersionArgs()
        {
        }
        public static new GalleryApplicationVersionArgs Empty => new GalleryApplicationVersionArgs();
    }

    public sealed class GalleryApplicationVersionState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies the name of the config file on the VM. Changing this forces a new resource to be created.
        /// </summary>
        [Input("configFile")]
        public Input<string>? ConfigFile { get; set; }

        /// <summary>
        /// Should the Gallery Application reports health. Defaults to `false`.
        /// </summary>
        [Input("enableHealthCheck")]
        public Input<bool>? EnableHealthCheck { get; set; }

        /// <summary>
        /// The end of life date in RFC3339 format of the Gallery Application Version.
        /// </summary>
        [Input("endOfLifeDate")]
        public Input<string>? EndOfLifeDate { get; set; }

        /// <summary>
        /// Should the Gallery Application Version be excluded from the `latest` filter? If set to `true` this Gallery Application Version won't be returned for the `latest` version. Defaults to `false`.
        /// </summary>
        [Input("excludeFromLatest")]
        public Input<bool>? ExcludeFromLatest { get; set; }

        /// <summary>
        /// The ID of the Gallery Application. Changing this forces a new resource to be created.
        /// </summary>
        [Input("galleryApplicationId")]
        public Input<string>? GalleryApplicationId { get; set; }

        /// <summary>
        /// The Azure Region where the Gallery Application Version exists. Changing this forces a new resource to be created.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// A `manage_action` block as defined below.
        /// </summary>
        [Input("manageAction")]
        public Input<Inputs.GalleryApplicationVersionManageActionGetArgs>? ManageAction { get; set; }

        /// <summary>
        /// The version name of the Gallery Application Version, such as `1.0.0`. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Specifies the name of the package file on the VM. Changing this forces a new resource to be created.
        /// </summary>
        [Input("packageFile")]
        public Input<string>? PackageFile { get; set; }

        /// <summary>
        /// A `source` block as defined below.
        /// </summary>
        [Input("source")]
        public Input<Inputs.GalleryApplicationVersionSourceGetArgs>? Source { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// A mapping of tags to assign to the Gallery Application Version.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("targetRegions")]
        private InputList<Inputs.GalleryApplicationVersionTargetRegionGetArgs>? _targetRegions;

        /// <summary>
        /// One or more `target_region` blocks as defined below.
        /// </summary>
        public InputList<Inputs.GalleryApplicationVersionTargetRegionGetArgs> TargetRegions
        {
            get => _targetRegions ?? (_targetRegions = new InputList<Inputs.GalleryApplicationVersionTargetRegionGetArgs>());
            set => _targetRegions = value;
        }

        public GalleryApplicationVersionState()
        {
        }
        public static new GalleryApplicationVersionState Empty => new GalleryApplicationVersionState();
    }
}
