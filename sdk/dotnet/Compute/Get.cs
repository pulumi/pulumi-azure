// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Compute
{
    public static class Get
    {
        /// <summary>
        /// Use this data source to access information about an existing Managed Disk.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Azure = Pulumi.Azure;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var existing = Azure.Compute.Get.Invoke(new()
        ///     {
        ///         ResourceGroupName = "example-resources",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["firstDiskId"] = existingAzurermManagedDisk.Disk[0].Id,
        ///     };
        /// });
        /// ```
        /// 
        /// ## API Providers
        /// 
        /// &lt;!-- This section is generated, changes will be overwritten --&gt;
        /// This data source uses the following Azure API Providers:
        /// 
        /// * `Microsoft.Compute` - 2023-04-02
        /// </summary>
        public static Task<GetResult> InvokeAsync(GetArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetResult>("azure:compute/get:get", args ?? new GetArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to access information about an existing Managed Disk.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Azure = Pulumi.Azure;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var existing = Azure.Compute.Get.Invoke(new()
        ///     {
        ///         ResourceGroupName = "example-resources",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["firstDiskId"] = existingAzurermManagedDisk.Disk[0].Id,
        ///     };
        /// });
        /// ```
        /// 
        /// ## API Providers
        /// 
        /// &lt;!-- This section is generated, changes will be overwritten --&gt;
        /// This data source uses the following Azure API Providers:
        /// 
        /// * `Microsoft.Compute` - 2023-04-02
        /// </summary>
        public static Output<GetResult> Invoke(GetInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetResult>("azure:compute/get:get", args ?? new GetInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to access information about an existing Managed Disk.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Azure = Pulumi.Azure;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var existing = Azure.Compute.Get.Invoke(new()
        ///     {
        ///         ResourceGroupName = "example-resources",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["firstDiskId"] = existingAzurermManagedDisk.Disk[0].Id,
        ///     };
        /// });
        /// ```
        /// 
        /// ## API Providers
        /// 
        /// &lt;!-- This section is generated, changes will be overwritten --&gt;
        /// This data source uses the following Azure API Providers:
        /// 
        /// * `Microsoft.Compute` - 2023-04-02
        /// </summary>
        public static Output<GetResult> Invoke(GetInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetResult>("azure:compute/get:get", args ?? new GetInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Specifies the name of the Resource Group where this Managed Disk exists.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetArgs()
        {
        }
        public static new GetArgs Empty => new GetArgs();
    }

    public sealed class GetInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Specifies the name of the Resource Group where this Managed Disk exists.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetInvokeArgs()
        {
        }
        public static new GetInvokeArgs Empty => new GetInvokeArgs();
    }


    [OutputType]
    public sealed class GetResult
    {
        /// <summary>
        /// a `disk` block as detailed below.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDiskResult> Disks;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string ResourceGroupName;

        [OutputConstructor]
        private GetResult(
            ImmutableArray<Outputs.GetDiskResult> disks,

            string id,

            string resourceGroupName)
        {
            Disks = disks;
            Id = id;
            ResourceGroupName = resourceGroupName;
        }
    }
}
