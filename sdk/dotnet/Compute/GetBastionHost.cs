// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Compute
{
    public static class GetBastionHost
    {
        /// <summary>
        /// Use this data source to access information about an existing Bastion Host.
        /// </summary>
        public static Task<GetBastionHostResult> InvokeAsync(GetBastionHostArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetBastionHostResult>("azure:compute/getBastionHost:getBastionHost", args ?? new GetBastionHostArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to access information about an existing Bastion Host.
        /// </summary>
        public static Output<GetBastionHostResult> Invoke(GetBastionHostInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetBastionHostResult>("azure:compute/getBastionHost:getBastionHost", args ?? new GetBastionHostInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetBastionHostArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the Bastion Host.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        /// <summary>
        /// The name of the Resource Group where the Bastion Host exists.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetBastionHostArgs()
        {
        }
        public static new GetBastionHostArgs Empty => new GetBastionHostArgs();
    }

    public sealed class GetBastionHostInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the Bastion Host.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// The name of the Resource Group where the Bastion Host exists.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetBastionHostInvokeArgs()
        {
        }
        public static new GetBastionHostInvokeArgs Empty => new GetBastionHostInvokeArgs();
    }


    [OutputType]
    public sealed class GetBastionHostResult
    {
        /// <summary>
        /// Is Copy/Paste feature enabled for the Bastion Host.
        /// </summary>
        public readonly bool CopyPasteEnabled;
        /// <summary>
        /// The FQDN for the Bastion Host.
        /// </summary>
        public readonly string DnsName;
        /// <summary>
        /// Is File Copy feature enabled for the Bastion Host.
        /// </summary>
        public readonly bool FileCopyEnabled;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// A `ip_configuration` block as defined below.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetBastionHostIpConfigurationResult> IpConfigurations;
        /// <summary>
        /// Is IP Connect feature enabled for the Bastion Host.
        /// </summary>
        public readonly bool IpConnectEnabled;
        /// <summary>
        /// The Azure Region where the Bastion Host exists.
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// The name of the IP configuration.
        /// </summary>
        public readonly string Name;
        public readonly string ResourceGroupName;
        /// <summary>
        /// The number of scale units provisioned for the Bastion Host.
        /// </summary>
        public readonly int ScaleUnits;
        /// <summary>
        /// Is Shareable Link feature enabled for the Bastion Host.
        /// </summary>
        public readonly bool ShareableLinkEnabled;
        /// <summary>
        /// The SKU of the Bastion Host.
        /// </summary>
        public readonly string Sku;
        /// <summary>
        /// A mapping of tags assigned to the Bastion Host.
        /// </summary>
        public readonly ImmutableDictionary<string, string> Tags;
        /// <summary>
        /// Is Tunneling feature enabled for the Bastion Host.
        /// </summary>
        public readonly bool TunnelingEnabled;

        [OutputConstructor]
        private GetBastionHostResult(
            bool copyPasteEnabled,

            string dnsName,

            bool fileCopyEnabled,

            string id,

            ImmutableArray<Outputs.GetBastionHostIpConfigurationResult> ipConfigurations,

            bool ipConnectEnabled,

            string location,

            string name,

            string resourceGroupName,

            int scaleUnits,

            bool shareableLinkEnabled,

            string sku,

            ImmutableDictionary<string, string> tags,

            bool tunnelingEnabled)
        {
            CopyPasteEnabled = copyPasteEnabled;
            DnsName = dnsName;
            FileCopyEnabled = fileCopyEnabled;
            Id = id;
            IpConfigurations = ipConfigurations;
            IpConnectEnabled = ipConnectEnabled;
            Location = location;
            Name = name;
            ResourceGroupName = resourceGroupName;
            ScaleUnits = scaleUnits;
            ShareableLinkEnabled = shareableLinkEnabled;
            Sku = sku;
            Tags = tags;
            TunnelingEnabled = tunnelingEnabled;
        }
    }
}
