// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Compute.Inputs
{

    public sealed class OrchestratedVirtualMachineScaleSetOsProfileWindowsConfigurationArgs : global::Pulumi.ResourceArgs
    {
        [Input("adminPassword", required: true)]
        private Input<string>? _adminPassword;

        /// <summary>
        /// The Password which should be used for the local-administrator on this Virtual Machine. Changing this forces a new resource to be created.
        /// </summary>
        public Input<string>? AdminPassword
        {
            get => _adminPassword;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _adminPassword = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// The username of the local administrator on each Virtual Machine Scale Set instance. Changing this forces a new resource to be created.
        /// </summary>
        [Input("adminUsername", required: true)]
        public Input<string> AdminUsername { get; set; } = null!;

        /// <summary>
        /// The prefix which should be used for the name of the Virtual Machines in this Scale Set. If unspecified this defaults to the value for the `name` field. If the value of the `name` field is not a valid `computer_name_prefix`, then you must specify `computer_name_prefix`. Changing this forces a new resource to be created.
        /// </summary>
        [Input("computerNamePrefix")]
        public Input<string>? ComputerNamePrefix { get; set; }

        /// <summary>
        /// Are automatic updates enabled for this Virtual Machine? Defaults to `true`.
        /// </summary>
        [Input("enableAutomaticUpdates")]
        public Input<bool>? EnableAutomaticUpdates { get; set; }

        [Input("hotpatchingEnabled")]
        public Input<bool>? HotpatchingEnabled { get; set; }

        /// <summary>
        /// Specifies the mode of VM Guest Patching for the virtual machines that are associated to the Virtual Machine Scale Set. Possible values are `AutomaticByPlatform` or `ImageDefault`. Defaults to `ImageDefault`.
        /// 
        /// &gt; **NOTE:** If the `patch_assessment_mode` is set to `AutomaticByPlatform` then the `provision_vm_agent` field must be set to `true`.
        /// </summary>
        [Input("patchAssessmentMode")]
        public Input<string>? PatchAssessmentMode { get; set; }

        /// <summary>
        /// Specifies the mode of in-guest patching of this Windows Virtual Machine. Possible values are `Manual`, `AutomaticByOS` and `AutomaticByPlatform`. Defaults to `AutomaticByOS`. For more information on patch modes please see the [product documentation](https://docs.microsoft.com/azure/virtual-machines/automatic-vm-guest-patching#patch-orchestration-modes).
        /// 
        /// &gt; **NOTE:** If `patch_mode` is set to `AutomaticByPlatform` the `provision_vm_agent` must be set to `true` and the `extension` must contain at least one application health extension.
        /// </summary>
        [Input("patchMode")]
        public Input<string>? PatchMode { get; set; }

        /// <summary>
        /// Should the Azure VM Agent be provisioned on each Virtual Machine in the Scale Set? Defaults to `true`. Changing this value forces a new resource to be created.
        /// </summary>
        [Input("provisionVmAgent")]
        public Input<bool>? ProvisionVmAgent { get; set; }

        [Input("secrets")]
        private InputList<Inputs.OrchestratedVirtualMachineScaleSetOsProfileWindowsConfigurationSecretArgs>? _secrets;

        /// <summary>
        /// One or more `secret` blocks as defined below.
        /// </summary>
        public InputList<Inputs.OrchestratedVirtualMachineScaleSetOsProfileWindowsConfigurationSecretArgs> Secrets
        {
            get => _secrets ?? (_secrets = new InputList<Inputs.OrchestratedVirtualMachineScaleSetOsProfileWindowsConfigurationSecretArgs>());
            set => _secrets = value;
        }

        /// <summary>
        /// Specifies the time zone of the virtual machine, the possible values are defined [here](https://jackstromberg.com/2017/01/list-of-time-zones-consumed-by-azure/).
        /// </summary>
        [Input("timezone")]
        public Input<string>? Timezone { get; set; }

        [Input("winrmListeners")]
        private InputList<Inputs.OrchestratedVirtualMachineScaleSetOsProfileWindowsConfigurationWinrmListenerArgs>? _winrmListeners;

        /// <summary>
        /// One or more `winrm_listener` blocks as defined below. Changing this forces a new resource to be created.
        /// </summary>
        public InputList<Inputs.OrchestratedVirtualMachineScaleSetOsProfileWindowsConfigurationWinrmListenerArgs> WinrmListeners
        {
            get => _winrmListeners ?? (_winrmListeners = new InputList<Inputs.OrchestratedVirtualMachineScaleSetOsProfileWindowsConfigurationWinrmListenerArgs>());
            set => _winrmListeners = value;
        }

        public OrchestratedVirtualMachineScaleSetOsProfileWindowsConfigurationArgs()
        {
        }
        public static new OrchestratedVirtualMachineScaleSetOsProfileWindowsConfigurationArgs Empty => new OrchestratedVirtualMachineScaleSetOsProfileWindowsConfigurationArgs();
    }
}
