// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Compute.Inputs
{

    public sealed class OrchestratedVirtualMachineScaleSetNetworkInterfaceGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies the auxiliary mode used to enable network high-performance feature on Network Virtual Appliances (NVAs). This feature offers competitive performance in Connections Per Second (CPS) optimization, along with improvements to handling large amounts of simultaneous connections. Possible values are `AcceleratedConnections` and `Floating`.
        /// 
        /// &gt; **Note:** `AuxiliaryMode` is in **Preview** and requires that the prerequisites are enabled - [more information can be found in the Azure documentation](https://learn.microsoft.com/azure/networking/nva-accelerated-connections#prerequisites).
        /// </summary>
        [Input("auxiliaryMode")]
        public Input<string>? AuxiliaryMode { get; set; }

        /// <summary>
        /// Specifies the SKU used for the network high-performance feature on Network Virtual Appliances (NVAs). Possible values are `A1`, `A2`, `A4` and `A8`.
        /// 
        /// &gt; **Note:** `AuxiliarySku` is in **Preview** and requires that the prerequisites are enabled - [more information can be found in the Azure documentation](https://learn.microsoft.com/azure/networking/nva-accelerated-connections#prerequisites).
        /// </summary>
        [Input("auxiliarySku")]
        public Input<string>? AuxiliarySku { get; set; }

        [Input("dnsServers")]
        private InputList<string>? _dnsServers;

        /// <summary>
        /// A list of IP Addresses of DNS Servers which should be assigned to the Network Interface.
        /// </summary>
        public InputList<string> DnsServers
        {
            get => _dnsServers ?? (_dnsServers = new InputList<string>());
            set => _dnsServers = value;
        }

        /// <summary>
        /// Does this Network Interface support Accelerated Networking? Possible values are `True` and `False`. Defaults to `False`.
        /// </summary>
        [Input("enableAcceleratedNetworking")]
        public Input<bool>? EnableAcceleratedNetworking { get; set; }

        /// <summary>
        /// Does this Network Interface support IP Forwarding? Possible values are `True` and `False`. Defaults to `False`.
        /// </summary>
        [Input("enableIpForwarding")]
        public Input<bool>? EnableIpForwarding { get; set; }

        [Input("ipConfigurations", required: true)]
        private InputList<Inputs.OrchestratedVirtualMachineScaleSetNetworkInterfaceIpConfigurationGetArgs>? _ipConfigurations;

        /// <summary>
        /// One or more `IpConfiguration` blocks as defined above.
        /// </summary>
        public InputList<Inputs.OrchestratedVirtualMachineScaleSetNetworkInterfaceIpConfigurationGetArgs> IpConfigurations
        {
            get => _ipConfigurations ?? (_ipConfigurations = new InputList<Inputs.OrchestratedVirtualMachineScaleSetNetworkInterfaceIpConfigurationGetArgs>());
            set => _ipConfigurations = value;
        }

        /// <summary>
        /// The Name which should be used for this Network Interface. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// The ID of a Network Security Group which should be assigned to this Network Interface.
        /// </summary>
        [Input("networkSecurityGroupId")]
        public Input<string>? NetworkSecurityGroupId { get; set; }

        /// <summary>
        /// Is this the Primary IP Configuration? Possible values are `True` and `False`. Defaults to `False`.
        /// 
        /// &gt; **Note:** If multiple `NetworkInterface` blocks are specified, one must be set to `Primary`.
        /// </summary>
        [Input("primary")]
        public Input<bool>? Primary { get; set; }

        public OrchestratedVirtualMachineScaleSetNetworkInterfaceGetArgs()
        {
        }
        public static new OrchestratedVirtualMachineScaleSetNetworkInterfaceGetArgs Empty => new OrchestratedVirtualMachineScaleSetNetworkInterfaceGetArgs();
    }
}
