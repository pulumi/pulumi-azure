// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Compute.Inputs
{

    public sealed class LinuxVirtualMachineOsDiskArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The Type of Caching which should be used for the Internal OS Disk. Possible values are `None`, `ReadOnly` and `ReadWrite`.
        /// </summary>
        [Input("caching", required: true)]
        public Input<string> Caching { get; set; } = null!;

        /// <summary>
        /// A `DiffDiskSettings` block as defined above. Changing this forces a new resource to be created.
        /// 
        /// &gt; **NOTE:** `DiffDiskSettings` can only be set when `Caching` is set to `ReadOnly`. More information can be found [here](https://docs.microsoft.com/azure/virtual-machines/ephemeral-os-disks-deploy#vm-template-deployment). Additionally, this property cannot be set when an existing Managed Disk is used to create the Virtual Machine by setting `OsManagedDiskId`.
        /// </summary>
        [Input("diffDiskSettings")]
        public Input<Inputs.LinuxVirtualMachineOsDiskDiffDiskSettingsArgs>? DiffDiskSettings { get; set; }

        /// <summary>
        /// The ID of the Disk Encryption Set which should be used to Encrypt this OS Disk. Conflicts with `SecureVmDiskEncryptionSetId`.
        /// 
        /// &gt; **NOTE:** The Disk Encryption Set must have the `Reader` Role Assignment scoped on the Key Vault - in addition to an Access Policy to the Key Vault
        /// </summary>
        [Input("diskEncryptionSetId")]
        public Input<string>? DiskEncryptionSetId { get; set; }

        /// <summary>
        /// The Size of the Internal OS Disk in GB, if you wish to vary from the size used in the image this Virtual Machine is sourced from.
        /// 
        /// &gt; **NOTE:** If specified this must be equal to or larger than the size of the Image the Virtual Machine is based on. When creating a larger disk than exists in the image you'll need to repartition the disk to use the remaining space.
        /// </summary>
        [Input("diskSizeGb")]
        public Input<int>? DiskSizeGb { get; set; }

        /// <summary>
        /// The ID of the OS disk.
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        /// <summary>
        /// The name which should be used for the Internal OS Disk. Changing this forces a new resource to be created.
        /// 
        /// &gt; **Note:** a value for `Name` cannot be specified if/when the Virtual Machine is/has been created using an existing Managed Disk for the OS by setting `OsManagedDiskId`.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The ID of the Disk Encryption Set which should be used to Encrypt this OS Disk when the Virtual Machine is a Confidential VM. Conflicts with `DiskEncryptionSetId`. Changing this forces a new resource to be created.
        /// 
        /// &gt; **NOTE:** `SecureVmDiskEncryptionSetId` can only be specified when `SecurityEncryptionType` is set to `DiskWithVMGuestState`.
        /// </summary>
        [Input("secureVmDiskEncryptionSetId")]
        public Input<string>? SecureVmDiskEncryptionSetId { get; set; }

        /// <summary>
        /// Encryption Type when the Virtual Machine is a Confidential VM. Possible values are `VMGuestStateOnly` and `DiskWithVMGuestState`. Changing this forces a new resource to be created.
        /// 
        /// &gt; **NOTE:** `VtpmEnabled` must be set to `True` when `SecurityEncryptionType` is specified.
        /// 
        /// &gt; **NOTE:** `EncryptionAtHostEnabled` cannot be set to `True` when `SecurityEncryptionType` is set to `DiskWithVMGuestState`.
        /// </summary>
        [Input("securityEncryptionType")]
        public Input<string>? SecurityEncryptionType { get; set; }

        /// <summary>
        /// The Type of Storage Account which should back this the Internal OS Disk. Possible values are `Standard_LRS`, `StandardSSD_LRS`, `Premium_LRS`, `StandardSSD_ZRS` and `Premium_ZRS`. Changing this forces a new resource to be created.
        /// 
        /// &gt; **Note:** This is required unless using an existing OS Managed Disk by specifying `OsManagedDiskId`.
        /// </summary>
        [Input("storageAccountType")]
        public Input<string>? StorageAccountType { get; set; }

        /// <summary>
        /// Should Write Accelerator be Enabled for this OS Disk? Defaults to `False`.
        /// 
        /// &gt; **NOTE:** This requires that the `StorageAccountType` is set to `Premium_LRS` and that `Caching` is set to `None`.
        /// </summary>
        [Input("writeAcceleratorEnabled")]
        public Input<bool>? WriteAcceleratorEnabled { get; set; }

        public LinuxVirtualMachineOsDiskArgs()
        {
        }
        public static new LinuxVirtualMachineOsDiskArgs Empty => new LinuxVirtualMachineOsDiskArgs();
    }
}
