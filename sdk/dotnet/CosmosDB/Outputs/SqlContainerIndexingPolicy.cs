// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.CosmosDB.Outputs
{

    [OutputType]
    public sealed class SqlContainerIndexingPolicy
    {
        /// <summary>
        /// One or more `CompositeIndex` blocks as defined below.
        /// </summary>
        public readonly ImmutableArray<Outputs.SqlContainerIndexingPolicyCompositeIndex> CompositeIndices;
        /// <summary>
        /// One or more `ExcludedPath` blocks as defined below. Either `IncludedPath` or `ExcludedPath` must contain the `Path` `/*`
        /// </summary>
        public readonly ImmutableArray<Outputs.SqlContainerIndexingPolicyExcludedPath> ExcludedPaths;
        /// <summary>
        /// One or more `IncludedPath` blocks as defined below. Either `IncludedPath` or `ExcludedPath` must contain the `Path` `/*`
        /// </summary>
        public readonly ImmutableArray<Outputs.SqlContainerIndexingPolicyIncludedPath> IncludedPaths;
        /// <summary>
        /// Indicates the indexing mode. Possible values include: `Consistent` and `None`. Defaults to `Consistent`.
        /// </summary>
        public readonly string? IndexingMode;
        /// <summary>
        /// One or more `SpatialIndex` blocks as defined below.
        /// </summary>
        public readonly ImmutableArray<Outputs.SqlContainerIndexingPolicySpatialIndex> SpatialIndices;

        [OutputConstructor]
        private SqlContainerIndexingPolicy(
            ImmutableArray<Outputs.SqlContainerIndexingPolicyCompositeIndex> compositeIndices,

            ImmutableArray<Outputs.SqlContainerIndexingPolicyExcludedPath> excludedPaths,

            ImmutableArray<Outputs.SqlContainerIndexingPolicyIncludedPath> includedPaths,

            string? indexingMode,

            ImmutableArray<Outputs.SqlContainerIndexingPolicySpatialIndex> spatialIndices)
        {
            CompositeIndices = compositeIndices;
            ExcludedPaths = excludedPaths;
            IncludedPaths = includedPaths;
            IndexingMode = indexingMode;
            SpatialIndices = spatialIndices;
        }
    }
}
