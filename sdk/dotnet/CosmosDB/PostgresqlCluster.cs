// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.CosmosDB
{
    /// <summary>
    /// Manages an Azure Cosmos DB for PostgreSQL Cluster.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Azure = Pulumi.Azure;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var exampleResourceGroup = new Azure.Core.ResourceGroup("exampleResourceGroup", new()
    ///     {
    ///         Location = "West Europe",
    ///     });
    /// 
    ///     var examplePostgresqlCluster = new Azure.CosmosDB.PostgresqlCluster("examplePostgresqlCluster", new()
    ///     {
    ///         ResourceGroupName = exampleResourceGroup.Name,
    ///         Location = exampleResourceGroup.Location,
    ///         AdministratorLoginPassword = "H@Sh1CoR3!",
    ///         CoordinatorStorageQuotaInMb = 131072,
    ///         CoordinatorVcoreCount = 2,
    ///         NodeCount = 0,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Azure Cosmos DB for PostgreSQL Clusters can be imported using the `resource id`, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import azure:cosmosdb/postgresqlCluster:PostgresqlCluster example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resourceGroup1/providers/Microsoft.DBforPostgreSQL/serverGroupsv2/cluster1
    /// ```
    /// </summary>
    [AzureResourceType("azure:cosmosdb/postgresqlCluster:PostgresqlCluster")]
    public partial class PostgresqlCluster : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The password of the administrator login. This is required when `source_resource_id` is not set.
        /// </summary>
        [Output("administratorLoginPassword")]
        public Output<string?> AdministratorLoginPassword { get; private set; } = null!;

        /// <summary>
        /// The citus extension version on the Azure Cosmos DB for PostgreSQL Cluster. Possible values are `8.3`, `9.0`, `9.1`, `9.2`, `9.3`, `9.4`, `9.5`, `10.0`, `10.1`, `10.2`, `11.0`, `11.1`, `11.2`, `11.3` and `12.1`.
        /// </summary>
        [Output("citusVersion")]
        public Output<string> CitusVersion { get; private set; } = null!;

        /// <summary>
        /// Is public access enabled on coordinator? Defaults to `true`.
        /// </summary>
        [Output("coordinatorPublicIpAccessEnabled")]
        public Output<bool?> CoordinatorPublicIpAccessEnabled { get; private set; } = null!;

        /// <summary>
        /// The edition of the coordinator server. Possible values are `BurstableGeneralPurpose`, `BurstableMemoryOptimized`, `GeneralPurpose` and `MemoryOptimized`. Defaults to `GeneralPurpose`.
        /// </summary>
        [Output("coordinatorServerEdition")]
        public Output<string?> CoordinatorServerEdition { get; private set; } = null!;

        /// <summary>
        /// The coordinator storage allowed for the Azure Cosmos DB for PostgreSQL Cluster. Possible values are `32768`, `65536`, `131072`, `262144`, `524288`, `1048576`, `2097152`, `4194304`, `8388608`, `16777216`, and `33554432`.
        /// 
        /// &gt; **NOTE:** More information on [the types of compute resources available for CosmosDB can be found in the product documentation](https://learn.microsoft.com/azure/cosmos-db/postgresql/resources-compute)
        /// </summary>
        [Output("coordinatorStorageQuotaInMb")]
        public Output<int?> CoordinatorStorageQuotaInMb { get; private set; } = null!;

        /// <summary>
        /// The coordinator vCore count for the Azure Cosmos DB for PostgreSQL Cluster. Possible values are `1`, `2`, `4`, `8`, `16`, `32`, `64` and `96`.
        /// </summary>
        [Output("coordinatorVcoreCount")]
        public Output<int?> CoordinatorVcoreCount { get; private set; } = null!;

        /// <summary>
        /// The earliest restore point time (ISO8601 format) for the Azure Cosmos DB for PostgreSQL Cluster.
        /// </summary>
        [Output("earliestRestoreTime")]
        public Output<string> EarliestRestoreTime { get; private set; } = null!;

        /// <summary>
        /// Is high availability enabled for the Azure Cosmos DB for PostgreSQL cluster? Defaults to `false`.
        /// </summary>
        [Output("haEnabled")]
        public Output<bool?> HaEnabled { get; private set; } = null!;

        /// <summary>
        /// The Azure Region where the Azure Cosmos DB for PostgreSQL Cluster should exist. Changing this forces a new resource to be created.
        /// </summary>
        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// A `maintenance_window` block as defined below.
        /// </summary>
        [Output("maintenanceWindow")]
        public Output<Outputs.PostgresqlClusterMaintenanceWindow?> MaintenanceWindow { get; private set; } = null!;

        /// <summary>
        /// The name which should be used for this Azure Cosmos DB for PostgreSQL Cluster. Changing this forces a new resource to be created.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The worker node count of the Azure Cosmos DB for PostgreSQL Cluster. Possible value is between `0` and `20` except `1`.
        /// </summary>
        [Output("nodeCount")]
        public Output<int> NodeCount { get; private set; } = null!;

        /// <summary>
        /// Is public access enabled on worker nodes. Defaults to `false`.
        /// </summary>
        [Output("nodePublicIpAccessEnabled")]
        public Output<bool?> NodePublicIpAccessEnabled { get; private set; } = null!;

        /// <summary>
        /// The edition of the node server. Possible values are `BurstableGeneralPurpose`, `BurstableMemoryOptimized`, `GeneralPurpose` and `MemoryOptimized`. Defaults to `MemoryOptimized`.
        /// </summary>
        [Output("nodeServerEdition")]
        public Output<string?> NodeServerEdition { get; private set; } = null!;

        /// <summary>
        /// The storage quota in MB on each worker node. Possible values are `32768`, `65536`, `131072`, `262144`, `524288`, `1048576`, `2097152`, `4194304`, `8388608` and `16777216`.
        /// </summary>
        [Output("nodeStorageQuotaInMb")]
        public Output<int> NodeStorageQuotaInMb { get; private set; } = null!;

        /// <summary>
        /// The vCores count on each worker node. Possible values are `1`, `2`, `4`, `8`, `16`, `32`, `64`, `96` and `104`.
        /// </summary>
        [Output("nodeVcores")]
        public Output<int> NodeVcores { get; private set; } = null!;

        /// <summary>
        /// The date and time in UTC (ISO8601 format) for the Azure Cosmos DB for PostgreSQL cluster restore. Changing this forces a new resource to be created.
        /// </summary>
        [Output("pointInTimeInUtc")]
        public Output<string?> PointInTimeInUtc { get; private set; } = null!;

        /// <summary>
        /// The preferred primary availability zone for the Azure Cosmos DB for PostgreSQL cluster.
        /// </summary>
        [Output("preferredPrimaryZone")]
        public Output<string?> PreferredPrimaryZone { get; private set; } = null!;

        /// <summary>
        /// The name of the Resource Group where the Azure Cosmos DB for PostgreSQL Cluster should exist. Changing this forces a new resource to be created.
        /// </summary>
        [Output("resourceGroupName")]
        public Output<string> ResourceGroupName { get; private set; } = null!;

        /// <summary>
        /// Is shards on coordinator enabled for the Azure Cosmos DB for PostgreSQL cluster.
        /// </summary>
        [Output("shardsOnCoordinatorEnabled")]
        public Output<bool> ShardsOnCoordinatorEnabled { get; private set; } = null!;

        /// <summary>
        /// The Azure region of the source Azure Cosmos DB for PostgreSQL cluster for read replica clusters. Changing this forces a new resource to be created.
        /// </summary>
        [Output("sourceLocation")]
        public Output<string?> SourceLocation { get; private set; } = null!;

        /// <summary>
        /// The resource ID of the source Azure Cosmos DB for PostgreSQL cluster for read replica clusters. Changing this forces a new resource to be created.
        /// </summary>
        [Output("sourceResourceId")]
        public Output<string?> SourceResourceId { get; private set; } = null!;

        /// <summary>
        /// The major PostgreSQL version on the Azure Cosmos DB for PostgreSQL cluster. Possible values are `11`, `12`, `13`, `14`, `15` and `16`.
        /// </summary>
        [Output("sqlVersion")]
        public Output<string> SqlVersion { get; private set; } = null!;

        /// <summary>
        /// A mapping of tags which should be assigned to the Azure Cosmos DB for PostgreSQL Cluster.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;


        /// <summary>
        /// Create a PostgresqlCluster resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public PostgresqlCluster(string name, PostgresqlClusterArgs args, CustomResourceOptions? options = null)
            : base("azure:cosmosdb/postgresqlCluster:PostgresqlCluster", name, args ?? new PostgresqlClusterArgs(), MakeResourceOptions(options, ""))
        {
        }

        private PostgresqlCluster(string name, Input<string> id, PostgresqlClusterState? state = null, CustomResourceOptions? options = null)
            : base("azure:cosmosdb/postgresqlCluster:PostgresqlCluster", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                AdditionalSecretOutputs =
                {
                    "administratorLoginPassword",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing PostgresqlCluster resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static PostgresqlCluster Get(string name, Input<string> id, PostgresqlClusterState? state = null, CustomResourceOptions? options = null)
        {
            return new PostgresqlCluster(name, id, state, options);
        }
    }

    public sealed class PostgresqlClusterArgs : global::Pulumi.ResourceArgs
    {
        [Input("administratorLoginPassword")]
        private Input<string>? _administratorLoginPassword;

        /// <summary>
        /// The password of the administrator login. This is required when `source_resource_id` is not set.
        /// </summary>
        public Input<string>? AdministratorLoginPassword
        {
            get => _administratorLoginPassword;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _administratorLoginPassword = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// The citus extension version on the Azure Cosmos DB for PostgreSQL Cluster. Possible values are `8.3`, `9.0`, `9.1`, `9.2`, `9.3`, `9.4`, `9.5`, `10.0`, `10.1`, `10.2`, `11.0`, `11.1`, `11.2`, `11.3` and `12.1`.
        /// </summary>
        [Input("citusVersion")]
        public Input<string>? CitusVersion { get; set; }

        /// <summary>
        /// Is public access enabled on coordinator? Defaults to `true`.
        /// </summary>
        [Input("coordinatorPublicIpAccessEnabled")]
        public Input<bool>? CoordinatorPublicIpAccessEnabled { get; set; }

        /// <summary>
        /// The edition of the coordinator server. Possible values are `BurstableGeneralPurpose`, `BurstableMemoryOptimized`, `GeneralPurpose` and `MemoryOptimized`. Defaults to `GeneralPurpose`.
        /// </summary>
        [Input("coordinatorServerEdition")]
        public Input<string>? CoordinatorServerEdition { get; set; }

        /// <summary>
        /// The coordinator storage allowed for the Azure Cosmos DB for PostgreSQL Cluster. Possible values are `32768`, `65536`, `131072`, `262144`, `524288`, `1048576`, `2097152`, `4194304`, `8388608`, `16777216`, and `33554432`.
        /// 
        /// &gt; **NOTE:** More information on [the types of compute resources available for CosmosDB can be found in the product documentation](https://learn.microsoft.com/azure/cosmos-db/postgresql/resources-compute)
        /// </summary>
        [Input("coordinatorStorageQuotaInMb")]
        public Input<int>? CoordinatorStorageQuotaInMb { get; set; }

        /// <summary>
        /// The coordinator vCore count for the Azure Cosmos DB for PostgreSQL Cluster. Possible values are `1`, `2`, `4`, `8`, `16`, `32`, `64` and `96`.
        /// </summary>
        [Input("coordinatorVcoreCount")]
        public Input<int>? CoordinatorVcoreCount { get; set; }

        /// <summary>
        /// Is high availability enabled for the Azure Cosmos DB for PostgreSQL cluster? Defaults to `false`.
        /// </summary>
        [Input("haEnabled")]
        public Input<bool>? HaEnabled { get; set; }

        /// <summary>
        /// The Azure Region where the Azure Cosmos DB for PostgreSQL Cluster should exist. Changing this forces a new resource to be created.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// A `maintenance_window` block as defined below.
        /// </summary>
        [Input("maintenanceWindow")]
        public Input<Inputs.PostgresqlClusterMaintenanceWindowArgs>? MaintenanceWindow { get; set; }

        /// <summary>
        /// The name which should be used for this Azure Cosmos DB for PostgreSQL Cluster. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The worker node count of the Azure Cosmos DB for PostgreSQL Cluster. Possible value is between `0` and `20` except `1`.
        /// </summary>
        [Input("nodeCount", required: true)]
        public Input<int> NodeCount { get; set; } = null!;

        /// <summary>
        /// Is public access enabled on worker nodes. Defaults to `false`.
        /// </summary>
        [Input("nodePublicIpAccessEnabled")]
        public Input<bool>? NodePublicIpAccessEnabled { get; set; }

        /// <summary>
        /// The edition of the node server. Possible values are `BurstableGeneralPurpose`, `BurstableMemoryOptimized`, `GeneralPurpose` and `MemoryOptimized`. Defaults to `MemoryOptimized`.
        /// </summary>
        [Input("nodeServerEdition")]
        public Input<string>? NodeServerEdition { get; set; }

        /// <summary>
        /// The storage quota in MB on each worker node. Possible values are `32768`, `65536`, `131072`, `262144`, `524288`, `1048576`, `2097152`, `4194304`, `8388608` and `16777216`.
        /// </summary>
        [Input("nodeStorageQuotaInMb")]
        public Input<int>? NodeStorageQuotaInMb { get; set; }

        /// <summary>
        /// The vCores count on each worker node. Possible values are `1`, `2`, `4`, `8`, `16`, `32`, `64`, `96` and `104`.
        /// </summary>
        [Input("nodeVcores")]
        public Input<int>? NodeVcores { get; set; }

        /// <summary>
        /// The date and time in UTC (ISO8601 format) for the Azure Cosmos DB for PostgreSQL cluster restore. Changing this forces a new resource to be created.
        /// </summary>
        [Input("pointInTimeInUtc")]
        public Input<string>? PointInTimeInUtc { get; set; }

        /// <summary>
        /// The preferred primary availability zone for the Azure Cosmos DB for PostgreSQL cluster.
        /// </summary>
        [Input("preferredPrimaryZone")]
        public Input<string>? PreferredPrimaryZone { get; set; }

        /// <summary>
        /// The name of the Resource Group where the Azure Cosmos DB for PostgreSQL Cluster should exist. Changing this forces a new resource to be created.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// Is shards on coordinator enabled for the Azure Cosmos DB for PostgreSQL cluster.
        /// </summary>
        [Input("shardsOnCoordinatorEnabled")]
        public Input<bool>? ShardsOnCoordinatorEnabled { get; set; }

        /// <summary>
        /// The Azure region of the source Azure Cosmos DB for PostgreSQL cluster for read replica clusters. Changing this forces a new resource to be created.
        /// </summary>
        [Input("sourceLocation")]
        public Input<string>? SourceLocation { get; set; }

        /// <summary>
        /// The resource ID of the source Azure Cosmos DB for PostgreSQL cluster for read replica clusters. Changing this forces a new resource to be created.
        /// </summary>
        [Input("sourceResourceId")]
        public Input<string>? SourceResourceId { get; set; }

        /// <summary>
        /// The major PostgreSQL version on the Azure Cosmos DB for PostgreSQL cluster. Possible values are `11`, `12`, `13`, `14`, `15` and `16`.
        /// </summary>
        [Input("sqlVersion")]
        public Input<string>? SqlVersion { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// A mapping of tags which should be assigned to the Azure Cosmos DB for PostgreSQL Cluster.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public PostgresqlClusterArgs()
        {
        }
        public static new PostgresqlClusterArgs Empty => new PostgresqlClusterArgs();
    }

    public sealed class PostgresqlClusterState : global::Pulumi.ResourceArgs
    {
        [Input("administratorLoginPassword")]
        private Input<string>? _administratorLoginPassword;

        /// <summary>
        /// The password of the administrator login. This is required when `source_resource_id` is not set.
        /// </summary>
        public Input<string>? AdministratorLoginPassword
        {
            get => _administratorLoginPassword;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _administratorLoginPassword = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// The citus extension version on the Azure Cosmos DB for PostgreSQL Cluster. Possible values are `8.3`, `9.0`, `9.1`, `9.2`, `9.3`, `9.4`, `9.5`, `10.0`, `10.1`, `10.2`, `11.0`, `11.1`, `11.2`, `11.3` and `12.1`.
        /// </summary>
        [Input("citusVersion")]
        public Input<string>? CitusVersion { get; set; }

        /// <summary>
        /// Is public access enabled on coordinator? Defaults to `true`.
        /// </summary>
        [Input("coordinatorPublicIpAccessEnabled")]
        public Input<bool>? CoordinatorPublicIpAccessEnabled { get; set; }

        /// <summary>
        /// The edition of the coordinator server. Possible values are `BurstableGeneralPurpose`, `BurstableMemoryOptimized`, `GeneralPurpose` and `MemoryOptimized`. Defaults to `GeneralPurpose`.
        /// </summary>
        [Input("coordinatorServerEdition")]
        public Input<string>? CoordinatorServerEdition { get; set; }

        /// <summary>
        /// The coordinator storage allowed for the Azure Cosmos DB for PostgreSQL Cluster. Possible values are `32768`, `65536`, `131072`, `262144`, `524288`, `1048576`, `2097152`, `4194304`, `8388608`, `16777216`, and `33554432`.
        /// 
        /// &gt; **NOTE:** More information on [the types of compute resources available for CosmosDB can be found in the product documentation](https://learn.microsoft.com/azure/cosmos-db/postgresql/resources-compute)
        /// </summary>
        [Input("coordinatorStorageQuotaInMb")]
        public Input<int>? CoordinatorStorageQuotaInMb { get; set; }

        /// <summary>
        /// The coordinator vCore count for the Azure Cosmos DB for PostgreSQL Cluster. Possible values are `1`, `2`, `4`, `8`, `16`, `32`, `64` and `96`.
        /// </summary>
        [Input("coordinatorVcoreCount")]
        public Input<int>? CoordinatorVcoreCount { get; set; }

        /// <summary>
        /// The earliest restore point time (ISO8601 format) for the Azure Cosmos DB for PostgreSQL Cluster.
        /// </summary>
        [Input("earliestRestoreTime")]
        public Input<string>? EarliestRestoreTime { get; set; }

        /// <summary>
        /// Is high availability enabled for the Azure Cosmos DB for PostgreSQL cluster? Defaults to `false`.
        /// </summary>
        [Input("haEnabled")]
        public Input<bool>? HaEnabled { get; set; }

        /// <summary>
        /// The Azure Region where the Azure Cosmos DB for PostgreSQL Cluster should exist. Changing this forces a new resource to be created.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// A `maintenance_window` block as defined below.
        /// </summary>
        [Input("maintenanceWindow")]
        public Input<Inputs.PostgresqlClusterMaintenanceWindowGetArgs>? MaintenanceWindow { get; set; }

        /// <summary>
        /// The name which should be used for this Azure Cosmos DB for PostgreSQL Cluster. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The worker node count of the Azure Cosmos DB for PostgreSQL Cluster. Possible value is between `0` and `20` except `1`.
        /// </summary>
        [Input("nodeCount")]
        public Input<int>? NodeCount { get; set; }

        /// <summary>
        /// Is public access enabled on worker nodes. Defaults to `false`.
        /// </summary>
        [Input("nodePublicIpAccessEnabled")]
        public Input<bool>? NodePublicIpAccessEnabled { get; set; }

        /// <summary>
        /// The edition of the node server. Possible values are `BurstableGeneralPurpose`, `BurstableMemoryOptimized`, `GeneralPurpose` and `MemoryOptimized`. Defaults to `MemoryOptimized`.
        /// </summary>
        [Input("nodeServerEdition")]
        public Input<string>? NodeServerEdition { get; set; }

        /// <summary>
        /// The storage quota in MB on each worker node. Possible values are `32768`, `65536`, `131072`, `262144`, `524288`, `1048576`, `2097152`, `4194304`, `8388608` and `16777216`.
        /// </summary>
        [Input("nodeStorageQuotaInMb")]
        public Input<int>? NodeStorageQuotaInMb { get; set; }

        /// <summary>
        /// The vCores count on each worker node. Possible values are `1`, `2`, `4`, `8`, `16`, `32`, `64`, `96` and `104`.
        /// </summary>
        [Input("nodeVcores")]
        public Input<int>? NodeVcores { get; set; }

        /// <summary>
        /// The date and time in UTC (ISO8601 format) for the Azure Cosmos DB for PostgreSQL cluster restore. Changing this forces a new resource to be created.
        /// </summary>
        [Input("pointInTimeInUtc")]
        public Input<string>? PointInTimeInUtc { get; set; }

        /// <summary>
        /// The preferred primary availability zone for the Azure Cosmos DB for PostgreSQL cluster.
        /// </summary>
        [Input("preferredPrimaryZone")]
        public Input<string>? PreferredPrimaryZone { get; set; }

        /// <summary>
        /// The name of the Resource Group where the Azure Cosmos DB for PostgreSQL Cluster should exist. Changing this forces a new resource to be created.
        /// </summary>
        [Input("resourceGroupName")]
        public Input<string>? ResourceGroupName { get; set; }

        /// <summary>
        /// Is shards on coordinator enabled for the Azure Cosmos DB for PostgreSQL cluster.
        /// </summary>
        [Input("shardsOnCoordinatorEnabled")]
        public Input<bool>? ShardsOnCoordinatorEnabled { get; set; }

        /// <summary>
        /// The Azure region of the source Azure Cosmos DB for PostgreSQL cluster for read replica clusters. Changing this forces a new resource to be created.
        /// </summary>
        [Input("sourceLocation")]
        public Input<string>? SourceLocation { get; set; }

        /// <summary>
        /// The resource ID of the source Azure Cosmos DB for PostgreSQL cluster for read replica clusters. Changing this forces a new resource to be created.
        /// </summary>
        [Input("sourceResourceId")]
        public Input<string>? SourceResourceId { get; set; }

        /// <summary>
        /// The major PostgreSQL version on the Azure Cosmos DB for PostgreSQL cluster. Possible values are `11`, `12`, `13`, `14`, `15` and `16`.
        /// </summary>
        [Input("sqlVersion")]
        public Input<string>? SqlVersion { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// A mapping of tags which should be assigned to the Azure Cosmos DB for PostgreSQL Cluster.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public PostgresqlClusterState()
        {
        }
        public static new PostgresqlClusterState Empty => new PostgresqlClusterState();
    }
}
