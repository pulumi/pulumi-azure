// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.CosmosDB
{
    /// <summary>
    /// Manages a SQL Dedicated Gateway within a Cosmos DB Account.
    /// 
    /// ## Import
    /// 
    /// CosmosDB SQL Dedicated Gateways can be imported using the `resource id`, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import azure:cosmosdb/sqlDedicatedGateway:SqlDedicatedGateway example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resourceGroup1/providers/Microsoft.DocumentDB/databaseAccounts/account1/services/SqlDedicatedGateway
    /// ```
    /// </summary>
    [AzureResourceType("azure:cosmosdb/sqlDedicatedGateway:SqlDedicatedGateway")]
    public partial class SqlDedicatedGateway : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The resource ID of the CosmosDB Account. Changing this forces a new resource to be created.
        /// </summary>
        [Output("cosmosdbAccountId")]
        public Output<string> CosmosdbAccountId { get; private set; } = null!;

        /// <summary>
        /// The instance count for the CosmosDB SQL Dedicated Gateway. Possible value is between `1` and `5`.
        /// </summary>
        [Output("instanceCount")]
        public Output<int> InstanceCount { get; private set; } = null!;

        /// <summary>
        /// The instance size for the CosmosDB SQL Dedicated Gateway. Changing this forces a new resource to be created. Possible values are `Cosmos.D4s`, `Cosmos.D8s` and `Cosmos.D16s`.
        /// </summary>
        [Output("instanceSize")]
        public Output<string> InstanceSize { get; private set; } = null!;


        /// <summary>
        /// Create a SqlDedicatedGateway resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public SqlDedicatedGateway(string name, SqlDedicatedGatewayArgs args, CustomResourceOptions? options = null)
            : base("azure:cosmosdb/sqlDedicatedGateway:SqlDedicatedGateway", name, args ?? new SqlDedicatedGatewayArgs(), MakeResourceOptions(options, ""))
        {
        }

        private SqlDedicatedGateway(string name, Input<string> id, SqlDedicatedGatewayState? state = null, CustomResourceOptions? options = null)
            : base("azure:cosmosdb/sqlDedicatedGateway:SqlDedicatedGateway", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing SqlDedicatedGateway resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static SqlDedicatedGateway Get(string name, Input<string> id, SqlDedicatedGatewayState? state = null, CustomResourceOptions? options = null)
        {
            return new SqlDedicatedGateway(name, id, state, options);
        }
    }

    public sealed class SqlDedicatedGatewayArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The resource ID of the CosmosDB Account. Changing this forces a new resource to be created.
        /// </summary>
        [Input("cosmosdbAccountId", required: true)]
        public Input<string> CosmosdbAccountId { get; set; } = null!;

        /// <summary>
        /// The instance count for the CosmosDB SQL Dedicated Gateway. Possible value is between `1` and `5`.
        /// </summary>
        [Input("instanceCount", required: true)]
        public Input<int> InstanceCount { get; set; } = null!;

        /// <summary>
        /// The instance size for the CosmosDB SQL Dedicated Gateway. Changing this forces a new resource to be created. Possible values are `Cosmos.D4s`, `Cosmos.D8s` and `Cosmos.D16s`.
        /// </summary>
        [Input("instanceSize", required: true)]
        public Input<string> InstanceSize { get; set; } = null!;

        public SqlDedicatedGatewayArgs()
        {
        }
        public static new SqlDedicatedGatewayArgs Empty => new SqlDedicatedGatewayArgs();
    }

    public sealed class SqlDedicatedGatewayState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The resource ID of the CosmosDB Account. Changing this forces a new resource to be created.
        /// </summary>
        [Input("cosmosdbAccountId")]
        public Input<string>? CosmosdbAccountId { get; set; }

        /// <summary>
        /// The instance count for the CosmosDB SQL Dedicated Gateway. Possible value is between `1` and `5`.
        /// </summary>
        [Input("instanceCount")]
        public Input<int>? InstanceCount { get; set; }

        /// <summary>
        /// The instance size for the CosmosDB SQL Dedicated Gateway. Changing this forces a new resource to be created. Possible values are `Cosmos.D4s`, `Cosmos.D8s` and `Cosmos.D16s`.
        /// </summary>
        [Input("instanceSize")]
        public Input<string>? InstanceSize { get; set; }

        public SqlDedicatedGatewayState()
        {
        }
        public static new SqlDedicatedGatewayState Empty => new SqlDedicatedGatewayState();
    }
}
