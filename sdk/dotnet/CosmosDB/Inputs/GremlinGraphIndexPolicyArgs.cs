// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.CosmosDB.Inputs
{

    public sealed class GremlinGraphIndexPolicyArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Indicates if the indexing policy is automatic. Defaults to `True`.
        /// </summary>
        [Input("automatic")]
        public Input<bool>? Automatic { get; set; }

        [Input("compositeIndices")]
        private InputList<Inputs.GremlinGraphIndexPolicyCompositeIndexArgs>? _compositeIndices;

        /// <summary>
        /// One or more `CompositeIndex` blocks as defined below.
        /// </summary>
        public InputList<Inputs.GremlinGraphIndexPolicyCompositeIndexArgs> CompositeIndices
        {
            get => _compositeIndices ?? (_compositeIndices = new InputList<Inputs.GremlinGraphIndexPolicyCompositeIndexArgs>());
            set => _compositeIndices = value;
        }

        [Input("excludedPaths")]
        private InputList<string>? _excludedPaths;

        /// <summary>
        /// List of paths to exclude from indexing. Required if `IndexingMode` is `Consistent` or `Lazy`.
        /// </summary>
        public InputList<string> ExcludedPaths
        {
            get => _excludedPaths ?? (_excludedPaths = new InputList<string>());
            set => _excludedPaths = value;
        }

        [Input("includedPaths")]
        private InputList<string>? _includedPaths;

        /// <summary>
        /// List of paths to include in the indexing. Required if `IndexingMode` is `Consistent` or `Lazy`.
        /// </summary>
        public InputList<string> IncludedPaths
        {
            get => _includedPaths ?? (_includedPaths = new InputList<string>());
            set => _includedPaths = value;
        }

        /// <summary>
        /// Indicates the indexing mode. Possible values include: `Consistent`, `Lazy`, `None`.
        /// </summary>
        [Input("indexingMode", required: true)]
        public Input<string> IndexingMode { get; set; } = null!;

        [Input("spatialIndices")]
        private InputList<Inputs.GremlinGraphIndexPolicySpatialIndexArgs>? _spatialIndices;

        /// <summary>
        /// One or more `SpatialIndex` blocks as defined below.
        /// </summary>
        public InputList<Inputs.GremlinGraphIndexPolicySpatialIndexArgs> SpatialIndices
        {
            get => _spatialIndices ?? (_spatialIndices = new InputList<Inputs.GremlinGraphIndexPolicySpatialIndexArgs>());
            set => _spatialIndices = value;
        }

        public GremlinGraphIndexPolicyArgs()
        {
        }
        public static new GremlinGraphIndexPolicyArgs Empty => new GremlinGraphIndexPolicyArgs();
    }
}
