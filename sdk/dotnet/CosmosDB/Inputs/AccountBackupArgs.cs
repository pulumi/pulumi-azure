// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.CosmosDB.Inputs
{

    public sealed class AccountBackupArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The interval in minutes between two backups. Possible values are between 60 and 1440. Defaults to `240`.
        /// </summary>
        [Input("intervalInMinutes")]
        public Input<int>? IntervalInMinutes { get; set; }

        /// <summary>
        /// The time in hours that each backup is retained. Possible values are between 8 and 720. Defaults to `8`.
        /// </summary>
        [Input("retentionInHours")]
        public Input<int>? RetentionInHours { get; set; }

        /// <summary>
        /// The storage redundancy is used to indicate the type of backup residency. Possible values are `Geo`, `Local` and `Zone`. Defaults to `Geo`.
        /// 
        /// &gt; **Note:** You can only configure `interval_in_minutes`, `retention_in_hours` and `storage_redundancy` when the `type` field is set to `Periodic`.
        /// </summary>
        [Input("storageRedundancy")]
        public Input<string>? StorageRedundancy { get; set; }

        /// <summary>
        /// The continuous backup tier. Possible values are `Continuous7Days` and `Continuous30Days`.
        /// </summary>
        [Input("tier")]
        public Input<string>? Tier { get; set; }

        /// <summary>
        /// The type of the `backup`. Possible values are `Continuous` and `Periodic`.
        /// 
        /// &gt; **Note:** Migration of `Periodic` to `Continuous` is one-way, changing `Continuous` to `Periodic` forces a new resource to be created.
        /// </summary>
        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        public AccountBackupArgs()
        {
        }
        public static new AccountBackupArgs Empty => new AccountBackupArgs();
    }
}
