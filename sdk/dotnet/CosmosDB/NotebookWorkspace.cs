// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.CosmosDB
{
    /// <summary>
    /// Manages an SQL Notebook Workspace.
    /// 
    /// !&gt; **Note:** CosmosDb Notebook Workspace is now Deprecated - as such the `azure.cosmosdb.NotebookWorkspace` resource is deprecated and will be removed in v4.0 of the AzureRM Provider.
    /// 
    /// &gt; **NOTE:** CosmosDb Notebook (the feature itself) is not deprecated and will return: &lt;https://learn.microsoft.com/en-us/azure/cosmos-db/notebooks-faq&gt;.
    /// 
    /// &gt; **NOTE:** However, CosmosDb Notebook feature no longer uses the permanent notebook workspace being referred to the public surface in the RP (have since moved to temporary notebooks workspaces which are short-lived &lt;1 hour).
    /// 
    /// ## Import
    /// 
    /// =SQL Notebook Workspaces can be imported using the `resource id`, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import azure:cosmosdb/notebookWorkspace:NotebookWorkspace example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.DocumentDB/databaseAccounts/account1/notebookWorkspaces/notebookWorkspace1
    /// ```
    /// </summary>
    [AzureResourceType("azure:cosmosdb/notebookWorkspace:NotebookWorkspace")]
    public partial class NotebookWorkspace : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The name of the Cosmos DB Account to create the SQL Notebook Workspace within. Changing this forces a new SQL Notebook Workspace to be created.
        /// </summary>
        [Output("accountName")]
        public Output<string> AccountName { get; private set; } = null!;

        /// <summary>
        /// The name which should be used for this SQL Notebook Workspace. Possible value is `default`. Changing this forces a new SQL Notebook Workspace to be created.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The name of the Resource Group where the SQL Notebook Workspace should exist. Changing this forces a new SQL Notebook Workspace to be created.
        /// </summary>
        [Output("resourceGroupName")]
        public Output<string> ResourceGroupName { get; private set; } = null!;

        /// <summary>
        /// Specifies the endpoint of Notebook server.
        /// </summary>
        [Output("serverEndpoint")]
        public Output<string> ServerEndpoint { get; private set; } = null!;


        /// <summary>
        /// Create a NotebookWorkspace resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public NotebookWorkspace(string name, NotebookWorkspaceArgs args, CustomResourceOptions? options = null)
            : base("azure:cosmosdb/notebookWorkspace:NotebookWorkspace", name, args ?? new NotebookWorkspaceArgs(), MakeResourceOptions(options, ""))
        {
        }

        private NotebookWorkspace(string name, Input<string> id, NotebookWorkspaceState? state = null, CustomResourceOptions? options = null)
            : base("azure:cosmosdb/notebookWorkspace:NotebookWorkspace", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing NotebookWorkspace resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static NotebookWorkspace Get(string name, Input<string> id, NotebookWorkspaceState? state = null, CustomResourceOptions? options = null)
        {
            return new NotebookWorkspace(name, id, state, options);
        }
    }

    public sealed class NotebookWorkspaceArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the Cosmos DB Account to create the SQL Notebook Workspace within. Changing this forces a new SQL Notebook Workspace to be created.
        /// </summary>
        [Input("accountName", required: true)]
        public Input<string> AccountName { get; set; } = null!;

        /// <summary>
        /// The name which should be used for this SQL Notebook Workspace. Possible value is `default`. Changing this forces a new SQL Notebook Workspace to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The name of the Resource Group where the SQL Notebook Workspace should exist. Changing this forces a new SQL Notebook Workspace to be created.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public NotebookWorkspaceArgs()
        {
        }
        public static new NotebookWorkspaceArgs Empty => new NotebookWorkspaceArgs();
    }

    public sealed class NotebookWorkspaceState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the Cosmos DB Account to create the SQL Notebook Workspace within. Changing this forces a new SQL Notebook Workspace to be created.
        /// </summary>
        [Input("accountName")]
        public Input<string>? AccountName { get; set; }

        /// <summary>
        /// The name which should be used for this SQL Notebook Workspace. Possible value is `default`. Changing this forces a new SQL Notebook Workspace to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The name of the Resource Group where the SQL Notebook Workspace should exist. Changing this forces a new SQL Notebook Workspace to be created.
        /// </summary>
        [Input("resourceGroupName")]
        public Input<string>? ResourceGroupName { get; set; }

        /// <summary>
        /// Specifies the endpoint of Notebook server.
        /// </summary>
        [Input("serverEndpoint")]
        public Input<string>? ServerEndpoint { get; set; }

        public NotebookWorkspaceState()
        {
        }
        public static new NotebookWorkspaceState Empty => new NotebookWorkspaceState();
    }
}
