// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Media
{
    [AzureResourceType("azure:media/accountFilter:AccountFilter")]
    public partial class AccountFilter : global::Pulumi.CustomResource
    {
        [Output("firstQualityBitrate")]
        public Output<int?> FirstQualityBitrate { get; private set; } = null!;

        [Output("mediaServicesAccountName")]
        public Output<string> MediaServicesAccountName { get; private set; } = null!;

        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("presentationTimeRange")]
        public Output<Outputs.AccountFilterPresentationTimeRange?> PresentationTimeRange { get; private set; } = null!;

        [Output("resourceGroupName")]
        public Output<string> ResourceGroupName { get; private set; } = null!;

        [Output("trackSelections")]
        public Output<ImmutableArray<Outputs.AccountFilterTrackSelection>> TrackSelections { get; private set; } = null!;


        /// <summary>
        /// Create a AccountFilter resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public AccountFilter(string name, AccountFilterArgs args, CustomResourceOptions? options = null)
            : base("azure:media/accountFilter:AccountFilter", name, args ?? new AccountFilterArgs(), MakeResourceOptions(options, ""))
        {
        }

        private AccountFilter(string name, Input<string> id, AccountFilterState? state = null, CustomResourceOptions? options = null)
            : base("azure:media/accountFilter:AccountFilter", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing AccountFilter resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static AccountFilter Get(string name, Input<string> id, AccountFilterState? state = null, CustomResourceOptions? options = null)
        {
            return new AccountFilter(name, id, state, options);
        }
    }

    public sealed class AccountFilterArgs : global::Pulumi.ResourceArgs
    {
        [Input("firstQualityBitrate")]
        public Input<int>? FirstQualityBitrate { get; set; }

        [Input("mediaServicesAccountName", required: true)]
        public Input<string> MediaServicesAccountName { get; set; } = null!;

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("presentationTimeRange")]
        public Input<Inputs.AccountFilterPresentationTimeRangeArgs>? PresentationTimeRange { get; set; }

        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        [Input("trackSelections")]
        private InputList<Inputs.AccountFilterTrackSelectionArgs>? _trackSelections;
        public InputList<Inputs.AccountFilterTrackSelectionArgs> TrackSelections
        {
            get => _trackSelections ?? (_trackSelections = new InputList<Inputs.AccountFilterTrackSelectionArgs>());
            set => _trackSelections = value;
        }

        public AccountFilterArgs()
        {
        }
        public static new AccountFilterArgs Empty => new AccountFilterArgs();
    }

    public sealed class AccountFilterState : global::Pulumi.ResourceArgs
    {
        [Input("firstQualityBitrate")]
        public Input<int>? FirstQualityBitrate { get; set; }

        [Input("mediaServicesAccountName")]
        public Input<string>? MediaServicesAccountName { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("presentationTimeRange")]
        public Input<Inputs.AccountFilterPresentationTimeRangeGetArgs>? PresentationTimeRange { get; set; }

        [Input("resourceGroupName")]
        public Input<string>? ResourceGroupName { get; set; }

        [Input("trackSelections")]
        private InputList<Inputs.AccountFilterTrackSelectionGetArgs>? _trackSelections;
        public InputList<Inputs.AccountFilterTrackSelectionGetArgs> TrackSelections
        {
            get => _trackSelections ?? (_trackSelections = new InputList<Inputs.AccountFilterTrackSelectionGetArgs>());
            set => _trackSelections = value;
        }

        public AccountFilterState()
        {
        }
        public static new AccountFilterState Empty => new AccountFilterState();
    }
}
