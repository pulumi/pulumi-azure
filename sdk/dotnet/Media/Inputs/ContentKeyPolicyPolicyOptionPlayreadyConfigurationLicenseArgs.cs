// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Media.Inputs
{

    public sealed class ContentKeyPolicyPolicyOptionPlayreadyConfigurationLicenseArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// A flag indicating whether test devices can use the license.
        /// </summary>
        [Input("allowTestDevices")]
        public Input<bool>? AllowTestDevices { get; set; }

        /// <summary>
        /// The begin date of license.
        /// </summary>
        [Input("beginDate")]
        public Input<string>? BeginDate { get; set; }

        /// <summary>
        /// Specifies that the content key ID is in the PlayReady header.
        /// </summary>
        [Input("contentKeyLocationFromHeaderEnabled")]
        public Input<bool>? ContentKeyLocationFromHeaderEnabled { get; set; }

        /// <summary>
        /// The content key ID. Specifies that the content key ID is specified in the PlayReady configuration.
        /// </summary>
        [Input("contentKeyLocationFromKeyId")]
        public Input<string>? ContentKeyLocationFromKeyId { get; set; }

        /// <summary>
        /// The PlayReady content type. Supported values are `UltraVioletDownload`, `UltraVioletStreaming` or `Unspecified`.
        /// </summary>
        [Input("contentType")]
        public Input<string>? ContentType { get; set; }

        /// <summary>
        /// The expiration date of license.
        /// </summary>
        [Input("expirationDate")]
        public Input<string>? ExpirationDate { get; set; }

        /// <summary>
        /// The grace period of license.
        /// </summary>
        [Input("gracePeriod")]
        public Input<string>? GracePeriod { get; set; }

        /// <summary>
        /// The license type. Supported values are `NonPersistent` or `Persistent`.
        /// </summary>
        [Input("licenseType")]
        public Input<string>? LicenseType { get; set; }

        /// <summary>
        /// A `play_right` block as defined above.
        /// </summary>
        [Input("playRight")]
        public Input<Inputs.ContentKeyPolicyPolicyOptionPlayreadyConfigurationLicensePlayRightArgs>? PlayRight { get; set; }

        /// <summary>
        /// The relative begin date of license.
        /// </summary>
        [Input("relativeBeginDate")]
        public Input<string>? RelativeBeginDate { get; set; }

        /// <summary>
        /// The relative expiration date of license.
        /// </summary>
        [Input("relativeExpirationDate")]
        public Input<string>? RelativeExpirationDate { get; set; }

        public ContentKeyPolicyPolicyOptionPlayreadyConfigurationLicenseArgs()
        {
        }
        public static new ContentKeyPolicyPolicyOptionPlayreadyConfigurationLicenseArgs Empty => new ContentKeyPolicyPolicyOptionPlayreadyConfigurationLicenseArgs();
    }
}
