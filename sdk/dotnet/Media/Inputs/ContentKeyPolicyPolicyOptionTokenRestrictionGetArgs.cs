// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Media.Inputs
{

    public sealed class ContentKeyPolicyPolicyOptionTokenRestrictionGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The audience for the token.
        /// </summary>
        [Input("audience")]
        public Input<string>? Audience { get; set; }

        /// <summary>
        /// The token issuer.
        /// </summary>
        [Input("issuer")]
        public Input<string>? Issuer { get; set; }

        /// <summary>
        /// The OpenID connect discovery document.
        /// </summary>
        [Input("openIdConnectDiscoveryDocument")]
        public Input<string>? OpenIdConnectDiscoveryDocument { get; set; }

        /// <summary>
        /// The RSA Parameter exponent.
        /// </summary>
        [Input("primaryRsaTokenKeyExponent")]
        public Input<string>? PrimaryRsaTokenKeyExponent { get; set; }

        /// <summary>
        /// The RSA Parameter modulus.
        /// </summary>
        [Input("primaryRsaTokenKeyModulus")]
        public Input<string>? PrimaryRsaTokenKeyModulus { get; set; }

        /// <summary>
        /// The key value of the key. Specifies a symmetric key for token validation.
        /// </summary>
        [Input("primarySymmetricTokenKey")]
        public Input<string>? PrimarySymmetricTokenKey { get; set; }

        /// <summary>
        /// The raw data field of a certificate in PKCS 12 format (X509Certificate2 in .NET). Specifies a certificate for token validation.
        /// </summary>
        [Input("primaryX509TokenKeyRaw")]
        public Input<string>? PrimaryX509TokenKeyRaw { get; set; }

        [Input("requiredClaims")]
        private InputList<Inputs.ContentKeyPolicyPolicyOptionTokenRestrictionRequiredClaimGetArgs>? _requiredClaims;

        /// <summary>
        /// One or more `required_claim` blocks as defined above.
        /// </summary>
        public InputList<Inputs.ContentKeyPolicyPolicyOptionTokenRestrictionRequiredClaimGetArgs> RequiredClaims
        {
            get => _requiredClaims ?? (_requiredClaims = new InputList<Inputs.ContentKeyPolicyPolicyOptionTokenRestrictionRequiredClaimGetArgs>());
            set => _requiredClaims = value;
        }

        /// <summary>
        /// The type of token. Supported values are `Jwt` or `Swt`.
        /// </summary>
        [Input("tokenType")]
        public Input<string>? TokenType { get; set; }

        public ContentKeyPolicyPolicyOptionTokenRestrictionGetArgs()
        {
        }
        public static new ContentKeyPolicyPolicyOptionTokenRestrictionGetArgs Empty => new ContentKeyPolicyPolicyOptionTokenRestrictionGetArgs();
    }
}
