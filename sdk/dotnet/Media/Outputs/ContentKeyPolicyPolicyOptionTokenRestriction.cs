// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Media.Outputs
{

    [OutputType]
    public sealed class ContentKeyPolicyPolicyOptionTokenRestriction
    {
        /// <summary>
        /// The audience for the token.
        /// </summary>
        public readonly string? Audience;
        /// <summary>
        /// The token issuer.
        /// </summary>
        public readonly string? Issuer;
        /// <summary>
        /// The OpenID connect discovery document.
        /// </summary>
        public readonly string? OpenIdConnectDiscoveryDocument;
        /// <summary>
        /// The RSA Parameter exponent.
        /// </summary>
        public readonly string? PrimaryRsaTokenKeyExponent;
        /// <summary>
        /// The RSA Parameter modulus.
        /// </summary>
        public readonly string? PrimaryRsaTokenKeyModulus;
        /// <summary>
        /// The key value of the key. Specifies a symmetric key for token validation.
        /// </summary>
        public readonly string? PrimarySymmetricTokenKey;
        /// <summary>
        /// The raw data field of a certificate in PKCS 12 format (X509Certificate2 in .NET). Specifies a certificate for token validation.
        /// </summary>
        public readonly string? PrimaryX509TokenKeyRaw;
        /// <summary>
        /// One or more `required_claim` blocks as defined above.
        /// </summary>
        public readonly ImmutableArray<Outputs.ContentKeyPolicyPolicyOptionTokenRestrictionRequiredClaim> RequiredClaims;
        /// <summary>
        /// The type of token. Supported values are `Jwt` or `Swt`.
        /// </summary>
        public readonly string? TokenType;

        [OutputConstructor]
        private ContentKeyPolicyPolicyOptionTokenRestriction(
            string? audience,

            string? issuer,

            string? openIdConnectDiscoveryDocument,

            string? primaryRsaTokenKeyExponent,

            string? primaryRsaTokenKeyModulus,

            string? primarySymmetricTokenKey,

            string? primaryX509TokenKeyRaw,

            ImmutableArray<Outputs.ContentKeyPolicyPolicyOptionTokenRestrictionRequiredClaim> requiredClaims,

            string? tokenType)
        {
            Audience = audience;
            Issuer = issuer;
            OpenIdConnectDiscoveryDocument = openIdConnectDiscoveryDocument;
            PrimaryRsaTokenKeyExponent = primaryRsaTokenKeyExponent;
            PrimaryRsaTokenKeyModulus = primaryRsaTokenKeyModulus;
            PrimarySymmetricTokenKey = primarySymmetricTokenKey;
            PrimaryX509TokenKeyRaw = primaryX509TokenKeyRaw;
            RequiredClaims = requiredClaims;
            TokenType = tokenType;
        }
    }
}
