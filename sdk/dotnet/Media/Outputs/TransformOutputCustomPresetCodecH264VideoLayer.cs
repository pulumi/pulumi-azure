// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Media.Outputs
{

    [OutputType]
    public sealed class TransformOutputCustomPresetCodecH264VideoLayer
    {
        /// <summary>
        /// Whether adaptive B-frames are used when encoding this layer. If not specified, the encoder will turn it on whenever the video profile permits its use. Default to `true`.`adaptive_b_frame_enabled` - (Optional) Whether adaptive B-frames are used when encoding this layer. If not specified, the encoder will turn it on whenever the video profile permits its use. Default to `true`.
        /// </summary>
        public readonly bool? AdaptiveBFrameEnabled;
        /// <summary>
        /// The number of B-frames to use when encoding this layer. If not specified, the encoder chooses an appropriate number based on the video profile and level.`b_frames` - (Optional) The number of B-frames to use when encoding this layer. If not specified, the encoder chooses an appropriate number based on the video profile and level.
        /// </summary>
        public readonly int? BFrames;
        /// <summary>
        /// The bitrate of the audio in bits per second. Default to `128000`.
        /// </summary>
        public readonly int Bitrate;
        /// <summary>
        /// Specifies the maximum amount of time that the encoder should buffer frames before encoding. The value should be in ISO 8601 format. The value should be in the range `0.1` to `100` seconds. The default is `5` seconds (`PT5S`).`buffer_window` - (Optional) Specifies the maximum amount of time that the encoder should buffer frames before encoding. The value should be in ISO 8601 format. The value should be in the range `0.1` to `100` seconds. The default is `5` seconds (`PT5S`).
        /// </summary>
        public readonly string? BufferWindow;
        /// <summary>
        /// The value of CRF to be used when encoding this layer. This setting takes effect when `rate_control_mode` is set `CRF`. The range of CRF value is between `0` and `51`, where lower values would result in better quality, at the expense of higher file sizes. Higher values mean more compression, but at some point quality degradation will be noticed. Default to `23`.`crf` - (Optional) The value of CRF to be used when encoding this layer. This setting takes effect when `rate_control_mode` is set `CRF`. The range of CRF value is between `0` and `51`, where lower values would result in better quality, at the expense of higher file sizes. Higher values mean more compression, but at some point quality degradation will be noticed. Default to `28`.
        /// </summary>
        public readonly double? Crf;
        /// <summary>
        /// The entropy mode to be used for this layer. Possible values are `Cabac` or `Cavlc`. If not specified, the encoder chooses the mode that is appropriate for the profile and level.`entropy_mode` - (Optional) The entropy mode to be used for this layer. Possible values are `Cabac` or `Cavlc`. If not specified, the encoder chooses the mode that is appropriate for the profile and level.
        /// </summary>
        public readonly string? EntropyMode;
        /// <summary>
        /// The frame rate (in frames per second) at which to encode this layer. The value can be in the form of `M/N` where `M` and `N` are integers (For example, `30000/1001`), or in the form of a number (For example, `30`, or `29.97`). The encoder enforces constraints on allowed frame rates based on the profile and level. If it is not specified, the encoder will use the same frame rate as the input video.`frame_rate` - (Optional) 	
        /// The frame rate (in frames per second) at which to encode this layer. The value can be in the form of `M/N` where `M` and `N` are integers (For example, `30000/1001`), or in the form of a number (For example, `30`, or `29.97`). The encoder enforces constraints on allowed frame rates based on the profile and level. If it is not specified, the encoder will use the same frame rate as the input video.
        /// </summary>
        public readonly string? FrameRate;
        /// <summary>
        /// The height of the rectangular region in pixels. This can be absolute pixel value (e.g `100`), or relative to the size of the video (For example, `50%`).
        /// </summary>
        public readonly string? Height;
        /// <summary>
        /// Specifies the label for the codec. The label can be used to control muxing behavior.
        /// </summary>
        public readonly string? Label;
        /// <summary>
        /// The H.264 levels. Currently, the resource support Level up to `6.2`. The value can be `auto`, or a number that matches the H.264 profile. If not specified, the default is `auto`, which lets the encoder choose the Level that is appropriate for this layer.`level` - (Optional) The H.264 levels. Currently, the resource support Level up to `6.2`. The value can be `auto`, or a number that matches the H.264 profile. If not specified, the default is `auto`, which lets the encoder choose the Level that is appropriate for this layer.
        /// </summary>
        public readonly string? Level;
        /// <summary>
        /// The maximum bitrate (in bits per second), at which the VBV buffer should be assumed to refill. If not specified, defaults to the same value as bitrate.`max_bitrate` - (Optional) The maximum bitrate (in bits per second), at which the VBV buffer should be assumed to refill. If not specified, defaults to the same value as bitrate.
        /// </summary>
        public readonly int? MaxBitrate;
        /// <summary>
        /// The encoding profile to be used when encoding audio with AAC. Possible values are `AacLc`, `HeAacV1`,and `HeAacV2`. Default to `AacLc`.
        /// </summary>
        public readonly string? Profile;
        /// <summary>
        /// The number of reference frames to be used when encoding this layer. If not specified, the encoder determines an appropriate number based on the encoder complexity setting.`reference_frames` - (Optional) The number of reference frames to be used when encoding this layer. If not specified, the encoder determines an appropriate number based on the encoder complexity setting.
        /// </summary>
        public readonly int? ReferenceFrames;
        /// <summary>
        /// The number of slices to be used when encoding this layer. If not specified, default is `1`, which means that encoder will use a single slice for each frame.`slices` - (Optional) The number of slices to be used when encoding this layer. If not specified, default is `1`, which means that encoder will use a single slice for each frame.
        /// </summary>
        public readonly int? Slices;
        /// <summary>
        /// The width of the rectangular region in pixels. This can be absolute pixel value (e.g` 100`), or relative to the size of the video (For example, `50%`).
        /// </summary>
        public readonly string? Width;

        [OutputConstructor]
        private TransformOutputCustomPresetCodecH264VideoLayer(
            bool? adaptiveBFrameEnabled,

            int? bFrames,

            int bitrate,

            string? bufferWindow,

            double? crf,

            string? entropyMode,

            string? frameRate,

            string? height,

            string? label,

            string? level,

            int? maxBitrate,

            string? profile,

            int? referenceFrames,

            int? slices,

            string? width)
        {
            AdaptiveBFrameEnabled = adaptiveBFrameEnabled;
            BFrames = bFrames;
            Bitrate = bitrate;
            BufferWindow = bufferWindow;
            Crf = crf;
            EntropyMode = entropyMode;
            FrameRate = frameRate;
            Height = height;
            Label = label;
            Level = level;
            MaxBitrate = maxBitrate;
            Profile = profile;
            ReferenceFrames = referenceFrames;
            Slices = slices;
            Width = width;
        }
    }
}
