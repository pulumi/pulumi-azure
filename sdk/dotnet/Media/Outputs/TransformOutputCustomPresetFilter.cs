// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Media.Outputs
{

    [OutputType]
    public sealed class TransformOutputCustomPresetFilter
    {
        /// <summary>
        /// A `crop_rectangle` block as defined above.
        /// </summary>
        public readonly Outputs.TransformOutputCustomPresetFilterCropRectangle? CropRectangle;
        /// <summary>
        /// A `deinterlace` block as defined below.
        /// </summary>
        public readonly Outputs.TransformOutputCustomPresetFilterDeinterlace? Deinterlace;
        /// <summary>
        /// A `fade_in` block as defined above.
        /// </summary>
        public readonly Outputs.TransformOutputCustomPresetFilterFadeIn? FadeIn;
        /// <summary>
        /// A `fade_out` block as defined above.
        /// </summary>
        public readonly Outputs.TransformOutputCustomPresetFilterFadeOut? FadeOut;
        /// <summary>
        /// One or more `overlay` blocks as defined below.
        /// </summary>
        public readonly ImmutableArray<Outputs.TransformOutputCustomPresetFilterOverlay> Overlays;
        /// <summary>
        /// The rotation to be applied to the input video before it is encoded. Possible values are `Auto`, `None`, `Rotate90`, `Rotate180`, `Rotate270`,or `Rotate0`. Default to `Auto`.
        /// </summary>
        public readonly string? Rotation;

        [OutputConstructor]
        private TransformOutputCustomPresetFilter(
            Outputs.TransformOutputCustomPresetFilterCropRectangle? cropRectangle,

            Outputs.TransformOutputCustomPresetFilterDeinterlace? deinterlace,

            Outputs.TransformOutputCustomPresetFilterFadeIn? fadeIn,

            Outputs.TransformOutputCustomPresetFilterFadeOut? fadeOut,

            ImmutableArray<Outputs.TransformOutputCustomPresetFilterOverlay> overlays,

            string? rotation)
        {
            CropRectangle = cropRectangle;
            Deinterlace = deinterlace;
            FadeIn = fadeIn;
            FadeOut = fadeOut;
            Overlays = overlays;
            Rotation = rotation;
        }
    }
}
