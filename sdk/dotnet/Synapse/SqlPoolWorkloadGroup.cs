// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Synapse
{
    /// <summary>
    /// Manages a Synapse Sql Pool Workload Group.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using Azure = Pulumi.Azure;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var exampleResourceGroup = new Azure.Core.ResourceGroup("exampleResourceGroup", new Azure.Core.ResourceGroupArgs
    ///         {
    ///             Location = "west europe",
    ///         });
    ///         var exampleAccount = new Azure.Storage.Account("exampleAccount", new Azure.Storage.AccountArgs
    ///         {
    ///             ResourceGroupName = exampleResourceGroup.Name,
    ///             Location = exampleResourceGroup.Location,
    ///             AccountKind = "BlobStorage",
    ///             AccountTier = "Standard",
    ///             AccountReplicationType = "LRS",
    ///         });
    ///         var exampleDataLakeGen2Filesystem = new Azure.Storage.DataLakeGen2Filesystem("exampleDataLakeGen2Filesystem", new Azure.Storage.DataLakeGen2FilesystemArgs
    ///         {
    ///             StorageAccountId = exampleAccount.Id,
    ///         });
    ///         var exampleWorkspace = new Azure.Synapse.Workspace("exampleWorkspace", new Azure.Synapse.WorkspaceArgs
    ///         {
    ///             ResourceGroupName = exampleResourceGroup.Name,
    ///             Location = exampleResourceGroup.Location,
    ///             StorageDataLakeGen2FilesystemId = exampleDataLakeGen2Filesystem.Id,
    ///             SqlAdministratorLogin = "sqladminuser",
    ///             SqlAdministratorLoginPassword = "H@Sh1CoR3!",
    ///         });
    ///         var exampleSqlPool = new Azure.Synapse.SqlPool("exampleSqlPool", new Azure.Synapse.SqlPoolArgs
    ///         {
    ///             SynapseWorkspaceId = exampleWorkspace.Id,
    ///             SkuName = "DW100c",
    ///             CreateMode = "Default",
    ///         });
    ///         var exampleSqlPoolWorkloadGroup = new Azure.Synapse.SqlPoolWorkloadGroup("exampleSqlPoolWorkloadGroup", new Azure.Synapse.SqlPoolWorkloadGroupArgs
    ///         {
    ///             SqlPoolId = exampleSqlPool.Id,
    ///             Importance = "normal",
    ///             MaxResourcePercent = 100,
    ///             MinResourcePercent = 0,
    ///             MaxResourcePercentPerRequest = 3,
    ///             MinResourcePercentPerRequest = 3,
    ///             QueryExecutionTimeoutInSeconds = 0,
    ///         });
    ///     }
    /// 
    /// }
    /// ```
    /// 
    /// ## Import
    /// 
    /// Synapse Sql Pool Workload Groups can be imported using the `resource id`, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import azure:synapse/sqlPoolWorkloadGroup:SqlPoolWorkloadGroup example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resGroup1/providers/Microsoft.Synapse/workspaces/workspace1/sqlPools/sqlPool1/workloadGroups/workloadGroup1
    /// ```
    /// </summary>
    [AzureResourceType("azure:synapse/sqlPoolWorkloadGroup:SqlPoolWorkloadGroup")]
    public partial class SqlPoolWorkloadGroup : Pulumi.CustomResource
    {
        /// <summary>
        /// The workload group importance level.
        /// </summary>
        [Output("importance")]
        public Output<string?> Importance { get; private set; } = null!;

        /// <summary>
        /// The workload group cap percentage resource.
        /// </summary>
        [Output("maxResourcePercent")]
        public Output<int> MaxResourcePercent { get; private set; } = null!;

        /// <summary>
        /// The workload group request maximum grant percentage.
        /// </summary>
        [Output("maxResourcePercentPerRequest")]
        public Output<double?> MaxResourcePercentPerRequest { get; private set; } = null!;

        /// <summary>
        /// The workload group minimum percentage resource.
        /// </summary>
        [Output("minResourcePercent")]
        public Output<int> MinResourcePercent { get; private set; } = null!;

        /// <summary>
        /// The workload group request minimum grant percentage.
        /// </summary>
        [Output("minResourcePercentPerRequest")]
        public Output<double?> MinResourcePercentPerRequest { get; private set; } = null!;

        /// <summary>
        /// The name which should be used for this Synapse Sql Pool Workload Group. Changing this forces a new Synapse Sql Pool Workload Group to be created.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The workload group query execution timeout.
        /// </summary>
        [Output("queryExecutionTimeoutInSeconds")]
        public Output<int?> QueryExecutionTimeoutInSeconds { get; private set; } = null!;

        /// <summary>
        /// The ID of the Synapse Sql Pool. Changing this forces a new Synapse Sql Pool Workload Group to be created.
        /// </summary>
        [Output("sqlPoolId")]
        public Output<string> SqlPoolId { get; private set; } = null!;


        /// <summary>
        /// Create a SqlPoolWorkloadGroup resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public SqlPoolWorkloadGroup(string name, SqlPoolWorkloadGroupArgs args, CustomResourceOptions? options = null)
            : base("azure:synapse/sqlPoolWorkloadGroup:SqlPoolWorkloadGroup", name, args ?? new SqlPoolWorkloadGroupArgs(), MakeResourceOptions(options, ""))
        {
        }

        private SqlPoolWorkloadGroup(string name, Input<string> id, SqlPoolWorkloadGroupState? state = null, CustomResourceOptions? options = null)
            : base("azure:synapse/sqlPoolWorkloadGroup:SqlPoolWorkloadGroup", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing SqlPoolWorkloadGroup resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static SqlPoolWorkloadGroup Get(string name, Input<string> id, SqlPoolWorkloadGroupState? state = null, CustomResourceOptions? options = null)
        {
            return new SqlPoolWorkloadGroup(name, id, state, options);
        }
    }

    public sealed class SqlPoolWorkloadGroupArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The workload group importance level.
        /// </summary>
        [Input("importance")]
        public Input<string>? Importance { get; set; }

        /// <summary>
        /// The workload group cap percentage resource.
        /// </summary>
        [Input("maxResourcePercent", required: true)]
        public Input<int> MaxResourcePercent { get; set; } = null!;

        /// <summary>
        /// The workload group request maximum grant percentage.
        /// </summary>
        [Input("maxResourcePercentPerRequest")]
        public Input<double>? MaxResourcePercentPerRequest { get; set; }

        /// <summary>
        /// The workload group minimum percentage resource.
        /// </summary>
        [Input("minResourcePercent", required: true)]
        public Input<int> MinResourcePercent { get; set; } = null!;

        /// <summary>
        /// The workload group request minimum grant percentage.
        /// </summary>
        [Input("minResourcePercentPerRequest")]
        public Input<double>? MinResourcePercentPerRequest { get; set; }

        /// <summary>
        /// The name which should be used for this Synapse Sql Pool Workload Group. Changing this forces a new Synapse Sql Pool Workload Group to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The workload group query execution timeout.
        /// </summary>
        [Input("queryExecutionTimeoutInSeconds")]
        public Input<int>? QueryExecutionTimeoutInSeconds { get; set; }

        /// <summary>
        /// The ID of the Synapse Sql Pool. Changing this forces a new Synapse Sql Pool Workload Group to be created.
        /// </summary>
        [Input("sqlPoolId", required: true)]
        public Input<string> SqlPoolId { get; set; } = null!;

        public SqlPoolWorkloadGroupArgs()
        {
        }
    }

    public sealed class SqlPoolWorkloadGroupState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The workload group importance level.
        /// </summary>
        [Input("importance")]
        public Input<string>? Importance { get; set; }

        /// <summary>
        /// The workload group cap percentage resource.
        /// </summary>
        [Input("maxResourcePercent")]
        public Input<int>? MaxResourcePercent { get; set; }

        /// <summary>
        /// The workload group request maximum grant percentage.
        /// </summary>
        [Input("maxResourcePercentPerRequest")]
        public Input<double>? MaxResourcePercentPerRequest { get; set; }

        /// <summary>
        /// The workload group minimum percentage resource.
        /// </summary>
        [Input("minResourcePercent")]
        public Input<int>? MinResourcePercent { get; set; }

        /// <summary>
        /// The workload group request minimum grant percentage.
        /// </summary>
        [Input("minResourcePercentPerRequest")]
        public Input<double>? MinResourcePercentPerRequest { get; set; }

        /// <summary>
        /// The name which should be used for this Synapse Sql Pool Workload Group. Changing this forces a new Synapse Sql Pool Workload Group to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The workload group query execution timeout.
        /// </summary>
        [Input("queryExecutionTimeoutInSeconds")]
        public Input<int>? QueryExecutionTimeoutInSeconds { get; set; }

        /// <summary>
        /// The ID of the Synapse Sql Pool. Changing this forces a new Synapse Sql Pool Workload Group to be created.
        /// </summary>
        [Input("sqlPoolId")]
        public Input<string>? SqlPoolId { get; set; }

        public SqlPoolWorkloadGroupState()
        {
        }
    }
}
