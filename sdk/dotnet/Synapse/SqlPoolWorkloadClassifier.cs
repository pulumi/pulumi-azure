// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Synapse
{
    /// <summary>
    /// Manages a Synapse SQL Pool Workload Classifier.
    /// 
    /// ## Import
    /// 
    /// Synapse SQL Pool Workload Classifiers can be imported using the `resource id`, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import azure:synapse/sqlPoolWorkloadClassifier:SqlPoolWorkloadClassifier example /subscriptions/12345678-1234-9876-4563-123456789012/resourceGroups/resGroup1/providers/Microsoft.Synapse/workspaces/workspace1/sqlPools/sqlPool1/workloadGroups/workloadGroup1/workloadClassifiers/workloadClassifier1
    /// ```
    /// </summary>
    [AzureResourceType("azure:synapse/sqlPoolWorkloadClassifier:SqlPoolWorkloadClassifier")]
    public partial class SqlPoolWorkloadClassifier : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Specifies the session context value that a request can be classified against.
        /// </summary>
        [Output("context")]
        public Output<string?> Context { get; private set; } = null!;

        /// <summary>
        /// The workload classifier end time for classification. It's of the `HH:MM` format in UTC time zone.
        /// </summary>
        [Output("endTime")]
        public Output<string?> EndTime { get; private set; } = null!;

        /// <summary>
        /// The workload classifier importance. The allowed values are `low`, `below_normal`, `normal`, `above_normal` and `high`.
        /// </summary>
        [Output("importance")]
        public Output<string?> Importance { get; private set; } = null!;

        /// <summary>
        /// Specifies the label value that a request can be classified against.
        /// </summary>
        [Output("label")]
        public Output<string?> Label { get; private set; } = null!;

        /// <summary>
        /// The workload classifier member name used to classified against.
        /// </summary>
        [Output("memberName")]
        public Output<string> MemberName { get; private set; } = null!;

        /// <summary>
        /// The name which should be used for this Synapse SQL Pool Workload Classifier. Changing this forces a new Synapse SQL Pool Workload Classifier to be created.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The workload classifier start time for classification. It's of the `HH:MM` format in UTC time zone.
        /// </summary>
        [Output("startTime")]
        public Output<string?> StartTime { get; private set; } = null!;

        /// <summary>
        /// The ID of the Synapse SQL Pool Workload Group. Changing this forces a new Synapse SQL Pool Workload Classifier to be created.
        /// </summary>
        [Output("workloadGroupId")]
        public Output<string> WorkloadGroupId { get; private set; } = null!;


        /// <summary>
        /// Create a SqlPoolWorkloadClassifier resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public SqlPoolWorkloadClassifier(string name, SqlPoolWorkloadClassifierArgs args, CustomResourceOptions? options = null)
            : base("azure:synapse/sqlPoolWorkloadClassifier:SqlPoolWorkloadClassifier", name, args ?? new SqlPoolWorkloadClassifierArgs(), MakeResourceOptions(options, ""))
        {
        }

        private SqlPoolWorkloadClassifier(string name, Input<string> id, SqlPoolWorkloadClassifierState? state = null, CustomResourceOptions? options = null)
            : base("azure:synapse/sqlPoolWorkloadClassifier:SqlPoolWorkloadClassifier", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing SqlPoolWorkloadClassifier resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static SqlPoolWorkloadClassifier Get(string name, Input<string> id, SqlPoolWorkloadClassifierState? state = null, CustomResourceOptions? options = null)
        {
            return new SqlPoolWorkloadClassifier(name, id, state, options);
        }
    }

    public sealed class SqlPoolWorkloadClassifierArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies the session context value that a request can be classified against.
        /// </summary>
        [Input("context")]
        public Input<string>? Context { get; set; }

        /// <summary>
        /// The workload classifier end time for classification. It's of the `HH:MM` format in UTC time zone.
        /// </summary>
        [Input("endTime")]
        public Input<string>? EndTime { get; set; }

        /// <summary>
        /// The workload classifier importance. The allowed values are `low`, `below_normal`, `normal`, `above_normal` and `high`.
        /// </summary>
        [Input("importance")]
        public Input<string>? Importance { get; set; }

        /// <summary>
        /// Specifies the label value that a request can be classified against.
        /// </summary>
        [Input("label")]
        public Input<string>? Label { get; set; }

        /// <summary>
        /// The workload classifier member name used to classified against.
        /// </summary>
        [Input("memberName", required: true)]
        public Input<string> MemberName { get; set; } = null!;

        /// <summary>
        /// The name which should be used for this Synapse SQL Pool Workload Classifier. Changing this forces a new Synapse SQL Pool Workload Classifier to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The workload classifier start time for classification. It's of the `HH:MM` format in UTC time zone.
        /// </summary>
        [Input("startTime")]
        public Input<string>? StartTime { get; set; }

        /// <summary>
        /// The ID of the Synapse SQL Pool Workload Group. Changing this forces a new Synapse SQL Pool Workload Classifier to be created.
        /// </summary>
        [Input("workloadGroupId", required: true)]
        public Input<string> WorkloadGroupId { get; set; } = null!;

        public SqlPoolWorkloadClassifierArgs()
        {
        }
        public static new SqlPoolWorkloadClassifierArgs Empty => new SqlPoolWorkloadClassifierArgs();
    }

    public sealed class SqlPoolWorkloadClassifierState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies the session context value that a request can be classified against.
        /// </summary>
        [Input("context")]
        public Input<string>? Context { get; set; }

        /// <summary>
        /// The workload classifier end time for classification. It's of the `HH:MM` format in UTC time zone.
        /// </summary>
        [Input("endTime")]
        public Input<string>? EndTime { get; set; }

        /// <summary>
        /// The workload classifier importance. The allowed values are `low`, `below_normal`, `normal`, `above_normal` and `high`.
        /// </summary>
        [Input("importance")]
        public Input<string>? Importance { get; set; }

        /// <summary>
        /// Specifies the label value that a request can be classified against.
        /// </summary>
        [Input("label")]
        public Input<string>? Label { get; set; }

        /// <summary>
        /// The workload classifier member name used to classified against.
        /// </summary>
        [Input("memberName")]
        public Input<string>? MemberName { get; set; }

        /// <summary>
        /// The name which should be used for this Synapse SQL Pool Workload Classifier. Changing this forces a new Synapse SQL Pool Workload Classifier to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The workload classifier start time for classification. It's of the `HH:MM` format in UTC time zone.
        /// </summary>
        [Input("startTime")]
        public Input<string>? StartTime { get; set; }

        /// <summary>
        /// The ID of the Synapse SQL Pool Workload Group. Changing this forces a new Synapse SQL Pool Workload Classifier to be created.
        /// </summary>
        [Input("workloadGroupId")]
        public Input<string>? WorkloadGroupId { get; set; }

        public SqlPoolWorkloadClassifierState()
        {
        }
        public static new SqlPoolWorkloadClassifierState Empty => new SqlPoolWorkloadClassifierState();
    }
}
