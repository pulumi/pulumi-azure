// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Synapse
{
    /// <summary>
    /// Manages a Synapse SQL Pool Vulnerability Assessment Rule Baseline.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using Azure = Pulumi.Azure;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var exampleResourceGroup = new Azure.Core.ResourceGroup("exampleResourceGroup", new Azure.Core.ResourceGroupArgs
    ///         {
    ///             Location = "west europe",
    ///         });
    ///         var exampleAccount = new Azure.Storage.Account("exampleAccount", new Azure.Storage.AccountArgs
    ///         {
    ///             ResourceGroupName = exampleResourceGroup.Name,
    ///             Location = exampleResourceGroup.Location,
    ///             AccountKind = "BlobStorage",
    ///             AccountTier = "Standard",
    ///             AccountReplicationType = "LRS",
    ///         });
    ///         var exampleDataLakeGen2Filesystem = new Azure.Storage.DataLakeGen2Filesystem("exampleDataLakeGen2Filesystem", new Azure.Storage.DataLakeGen2FilesystemArgs
    ///         {
    ///             StorageAccountId = exampleAccount.Id,
    ///         });
    ///         var exampleWorkspace = new Azure.Synapse.Workspace("exampleWorkspace", new Azure.Synapse.WorkspaceArgs
    ///         {
    ///             ResourceGroupName = exampleResourceGroup.Name,
    ///             Location = exampleResourceGroup.Location,
    ///             StorageDataLakeGen2FilesystemId = exampleDataLakeGen2Filesystem.Id,
    ///             SqlAdministratorLogin = "sqladminuser",
    ///             SqlAdministratorLoginPassword = "H@Sh1CoR3!",
    ///             Identity = new Azure.Synapse.Inputs.WorkspaceIdentityArgs
    ///             {
    ///                 Type = "SystemAssigned",
    ///             },
    ///         });
    ///         var exampleSqlPool = new Azure.Synapse.SqlPool("exampleSqlPool", new Azure.Synapse.SqlPoolArgs
    ///         {
    ///             SynapseWorkspaceId = exampleWorkspace.Id,
    ///             SkuName = "DW100c",
    ///             CreateMode = "Default",
    ///         });
    ///         var exampleContainer = new Azure.Storage.Container("exampleContainer", new Azure.Storage.ContainerArgs
    ///         {
    ///             StorageAccountName = exampleAccount.Name,
    ///             ContainerAccessType = "private",
    ///         });
    ///         var exampleSqlPoolSecurityAlertPolicy = new Azure.Synapse.SqlPoolSecurityAlertPolicy("exampleSqlPoolSecurityAlertPolicy", new Azure.Synapse.SqlPoolSecurityAlertPolicyArgs
    ///         {
    ///             SqlPoolId = exampleSqlPool.Id,
    ///             PolicyState = "Enabled",
    ///             StorageEndpoint = exampleAccount.PrimaryBlobEndpoint,
    ///             StorageAccountAccessKey = exampleAccount.PrimaryAccessKey,
    ///         });
    ///         var exampleSqlPoolVulnerabilityAssessment = new Azure.Synapse.SqlPoolVulnerabilityAssessment("exampleSqlPoolVulnerabilityAssessment", new Azure.Synapse.SqlPoolVulnerabilityAssessmentArgs
    ///         {
    ///             SqlPoolSecurityAlertPolicyId = exampleSqlPoolSecurityAlertPolicy.Id,
    ///             StorageContainerPath = Output.Tuple(exampleAccount.PrimaryBlobEndpoint, exampleContainer.Name).Apply(values =&gt;
    ///             {
    ///                 var primaryBlobEndpoint = values.Item1;
    ///                 var name = values.Item2;
    ///                 return $"{primaryBlobEndpoint}{name}/";
    ///             }),
    ///             StorageAccountAccessKey = exampleAccount.PrimaryAccessKey,
    ///         });
    ///         var exampleSqlPoolVulnerabilityAssessmentBaseline = new Azure.Synapse.SqlPoolVulnerabilityAssessmentBaseline("exampleSqlPoolVulnerabilityAssessmentBaseline", new Azure.Synapse.SqlPoolVulnerabilityAssessmentBaselineArgs
    ///         {
    ///             RuleName = "VA1017",
    ///             SqlPoolVulnerabilityAssessmentId = exampleSqlPoolVulnerabilityAssessment.Id,
    ///             Baselines = 
    ///             {
    ///                 new Azure.Synapse.Inputs.SqlPoolVulnerabilityAssessmentBaselineBaselineArgs
    ///                 {
    ///                     Results = 
    ///                     {
    ///                         "userA",
    ///                         "SELECT",
    ///                     },
    ///                 },
    ///                 new Azure.Synapse.Inputs.SqlPoolVulnerabilityAssessmentBaselineBaselineArgs
    ///                 {
    ///                     Results = 
    ///                     {
    ///                         "userB",
    ///                         "SELECT",
    ///                     },
    ///                 },
    ///             },
    ///         });
    ///     }
    /// 
    /// }
    /// ```
    /// 
    /// ## Import
    /// 
    /// Synapse SQL Pool Vulnerability Assessment Rule Baselines can be imported using the `resource id`, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import azure:synapse/sqlPoolVulnerabilityAssessmentBaseline:SqlPoolVulnerabilityAssessmentBaseline example /subscriptions/12345678-1234-9876-4563-123456789012/resourceGroups/resGroup1/providers/Microsoft.Synapse/workspaces/workspace1/sqlPools/sqlPool1/vulnerabilityAssessments/default/rules/rule1/baselines/baseline1
    /// ```
    /// </summary>
    [AzureResourceType("azure:synapse/sqlPoolVulnerabilityAssessmentBaseline:SqlPoolVulnerabilityAssessmentBaseline")]
    public partial class SqlPoolVulnerabilityAssessmentBaseline : Pulumi.CustomResource
    {
        /// <summary>
        /// One or more `baseline` blocks as defined below.
        /// </summary>
        [Output("baselines")]
        public Output<ImmutableArray<Outputs.SqlPoolVulnerabilityAssessmentBaselineBaseline>> Baselines { get; private set; } = null!;

        /// <summary>
        /// The name which should be used for this Synapse SQL Pool Vulnerability Assessment Rule Baseline.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The ID of the vulnerability assessment rule.
        /// </summary>
        [Output("ruleName")]
        public Output<string> RuleName { get; private set; } = null!;

        /// <summary>
        /// The ID of the Synapse SQL Pool Vulnerability Assessment. Changing this forces a new Synapse SQL Pool Vulnerability Assessment Rule Baseline to be created.
        /// </summary>
        [Output("sqlPoolVulnerabilityAssessmentId")]
        public Output<string> SqlPoolVulnerabilityAssessmentId { get; private set; } = null!;


        /// <summary>
        /// Create a SqlPoolVulnerabilityAssessmentBaseline resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public SqlPoolVulnerabilityAssessmentBaseline(string name, SqlPoolVulnerabilityAssessmentBaselineArgs args, CustomResourceOptions? options = null)
            : base("azure:synapse/sqlPoolVulnerabilityAssessmentBaseline:SqlPoolVulnerabilityAssessmentBaseline", name, args ?? new SqlPoolVulnerabilityAssessmentBaselineArgs(), MakeResourceOptions(options, ""))
        {
        }

        private SqlPoolVulnerabilityAssessmentBaseline(string name, Input<string> id, SqlPoolVulnerabilityAssessmentBaselineState? state = null, CustomResourceOptions? options = null)
            : base("azure:synapse/sqlPoolVulnerabilityAssessmentBaseline:SqlPoolVulnerabilityAssessmentBaseline", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing SqlPoolVulnerabilityAssessmentBaseline resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static SqlPoolVulnerabilityAssessmentBaseline Get(string name, Input<string> id, SqlPoolVulnerabilityAssessmentBaselineState? state = null, CustomResourceOptions? options = null)
        {
            return new SqlPoolVulnerabilityAssessmentBaseline(name, id, state, options);
        }
    }

    public sealed class SqlPoolVulnerabilityAssessmentBaselineArgs : Pulumi.ResourceArgs
    {
        [Input("baselines")]
        private InputList<Inputs.SqlPoolVulnerabilityAssessmentBaselineBaselineArgs>? _baselines;

        /// <summary>
        /// One or more `baseline` blocks as defined below.
        /// </summary>
        public InputList<Inputs.SqlPoolVulnerabilityAssessmentBaselineBaselineArgs> Baselines
        {
            get => _baselines ?? (_baselines = new InputList<Inputs.SqlPoolVulnerabilityAssessmentBaselineBaselineArgs>());
            set => _baselines = value;
        }

        /// <summary>
        /// The name which should be used for this Synapse SQL Pool Vulnerability Assessment Rule Baseline.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The ID of the vulnerability assessment rule.
        /// </summary>
        [Input("ruleName", required: true)]
        public Input<string> RuleName { get; set; } = null!;

        /// <summary>
        /// The ID of the Synapse SQL Pool Vulnerability Assessment. Changing this forces a new Synapse SQL Pool Vulnerability Assessment Rule Baseline to be created.
        /// </summary>
        [Input("sqlPoolVulnerabilityAssessmentId", required: true)]
        public Input<string> SqlPoolVulnerabilityAssessmentId { get; set; } = null!;

        public SqlPoolVulnerabilityAssessmentBaselineArgs()
        {
        }
    }

    public sealed class SqlPoolVulnerabilityAssessmentBaselineState : Pulumi.ResourceArgs
    {
        [Input("baselines")]
        private InputList<Inputs.SqlPoolVulnerabilityAssessmentBaselineBaselineGetArgs>? _baselines;

        /// <summary>
        /// One or more `baseline` blocks as defined below.
        /// </summary>
        public InputList<Inputs.SqlPoolVulnerabilityAssessmentBaselineBaselineGetArgs> Baselines
        {
            get => _baselines ?? (_baselines = new InputList<Inputs.SqlPoolVulnerabilityAssessmentBaselineBaselineGetArgs>());
            set => _baselines = value;
        }

        /// <summary>
        /// The name which should be used for this Synapse SQL Pool Vulnerability Assessment Rule Baseline.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The ID of the vulnerability assessment rule.
        /// </summary>
        [Input("ruleName")]
        public Input<string>? RuleName { get; set; }

        /// <summary>
        /// The ID of the Synapse SQL Pool Vulnerability Assessment. Changing this forces a new Synapse SQL Pool Vulnerability Assessment Rule Baseline to be created.
        /// </summary>
        [Input("sqlPoolVulnerabilityAssessmentId")]
        public Input<string>? SqlPoolVulnerabilityAssessmentId { get; set; }

        public SqlPoolVulnerabilityAssessmentBaselineState()
        {
        }
    }
}
