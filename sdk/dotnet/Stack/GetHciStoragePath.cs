// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Stack
{
    public static class GetHciStoragePath
    {
        /// <summary>
        /// Use this data source to access information about an existing Stack HCI Storage Path.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Azure = Pulumi.Azure;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Azure.Stack.GetHciStoragePath.Invoke(new()
        ///     {
        ///         Name = "example-hci-storage-path-name",
        ///         ResourceGroupName = "example-rg",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["id"] = example.Apply(getHciStoragePathResult =&gt; getHciStoragePathResult.Id),
        ///     };
        /// });
        /// ```
        /// 
        /// ## API Providers
        /// 
        /// &lt;!-- This section is generated, changes will be overwritten --&gt;
        /// This data source uses the following Azure API Providers:
        /// 
        /// * `Microsoft.AzureStackHCI` - 2024-01-01
        /// </summary>
        public static Task<GetHciStoragePathResult> InvokeAsync(GetHciStoragePathArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetHciStoragePathResult>("azure:stack/getHciStoragePath:getHciStoragePath", args ?? new GetHciStoragePathArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to access information about an existing Stack HCI Storage Path.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Azure = Pulumi.Azure;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Azure.Stack.GetHciStoragePath.Invoke(new()
        ///     {
        ///         Name = "example-hci-storage-path-name",
        ///         ResourceGroupName = "example-rg",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["id"] = example.Apply(getHciStoragePathResult =&gt; getHciStoragePathResult.Id),
        ///     };
        /// });
        /// ```
        /// 
        /// ## API Providers
        /// 
        /// &lt;!-- This section is generated, changes will be overwritten --&gt;
        /// This data source uses the following Azure API Providers:
        /// 
        /// * `Microsoft.AzureStackHCI` - 2024-01-01
        /// </summary>
        public static Output<GetHciStoragePathResult> Invoke(GetHciStoragePathInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetHciStoragePathResult>("azure:stack/getHciStoragePath:getHciStoragePath", args ?? new GetHciStoragePathInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to access information about an existing Stack HCI Storage Path.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Azure = Pulumi.Azure;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Azure.Stack.GetHciStoragePath.Invoke(new()
        ///     {
        ///         Name = "example-hci-storage-path-name",
        ///         ResourceGroupName = "example-rg",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["id"] = example.Apply(getHciStoragePathResult =&gt; getHciStoragePathResult.Id),
        ///     };
        /// });
        /// ```
        /// 
        /// ## API Providers
        /// 
        /// &lt;!-- This section is generated, changes will be overwritten --&gt;
        /// This data source uses the following Azure API Providers:
        /// 
        /// * `Microsoft.AzureStackHCI` - 2024-01-01
        /// </summary>
        public static Output<GetHciStoragePathResult> Invoke(GetHciStoragePathInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetHciStoragePathResult>("azure:stack/getHciStoragePath:getHciStoragePath", args ?? new GetHciStoragePathInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetHciStoragePathArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of this Stack HCI Storage Path.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        /// <summary>
        /// The name of the Resource Group where the Stack HCI Storage Path exists.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetHciStoragePathArgs()
        {
        }
        public static new GetHciStoragePathArgs Empty => new GetHciStoragePathArgs();
    }

    public sealed class GetHciStoragePathInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of this Stack HCI Storage Path.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// The name of the Resource Group where the Stack HCI Storage Path exists.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetHciStoragePathInvokeArgs()
        {
        }
        public static new GetHciStoragePathInvokeArgs Empty => new GetHciStoragePathInvokeArgs();
    }


    [OutputType]
    public sealed class GetHciStoragePathResult
    {
        /// <summary>
        /// The ID of the Custom Location where the Stack HCI Storage Path exists.
        /// </summary>
        public readonly string CustomLocationId;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The Azure Region where the Stack HCI Storage Path exists.
        /// </summary>
        public readonly string Location;
        public readonly string Name;
        /// <summary>
        /// The file path on the disk where the Stack HCI Storage Path was created.
        /// </summary>
        public readonly string Path;
        public readonly string ResourceGroupName;
        /// <summary>
        /// A mapping of tags assigned to the Stack HCI Storage Path.
        /// </summary>
        public readonly ImmutableDictionary<string, string> Tags;

        [OutputConstructor]
        private GetHciStoragePathResult(
            string customLocationId,

            string id,

            string location,

            string name,

            string path,

            string resourceGroupName,

            ImmutableDictionary<string, string> tags)
        {
            CustomLocationId = customLocationId;
            Id = id;
            Location = location;
            Name = name;
            Path = path;
            ResourceGroupName = resourceGroupName;
            Tags = tags;
        }
    }
}
