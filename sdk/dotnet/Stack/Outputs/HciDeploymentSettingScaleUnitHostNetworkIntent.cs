// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Stack.Outputs
{

    [OutputType]
    public sealed class HciDeploymentSettingScaleUnitHostNetworkIntent
    {
        /// <summary>
        /// A `AdapterPropertyOverride` block as defined above. Changing this forces a new Stack HCI Deployment Setting to be created.
        /// </summary>
        public readonly Outputs.HciDeploymentSettingScaleUnitHostNetworkIntentAdapterPropertyOverride? AdapterPropertyOverride;
        /// <summary>
        /// Whether to override adapter properties. Possible values are `True` and `False`. defaults to `False`. Changing this forces a new Stack HCI Deployment Setting to be created.
        /// </summary>
        public readonly bool? AdapterPropertyOverrideEnabled;
        /// <summary>
        /// Specifies a list of ID of network interfaces used for the network intent. Changing this forces a new Stack HCI Deployment Setting to be created.
        /// </summary>
        public readonly ImmutableArray<string> Adapters;
        /// <summary>
        /// Specifies the name of the intent. Changing this forces a new Stack HCI Deployment Setting to be created.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// A `QosPolicyOverride` block as defined below. Changing this forces a new Stack HCI Deployment Setting to be created.
        /// </summary>
        public readonly Outputs.HciDeploymentSettingScaleUnitHostNetworkIntentQosPolicyOverride? QosPolicyOverride;
        /// <summary>
        /// Whether to override QoS policy. Possible values are `True` and `False`. defaults to `False`. Changing this forces a new Stack HCI Deployment Setting to be created.
        /// </summary>
        public readonly bool? QosPolicyOverrideEnabled;
        /// <summary>
        /// Specifies a list of network traffic types. Possible values are `Compute`, `Storage`, `Management`. Changing this forces a new Stack HCI Deployment Setting to be created.
        /// </summary>
        public readonly ImmutableArray<string> TrafficTypes;
        /// <summary>
        /// A `VirtualSwitchConfigurationOverride` block as defined below. Changing this forces a new Stack HCI Deployment Setting to be created.
        /// </summary>
        public readonly Outputs.HciDeploymentSettingScaleUnitHostNetworkIntentVirtualSwitchConfigurationOverride? VirtualSwitchConfigurationOverride;
        /// <summary>
        /// Whether to override virtual switch configuration. Possible values are `True` and `False`. defaults to `False`. Changing this forces a new Stack HCI Deployment Setting to be created.
        /// </summary>
        public readonly bool? VirtualSwitchConfigurationOverrideEnabled;

        [OutputConstructor]
        private HciDeploymentSettingScaleUnitHostNetworkIntent(
            Outputs.HciDeploymentSettingScaleUnitHostNetworkIntentAdapterPropertyOverride? adapterPropertyOverride,

            bool? adapterPropertyOverrideEnabled,

            ImmutableArray<string> adapters,

            string name,

            Outputs.HciDeploymentSettingScaleUnitHostNetworkIntentQosPolicyOverride? qosPolicyOverride,

            bool? qosPolicyOverrideEnabled,

            ImmutableArray<string> trafficTypes,

            Outputs.HciDeploymentSettingScaleUnitHostNetworkIntentVirtualSwitchConfigurationOverride? virtualSwitchConfigurationOverride,

            bool? virtualSwitchConfigurationOverrideEnabled)
        {
            AdapterPropertyOverride = adapterPropertyOverride;
            AdapterPropertyOverrideEnabled = adapterPropertyOverrideEnabled;
            Adapters = adapters;
            Name = name;
            QosPolicyOverride = qosPolicyOverride;
            QosPolicyOverrideEnabled = qosPolicyOverrideEnabled;
            TrafficTypes = trafficTypes;
            VirtualSwitchConfigurationOverride = virtualSwitchConfigurationOverride;
            VirtualSwitchConfigurationOverrideEnabled = virtualSwitchConfigurationOverrideEnabled;
        }
    }
}
