// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Stack.Inputs
{

    public sealed class HciDeploymentSettingScaleUnitHostNetworkIntentGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// A `adapter_property_override` block as defined above. Changing this forces a new Stack HCI Deployment Setting to be created.
        /// </summary>
        [Input("adapterPropertyOverride")]
        public Input<Inputs.HciDeploymentSettingScaleUnitHostNetworkIntentAdapterPropertyOverrideGetArgs>? AdapterPropertyOverride { get; set; }

        /// <summary>
        /// Whether to override adapter properties. Possible values are `true` and `false`. defaults to `false`. Changing this forces a new Stack HCI Deployment Setting to be created.
        /// </summary>
        [Input("adapterPropertyOverrideEnabled")]
        public Input<bool>? AdapterPropertyOverrideEnabled { get; set; }

        [Input("adapters", required: true)]
        private InputList<string>? _adapters;

        /// <summary>
        /// Specifies a list of ID of network interfaces used for the network intent. Changing this forces a new Stack HCI Deployment Setting to be created.
        /// </summary>
        public InputList<string> Adapters
        {
            get => _adapters ?? (_adapters = new InputList<string>());
            set => _adapters = value;
        }

        /// <summary>
        /// Specifies the name of the intent. Changing this forces a new Stack HCI Deployment Setting to be created.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// A `qos_policy_override` block as defined below. Changing this forces a new Stack HCI Deployment Setting to be created.
        /// </summary>
        [Input("qosPolicyOverride")]
        public Input<Inputs.HciDeploymentSettingScaleUnitHostNetworkIntentQosPolicyOverrideGetArgs>? QosPolicyOverride { get; set; }

        /// <summary>
        /// Whether to override QoS policy. Possible values are `true` and `false`. defaults to `false`. Changing this forces a new Stack HCI Deployment Setting to be created.
        /// </summary>
        [Input("qosPolicyOverrideEnabled")]
        public Input<bool>? QosPolicyOverrideEnabled { get; set; }

        [Input("trafficTypes", required: true)]
        private InputList<string>? _trafficTypes;

        /// <summary>
        /// Specifies a list of network traffic types. Possible values are `Compute`, `Storage`, `Management`. Changing this forces a new Stack HCI Deployment Setting to be created.
        /// </summary>
        public InputList<string> TrafficTypes
        {
            get => _trafficTypes ?? (_trafficTypes = new InputList<string>());
            set => _trafficTypes = value;
        }

        /// <summary>
        /// A `virtual_switch_configuration_override` block as defined below. Changing this forces a new Stack HCI Deployment Setting to be created.
        /// </summary>
        [Input("virtualSwitchConfigurationOverride")]
        public Input<Inputs.HciDeploymentSettingScaleUnitHostNetworkIntentVirtualSwitchConfigurationOverrideGetArgs>? VirtualSwitchConfigurationOverride { get; set; }

        /// <summary>
        /// Whether to override virtual switch configuration. Possible values are `true` and `false`. defaults to `false`. Changing this forces a new Stack HCI Deployment Setting to be created.
        /// </summary>
        [Input("virtualSwitchConfigurationOverrideEnabled")]
        public Input<bool>? VirtualSwitchConfigurationOverrideEnabled { get; set; }

        public HciDeploymentSettingScaleUnitHostNetworkIntentGetArgs()
        {
        }
        public static new HciDeploymentSettingScaleUnitHostNetworkIntentGetArgs Empty => new HciDeploymentSettingScaleUnitHostNetworkIntentGetArgs();
    }
}
