// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Stack.Inputs
{

    public sealed class HciDeploymentSettingScaleUnitInfrastructureNetworkGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Whether DHCP is enabled for hosts and cluster IPs. Possible values are `True` and `False`. defaults to `False`. Changing this forces a new Stack HCI Deployment Setting to be created.
        /// 
        /// &gt; **Note:** If `DhcpEnabled` is set to `False`, the deployment will use static IPs. If set to `True`, the gateway and DNS servers are not required.
        /// </summary>
        [Input("dhcpEnabled")]
        public Input<bool>? DhcpEnabled { get; set; }

        [Input("dnsServers", required: true)]
        private InputList<string>? _dnsServers;

        /// <summary>
        /// Specifies a list of IPv4 addresses of the DNS servers in your environment. Changing this forces a new Stack HCI Deployment Setting to be created.
        /// </summary>
        public InputList<string> DnsServers
        {
            get => _dnsServers ?? (_dnsServers = new InputList<string>());
            set => _dnsServers = value;
        }

        /// <summary>
        /// Specifies the default gateway that should be used for the provided IP address space. It should be in the format of an IPv4 IP address. Changing this forces a new Stack HCI Deployment Setting to be created.
        /// </summary>
        [Input("gateway", required: true)]
        public Input<string> Gateway { get; set; } = null!;

        [Input("ipPools", required: true)]
        private InputList<Inputs.HciDeploymentSettingScaleUnitInfrastructureNetworkIpPoolGetArgs>? _ipPools;

        /// <summary>
        /// One or more `IpPool` blocks as defined below. Changing this forces a new Stack HCI Deployment Setting to be created.
        /// </summary>
        public InputList<Inputs.HciDeploymentSettingScaleUnitInfrastructureNetworkIpPoolGetArgs> IpPools
        {
            get => _ipPools ?? (_ipPools = new InputList<Inputs.HciDeploymentSettingScaleUnitInfrastructureNetworkIpPoolGetArgs>());
            set => _ipPools = value;
        }

        /// <summary>
        /// Specifies the subnet mask that matches the provided IP address space. Changing this forces a new Stack HCI Deployment Setting to be created.
        /// </summary>
        [Input("subnetMask", required: true)]
        public Input<string> SubnetMask { get; set; } = null!;

        public HciDeploymentSettingScaleUnitInfrastructureNetworkGetArgs()
        {
        }
        public static new HciDeploymentSettingScaleUnitInfrastructureNetworkGetArgs Empty => new HciDeploymentSettingScaleUnitInfrastructureNetworkGetArgs();
    }
}
