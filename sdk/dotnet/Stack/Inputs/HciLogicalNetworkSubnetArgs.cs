// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Stack.Inputs
{

    public sealed class HciLogicalNetworkSubnetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The address prefix in CIDR notation. Changing this forces a new resource to be created.
        /// </summary>
        [Input("addressPrefix")]
        public Input<string>? AddressPrefix { get; set; }

        /// <summary>
        /// The IP address allocation method for the subnet. Possible values are `Dynamic` and `Static`. Changing this forces a new resource to be created.
        /// </summary>
        [Input("ipAllocationMethod", required: true)]
        public Input<string> IpAllocationMethod { get; set; } = null!;

        [Input("ipPools")]
        private InputList<Inputs.HciLogicalNetworkSubnetIpPoolArgs>? _ipPools;

        /// <summary>
        /// One or more `ip_pool` block as defined above. Changing this forces a new resource to be created.
        /// 
        /// &gt; **Note:** If `ip_pool` is not specified, it will be assigned by the server. If you experience a diff you may need to add this to `ignore_changes`.
        /// </summary>
        public InputList<Inputs.HciLogicalNetworkSubnetIpPoolArgs> IpPools
        {
            get => _ipPools ?? (_ipPools = new InputList<Inputs.HciLogicalNetworkSubnetIpPoolArgs>());
            set => _ipPools = value;
        }

        [Input("routes")]
        private InputList<Inputs.HciLogicalNetworkSubnetRouteArgs>? _routes;

        /// <summary>
        /// A `route` block as defined above. Changing this forces a new resource to be created.
        /// </summary>
        public InputList<Inputs.HciLogicalNetworkSubnetRouteArgs> Routes
        {
            get => _routes ?? (_routes = new InputList<Inputs.HciLogicalNetworkSubnetRouteArgs>());
            set => _routes = value;
        }

        /// <summary>
        /// The VLAN ID for the Logical Network. Changing this forces a new resource to be created.
        /// </summary>
        [Input("vlanId")]
        public Input<int>? VlanId { get; set; }

        public HciLogicalNetworkSubnetArgs()
        {
        }
        public static new HciLogicalNetworkSubnetArgs Empty => new HciLogicalNetworkSubnetArgs();
    }
}
