// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Stack
{
    public static class GetHciCluster
    {
        /// <summary>
        /// Use this data source to access information about an existing Azure Stack HCI Cluster instance.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Azure = Pulumi.Azure;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Azure.Stack.GetHciCluster.Invoke(new()
        ///     {
        ///         Name = "existing",
        ///         ResourceGroupName = "existing",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["id"] = example.Apply(getHciClusterResult =&gt; getHciClusterResult.Id),
        ///         ["location"] = example.Apply(getHciClusterResult =&gt; getHciClusterResult.Location),
        ///         ["clientId"] = example.Apply(getHciClusterResult =&gt; getHciClusterResult.ClientId),
        ///     };
        /// });
        /// ```
        /// 
        /// ## API Providers
        /// 
        /// &lt;!-- This section is generated, changes will be overwritten --&gt;
        /// This data source uses the following Azure API Providers:
        /// 
        /// * `Microsoft.AzureStackHCI`: 2024-01-01, 2022-05-04
        /// </summary>
        public static Task<GetHciClusterResult> InvokeAsync(GetHciClusterArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetHciClusterResult>("azure:stack/getHciCluster:getHciCluster", args ?? new GetHciClusterArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to access information about an existing Azure Stack HCI Cluster instance.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Azure = Pulumi.Azure;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Azure.Stack.GetHciCluster.Invoke(new()
        ///     {
        ///         Name = "existing",
        ///         ResourceGroupName = "existing",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["id"] = example.Apply(getHciClusterResult =&gt; getHciClusterResult.Id),
        ///         ["location"] = example.Apply(getHciClusterResult =&gt; getHciClusterResult.Location),
        ///         ["clientId"] = example.Apply(getHciClusterResult =&gt; getHciClusterResult.ClientId),
        ///     };
        /// });
        /// ```
        /// 
        /// ## API Providers
        /// 
        /// &lt;!-- This section is generated, changes will be overwritten --&gt;
        /// This data source uses the following Azure API Providers:
        /// 
        /// * `Microsoft.AzureStackHCI`: 2024-01-01, 2022-05-04
        /// </summary>
        public static Output<GetHciClusterResult> Invoke(GetHciClusterInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetHciClusterResult>("azure:stack/getHciCluster:getHciCluster", args ?? new GetHciClusterInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to access information about an existing Azure Stack HCI Cluster instance.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Azure = Pulumi.Azure;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Azure.Stack.GetHciCluster.Invoke(new()
        ///     {
        ///         Name = "existing",
        ///         ResourceGroupName = "existing",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["id"] = example.Apply(getHciClusterResult =&gt; getHciClusterResult.Id),
        ///         ["location"] = example.Apply(getHciClusterResult =&gt; getHciClusterResult.Location),
        ///         ["clientId"] = example.Apply(getHciClusterResult =&gt; getHciClusterResult.ClientId),
        ///     };
        /// });
        /// ```
        /// 
        /// ## API Providers
        /// 
        /// &lt;!-- This section is generated, changes will be overwritten --&gt;
        /// This data source uses the following Azure API Providers:
        /// 
        /// * `Microsoft.AzureStackHCI`: 2024-01-01, 2022-05-04
        /// </summary>
        public static Output<GetHciClusterResult> Invoke(GetHciClusterInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetHciClusterResult>("azure:stack/getHciCluster:getHciCluster", args ?? new GetHciClusterInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetHciClusterArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the Azure Stack HCI Cluster.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        /// <summary>
        /// The name of the Resource Group where the Azure Stack HCI Cluster exists.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetHciClusterArgs()
        {
        }
        public static new GetHciClusterArgs Empty => new GetHciClusterArgs();
    }

    public sealed class GetHciClusterInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the Azure Stack HCI Cluster.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// The name of the Resource Group where the Azure Stack HCI Cluster exists.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetHciClusterInvokeArgs()
        {
        }
        public static new GetHciClusterInvokeArgs Empty => new GetHciClusterInvokeArgs();
    }


    [OutputType]
    public sealed class GetHciClusterResult
    {
        /// <summary>
        /// The ID of the Automanage Configuration assigned to the Azure Stack HCI Cluster.
        /// </summary>
        public readonly string AutomanageConfigurationId;
        /// <summary>
        /// The Client ID of the Azure Active Directory used by the Azure Stack HCI Cluster.
        /// </summary>
        public readonly string ClientId;
        /// <summary>
        /// An immutable UUID for the Azure Stack HCI Cluster.
        /// </summary>
        public readonly string CloudId;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// An `identity` block as defined below.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetHciClusterIdentityResult> Identities;
        /// <summary>
        /// The Azure Region where the Azure Stack HCI Cluster exists.
        /// </summary>
        public readonly string Location;
        public readonly string Name;
        public readonly string ResourceGroupName;
        /// <summary>
        /// The object ID of the Resource Provider Service Principal.
        /// </summary>
        public readonly string ResourceProviderObjectId;
        /// <summary>
        /// The region specific Data Path Endpoint of the Azure Stack HCI Cluster.
        /// </summary>
        public readonly string ServiceEndpoint;
        /// <summary>
        /// A mapping of tags assigned to the Azure Stack HCI Cluster.
        /// </summary>
        public readonly ImmutableDictionary<string, string> Tags;
        /// <summary>
        /// The Tenant ID associated with this Managed Service Identity.
        /// </summary>
        public readonly string TenantId;

        [OutputConstructor]
        private GetHciClusterResult(
            string automanageConfigurationId,

            string clientId,

            string cloudId,

            string id,

            ImmutableArray<Outputs.GetHciClusterIdentityResult> identities,

            string location,

            string name,

            string resourceGroupName,

            string resourceProviderObjectId,

            string serviceEndpoint,

            ImmutableDictionary<string, string> tags,

            string tenantId)
        {
            AutomanageConfigurationId = automanageConfigurationId;
            ClientId = clientId;
            CloudId = cloudId;
            Id = id;
            Identities = identities;
            Location = location;
            Name = name;
            ResourceGroupName = resourceGroupName;
            ResourceProviderObjectId = resourceProviderObjectId;
            ServiceEndpoint = serviceEndpoint;
            Tags = tags;
            TenantId = tenantId;
        }
    }
}
