// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Nginx
{
    public static class GetApiKey
    {
        /// <summary>
        /// Use this data source to access information about an existing NGINX Dataplane API Key.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Azure = Pulumi.Azure;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Azure.Nginx.GetApiKey.Invoke(new()
        ///     {
        ///         Name = "existing",
        ///         NginxDeploymentId = exampleAzurermNginxDeployment.Id,
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["id"] = example.Apply(getApiKeyResult =&gt; getApiKeyResult.Id),
        ///     };
        /// });
        /// ```
        /// 
        /// ## API Providers
        /// 
        /// &lt;!-- This section is generated, changes will be overwritten --&gt;
        /// This data source uses the following Azure API Providers:
        /// 
        /// * `Nginx.NginxPlus`: 2024-11-01-preview
        /// </summary>
        public static Task<GetApiKeyResult> InvokeAsync(GetApiKeyArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetApiKeyResult>("azure:nginx/getApiKey:getApiKey", args ?? new GetApiKeyArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to access information about an existing NGINX Dataplane API Key.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Azure = Pulumi.Azure;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Azure.Nginx.GetApiKey.Invoke(new()
        ///     {
        ///         Name = "existing",
        ///         NginxDeploymentId = exampleAzurermNginxDeployment.Id,
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["id"] = example.Apply(getApiKeyResult =&gt; getApiKeyResult.Id),
        ///     };
        /// });
        /// ```
        /// 
        /// ## API Providers
        /// 
        /// &lt;!-- This section is generated, changes will be overwritten --&gt;
        /// This data source uses the following Azure API Providers:
        /// 
        /// * `Nginx.NginxPlus`: 2024-11-01-preview
        /// </summary>
        public static Output<GetApiKeyResult> Invoke(GetApiKeyInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetApiKeyResult>("azure:nginx/getApiKey:getApiKey", args ?? new GetApiKeyInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to access information about an existing NGINX Dataplane API Key.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Azure = Pulumi.Azure;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Azure.Nginx.GetApiKey.Invoke(new()
        ///     {
        ///         Name = "existing",
        ///         NginxDeploymentId = exampleAzurermNginxDeployment.Id,
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["id"] = example.Apply(getApiKeyResult =&gt; getApiKeyResult.Id),
        ///     };
        /// });
        /// ```
        /// 
        /// ## API Providers
        /// 
        /// &lt;!-- This section is generated, changes will be overwritten --&gt;
        /// This data source uses the following Azure API Providers:
        /// 
        /// * `Nginx.NginxPlus`: 2024-11-01-preview
        /// </summary>
        public static Output<GetApiKeyResult> Invoke(GetApiKeyInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetApiKeyResult>("azure:nginx/getApiKey:getApiKey", args ?? new GetApiKeyInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetApiKeyArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the NGINX Dataplane API Key.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        /// <summary>
        /// The ID of the NGINX Deployment that the API key is associated with.
        /// </summary>
        [Input("nginxDeploymentId", required: true)]
        public string NginxDeploymentId { get; set; } = null!;

        public GetApiKeyArgs()
        {
        }
        public static new GetApiKeyArgs Empty => new GetApiKeyArgs();
    }

    public sealed class GetApiKeyInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the NGINX Dataplane API Key.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// The ID of the NGINX Deployment that the API key is associated with.
        /// </summary>
        [Input("nginxDeploymentId", required: true)]
        public Input<string> NginxDeploymentId { get; set; } = null!;

        public GetApiKeyInvokeArgs()
        {
        }
        public static new GetApiKeyInvokeArgs Empty => new GetApiKeyInvokeArgs();
    }


    [OutputType]
    public sealed class GetApiKeyResult
    {
        /// <summary>
        /// The RFC3339 formatted time after which this Dataplane API Key is no longer valid.
        /// </summary>
        public readonly string EndDateTime;
        /// <summary>
        /// The first three characters of the secret text to help identify it in use.
        /// </summary>
        public readonly string Hint;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string Name;
        public readonly string NginxDeploymentId;

        [OutputConstructor]
        private GetApiKeyResult(
            string endDateTime,

            string hint,

            string id,

            string name,

            string nginxDeploymentId)
        {
            EndDateTime = endDateTime;
            Hint = hint;
            Id = id;
            Name = name;
            NginxDeploymentId = nginxDeploymentId;
        }
    }
}
