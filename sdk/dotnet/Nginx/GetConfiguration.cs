// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Nginx
{
    public static class GetConfiguration
    {
        /// <summary>
        /// Use this data source to access information about an existing Nginx Configuration.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Azure = Pulumi.Azure;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Azure.Nginx.GetConfiguration.Invoke(new()
        ///     {
        ///         NginxDeploymentId = exampleAzurermNginxDeployment.Id,
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["id"] = example.Apply(getConfigurationResult =&gt; getConfigurationResult.Id),
        ///     };
        /// });
        /// ```
        /// 
        /// ## API Providers
        /// 
        /// &lt;!-- This section is generated, changes will be overwritten --&gt;
        /// This data source uses the following Azure API Providers:
        /// 
        /// * `Nginx.NginxPlus` - 2024-11-01-preview
        /// </summary>
        public static Task<GetConfigurationResult> InvokeAsync(GetConfigurationArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetConfigurationResult>("azure:nginx/getConfiguration:getConfiguration", args ?? new GetConfigurationArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to access information about an existing Nginx Configuration.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Azure = Pulumi.Azure;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Azure.Nginx.GetConfiguration.Invoke(new()
        ///     {
        ///         NginxDeploymentId = exampleAzurermNginxDeployment.Id,
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["id"] = example.Apply(getConfigurationResult =&gt; getConfigurationResult.Id),
        ///     };
        /// });
        /// ```
        /// 
        /// ## API Providers
        /// 
        /// &lt;!-- This section is generated, changes will be overwritten --&gt;
        /// This data source uses the following Azure API Providers:
        /// 
        /// * `Nginx.NginxPlus` - 2024-11-01-preview
        /// </summary>
        public static Output<GetConfigurationResult> Invoke(GetConfigurationInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetConfigurationResult>("azure:nginx/getConfiguration:getConfiguration", args ?? new GetConfigurationInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to access information about an existing Nginx Configuration.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Azure = Pulumi.Azure;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Azure.Nginx.GetConfiguration.Invoke(new()
        ///     {
        ///         NginxDeploymentId = exampleAzurermNginxDeployment.Id,
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["id"] = example.Apply(getConfigurationResult =&gt; getConfigurationResult.Id),
        ///     };
        /// });
        /// ```
        /// 
        /// ## API Providers
        /// 
        /// &lt;!-- This section is generated, changes will be overwritten --&gt;
        /// This data source uses the following Azure API Providers:
        /// 
        /// * `Nginx.NginxPlus` - 2024-11-01-preview
        /// </summary>
        public static Output<GetConfigurationResult> Invoke(GetConfigurationInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetConfigurationResult>("azure:nginx/getConfiguration:getConfiguration", args ?? new GetConfigurationInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetConfigurationArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the Nginx Deployment.
        /// </summary>
        [Input("nginxDeploymentId", required: true)]
        public string NginxDeploymentId { get; set; } = null!;

        public GetConfigurationArgs()
        {
        }
        public static new GetConfigurationArgs Empty => new GetConfigurationArgs();
    }

    public sealed class GetConfigurationInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the Nginx Deployment.
        /// </summary>
        [Input("nginxDeploymentId", required: true)]
        public Input<string> NginxDeploymentId { get; set; } = null!;

        public GetConfigurationInvokeArgs()
        {
        }
        public static new GetConfigurationInvokeArgs Empty => new GetConfigurationInvokeArgs();
    }


    [OutputType]
    public sealed class GetConfigurationResult
    {
        /// <summary>
        /// A `config_file` block as defined below.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetConfigurationConfigFileResult> ConfigFiles;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string NginxDeploymentId;
        /// <summary>
        /// The package data for this configuration.
        /// </summary>
        public readonly string PackageData;
        /// <summary>
        /// A `protected_file` block as defined below.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetConfigurationProtectedFileResult> ProtectedFiles;
        /// <summary>
        /// The root file path of this Nginx Configuration.
        /// </summary>
        public readonly string RootFile;

        [OutputConstructor]
        private GetConfigurationResult(
            ImmutableArray<Outputs.GetConfigurationConfigFileResult> configFiles,

            string id,

            string nginxDeploymentId,

            string packageData,

            ImmutableArray<Outputs.GetConfigurationProtectedFileResult> protectedFiles,

            string rootFile)
        {
            ConfigFiles = configFiles;
            Id = id;
            NginxDeploymentId = nginxDeploymentId;
            PackageData = packageData;
            ProtectedFiles = protectedFiles;
            RootFile = rootFile;
        }
    }
}
