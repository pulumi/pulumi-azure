// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Lighthouse.Inputs
{

    public sealed class DefinitionEligibleAuthorizationJustInTimeAccessPolicyArgs : global::Pulumi.ResourceArgs
    {
        [Input("approvers")]
        private InputList<Inputs.DefinitionEligibleAuthorizationJustInTimeAccessPolicyApproverArgs>? _approvers;

        /// <summary>
        /// An `approver` block as defined below.
        /// </summary>
        public InputList<Inputs.DefinitionEligibleAuthorizationJustInTimeAccessPolicyApproverArgs> Approvers
        {
            get => _approvers ?? (_approvers = new InputList<Inputs.DefinitionEligibleAuthorizationJustInTimeAccessPolicyApproverArgs>());
            set => _approvers = value;
        }

        /// <summary>
        /// The maximum access duration in ISO 8601 format for just-in-time access requests. Defaults to `PT8H`.
        /// </summary>
        [Input("maximumActivationDuration")]
        public Input<string>? MaximumActivationDuration { get; set; }

        /// <summary>
        /// The multi-factor authorization provider to be used for just-in-time access requests. Possible value is `Azure`.
        /// </summary>
        [Input("multiFactorAuthProvider")]
        public Input<string>? MultiFactorAuthProvider { get; set; }

        public DefinitionEligibleAuthorizationJustInTimeAccessPolicyArgs()
        {
        }
        public static new DefinitionEligibleAuthorizationJustInTimeAccessPolicyArgs Empty => new DefinitionEligibleAuthorizationJustInTimeAccessPolicyArgs();
    }
}
