// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.LogicApps.Inputs
{

    public sealed class GetStandardSiteConfigScmIpRestrictionArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Does this restriction `Allow` or `Deny` access for this IP range.
        /// </summary>
        [Input("action")]
        public string? Action { get; set; }

        /// <summary>
        /// The `headers` block for this specific `ip_restriction` as defined below.
        /// </summary>
        [Input("headers", required: true)]
        public Inputs.GetStandardSiteConfigScmIpRestrictionHeadersArgs Headers { get; set; } = null!;

        /// <summary>
        /// The IP Address used for this IP Restriction in CIDR notation.
        /// </summary>
        [Input("ipAddress")]
        public string? IpAddress { get; set; }

        /// <summary>
        /// The name of the Logic App.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        /// <summary>
        /// The priority for this IP Restriction. Restrictions are enforced in priority order.
        /// </summary>
        [Input("priority")]
        public int? Priority { get; set; }

        /// <summary>
        /// The Service Tag used for this IP Restriction.
        /// </summary>
        [Input("serviceTag")]
        public string? ServiceTag { get; set; }

        /// <summary>
        /// The Virtual Network Subnet ID used for this IP Restriction.
        /// </summary>
        [Input("virtualNetworkSubnetId")]
        public string? VirtualNetworkSubnetId { get; set; }

        public GetStandardSiteConfigScmIpRestrictionArgs()
        {
        }
        public static new GetStandardSiteConfigScmIpRestrictionArgs Empty => new GetStandardSiteConfigScmIpRestrictionArgs();
    }
}
