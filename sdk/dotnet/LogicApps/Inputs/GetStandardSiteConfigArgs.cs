// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.LogicApps.Inputs
{

    public sealed class GetStandardSiteConfigInputArgs : global::Pulumi.ResourceArgs
    {
        [Input("alwaysOn")]
        public Input<bool>? AlwaysOn { get; set; }

        [Input("appScaleLimit", required: true)]
        public Input<int> AppScaleLimit { get; set; } = null!;

        [Input("autoSwapSlotName", required: true)]
        public Input<string> AutoSwapSlotName { get; set; } = null!;

        [Input("cors", required: true)]
        public Input<Inputs.GetStandardSiteConfigCorsInputArgs> Cors { get; set; } = null!;

        [Input("dotnetFrameworkVersion")]
        public Input<string>? DotnetFrameworkVersion { get; set; }

        [Input("elasticInstanceMinimum", required: true)]
        public Input<int> ElasticInstanceMinimum { get; set; } = null!;

        [Input("ftpsState", required: true)]
        public Input<string> FtpsState { get; set; } = null!;

        [Input("healthCheckPath")]
        public Input<string>? HealthCheckPath { get; set; }

        [Input("http2Enabled")]
        public Input<bool>? Http2Enabled { get; set; }

        [Input("ipRestrictions", required: true)]
        private InputList<Inputs.GetStandardSiteConfigIpRestrictionInputArgs>? _ipRestrictions;
        public InputList<Inputs.GetStandardSiteConfigIpRestrictionInputArgs> IpRestrictions
        {
            get => _ipRestrictions ?? (_ipRestrictions = new InputList<Inputs.GetStandardSiteConfigIpRestrictionInputArgs>());
            set => _ipRestrictions = value;
        }

        [Input("linuxFxVersion", required: true)]
        public Input<string> LinuxFxVersion { get; set; } = null!;

        [Input("minTlsVersion", required: true)]
        public Input<string> MinTlsVersion { get; set; } = null!;

        [Input("preWarmedInstanceCount", required: true)]
        public Input<int> PreWarmedInstanceCount { get; set; } = null!;

        [Input("publicNetworkAccessEnabled")]
        public Input<bool>? PublicNetworkAccessEnabled { get; set; }

        [Input("runtimeScaleMonitoringEnabled")]
        public Input<bool>? RuntimeScaleMonitoringEnabled { get; set; }

        [Input("scmIpRestrictions", required: true)]
        private InputList<Inputs.GetStandardSiteConfigScmIpRestrictionInputArgs>? _scmIpRestrictions;
        public InputList<Inputs.GetStandardSiteConfigScmIpRestrictionInputArgs> ScmIpRestrictions
        {
            get => _scmIpRestrictions ?? (_scmIpRestrictions = new InputList<Inputs.GetStandardSiteConfigScmIpRestrictionInputArgs>());
            set => _scmIpRestrictions = value;
        }

        [Input("scmMinTlsVersion", required: true)]
        public Input<string> ScmMinTlsVersion { get; set; } = null!;

        [Input("scmType", required: true)]
        public Input<string> ScmType { get; set; } = null!;

        [Input("scmUseMainIpRestriction")]
        public Input<bool>? ScmUseMainIpRestriction { get; set; }

        [Input("use32BitWorkerProcess")]
        public Input<bool>? Use32BitWorkerProcess { get; set; }

        [Input("vnetRouteAllEnabled", required: true)]
        public Input<bool> VnetRouteAllEnabled { get; set; } = null!;

        [Input("websocketsEnabled")]
        public Input<bool>? WebsocketsEnabled { get; set; }

        public GetStandardSiteConfigInputArgs()
        {
        }
        public static new GetStandardSiteConfigInputArgs Empty => new GetStandardSiteConfigInputArgs();
    }
}
