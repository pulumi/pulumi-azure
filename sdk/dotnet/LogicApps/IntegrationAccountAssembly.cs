// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.LogicApps
{
    /// <summary>
    /// Manages a Logic App Integration Account Assembly.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System;
    /// using System.Collections.Generic;
    /// using System.IO;
    /// using System.Linq;
    /// using Pulumi;
    /// using Azure = Pulumi.Azure;
    /// 
    /// 	
    /// string ReadFileBase64(string path) 
    /// {
    ///     return Convert.ToBase64String(Encoding.UTF8.GetBytes(File.ReadAllText(path)));
    /// }
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var exampleResourceGroup = new Azure.Core.ResourceGroup("exampleResourceGroup", new()
    ///     {
    ///         Location = "West Europe",
    ///     });
    /// 
    ///     var exampleIntegrationAccount = new Azure.LogicApps.IntegrationAccount("exampleIntegrationAccount", new()
    ///     {
    ///         Location = exampleResourceGroup.Location,
    ///         ResourceGroupName = exampleResourceGroup.Name,
    ///         SkuName = "Basic",
    ///     });
    /// 
    ///     var exampleIntegrationAccountAssembly = new Azure.LogicApps.IntegrationAccountAssembly("exampleIntegrationAccountAssembly", new()
    ///     {
    ///         ResourceGroupName = exampleResourceGroup.Name,
    ///         IntegrationAccountName = exampleIntegrationAccount.Name,
    ///         AssemblyName = "TestAssembly",
    ///         Content = ReadFileBase64("testdata/log4net.dll"),
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Logic App Integration Account Assemblies can be imported using the `resource id`, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import azure:logicapps/integrationAccountAssembly:IntegrationAccountAssembly example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Logic/integrationAccounts/account1/assemblies/assembly1
    /// ```
    /// </summary>
    [AzureResourceType("azure:logicapps/integrationAccountAssembly:IntegrationAccountAssembly")]
    public partial class IntegrationAccountAssembly : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The name of the Logic App Integration Account Assembly.
        /// </summary>
        [Output("assemblyName")]
        public Output<string> AssemblyName { get; private set; } = null!;

        /// <summary>
        /// The version of the Logic App Integration Account Assembly. Defaults to `0.0.0.0`.
        /// </summary>
        [Output("assemblyVersion")]
        public Output<string?> AssemblyVersion { get; private set; } = null!;

        /// <summary>
        /// The content of the Logic App Integration Account Assembly.
        /// </summary>
        [Output("content")]
        public Output<string?> Content { get; private set; } = null!;

        /// <summary>
        /// The content link URI of the Logic App Integration Account Assembly.
        /// </summary>
        [Output("contentLinkUri")]
        public Output<string?> ContentLinkUri { get; private set; } = null!;

        /// <summary>
        /// The name of the Logic App Integration Account. Changing this forces a new resource to be created.
        /// </summary>
        [Output("integrationAccountName")]
        public Output<string> IntegrationAccountName { get; private set; } = null!;

        /// <summary>
        /// The metadata of the Logic App Integration Account Assembly.
        /// </summary>
        [Output("metadata")]
        public Output<ImmutableDictionary<string, string>?> Metadata { get; private set; } = null!;

        /// <summary>
        /// The name which should be used for this Logic App Integration Account Assembly Artifact. Changing this forces a new resource to be created.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The name of the Resource Group where the Logic App Integration Account Assembly Artifact should exist. Changing this forces a new resource to be created.
        /// </summary>
        [Output("resourceGroupName")]
        public Output<string> ResourceGroupName { get; private set; } = null!;


        /// <summary>
        /// Create a IntegrationAccountAssembly resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public IntegrationAccountAssembly(string name, IntegrationAccountAssemblyArgs args, CustomResourceOptions? options = null)
            : base("azure:logicapps/integrationAccountAssembly:IntegrationAccountAssembly", name, args ?? new IntegrationAccountAssemblyArgs(), MakeResourceOptions(options, ""))
        {
        }

        private IntegrationAccountAssembly(string name, Input<string> id, IntegrationAccountAssemblyState? state = null, CustomResourceOptions? options = null)
            : base("azure:logicapps/integrationAccountAssembly:IntegrationAccountAssembly", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing IntegrationAccountAssembly resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static IntegrationAccountAssembly Get(string name, Input<string> id, IntegrationAccountAssemblyState? state = null, CustomResourceOptions? options = null)
        {
            return new IntegrationAccountAssembly(name, id, state, options);
        }
    }

    public sealed class IntegrationAccountAssemblyArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the Logic App Integration Account Assembly.
        /// </summary>
        [Input("assemblyName", required: true)]
        public Input<string> AssemblyName { get; set; } = null!;

        /// <summary>
        /// The version of the Logic App Integration Account Assembly. Defaults to `0.0.0.0`.
        /// </summary>
        [Input("assemblyVersion")]
        public Input<string>? AssemblyVersion { get; set; }

        /// <summary>
        /// The content of the Logic App Integration Account Assembly.
        /// </summary>
        [Input("content")]
        public Input<string>? Content { get; set; }

        /// <summary>
        /// The content link URI of the Logic App Integration Account Assembly.
        /// </summary>
        [Input("contentLinkUri")]
        public Input<string>? ContentLinkUri { get; set; }

        /// <summary>
        /// The name of the Logic App Integration Account. Changing this forces a new resource to be created.
        /// </summary>
        [Input("integrationAccountName", required: true)]
        public Input<string> IntegrationAccountName { get; set; } = null!;

        [Input("metadata")]
        private InputMap<string>? _metadata;

        /// <summary>
        /// The metadata of the Logic App Integration Account Assembly.
        /// </summary>
        public InputMap<string> Metadata
        {
            get => _metadata ?? (_metadata = new InputMap<string>());
            set => _metadata = value;
        }

        /// <summary>
        /// The name which should be used for this Logic App Integration Account Assembly Artifact. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The name of the Resource Group where the Logic App Integration Account Assembly Artifact should exist. Changing this forces a new resource to be created.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public IntegrationAccountAssemblyArgs()
        {
        }
        public static new IntegrationAccountAssemblyArgs Empty => new IntegrationAccountAssemblyArgs();
    }

    public sealed class IntegrationAccountAssemblyState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the Logic App Integration Account Assembly.
        /// </summary>
        [Input("assemblyName")]
        public Input<string>? AssemblyName { get; set; }

        /// <summary>
        /// The version of the Logic App Integration Account Assembly. Defaults to `0.0.0.0`.
        /// </summary>
        [Input("assemblyVersion")]
        public Input<string>? AssemblyVersion { get; set; }

        /// <summary>
        /// The content of the Logic App Integration Account Assembly.
        /// </summary>
        [Input("content")]
        public Input<string>? Content { get; set; }

        /// <summary>
        /// The content link URI of the Logic App Integration Account Assembly.
        /// </summary>
        [Input("contentLinkUri")]
        public Input<string>? ContentLinkUri { get; set; }

        /// <summary>
        /// The name of the Logic App Integration Account. Changing this forces a new resource to be created.
        /// </summary>
        [Input("integrationAccountName")]
        public Input<string>? IntegrationAccountName { get; set; }

        [Input("metadata")]
        private InputMap<string>? _metadata;

        /// <summary>
        /// The metadata of the Logic App Integration Account Assembly.
        /// </summary>
        public InputMap<string> Metadata
        {
            get => _metadata ?? (_metadata = new InputMap<string>());
            set => _metadata = value;
        }

        /// <summary>
        /// The name which should be used for this Logic App Integration Account Assembly Artifact. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The name of the Resource Group where the Logic App Integration Account Assembly Artifact should exist. Changing this forces a new resource to be created.
        /// </summary>
        [Input("resourceGroupName")]
        public Input<string>? ResourceGroupName { get; set; }

        public IntegrationAccountAssemblyState()
        {
        }
        public static new IntegrationAccountAssemblyState Empty => new IntegrationAccountAssemblyState();
    }
}
