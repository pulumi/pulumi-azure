// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Monitoring
{
    /// <summary>
    /// Manages an Action Group within Azure Monitor.
    /// 
    /// &gt; This content is derived from https://github.com/terraform-providers/terraform-provider-azurerm/blob/master/website/docs/r/monitor_action_group.html.markdown.
    /// </summary>
    public partial class ActionGroup : Pulumi.CustomResource
    {
        /// <summary>
        /// One or more `email_receiver` blocks as defined below.
        /// </summary>
        [Output("emailReceivers")]
        public Output<ImmutableArray<Outputs.ActionGroupEmailReceivers>> EmailReceivers { get; private set; } = null!;

        /// <summary>
        /// Whether this action group is enabled. If an action group is not enabled, then none of its receivers will receive communications. Defaults to `true`.
        /// </summary>
        [Output("enabled")]
        public Output<bool?> Enabled { get; private set; } = null!;

        /// <summary>
        /// The name of the webhook receiver. Names must be unique (case-insensitive) across all receivers within an action group.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The name of the resource group in which to create the Action Group instance.
        /// </summary>
        [Output("resourceGroupName")]
        public Output<string> ResourceGroupName { get; private set; } = null!;

        /// <summary>
        /// The short name of the action group. This will be used in SMS messages.
        /// </summary>
        [Output("shortName")]
        public Output<string> ShortName { get; private set; } = null!;

        /// <summary>
        /// One or more `sms_receiver ` blocks as defined below.
        /// </summary>
        [Output("smsReceivers")]
        public Output<ImmutableArray<Outputs.ActionGroupSmsReceivers>> SmsReceivers { get; private set; } = null!;

        /// <summary>
        /// A mapping of tags to assign to the resource.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, object>> Tags { get; private set; } = null!;

        /// <summary>
        /// One or more `webhook_receiver ` blocks as defined below.
        /// </summary>
        [Output("webhookReceivers")]
        public Output<ImmutableArray<Outputs.ActionGroupWebhookReceivers>> WebhookReceivers { get; private set; } = null!;


        /// <summary>
        /// Create a ActionGroup resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ActionGroup(string name, ActionGroupArgs args, CustomResourceOptions? options = null)
            : base("azure:monitoring/actionGroup:ActionGroup", name, args, MakeResourceOptions(options, ""))
        {
        }

        private ActionGroup(string name, Input<string> id, ActionGroupState? state = null, CustomResourceOptions? options = null)
            : base("azure:monitoring/actionGroup:ActionGroup", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ActionGroup resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ActionGroup Get(string name, Input<string> id, ActionGroupState? state = null, CustomResourceOptions? options = null)
        {
            return new ActionGroup(name, id, state, options);
        }
    }

    public sealed class ActionGroupArgs : Pulumi.ResourceArgs
    {
        [Input("emailReceivers")]
        private InputList<Inputs.ActionGroupEmailReceiversArgs>? _emailReceivers;

        /// <summary>
        /// One or more `email_receiver` blocks as defined below.
        /// </summary>
        public InputList<Inputs.ActionGroupEmailReceiversArgs> EmailReceivers
        {
            get => _emailReceivers ?? (_emailReceivers = new InputList<Inputs.ActionGroupEmailReceiversArgs>());
            set => _emailReceivers = value;
        }

        /// <summary>
        /// Whether this action group is enabled. If an action group is not enabled, then none of its receivers will receive communications. Defaults to `true`.
        /// </summary>
        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        /// <summary>
        /// The name of the webhook receiver. Names must be unique (case-insensitive) across all receivers within an action group.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The name of the resource group in which to create the Action Group instance.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The short name of the action group. This will be used in SMS messages.
        /// </summary>
        [Input("shortName", required: true)]
        public Input<string> ShortName { get; set; } = null!;

        [Input("smsReceivers")]
        private InputList<Inputs.ActionGroupSmsReceiversArgs>? _smsReceivers;

        /// <summary>
        /// One or more `sms_receiver ` blocks as defined below.
        /// </summary>
        public InputList<Inputs.ActionGroupSmsReceiversArgs> SmsReceivers
        {
            get => _smsReceivers ?? (_smsReceivers = new InputList<Inputs.ActionGroupSmsReceiversArgs>());
            set => _smsReceivers = value;
        }

        [Input("tags")]
        private InputMap<object>? _tags;

        /// <summary>
        /// A mapping of tags to assign to the resource.
        /// </summary>
        public InputMap<object> Tags
        {
            get => _tags ?? (_tags = new InputMap<object>());
            set => _tags = value;
        }

        [Input("webhookReceivers")]
        private InputList<Inputs.ActionGroupWebhookReceiversArgs>? _webhookReceivers;

        /// <summary>
        /// One or more `webhook_receiver ` blocks as defined below.
        /// </summary>
        public InputList<Inputs.ActionGroupWebhookReceiversArgs> WebhookReceivers
        {
            get => _webhookReceivers ?? (_webhookReceivers = new InputList<Inputs.ActionGroupWebhookReceiversArgs>());
            set => _webhookReceivers = value;
        }

        public ActionGroupArgs()
        {
        }
    }

    public sealed class ActionGroupState : Pulumi.ResourceArgs
    {
        [Input("emailReceivers")]
        private InputList<Inputs.ActionGroupEmailReceiversGetArgs>? _emailReceivers;

        /// <summary>
        /// One or more `email_receiver` blocks as defined below.
        /// </summary>
        public InputList<Inputs.ActionGroupEmailReceiversGetArgs> EmailReceivers
        {
            get => _emailReceivers ?? (_emailReceivers = new InputList<Inputs.ActionGroupEmailReceiversGetArgs>());
            set => _emailReceivers = value;
        }

        /// <summary>
        /// Whether this action group is enabled. If an action group is not enabled, then none of its receivers will receive communications. Defaults to `true`.
        /// </summary>
        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        /// <summary>
        /// The name of the webhook receiver. Names must be unique (case-insensitive) across all receivers within an action group.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The name of the resource group in which to create the Action Group instance.
        /// </summary>
        [Input("resourceGroupName")]
        public Input<string>? ResourceGroupName { get; set; }

        /// <summary>
        /// The short name of the action group. This will be used in SMS messages.
        /// </summary>
        [Input("shortName")]
        public Input<string>? ShortName { get; set; }

        [Input("smsReceivers")]
        private InputList<Inputs.ActionGroupSmsReceiversGetArgs>? _smsReceivers;

        /// <summary>
        /// One or more `sms_receiver ` blocks as defined below.
        /// </summary>
        public InputList<Inputs.ActionGroupSmsReceiversGetArgs> SmsReceivers
        {
            get => _smsReceivers ?? (_smsReceivers = new InputList<Inputs.ActionGroupSmsReceiversGetArgs>());
            set => _smsReceivers = value;
        }

        [Input("tags")]
        private InputMap<object>? _tags;

        /// <summary>
        /// A mapping of tags to assign to the resource.
        /// </summary>
        public InputMap<object> Tags
        {
            get => _tags ?? (_tags = new InputMap<object>());
            set => _tags = value;
        }

        [Input("webhookReceivers")]
        private InputList<Inputs.ActionGroupWebhookReceiversGetArgs>? _webhookReceivers;

        /// <summary>
        /// One or more `webhook_receiver ` blocks as defined below.
        /// </summary>
        public InputList<Inputs.ActionGroupWebhookReceiversGetArgs> WebhookReceivers
        {
            get => _webhookReceivers ?? (_webhookReceivers = new InputList<Inputs.ActionGroupWebhookReceiversGetArgs>());
            set => _webhookReceivers = value;
        }

        public ActionGroupState()
        {
        }
    }

    namespace Inputs
    {

    public sealed class ActionGroupEmailReceiversArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The email address of this receiver.
        /// </summary>
        [Input("emailAddress", required: true)]
        public Input<string> EmailAddress { get; set; } = null!;

        /// <summary>
        /// The name of the webhook receiver. Names must be unique (case-insensitive) across all receivers within an action group.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        public ActionGroupEmailReceiversArgs()
        {
        }
    }

    public sealed class ActionGroupEmailReceiversGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The email address of this receiver.
        /// </summary>
        [Input("emailAddress", required: true)]
        public Input<string> EmailAddress { get; set; } = null!;

        /// <summary>
        /// The name of the webhook receiver. Names must be unique (case-insensitive) across all receivers within an action group.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        public ActionGroupEmailReceiversGetArgs()
        {
        }
    }

    public sealed class ActionGroupSmsReceiversArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The country code of the SMS receiver.
        /// </summary>
        [Input("countryCode", required: true)]
        public Input<string> CountryCode { get; set; } = null!;

        /// <summary>
        /// The name of the webhook receiver. Names must be unique (case-insensitive) across all receivers within an action group.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// The phone number of the SMS receiver.
        /// </summary>
        [Input("phoneNumber", required: true)]
        public Input<string> PhoneNumber { get; set; } = null!;

        public ActionGroupSmsReceiversArgs()
        {
        }
    }

    public sealed class ActionGroupSmsReceiversGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The country code of the SMS receiver.
        /// </summary>
        [Input("countryCode", required: true)]
        public Input<string> CountryCode { get; set; } = null!;

        /// <summary>
        /// The name of the webhook receiver. Names must be unique (case-insensitive) across all receivers within an action group.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// The phone number of the SMS receiver.
        /// </summary>
        [Input("phoneNumber", required: true)]
        public Input<string> PhoneNumber { get; set; } = null!;

        public ActionGroupSmsReceiversGetArgs()
        {
        }
    }

    public sealed class ActionGroupWebhookReceiversArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the webhook receiver. Names must be unique (case-insensitive) across all receivers within an action group.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// The URI where webhooks should be sent.
        /// </summary>
        [Input("serviceUri", required: true)]
        public Input<string> ServiceUri { get; set; } = null!;

        /// <summary>
        /// Enables or disables the common alert schema.
        /// </summary>
        [Input("useCommonAlertSchema")]
        public Input<bool>? UseCommonAlertSchema { get; set; }

        public ActionGroupWebhookReceiversArgs()
        {
        }
    }

    public sealed class ActionGroupWebhookReceiversGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the webhook receiver. Names must be unique (case-insensitive) across all receivers within an action group.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// The URI where webhooks should be sent.
        /// </summary>
        [Input("serviceUri", required: true)]
        public Input<string> ServiceUri { get; set; } = null!;

        /// <summary>
        /// Enables or disables the common alert schema.
        /// </summary>
        [Input("useCommonAlertSchema")]
        public Input<bool>? UseCommonAlertSchema { get; set; }

        public ActionGroupWebhookReceiversGetArgs()
        {
        }
    }
    }

    namespace Outputs
    {

    [OutputType]
    public sealed class ActionGroupEmailReceivers
    {
        /// <summary>
        /// The email address of this receiver.
        /// </summary>
        public readonly string EmailAddress;
        /// <summary>
        /// The name of the webhook receiver. Names must be unique (case-insensitive) across all receivers within an action group.
        /// </summary>
        public readonly string Name;

        [OutputConstructor]
        private ActionGroupEmailReceivers(
            string emailAddress,
            string name)
        {
            EmailAddress = emailAddress;
            Name = name;
        }
    }

    [OutputType]
    public sealed class ActionGroupSmsReceivers
    {
        /// <summary>
        /// The country code of the SMS receiver.
        /// </summary>
        public readonly string CountryCode;
        /// <summary>
        /// The name of the webhook receiver. Names must be unique (case-insensitive) across all receivers within an action group.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The phone number of the SMS receiver.
        /// </summary>
        public readonly string PhoneNumber;

        [OutputConstructor]
        private ActionGroupSmsReceivers(
            string countryCode,
            string name,
            string phoneNumber)
        {
            CountryCode = countryCode;
            Name = name;
            PhoneNumber = phoneNumber;
        }
    }

    [OutputType]
    public sealed class ActionGroupWebhookReceivers
    {
        /// <summary>
        /// The name of the webhook receiver. Names must be unique (case-insensitive) across all receivers within an action group.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The URI where webhooks should be sent.
        /// </summary>
        public readonly string ServiceUri;
        /// <summary>
        /// Enables or disables the common alert schema.
        /// </summary>
        public readonly bool? UseCommonAlertSchema;

        [OutputConstructor]
        private ActionGroupWebhookReceivers(
            string name,
            string serviceUri,
            bool? useCommonAlertSchema)
        {
            Name = name;
            ServiceUri = serviceUri;
            UseCommonAlertSchema = useCommonAlertSchema;
        }
    }
    }
}
