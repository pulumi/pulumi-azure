// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Monitoring
{
    /// <summary>
    /// Manages an Azure Active Directory Diagnostic Setting for Azure Monitor.
    /// 
    /// !&gt; **Note:** The API for this resource does not support service principal authentication. This resource can only be used with Azure CLI authentication.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Azure = Pulumi.Azure;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Azure.Core.ResourceGroup("example", new()
    ///     {
    ///         Name = "example-rg",
    ///         Location = "west europe",
    ///     });
    /// 
    ///     var exampleAccount = new Azure.Storage.Account("example", new()
    ///     {
    ///         Name = "examplestorageaccount",
    ///         ResourceGroupName = example.Name,
    ///         Location = example.Location,
    ///         AccountTier = "Standard",
    ///         AccountKind = "StorageV2",
    ///         AccountReplicationType = "LRS",
    ///     });
    /// 
    ///     var exampleAadDiagnosticSetting = new Azure.Monitoring.AadDiagnosticSetting("example", new()
    ///     {
    ///         Name = "setting1",
    ///         StorageAccountId = exampleAccount.Id,
    ///         EnabledLogs = new[]
    ///         {
    ///             new Azure.Monitoring.Inputs.AadDiagnosticSettingEnabledLogArgs
    ///             {
    ///                 Category = "SignInLogs",
    ///             },
    ///             new Azure.Monitoring.Inputs.AadDiagnosticSettingEnabledLogArgs
    ///             {
    ///                 Category = "AuditLogs",
    ///             },
    ///             new Azure.Monitoring.Inputs.AadDiagnosticSettingEnabledLogArgs
    ///             {
    ///                 Category = "NonInteractiveUserSignInLogs",
    ///             },
    ///             new Azure.Monitoring.Inputs.AadDiagnosticSettingEnabledLogArgs
    ///             {
    ///                 Category = "ServicePrincipalSignInLogs",
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## API Providers
    /// 
    /// &lt;!-- This section is generated, changes will be overwritten --&gt;
    /// This resource uses the following Azure API Providers:
    /// 
    /// * `Microsoft.AADIAM` - 2017-04-01
    /// 
    /// ## Import
    /// 
    /// Monitor Azure Active Directory Diagnostic Settings can be imported using the `resource id`, e.g.
    /// 
    /// ```sh
    /// $ pulumi import azure:monitoring/aadDiagnosticSetting:AadDiagnosticSetting example /providers/Microsoft.AADIAM/diagnosticSettings/setting1
    /// ```
    /// </summary>
    [AzureResourceType("azure:monitoring/aadDiagnosticSetting:AadDiagnosticSetting")]
    public partial class AadDiagnosticSetting : global::Pulumi.CustomResource
    {
        /// <summary>
        /// One or more `EnabledLog` blocks as defined below.
        /// </summary>
        [Output("enabledLogs")]
        public Output<ImmutableArray<Outputs.AadDiagnosticSettingEnabledLog>> EnabledLogs { get; private set; } = null!;

        /// <summary>
        /// Specifies the ID of an Event Hub Namespace Authorization Rule used to send Diagnostics Data. Changing this forces a new resource to be created.
        /// 
        /// &gt; **Note:** This can be sourced from the `azure.eventhub.EventHubNamespaceAuthorizationRule` resource and is different from a `azure.eventhub.AuthorizationRule` resource.
        /// </summary>
        [Output("eventhubAuthorizationRuleId")]
        public Output<string?> EventhubAuthorizationRuleId { get; private set; } = null!;

        /// <summary>
        /// Specifies the name of the Event Hub where Diagnostics Data should be sent. If not specified, the default Event Hub will be used. Changing this forces a new resource to be created.
        /// </summary>
        [Output("eventhubName")]
        public Output<string?> EventhubName { get; private set; } = null!;

        /// <summary>
        /// Specifies the ID of a Log Analytics Workspace where Diagnostics Data should be sent.
        /// </summary>
        [Output("logAnalyticsWorkspaceId")]
        public Output<string?> LogAnalyticsWorkspaceId { get; private set; } = null!;

        /// <summary>
        /// The name which should be used for this Monitor Azure Active Directory Diagnostic Setting. Changing this forces a new Monitor Azure Active Directory Diagnostic Setting to be created.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The ID of the Storage Account where logs should be sent. Changing this forces a new resource to be created.
        /// 
        /// &gt; **Note:** One of `EventhubAuthorizationRuleId`, `LogAnalyticsWorkspaceId` and `StorageAccountId` must be specified.
        /// </summary>
        [Output("storageAccountId")]
        public Output<string?> StorageAccountId { get; private set; } = null!;


        /// <summary>
        /// Create a AadDiagnosticSetting resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public AadDiagnosticSetting(string name, AadDiagnosticSettingArgs? args = null, CustomResourceOptions? options = null)
            : base("azure:monitoring/aadDiagnosticSetting:AadDiagnosticSetting", name, args ?? new AadDiagnosticSettingArgs(), MakeResourceOptions(options, ""))
        {
        }

        private AadDiagnosticSetting(string name, Input<string> id, AadDiagnosticSettingState? state = null, CustomResourceOptions? options = null)
            : base("azure:monitoring/aadDiagnosticSetting:AadDiagnosticSetting", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing AadDiagnosticSetting resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static AadDiagnosticSetting Get(string name, Input<string> id, AadDiagnosticSettingState? state = null, CustomResourceOptions? options = null)
        {
            return new AadDiagnosticSetting(name, id, state, options);
        }
    }

    public sealed class AadDiagnosticSettingArgs : global::Pulumi.ResourceArgs
    {
        [Input("enabledLogs")]
        private InputList<Inputs.AadDiagnosticSettingEnabledLogArgs>? _enabledLogs;

        /// <summary>
        /// One or more `EnabledLog` blocks as defined below.
        /// </summary>
        public InputList<Inputs.AadDiagnosticSettingEnabledLogArgs> EnabledLogs
        {
            get => _enabledLogs ?? (_enabledLogs = new InputList<Inputs.AadDiagnosticSettingEnabledLogArgs>());
            set => _enabledLogs = value;
        }

        /// <summary>
        /// Specifies the ID of an Event Hub Namespace Authorization Rule used to send Diagnostics Data. Changing this forces a new resource to be created.
        /// 
        /// &gt; **Note:** This can be sourced from the `azure.eventhub.EventHubNamespaceAuthorizationRule` resource and is different from a `azure.eventhub.AuthorizationRule` resource.
        /// </summary>
        [Input("eventhubAuthorizationRuleId")]
        public Input<string>? EventhubAuthorizationRuleId { get; set; }

        /// <summary>
        /// Specifies the name of the Event Hub where Diagnostics Data should be sent. If not specified, the default Event Hub will be used. Changing this forces a new resource to be created.
        /// </summary>
        [Input("eventhubName")]
        public Input<string>? EventhubName { get; set; }

        /// <summary>
        /// Specifies the ID of a Log Analytics Workspace where Diagnostics Data should be sent.
        /// </summary>
        [Input("logAnalyticsWorkspaceId")]
        public Input<string>? LogAnalyticsWorkspaceId { get; set; }

        /// <summary>
        /// The name which should be used for this Monitor Azure Active Directory Diagnostic Setting. Changing this forces a new Monitor Azure Active Directory Diagnostic Setting to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The ID of the Storage Account where logs should be sent. Changing this forces a new resource to be created.
        /// 
        /// &gt; **Note:** One of `EventhubAuthorizationRuleId`, `LogAnalyticsWorkspaceId` and `StorageAccountId` must be specified.
        /// </summary>
        [Input("storageAccountId")]
        public Input<string>? StorageAccountId { get; set; }

        public AadDiagnosticSettingArgs()
        {
        }
        public static new AadDiagnosticSettingArgs Empty => new AadDiagnosticSettingArgs();
    }

    public sealed class AadDiagnosticSettingState : global::Pulumi.ResourceArgs
    {
        [Input("enabledLogs")]
        private InputList<Inputs.AadDiagnosticSettingEnabledLogGetArgs>? _enabledLogs;

        /// <summary>
        /// One or more `EnabledLog` blocks as defined below.
        /// </summary>
        public InputList<Inputs.AadDiagnosticSettingEnabledLogGetArgs> EnabledLogs
        {
            get => _enabledLogs ?? (_enabledLogs = new InputList<Inputs.AadDiagnosticSettingEnabledLogGetArgs>());
            set => _enabledLogs = value;
        }

        /// <summary>
        /// Specifies the ID of an Event Hub Namespace Authorization Rule used to send Diagnostics Data. Changing this forces a new resource to be created.
        /// 
        /// &gt; **Note:** This can be sourced from the `azure.eventhub.EventHubNamespaceAuthorizationRule` resource and is different from a `azure.eventhub.AuthorizationRule` resource.
        /// </summary>
        [Input("eventhubAuthorizationRuleId")]
        public Input<string>? EventhubAuthorizationRuleId { get; set; }

        /// <summary>
        /// Specifies the name of the Event Hub where Diagnostics Data should be sent. If not specified, the default Event Hub will be used. Changing this forces a new resource to be created.
        /// </summary>
        [Input("eventhubName")]
        public Input<string>? EventhubName { get; set; }

        /// <summary>
        /// Specifies the ID of a Log Analytics Workspace where Diagnostics Data should be sent.
        /// </summary>
        [Input("logAnalyticsWorkspaceId")]
        public Input<string>? LogAnalyticsWorkspaceId { get; set; }

        /// <summary>
        /// The name which should be used for this Monitor Azure Active Directory Diagnostic Setting. Changing this forces a new Monitor Azure Active Directory Diagnostic Setting to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The ID of the Storage Account where logs should be sent. Changing this forces a new resource to be created.
        /// 
        /// &gt; **Note:** One of `EventhubAuthorizationRuleId`, `LogAnalyticsWorkspaceId` and `StorageAccountId` must be specified.
        /// </summary>
        [Input("storageAccountId")]
        public Input<string>? StorageAccountId { get; set; }

        public AadDiagnosticSettingState()
        {
        }
        public static new AadDiagnosticSettingState Empty => new AadDiagnosticSettingState();
    }
}
