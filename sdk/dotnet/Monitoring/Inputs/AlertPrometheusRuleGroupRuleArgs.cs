// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Monitoring.Inputs
{

    public sealed class AlertPrometheusRuleGroupRuleArgs : global::Pulumi.ResourceArgs
    {
        [Input("actions")]
        private InputList<Inputs.AlertPrometheusRuleGroupRuleActionArgs>? _actions;

        /// <summary>
        /// An `action` block as defined below.
        /// </summary>
        public InputList<Inputs.AlertPrometheusRuleGroupRuleActionArgs> Actions
        {
            get => _actions ?? (_actions = new InputList<Inputs.AlertPrometheusRuleGroupRuleActionArgs>());
            set => _actions = value;
        }

        /// <summary>
        /// Specifies the Alert rule name.
        /// </summary>
        [Input("alert")]
        public Input<string>? Alert { get; set; }

        /// <summary>
        /// An `alert_resolution` block as defined below.
        /// </summary>
        [Input("alertResolution")]
        public Input<Inputs.AlertPrometheusRuleGroupRuleAlertResolutionArgs>? AlertResolution { get; set; }

        [Input("annotations")]
        private InputMap<string>? _annotations;

        /// <summary>
        /// Specifies a set of informational labels that can be used to store longer additional information such as alert descriptions or runbook links.
        /// </summary>
        public InputMap<string> Annotations
        {
            get => _annotations ?? (_annotations = new InputMap<string>());
            set => _annotations = value;
        }

        /// <summary>
        /// Is this rule enabled? Possible values are `true` and `false`.
        /// </summary>
        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        /// <summary>
        /// Specifies the Prometheus Query Language expression to evaluate. For more details see [this doc](https://prometheus.io/docs/prometheus/latest/querying/basics). Evaluate at the period given by `interval` and record the result as a new set of time series with the metric name given by `record`.
        /// </summary>
        [Input("expression", required: true)]
        public Input<string> Expression { get; set; } = null!;

        /// <summary>
        /// Specifies the amount of time alert must be active before firing, represented in ISO 8601 duration format.
        /// </summary>
        [Input("for")]
        public Input<string>? For { get; set; }

        [Input("labels")]
        private InputMap<string>? _labels;

        /// <summary>
        /// Specifies the labels to add or overwrite before storing the result.
        /// </summary>
        public InputMap<string> Labels
        {
            get => _labels ?? (_labels = new InputMap<string>());
            set => _labels = value;
        }

        /// <summary>
        /// Specifies the recorded metrics name.
        /// </summary>
        [Input("record")]
        public Input<string>? Record { get; set; }

        /// <summary>
        /// Specifies the severity of the alerts fired by the rule. Possible values are between 0 and 4.
        /// </summary>
        [Input("severity")]
        public Input<int>? Severity { get; set; }

        public AlertPrometheusRuleGroupRuleArgs()
        {
        }
        public static new AlertPrometheusRuleGroupRuleArgs Empty => new AlertPrometheusRuleGroupRuleArgs();
    }
}
