// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Monitoring.Inputs
{

    public sealed class AlertProcessingRuleActionGroupConditionGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// A `AlertContext` block as defined above.
        /// </summary>
        [Input("alertContext")]
        public Input<Inputs.AlertProcessingRuleActionGroupConditionAlertContextGetArgs>? AlertContext { get; set; }

        /// <summary>
        /// A `AlertRuleId` block as defined above.
        /// </summary>
        [Input("alertRuleId")]
        public Input<Inputs.AlertProcessingRuleActionGroupConditionAlertRuleIdGetArgs>? AlertRuleId { get; set; }

        /// <summary>
        /// A `AlertRuleName` block as defined above.
        /// </summary>
        [Input("alertRuleName")]
        public Input<Inputs.AlertProcessingRuleActionGroupConditionAlertRuleNameGetArgs>? AlertRuleName { get; set; }

        /// <summary>
        /// A `Description` block as defined below.
        /// </summary>
        [Input("description")]
        public Input<Inputs.AlertProcessingRuleActionGroupConditionDescriptionGetArgs>? Description { get; set; }

        /// <summary>
        /// A `MonitorCondition` block as defined below.
        /// </summary>
        [Input("monitorCondition")]
        public Input<Inputs.AlertProcessingRuleActionGroupConditionMonitorConditionGetArgs>? MonitorCondition { get; set; }

        /// <summary>
        /// A `MonitorService` block as defined below.
        /// </summary>
        [Input("monitorService")]
        public Input<Inputs.AlertProcessingRuleActionGroupConditionMonitorServiceGetArgs>? MonitorService { get; set; }

        /// <summary>
        /// A `Severity` block as defined below.
        /// </summary>
        [Input("severity")]
        public Input<Inputs.AlertProcessingRuleActionGroupConditionSeverityGetArgs>? Severity { get; set; }

        /// <summary>
        /// A `SignalType` block as defined below.
        /// </summary>
        [Input("signalType")]
        public Input<Inputs.AlertProcessingRuleActionGroupConditionSignalTypeGetArgs>? SignalType { get; set; }

        /// <summary>
        /// A `TargetResource` block as defined below.
        /// </summary>
        [Input("targetResource")]
        public Input<Inputs.AlertProcessingRuleActionGroupConditionTargetResourceGetArgs>? TargetResource { get; set; }

        /// <summary>
        /// A `TargetResourceGroup` block as defined below.
        /// </summary>
        [Input("targetResourceGroup")]
        public Input<Inputs.AlertProcessingRuleActionGroupConditionTargetResourceGroupGetArgs>? TargetResourceGroup { get; set; }

        /// <summary>
        /// A `TargetResourceType` block as defined below.
        /// 
        /// &gt; **Note:** At least one of the `AlertContext`, `AlertRuleId`, `AlertRuleName`, `Description`, `MonitorCondition`, `MonitorService`, `Severity`, `SignalType`, `TargetResource`, `TargetResourceGroup`, `TargetResourceType` must be specified.
        /// </summary>
        [Input("targetResourceType")]
        public Input<Inputs.AlertProcessingRuleActionGroupConditionTargetResourceTypeGetArgs>? TargetResourceType { get; set; }

        public AlertProcessingRuleActionGroupConditionGetArgs()
        {
        }
        public static new AlertProcessingRuleActionGroupConditionGetArgs Empty => new AlertProcessingRuleActionGroupConditionGetArgs();
    }
}
