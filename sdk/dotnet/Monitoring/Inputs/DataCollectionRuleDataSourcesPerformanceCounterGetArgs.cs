// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Monitoring.Inputs
{

    public sealed class DataCollectionRuleDataSourcesPerformanceCounterGetArgs : global::Pulumi.ResourceArgs
    {
        [Input("counterSpecifiers", required: true)]
        private InputList<string>? _counterSpecifiers;

        /// <summary>
        /// Specifies a list of specifier names of the performance counters you want to collect. Use a wildcard `*` to collect counters for all instances. To get a list of performance counters on Windows, run the command `typeperf`.
        /// </summary>
        public InputList<string> CounterSpecifiers
        {
            get => _counterSpecifiers ?? (_counterSpecifiers = new InputList<string>());
            set => _counterSpecifiers = value;
        }

        /// <summary>
        /// The name which should be used for this data source. This name should be unique across all data sources regardless of type within the Data Collection Rule.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// The number of seconds between consecutive counter measurements (samples). The value should be integer between `1` and `300` inclusive.
        /// </summary>
        [Input("samplingFrequencyInSeconds", required: true)]
        public Input<int> SamplingFrequencyInSeconds { get; set; } = null!;

        [Input("streams", required: true)]
        private InputList<string>? _streams;

        /// <summary>
        /// Specifies a list of streams that this data source will be sent to. A stream indicates what schema will be used for this data and usually what table in Log Analytics the data will be sent to. Possible values are `Microsoft-InsightsMetrics`,and `Microsoft-Perf`.
        /// </summary>
        public InputList<string> Streams
        {
            get => _streams ?? (_streams = new InputList<string>());
            set => _streams = value;
        }

        public DataCollectionRuleDataSourcesPerformanceCounterGetArgs()
        {
        }
        public static new DataCollectionRuleDataSourcesPerformanceCounterGetArgs Empty => new DataCollectionRuleDataSourcesPerformanceCounterGetArgs();
    }
}
