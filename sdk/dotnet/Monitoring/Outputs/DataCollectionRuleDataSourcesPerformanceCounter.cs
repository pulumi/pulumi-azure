// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Monitoring.Outputs
{

    [OutputType]
    public sealed class DataCollectionRuleDataSourcesPerformanceCounter
    {
        /// <summary>
        /// Specifies a list of specifier names of the performance counters you want to collect. To get a list of performance counters on Windows, run the command `typeperf`. Please see [this document](https://learn.microsoft.com/en-us/azure/azure-monitor/agents/data-sources-performance-counters#configure-performance-counters) for more information.
        /// </summary>
        public readonly ImmutableArray<string> CounterSpecifiers;
        /// <summary>
        /// The name which should be used for this data source. This name should be unique across all data sources regardless of type within the Data Collection Rule.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The number of seconds between consecutive counter measurements (samples). The value should be integer between `1` and `300` inclusive. `sampling_frequency_in_seconds` must be equal to `60` seconds for counters collected with `Microsoft-InsightsMetrics` stream.
        /// </summary>
        public readonly int SamplingFrequencyInSeconds;
        /// <summary>
        /// Specifies a list of streams that this data source will be sent to. A stream indicates what schema will be used for this data and usually what table in Log Analytics the data will be sent to. Possible values include but not limited to `Microsoft-InsightsMetrics`,and `Microsoft-Perf`.
        /// </summary>
        public readonly ImmutableArray<string> Streams;

        [OutputConstructor]
        private DataCollectionRuleDataSourcesPerformanceCounter(
            ImmutableArray<string> counterSpecifiers,

            string name,

            int samplingFrequencyInSeconds,

            ImmutableArray<string> streams)
        {
            CounterSpecifiers = counterSpecifiers;
            Name = name;
            SamplingFrequencyInSeconds = samplingFrequencyInSeconds;
            Streams = streams;
        }
    }
}
