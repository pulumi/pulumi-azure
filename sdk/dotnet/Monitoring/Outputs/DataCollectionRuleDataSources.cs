// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Monitoring.Outputs
{

    [OutputType]
    public sealed class DataCollectionRuleDataSources
    {
        /// <summary>
        /// A `DataImport` block as defined above.
        /// </summary>
        public readonly Outputs.DataCollectionRuleDataSourcesDataImport? DataImport;
        /// <summary>
        /// One or more `Extension` blocks as defined below.
        /// </summary>
        public readonly ImmutableArray<Outputs.DataCollectionRuleDataSourcesExtension> Extensions;
        /// <summary>
        /// One or more `IisLog` blocks as defined below.
        /// </summary>
        public readonly ImmutableArray<Outputs.DataCollectionRuleDataSourcesIisLog> IisLogs;
        /// <summary>
        /// One or more `LogFile` blocks as defined below.
        /// </summary>
        public readonly ImmutableArray<Outputs.DataCollectionRuleDataSourcesLogFile> LogFiles;
        /// <summary>
        /// One or more `PerformanceCounter` blocks as defined below.
        /// </summary>
        public readonly ImmutableArray<Outputs.DataCollectionRuleDataSourcesPerformanceCounter> PerformanceCounters;
        /// <summary>
        /// One or more `PlatformTelemetry` blocks as defined below.
        /// </summary>
        public readonly ImmutableArray<Outputs.DataCollectionRuleDataSourcesPlatformTelemetry> PlatformTelemetries;
        /// <summary>
        /// One or more `PrometheusForwarder` blocks as defined below.
        /// </summary>
        public readonly ImmutableArray<Outputs.DataCollectionRuleDataSourcesPrometheusForwarder> PrometheusForwarders;
        /// <summary>
        /// One or more `Syslog` blocks as defined below.
        /// </summary>
        public readonly ImmutableArray<Outputs.DataCollectionRuleDataSourcesSyslog> Syslogs;
        /// <summary>
        /// One or more `WindowsEventLog` blocks as defined below.
        /// </summary>
        public readonly ImmutableArray<Outputs.DataCollectionRuleDataSourcesWindowsEventLog> WindowsEventLogs;
        /// <summary>
        /// One or more `WindowsFirewallLog` blocks as defined below.
        /// </summary>
        public readonly ImmutableArray<Outputs.DataCollectionRuleDataSourcesWindowsFirewallLog> WindowsFirewallLogs;

        [OutputConstructor]
        private DataCollectionRuleDataSources(
            Outputs.DataCollectionRuleDataSourcesDataImport? dataImport,

            ImmutableArray<Outputs.DataCollectionRuleDataSourcesExtension> extensions,

            ImmutableArray<Outputs.DataCollectionRuleDataSourcesIisLog> iisLogs,

            ImmutableArray<Outputs.DataCollectionRuleDataSourcesLogFile> logFiles,

            ImmutableArray<Outputs.DataCollectionRuleDataSourcesPerformanceCounter> performanceCounters,

            ImmutableArray<Outputs.DataCollectionRuleDataSourcesPlatformTelemetry> platformTelemetries,

            ImmutableArray<Outputs.DataCollectionRuleDataSourcesPrometheusForwarder> prometheusForwarders,

            ImmutableArray<Outputs.DataCollectionRuleDataSourcesSyslog> syslogs,

            ImmutableArray<Outputs.DataCollectionRuleDataSourcesWindowsEventLog> windowsEventLogs,

            ImmutableArray<Outputs.DataCollectionRuleDataSourcesWindowsFirewallLog> windowsFirewallLogs)
        {
            DataImport = dataImport;
            Extensions = extensions;
            IisLogs = iisLogs;
            LogFiles = logFiles;
            PerformanceCounters = performanceCounters;
            PlatformTelemetries = platformTelemetries;
            PrometheusForwarders = prometheusForwarders;
            Syslogs = syslogs;
            WindowsEventLogs = windowsEventLogs;
            WindowsFirewallLogs = windowsFirewallLogs;
        }
    }
}
