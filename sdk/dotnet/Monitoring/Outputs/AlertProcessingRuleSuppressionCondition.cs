// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Monitoring.Outputs
{

    [OutputType]
    public sealed class AlertProcessingRuleSuppressionCondition
    {
        /// <summary>
        /// A `AlertContext` block as defined above.
        /// </summary>
        public readonly Outputs.AlertProcessingRuleSuppressionConditionAlertContext? AlertContext;
        /// <summary>
        /// A `AlertRuleId` block as defined above.
        /// </summary>
        public readonly Outputs.AlertProcessingRuleSuppressionConditionAlertRuleId? AlertRuleId;
        /// <summary>
        /// A `AlertRuleName` block as defined above.
        /// </summary>
        public readonly Outputs.AlertProcessingRuleSuppressionConditionAlertRuleName? AlertRuleName;
        /// <summary>
        /// A `Description` block as defined below.
        /// </summary>
        public readonly Outputs.AlertProcessingRuleSuppressionConditionDescription? Description;
        /// <summary>
        /// A `MonitorCondition` block as defined below.
        /// </summary>
        public readonly Outputs.AlertProcessingRuleSuppressionConditionMonitorCondition? MonitorCondition;
        /// <summary>
        /// A `MonitorService` block as defined below.
        /// </summary>
        public readonly Outputs.AlertProcessingRuleSuppressionConditionMonitorService? MonitorService;
        /// <summary>
        /// A `Severity` block as defined below.
        /// </summary>
        public readonly Outputs.AlertProcessingRuleSuppressionConditionSeverity? Severity;
        /// <summary>
        /// A `SignalType` block as defined below.
        /// </summary>
        public readonly Outputs.AlertProcessingRuleSuppressionConditionSignalType? SignalType;
        /// <summary>
        /// A `TargetResource` block as defined below.
        /// </summary>
        public readonly Outputs.AlertProcessingRuleSuppressionConditionTargetResource? TargetResource;
        /// <summary>
        /// A `TargetResourceGroup` block as defined below.
        /// </summary>
        public readonly Outputs.AlertProcessingRuleSuppressionConditionTargetResourceGroup? TargetResourceGroup;
        /// <summary>
        /// A `TargetResourceType` block as defined below.
        /// </summary>
        public readonly Outputs.AlertProcessingRuleSuppressionConditionTargetResourceType? TargetResourceType;

        [OutputConstructor]
        private AlertProcessingRuleSuppressionCondition(
            Outputs.AlertProcessingRuleSuppressionConditionAlertContext? alertContext,

            Outputs.AlertProcessingRuleSuppressionConditionAlertRuleId? alertRuleId,

            Outputs.AlertProcessingRuleSuppressionConditionAlertRuleName? alertRuleName,

            Outputs.AlertProcessingRuleSuppressionConditionDescription? description,

            Outputs.AlertProcessingRuleSuppressionConditionMonitorCondition? monitorCondition,

            Outputs.AlertProcessingRuleSuppressionConditionMonitorService? monitorService,

            Outputs.AlertProcessingRuleSuppressionConditionSeverity? severity,

            Outputs.AlertProcessingRuleSuppressionConditionSignalType? signalType,

            Outputs.AlertProcessingRuleSuppressionConditionTargetResource? targetResource,

            Outputs.AlertProcessingRuleSuppressionConditionTargetResourceGroup? targetResourceGroup,

            Outputs.AlertProcessingRuleSuppressionConditionTargetResourceType? targetResourceType)
        {
            AlertContext = alertContext;
            AlertRuleId = alertRuleId;
            AlertRuleName = alertRuleName;
            Description = description;
            MonitorCondition = monitorCondition;
            MonitorService = monitorService;
            Severity = severity;
            SignalType = signalType;
            TargetResource = targetResource;
            TargetResourceGroup = targetResourceGroup;
            TargetResourceType = targetResourceType;
        }
    }
}
