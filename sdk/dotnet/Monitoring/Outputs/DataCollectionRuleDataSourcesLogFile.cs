// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Monitoring.Outputs
{

    [OutputType]
    public sealed class DataCollectionRuleDataSourcesLogFile
    {
        /// <summary>
        /// Specifies a list of file patterns where the log files are located. For example, `C:\\JavaLogs\\*.log`.
        /// </summary>
        public readonly ImmutableArray<string> FilePatterns;
        /// <summary>
        /// The data format of the log files. Possible values are `text` and `json`.
        /// </summary>
        public readonly string Format;
        /// <summary>
        /// The name which should be used for this data source. This name should be unique across all data sources regardless of type within the Data Collection Rule.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// A `settings` block as defined below.
        /// </summary>
        public readonly Outputs.DataCollectionRuleDataSourcesLogFileSettings? Settings;
        /// <summary>
        /// Specifies a list of streams that this data source will be sent to. A stream indicates what schema will be used for this data and usually what table in Log Analytics the data will be sent to. Possible value should be custom stream names.
        /// </summary>
        public readonly ImmutableArray<string> Streams;

        [OutputConstructor]
        private DataCollectionRuleDataSourcesLogFile(
            ImmutableArray<string> filePatterns,

            string format,

            string name,

            Outputs.DataCollectionRuleDataSourcesLogFileSettings? settings,

            ImmutableArray<string> streams)
        {
            FilePatterns = filePatterns;
            Format = format;
            Name = name;
            Settings = settings;
            Streams = streams;
        }
    }
}
