// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Monitoring
{
    /// <summary>
    /// Manages an Monitor Smart Detector Alert Rule.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using Azure = Pulumi.Azure;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var exampleResourceGroup = new Azure.Core.ResourceGroup("exampleResourceGroup", new()
    ///     {
    ///         Location = "West Europe",
    ///     });
    /// 
    ///     var exampleInsights = new Azure.AppInsights.Insights("exampleInsights", new()
    ///     {
    ///         Location = exampleResourceGroup.Location,
    ///         ResourceGroupName = exampleResourceGroup.Name,
    ///         ApplicationType = "web",
    ///     });
    /// 
    ///     var exampleActionGroup = new Azure.Monitoring.ActionGroup("exampleActionGroup", new()
    ///     {
    ///         ResourceGroupName = exampleResourceGroup.Name,
    ///         ShortName = "example",
    ///     });
    /// 
    ///     var exampleSmartDetectorAlertRule = new Azure.Monitoring.SmartDetectorAlertRule("exampleSmartDetectorAlertRule", new()
    ///     {
    ///         ResourceGroupName = exampleResourceGroup.Name,
    ///         Severity = "Sev0",
    ///         ScopeResourceIds = new[]
    ///         {
    ///             exampleInsights.Id,
    ///         },
    ///         Frequency = "PT1M",
    ///         DetectorType = "FailureAnomaliesDetector",
    ///         ActionGroup = new Azure.Monitoring.Inputs.SmartDetectorAlertRuleActionGroupArgs
    ///         {
    ///             Ids = new[]
    ///             {
    ///                 exampleActionGroup.Id,
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Monitor Smart Detector Alert Rule can be imported using the `resource id`, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import azure:monitoring/smartDetectorAlertRule:SmartDetectorAlertRule example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.AlertsManagement/smartDetectorAlertRules/rule1
    /// ```
    /// </summary>
    [AzureResourceType("azure:monitoring/smartDetectorAlertRule:SmartDetectorAlertRule")]
    public partial class SmartDetectorAlertRule : global::Pulumi.CustomResource
    {
        /// <summary>
        /// An `action_group` block as defined below.
        /// </summary>
        [Output("actionGroup")]
        public Output<Outputs.SmartDetectorAlertRuleActionGroup> ActionGroup { get; private set; } = null!;

        /// <summary>
        /// Specifies a description for the Smart Detector Alert Rule.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// Specifies the Built-In Smart Detector type that this alert rule will use. Currently the only possible values are `FailureAnomaliesDetector`, `RequestPerformanceDegradationDetector`, `DependencyPerformanceDegradationDetector`, `ExceptionVolumeChangedDetector`, `TraceSeverityDetector`, `MemoryLeakDetector`.
        /// </summary>
        [Output("detectorType")]
        public Output<string> DetectorType { get; private set; } = null!;

        /// <summary>
        /// Is the Smart Detector Alert Rule enabled? Defaults to `true`.
        /// </summary>
        [Output("enabled")]
        public Output<bool?> Enabled { get; private set; } = null!;

        /// <summary>
        /// Specifies the frequency of this Smart Detector Alert Rule in ISO8601 format.
        /// </summary>
        [Output("frequency")]
        public Output<string> Frequency { get; private set; } = null!;

        /// <summary>
        /// Specifies the name of the Monitor Smart Detector Alert Rule. Changing this forces a new resource to be created.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Specifies the name of the resource group in which the Monitor Smart Detector Alert Rule should exist. Changing this forces a new resource to be created.
        /// </summary>
        [Output("resourceGroupName")]
        public Output<string> ResourceGroupName { get; private set; } = null!;

        /// <summary>
        /// Specifies the scopes of this Smart Detector Alert Rule.
        /// </summary>
        [Output("scopeResourceIds")]
        public Output<ImmutableArray<string>> ScopeResourceIds { get; private set; } = null!;

        /// <summary>
        /// Specifies the severity of this Smart Detector Alert Rule. Possible values are `Sev0`, `Sev1`, `Sev2`, `Sev3` or `Sev4`.
        /// </summary>
        [Output("severity")]
        public Output<string> Severity { get; private set; } = null!;

        /// <summary>
        /// A mapping of tags to assign to the resource.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// Specifies the duration (in ISO8601 format) to wait before notifying on the alert rule again.
        /// </summary>
        [Output("throttlingDuration")]
        public Output<string?> ThrottlingDuration { get; private set; } = null!;


        /// <summary>
        /// Create a SmartDetectorAlertRule resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public SmartDetectorAlertRule(string name, SmartDetectorAlertRuleArgs args, CustomResourceOptions? options = null)
            : base("azure:monitoring/smartDetectorAlertRule:SmartDetectorAlertRule", name, args ?? new SmartDetectorAlertRuleArgs(), MakeResourceOptions(options, ""))
        {
        }

        private SmartDetectorAlertRule(string name, Input<string> id, SmartDetectorAlertRuleState? state = null, CustomResourceOptions? options = null)
            : base("azure:monitoring/smartDetectorAlertRule:SmartDetectorAlertRule", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing SmartDetectorAlertRule resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static SmartDetectorAlertRule Get(string name, Input<string> id, SmartDetectorAlertRuleState? state = null, CustomResourceOptions? options = null)
        {
            return new SmartDetectorAlertRule(name, id, state, options);
        }
    }

    public sealed class SmartDetectorAlertRuleArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// An `action_group` block as defined below.
        /// </summary>
        [Input("actionGroup", required: true)]
        public Input<Inputs.SmartDetectorAlertRuleActionGroupArgs> ActionGroup { get; set; } = null!;

        /// <summary>
        /// Specifies a description for the Smart Detector Alert Rule.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Specifies the Built-In Smart Detector type that this alert rule will use. Currently the only possible values are `FailureAnomaliesDetector`, `RequestPerformanceDegradationDetector`, `DependencyPerformanceDegradationDetector`, `ExceptionVolumeChangedDetector`, `TraceSeverityDetector`, `MemoryLeakDetector`.
        /// </summary>
        [Input("detectorType", required: true)]
        public Input<string> DetectorType { get; set; } = null!;

        /// <summary>
        /// Is the Smart Detector Alert Rule enabled? Defaults to `true`.
        /// </summary>
        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        /// <summary>
        /// Specifies the frequency of this Smart Detector Alert Rule in ISO8601 format.
        /// </summary>
        [Input("frequency", required: true)]
        public Input<string> Frequency { get; set; } = null!;

        /// <summary>
        /// Specifies the name of the Monitor Smart Detector Alert Rule. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Specifies the name of the resource group in which the Monitor Smart Detector Alert Rule should exist. Changing this forces a new resource to be created.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        [Input("scopeResourceIds", required: true)]
        private InputList<string>? _scopeResourceIds;

        /// <summary>
        /// Specifies the scopes of this Smart Detector Alert Rule.
        /// </summary>
        public InputList<string> ScopeResourceIds
        {
            get => _scopeResourceIds ?? (_scopeResourceIds = new InputList<string>());
            set => _scopeResourceIds = value;
        }

        /// <summary>
        /// Specifies the severity of this Smart Detector Alert Rule. Possible values are `Sev0`, `Sev1`, `Sev2`, `Sev3` or `Sev4`.
        /// </summary>
        [Input("severity", required: true)]
        public Input<string> Severity { get; set; } = null!;

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// A mapping of tags to assign to the resource.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        /// <summary>
        /// Specifies the duration (in ISO8601 format) to wait before notifying on the alert rule again.
        /// </summary>
        [Input("throttlingDuration")]
        public Input<string>? ThrottlingDuration { get; set; }

        public SmartDetectorAlertRuleArgs()
        {
        }
        public static new SmartDetectorAlertRuleArgs Empty => new SmartDetectorAlertRuleArgs();
    }

    public sealed class SmartDetectorAlertRuleState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// An `action_group` block as defined below.
        /// </summary>
        [Input("actionGroup")]
        public Input<Inputs.SmartDetectorAlertRuleActionGroupGetArgs>? ActionGroup { get; set; }

        /// <summary>
        /// Specifies a description for the Smart Detector Alert Rule.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Specifies the Built-In Smart Detector type that this alert rule will use. Currently the only possible values are `FailureAnomaliesDetector`, `RequestPerformanceDegradationDetector`, `DependencyPerformanceDegradationDetector`, `ExceptionVolumeChangedDetector`, `TraceSeverityDetector`, `MemoryLeakDetector`.
        /// </summary>
        [Input("detectorType")]
        public Input<string>? DetectorType { get; set; }

        /// <summary>
        /// Is the Smart Detector Alert Rule enabled? Defaults to `true`.
        /// </summary>
        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        /// <summary>
        /// Specifies the frequency of this Smart Detector Alert Rule in ISO8601 format.
        /// </summary>
        [Input("frequency")]
        public Input<string>? Frequency { get; set; }

        /// <summary>
        /// Specifies the name of the Monitor Smart Detector Alert Rule. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Specifies the name of the resource group in which the Monitor Smart Detector Alert Rule should exist. Changing this forces a new resource to be created.
        /// </summary>
        [Input("resourceGroupName")]
        public Input<string>? ResourceGroupName { get; set; }

        [Input("scopeResourceIds")]
        private InputList<string>? _scopeResourceIds;

        /// <summary>
        /// Specifies the scopes of this Smart Detector Alert Rule.
        /// </summary>
        public InputList<string> ScopeResourceIds
        {
            get => _scopeResourceIds ?? (_scopeResourceIds = new InputList<string>());
            set => _scopeResourceIds = value;
        }

        /// <summary>
        /// Specifies the severity of this Smart Detector Alert Rule. Possible values are `Sev0`, `Sev1`, `Sev2`, `Sev3` or `Sev4`.
        /// </summary>
        [Input("severity")]
        public Input<string>? Severity { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// A mapping of tags to assign to the resource.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        /// <summary>
        /// Specifies the duration (in ISO8601 format) to wait before notifying on the alert rule again.
        /// </summary>
        [Input("throttlingDuration")]
        public Input<string>? ThrottlingDuration { get; set; }

        public SmartDetectorAlertRuleState()
        {
        }
        public static new SmartDetectorAlertRuleState Empty => new SmartDetectorAlertRuleState();
    }
}
