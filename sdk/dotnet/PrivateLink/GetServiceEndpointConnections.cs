// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.PrivateLink
{
    public static class GetServiceEndpointConnections
    {
        /// <summary>
        /// Use this data source to access endpoint connection information about an existing Private Link Service.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Azure = Pulumi.Azure;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Azure.PrivateLink.GetServiceEndpointConnections.Invoke(new()
        ///     {
        ///         ServiceId = azurerm_private_link_service.Example.Id,
        ///         ResourceGroupName = azurerm_resource_group.Example.Name,
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["privateEndpointStatus"] = example.Apply(getServiceEndpointConnectionsResult =&gt; getServiceEndpointConnectionsResult.PrivateEndpointConnections[0]?.Status),
        ///     };
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetServiceEndpointConnectionsResult> InvokeAsync(GetServiceEndpointConnectionsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetServiceEndpointConnectionsResult>("azure:privatelink/getServiceEndpointConnections:getServiceEndpointConnections", args ?? new GetServiceEndpointConnectionsArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to access endpoint connection information about an existing Private Link Service.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Azure = Pulumi.Azure;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Azure.PrivateLink.GetServiceEndpointConnections.Invoke(new()
        ///     {
        ///         ServiceId = azurerm_private_link_service.Example.Id,
        ///         ResourceGroupName = azurerm_resource_group.Example.Name,
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["privateEndpointStatus"] = example.Apply(getServiceEndpointConnectionsResult =&gt; getServiceEndpointConnectionsResult.PrivateEndpointConnections[0]?.Status),
        ///     };
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetServiceEndpointConnectionsResult> Invoke(GetServiceEndpointConnectionsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetServiceEndpointConnectionsResult>("azure:privatelink/getServiceEndpointConnections:getServiceEndpointConnections", args ?? new GetServiceEndpointConnectionsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetServiceEndpointConnectionsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the resource group in which the private link service resides.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The resource ID of the private link service.
        /// </summary>
        [Input("serviceId", required: true)]
        public string ServiceId { get; set; } = null!;

        public GetServiceEndpointConnectionsArgs()
        {
        }
        public static new GetServiceEndpointConnectionsArgs Empty => new GetServiceEndpointConnectionsArgs();
    }

    public sealed class GetServiceEndpointConnectionsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the resource group in which the private link service resides.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The resource ID of the private link service.
        /// </summary>
        [Input("serviceId", required: true)]
        public Input<string> ServiceId { get; set; } = null!;

        public GetServiceEndpointConnectionsInvokeArgs()
        {
        }
        public static new GetServiceEndpointConnectionsInvokeArgs Empty => new GetServiceEndpointConnectionsInvokeArgs();
    }


    [OutputType]
    public sealed class GetServiceEndpointConnectionsResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string Location;
        public readonly ImmutableArray<Outputs.GetServiceEndpointConnectionsPrivateEndpointConnectionResult> PrivateEndpointConnections;
        public readonly string ResourceGroupName;
        public readonly string ServiceId;
        /// <summary>
        /// The name of the private link service.
        /// </summary>
        public readonly string ServiceName;

        [OutputConstructor]
        private GetServiceEndpointConnectionsResult(
            string id,

            string location,

            ImmutableArray<Outputs.GetServiceEndpointConnectionsPrivateEndpointConnectionResult> privateEndpointConnections,

            string resourceGroupName,

            string serviceId,

            string serviceName)
        {
            Id = id;
            Location = location;
            PrivateEndpointConnections = privateEndpointConnections;
            ResourceGroupName = resourceGroupName;
            ServiceId = serviceId;
            ServiceName = serviceName;
        }
    }
}
