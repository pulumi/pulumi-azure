// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Redis.Outputs
{

    [OutputType]
    public sealed class GetCacheRedisConfigurationResult
    {
        /// <summary>
        /// Specifies if Microsoft Entra (AAD) authentication is enabled.
        /// </summary>
        public readonly bool ActiveDirectoryAuthenticationEnabled;
        public readonly bool AofBackupEnabled;
        public readonly string AofStorageConnectionString0;
        public readonly string AofStorageConnectionString1;
        public readonly bool AuthenticationEnabled;
        public readonly string DataPersistenceAuthenticationMethod;
        public readonly int Maxclients;
        /// <summary>
        /// Value in megabytes reserved to accommodate for memory fragmentation.
        /// </summary>
        public readonly int MaxfragmentationmemoryReserved;
        /// <summary>
        /// The max-memory delta for this Redis instance.
        /// </summary>
        public readonly int MaxmemoryDelta;
        /// <summary>
        /// How Redis will select what to remove when `maxmemory` is reached.
        /// </summary>
        public readonly string MaxmemoryPolicy;
        /// <summary>
        /// The value in megabytes reserved for non-cache usage e.g. failover
        /// </summary>
        public readonly int MaxmemoryReserved;
        public readonly string NotifyKeyspaceEvents;
        /// <summary>
        /// Is Backup Enabled? Only supported on Premium SKUs.
        /// </summary>
        public readonly bool RdbBackupEnabled;
        /// <summary>
        /// The Backup Frequency in Minutes. Only supported on Premium SKUs.
        /// </summary>
        public readonly int RdbBackupFrequency;
        /// <summary>
        /// The maximum number of snapshots that can be created as a backup.
        /// </summary>
        public readonly int RdbBackupMaxSnapshotCount;
        /// <summary>
        /// The Connection String to the Storage Account. Only supported for Premium SKUs.
        /// </summary>
        public readonly string RdbStorageConnectionString;
        /// <summary>
        /// The ID of the Subscription containing the Storage Account.
        /// </summary>
        public readonly string StorageAccountSubscriptionId;

        [OutputConstructor]
        private GetCacheRedisConfigurationResult(
            bool activeDirectoryAuthenticationEnabled,

            bool aofBackupEnabled,

            string aofStorageConnectionString0,

            string aofStorageConnectionString1,

            bool authenticationEnabled,

            string dataPersistenceAuthenticationMethod,

            int maxclients,

            int maxfragmentationmemoryReserved,

            int maxmemoryDelta,

            string maxmemoryPolicy,

            int maxmemoryReserved,

            string notifyKeyspaceEvents,

            bool rdbBackupEnabled,

            int rdbBackupFrequency,

            int rdbBackupMaxSnapshotCount,

            string rdbStorageConnectionString,

            string storageAccountSubscriptionId)
        {
            ActiveDirectoryAuthenticationEnabled = activeDirectoryAuthenticationEnabled;
            AofBackupEnabled = aofBackupEnabled;
            AofStorageConnectionString0 = aofStorageConnectionString0;
            AofStorageConnectionString1 = aofStorageConnectionString1;
            AuthenticationEnabled = authenticationEnabled;
            DataPersistenceAuthenticationMethod = dataPersistenceAuthenticationMethod;
            Maxclients = maxclients;
            MaxfragmentationmemoryReserved = maxfragmentationmemoryReserved;
            MaxmemoryDelta = maxmemoryDelta;
            MaxmemoryPolicy = maxmemoryPolicy;
            MaxmemoryReserved = maxmemoryReserved;
            NotifyKeyspaceEvents = notifyKeyspaceEvents;
            RdbBackupEnabled = rdbBackupEnabled;
            RdbBackupFrequency = rdbBackupFrequency;
            RdbBackupMaxSnapshotCount = rdbBackupMaxSnapshotCount;
            RdbStorageConnectionString = rdbStorageConnectionString;
            StorageAccountSubscriptionId = storageAccountSubscriptionId;
        }
    }
}
