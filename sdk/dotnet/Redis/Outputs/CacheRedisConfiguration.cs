// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Redis.Outputs
{

    [OutputType]
    public sealed class CacheRedisConfiguration
    {
        /// <summary>
        /// Enable Microsoft Entra (AAD) authentication. Defaults to `false`.
        /// </summary>
        public readonly bool? ActiveDirectoryAuthenticationEnabled;
        /// <summary>
        /// Enable or disable AOF persistence for this Redis Cache. Defaults to `false`.
        /// 
        /// &gt; **NOTE:** `aof_backup_enabled` can only be set when SKU is `Premium`.
        /// </summary>
        public readonly bool? AofBackupEnabled;
        /// <summary>
        /// First Storage Account connection string for AOF persistence.
        /// </summary>
        public readonly string? AofStorageConnectionString0;
        /// <summary>
        /// Second Storage Account connection string for AOF persistence.
        /// 
        /// Example usage:
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        /// });
        /// ```
        /// </summary>
        public readonly string? AofStorageConnectionString1;
        /// <summary>
        /// If set to `false`, the Redis instance will be accessible without authentication. Defaults to `true`.
        /// 
        /// &gt; **NOTE:** `enable_authentication` can only be set to `false` if a `subnet_id` is specified; and only works if there aren't existing instances within the subnet with `enable_authentication` set to `true`.
        /// </summary>
        public readonly bool? EnableAuthentication;
        /// <summary>
        /// Returns the max number of connected clients at the same time.
        /// </summary>
        public readonly int? Maxclients;
        /// <summary>
        /// Value in megabytes reserved to accommodate for memory fragmentation. Defaults are shown below.
        /// </summary>
        public readonly int? MaxfragmentationmemoryReserved;
        /// <summary>
        /// The max-memory delta for this Redis instance. Defaults are shown below.
        /// </summary>
        public readonly int? MaxmemoryDelta;
        /// <summary>
        /// How Redis will select what to remove when `maxmemory` is reached. Defaults to `volatile-lru`.
        /// </summary>
        public readonly string? MaxmemoryPolicy;
        /// <summary>
        /// Value in megabytes reserved for non-cache usage e.g. failover. Defaults are shown below.
        /// </summary>
        public readonly int? MaxmemoryReserved;
        /// <summary>
        /// Keyspace notifications allows clients to subscribe to Pub/Sub channels in order to receive events affecting the Redis data set in some way. [Reference](https://redis.io/topics/notifications#configuration)
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        /// });
        /// ```
        /// </summary>
        public readonly string? NotifyKeyspaceEvents;
        /// <summary>
        /// Is Backup Enabled? Only supported on Premium SKUs. Defaults to `false`.
        /// 
        /// &gt; **NOTE:** If `rdb_backup_enabled` set to `true`, `rdb_storage_connection_string` must also be set.
        /// </summary>
        public readonly bool? RdbBackupEnabled;
        /// <summary>
        /// The Backup Frequency in Minutes. Only supported on Premium SKUs. Possible values are: `15`, `30`, `60`, `360`, `720` and `1440`.
        /// </summary>
        public readonly int? RdbBackupFrequency;
        /// <summary>
        /// The maximum number of snapshots to create as a backup. Only supported for Premium SKUs.
        /// </summary>
        public readonly int? RdbBackupMaxSnapshotCount;
        /// <summary>
        /// The Connection String to the Storage Account. Only supported for Premium SKUs. In the format: `DefaultEndpointsProtocol=https;BlobEndpoint=${azurerm_storage_account.example.primary_blob_endpoint};AccountName=${azurerm_storage_account.example.name};AccountKey=${azurerm_storage_account.example.primary_access_key}`.
        /// 
        /// &gt; **NOTE:** There's a bug in the Redis API where the original storage connection string isn't being returned, which [is being tracked in this issue](https://github.com/Azure/azure-rest-api-specs/issues/3037). In the interim you can use [the `ignoreChanges` attribute to ignore changes to this field](https://www.pulumi.com/docs/intro/concepts/programming-model/#ignorechanges) e.g.:
        /// </summary>
        public readonly string? RdbStorageConnectionString;
        /// <summary>
        /// The ID of the Subscription containing the Storage Account.
        /// </summary>
        public readonly string? StorageAccountSubscriptionId;

        [OutputConstructor]
        private CacheRedisConfiguration(
            bool? activeDirectoryAuthenticationEnabled,

            bool? aofBackupEnabled,

            string? aofStorageConnectionString0,

            string? aofStorageConnectionString1,

            bool? enableAuthentication,

            int? maxclients,

            int? maxfragmentationmemoryReserved,

            int? maxmemoryDelta,

            string? maxmemoryPolicy,

            int? maxmemoryReserved,

            string? notifyKeyspaceEvents,

            bool? rdbBackupEnabled,

            int? rdbBackupFrequency,

            int? rdbBackupMaxSnapshotCount,

            string? rdbStorageConnectionString,

            string? storageAccountSubscriptionId)
        {
            ActiveDirectoryAuthenticationEnabled = activeDirectoryAuthenticationEnabled;
            AofBackupEnabled = aofBackupEnabled;
            AofStorageConnectionString0 = aofStorageConnectionString0;
            AofStorageConnectionString1 = aofStorageConnectionString1;
            EnableAuthentication = enableAuthentication;
            Maxclients = maxclients;
            MaxfragmentationmemoryReserved = maxfragmentationmemoryReserved;
            MaxmemoryDelta = maxmemoryDelta;
            MaxmemoryPolicy = maxmemoryPolicy;
            MaxmemoryReserved = maxmemoryReserved;
            NotifyKeyspaceEvents = notifyKeyspaceEvents;
            RdbBackupEnabled = rdbBackupEnabled;
            RdbBackupFrequency = rdbBackupFrequency;
            RdbBackupMaxSnapshotCount = rdbBackupMaxSnapshotCount;
            RdbStorageConnectionString = rdbStorageConnectionString;
            StorageAccountSubscriptionId = storageAccountSubscriptionId;
        }
    }
}
