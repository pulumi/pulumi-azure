// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Voice
{
    /// <summary>
    /// Manages a Voice Services Communications Gateways.
    /// 
    /// !&gt; **NOTE:** You must have signed an Operator Connect agreement with Microsoft to use this resource. For more information, see [`Prerequisites`](https://learn.microsoft.com/en-us/azure/communications-gateway/prepare-to-deploy#prerequisites).
    /// 
    /// !&gt; **NOTE:** Access to Azure Communications Gateway is restricted, see [`Get access to Azure Communications Gateway for your Azure subscription`](https://learn.microsoft.com/en-us/azure/communications-gateway/prepare-to-deploy#9-get-access-to-azure-communications-gateway-for-your-azure-subscription) for details.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using System.Text.Json;
    /// using Pulumi;
    /// using Azure = Pulumi.Azure;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var exampleResourceGroup = new Azure.Core.ResourceGroup("exampleResourceGroup", new()
    ///     {
    ///         Location = "West Europe",
    ///     });
    /// 
    ///     var exampleServicesCommunicationsGateway = new Azure.Voice.ServicesCommunicationsGateway("exampleServicesCommunicationsGateway", new()
    ///     {
    ///         Location = "West Europe",
    ///         ResourceGroupName = exampleResourceGroup.Name,
    ///         Connectivity = "PublicAddress",
    ///         Codecs = "PCMA",
    ///         E911Type = "DirectToEsrp",
    ///         Platforms = new[]
    ///         {
    ///             "OperatorConnect",
    ///             "TeamsPhoneMobile",
    ///         },
    ///         ServiceLocations = new[]
    ///         {
    ///             new Azure.Voice.Inputs.ServicesCommunicationsGatewayServiceLocationArgs
    ///             {
    ///                 Location = "eastus",
    ///                 AllowedMediaSourceAddressPrefixes = new[]
    ///                 {
    ///                     "10.1.2.0/24",
    ///                 },
    ///                 AllowedSignalingSourceAddressPrefixes = new[]
    ///                 {
    ///                     "10.1.1.0/24",
    ///                 },
    ///                 EsrpAddresses = new[]
    ///                 {
    ///                     "198.51.100.3",
    ///                 },
    ///                 OperatorAddresses = new[]
    ///                 {
    ///                     "198.51.100.1",
    ///                 },
    ///             },
    ///             new Azure.Voice.Inputs.ServicesCommunicationsGatewayServiceLocationArgs
    ///             {
    ///                 Location = "eastus2",
    ///                 AllowedMediaSourceAddressPrefixes = new[]
    ///                 {
    ///                     "10.2.2.0/24",
    ///                 },
    ///                 AllowedSignalingSourceAddressPrefixes = new[]
    ///                 {
    ///                     "10.2.1.0/24",
    ///                 },
    ///                 EsrpAddresses = new[]
    ///                 {
    ///                     "198.51.100.4",
    ///                 },
    ///                 OperatorAddresses = new[]
    ///                 {
    ///                     "198.51.100.2",
    ///                 },
    ///             },
    ///         },
    ///         AutoGeneratedDomainNameLabelScope = "SubscriptionReuse",
    ///         ApiBridge = JsonSerializer.Serialize(new Dictionary&lt;string, object?&gt;
    ///         {
    ///         }),
    ///         EmergencyDialStrings = new[]
    ///         {
    ///             "911",
    ///             "933",
    ///         },
    ///         OnPremMcpEnabled = false,
    ///         Tags = 
    ///         {
    ///             { "key", "value" },
    ///         },
    ///         MicrosoftTeamsVoicemailPilotNumber = "1",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Voice Services Communications Gateways can be imported using the `resource id`, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import azure:voice/servicesCommunicationsGateway:ServicesCommunicationsGateway example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resourceGroup1/providers/Microsoft.VoiceServices/communicationsGateways/communicationsGateway1
    /// ```
    /// </summary>
    [AzureResourceType("azure:voice/servicesCommunicationsGateway:ServicesCommunicationsGateway")]
    public partial class ServicesCommunicationsGateway : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Details of API bridge functionality, if required.
        /// </summary>
        [Output("apiBridge")]
        public Output<string?> ApiBridge { get; private set; } = null!;

        /// <summary>
        /// Specifies the scope at which the auto-generated domain name can be re-used. Possible values are `TenantReuse`, `SubscriptionReuse`, `ResourceGroupReuse` and `NoReuse` . Changing this forces a new resource to be created. Defaults to `TenantReuse`.
        /// </summary>
        [Output("autoGeneratedDomainNameLabelScope")]
        public Output<string?> AutoGeneratedDomainNameLabelScope { get; private set; } = null!;

        /// <summary>
        /// The voice codecs expected for communication with Teams. Possible values are `PCMA`, `PCMU`,`G722`,`G722_2`,`SILK_8` and `SILK_16`.
        /// </summary>
        [Output("codecs")]
        public Output<string> Codecs { get; private set; } = null!;

        /// <summary>
        /// How to connect back to the operator network, e.g. MAPS. Possible values is `PublicAddress`. Changing this forces a new Voice Services Communications Gateways to be created.
        /// </summary>
        [Output("connectivity")]
        public Output<string> Connectivity { get; private set; } = null!;

        /// <summary>
        /// How to handle 911 calls. Possible values are `Standard` and `DirectToEsrp`.
        /// </summary>
        [Output("e911Type")]
        public Output<string> E911Type { get; private set; } = null!;

        /// <summary>
        /// A list of dial strings used for emergency calling.
        /// </summary>
        [Output("emergencyDialStrings")]
        public Output<ImmutableArray<string>> EmergencyDialStrings { get; private set; } = null!;

        /// <summary>
        /// Specifies the Azure Region where the Voice Services Communications Gateways should exist. Changing this forces a new resource to be created.
        /// </summary>
        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// This number is used in Teams Phone Mobile scenarios for access to the voicemail IVR from the native dialer.
        /// </summary>
        [Output("microsoftTeamsVoicemailPilotNumber")]
        public Output<string?> MicrosoftTeamsVoicemailPilotNumber { get; private set; } = null!;

        /// <summary>
        /// Specifies the name which should be used for this Voice Services Communications Gateways. Changing this forces a new resource to be created.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Whether an on-premises Mobile Control Point is in use.
        /// </summary>
        [Output("onPremMcpEnabled")]
        public Output<bool?> OnPremMcpEnabled { get; private set; } = null!;

        /// <summary>
        /// The Voice Services Communications GatewaysAvailable supports platform types. Possible values are `OperatorConnect`, `TeamsPhoneMobile`.
        /// </summary>
        [Output("platforms")]
        public Output<ImmutableArray<string>> Platforms { get; private set; } = null!;

        /// <summary>
        /// Specifies the name of the Resource Group where the Voice Services Communications Gateways should exist. Changing this forces a new resource to be created.
        /// </summary>
        [Output("resourceGroupName")]
        public Output<string> ResourceGroupName { get; private set; } = null!;

        /// <summary>
        /// A `service_location` block as defined below.
        /// </summary>
        [Output("serviceLocations")]
        public Output<ImmutableArray<Outputs.ServicesCommunicationsGatewayServiceLocation>> ServiceLocations { get; private set; } = null!;

        /// <summary>
        /// A mapping of tags which should be assigned to the Voice Services Communications Gateways.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;


        /// <summary>
        /// Create a ServicesCommunicationsGateway resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ServicesCommunicationsGateway(string name, ServicesCommunicationsGatewayArgs args, CustomResourceOptions? options = null)
            : base("azure:voice/servicesCommunicationsGateway:ServicesCommunicationsGateway", name, args ?? new ServicesCommunicationsGatewayArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ServicesCommunicationsGateway(string name, Input<string> id, ServicesCommunicationsGatewayState? state = null, CustomResourceOptions? options = null)
            : base("azure:voice/servicesCommunicationsGateway:ServicesCommunicationsGateway", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ServicesCommunicationsGateway resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ServicesCommunicationsGateway Get(string name, Input<string> id, ServicesCommunicationsGatewayState? state = null, CustomResourceOptions? options = null)
        {
            return new ServicesCommunicationsGateway(name, id, state, options);
        }
    }

    public sealed class ServicesCommunicationsGatewayArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Details of API bridge functionality, if required.
        /// </summary>
        [Input("apiBridge")]
        public Input<string>? ApiBridge { get; set; }

        /// <summary>
        /// Specifies the scope at which the auto-generated domain name can be re-used. Possible values are `TenantReuse`, `SubscriptionReuse`, `ResourceGroupReuse` and `NoReuse` . Changing this forces a new resource to be created. Defaults to `TenantReuse`.
        /// </summary>
        [Input("autoGeneratedDomainNameLabelScope")]
        public Input<string>? AutoGeneratedDomainNameLabelScope { get; set; }

        /// <summary>
        /// The voice codecs expected for communication with Teams. Possible values are `PCMA`, `PCMU`,`G722`,`G722_2`,`SILK_8` and `SILK_16`.
        /// </summary>
        [Input("codecs", required: true)]
        public Input<string> Codecs { get; set; } = null!;

        /// <summary>
        /// How to connect back to the operator network, e.g. MAPS. Possible values is `PublicAddress`. Changing this forces a new Voice Services Communications Gateways to be created.
        /// </summary>
        [Input("connectivity", required: true)]
        public Input<string> Connectivity { get; set; } = null!;

        /// <summary>
        /// How to handle 911 calls. Possible values are `Standard` and `DirectToEsrp`.
        /// </summary>
        [Input("e911Type", required: true)]
        public Input<string> E911Type { get; set; } = null!;

        [Input("emergencyDialStrings")]
        private InputList<string>? _emergencyDialStrings;

        /// <summary>
        /// A list of dial strings used for emergency calling.
        /// </summary>
        public InputList<string> EmergencyDialStrings
        {
            get => _emergencyDialStrings ?? (_emergencyDialStrings = new InputList<string>());
            set => _emergencyDialStrings = value;
        }

        /// <summary>
        /// Specifies the Azure Region where the Voice Services Communications Gateways should exist. Changing this forces a new resource to be created.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// This number is used in Teams Phone Mobile scenarios for access to the voicemail IVR from the native dialer.
        /// </summary>
        [Input("microsoftTeamsVoicemailPilotNumber")]
        public Input<string>? MicrosoftTeamsVoicemailPilotNumber { get; set; }

        /// <summary>
        /// Specifies the name which should be used for this Voice Services Communications Gateways. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Whether an on-premises Mobile Control Point is in use.
        /// </summary>
        [Input("onPremMcpEnabled")]
        public Input<bool>? OnPremMcpEnabled { get; set; }

        [Input("platforms", required: true)]
        private InputList<string>? _platforms;

        /// <summary>
        /// The Voice Services Communications GatewaysAvailable supports platform types. Possible values are `OperatorConnect`, `TeamsPhoneMobile`.
        /// </summary>
        public InputList<string> Platforms
        {
            get => _platforms ?? (_platforms = new InputList<string>());
            set => _platforms = value;
        }

        /// <summary>
        /// Specifies the name of the Resource Group where the Voice Services Communications Gateways should exist. Changing this forces a new resource to be created.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        [Input("serviceLocations", required: true)]
        private InputList<Inputs.ServicesCommunicationsGatewayServiceLocationArgs>? _serviceLocations;

        /// <summary>
        /// A `service_location` block as defined below.
        /// </summary>
        public InputList<Inputs.ServicesCommunicationsGatewayServiceLocationArgs> ServiceLocations
        {
            get => _serviceLocations ?? (_serviceLocations = new InputList<Inputs.ServicesCommunicationsGatewayServiceLocationArgs>());
            set => _serviceLocations = value;
        }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// A mapping of tags which should be assigned to the Voice Services Communications Gateways.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public ServicesCommunicationsGatewayArgs()
        {
        }
        public static new ServicesCommunicationsGatewayArgs Empty => new ServicesCommunicationsGatewayArgs();
    }

    public sealed class ServicesCommunicationsGatewayState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Details of API bridge functionality, if required.
        /// </summary>
        [Input("apiBridge")]
        public Input<string>? ApiBridge { get; set; }

        /// <summary>
        /// Specifies the scope at which the auto-generated domain name can be re-used. Possible values are `TenantReuse`, `SubscriptionReuse`, `ResourceGroupReuse` and `NoReuse` . Changing this forces a new resource to be created. Defaults to `TenantReuse`.
        /// </summary>
        [Input("autoGeneratedDomainNameLabelScope")]
        public Input<string>? AutoGeneratedDomainNameLabelScope { get; set; }

        /// <summary>
        /// The voice codecs expected for communication with Teams. Possible values are `PCMA`, `PCMU`,`G722`,`G722_2`,`SILK_8` and `SILK_16`.
        /// </summary>
        [Input("codecs")]
        public Input<string>? Codecs { get; set; }

        /// <summary>
        /// How to connect back to the operator network, e.g. MAPS. Possible values is `PublicAddress`. Changing this forces a new Voice Services Communications Gateways to be created.
        /// </summary>
        [Input("connectivity")]
        public Input<string>? Connectivity { get; set; }

        /// <summary>
        /// How to handle 911 calls. Possible values are `Standard` and `DirectToEsrp`.
        /// </summary>
        [Input("e911Type")]
        public Input<string>? E911Type { get; set; }

        [Input("emergencyDialStrings")]
        private InputList<string>? _emergencyDialStrings;

        /// <summary>
        /// A list of dial strings used for emergency calling.
        /// </summary>
        public InputList<string> EmergencyDialStrings
        {
            get => _emergencyDialStrings ?? (_emergencyDialStrings = new InputList<string>());
            set => _emergencyDialStrings = value;
        }

        /// <summary>
        /// Specifies the Azure Region where the Voice Services Communications Gateways should exist. Changing this forces a new resource to be created.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// This number is used in Teams Phone Mobile scenarios for access to the voicemail IVR from the native dialer.
        /// </summary>
        [Input("microsoftTeamsVoicemailPilotNumber")]
        public Input<string>? MicrosoftTeamsVoicemailPilotNumber { get; set; }

        /// <summary>
        /// Specifies the name which should be used for this Voice Services Communications Gateways. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Whether an on-premises Mobile Control Point is in use.
        /// </summary>
        [Input("onPremMcpEnabled")]
        public Input<bool>? OnPremMcpEnabled { get; set; }

        [Input("platforms")]
        private InputList<string>? _platforms;

        /// <summary>
        /// The Voice Services Communications GatewaysAvailable supports platform types. Possible values are `OperatorConnect`, `TeamsPhoneMobile`.
        /// </summary>
        public InputList<string> Platforms
        {
            get => _platforms ?? (_platforms = new InputList<string>());
            set => _platforms = value;
        }

        /// <summary>
        /// Specifies the name of the Resource Group where the Voice Services Communications Gateways should exist. Changing this forces a new resource to be created.
        /// </summary>
        [Input("resourceGroupName")]
        public Input<string>? ResourceGroupName { get; set; }

        [Input("serviceLocations")]
        private InputList<Inputs.ServicesCommunicationsGatewayServiceLocationGetArgs>? _serviceLocations;

        /// <summary>
        /// A `service_location` block as defined below.
        /// </summary>
        public InputList<Inputs.ServicesCommunicationsGatewayServiceLocationGetArgs> ServiceLocations
        {
            get => _serviceLocations ?? (_serviceLocations = new InputList<Inputs.ServicesCommunicationsGatewayServiceLocationGetArgs>());
            set => _serviceLocations = value;
        }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// A mapping of tags which should be assigned to the Voice Services Communications Gateways.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public ServicesCommunicationsGatewayState()
        {
        }
        public static new ServicesCommunicationsGatewayState Empty => new ServicesCommunicationsGatewayState();
    }
}
