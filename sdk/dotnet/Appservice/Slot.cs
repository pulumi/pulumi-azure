// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.AppService
{
    /// <summary>
    /// Manages an App Service Slot (within an App Service).
    /// 
    /// &gt; **Note:** When using Slots - the `app_settings`, `connection_string` and `site_config` blocks on the `azure.appservice.AppService` resource will be overwritten when promoting a Slot using the `azure.appservice.ActiveSlot` resource.
    /// 
    /// &gt; This content is derived from https://github.com/terraform-providers/terraform-provider-azurerm/blob/master/website/docs/r/app_service_slot.html.markdown.
    /// </summary>
    public partial class Slot : Pulumi.CustomResource
    {
        /// <summary>
        /// The name of the App Service within which to create the App Service Slot.  Changing this forces a new resource to be created.
        /// </summary>
        [Output("appServiceName")]
        public Output<string> AppServiceName { get; private set; } = null!;

        /// <summary>
        /// The ID of the App Service Plan within which to create this App Service Slot. Changing this forces a new resource to be created.
        /// </summary>
        [Output("appServicePlanId")]
        public Output<string> AppServicePlanId { get; private set; } = null!;

        /// <summary>
        /// A key-value pair of App Settings.
        /// </summary>
        [Output("appSettings")]
        public Output<ImmutableDictionary<string, string>> AppSettings { get; private set; } = null!;

        /// <summary>
        /// A `auth_settings` block as defined below.
        /// </summary>
        [Output("authSettings")]
        public Output<Outputs.SlotAuthSettings> AuthSettings { get; private set; } = null!;

        /// <summary>
        /// Should the App Service Slot send session affinity cookies, which route client requests in the same session to the same instance?
        /// </summary>
        [Output("clientAffinityEnabled")]
        public Output<bool> ClientAffinityEnabled { get; private set; } = null!;

        /// <summary>
        /// An `connection_string` block as defined below.
        /// </summary>
        [Output("connectionStrings")]
        public Output<ImmutableArray<Outputs.SlotConnectionStrings>> ConnectionStrings { get; private set; } = null!;

        /// <summary>
        /// The Default Hostname associated with the App Service Slot - such as `mysite.azurewebsites.net`
        /// </summary>
        [Output("defaultSiteHostname")]
        public Output<string> DefaultSiteHostname { get; private set; } = null!;

        /// <summary>
        /// Is the App Service Slot Enabled?
        /// </summary>
        [Output("enabled")]
        public Output<bool?> Enabled { get; private set; } = null!;

        /// <summary>
        /// Can the App Service Slot only be accessed via HTTPS? Defaults to `false`.
        /// </summary>
        [Output("httpsOnly")]
        public Output<bool?> HttpsOnly { get; private set; } = null!;

        /// <summary>
        /// A Managed Service Identity block as defined below.
        /// </summary>
        [Output("identity")]
        public Output<Outputs.SlotIdentity> Identity { get; private set; } = null!;

        /// <summary>
        /// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
        /// </summary>
        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        [Output("logs")]
        public Output<Outputs.SlotLogs> Logs { get; private set; } = null!;

        /// <summary>
        /// The name of the Connection String.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The name of the resource group in which to create the App Service Slot component.
        /// </summary>
        [Output("resourceGroupName")]
        public Output<string> ResourceGroupName { get; private set; } = null!;

        /// <summary>
        /// A `site_config` object as defined below.
        /// </summary>
        [Output("siteConfig")]
        public Output<Outputs.SlotSiteConfig> SiteConfig { get; private set; } = null!;

        /// <summary>
        /// A `site_credential` block as defined below, which contains the site-level credentials used to publish to this App Service.
        /// </summary>
        [Output("siteCredentials")]
        public Output<ImmutableArray<Outputs.SlotSiteCredentials>> SiteCredentials { get; private set; } = null!;

        /// <summary>
        /// A mapping of tags to assign to the resource.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;


        /// <summary>
        /// Create a Slot resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Slot(string name, SlotArgs args, CustomResourceOptions? options = null)
            : base("azure:appservice/slot:Slot", name, args ?? ResourceArgs.Empty, MakeResourceOptions(options, ""))
        {
        }

        private Slot(string name, Input<string> id, SlotState? state = null, CustomResourceOptions? options = null)
            : base("azure:appservice/slot:Slot", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Slot resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Slot Get(string name, Input<string> id, SlotState? state = null, CustomResourceOptions? options = null)
        {
            return new Slot(name, id, state, options);
        }
    }

    public sealed class SlotArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the App Service within which to create the App Service Slot.  Changing this forces a new resource to be created.
        /// </summary>
        [Input("appServiceName", required: true)]
        public Input<string> AppServiceName { get; set; } = null!;

        /// <summary>
        /// The ID of the App Service Plan within which to create this App Service Slot. Changing this forces a new resource to be created.
        /// </summary>
        [Input("appServicePlanId", required: true)]
        public Input<string> AppServicePlanId { get; set; } = null!;

        [Input("appSettings")]
        private InputMap<string>? _appSettings;

        /// <summary>
        /// A key-value pair of App Settings.
        /// </summary>
        public InputMap<string> AppSettings
        {
            get => _appSettings ?? (_appSettings = new InputMap<string>());
            set => _appSettings = value;
        }

        /// <summary>
        /// A `auth_settings` block as defined below.
        /// </summary>
        [Input("authSettings")]
        public Input<Inputs.SlotAuthSettingsArgs>? AuthSettings { get; set; }

        /// <summary>
        /// Should the App Service Slot send session affinity cookies, which route client requests in the same session to the same instance?
        /// </summary>
        [Input("clientAffinityEnabled")]
        public Input<bool>? ClientAffinityEnabled { get; set; }

        [Input("connectionStrings")]
        private InputList<Inputs.SlotConnectionStringsArgs>? _connectionStrings;

        /// <summary>
        /// An `connection_string` block as defined below.
        /// </summary>
        public InputList<Inputs.SlotConnectionStringsArgs> ConnectionStrings
        {
            get => _connectionStrings ?? (_connectionStrings = new InputList<Inputs.SlotConnectionStringsArgs>());
            set => _connectionStrings = value;
        }

        /// <summary>
        /// Is the App Service Slot Enabled?
        /// </summary>
        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        /// <summary>
        /// Can the App Service Slot only be accessed via HTTPS? Defaults to `false`.
        /// </summary>
        [Input("httpsOnly")]
        public Input<bool>? HttpsOnly { get; set; }

        /// <summary>
        /// A Managed Service Identity block as defined below.
        /// </summary>
        [Input("identity")]
        public Input<Inputs.SlotIdentityArgs>? Identity { get; set; }

        /// <summary>
        /// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        [Input("logs")]
        public Input<Inputs.SlotLogsArgs>? Logs { get; set; }

        /// <summary>
        /// The name of the Connection String.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The name of the resource group in which to create the App Service Slot component.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// A `site_config` object as defined below.
        /// </summary>
        [Input("siteConfig")]
        public Input<Inputs.SlotSiteConfigArgs>? SiteConfig { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// A mapping of tags to assign to the resource.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public SlotArgs()
        {
        }
    }

    public sealed class SlotState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the App Service within which to create the App Service Slot.  Changing this forces a new resource to be created.
        /// </summary>
        [Input("appServiceName")]
        public Input<string>? AppServiceName { get; set; }

        /// <summary>
        /// The ID of the App Service Plan within which to create this App Service Slot. Changing this forces a new resource to be created.
        /// </summary>
        [Input("appServicePlanId")]
        public Input<string>? AppServicePlanId { get; set; }

        [Input("appSettings")]
        private InputMap<string>? _appSettings;

        /// <summary>
        /// A key-value pair of App Settings.
        /// </summary>
        public InputMap<string> AppSettings
        {
            get => _appSettings ?? (_appSettings = new InputMap<string>());
            set => _appSettings = value;
        }

        /// <summary>
        /// A `auth_settings` block as defined below.
        /// </summary>
        [Input("authSettings")]
        public Input<Inputs.SlotAuthSettingsGetArgs>? AuthSettings { get; set; }

        /// <summary>
        /// Should the App Service Slot send session affinity cookies, which route client requests in the same session to the same instance?
        /// </summary>
        [Input("clientAffinityEnabled")]
        public Input<bool>? ClientAffinityEnabled { get; set; }

        [Input("connectionStrings")]
        private InputList<Inputs.SlotConnectionStringsGetArgs>? _connectionStrings;

        /// <summary>
        /// An `connection_string` block as defined below.
        /// </summary>
        public InputList<Inputs.SlotConnectionStringsGetArgs> ConnectionStrings
        {
            get => _connectionStrings ?? (_connectionStrings = new InputList<Inputs.SlotConnectionStringsGetArgs>());
            set => _connectionStrings = value;
        }

        /// <summary>
        /// The Default Hostname associated with the App Service Slot - such as `mysite.azurewebsites.net`
        /// </summary>
        [Input("defaultSiteHostname")]
        public Input<string>? DefaultSiteHostname { get; set; }

        /// <summary>
        /// Is the App Service Slot Enabled?
        /// </summary>
        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        /// <summary>
        /// Can the App Service Slot only be accessed via HTTPS? Defaults to `false`.
        /// </summary>
        [Input("httpsOnly")]
        public Input<bool>? HttpsOnly { get; set; }

        /// <summary>
        /// A Managed Service Identity block as defined below.
        /// </summary>
        [Input("identity")]
        public Input<Inputs.SlotIdentityGetArgs>? Identity { get; set; }

        /// <summary>
        /// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        [Input("logs")]
        public Input<Inputs.SlotLogsGetArgs>? Logs { get; set; }

        /// <summary>
        /// The name of the Connection String.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The name of the resource group in which to create the App Service Slot component.
        /// </summary>
        [Input("resourceGroupName")]
        public Input<string>? ResourceGroupName { get; set; }

        /// <summary>
        /// A `site_config` object as defined below.
        /// </summary>
        [Input("siteConfig")]
        public Input<Inputs.SlotSiteConfigGetArgs>? SiteConfig { get; set; }

        [Input("siteCredentials")]
        private InputList<Inputs.SlotSiteCredentialsGetArgs>? _siteCredentials;

        /// <summary>
        /// A `site_credential` block as defined below, which contains the site-level credentials used to publish to this App Service.
        /// </summary>
        public InputList<Inputs.SlotSiteCredentialsGetArgs> SiteCredentials
        {
            get => _siteCredentials ?? (_siteCredentials = new InputList<Inputs.SlotSiteCredentialsGetArgs>());
            set => _siteCredentials = value;
        }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// A mapping of tags to assign to the resource.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public SlotState()
        {
        }
    }

    namespace Inputs
    {

    public sealed class SlotAuthSettingsActiveDirectoryArgs : Pulumi.ResourceArgs
    {
        [Input("allowedAudiences")]
        private InputList<string>? _allowedAudiences;
        public InputList<string> AllowedAudiences
        {
            get => _allowedAudiences ?? (_allowedAudiences = new InputList<string>());
            set => _allowedAudiences = value;
        }

        [Input("clientId", required: true)]
        public Input<string> ClientId { get; set; } = null!;

        [Input("clientSecret")]
        public Input<string>? ClientSecret { get; set; }

        public SlotAuthSettingsActiveDirectoryArgs()
        {
        }
    }

    public sealed class SlotAuthSettingsActiveDirectoryGetArgs : Pulumi.ResourceArgs
    {
        [Input("allowedAudiences")]
        private InputList<string>? _allowedAudiences;
        public InputList<string> AllowedAudiences
        {
            get => _allowedAudiences ?? (_allowedAudiences = new InputList<string>());
            set => _allowedAudiences = value;
        }

        [Input("clientId", required: true)]
        public Input<string> ClientId { get; set; } = null!;

        [Input("clientSecret")]
        public Input<string>? ClientSecret { get; set; }

        public SlotAuthSettingsActiveDirectoryGetArgs()
        {
        }
    }

    public sealed class SlotAuthSettingsArgs : Pulumi.ResourceArgs
    {
        [Input("activeDirectory")]
        public Input<SlotAuthSettingsActiveDirectoryArgs>? ActiveDirectory { get; set; }

        [Input("additionalLoginParams")]
        private InputMap<string>? _additionalLoginParams;
        public InputMap<string> AdditionalLoginParams
        {
            get => _additionalLoginParams ?? (_additionalLoginParams = new InputMap<string>());
            set => _additionalLoginParams = value;
        }

        [Input("allowedExternalRedirectUrls")]
        private InputList<string>? _allowedExternalRedirectUrls;
        public InputList<string> AllowedExternalRedirectUrls
        {
            get => _allowedExternalRedirectUrls ?? (_allowedExternalRedirectUrls = new InputList<string>());
            set => _allowedExternalRedirectUrls = value;
        }

        [Input("defaultProvider")]
        public Input<string>? DefaultProvider { get; set; }

        /// <summary>
        /// Is the App Service Slot Enabled?
        /// </summary>
        [Input("enabled", required: true)]
        public Input<bool> Enabled { get; set; } = null!;

        [Input("facebook")]
        public Input<SlotAuthSettingsFacebookArgs>? Facebook { get; set; }

        [Input("google")]
        public Input<SlotAuthSettingsGoogleArgs>? Google { get; set; }

        [Input("issuer")]
        public Input<string>? Issuer { get; set; }

        [Input("microsoft")]
        public Input<SlotAuthSettingsMicrosoftArgs>? Microsoft { get; set; }

        [Input("runtimeVersion")]
        public Input<string>? RuntimeVersion { get; set; }

        [Input("tokenRefreshExtensionHours")]
        public Input<double>? TokenRefreshExtensionHours { get; set; }

        [Input("tokenStoreEnabled")]
        public Input<bool>? TokenStoreEnabled { get; set; }

        [Input("twitter")]
        public Input<SlotAuthSettingsTwitterArgs>? Twitter { get; set; }

        [Input("unauthenticatedClientAction")]
        public Input<string>? UnauthenticatedClientAction { get; set; }

        public SlotAuthSettingsArgs()
        {
        }
    }

    public sealed class SlotAuthSettingsFacebookArgs : Pulumi.ResourceArgs
    {
        [Input("appId", required: true)]
        public Input<string> AppId { get; set; } = null!;

        [Input("appSecret", required: true)]
        public Input<string> AppSecret { get; set; } = null!;

        [Input("oauthScopes")]
        private InputList<string>? _oauthScopes;
        public InputList<string> OauthScopes
        {
            get => _oauthScopes ?? (_oauthScopes = new InputList<string>());
            set => _oauthScopes = value;
        }

        public SlotAuthSettingsFacebookArgs()
        {
        }
    }

    public sealed class SlotAuthSettingsFacebookGetArgs : Pulumi.ResourceArgs
    {
        [Input("appId", required: true)]
        public Input<string> AppId { get; set; } = null!;

        [Input("appSecret", required: true)]
        public Input<string> AppSecret { get; set; } = null!;

        [Input("oauthScopes")]
        private InputList<string>? _oauthScopes;
        public InputList<string> OauthScopes
        {
            get => _oauthScopes ?? (_oauthScopes = new InputList<string>());
            set => _oauthScopes = value;
        }

        public SlotAuthSettingsFacebookGetArgs()
        {
        }
    }

    public sealed class SlotAuthSettingsGetArgs : Pulumi.ResourceArgs
    {
        [Input("activeDirectory")]
        public Input<SlotAuthSettingsActiveDirectoryGetArgs>? ActiveDirectory { get; set; }

        [Input("additionalLoginParams")]
        private InputMap<string>? _additionalLoginParams;
        public InputMap<string> AdditionalLoginParams
        {
            get => _additionalLoginParams ?? (_additionalLoginParams = new InputMap<string>());
            set => _additionalLoginParams = value;
        }

        [Input("allowedExternalRedirectUrls")]
        private InputList<string>? _allowedExternalRedirectUrls;
        public InputList<string> AllowedExternalRedirectUrls
        {
            get => _allowedExternalRedirectUrls ?? (_allowedExternalRedirectUrls = new InputList<string>());
            set => _allowedExternalRedirectUrls = value;
        }

        [Input("defaultProvider")]
        public Input<string>? DefaultProvider { get; set; }

        /// <summary>
        /// Is the App Service Slot Enabled?
        /// </summary>
        [Input("enabled", required: true)]
        public Input<bool> Enabled { get; set; } = null!;

        [Input("facebook")]
        public Input<SlotAuthSettingsFacebookGetArgs>? Facebook { get; set; }

        [Input("google")]
        public Input<SlotAuthSettingsGoogleGetArgs>? Google { get; set; }

        [Input("issuer")]
        public Input<string>? Issuer { get; set; }

        [Input("microsoft")]
        public Input<SlotAuthSettingsMicrosoftGetArgs>? Microsoft { get; set; }

        [Input("runtimeVersion")]
        public Input<string>? RuntimeVersion { get; set; }

        [Input("tokenRefreshExtensionHours")]
        public Input<double>? TokenRefreshExtensionHours { get; set; }

        [Input("tokenStoreEnabled")]
        public Input<bool>? TokenStoreEnabled { get; set; }

        [Input("twitter")]
        public Input<SlotAuthSettingsTwitterGetArgs>? Twitter { get; set; }

        [Input("unauthenticatedClientAction")]
        public Input<string>? UnauthenticatedClientAction { get; set; }

        public SlotAuthSettingsGetArgs()
        {
        }
    }

    public sealed class SlotAuthSettingsGoogleArgs : Pulumi.ResourceArgs
    {
        [Input("clientId", required: true)]
        public Input<string> ClientId { get; set; } = null!;

        [Input("clientSecret", required: true)]
        public Input<string> ClientSecret { get; set; } = null!;

        [Input("oauthScopes")]
        private InputList<string>? _oauthScopes;
        public InputList<string> OauthScopes
        {
            get => _oauthScopes ?? (_oauthScopes = new InputList<string>());
            set => _oauthScopes = value;
        }

        public SlotAuthSettingsGoogleArgs()
        {
        }
    }

    public sealed class SlotAuthSettingsGoogleGetArgs : Pulumi.ResourceArgs
    {
        [Input("clientId", required: true)]
        public Input<string> ClientId { get; set; } = null!;

        [Input("clientSecret", required: true)]
        public Input<string> ClientSecret { get; set; } = null!;

        [Input("oauthScopes")]
        private InputList<string>? _oauthScopes;
        public InputList<string> OauthScopes
        {
            get => _oauthScopes ?? (_oauthScopes = new InputList<string>());
            set => _oauthScopes = value;
        }

        public SlotAuthSettingsGoogleGetArgs()
        {
        }
    }

    public sealed class SlotAuthSettingsMicrosoftArgs : Pulumi.ResourceArgs
    {
        [Input("clientId", required: true)]
        public Input<string> ClientId { get; set; } = null!;

        [Input("clientSecret", required: true)]
        public Input<string> ClientSecret { get; set; } = null!;

        [Input("oauthScopes")]
        private InputList<string>? _oauthScopes;
        public InputList<string> OauthScopes
        {
            get => _oauthScopes ?? (_oauthScopes = new InputList<string>());
            set => _oauthScopes = value;
        }

        public SlotAuthSettingsMicrosoftArgs()
        {
        }
    }

    public sealed class SlotAuthSettingsMicrosoftGetArgs : Pulumi.ResourceArgs
    {
        [Input("clientId", required: true)]
        public Input<string> ClientId { get; set; } = null!;

        [Input("clientSecret", required: true)]
        public Input<string> ClientSecret { get; set; } = null!;

        [Input("oauthScopes")]
        private InputList<string>? _oauthScopes;
        public InputList<string> OauthScopes
        {
            get => _oauthScopes ?? (_oauthScopes = new InputList<string>());
            set => _oauthScopes = value;
        }

        public SlotAuthSettingsMicrosoftGetArgs()
        {
        }
    }

    public sealed class SlotAuthSettingsTwitterArgs : Pulumi.ResourceArgs
    {
        [Input("consumerKey", required: true)]
        public Input<string> ConsumerKey { get; set; } = null!;

        [Input("consumerSecret", required: true)]
        public Input<string> ConsumerSecret { get; set; } = null!;

        public SlotAuthSettingsTwitterArgs()
        {
        }
    }

    public sealed class SlotAuthSettingsTwitterGetArgs : Pulumi.ResourceArgs
    {
        [Input("consumerKey", required: true)]
        public Input<string> ConsumerKey { get; set; } = null!;

        [Input("consumerSecret", required: true)]
        public Input<string> ConsumerSecret { get; set; } = null!;

        public SlotAuthSettingsTwitterGetArgs()
        {
        }
    }

    public sealed class SlotConnectionStringsArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the Connection String.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// The type of the Connection String. Possible values are `APIHub`, `Custom`, `DocDb`, `EventHub`, `MySQL`, `NotificationHub`, `PostgreSQL`, `RedisCache`, `ServiceBus`, `SQLAzure`, and  `SQLServer`.
        /// </summary>
        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        /// <summary>
        /// The value for the Connection String.
        /// </summary>
        [Input("value", required: true)]
        public Input<string> Value { get; set; } = null!;

        public SlotConnectionStringsArgs()
        {
        }
    }

    public sealed class SlotConnectionStringsGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the Connection String.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// The type of the Connection String. Possible values are `APIHub`, `Custom`, `DocDb`, `EventHub`, `MySQL`, `NotificationHub`, `PostgreSQL`, `RedisCache`, `ServiceBus`, `SQLAzure`, and  `SQLServer`.
        /// </summary>
        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        /// <summary>
        /// The value for the Connection String.
        /// </summary>
        [Input("value", required: true)]
        public Input<string> Value { get; set; } = null!;

        public SlotConnectionStringsGetArgs()
        {
        }
    }

    public sealed class SlotIdentityArgs : Pulumi.ResourceArgs
    {
        [Input("identityIds")]
        private InputList<string>? _identityIds;
        public InputList<string> IdentityIds
        {
            get => _identityIds ?? (_identityIds = new InputList<string>());
            set => _identityIds = value;
        }

        [Input("principalId")]
        public Input<string>? PrincipalId { get; set; }

        [Input("tenantId")]
        public Input<string>? TenantId { get; set; }

        /// <summary>
        /// The type of the Connection String. Possible values are `APIHub`, `Custom`, `DocDb`, `EventHub`, `MySQL`, `NotificationHub`, `PostgreSQL`, `RedisCache`, `ServiceBus`, `SQLAzure`, and  `SQLServer`.
        /// </summary>
        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        public SlotIdentityArgs()
        {
        }
    }

    public sealed class SlotIdentityGetArgs : Pulumi.ResourceArgs
    {
        [Input("identityIds")]
        private InputList<string>? _identityIds;
        public InputList<string> IdentityIds
        {
            get => _identityIds ?? (_identityIds = new InputList<string>());
            set => _identityIds = value;
        }

        [Input("principalId")]
        public Input<string>? PrincipalId { get; set; }

        [Input("tenantId")]
        public Input<string>? TenantId { get; set; }

        /// <summary>
        /// The type of the Connection String. Possible values are `APIHub`, `Custom`, `DocDb`, `EventHub`, `MySQL`, `NotificationHub`, `PostgreSQL`, `RedisCache`, `ServiceBus`, `SQLAzure`, and  `SQLServer`.
        /// </summary>
        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        public SlotIdentityGetArgs()
        {
        }
    }

    public sealed class SlotLogsApplicationLogsArgs : Pulumi.ResourceArgs
    {
        [Input("azureBlobStorage")]
        public Input<SlotLogsApplicationLogsAzureBlobStorageArgs>? AzureBlobStorage { get; set; }

        public SlotLogsApplicationLogsArgs()
        {
        }
    }

    public sealed class SlotLogsApplicationLogsAzureBlobStorageArgs : Pulumi.ResourceArgs
    {
        [Input("level", required: true)]
        public Input<string> Level { get; set; } = null!;

        [Input("retentionInDays", required: true)]
        public Input<int> RetentionInDays { get; set; } = null!;

        [Input("sasUrl", required: true)]
        public Input<string> SasUrl { get; set; } = null!;

        public SlotLogsApplicationLogsAzureBlobStorageArgs()
        {
        }
    }

    public sealed class SlotLogsApplicationLogsAzureBlobStorageGetArgs : Pulumi.ResourceArgs
    {
        [Input("level", required: true)]
        public Input<string> Level { get; set; } = null!;

        [Input("retentionInDays", required: true)]
        public Input<int> RetentionInDays { get; set; } = null!;

        [Input("sasUrl", required: true)]
        public Input<string> SasUrl { get; set; } = null!;

        public SlotLogsApplicationLogsAzureBlobStorageGetArgs()
        {
        }
    }

    public sealed class SlotLogsApplicationLogsGetArgs : Pulumi.ResourceArgs
    {
        [Input("azureBlobStorage")]
        public Input<SlotLogsApplicationLogsAzureBlobStorageGetArgs>? AzureBlobStorage { get; set; }

        public SlotLogsApplicationLogsGetArgs()
        {
        }
    }

    public sealed class SlotLogsArgs : Pulumi.ResourceArgs
    {
        [Input("applicationLogs")]
        public Input<SlotLogsApplicationLogsArgs>? ApplicationLogs { get; set; }

        [Input("httpLogs")]
        public Input<SlotLogsHttpLogsArgs>? HttpLogs { get; set; }

        public SlotLogsArgs()
        {
        }
    }

    public sealed class SlotLogsGetArgs : Pulumi.ResourceArgs
    {
        [Input("applicationLogs")]
        public Input<SlotLogsApplicationLogsGetArgs>? ApplicationLogs { get; set; }

        [Input("httpLogs")]
        public Input<SlotLogsHttpLogsGetArgs>? HttpLogs { get; set; }

        public SlotLogsGetArgs()
        {
        }
    }

    public sealed class SlotLogsHttpLogsArgs : Pulumi.ResourceArgs
    {
        [Input("azureBlobStorage")]
        public Input<SlotLogsHttpLogsAzureBlobStorageArgs>? AzureBlobStorage { get; set; }

        [Input("fileSystem")]
        public Input<SlotLogsHttpLogsFileSystemArgs>? FileSystem { get; set; }

        public SlotLogsHttpLogsArgs()
        {
        }
    }

    public sealed class SlotLogsHttpLogsAzureBlobStorageArgs : Pulumi.ResourceArgs
    {
        [Input("retentionInDays", required: true)]
        public Input<int> RetentionInDays { get; set; } = null!;

        [Input("sasUrl", required: true)]
        public Input<string> SasUrl { get; set; } = null!;

        public SlotLogsHttpLogsAzureBlobStorageArgs()
        {
        }
    }

    public sealed class SlotLogsHttpLogsAzureBlobStorageGetArgs : Pulumi.ResourceArgs
    {
        [Input("retentionInDays", required: true)]
        public Input<int> RetentionInDays { get; set; } = null!;

        [Input("sasUrl", required: true)]
        public Input<string> SasUrl { get; set; } = null!;

        public SlotLogsHttpLogsAzureBlobStorageGetArgs()
        {
        }
    }

    public sealed class SlotLogsHttpLogsFileSystemArgs : Pulumi.ResourceArgs
    {
        [Input("retentionInDays", required: true)]
        public Input<int> RetentionInDays { get; set; } = null!;

        [Input("retentionInMb", required: true)]
        public Input<int> RetentionInMb { get; set; } = null!;

        public SlotLogsHttpLogsFileSystemArgs()
        {
        }
    }

    public sealed class SlotLogsHttpLogsFileSystemGetArgs : Pulumi.ResourceArgs
    {
        [Input("retentionInDays", required: true)]
        public Input<int> RetentionInDays { get; set; } = null!;

        [Input("retentionInMb", required: true)]
        public Input<int> RetentionInMb { get; set; } = null!;

        public SlotLogsHttpLogsFileSystemGetArgs()
        {
        }
    }

    public sealed class SlotLogsHttpLogsGetArgs : Pulumi.ResourceArgs
    {
        [Input("azureBlobStorage")]
        public Input<SlotLogsHttpLogsAzureBlobStorageGetArgs>? AzureBlobStorage { get; set; }

        [Input("fileSystem")]
        public Input<SlotLogsHttpLogsFileSystemGetArgs>? FileSystem { get; set; }

        public SlotLogsHttpLogsGetArgs()
        {
        }
    }

    public sealed class SlotSiteConfigArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Should the app be loaded at all times? Defaults to `false`.
        /// </summary>
        [Input("alwaysOn")]
        public Input<bool>? AlwaysOn { get; set; }

        /// <summary>
        /// App command line to launch, e.g. `/sbin/myserver -b 0.0.0.0`.
        /// </summary>
        [Input("appCommandLine")]
        public Input<string>? AppCommandLine { get; set; }

        /// <summary>
        /// The name of the swap to automatically swap to during deployment
        /// </summary>
        [Input("autoSwapSlotName")]
        public Input<string>? AutoSwapSlotName { get; set; }

        /// <summary>
        /// A `cors` block as defined below.
        /// </summary>
        [Input("cors")]
        public Input<SlotSiteConfigCorsArgs>? Cors { get; set; }

        [Input("defaultDocuments")]
        private InputList<string>? _defaultDocuments;

        /// <summary>
        /// The ordering of default documents to load, if an address isn't specified.
        /// </summary>
        public InputList<string> DefaultDocuments
        {
            get => _defaultDocuments ?? (_defaultDocuments = new InputList<string>());
            set => _defaultDocuments = value;
        }

        /// <summary>
        /// The version of the .net framework's CLR used in this App Service Slot. Possible values are `v2.0` (which will use the latest version of the .net framework for the .net CLR v2 - currently `.net 3.5`) and `v4.0` (which corresponds to the latest version of the .net CLR v4 - which at the time of writing is `.net 4.7.1`). [For more information on which .net CLR version to use based on the .net framework you're targeting - please see this table](https://en.wikipedia.org/wiki/.NET_Framework_version_history#Overview). Defaults to `v4.0`.
        /// </summary>
        [Input("dotnetFrameworkVersion")]
        public Input<string>? DotnetFrameworkVersion { get; set; }

        [Input("ftpsState")]
        public Input<string>? FtpsState { get; set; }

        /// <summary>
        /// Is HTTP2 Enabled on this App Service? Defaults to `false`.
        /// </summary>
        [Input("http2Enabled")]
        public Input<bool>? Http2Enabled { get; set; }

        [Input("ipRestrictions")]
        private InputList<SlotSiteConfigIpRestrictionsArgs>? _ipRestrictions;

        /// <summary>
        /// A [List of objects](https://www.terraform.io/docs/configuration/attr-as-blocks.html) representing ip restrictions as defined below.
        /// </summary>
        public InputList<SlotSiteConfigIpRestrictionsArgs> IpRestrictions
        {
            get => _ipRestrictions ?? (_ipRestrictions = new InputList<SlotSiteConfigIpRestrictionsArgs>());
            set => _ipRestrictions = value;
        }

        /// <summary>
        /// The Java Container to use. If specified `java_version` and `java_container_version` must also be specified. Possible values are `JETTY` and `TOMCAT`.
        /// </summary>
        [Input("javaContainer")]
        public Input<string>? JavaContainer { get; set; }

        /// <summary>
        /// The version of the Java Container to use. If specified `java_version` and `java_container` must also be specified.
        /// </summary>
        [Input("javaContainerVersion")]
        public Input<string>? JavaContainerVersion { get; set; }

        /// <summary>
        /// The version of Java to use. If specified `java_container` and `java_container_version` must also be specified. Possible values are `1.7`, `1.8`, and `11` and their specific versions - except for Java 11 (e.g. `1.7.0_80`, `1.8.0_181`, `11`)
        /// </summary>
        [Input("javaVersion")]
        public Input<string>? JavaVersion { get; set; }

        [Input("linuxFxVersion")]
        public Input<string>? LinuxFxVersion { get; set; }

        /// <summary>
        /// Is "MySQL In App" Enabled? This runs a local MySQL instance with your app and shares resources from the App Service plan.
        /// </summary>
        [Input("localMysqlEnabled")]
        public Input<bool>? LocalMysqlEnabled { get; set; }

        /// <summary>
        /// The Managed Pipeline Mode. Possible values are `Integrated` and `Classic`. Defaults to `Integrated`.
        /// </summary>
        [Input("managedPipelineMode")]
        public Input<string>? ManagedPipelineMode { get; set; }

        /// <summary>
        /// The minimum supported TLS version for the app service. Possible values are `1.0`, `1.1`, and `1.2`. Defaults to `1.2` for new app services.
        /// </summary>
        [Input("minTlsVersion")]
        public Input<string>? MinTlsVersion { get; set; }

        /// <summary>
        /// The version of PHP to use in this App Service Slot. Possible values are `5.5`, `5.6`, `7.0`, `7.1`, `7.2`, and `7.3`.
        /// </summary>
        [Input("phpVersion")]
        public Input<string>? PhpVersion { get; set; }

        /// <summary>
        /// The version of Python to use in this App Service Slot. Possible values are `2.7` and `3.4`.
        /// </summary>
        [Input("pythonVersion")]
        public Input<string>? PythonVersion { get; set; }

        /// <summary>
        /// Is Remote Debugging Enabled? Defaults to `false`.
        /// </summary>
        [Input("remoteDebuggingEnabled")]
        public Input<bool>? RemoteDebuggingEnabled { get; set; }

        /// <summary>
        /// Which version of Visual Studio should the Remote Debugger be compatible with? Possible values are `VS2012`, `VS2013`, `VS2015`, and `VS2017`.
        /// </summary>
        [Input("remoteDebuggingVersion")]
        public Input<string>? RemoteDebuggingVersion { get; set; }

        /// <summary>
        /// The type of Source Control enabled for this App Service Slot. Defaults to `None`. Possible values are: `BitbucketGit`, `BitbucketHg`, `CodePlexGit`, `CodePlexHg`, `Dropbox`, `ExternalGit`, `ExternalHg`, `GitHub`, `LocalGit`, `None`, `OneDrive`, `Tfs`, `VSO`, and `VSTSRM`
        /// </summary>
        [Input("scmType")]
        public Input<string>? ScmType { get; set; }

        /// <summary>
        /// Should the App Service Slot run in 32 bit mode, rather than 64 bit mode?
        /// </summary>
        [Input("use32BitWorkerProcess")]
        public Input<bool>? Use32BitWorkerProcess { get; set; }

        /// <summary>
        /// Should WebSockets be enabled?
        /// </summary>
        [Input("websocketsEnabled")]
        public Input<bool>? WebsocketsEnabled { get; set; }

        [Input("windowsFxVersion")]
        public Input<string>? WindowsFxVersion { get; set; }

        public SlotSiteConfigArgs()
        {
        }
    }

    public sealed class SlotSiteConfigCorsArgs : Pulumi.ResourceArgs
    {
        [Input("allowedOrigins", required: true)]
        private InputList<string>? _allowedOrigins;
        public InputList<string> AllowedOrigins
        {
            get => _allowedOrigins ?? (_allowedOrigins = new InputList<string>());
            set => _allowedOrigins = value;
        }

        [Input("supportCredentials")]
        public Input<bool>? SupportCredentials { get; set; }

        public SlotSiteConfigCorsArgs()
        {
        }
    }

    public sealed class SlotSiteConfigCorsGetArgs : Pulumi.ResourceArgs
    {
        [Input("allowedOrigins", required: true)]
        private InputList<string>? _allowedOrigins;
        public InputList<string> AllowedOrigins
        {
            get => _allowedOrigins ?? (_allowedOrigins = new InputList<string>());
            set => _allowedOrigins = value;
        }

        [Input("supportCredentials")]
        public Input<bool>? SupportCredentials { get; set; }

        public SlotSiteConfigCorsGetArgs()
        {
        }
    }

    public sealed class SlotSiteConfigGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Should the app be loaded at all times? Defaults to `false`.
        /// </summary>
        [Input("alwaysOn")]
        public Input<bool>? AlwaysOn { get; set; }

        /// <summary>
        /// App command line to launch, e.g. `/sbin/myserver -b 0.0.0.0`.
        /// </summary>
        [Input("appCommandLine")]
        public Input<string>? AppCommandLine { get; set; }

        /// <summary>
        /// The name of the swap to automatically swap to during deployment
        /// </summary>
        [Input("autoSwapSlotName")]
        public Input<string>? AutoSwapSlotName { get; set; }

        /// <summary>
        /// A `cors` block as defined below.
        /// </summary>
        [Input("cors")]
        public Input<SlotSiteConfigCorsGetArgs>? Cors { get; set; }

        [Input("defaultDocuments")]
        private InputList<string>? _defaultDocuments;

        /// <summary>
        /// The ordering of default documents to load, if an address isn't specified.
        /// </summary>
        public InputList<string> DefaultDocuments
        {
            get => _defaultDocuments ?? (_defaultDocuments = new InputList<string>());
            set => _defaultDocuments = value;
        }

        /// <summary>
        /// The version of the .net framework's CLR used in this App Service Slot. Possible values are `v2.0` (which will use the latest version of the .net framework for the .net CLR v2 - currently `.net 3.5`) and `v4.0` (which corresponds to the latest version of the .net CLR v4 - which at the time of writing is `.net 4.7.1`). [For more information on which .net CLR version to use based on the .net framework you're targeting - please see this table](https://en.wikipedia.org/wiki/.NET_Framework_version_history#Overview). Defaults to `v4.0`.
        /// </summary>
        [Input("dotnetFrameworkVersion")]
        public Input<string>? DotnetFrameworkVersion { get; set; }

        [Input("ftpsState")]
        public Input<string>? FtpsState { get; set; }

        /// <summary>
        /// Is HTTP2 Enabled on this App Service? Defaults to `false`.
        /// </summary>
        [Input("http2Enabled")]
        public Input<bool>? Http2Enabled { get; set; }

        [Input("ipRestrictions")]
        private InputList<SlotSiteConfigIpRestrictionsGetArgs>? _ipRestrictions;

        /// <summary>
        /// A [List of objects](https://www.terraform.io/docs/configuration/attr-as-blocks.html) representing ip restrictions as defined below.
        /// </summary>
        public InputList<SlotSiteConfigIpRestrictionsGetArgs> IpRestrictions
        {
            get => _ipRestrictions ?? (_ipRestrictions = new InputList<SlotSiteConfigIpRestrictionsGetArgs>());
            set => _ipRestrictions = value;
        }

        /// <summary>
        /// The Java Container to use. If specified `java_version` and `java_container_version` must also be specified. Possible values are `JETTY` and `TOMCAT`.
        /// </summary>
        [Input("javaContainer")]
        public Input<string>? JavaContainer { get; set; }

        /// <summary>
        /// The version of the Java Container to use. If specified `java_version` and `java_container` must also be specified.
        /// </summary>
        [Input("javaContainerVersion")]
        public Input<string>? JavaContainerVersion { get; set; }

        /// <summary>
        /// The version of Java to use. If specified `java_container` and `java_container_version` must also be specified. Possible values are `1.7`, `1.8`, and `11` and their specific versions - except for Java 11 (e.g. `1.7.0_80`, `1.8.0_181`, `11`)
        /// </summary>
        [Input("javaVersion")]
        public Input<string>? JavaVersion { get; set; }

        [Input("linuxFxVersion")]
        public Input<string>? LinuxFxVersion { get; set; }

        /// <summary>
        /// Is "MySQL In App" Enabled? This runs a local MySQL instance with your app and shares resources from the App Service plan.
        /// </summary>
        [Input("localMysqlEnabled")]
        public Input<bool>? LocalMysqlEnabled { get; set; }

        /// <summary>
        /// The Managed Pipeline Mode. Possible values are `Integrated` and `Classic`. Defaults to `Integrated`.
        /// </summary>
        [Input("managedPipelineMode")]
        public Input<string>? ManagedPipelineMode { get; set; }

        /// <summary>
        /// The minimum supported TLS version for the app service. Possible values are `1.0`, `1.1`, and `1.2`. Defaults to `1.2` for new app services.
        /// </summary>
        [Input("minTlsVersion")]
        public Input<string>? MinTlsVersion { get; set; }

        /// <summary>
        /// The version of PHP to use in this App Service Slot. Possible values are `5.5`, `5.6`, `7.0`, `7.1`, `7.2`, and `7.3`.
        /// </summary>
        [Input("phpVersion")]
        public Input<string>? PhpVersion { get; set; }

        /// <summary>
        /// The version of Python to use in this App Service Slot. Possible values are `2.7` and `3.4`.
        /// </summary>
        [Input("pythonVersion")]
        public Input<string>? PythonVersion { get; set; }

        /// <summary>
        /// Is Remote Debugging Enabled? Defaults to `false`.
        /// </summary>
        [Input("remoteDebuggingEnabled")]
        public Input<bool>? RemoteDebuggingEnabled { get; set; }

        /// <summary>
        /// Which version of Visual Studio should the Remote Debugger be compatible with? Possible values are `VS2012`, `VS2013`, `VS2015`, and `VS2017`.
        /// </summary>
        [Input("remoteDebuggingVersion")]
        public Input<string>? RemoteDebuggingVersion { get; set; }

        /// <summary>
        /// The type of Source Control enabled for this App Service Slot. Defaults to `None`. Possible values are: `BitbucketGit`, `BitbucketHg`, `CodePlexGit`, `CodePlexHg`, `Dropbox`, `ExternalGit`, `ExternalHg`, `GitHub`, `LocalGit`, `None`, `OneDrive`, `Tfs`, `VSO`, and `VSTSRM`
        /// </summary>
        [Input("scmType")]
        public Input<string>? ScmType { get; set; }

        /// <summary>
        /// Should the App Service Slot run in 32 bit mode, rather than 64 bit mode?
        /// </summary>
        [Input("use32BitWorkerProcess")]
        public Input<bool>? Use32BitWorkerProcess { get; set; }

        /// <summary>
        /// Should WebSockets be enabled?
        /// </summary>
        [Input("websocketsEnabled")]
        public Input<bool>? WebsocketsEnabled { get; set; }

        [Input("windowsFxVersion")]
        public Input<string>? WindowsFxVersion { get; set; }

        public SlotSiteConfigGetArgs()
        {
        }
    }

    public sealed class SlotSiteConfigIpRestrictionsArgs : Pulumi.ResourceArgs
    {
        [Input("ipAddress")]
        public Input<string>? IpAddress { get; set; }

        [Input("virtualNetworkSubnetId")]
        public Input<string>? VirtualNetworkSubnetId { get; set; }

        public SlotSiteConfigIpRestrictionsArgs()
        {
        }
    }

    public sealed class SlotSiteConfigIpRestrictionsGetArgs : Pulumi.ResourceArgs
    {
        [Input("ipAddress")]
        public Input<string>? IpAddress { get; set; }

        [Input("virtualNetworkSubnetId")]
        public Input<string>? VirtualNetworkSubnetId { get; set; }

        public SlotSiteConfigIpRestrictionsGetArgs()
        {
        }
    }

    public sealed class SlotSiteCredentialsGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The password associated with the username, which can be used to publish to this App Service.
        /// </summary>
        [Input("password")]
        public Input<string>? Password { get; set; }

        /// <summary>
        /// The username which can be used to publish to this App Service
        /// </summary>
        [Input("username")]
        public Input<string>? Username { get; set; }

        public SlotSiteCredentialsGetArgs()
        {
        }
    }
    }

    namespace Outputs
    {

    [OutputType]
    public sealed class SlotAuthSettings
    {
        public readonly SlotAuthSettingsActiveDirectory? ActiveDirectory;
        public readonly ImmutableDictionary<string, string>? AdditionalLoginParams;
        public readonly ImmutableArray<string> AllowedExternalRedirectUrls;
        public readonly string? DefaultProvider;
        /// <summary>
        /// Is the App Service Slot Enabled?
        /// </summary>
        public readonly bool Enabled;
        public readonly SlotAuthSettingsFacebook? Facebook;
        public readonly SlotAuthSettingsGoogle? Google;
        public readonly string? Issuer;
        public readonly SlotAuthSettingsMicrosoft? Microsoft;
        public readonly string? RuntimeVersion;
        public readonly double? TokenRefreshExtensionHours;
        public readonly bool? TokenStoreEnabled;
        public readonly SlotAuthSettingsTwitter? Twitter;
        public readonly string? UnauthenticatedClientAction;

        [OutputConstructor]
        private SlotAuthSettings(
            SlotAuthSettingsActiveDirectory? activeDirectory,
            ImmutableDictionary<string, string>? additionalLoginParams,
            ImmutableArray<string> allowedExternalRedirectUrls,
            string? defaultProvider,
            bool enabled,
            SlotAuthSettingsFacebook? facebook,
            SlotAuthSettingsGoogle? google,
            string? issuer,
            SlotAuthSettingsMicrosoft? microsoft,
            string? runtimeVersion,
            double? tokenRefreshExtensionHours,
            bool? tokenStoreEnabled,
            SlotAuthSettingsTwitter? twitter,
            string? unauthenticatedClientAction)
        {
            ActiveDirectory = activeDirectory;
            AdditionalLoginParams = additionalLoginParams;
            AllowedExternalRedirectUrls = allowedExternalRedirectUrls;
            DefaultProvider = defaultProvider;
            Enabled = enabled;
            Facebook = facebook;
            Google = google;
            Issuer = issuer;
            Microsoft = microsoft;
            RuntimeVersion = runtimeVersion;
            TokenRefreshExtensionHours = tokenRefreshExtensionHours;
            TokenStoreEnabled = tokenStoreEnabled;
            Twitter = twitter;
            UnauthenticatedClientAction = unauthenticatedClientAction;
        }
    }

    [OutputType]
    public sealed class SlotAuthSettingsActiveDirectory
    {
        public readonly ImmutableArray<string> AllowedAudiences;
        public readonly string ClientId;
        public readonly string? ClientSecret;

        [OutputConstructor]
        private SlotAuthSettingsActiveDirectory(
            ImmutableArray<string> allowedAudiences,
            string clientId,
            string? clientSecret)
        {
            AllowedAudiences = allowedAudiences;
            ClientId = clientId;
            ClientSecret = clientSecret;
        }
    }

    [OutputType]
    public sealed class SlotAuthSettingsFacebook
    {
        public readonly string AppId;
        public readonly string AppSecret;
        public readonly ImmutableArray<string> OauthScopes;

        [OutputConstructor]
        private SlotAuthSettingsFacebook(
            string appId,
            string appSecret,
            ImmutableArray<string> oauthScopes)
        {
            AppId = appId;
            AppSecret = appSecret;
            OauthScopes = oauthScopes;
        }
    }

    [OutputType]
    public sealed class SlotAuthSettingsGoogle
    {
        public readonly string ClientId;
        public readonly string ClientSecret;
        public readonly ImmutableArray<string> OauthScopes;

        [OutputConstructor]
        private SlotAuthSettingsGoogle(
            string clientId,
            string clientSecret,
            ImmutableArray<string> oauthScopes)
        {
            ClientId = clientId;
            ClientSecret = clientSecret;
            OauthScopes = oauthScopes;
        }
    }

    [OutputType]
    public sealed class SlotAuthSettingsMicrosoft
    {
        public readonly string ClientId;
        public readonly string ClientSecret;
        public readonly ImmutableArray<string> OauthScopes;

        [OutputConstructor]
        private SlotAuthSettingsMicrosoft(
            string clientId,
            string clientSecret,
            ImmutableArray<string> oauthScopes)
        {
            ClientId = clientId;
            ClientSecret = clientSecret;
            OauthScopes = oauthScopes;
        }
    }

    [OutputType]
    public sealed class SlotAuthSettingsTwitter
    {
        public readonly string ConsumerKey;
        public readonly string ConsumerSecret;

        [OutputConstructor]
        private SlotAuthSettingsTwitter(
            string consumerKey,
            string consumerSecret)
        {
            ConsumerKey = consumerKey;
            ConsumerSecret = consumerSecret;
        }
    }

    [OutputType]
    public sealed class SlotConnectionStrings
    {
        /// <summary>
        /// The name of the Connection String.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The type of the Connection String. Possible values are `APIHub`, `Custom`, `DocDb`, `EventHub`, `MySQL`, `NotificationHub`, `PostgreSQL`, `RedisCache`, `ServiceBus`, `SQLAzure`, and  `SQLServer`.
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// The value for the Connection String.
        /// </summary>
        public readonly string Value;

        [OutputConstructor]
        private SlotConnectionStrings(
            string name,
            string type,
            string value)
        {
            Name = name;
            Type = type;
            Value = value;
        }
    }

    [OutputType]
    public sealed class SlotIdentity
    {
        public readonly ImmutableArray<string> IdentityIds;
        public readonly string PrincipalId;
        public readonly string TenantId;
        /// <summary>
        /// The type of the Connection String. Possible values are `APIHub`, `Custom`, `DocDb`, `EventHub`, `MySQL`, `NotificationHub`, `PostgreSQL`, `RedisCache`, `ServiceBus`, `SQLAzure`, and  `SQLServer`.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private SlotIdentity(
            ImmutableArray<string> identityIds,
            string principalId,
            string tenantId,
            string type)
        {
            IdentityIds = identityIds;
            PrincipalId = principalId;
            TenantId = tenantId;
            Type = type;
        }
    }

    [OutputType]
    public sealed class SlotLogs
    {
        public readonly SlotLogsApplicationLogs ApplicationLogs;
        public readonly SlotLogsHttpLogs HttpLogs;

        [OutputConstructor]
        private SlotLogs(
            SlotLogsApplicationLogs applicationLogs,
            SlotLogsHttpLogs httpLogs)
        {
            ApplicationLogs = applicationLogs;
            HttpLogs = httpLogs;
        }
    }

    [OutputType]
    public sealed class SlotLogsApplicationLogs
    {
        public readonly SlotLogsApplicationLogsAzureBlobStorage? AzureBlobStorage;

        [OutputConstructor]
        private SlotLogsApplicationLogs(SlotLogsApplicationLogsAzureBlobStorage? azureBlobStorage)
        {
            AzureBlobStorage = azureBlobStorage;
        }
    }

    [OutputType]
    public sealed class SlotLogsApplicationLogsAzureBlobStorage
    {
        public readonly string Level;
        public readonly int RetentionInDays;
        public readonly string SasUrl;

        [OutputConstructor]
        private SlotLogsApplicationLogsAzureBlobStorage(
            string level,
            int retentionInDays,
            string sasUrl)
        {
            Level = level;
            RetentionInDays = retentionInDays;
            SasUrl = sasUrl;
        }
    }

    [OutputType]
    public sealed class SlotLogsHttpLogs
    {
        public readonly SlotLogsHttpLogsAzureBlobStorage? AzureBlobStorage;
        public readonly SlotLogsHttpLogsFileSystem? FileSystem;

        [OutputConstructor]
        private SlotLogsHttpLogs(
            SlotLogsHttpLogsAzureBlobStorage? azureBlobStorage,
            SlotLogsHttpLogsFileSystem? fileSystem)
        {
            AzureBlobStorage = azureBlobStorage;
            FileSystem = fileSystem;
        }
    }

    [OutputType]
    public sealed class SlotLogsHttpLogsAzureBlobStorage
    {
        public readonly int RetentionInDays;
        public readonly string SasUrl;

        [OutputConstructor]
        private SlotLogsHttpLogsAzureBlobStorage(
            int retentionInDays,
            string sasUrl)
        {
            RetentionInDays = retentionInDays;
            SasUrl = sasUrl;
        }
    }

    [OutputType]
    public sealed class SlotLogsHttpLogsFileSystem
    {
        public readonly int RetentionInDays;
        public readonly int RetentionInMb;

        [OutputConstructor]
        private SlotLogsHttpLogsFileSystem(
            int retentionInDays,
            int retentionInMb)
        {
            RetentionInDays = retentionInDays;
            RetentionInMb = retentionInMb;
        }
    }

    [OutputType]
    public sealed class SlotSiteConfig
    {
        /// <summary>
        /// Should the app be loaded at all times? Defaults to `false`.
        /// </summary>
        public readonly bool? AlwaysOn;
        /// <summary>
        /// App command line to launch, e.g. `/sbin/myserver -b 0.0.0.0`.
        /// </summary>
        public readonly string? AppCommandLine;
        /// <summary>
        /// The name of the swap to automatically swap to during deployment
        /// </summary>
        public readonly string? AutoSwapSlotName;
        /// <summary>
        /// A `cors` block as defined below.
        /// </summary>
        public readonly SlotSiteConfigCors Cors;
        /// <summary>
        /// The ordering of default documents to load, if an address isn't specified.
        /// </summary>
        public readonly ImmutableArray<string> DefaultDocuments;
        /// <summary>
        /// The version of the .net framework's CLR used in this App Service Slot. Possible values are `v2.0` (which will use the latest version of the .net framework for the .net CLR v2 - currently `.net 3.5`) and `v4.0` (which corresponds to the latest version of the .net CLR v4 - which at the time of writing is `.net 4.7.1`). [For more information on which .net CLR version to use based on the .net framework you're targeting - please see this table](https://en.wikipedia.org/wiki/.NET_Framework_version_history#Overview). Defaults to `v4.0`.
        /// </summary>
        public readonly string? DotnetFrameworkVersion;
        public readonly string FtpsState;
        /// <summary>
        /// Is HTTP2 Enabled on this App Service? Defaults to `false`.
        /// </summary>
        public readonly bool? Http2Enabled;
        /// <summary>
        /// A [List of objects](https://www.terraform.io/docs/configuration/attr-as-blocks.html) representing ip restrictions as defined below.
        /// </summary>
        public readonly ImmutableArray<SlotSiteConfigIpRestrictions> IpRestrictions;
        /// <summary>
        /// The Java Container to use. If specified `java_version` and `java_container_version` must also be specified. Possible values are `JETTY` and `TOMCAT`.
        /// </summary>
        public readonly string? JavaContainer;
        /// <summary>
        /// The version of the Java Container to use. If specified `java_version` and `java_container` must also be specified.
        /// </summary>
        public readonly string? JavaContainerVersion;
        /// <summary>
        /// The version of Java to use. If specified `java_container` and `java_container_version` must also be specified. Possible values are `1.7`, `1.8`, and `11` and their specific versions - except for Java 11 (e.g. `1.7.0_80`, `1.8.0_181`, `11`)
        /// </summary>
        public readonly string? JavaVersion;
        public readonly string LinuxFxVersion;
        /// <summary>
        /// Is "MySQL In App" Enabled? This runs a local MySQL instance with your app and shares resources from the App Service plan.
        /// </summary>
        public readonly bool LocalMysqlEnabled;
        /// <summary>
        /// The Managed Pipeline Mode. Possible values are `Integrated` and `Classic`. Defaults to `Integrated`.
        /// </summary>
        public readonly string ManagedPipelineMode;
        /// <summary>
        /// The minimum supported TLS version for the app service. Possible values are `1.0`, `1.1`, and `1.2`. Defaults to `1.2` for new app services.
        /// </summary>
        public readonly string MinTlsVersion;
        /// <summary>
        /// The version of PHP to use in this App Service Slot. Possible values are `5.5`, `5.6`, `7.0`, `7.1`, `7.2`, and `7.3`.
        /// </summary>
        public readonly string? PhpVersion;
        /// <summary>
        /// The version of Python to use in this App Service Slot. Possible values are `2.7` and `3.4`.
        /// </summary>
        public readonly string? PythonVersion;
        /// <summary>
        /// Is Remote Debugging Enabled? Defaults to `false`.
        /// </summary>
        public readonly bool? RemoteDebuggingEnabled;
        /// <summary>
        /// Which version of Visual Studio should the Remote Debugger be compatible with? Possible values are `VS2012`, `VS2013`, `VS2015`, and `VS2017`.
        /// </summary>
        public readonly string RemoteDebuggingVersion;
        /// <summary>
        /// The type of Source Control enabled for this App Service Slot. Defaults to `None`. Possible values are: `BitbucketGit`, `BitbucketHg`, `CodePlexGit`, `CodePlexHg`, `Dropbox`, `ExternalGit`, `ExternalHg`, `GitHub`, `LocalGit`, `None`, `OneDrive`, `Tfs`, `VSO`, and `VSTSRM`
        /// </summary>
        public readonly string? ScmType;
        /// <summary>
        /// Should the App Service Slot run in 32 bit mode, rather than 64 bit mode?
        /// </summary>
        public readonly bool? Use32BitWorkerProcess;
        /// <summary>
        /// Should WebSockets be enabled?
        /// </summary>
        public readonly bool WebsocketsEnabled;
        public readonly string WindowsFxVersion;

        [OutputConstructor]
        private SlotSiteConfig(
            bool? alwaysOn,
            string? appCommandLine,
            string? autoSwapSlotName,
            SlotSiteConfigCors cors,
            ImmutableArray<string> defaultDocuments,
            string? dotnetFrameworkVersion,
            string ftpsState,
            bool? http2Enabled,
            ImmutableArray<SlotSiteConfigIpRestrictions> ipRestrictions,
            string? javaContainer,
            string? javaContainerVersion,
            string? javaVersion,
            string linuxFxVersion,
            bool localMysqlEnabled,
            string managedPipelineMode,
            string minTlsVersion,
            string? phpVersion,
            string? pythonVersion,
            bool? remoteDebuggingEnabled,
            string remoteDebuggingVersion,
            string? scmType,
            bool? use32BitWorkerProcess,
            bool websocketsEnabled,
            string windowsFxVersion)
        {
            AlwaysOn = alwaysOn;
            AppCommandLine = appCommandLine;
            AutoSwapSlotName = autoSwapSlotName;
            Cors = cors;
            DefaultDocuments = defaultDocuments;
            DotnetFrameworkVersion = dotnetFrameworkVersion;
            FtpsState = ftpsState;
            Http2Enabled = http2Enabled;
            IpRestrictions = ipRestrictions;
            JavaContainer = javaContainer;
            JavaContainerVersion = javaContainerVersion;
            JavaVersion = javaVersion;
            LinuxFxVersion = linuxFxVersion;
            LocalMysqlEnabled = localMysqlEnabled;
            ManagedPipelineMode = managedPipelineMode;
            MinTlsVersion = minTlsVersion;
            PhpVersion = phpVersion;
            PythonVersion = pythonVersion;
            RemoteDebuggingEnabled = remoteDebuggingEnabled;
            RemoteDebuggingVersion = remoteDebuggingVersion;
            ScmType = scmType;
            Use32BitWorkerProcess = use32BitWorkerProcess;
            WebsocketsEnabled = websocketsEnabled;
            WindowsFxVersion = windowsFxVersion;
        }
    }

    [OutputType]
    public sealed class SlotSiteConfigCors
    {
        public readonly ImmutableArray<string> AllowedOrigins;
        public readonly bool? SupportCredentials;

        [OutputConstructor]
        private SlotSiteConfigCors(
            ImmutableArray<string> allowedOrigins,
            bool? supportCredentials)
        {
            AllowedOrigins = allowedOrigins;
            SupportCredentials = supportCredentials;
        }
    }

    [OutputType]
    public sealed class SlotSiteConfigIpRestrictions
    {
        public readonly string? IpAddress;
        public readonly string? VirtualNetworkSubnetId;

        [OutputConstructor]
        private SlotSiteConfigIpRestrictions(
            string? ipAddress,
            string? virtualNetworkSubnetId)
        {
            IpAddress = ipAddress;
            VirtualNetworkSubnetId = virtualNetworkSubnetId;
        }
    }

    [OutputType]
    public sealed class SlotSiteCredentials
    {
        /// <summary>
        /// The password associated with the username, which can be used to publish to this App Service.
        /// </summary>
        public readonly string Password;
        /// <summary>
        /// The username which can be used to publish to this App Service
        /// </summary>
        public readonly string Username;

        [OutputConstructor]
        private SlotSiteCredentials(
            string password,
            string username)
        {
            Password = password;
            Username = username;
        }
    }
    }
}
