// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.AppService
{
    /// <summary>
    /// Manages a Function App.
    /// 
    /// &gt; This content is derived from https://github.com/terraform-providers/terraform-provider-azurerm/blob/master/website/docs/r/function_app.html.markdown.
    /// </summary>
    public partial class FunctionApp : Pulumi.CustomResource
    {
        /// <summary>
        /// The ID of the App Service Plan within which to create this Function App.
        /// </summary>
        [Output("appServicePlanId")]
        public Output<string> AppServicePlanId { get; private set; } = null!;

        /// <summary>
        /// A key-value pair of App Settings.
        /// </summary>
        [Output("appSettings")]
        public Output<ImmutableDictionary<string, string>?> AppSettings { get; private set; } = null!;

        /// <summary>
        /// A `auth_settings` block as defined below.
        /// </summary>
        [Output("authSettings")]
        public Output<Outputs.FunctionAppAuthSettings> AuthSettings { get; private set; } = null!;

        /// <summary>
        /// Should the Function App send session affinity cookies, which route client requests in the same session to the same instance?
        /// </summary>
        [Output("clientAffinityEnabled")]
        public Output<bool> ClientAffinityEnabled { get; private set; } = null!;

        /// <summary>
        /// An `connection_string` block as defined below.
        /// </summary>
        [Output("connectionStrings")]
        public Output<ImmutableArray<Outputs.FunctionAppConnectionStrings>> ConnectionStrings { get; private set; } = null!;

        /// <summary>
        /// The default hostname associated with the Function App - such as `mysite.azurewebsites.net`
        /// </summary>
        [Output("defaultHostname")]
        public Output<string> DefaultHostname { get; private set; } = null!;

        /// <summary>
        /// Should the built-in logging of this Function App be enabled? Defaults to `true`.
        /// </summary>
        [Output("enableBuiltinLogging")]
        public Output<bool?> EnableBuiltinLogging { get; private set; } = null!;

        /// <summary>
        /// Is the Function App enabled?
        /// </summary>
        [Output("enabled")]
        public Output<bool?> Enabled { get; private set; } = null!;

        /// <summary>
        /// Can the Function App only be accessed via HTTPS? Defaults to `false`.
        /// </summary>
        [Output("httpsOnly")]
        public Output<bool?> HttpsOnly { get; private set; } = null!;

        /// <summary>
        /// An `identity` block as defined below.
        /// </summary>
        [Output("identity")]
        public Output<Outputs.FunctionAppIdentity> Identity { get; private set; } = null!;

        /// <summary>
        /// The Function App kind - such as `functionapp,linux,container`
        /// </summary>
        [Output("kind")]
        public Output<string> Kind { get; private set; } = null!;

        /// <summary>
        /// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
        /// </summary>
        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// The name of the Connection String.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// A comma separated list of outbound IP addresses - such as `52.23.25.3,52.143.43.12`
        /// </summary>
        [Output("outboundIpAddresses")]
        public Output<string> OutboundIpAddresses { get; private set; } = null!;

        /// <summary>
        /// A comma separated list of outbound IP addresses - such as `52.23.25.3,52.143.43.12,52.143.43.17` - not all of which are necessarily in use. Superset of `outbound_ip_addresses`.
        /// </summary>
        [Output("possibleOutboundIpAddresses")]
        public Output<string> PossibleOutboundIpAddresses { get; private set; } = null!;

        /// <summary>
        /// The name of the resource group in which to create the Function App.
        /// </summary>
        [Output("resourceGroupName")]
        public Output<string> ResourceGroupName { get; private set; } = null!;

        /// <summary>
        /// A `site_config` object as defined below.
        /// </summary>
        [Output("siteConfig")]
        public Output<Outputs.FunctionAppSiteConfig> SiteConfig { get; private set; } = null!;

        /// <summary>
        /// A `site_credential` block as defined below, which contains the site-level credentials used to publish to this App Service.
        /// </summary>
        [Output("siteCredential")]
        public Output<Outputs.FunctionAppSiteCredential> SiteCredential { get; private set; } = null!;

        /// <summary>
        /// The connection string of the backend storage account which will be used by this Function App (such as the dashboard, logs).
        /// </summary>
        [Output("storageConnectionString")]
        public Output<string> StorageConnectionString { get; private set; } = null!;

        /// <summary>
        /// A mapping of tags to assign to the resource.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, object>> Tags { get; private set; } = null!;

        /// <summary>
        /// The runtime version associated with the Function App. Defaults to `~1`.
        /// </summary>
        [Output("version")]
        public Output<string?> Version { get; private set; } = null!;


        /// <summary>
        /// Create a FunctionApp resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public FunctionApp(string name, FunctionAppArgs args, CustomResourceOptions? options = null)
            : base("azure:appservice/functionApp:FunctionApp", name, args ?? ResourceArgs.Empty, MakeResourceOptions(options, ""))
        {
        }

        private FunctionApp(string name, Input<string> id, FunctionAppState? state = null, CustomResourceOptions? options = null)
            : base("azure:appservice/functionApp:FunctionApp", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing FunctionApp resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static FunctionApp Get(string name, Input<string> id, FunctionAppState? state = null, CustomResourceOptions? options = null)
        {
            return new FunctionApp(name, id, state, options);
        }
    }

    public sealed class FunctionAppArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the App Service Plan within which to create this Function App.
        /// </summary>
        [Input("appServicePlanId", required: true)]
        public Input<string> AppServicePlanId { get; set; } = null!;

        [Input("appSettings")]
        private InputMap<string>? _appSettings;

        /// <summary>
        /// A key-value pair of App Settings.
        /// </summary>
        public InputMap<string> AppSettings
        {
            get => _appSettings ?? (_appSettings = new InputMap<string>());
            set => _appSettings = value;
        }

        /// <summary>
        /// A `auth_settings` block as defined below.
        /// </summary>
        [Input("authSettings")]
        public Input<Inputs.FunctionAppAuthSettingsArgs>? AuthSettings { get; set; }

        /// <summary>
        /// Should the Function App send session affinity cookies, which route client requests in the same session to the same instance?
        /// </summary>
        [Input("clientAffinityEnabled")]
        public Input<bool>? ClientAffinityEnabled { get; set; }

        [Input("connectionStrings")]
        private InputList<Inputs.FunctionAppConnectionStringsArgs>? _connectionStrings;

        /// <summary>
        /// An `connection_string` block as defined below.
        /// </summary>
        public InputList<Inputs.FunctionAppConnectionStringsArgs> ConnectionStrings
        {
            get => _connectionStrings ?? (_connectionStrings = new InputList<Inputs.FunctionAppConnectionStringsArgs>());
            set => _connectionStrings = value;
        }

        /// <summary>
        /// Should the built-in logging of this Function App be enabled? Defaults to `true`.
        /// </summary>
        [Input("enableBuiltinLogging")]
        public Input<bool>? EnableBuiltinLogging { get; set; }

        /// <summary>
        /// Is the Function App enabled?
        /// </summary>
        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        /// <summary>
        /// Can the Function App only be accessed via HTTPS? Defaults to `false`.
        /// </summary>
        [Input("httpsOnly")]
        public Input<bool>? HttpsOnly { get; set; }

        /// <summary>
        /// An `identity` block as defined below.
        /// </summary>
        [Input("identity")]
        public Input<Inputs.FunctionAppIdentityArgs>? Identity { get; set; }

        /// <summary>
        /// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// The name of the Connection String.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The name of the resource group in which to create the Function App.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// A `site_config` object as defined below.
        /// </summary>
        [Input("siteConfig")]
        public Input<Inputs.FunctionAppSiteConfigArgs>? SiteConfig { get; set; }

        /// <summary>
        /// The connection string of the backend storage account which will be used by this Function App (such as the dashboard, logs).
        /// </summary>
        [Input("storageConnectionString", required: true)]
        public Input<string> StorageConnectionString { get; set; } = null!;

        [Input("tags")]
        private InputMap<object>? _tags;

        /// <summary>
        /// A mapping of tags to assign to the resource.
        /// </summary>
        public InputMap<object> Tags
        {
            get => _tags ?? (_tags = new InputMap<object>());
            set => _tags = value;
        }

        /// <summary>
        /// The runtime version associated with the Function App. Defaults to `~1`.
        /// </summary>
        [Input("version")]
        public Input<string>? Version { get; set; }

        public FunctionAppArgs()
        {
        }
    }

    public sealed class FunctionAppState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the App Service Plan within which to create this Function App.
        /// </summary>
        [Input("appServicePlanId")]
        public Input<string>? AppServicePlanId { get; set; }

        [Input("appSettings")]
        private InputMap<string>? _appSettings;

        /// <summary>
        /// A key-value pair of App Settings.
        /// </summary>
        public InputMap<string> AppSettings
        {
            get => _appSettings ?? (_appSettings = new InputMap<string>());
            set => _appSettings = value;
        }

        /// <summary>
        /// A `auth_settings` block as defined below.
        /// </summary>
        [Input("authSettings")]
        public Input<Inputs.FunctionAppAuthSettingsGetArgs>? AuthSettings { get; set; }

        /// <summary>
        /// Should the Function App send session affinity cookies, which route client requests in the same session to the same instance?
        /// </summary>
        [Input("clientAffinityEnabled")]
        public Input<bool>? ClientAffinityEnabled { get; set; }

        [Input("connectionStrings")]
        private InputList<Inputs.FunctionAppConnectionStringsGetArgs>? _connectionStrings;

        /// <summary>
        /// An `connection_string` block as defined below.
        /// </summary>
        public InputList<Inputs.FunctionAppConnectionStringsGetArgs> ConnectionStrings
        {
            get => _connectionStrings ?? (_connectionStrings = new InputList<Inputs.FunctionAppConnectionStringsGetArgs>());
            set => _connectionStrings = value;
        }

        /// <summary>
        /// The default hostname associated with the Function App - such as `mysite.azurewebsites.net`
        /// </summary>
        [Input("defaultHostname")]
        public Input<string>? DefaultHostname { get; set; }

        /// <summary>
        /// Should the built-in logging of this Function App be enabled? Defaults to `true`.
        /// </summary>
        [Input("enableBuiltinLogging")]
        public Input<bool>? EnableBuiltinLogging { get; set; }

        /// <summary>
        /// Is the Function App enabled?
        /// </summary>
        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        /// <summary>
        /// Can the Function App only be accessed via HTTPS? Defaults to `false`.
        /// </summary>
        [Input("httpsOnly")]
        public Input<bool>? HttpsOnly { get; set; }

        /// <summary>
        /// An `identity` block as defined below.
        /// </summary>
        [Input("identity")]
        public Input<Inputs.FunctionAppIdentityGetArgs>? Identity { get; set; }

        /// <summary>
        /// The Function App kind - such as `functionapp,linux,container`
        /// </summary>
        [Input("kind")]
        public Input<string>? Kind { get; set; }

        /// <summary>
        /// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// The name of the Connection String.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// A comma separated list of outbound IP addresses - such as `52.23.25.3,52.143.43.12`
        /// </summary>
        [Input("outboundIpAddresses")]
        public Input<string>? OutboundIpAddresses { get; set; }

        /// <summary>
        /// A comma separated list of outbound IP addresses - such as `52.23.25.3,52.143.43.12,52.143.43.17` - not all of which are necessarily in use. Superset of `outbound_ip_addresses`.
        /// </summary>
        [Input("possibleOutboundIpAddresses")]
        public Input<string>? PossibleOutboundIpAddresses { get; set; }

        /// <summary>
        /// The name of the resource group in which to create the Function App.
        /// </summary>
        [Input("resourceGroupName")]
        public Input<string>? ResourceGroupName { get; set; }

        /// <summary>
        /// A `site_config` object as defined below.
        /// </summary>
        [Input("siteConfig")]
        public Input<Inputs.FunctionAppSiteConfigGetArgs>? SiteConfig { get; set; }

        /// <summary>
        /// A `site_credential` block as defined below, which contains the site-level credentials used to publish to this App Service.
        /// </summary>
        [Input("siteCredential")]
        public Input<Inputs.FunctionAppSiteCredentialGetArgs>? SiteCredential { get; set; }

        /// <summary>
        /// The connection string of the backend storage account which will be used by this Function App (such as the dashboard, logs).
        /// </summary>
        [Input("storageConnectionString")]
        public Input<string>? StorageConnectionString { get; set; }

        [Input("tags")]
        private InputMap<object>? _tags;

        /// <summary>
        /// A mapping of tags to assign to the resource.
        /// </summary>
        public InputMap<object> Tags
        {
            get => _tags ?? (_tags = new InputMap<object>());
            set => _tags = value;
        }

        /// <summary>
        /// The runtime version associated with the Function App. Defaults to `~1`.
        /// </summary>
        [Input("version")]
        public Input<string>? Version { get; set; }

        public FunctionAppState()
        {
        }
    }

    namespace Inputs
    {

    public sealed class FunctionAppAuthSettingsActiveDirectoryArgs : Pulumi.ResourceArgs
    {
        [Input("allowedAudiences")]
        private InputList<string>? _allowedAudiences;
        public InputList<string> AllowedAudiences
        {
            get => _allowedAudiences ?? (_allowedAudiences = new InputList<string>());
            set => _allowedAudiences = value;
        }

        [Input("clientId", required: true)]
        public Input<string> ClientId { get; set; } = null!;

        [Input("clientSecret")]
        public Input<string>? ClientSecret { get; set; }

        public FunctionAppAuthSettingsActiveDirectoryArgs()
        {
        }
    }

    public sealed class FunctionAppAuthSettingsActiveDirectoryGetArgs : Pulumi.ResourceArgs
    {
        [Input("allowedAudiences")]
        private InputList<string>? _allowedAudiences;
        public InputList<string> AllowedAudiences
        {
            get => _allowedAudiences ?? (_allowedAudiences = new InputList<string>());
            set => _allowedAudiences = value;
        }

        [Input("clientId", required: true)]
        public Input<string> ClientId { get; set; } = null!;

        [Input("clientSecret")]
        public Input<string>? ClientSecret { get; set; }

        public FunctionAppAuthSettingsActiveDirectoryGetArgs()
        {
        }
    }

    public sealed class FunctionAppAuthSettingsArgs : Pulumi.ResourceArgs
    {
        [Input("activeDirectory")]
        public Input<FunctionAppAuthSettingsActiveDirectoryArgs>? ActiveDirectory { get; set; }

        [Input("additionalLoginParams")]
        private InputMap<string>? _additionalLoginParams;
        public InputMap<string> AdditionalLoginParams
        {
            get => _additionalLoginParams ?? (_additionalLoginParams = new InputMap<string>());
            set => _additionalLoginParams = value;
        }

        [Input("allowedExternalRedirectUrls")]
        private InputList<string>? _allowedExternalRedirectUrls;
        public InputList<string> AllowedExternalRedirectUrls
        {
            get => _allowedExternalRedirectUrls ?? (_allowedExternalRedirectUrls = new InputList<string>());
            set => _allowedExternalRedirectUrls = value;
        }

        [Input("defaultProvider")]
        public Input<string>? DefaultProvider { get; set; }

        /// <summary>
        /// Is the Function App enabled?
        /// </summary>
        [Input("enabled", required: true)]
        public Input<bool> Enabled { get; set; } = null!;

        [Input("facebook")]
        public Input<FunctionAppAuthSettingsFacebookArgs>? Facebook { get; set; }

        [Input("google")]
        public Input<FunctionAppAuthSettingsGoogleArgs>? Google { get; set; }

        [Input("issuer")]
        public Input<string>? Issuer { get; set; }

        [Input("microsoft")]
        public Input<FunctionAppAuthSettingsMicrosoftArgs>? Microsoft { get; set; }

        [Input("runtimeVersion")]
        public Input<string>? RuntimeVersion { get; set; }

        [Input("tokenRefreshExtensionHours")]
        public Input<double>? TokenRefreshExtensionHours { get; set; }

        [Input("tokenStoreEnabled")]
        public Input<bool>? TokenStoreEnabled { get; set; }

        [Input("twitter")]
        public Input<FunctionAppAuthSettingsTwitterArgs>? Twitter { get; set; }

        [Input("unauthenticatedClientAction")]
        public Input<string>? UnauthenticatedClientAction { get; set; }

        public FunctionAppAuthSettingsArgs()
        {
        }
    }

    public sealed class FunctionAppAuthSettingsFacebookArgs : Pulumi.ResourceArgs
    {
        [Input("appId", required: true)]
        public Input<string> AppId { get; set; } = null!;

        [Input("appSecret", required: true)]
        public Input<string> AppSecret { get; set; } = null!;

        [Input("oauthScopes")]
        private InputList<string>? _oauthScopes;
        public InputList<string> OauthScopes
        {
            get => _oauthScopes ?? (_oauthScopes = new InputList<string>());
            set => _oauthScopes = value;
        }

        public FunctionAppAuthSettingsFacebookArgs()
        {
        }
    }

    public sealed class FunctionAppAuthSettingsFacebookGetArgs : Pulumi.ResourceArgs
    {
        [Input("appId", required: true)]
        public Input<string> AppId { get; set; } = null!;

        [Input("appSecret", required: true)]
        public Input<string> AppSecret { get; set; } = null!;

        [Input("oauthScopes")]
        private InputList<string>? _oauthScopes;
        public InputList<string> OauthScopes
        {
            get => _oauthScopes ?? (_oauthScopes = new InputList<string>());
            set => _oauthScopes = value;
        }

        public FunctionAppAuthSettingsFacebookGetArgs()
        {
        }
    }

    public sealed class FunctionAppAuthSettingsGetArgs : Pulumi.ResourceArgs
    {
        [Input("activeDirectory")]
        public Input<FunctionAppAuthSettingsActiveDirectoryGetArgs>? ActiveDirectory { get; set; }

        [Input("additionalLoginParams")]
        private InputMap<string>? _additionalLoginParams;
        public InputMap<string> AdditionalLoginParams
        {
            get => _additionalLoginParams ?? (_additionalLoginParams = new InputMap<string>());
            set => _additionalLoginParams = value;
        }

        [Input("allowedExternalRedirectUrls")]
        private InputList<string>? _allowedExternalRedirectUrls;
        public InputList<string> AllowedExternalRedirectUrls
        {
            get => _allowedExternalRedirectUrls ?? (_allowedExternalRedirectUrls = new InputList<string>());
            set => _allowedExternalRedirectUrls = value;
        }

        [Input("defaultProvider")]
        public Input<string>? DefaultProvider { get; set; }

        /// <summary>
        /// Is the Function App enabled?
        /// </summary>
        [Input("enabled", required: true)]
        public Input<bool> Enabled { get; set; } = null!;

        [Input("facebook")]
        public Input<FunctionAppAuthSettingsFacebookGetArgs>? Facebook { get; set; }

        [Input("google")]
        public Input<FunctionAppAuthSettingsGoogleGetArgs>? Google { get; set; }

        [Input("issuer")]
        public Input<string>? Issuer { get; set; }

        [Input("microsoft")]
        public Input<FunctionAppAuthSettingsMicrosoftGetArgs>? Microsoft { get; set; }

        [Input("runtimeVersion")]
        public Input<string>? RuntimeVersion { get; set; }

        [Input("tokenRefreshExtensionHours")]
        public Input<double>? TokenRefreshExtensionHours { get; set; }

        [Input("tokenStoreEnabled")]
        public Input<bool>? TokenStoreEnabled { get; set; }

        [Input("twitter")]
        public Input<FunctionAppAuthSettingsTwitterGetArgs>? Twitter { get; set; }

        [Input("unauthenticatedClientAction")]
        public Input<string>? UnauthenticatedClientAction { get; set; }

        public FunctionAppAuthSettingsGetArgs()
        {
        }
    }

    public sealed class FunctionAppAuthSettingsGoogleArgs : Pulumi.ResourceArgs
    {
        [Input("clientId", required: true)]
        public Input<string> ClientId { get; set; } = null!;

        [Input("clientSecret", required: true)]
        public Input<string> ClientSecret { get; set; } = null!;

        [Input("oauthScopes")]
        private InputList<string>? _oauthScopes;
        public InputList<string> OauthScopes
        {
            get => _oauthScopes ?? (_oauthScopes = new InputList<string>());
            set => _oauthScopes = value;
        }

        public FunctionAppAuthSettingsGoogleArgs()
        {
        }
    }

    public sealed class FunctionAppAuthSettingsGoogleGetArgs : Pulumi.ResourceArgs
    {
        [Input("clientId", required: true)]
        public Input<string> ClientId { get; set; } = null!;

        [Input("clientSecret", required: true)]
        public Input<string> ClientSecret { get; set; } = null!;

        [Input("oauthScopes")]
        private InputList<string>? _oauthScopes;
        public InputList<string> OauthScopes
        {
            get => _oauthScopes ?? (_oauthScopes = new InputList<string>());
            set => _oauthScopes = value;
        }

        public FunctionAppAuthSettingsGoogleGetArgs()
        {
        }
    }

    public sealed class FunctionAppAuthSettingsMicrosoftArgs : Pulumi.ResourceArgs
    {
        [Input("clientId", required: true)]
        public Input<string> ClientId { get; set; } = null!;

        [Input("clientSecret", required: true)]
        public Input<string> ClientSecret { get; set; } = null!;

        [Input("oauthScopes")]
        private InputList<string>? _oauthScopes;
        public InputList<string> OauthScopes
        {
            get => _oauthScopes ?? (_oauthScopes = new InputList<string>());
            set => _oauthScopes = value;
        }

        public FunctionAppAuthSettingsMicrosoftArgs()
        {
        }
    }

    public sealed class FunctionAppAuthSettingsMicrosoftGetArgs : Pulumi.ResourceArgs
    {
        [Input("clientId", required: true)]
        public Input<string> ClientId { get; set; } = null!;

        [Input("clientSecret", required: true)]
        public Input<string> ClientSecret { get; set; } = null!;

        [Input("oauthScopes")]
        private InputList<string>? _oauthScopes;
        public InputList<string> OauthScopes
        {
            get => _oauthScopes ?? (_oauthScopes = new InputList<string>());
            set => _oauthScopes = value;
        }

        public FunctionAppAuthSettingsMicrosoftGetArgs()
        {
        }
    }

    public sealed class FunctionAppAuthSettingsTwitterArgs : Pulumi.ResourceArgs
    {
        [Input("consumerKey", required: true)]
        public Input<string> ConsumerKey { get; set; } = null!;

        [Input("consumerSecret", required: true)]
        public Input<string> ConsumerSecret { get; set; } = null!;

        public FunctionAppAuthSettingsTwitterArgs()
        {
        }
    }

    public sealed class FunctionAppAuthSettingsTwitterGetArgs : Pulumi.ResourceArgs
    {
        [Input("consumerKey", required: true)]
        public Input<string> ConsumerKey { get; set; } = null!;

        [Input("consumerSecret", required: true)]
        public Input<string> ConsumerSecret { get; set; } = null!;

        public FunctionAppAuthSettingsTwitterGetArgs()
        {
        }
    }

    public sealed class FunctionAppConnectionStringsArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the Connection String.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// The type of the Connection String. Possible values are `APIHub`, `Custom`, `DocDb`, `EventHub`, `MySQL`, `NotificationHub`, `PostgreSQL`, `RedisCache`, `ServiceBus`, `SQLAzure` and  `SQLServer`.
        /// </summary>
        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        /// <summary>
        /// The value for the Connection String.
        /// </summary>
        [Input("value", required: true)]
        public Input<string> Value { get; set; } = null!;

        public FunctionAppConnectionStringsArgs()
        {
        }
    }

    public sealed class FunctionAppConnectionStringsGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the Connection String.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// The type of the Connection String. Possible values are `APIHub`, `Custom`, `DocDb`, `EventHub`, `MySQL`, `NotificationHub`, `PostgreSQL`, `RedisCache`, `ServiceBus`, `SQLAzure` and  `SQLServer`.
        /// </summary>
        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        /// <summary>
        /// The value for the Connection String.
        /// </summary>
        [Input("value", required: true)]
        public Input<string> Value { get; set; } = null!;

        public FunctionAppConnectionStringsGetArgs()
        {
        }
    }

    public sealed class FunctionAppIdentityArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The Principal ID for the Service Principal associated with the Managed Service Identity of this App Service.
        /// </summary>
        [Input("principalId")]
        public Input<string>? PrincipalId { get; set; }

        /// <summary>
        /// The Tenant ID for the Service Principal associated with the Managed Service Identity of this App Service.
        /// </summary>
        [Input("tenantId")]
        public Input<string>? TenantId { get; set; }

        /// <summary>
        /// The type of the Connection String. Possible values are `APIHub`, `Custom`, `DocDb`, `EventHub`, `MySQL`, `NotificationHub`, `PostgreSQL`, `RedisCache`, `ServiceBus`, `SQLAzure` and  `SQLServer`.
        /// </summary>
        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        public FunctionAppIdentityArgs()
        {
        }
    }

    public sealed class FunctionAppIdentityGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The Principal ID for the Service Principal associated with the Managed Service Identity of this App Service.
        /// </summary>
        [Input("principalId")]
        public Input<string>? PrincipalId { get; set; }

        /// <summary>
        /// The Tenant ID for the Service Principal associated with the Managed Service Identity of this App Service.
        /// </summary>
        [Input("tenantId")]
        public Input<string>? TenantId { get; set; }

        /// <summary>
        /// The type of the Connection String. Possible values are `APIHub`, `Custom`, `DocDb`, `EventHub`, `MySQL`, `NotificationHub`, `PostgreSQL`, `RedisCache`, `ServiceBus`, `SQLAzure` and  `SQLServer`.
        /// </summary>
        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        public FunctionAppIdentityGetArgs()
        {
        }
    }

    public sealed class FunctionAppSiteConfigArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Should the Function App be loaded at all times? Defaults to `false`.
        /// </summary>
        [Input("alwaysOn")]
        public Input<bool>? AlwaysOn { get; set; }

        /// <summary>
        /// A `cors` block as defined below.
        /// </summary>
        [Input("cors")]
        public Input<FunctionAppSiteConfigCorsArgs>? Cors { get; set; }

        /// <summary>
        /// Specifies whether or not the http2 protocol should be enabled. Defaults to `false`.
        /// </summary>
        [Input("http2Enabled")]
        public Input<bool>? Http2Enabled { get; set; }

        /// <summary>
        /// Linux App Framework and version for the AppService, e.g. `DOCKER|(golang:latest)`.
        /// </summary>
        [Input("linuxFxVersion")]
        public Input<string>? LinuxFxVersion { get; set; }

        /// <summary>
        /// Should the Function App run in 32 bit mode, rather than 64 bit mode? Defaults to `true`.
        /// </summary>
        [Input("use32BitWorkerProcess")]
        public Input<bool>? Use32BitWorkerProcess { get; set; }

        /// <summary>
        /// The name of the Virtual Network which this App Service should be attached to.
        /// </summary>
        [Input("virtualNetworkName")]
        public Input<string>? VirtualNetworkName { get; set; }

        /// <summary>
        /// Should WebSockets be enabled?
        /// </summary>
        [Input("websocketsEnabled")]
        public Input<bool>? WebsocketsEnabled { get; set; }

        public FunctionAppSiteConfigArgs()
        {
        }
    }

    public sealed class FunctionAppSiteConfigCorsArgs : Pulumi.ResourceArgs
    {
        [Input("allowedOrigins", required: true)]
        private InputList<string>? _allowedOrigins;
        public InputList<string> AllowedOrigins
        {
            get => _allowedOrigins ?? (_allowedOrigins = new InputList<string>());
            set => _allowedOrigins = value;
        }

        [Input("supportCredentials")]
        public Input<bool>? SupportCredentials { get; set; }

        public FunctionAppSiteConfigCorsArgs()
        {
        }
    }

    public sealed class FunctionAppSiteConfigCorsGetArgs : Pulumi.ResourceArgs
    {
        [Input("allowedOrigins", required: true)]
        private InputList<string>? _allowedOrigins;
        public InputList<string> AllowedOrigins
        {
            get => _allowedOrigins ?? (_allowedOrigins = new InputList<string>());
            set => _allowedOrigins = value;
        }

        [Input("supportCredentials")]
        public Input<bool>? SupportCredentials { get; set; }

        public FunctionAppSiteConfigCorsGetArgs()
        {
        }
    }

    public sealed class FunctionAppSiteConfigGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Should the Function App be loaded at all times? Defaults to `false`.
        /// </summary>
        [Input("alwaysOn")]
        public Input<bool>? AlwaysOn { get; set; }

        /// <summary>
        /// A `cors` block as defined below.
        /// </summary>
        [Input("cors")]
        public Input<FunctionAppSiteConfigCorsGetArgs>? Cors { get; set; }

        /// <summary>
        /// Specifies whether or not the http2 protocol should be enabled. Defaults to `false`.
        /// </summary>
        [Input("http2Enabled")]
        public Input<bool>? Http2Enabled { get; set; }

        /// <summary>
        /// Linux App Framework and version for the AppService, e.g. `DOCKER|(golang:latest)`.
        /// </summary>
        [Input("linuxFxVersion")]
        public Input<string>? LinuxFxVersion { get; set; }

        /// <summary>
        /// Should the Function App run in 32 bit mode, rather than 64 bit mode? Defaults to `true`.
        /// </summary>
        [Input("use32BitWorkerProcess")]
        public Input<bool>? Use32BitWorkerProcess { get; set; }

        /// <summary>
        /// The name of the Virtual Network which this App Service should be attached to.
        /// </summary>
        [Input("virtualNetworkName")]
        public Input<string>? VirtualNetworkName { get; set; }

        /// <summary>
        /// Should WebSockets be enabled?
        /// </summary>
        [Input("websocketsEnabled")]
        public Input<bool>? WebsocketsEnabled { get; set; }

        public FunctionAppSiteConfigGetArgs()
        {
        }
    }

    public sealed class FunctionAppSiteCredentialGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The password associated with the username, which can be used to publish to this App Service.
        /// </summary>
        [Input("password")]
        public Input<string>? Password { get; set; }

        /// <summary>
        /// The username which can be used to publish to this App Service
        /// </summary>
        [Input("username")]
        public Input<string>? Username { get; set; }

        public FunctionAppSiteCredentialGetArgs()
        {
        }
    }
    }

    namespace Outputs
    {

    [OutputType]
    public sealed class FunctionAppAuthSettings
    {
        public readonly FunctionAppAuthSettingsActiveDirectory? ActiveDirectory;
        public readonly ImmutableDictionary<string, string>? AdditionalLoginParams;
        public readonly ImmutableArray<string> AllowedExternalRedirectUrls;
        public readonly string? DefaultProvider;
        /// <summary>
        /// Is the Function App enabled?
        /// </summary>
        public readonly bool Enabled;
        public readonly FunctionAppAuthSettingsFacebook? Facebook;
        public readonly FunctionAppAuthSettingsGoogle? Google;
        public readonly string? Issuer;
        public readonly FunctionAppAuthSettingsMicrosoft? Microsoft;
        public readonly string? RuntimeVersion;
        public readonly double? TokenRefreshExtensionHours;
        public readonly bool? TokenStoreEnabled;
        public readonly FunctionAppAuthSettingsTwitter? Twitter;
        public readonly string? UnauthenticatedClientAction;

        [OutputConstructor]
        private FunctionAppAuthSettings(
            FunctionAppAuthSettingsActiveDirectory? activeDirectory,
            ImmutableDictionary<string, string>? additionalLoginParams,
            ImmutableArray<string> allowedExternalRedirectUrls,
            string? defaultProvider,
            bool enabled,
            FunctionAppAuthSettingsFacebook? facebook,
            FunctionAppAuthSettingsGoogle? google,
            string? issuer,
            FunctionAppAuthSettingsMicrosoft? microsoft,
            string? runtimeVersion,
            double? tokenRefreshExtensionHours,
            bool? tokenStoreEnabled,
            FunctionAppAuthSettingsTwitter? twitter,
            string? unauthenticatedClientAction)
        {
            ActiveDirectory = activeDirectory;
            AdditionalLoginParams = additionalLoginParams;
            AllowedExternalRedirectUrls = allowedExternalRedirectUrls;
            DefaultProvider = defaultProvider;
            Enabled = enabled;
            Facebook = facebook;
            Google = google;
            Issuer = issuer;
            Microsoft = microsoft;
            RuntimeVersion = runtimeVersion;
            TokenRefreshExtensionHours = tokenRefreshExtensionHours;
            TokenStoreEnabled = tokenStoreEnabled;
            Twitter = twitter;
            UnauthenticatedClientAction = unauthenticatedClientAction;
        }
    }

    [OutputType]
    public sealed class FunctionAppAuthSettingsActiveDirectory
    {
        public readonly ImmutableArray<string> AllowedAudiences;
        public readonly string ClientId;
        public readonly string? ClientSecret;

        [OutputConstructor]
        private FunctionAppAuthSettingsActiveDirectory(
            ImmutableArray<string> allowedAudiences,
            string clientId,
            string? clientSecret)
        {
            AllowedAudiences = allowedAudiences;
            ClientId = clientId;
            ClientSecret = clientSecret;
        }
    }

    [OutputType]
    public sealed class FunctionAppAuthSettingsFacebook
    {
        public readonly string AppId;
        public readonly string AppSecret;
        public readonly ImmutableArray<string> OauthScopes;

        [OutputConstructor]
        private FunctionAppAuthSettingsFacebook(
            string appId,
            string appSecret,
            ImmutableArray<string> oauthScopes)
        {
            AppId = appId;
            AppSecret = appSecret;
            OauthScopes = oauthScopes;
        }
    }

    [OutputType]
    public sealed class FunctionAppAuthSettingsGoogle
    {
        public readonly string ClientId;
        public readonly string ClientSecret;
        public readonly ImmutableArray<string> OauthScopes;

        [OutputConstructor]
        private FunctionAppAuthSettingsGoogle(
            string clientId,
            string clientSecret,
            ImmutableArray<string> oauthScopes)
        {
            ClientId = clientId;
            ClientSecret = clientSecret;
            OauthScopes = oauthScopes;
        }
    }

    [OutputType]
    public sealed class FunctionAppAuthSettingsMicrosoft
    {
        public readonly string ClientId;
        public readonly string ClientSecret;
        public readonly ImmutableArray<string> OauthScopes;

        [OutputConstructor]
        private FunctionAppAuthSettingsMicrosoft(
            string clientId,
            string clientSecret,
            ImmutableArray<string> oauthScopes)
        {
            ClientId = clientId;
            ClientSecret = clientSecret;
            OauthScopes = oauthScopes;
        }
    }

    [OutputType]
    public sealed class FunctionAppAuthSettingsTwitter
    {
        public readonly string ConsumerKey;
        public readonly string ConsumerSecret;

        [OutputConstructor]
        private FunctionAppAuthSettingsTwitter(
            string consumerKey,
            string consumerSecret)
        {
            ConsumerKey = consumerKey;
            ConsumerSecret = consumerSecret;
        }
    }

    [OutputType]
    public sealed class FunctionAppConnectionStrings
    {
        /// <summary>
        /// The name of the Connection String.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The type of the Connection String. Possible values are `APIHub`, `Custom`, `DocDb`, `EventHub`, `MySQL`, `NotificationHub`, `PostgreSQL`, `RedisCache`, `ServiceBus`, `SQLAzure` and  `SQLServer`.
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// The value for the Connection String.
        /// </summary>
        public readonly string Value;

        [OutputConstructor]
        private FunctionAppConnectionStrings(
            string name,
            string type,
            string value)
        {
            Name = name;
            Type = type;
            Value = value;
        }
    }

    [OutputType]
    public sealed class FunctionAppIdentity
    {
        /// <summary>
        /// The Principal ID for the Service Principal associated with the Managed Service Identity of this App Service.
        /// </summary>
        public readonly string PrincipalId;
        /// <summary>
        /// The Tenant ID for the Service Principal associated with the Managed Service Identity of this App Service.
        /// </summary>
        public readonly string TenantId;
        /// <summary>
        /// The type of the Connection String. Possible values are `APIHub`, `Custom`, `DocDb`, `EventHub`, `MySQL`, `NotificationHub`, `PostgreSQL`, `RedisCache`, `ServiceBus`, `SQLAzure` and  `SQLServer`.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private FunctionAppIdentity(
            string principalId,
            string tenantId,
            string type)
        {
            PrincipalId = principalId;
            TenantId = tenantId;
            Type = type;
        }
    }

    [OutputType]
    public sealed class FunctionAppSiteConfig
    {
        /// <summary>
        /// Should the Function App be loaded at all times? Defaults to `false`.
        /// </summary>
        public readonly bool? AlwaysOn;
        /// <summary>
        /// A `cors` block as defined below.
        /// </summary>
        public readonly FunctionAppSiteConfigCors Cors;
        /// <summary>
        /// Specifies whether or not the http2 protocol should be enabled. Defaults to `false`.
        /// </summary>
        public readonly bool? Http2Enabled;
        /// <summary>
        /// Linux App Framework and version for the AppService, e.g. `DOCKER|(golang:latest)`.
        /// </summary>
        public readonly string LinuxFxVersion;
        /// <summary>
        /// Should the Function App run in 32 bit mode, rather than 64 bit mode? Defaults to `true`.
        /// </summary>
        public readonly bool? Use32BitWorkerProcess;
        /// <summary>
        /// The name of the Virtual Network which this App Service should be attached to.
        /// </summary>
        public readonly string? VirtualNetworkName;
        /// <summary>
        /// Should WebSockets be enabled?
        /// </summary>
        public readonly bool? WebsocketsEnabled;

        [OutputConstructor]
        private FunctionAppSiteConfig(
            bool? alwaysOn,
            FunctionAppSiteConfigCors cors,
            bool? http2Enabled,
            string linuxFxVersion,
            bool? use32BitWorkerProcess,
            string? virtualNetworkName,
            bool? websocketsEnabled)
        {
            AlwaysOn = alwaysOn;
            Cors = cors;
            Http2Enabled = http2Enabled;
            LinuxFxVersion = linuxFxVersion;
            Use32BitWorkerProcess = use32BitWorkerProcess;
            VirtualNetworkName = virtualNetworkName;
            WebsocketsEnabled = websocketsEnabled;
        }
    }

    [OutputType]
    public sealed class FunctionAppSiteConfigCors
    {
        public readonly ImmutableArray<string> AllowedOrigins;
        public readonly bool? SupportCredentials;

        [OutputConstructor]
        private FunctionAppSiteConfigCors(
            ImmutableArray<string> allowedOrigins,
            bool? supportCredentials)
        {
            AllowedOrigins = allowedOrigins;
            SupportCredentials = supportCredentials;
        }
    }

    [OutputType]
    public sealed class FunctionAppSiteCredential
    {
        /// <summary>
        /// The password associated with the username, which can be used to publish to this App Service.
        /// </summary>
        public readonly string Password;
        /// <summary>
        /// The username which can be used to publish to this App Service
        /// </summary>
        public readonly string Username;

        [OutputConstructor]
        private FunctionAppSiteCredential(
            string password,
            string username)
        {
            Password = password;
            Username = username;
        }
    }
    }
}
