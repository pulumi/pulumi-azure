// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.ChaosStudio.Inputs
{

    public sealed class ExperimentStepBranchActionGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The type of action that should be added to the experiment. Possible values are `Continuous`, `Delay` and `Discrete`.
        /// </summary>
        [Input("actionType", required: true)]
        public Input<string> ActionType { get; set; } = null!;

        /// <summary>
        /// An ISO8601 formatted string specifying the duration for a `Delay` or `Continuous` action.
        /// </summary>
        [Input("duration")]
        public Input<string>? Duration { get; set; }

        [Input("parameters")]
        private InputMap<string>? _parameters;

        /// <summary>
        /// A key-value map of additional parameters to configure the action. The values that are accepted by this depend on the `Urn` i.e. the capability/fault that is applied. Possible parameter values can be found in this [documentation](https://learn.microsoft.com/azure/chaos-studio/chaos-studio-fault-library)
        /// </summary>
        public InputMap<string> Parameters
        {
            get => _parameters ?? (_parameters = new InputMap<string>());
            set => _parameters = value;
        }

        /// <summary>
        /// The name of the Selector to which this action should apply to. This must be specified if the `ActionType` is `Continuous` or `Discrete`.
        /// </summary>
        [Input("selectorName")]
        public Input<string>? SelectorName { get; set; }

        /// <summary>
        /// The Unique Resource Name of the action, this value is provided by the `azure.chaosstudio.Capability` resource e.g. `azurerm_chaos_studio_capability.example.urn`. This must be specified if the `ActionType` is `Continuous` or `Discrete`.
        /// </summary>
        [Input("urn")]
        public Input<string>? Urn { get; set; }

        public ExperimentStepBranchActionGetArgs()
        {
        }
        public static new ExperimentStepBranchActionGetArgs Empty => new ExperimentStepBranchActionGetArgs();
    }
}
