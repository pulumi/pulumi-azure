// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Cdn.Inputs
{

    public sealed class FrontdoorRuleConditionsSocketAddressConditionArgs : global::Pulumi.ResourceArgs
    {
        [Input("matchValues")]
        private InputList<string>? _matchValues;

        /// <summary>
        /// Specify one or more IP address ranges. If multiple IP address ranges are specified, they're evaluated using `OR` logic.
        /// 
        /// -&gt;**NOTE:** See the `Specifying IP Address Ranges` section below on how to correctly define the `match_values` field.
        /// </summary>
        public InputList<string> MatchValues
        {
            get => _matchValues ?? (_matchValues = new InputList<string>());
            set => _matchValues = value;
        }

        /// <summary>
        /// If `true` operator becomes the opposite of its value. Possible values `true` or `false`. Defaults to `false`. Details can be found in the `Condition Operator List` below.
        /// </summary>
        [Input("negateCondition")]
        public Input<bool>? NegateCondition { get; set; }

        /// <summary>
        /// The type of match. The Possible values are `IpMatch` or `Any`. Defaults to `IPMatch`.
        /// 
        /// -&gt;**NOTE:** If the value of the `operator` field is set to `IpMatch` then the `match_values` field is also required.
        /// </summary>
        [Input("operator")]
        public Input<string>? Operator { get; set; }

        public FrontdoorRuleConditionsSocketAddressConditionArgs()
        {
        }
        public static new FrontdoorRuleConditionsSocketAddressConditionArgs Empty => new FrontdoorRuleConditionsSocketAddressConditionArgs();
    }
}
