// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Cdn.Inputs
{

    public sealed class FrontdoorRuleConditionsGetArgs : global::Pulumi.ResourceArgs
    {
        [Input("clientPortConditions")]
        private InputList<Inputs.FrontdoorRuleConditionsClientPortConditionGetArgs>? _clientPortConditions;

        /// <summary>
        /// A `ClientPortCondition` block as defined below.
        /// </summary>
        public InputList<Inputs.FrontdoorRuleConditionsClientPortConditionGetArgs> ClientPortConditions
        {
            get => _clientPortConditions ?? (_clientPortConditions = new InputList<Inputs.FrontdoorRuleConditionsClientPortConditionGetArgs>());
            set => _clientPortConditions = value;
        }

        [Input("cookiesConditions")]
        private InputList<Inputs.FrontdoorRuleConditionsCookiesConditionGetArgs>? _cookiesConditions;

        /// <summary>
        /// A `CookiesCondition` block as defined below.
        /// </summary>
        public InputList<Inputs.FrontdoorRuleConditionsCookiesConditionGetArgs> CookiesConditions
        {
            get => _cookiesConditions ?? (_cookiesConditions = new InputList<Inputs.FrontdoorRuleConditionsCookiesConditionGetArgs>());
            set => _cookiesConditions = value;
        }

        [Input("hostNameConditions")]
        private InputList<Inputs.FrontdoorRuleConditionsHostNameConditionGetArgs>? _hostNameConditions;

        /// <summary>
        /// A `HostNameCondition` block as defined below.
        /// </summary>
        public InputList<Inputs.FrontdoorRuleConditionsHostNameConditionGetArgs> HostNameConditions
        {
            get => _hostNameConditions ?? (_hostNameConditions = new InputList<Inputs.FrontdoorRuleConditionsHostNameConditionGetArgs>());
            set => _hostNameConditions = value;
        }

        [Input("httpVersionConditions")]
        private InputList<Inputs.FrontdoorRuleConditionsHttpVersionConditionGetArgs>? _httpVersionConditions;

        /// <summary>
        /// A `HttpVersionCondition` block as defined below.
        /// </summary>
        public InputList<Inputs.FrontdoorRuleConditionsHttpVersionConditionGetArgs> HttpVersionConditions
        {
            get => _httpVersionConditions ?? (_httpVersionConditions = new InputList<Inputs.FrontdoorRuleConditionsHttpVersionConditionGetArgs>());
            set => _httpVersionConditions = value;
        }

        [Input("isDeviceConditions")]
        private InputList<Inputs.FrontdoorRuleConditionsIsDeviceConditionGetArgs>? _isDeviceConditions;

        /// <summary>
        /// A `IsDeviceCondition` block as defined below.
        /// </summary>
        public InputList<Inputs.FrontdoorRuleConditionsIsDeviceConditionGetArgs> IsDeviceConditions
        {
            get => _isDeviceConditions ?? (_isDeviceConditions = new InputList<Inputs.FrontdoorRuleConditionsIsDeviceConditionGetArgs>());
            set => _isDeviceConditions = value;
        }

        [Input("postArgsConditions")]
        private InputList<Inputs.FrontdoorRuleConditionsPostArgsConditionGetArgs>? _postArgsConditions;

        /// <summary>
        /// A `PostArgsCondition` block as defined below.
        /// </summary>
        public InputList<Inputs.FrontdoorRuleConditionsPostArgsConditionGetArgs> PostArgsConditions
        {
            get => _postArgsConditions ?? (_postArgsConditions = new InputList<Inputs.FrontdoorRuleConditionsPostArgsConditionGetArgs>());
            set => _postArgsConditions = value;
        }

        [Input("queryStringConditions")]
        private InputList<Inputs.FrontdoorRuleConditionsQueryStringConditionGetArgs>? _queryStringConditions;

        /// <summary>
        /// A `QueryStringCondition` block as defined below.
        /// </summary>
        public InputList<Inputs.FrontdoorRuleConditionsQueryStringConditionGetArgs> QueryStringConditions
        {
            get => _queryStringConditions ?? (_queryStringConditions = new InputList<Inputs.FrontdoorRuleConditionsQueryStringConditionGetArgs>());
            set => _queryStringConditions = value;
        }

        [Input("remoteAddressConditions")]
        private InputList<Inputs.FrontdoorRuleConditionsRemoteAddressConditionGetArgs>? _remoteAddressConditions;

        /// <summary>
        /// A `RemoteAddressCondition` block as defined below.
        /// </summary>
        public InputList<Inputs.FrontdoorRuleConditionsRemoteAddressConditionGetArgs> RemoteAddressConditions
        {
            get => _remoteAddressConditions ?? (_remoteAddressConditions = new InputList<Inputs.FrontdoorRuleConditionsRemoteAddressConditionGetArgs>());
            set => _remoteAddressConditions = value;
        }

        [Input("requestBodyConditions")]
        private InputList<Inputs.FrontdoorRuleConditionsRequestBodyConditionGetArgs>? _requestBodyConditions;

        /// <summary>
        /// A `RequestBodyCondition` block as defined below.
        /// </summary>
        public InputList<Inputs.FrontdoorRuleConditionsRequestBodyConditionGetArgs> RequestBodyConditions
        {
            get => _requestBodyConditions ?? (_requestBodyConditions = new InputList<Inputs.FrontdoorRuleConditionsRequestBodyConditionGetArgs>());
            set => _requestBodyConditions = value;
        }

        [Input("requestHeaderConditions")]
        private InputList<Inputs.FrontdoorRuleConditionsRequestHeaderConditionGetArgs>? _requestHeaderConditions;

        /// <summary>
        /// A `RequestHeaderCondition` block as defined below.
        /// </summary>
        public InputList<Inputs.FrontdoorRuleConditionsRequestHeaderConditionGetArgs> RequestHeaderConditions
        {
            get => _requestHeaderConditions ?? (_requestHeaderConditions = new InputList<Inputs.FrontdoorRuleConditionsRequestHeaderConditionGetArgs>());
            set => _requestHeaderConditions = value;
        }

        [Input("requestMethodConditions")]
        private InputList<Inputs.FrontdoorRuleConditionsRequestMethodConditionGetArgs>? _requestMethodConditions;

        /// <summary>
        /// A `RequestMethodCondition` block as defined below.
        /// </summary>
        public InputList<Inputs.FrontdoorRuleConditionsRequestMethodConditionGetArgs> RequestMethodConditions
        {
            get => _requestMethodConditions ?? (_requestMethodConditions = new InputList<Inputs.FrontdoorRuleConditionsRequestMethodConditionGetArgs>());
            set => _requestMethodConditions = value;
        }

        [Input("requestSchemeConditions")]
        private InputList<Inputs.FrontdoorRuleConditionsRequestSchemeConditionGetArgs>? _requestSchemeConditions;

        /// <summary>
        /// A `RequestSchemeCondition` block as defined below.
        /// </summary>
        public InputList<Inputs.FrontdoorRuleConditionsRequestSchemeConditionGetArgs> RequestSchemeConditions
        {
            get => _requestSchemeConditions ?? (_requestSchemeConditions = new InputList<Inputs.FrontdoorRuleConditionsRequestSchemeConditionGetArgs>());
            set => _requestSchemeConditions = value;
        }

        [Input("requestUriConditions")]
        private InputList<Inputs.FrontdoorRuleConditionsRequestUriConditionGetArgs>? _requestUriConditions;

        /// <summary>
        /// A `RequestUriCondition` block as defined below.
        /// </summary>
        public InputList<Inputs.FrontdoorRuleConditionsRequestUriConditionGetArgs> RequestUriConditions
        {
            get => _requestUriConditions ?? (_requestUriConditions = new InputList<Inputs.FrontdoorRuleConditionsRequestUriConditionGetArgs>());
            set => _requestUriConditions = value;
        }

        [Input("serverPortConditions")]
        private InputList<Inputs.FrontdoorRuleConditionsServerPortConditionGetArgs>? _serverPortConditions;

        /// <summary>
        /// A `ServerPortCondition` block as defined below.
        /// </summary>
        public InputList<Inputs.FrontdoorRuleConditionsServerPortConditionGetArgs> ServerPortConditions
        {
            get => _serverPortConditions ?? (_serverPortConditions = new InputList<Inputs.FrontdoorRuleConditionsServerPortConditionGetArgs>());
            set => _serverPortConditions = value;
        }

        [Input("socketAddressConditions")]
        private InputList<Inputs.FrontdoorRuleConditionsSocketAddressConditionGetArgs>? _socketAddressConditions;

        /// <summary>
        /// A `SocketAddressCondition` block as defined below.
        /// </summary>
        public InputList<Inputs.FrontdoorRuleConditionsSocketAddressConditionGetArgs> SocketAddressConditions
        {
            get => _socketAddressConditions ?? (_socketAddressConditions = new InputList<Inputs.FrontdoorRuleConditionsSocketAddressConditionGetArgs>());
            set => _socketAddressConditions = value;
        }

        [Input("sslProtocolConditions")]
        private InputList<Inputs.FrontdoorRuleConditionsSslProtocolConditionGetArgs>? _sslProtocolConditions;

        /// <summary>
        /// A `SslProtocolCondition` block as defined below.
        /// </summary>
        public InputList<Inputs.FrontdoorRuleConditionsSslProtocolConditionGetArgs> SslProtocolConditions
        {
            get => _sslProtocolConditions ?? (_sslProtocolConditions = new InputList<Inputs.FrontdoorRuleConditionsSslProtocolConditionGetArgs>());
            set => _sslProtocolConditions = value;
        }

        [Input("urlFileExtensionConditions")]
        private InputList<Inputs.FrontdoorRuleConditionsUrlFileExtensionConditionGetArgs>? _urlFileExtensionConditions;

        /// <summary>
        /// A `UrlFileExtensionCondition` block as defined below.
        /// </summary>
        public InputList<Inputs.FrontdoorRuleConditionsUrlFileExtensionConditionGetArgs> UrlFileExtensionConditions
        {
            get => _urlFileExtensionConditions ?? (_urlFileExtensionConditions = new InputList<Inputs.FrontdoorRuleConditionsUrlFileExtensionConditionGetArgs>());
            set => _urlFileExtensionConditions = value;
        }

        [Input("urlFilenameConditions")]
        private InputList<Inputs.FrontdoorRuleConditionsUrlFilenameConditionGetArgs>? _urlFilenameConditions;

        /// <summary>
        /// A `UrlFilenameCondition` block as defined below.
        /// </summary>
        public InputList<Inputs.FrontdoorRuleConditionsUrlFilenameConditionGetArgs> UrlFilenameConditions
        {
            get => _urlFilenameConditions ?? (_urlFilenameConditions = new InputList<Inputs.FrontdoorRuleConditionsUrlFilenameConditionGetArgs>());
            set => _urlFilenameConditions = value;
        }

        [Input("urlPathConditions")]
        private InputList<Inputs.FrontdoorRuleConditionsUrlPathConditionGetArgs>? _urlPathConditions;

        /// <summary>
        /// A `UrlPathCondition` block as defined below.
        /// </summary>
        public InputList<Inputs.FrontdoorRuleConditionsUrlPathConditionGetArgs> UrlPathConditions
        {
            get => _urlPathConditions ?? (_urlPathConditions = new InputList<Inputs.FrontdoorRuleConditionsUrlPathConditionGetArgs>());
            set => _urlPathConditions = value;
        }

        public FrontdoorRuleConditionsGetArgs()
        {
        }
        public static new FrontdoorRuleConditionsGetArgs Empty => new FrontdoorRuleConditionsGetArgs();
    }
}
