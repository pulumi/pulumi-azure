// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Cdn
{
    /// <summary>
    /// Manages a CDN FrontDoor Origin Group.
    /// 
    /// ## Import
    /// 
    /// CDN FrontDoor Origin Groups can be imported using the `resource id`, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import azure:cdn/frontdoorOriginGroup:FrontdoorOriginGroup example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resourceGroup1/providers/Microsoft.Cdn/profiles/profile1/originGroups/originGroup1
    /// ```
    /// </summary>
    [AzureResourceType("azure:cdn/frontdoorOriginGroup:FrontdoorOriginGroup")]
    public partial class FrontdoorOriginGroup : Pulumi.CustomResource
    {
        /// <summary>
        /// The ID of the CDN FrontDoor Profile within which this CDN FrontDoor Origin Group should exist. Changing this forces a new CDN FrontDoor Origin Group to be created.
        /// </summary>
        [Output("cdnFrontdoorProfileId")]
        public Output<string> CdnFrontdoorProfileId { get; private set; } = null!;

        /// <summary>
        /// A `health_probe` block as defined below.
        /// </summary>
        [Output("healthProbe")]
        public Output<Outputs.FrontdoorOriginGroupHealthProbe?> HealthProbe { get; private set; } = null!;

        /// <summary>
        /// A `load_balancing` block as defined below.
        /// </summary>
        [Output("loadBalancing")]
        public Output<Outputs.FrontdoorOriginGroupLoadBalancing> LoadBalancing { get; private set; } = null!;

        /// <summary>
        /// The name which should be used for this CDN FrontDoor Origin Group. Changing this forces a new CDN FrontDoor Origin Group to be created.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Specifies the amount of time which should elapse before shifting traffic to another endpoint when a healthy endpoint becomes unhealthy or a new endpoint is added. Possible values are between `0` and `50` minutes (inclusive). Default is `10` minutes.
        /// </summary>
        [Output("restoreTrafficTimeToHealedOrNewEndpointInMinutes")]
        public Output<int?> RestoreTrafficTimeToHealedOrNewEndpointInMinutes { get; private set; } = null!;

        /// <summary>
        /// Specifies whether session affinity should be enabled on this host. Defaults to `true`.
        /// </summary>
        [Output("sessionAffinityEnabled")]
        public Output<bool?> SessionAffinityEnabled { get; private set; } = null!;


        /// <summary>
        /// Create a FrontdoorOriginGroup resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public FrontdoorOriginGroup(string name, FrontdoorOriginGroupArgs args, CustomResourceOptions? options = null)
            : base("azure:cdn/frontdoorOriginGroup:FrontdoorOriginGroup", name, args ?? new FrontdoorOriginGroupArgs(), MakeResourceOptions(options, ""))
        {
        }

        private FrontdoorOriginGroup(string name, Input<string> id, FrontdoorOriginGroupState? state = null, CustomResourceOptions? options = null)
            : base("azure:cdn/frontdoorOriginGroup:FrontdoorOriginGroup", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing FrontdoorOriginGroup resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static FrontdoorOriginGroup Get(string name, Input<string> id, FrontdoorOriginGroupState? state = null, CustomResourceOptions? options = null)
        {
            return new FrontdoorOriginGroup(name, id, state, options);
        }
    }

    public sealed class FrontdoorOriginGroupArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the CDN FrontDoor Profile within which this CDN FrontDoor Origin Group should exist. Changing this forces a new CDN FrontDoor Origin Group to be created.
        /// </summary>
        [Input("cdnFrontdoorProfileId", required: true)]
        public Input<string> CdnFrontdoorProfileId { get; set; } = null!;

        /// <summary>
        /// A `health_probe` block as defined below.
        /// </summary>
        [Input("healthProbe")]
        public Input<Inputs.FrontdoorOriginGroupHealthProbeArgs>? HealthProbe { get; set; }

        /// <summary>
        /// A `load_balancing` block as defined below.
        /// </summary>
        [Input("loadBalancing", required: true)]
        public Input<Inputs.FrontdoorOriginGroupLoadBalancingArgs> LoadBalancing { get; set; } = null!;

        /// <summary>
        /// The name which should be used for this CDN FrontDoor Origin Group. Changing this forces a new CDN FrontDoor Origin Group to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Specifies the amount of time which should elapse before shifting traffic to another endpoint when a healthy endpoint becomes unhealthy or a new endpoint is added. Possible values are between `0` and `50` minutes (inclusive). Default is `10` minutes.
        /// </summary>
        [Input("restoreTrafficTimeToHealedOrNewEndpointInMinutes")]
        public Input<int>? RestoreTrafficTimeToHealedOrNewEndpointInMinutes { get; set; }

        /// <summary>
        /// Specifies whether session affinity should be enabled on this host. Defaults to `true`.
        /// </summary>
        [Input("sessionAffinityEnabled")]
        public Input<bool>? SessionAffinityEnabled { get; set; }

        public FrontdoorOriginGroupArgs()
        {
        }
    }

    public sealed class FrontdoorOriginGroupState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the CDN FrontDoor Profile within which this CDN FrontDoor Origin Group should exist. Changing this forces a new CDN FrontDoor Origin Group to be created.
        /// </summary>
        [Input("cdnFrontdoorProfileId")]
        public Input<string>? CdnFrontdoorProfileId { get; set; }

        /// <summary>
        /// A `health_probe` block as defined below.
        /// </summary>
        [Input("healthProbe")]
        public Input<Inputs.FrontdoorOriginGroupHealthProbeGetArgs>? HealthProbe { get; set; }

        /// <summary>
        /// A `load_balancing` block as defined below.
        /// </summary>
        [Input("loadBalancing")]
        public Input<Inputs.FrontdoorOriginGroupLoadBalancingGetArgs>? LoadBalancing { get; set; }

        /// <summary>
        /// The name which should be used for this CDN FrontDoor Origin Group. Changing this forces a new CDN FrontDoor Origin Group to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Specifies the amount of time which should elapse before shifting traffic to another endpoint when a healthy endpoint becomes unhealthy or a new endpoint is added. Possible values are between `0` and `50` minutes (inclusive). Default is `10` minutes.
        /// </summary>
        [Input("restoreTrafficTimeToHealedOrNewEndpointInMinutes")]
        public Input<int>? RestoreTrafficTimeToHealedOrNewEndpointInMinutes { get; set; }

        /// <summary>
        /// Specifies whether session affinity should be enabled on this host. Defaults to `true`.
        /// </summary>
        [Input("sessionAffinityEnabled")]
        public Input<bool>? SessionAffinityEnabled { get; set; }

        public FrontdoorOriginGroupState()
        {
        }
    }
}
