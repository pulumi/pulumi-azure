// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Cdn
{
    /// <summary>
    /// Manages a Frontdoor Rule.
    /// 
    /// !&gt;**IMPORTANT:** The Rules resource **must** include a `depends_on` meta-argument which references the `azure.cdn.FrontdoorOrigin`, `azure.cdn.FrontdoorOriginGroup` and the `azure.cdn.FrontdoorRoute` that are associated with the Rule resource. The `azure.cdn.FrontdoorRoute` definition has been excluded from the below `Example Usage`, for brevity, but has been included in the `depends_on` meta-argument as an example of the correct way to define the `azure.cdn.FrontdoorRule` resource.
    /// 
    /// ## Specifying IP Address Ranges
    /// 
    /// When specifying IP address ranges in the `socket_address_condition` and the `remote_address_condition` `match_values` use the following format:
    /// 
    /// Use `CIDR` notation when specifying IP address blocks. This means that the syntax for an IP address block is the base IP address followed by a forward slash and the prefix size For example:
    /// 
    /// * `IPv4` example: `5.5.5.64/26` matches any requests that arrive from addresses `5.5.5.64` through `5.5.5.127`.
    /// * `IPv6` example: `1:2:3:/48` matches any requests that arrive from addresses `1:2:3:0:0:0:0:0` through `1:2:3:ffff:ffff:ffff:ffff:ffff`.
    /// 
    /// When you specify multiple IP addresses and IP address blocks, `OR` logic is applied.
    /// 
    /// * `IPv4` example: if you add two IP addresses `1.2.3.4` and `10.20.30.40`, the condition is matched for any requests that arrive from either address `1.2.3.4` or `10.20.30.40`.
    /// * `IPv6` example: if you add two IP addresses `1:2:3:4:5:6:7:8` and `10:20:30:40:50:60:70:80`, the condition is matched for any requests that arrive from either address `1:2:3:4:5:6:7:8` or `10:20:30:40:50:60:70:80`.
    /// 
    /// ***
    /// 
    /// ## Action Server Variables
    /// 
    /// Rule Set server variables provide access to structured information about the request. You can use server variables to dynamically change the request/response headers or URL rewrite paths/query strings, for example, when a new page load or when a form is posted.
    /// 
    /// ### Supported Action Server Variables
    /// 
    /// | Variable name | Description |
    /// |---------------|-------------|
    /// | `socket_ip`      | The IP address of the direct connection to Azure Front Door edge. If the client used an HTTP proxy or a load balancer to send the request, the value of `socket_ip` is the IP address of the proxy or load balancer. |
    /// | `client_ip`      | The IP address of the client that made the original request. If there was an `X-Forwarded-For` header in the request, then the client IP address is picked from the header. |
    /// | `client_port`    | The IP port of the client that made the request. |
    /// | `hostname`       | The host name in the request from the client. |
    /// | `geo_country`    | Indicates the requester's country/region of origin through its country/region code. |
    /// | `http_method`    | The method used to make the URL request, such as `GET` or `POST`. |
    /// | `http_version`   | The request protocol. Usually `HTTP/1.0`, `HTTP/1.1`, or `HTTP/2.0`. |
    /// | `query_string`   | The list of variable/value pairs that follows the "?" in the requested URL.&lt;br/&gt;For example, in the request `http://contoso.com:8080/article.aspx?id=123&amp;title=fabrikam`, the `query_string` value will be `id=123&amp;title=fabrikam`. |
    /// | `request_scheme` | The request scheme: `http` or `https`. |
    /// | `request_uri`    | The full original request URI (with arguments).&lt;br/&gt;For example, in the request `http://contoso.com:8080/article.aspx?id=123&amp;title=fabrikam`, the `request_uri` value will be `/article.aspx?id=123&amp;title=fabrikam`. |
    /// | `ssl_protocol`   | The protocol of an established TLS connection. |
    /// | `server_port`    | The port of the server that accepted a request. |
    /// | `url_path`       | Identifies the specific resource in the host that the web client wants to access. This is the part of the request URI without the arguments.&lt;br/&gt;For example, in the request `http://contoso.com:8080/article.aspx?id=123&amp;title=fabrikam`, the `uri_path` value will be `/article.aspx`. |
    /// 
    /// ### Action Server Variable Format
    /// 
    /// Server variables can be specified using the following formats:
    /// 
    /// * `{variable}` - Include the entire server variable. For example, if the client IP address is `111.222.333.444` then the `{client_ip}` token would evaluate to `111.222.333.444`.
    /// 
    /// * `{variable:offset}` - Include the server variable after a specific offset, until the end of the variable. The offset is zero-based. For example, if the client IP address is `111.222.333.444` then the `{client_ip:3}` token would evaluate to `.222.333.444`.
    /// 
    /// * `{variable:offset:length}` - Include the server variable after a specific offset, up to the specified length. The offset is zero-based. For example, if the client IP address is `111.222.333.444` then the `{client_ip:4:3}` token would evaluate to `222`.
    /// 
    /// ### Action Server Variables Support
    /// 
    /// Action Server variables are supported on the following actions:
    /// 
    /// * `route_configuration_override_action`
    /// * `request_header_action`
    /// * `response_header_action`
    /// * `url_redirect_action`
    /// * `url_rewrite_action`
    /// 
    /// ***
    /// 
    /// ## Condition Operator list
    /// 
    /// For rules that accept values from the standard operator list, the following operators are valid:
    /// 
    /// | Operator                   | Description | Condition Value |
    /// |----------------------------|-------------|-----------------|
    /// | Any                        |Matches when there is any value, regardless of what it is. | Any |
    /// | Equal                      | Matches when the value exactly matches the specified string. | Equal |
    /// | Contains                   | Matches when the value contains the specified string. | Contains |
    /// | Less Than                  | Matches when the length of the value is less than the specified integer. | LessThan |
    /// | Greater Than               | Matches when the length of the value is greater than the specified integer. | GreaterThan |
    /// | Less Than or Equal         | Matches when the length of the value is less than or equal to the specified integer. | LessThanOrEqual |
    /// | Greater Than or Equal      | Matches when the length of the value is greater than or equal to the specified integer. | GreaterThanOrEqual |
    /// | Begins With                | Matches when the value begins with the specified string. | BeginsWith |
    /// | Ends With                  | Matches when the value ends with the specified string. | EndsWith |
    /// | RegEx                      | Matches when the value matches the specified regular expression. See below for further details. | RegEx |
    /// | Not Any                    | Matches when there is no value. | Any and negateCondition = true |
    /// | Not Equal                  | Matches when the value does not match the specified string. | Equal and negateCondition : true |
    /// | Not Contains               | Matches when the value does not contain the specified string. | Contains and negateCondition = true |
    /// | Not Less Than              | Matches when the length of the value is not less than the specified integer. | LessThan and negateCondition = true |
    /// | Not Greater Than           | Matches when the length of the value is not greater than the specified integer. | GreaterThan and negateCondition = true |
    /// | Not Less Than or Equal     | Matches when the length of the value is not less than or equal to the specified integer. | LessThanOrEqual and negateCondition = true |
    /// | Not Greater Than or Equals | Matches when the length of the value is not greater than or equal to the specified integer. | GreaterThanOrEqual and negateCondition = true |
    /// | Not Begins With            | Matches when the value does not begin with the specified string. | BeginsWith and negateCondition = true |
    /// | Not Ends With              | Matches when the value does not end with the specified string. | EndsWith and negateCondition = true |
    /// | Not RegEx                  | Matches when the value does not match the specified regular expression. See `Condition Regular Expressions` for further details. | RegEx and negateCondition = true |
    /// 
    /// ***
    /// 
    /// ## Condition Regular Expressions
    /// 
    /// Regular expressions **don't** support the following operations:
    /// 
    /// * Backreferences and capturing subexpressions.
    /// * Arbitrary zero-width assertions.
    /// * Subroutine references and recursive patterns.
    /// * Conditional patterns.
    /// * Backtracking control verbs.
    /// * The `\C` single-byte directive.
    /// * The `\R` newline match directive.
    /// * The `\K` start of match reset directive.
    /// * Callouts and embedded code.
    /// * Atomic grouping and possessive quantifiers.
    /// 
    /// ***
    /// 
    /// ## Condition Transform List
    /// 
    /// For rules that can transform strings, the following transforms are valid:
    /// 
    /// | Transform   | Description |
    /// |-------------|-------------|
    /// | Lowercase   | Converts the string to the lowercase representation. |
    /// | Uppercase   | Converts the string to the uppercase representation. |
    /// | Trim        | Trims leading and trailing whitespace from the string. |
    /// | RemoveNulls | Removes null values from the string. |
    /// | URLEncode   | URL-encodes the string. |
    /// | URLDecode   | URL-decodes the string. |
    /// 
    /// ***
    /// 
    /// ## Import
    /// 
    /// cdn Rules can be imported using the `resource id`, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import azure:cdn/frontdoorRule:FrontdoorRule example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resourceGroup1/providers/Microsoft.Cdn/profiles/profile1/ruleSets/ruleSet1/rules/rule1
    /// ```
    /// </summary>
    [AzureResourceType("azure:cdn/frontdoorRule:FrontdoorRule")]
    public partial class FrontdoorRule : global::Pulumi.CustomResource
    {
        /// <summary>
        /// An `actions` block as defined below.
        /// </summary>
        [Output("actions")]
        public Output<Outputs.FrontdoorRuleActions> Actions { get; private set; } = null!;

        /// <summary>
        /// If this rule is a match should the rules engine continue processing the remaining rules or stop? Possible values are `Continue` and `Stop`. Defaults to `Continue`.
        /// </summary>
        [Output("behaviorOnMatch")]
        public Output<string?> BehaviorOnMatch { get; private set; } = null!;

        /// <summary>
        /// The resource ID of the Frontdoor Rule Set for this Frontdoor Rule. Changing this forces a new Frontdoor Rule to be created.
        /// </summary>
        [Output("cdnFrontdoorRuleSetId")]
        public Output<string> CdnFrontdoorRuleSetId { get; private set; } = null!;

        /// <summary>
        /// The name of the Frontdoor Rule Set containing this Frontdoor Rule.
        /// </summary>
        [Output("cdnFrontdoorRuleSetName")]
        public Output<string> CdnFrontdoorRuleSetName { get; private set; } = null!;

        /// <summary>
        /// A `conditions` block as defined below.
        /// </summary>
        [Output("conditions")]
        public Output<Outputs.FrontdoorRuleConditions?> Conditions { get; private set; } = null!;

        /// <summary>
        /// The name which should be used for this Frontdoor Rule. Possible values must be between 1 and 260 characters in length, begin with a letter and may contain only letters and numbers. Changing this forces a new Frontdoor Rule to be created.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The order in which the rules will be applied for the Frontdoor Endpoint. The order value should be sequential and begin at `1`(e.g. `1`, `2`, `3`...). A Frontdoor Rule with a lesser order value will be applied before a rule with a greater order value.
        /// </summary>
        [Output("order")]
        public Output<int> Order { get; private set; } = null!;


        /// <summary>
        /// Create a FrontdoorRule resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public FrontdoorRule(string name, FrontdoorRuleArgs args, CustomResourceOptions? options = null)
            : base("azure:cdn/frontdoorRule:FrontdoorRule", name, args ?? new FrontdoorRuleArgs(), MakeResourceOptions(options, ""))
        {
        }

        private FrontdoorRule(string name, Input<string> id, FrontdoorRuleState? state = null, CustomResourceOptions? options = null)
            : base("azure:cdn/frontdoorRule:FrontdoorRule", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing FrontdoorRule resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static FrontdoorRule Get(string name, Input<string> id, FrontdoorRuleState? state = null, CustomResourceOptions? options = null)
        {
            return new FrontdoorRule(name, id, state, options);
        }
    }

    public sealed class FrontdoorRuleArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// An `actions` block as defined below.
        /// </summary>
        [Input("actions", required: true)]
        public Input<Inputs.FrontdoorRuleActionsArgs> Actions { get; set; } = null!;

        /// <summary>
        /// If this rule is a match should the rules engine continue processing the remaining rules or stop? Possible values are `Continue` and `Stop`. Defaults to `Continue`.
        /// </summary>
        [Input("behaviorOnMatch")]
        public Input<string>? BehaviorOnMatch { get; set; }

        /// <summary>
        /// The resource ID of the Frontdoor Rule Set for this Frontdoor Rule. Changing this forces a new Frontdoor Rule to be created.
        /// </summary>
        [Input("cdnFrontdoorRuleSetId", required: true)]
        public Input<string> CdnFrontdoorRuleSetId { get; set; } = null!;

        /// <summary>
        /// A `conditions` block as defined below.
        /// </summary>
        [Input("conditions")]
        public Input<Inputs.FrontdoorRuleConditionsArgs>? Conditions { get; set; }

        /// <summary>
        /// The name which should be used for this Frontdoor Rule. Possible values must be between 1 and 260 characters in length, begin with a letter and may contain only letters and numbers. Changing this forces a new Frontdoor Rule to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The order in which the rules will be applied for the Frontdoor Endpoint. The order value should be sequential and begin at `1`(e.g. `1`, `2`, `3`...). A Frontdoor Rule with a lesser order value will be applied before a rule with a greater order value.
        /// </summary>
        [Input("order", required: true)]
        public Input<int> Order { get; set; } = null!;

        public FrontdoorRuleArgs()
        {
        }
        public static new FrontdoorRuleArgs Empty => new FrontdoorRuleArgs();
    }

    public sealed class FrontdoorRuleState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// An `actions` block as defined below.
        /// </summary>
        [Input("actions")]
        public Input<Inputs.FrontdoorRuleActionsGetArgs>? Actions { get; set; }

        /// <summary>
        /// If this rule is a match should the rules engine continue processing the remaining rules or stop? Possible values are `Continue` and `Stop`. Defaults to `Continue`.
        /// </summary>
        [Input("behaviorOnMatch")]
        public Input<string>? BehaviorOnMatch { get; set; }

        /// <summary>
        /// The resource ID of the Frontdoor Rule Set for this Frontdoor Rule. Changing this forces a new Frontdoor Rule to be created.
        /// </summary>
        [Input("cdnFrontdoorRuleSetId")]
        public Input<string>? CdnFrontdoorRuleSetId { get; set; }

        /// <summary>
        /// The name of the Frontdoor Rule Set containing this Frontdoor Rule.
        /// </summary>
        [Input("cdnFrontdoorRuleSetName")]
        public Input<string>? CdnFrontdoorRuleSetName { get; set; }

        /// <summary>
        /// A `conditions` block as defined below.
        /// </summary>
        [Input("conditions")]
        public Input<Inputs.FrontdoorRuleConditionsGetArgs>? Conditions { get; set; }

        /// <summary>
        /// The name which should be used for this Frontdoor Rule. Possible values must be between 1 and 260 characters in length, begin with a letter and may contain only letters and numbers. Changing this forces a new Frontdoor Rule to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The order in which the rules will be applied for the Frontdoor Endpoint. The order value should be sequential and begin at `1`(e.g. `1`, `2`, `3`...). A Frontdoor Rule with a lesser order value will be applied before a rule with a greater order value.
        /// </summary>
        [Input("order")]
        public Input<int>? Order { get; set; }

        public FrontdoorRuleState()
        {
        }
        public static new FrontdoorRuleState Empty => new FrontdoorRuleState();
    }
}
