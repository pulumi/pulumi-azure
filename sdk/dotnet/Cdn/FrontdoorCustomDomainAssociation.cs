// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Cdn
{
    /// <summary>
    /// Manages the association between a Front Door (standard/premium) Custom Domain and one or more Front Door (standard/premium) Routes.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Azure = Pulumi.Azure;
    /// using Std = Pulumi.Std;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Azure.Core.ResourceGroup("example", new()
    ///     {
    ///         Name = "example-cdn-frontdoor",
    ///         Location = "West Europe",
    ///     });
    /// 
    ///     var exampleZone = new Azure.Dns.Zone("example", new()
    ///     {
    ///         Name = "domain.com",
    ///         ResourceGroupName = example.Name,
    ///     });
    /// 
    ///     var exampleFrontdoorProfile = new Azure.Cdn.FrontdoorProfile("example", new()
    ///     {
    ///         Name = "example-profile",
    ///         ResourceGroupName = example.Name,
    ///         SkuName = "Standard_AzureFrontDoor",
    ///     });
    /// 
    ///     var exampleFrontdoorOriginGroup = new Azure.Cdn.FrontdoorOriginGroup("example", new()
    ///     {
    ///         Name = "example-origin-group",
    ///         CdnFrontdoorProfileId = exampleFrontdoorProfile.Id,
    ///         SessionAffinityEnabled = true,
    ///         RestoreTrafficTimeToHealedOrNewEndpointInMinutes = 10,
    ///         HealthProbe = new Azure.Cdn.Inputs.FrontdoorOriginGroupHealthProbeArgs
    ///         {
    ///             IntervalInSeconds = 240,
    ///             Path = "/healthProbe",
    ///             Protocol = "Https",
    ///             RequestType = "HEAD",
    ///         },
    ///         LoadBalancing = new Azure.Cdn.Inputs.FrontdoorOriginGroupLoadBalancingArgs
    ///         {
    ///             AdditionalLatencyInMilliseconds = 0,
    ///             SampleSize = 16,
    ///             SuccessfulSamplesRequired = 3,
    ///         },
    ///     });
    /// 
    ///     var exampleFrontdoorOrigin = new Azure.Cdn.FrontdoorOrigin("example", new()
    ///     {
    ///         Name = "example-origin",
    ///         CdnFrontdoorOriginGroupId = exampleFrontdoorOriginGroup.Id,
    ///         Enabled = true,
    ///         CertificateNameCheckEnabled = false,
    ///         HostName = "contoso.com",
    ///         HttpPort = 80,
    ///         HttpsPort = 443,
    ///         OriginHostHeader = "www.contoso.com",
    ///         Priority = 1,
    ///         Weight = 1,
    ///     });
    /// 
    ///     var exampleFrontdoorEndpoint = new Azure.Cdn.FrontdoorEndpoint("example", new()
    ///     {
    ///         Name = "example-endpoint",
    ///         CdnFrontdoorProfileId = exampleFrontdoorProfile.Id,
    ///     });
    /// 
    ///     var exampleFrontdoorRuleSet = new Azure.Cdn.FrontdoorRuleSet("example", new()
    ///     {
    ///         Name = "ExampleRuleSet",
    ///         CdnFrontdoorProfileId = exampleFrontdoorProfile.Id,
    ///     });
    /// 
    ///     var exampleFrontdoorCustomDomain = new Azure.Cdn.FrontdoorCustomDomain("example", new()
    ///     {
    ///         Name = "example-customDomain",
    ///         CdnFrontdoorProfileId = exampleFrontdoorProfile.Id,
    ///         DnsZoneId = exampleZone.Id,
    ///         HostName = Std.Join.Invoke(new()
    ///         {
    ///             Separator = ".",
    ///             Input = new[]
    ///             {
    ///                 "contoso",
    ///                 exampleZone.Name,
    ///             },
    ///         }).Apply(invoke =&gt; invoke.Result),
    ///         Tls = new Azure.Cdn.Inputs.FrontdoorCustomDomainTlsArgs
    ///         {
    ///             CertificateType = "ManagedCertificate",
    ///             MinimumTlsVersion = "TLS12",
    ///         },
    ///     });
    /// 
    ///     var exampleFrontdoorRoute = new Azure.Cdn.FrontdoorRoute("example", new()
    ///     {
    ///         Name = "example-route",
    ///         CdnFrontdoorEndpointId = exampleFrontdoorEndpoint.Id,
    ///         CdnFrontdoorOriginGroupId = exampleFrontdoorOriginGroup.Id,
    ///         CdnFrontdoorOriginIds = new[]
    ///         {
    ///             exampleFrontdoorOrigin.Id,
    ///         },
    ///         CdnFrontdoorRuleSetIds = new[]
    ///         {
    ///             exampleFrontdoorRuleSet.Id,
    ///         },
    ///         Enabled = true,
    ///         ForwardingProtocol = "HttpsOnly",
    ///         HttpsRedirectEnabled = true,
    ///         PatternsToMatches = new[]
    ///         {
    ///             "/*",
    ///         },
    ///         SupportedProtocols = new[]
    ///         {
    ///             "Http",
    ///             "Https",
    ///         },
    ///         CdnFrontdoorCustomDomainIds = new[]
    ///         {
    ///             exampleFrontdoorCustomDomain.Id,
    ///         },
    ///         LinkToDefaultDomain = false,
    ///     });
    /// 
    ///     var exampleFrontdoorCustomDomainAssociation = new Azure.Cdn.FrontdoorCustomDomainAssociation("example", new()
    ///     {
    ///         CdnFrontdoorCustomDomainId = exampleFrontdoorCustomDomain.Id,
    ///         CdnFrontdoorRouteIds = new[]
    ///         {
    ///             exampleFrontdoorRoute.Id,
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Front Door Custom Domain Associations can be imported using the `resource id`, e.g.
    /// 
    /// ```sh
    /// $ pulumi import azure:cdn/frontdoorCustomDomainAssociation:FrontdoorCustomDomainAssociation example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resourceGroup1/providers/Microsoft.Cdn/profiles/profile1/associations/assoc1
    /// ```
    /// </summary>
    [AzureResourceType("azure:cdn/frontdoorCustomDomainAssociation:FrontdoorCustomDomainAssociation")]
    public partial class FrontdoorCustomDomainAssociation : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The ID of the Front Door Custom Domain that should be managed by the association resource. Changing this forces a new association resource to be created.
        /// </summary>
        [Output("cdnFrontdoorCustomDomainId")]
        public Output<string> CdnFrontdoorCustomDomainId { get; private set; } = null!;

        /// <summary>
        /// One or more IDs of the Front Door Route to which the Front Door Custom Domain is associated with.
        /// 
        /// &gt; **NOTE:** This should include all of the Front Door Route resources that the Front Door Custom Domain is associated with. If the list of Front Door Routes is not complete you will receive the service side error `This resource is still associated with a route. Please delete the association with the route first before deleting this resource` when you attempt to `destroy`/`delete` your Front Door Custom Domain.
        /// </summary>
        [Output("cdnFrontdoorRouteIds")]
        public Output<ImmutableArray<string>> CdnFrontdoorRouteIds { get; private set; } = null!;


        /// <summary>
        /// Create a FrontdoorCustomDomainAssociation resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public FrontdoorCustomDomainAssociation(string name, FrontdoorCustomDomainAssociationArgs args, CustomResourceOptions? options = null)
            : base("azure:cdn/frontdoorCustomDomainAssociation:FrontdoorCustomDomainAssociation", name, args ?? new FrontdoorCustomDomainAssociationArgs(), MakeResourceOptions(options, ""))
        {
        }

        private FrontdoorCustomDomainAssociation(string name, Input<string> id, FrontdoorCustomDomainAssociationState? state = null, CustomResourceOptions? options = null)
            : base("azure:cdn/frontdoorCustomDomainAssociation:FrontdoorCustomDomainAssociation", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing FrontdoorCustomDomainAssociation resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static FrontdoorCustomDomainAssociation Get(string name, Input<string> id, FrontdoorCustomDomainAssociationState? state = null, CustomResourceOptions? options = null)
        {
            return new FrontdoorCustomDomainAssociation(name, id, state, options);
        }
    }

    public sealed class FrontdoorCustomDomainAssociationArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the Front Door Custom Domain that should be managed by the association resource. Changing this forces a new association resource to be created.
        /// </summary>
        [Input("cdnFrontdoorCustomDomainId", required: true)]
        public Input<string> CdnFrontdoorCustomDomainId { get; set; } = null!;

        [Input("cdnFrontdoorRouteIds", required: true)]
        private InputList<string>? _cdnFrontdoorRouteIds;

        /// <summary>
        /// One or more IDs of the Front Door Route to which the Front Door Custom Domain is associated with.
        /// 
        /// &gt; **NOTE:** This should include all of the Front Door Route resources that the Front Door Custom Domain is associated with. If the list of Front Door Routes is not complete you will receive the service side error `This resource is still associated with a route. Please delete the association with the route first before deleting this resource` when you attempt to `destroy`/`delete` your Front Door Custom Domain.
        /// </summary>
        public InputList<string> CdnFrontdoorRouteIds
        {
            get => _cdnFrontdoorRouteIds ?? (_cdnFrontdoorRouteIds = new InputList<string>());
            set => _cdnFrontdoorRouteIds = value;
        }

        public FrontdoorCustomDomainAssociationArgs()
        {
        }
        public static new FrontdoorCustomDomainAssociationArgs Empty => new FrontdoorCustomDomainAssociationArgs();
    }

    public sealed class FrontdoorCustomDomainAssociationState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the Front Door Custom Domain that should be managed by the association resource. Changing this forces a new association resource to be created.
        /// </summary>
        [Input("cdnFrontdoorCustomDomainId")]
        public Input<string>? CdnFrontdoorCustomDomainId { get; set; }

        [Input("cdnFrontdoorRouteIds")]
        private InputList<string>? _cdnFrontdoorRouteIds;

        /// <summary>
        /// One or more IDs of the Front Door Route to which the Front Door Custom Domain is associated with.
        /// 
        /// &gt; **NOTE:** This should include all of the Front Door Route resources that the Front Door Custom Domain is associated with. If the list of Front Door Routes is not complete you will receive the service side error `This resource is still associated with a route. Please delete the association with the route first before deleting this resource` when you attempt to `destroy`/`delete` your Front Door Custom Domain.
        /// </summary>
        public InputList<string> CdnFrontdoorRouteIds
        {
            get => _cdnFrontdoorRouteIds ?? (_cdnFrontdoorRouteIds = new InputList<string>());
            set => _cdnFrontdoorRouteIds = value;
        }

        public FrontdoorCustomDomainAssociationState()
        {
        }
        public static new FrontdoorCustomDomainAssociationState Empty => new FrontdoorCustomDomainAssociationState();
    }
}
