// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Cdn.Outputs
{

    [OutputType]
    public sealed class FrontdoorRuleActionsUrlRedirectAction
    {
        /// <summary>
        /// The fragment to use in the redirect. The value must be a string between `0` and `1024` characters in length, leave blank to preserve the incoming fragment. Defaults to `""`.
        /// </summary>
        public readonly string? DestinationFragment;
        /// <summary>
        /// The host name you want the request to be redirected to. The value must be a string between `0` and `2048` characters in length, leave blank to preserve the incoming host.
        /// </summary>
        public readonly string DestinationHostname;
        /// <summary>
        /// The path to use in the redirect. The value must be a string and include the leading `/`, leave blank to preserve the incoming path. Defaults to `""`.
        /// </summary>
        public readonly string? DestinationPath;
        /// <summary>
        /// The query string used in the redirect URL. The value must be in the &amp;lt;key&gt;=&amp;lt;value&gt; or &amp;lt;key&gt;={`action_server_variable`} format and must not include the leading `?`, leave blank to preserve the incoming query string. Maximum allowed length for this field is `2048` characters. Defaults to `""`.
        /// </summary>
        public readonly string? QueryString;
        /// <summary>
        /// The protocol the request will be redirected as. Possible values include `MatchRequest`, `Http` or `Https`. Defaults to `MatchRequest`.
        /// </summary>
        public readonly string? RedirectProtocol;
        /// <summary>
        /// The response type to return to the requestor. Possible values include `Moved`, `Found` , `TemporaryRedirect` or `PermanentRedirect`.
        /// </summary>
        public readonly string RedirectType;

        [OutputConstructor]
        private FrontdoorRuleActionsUrlRedirectAction(
            string? destinationFragment,

            string destinationHostname,

            string? destinationPath,

            string? queryString,

            string? redirectProtocol,

            string redirectType)
        {
            DestinationFragment = destinationFragment;
            DestinationHostname = destinationHostname;
            DestinationPath = destinationPath;
            QueryString = queryString;
            RedirectProtocol = redirectProtocol;
            RedirectType = redirectType;
        }
    }
}
