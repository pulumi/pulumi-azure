// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Cdn.Outputs
{

    [OutputType]
    public sealed class FrontdoorRuleConditions
    {
        /// <summary>
        /// A `ClientPortCondition` block as defined below.
        /// </summary>
        public readonly ImmutableArray<Outputs.FrontdoorRuleConditionsClientPortCondition> ClientPortConditions;
        /// <summary>
        /// A `CookiesCondition` block as defined below.
        /// </summary>
        public readonly ImmutableArray<Outputs.FrontdoorRuleConditionsCookiesCondition> CookiesConditions;
        /// <summary>
        /// A `HostNameCondition` block as defined below.
        /// </summary>
        public readonly ImmutableArray<Outputs.FrontdoorRuleConditionsHostNameCondition> HostNameConditions;
        /// <summary>
        /// A `HttpVersionCondition` block as defined below.
        /// </summary>
        public readonly ImmutableArray<Outputs.FrontdoorRuleConditionsHttpVersionCondition> HttpVersionConditions;
        /// <summary>
        /// A `IsDeviceCondition` block as defined below.
        /// </summary>
        public readonly ImmutableArray<Outputs.FrontdoorRuleConditionsIsDeviceCondition> IsDeviceConditions;
        /// <summary>
        /// A `PostArgsCondition` block as defined below.
        /// </summary>
        public readonly ImmutableArray<Outputs.FrontdoorRuleConditionsPostArgsCondition> PostArgsConditions;
        /// <summary>
        /// A `QueryStringCondition` block as defined below.
        /// </summary>
        public readonly ImmutableArray<Outputs.FrontdoorRuleConditionsQueryStringCondition> QueryStringConditions;
        /// <summary>
        /// A `RemoteAddressCondition` block as defined below.
        /// </summary>
        public readonly ImmutableArray<Outputs.FrontdoorRuleConditionsRemoteAddressCondition> RemoteAddressConditions;
        /// <summary>
        /// A `RequestBodyCondition` block as defined below.
        /// </summary>
        public readonly ImmutableArray<Outputs.FrontdoorRuleConditionsRequestBodyCondition> RequestBodyConditions;
        /// <summary>
        /// A `RequestHeaderCondition` block as defined below.
        /// </summary>
        public readonly ImmutableArray<Outputs.FrontdoorRuleConditionsRequestHeaderCondition> RequestHeaderConditions;
        /// <summary>
        /// A `RequestMethodCondition` block as defined below.
        /// </summary>
        public readonly ImmutableArray<Outputs.FrontdoorRuleConditionsRequestMethodCondition> RequestMethodConditions;
        /// <summary>
        /// A `RequestSchemeCondition` block as defined below.
        /// </summary>
        public readonly ImmutableArray<Outputs.FrontdoorRuleConditionsRequestSchemeCondition> RequestSchemeConditions;
        /// <summary>
        /// A `RequestUriCondition` block as defined below.
        /// </summary>
        public readonly ImmutableArray<Outputs.FrontdoorRuleConditionsRequestUriCondition> RequestUriConditions;
        /// <summary>
        /// A `ServerPortCondition` block as defined below.
        /// </summary>
        public readonly ImmutableArray<Outputs.FrontdoorRuleConditionsServerPortCondition> ServerPortConditions;
        /// <summary>
        /// A `SocketAddressCondition` block as defined below.
        /// </summary>
        public readonly ImmutableArray<Outputs.FrontdoorRuleConditionsSocketAddressCondition> SocketAddressConditions;
        /// <summary>
        /// A `SslProtocolCondition` block as defined below.
        /// </summary>
        public readonly ImmutableArray<Outputs.FrontdoorRuleConditionsSslProtocolCondition> SslProtocolConditions;
        /// <summary>
        /// A `UrlFileExtensionCondition` block as defined below.
        /// </summary>
        public readonly ImmutableArray<Outputs.FrontdoorRuleConditionsUrlFileExtensionCondition> UrlFileExtensionConditions;
        /// <summary>
        /// A `UrlFilenameCondition` block as defined below.
        /// </summary>
        public readonly ImmutableArray<Outputs.FrontdoorRuleConditionsUrlFilenameCondition> UrlFilenameConditions;
        /// <summary>
        /// A `UrlPathCondition` block as defined below.
        /// </summary>
        public readonly ImmutableArray<Outputs.FrontdoorRuleConditionsUrlPathCondition> UrlPathConditions;

        [OutputConstructor]
        private FrontdoorRuleConditions(
            ImmutableArray<Outputs.FrontdoorRuleConditionsClientPortCondition> clientPortConditions,

            ImmutableArray<Outputs.FrontdoorRuleConditionsCookiesCondition> cookiesConditions,

            ImmutableArray<Outputs.FrontdoorRuleConditionsHostNameCondition> hostNameConditions,

            ImmutableArray<Outputs.FrontdoorRuleConditionsHttpVersionCondition> httpVersionConditions,

            ImmutableArray<Outputs.FrontdoorRuleConditionsIsDeviceCondition> isDeviceConditions,

            ImmutableArray<Outputs.FrontdoorRuleConditionsPostArgsCondition> postArgsConditions,

            ImmutableArray<Outputs.FrontdoorRuleConditionsQueryStringCondition> queryStringConditions,

            ImmutableArray<Outputs.FrontdoorRuleConditionsRemoteAddressCondition> remoteAddressConditions,

            ImmutableArray<Outputs.FrontdoorRuleConditionsRequestBodyCondition> requestBodyConditions,

            ImmutableArray<Outputs.FrontdoorRuleConditionsRequestHeaderCondition> requestHeaderConditions,

            ImmutableArray<Outputs.FrontdoorRuleConditionsRequestMethodCondition> requestMethodConditions,

            ImmutableArray<Outputs.FrontdoorRuleConditionsRequestSchemeCondition> requestSchemeConditions,

            ImmutableArray<Outputs.FrontdoorRuleConditionsRequestUriCondition> requestUriConditions,

            ImmutableArray<Outputs.FrontdoorRuleConditionsServerPortCondition> serverPortConditions,

            ImmutableArray<Outputs.FrontdoorRuleConditionsSocketAddressCondition> socketAddressConditions,

            ImmutableArray<Outputs.FrontdoorRuleConditionsSslProtocolCondition> sslProtocolConditions,

            ImmutableArray<Outputs.FrontdoorRuleConditionsUrlFileExtensionCondition> urlFileExtensionConditions,

            ImmutableArray<Outputs.FrontdoorRuleConditionsUrlFilenameCondition> urlFilenameConditions,

            ImmutableArray<Outputs.FrontdoorRuleConditionsUrlPathCondition> urlPathConditions)
        {
            ClientPortConditions = clientPortConditions;
            CookiesConditions = cookiesConditions;
            HostNameConditions = hostNameConditions;
            HttpVersionConditions = httpVersionConditions;
            IsDeviceConditions = isDeviceConditions;
            PostArgsConditions = postArgsConditions;
            QueryStringConditions = queryStringConditions;
            RemoteAddressConditions = remoteAddressConditions;
            RequestBodyConditions = requestBodyConditions;
            RequestHeaderConditions = requestHeaderConditions;
            RequestMethodConditions = requestMethodConditions;
            RequestSchemeConditions = requestSchemeConditions;
            RequestUriConditions = requestUriConditions;
            ServerPortConditions = serverPortConditions;
            SocketAddressConditions = socketAddressConditions;
            SslProtocolConditions = sslProtocolConditions;
            UrlFileExtensionConditions = urlFileExtensionConditions;
            UrlFilenameConditions = urlFilenameConditions;
            UrlPathConditions = urlPathConditions;
        }
    }
}
