// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Cdn
{
    public static class GetFrontdoorProfile
    {
        /// <summary>
        /// Use this data source to access information about an existing Front Door (standard/premium) Profile.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Azure = Pulumi.Azure;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Azure.Cdn.GetFrontdoorProfile.Invoke(new()
        ///     {
        ///         Name = "existing-cdn-profile",
        ///         ResourceGroupName = "existing-resources",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["frontDoorId"] = example.Apply(getFrontdoorProfileResult =&gt; getFrontdoorProfileResult.Id),
        ///         ["logScrubbingMatchVariable"] = example.Apply(getFrontdoorProfileResult =&gt; getFrontdoorProfileResult.LogScrubbingRules[0]?.MatchVariable),
        ///     };
        /// });
        /// ```
        /// 
        /// ## API Providers
        /// 
        /// &lt;!-- This section is generated, changes will be overwritten --&gt;
        /// This data source uses the following Azure API Providers:
        /// 
        /// * `Microsoft.Cdn` - 2024-02-01
        /// </summary>
        public static Task<GetFrontdoorProfileResult> InvokeAsync(GetFrontdoorProfileArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetFrontdoorProfileResult>("azure:cdn/getFrontdoorProfile:getFrontdoorProfile", args ?? new GetFrontdoorProfileArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to access information about an existing Front Door (standard/premium) Profile.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Azure = Pulumi.Azure;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Azure.Cdn.GetFrontdoorProfile.Invoke(new()
        ///     {
        ///         Name = "existing-cdn-profile",
        ///         ResourceGroupName = "existing-resources",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["frontDoorId"] = example.Apply(getFrontdoorProfileResult =&gt; getFrontdoorProfileResult.Id),
        ///         ["logScrubbingMatchVariable"] = example.Apply(getFrontdoorProfileResult =&gt; getFrontdoorProfileResult.LogScrubbingRules[0]?.MatchVariable),
        ///     };
        /// });
        /// ```
        /// 
        /// ## API Providers
        /// 
        /// &lt;!-- This section is generated, changes will be overwritten --&gt;
        /// This data source uses the following Azure API Providers:
        /// 
        /// * `Microsoft.Cdn` - 2024-02-01
        /// </summary>
        public static Output<GetFrontdoorProfileResult> Invoke(GetFrontdoorProfileInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetFrontdoorProfileResult>("azure:cdn/getFrontdoorProfile:getFrontdoorProfile", args ?? new GetFrontdoorProfileInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to access information about an existing Front Door (standard/premium) Profile.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Azure = Pulumi.Azure;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Azure.Cdn.GetFrontdoorProfile.Invoke(new()
        ///     {
        ///         Name = "existing-cdn-profile",
        ///         ResourceGroupName = "existing-resources",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["frontDoorId"] = example.Apply(getFrontdoorProfileResult =&gt; getFrontdoorProfileResult.Id),
        ///         ["logScrubbingMatchVariable"] = example.Apply(getFrontdoorProfileResult =&gt; getFrontdoorProfileResult.LogScrubbingRules[0]?.MatchVariable),
        ///     };
        /// });
        /// ```
        /// 
        /// ## API Providers
        /// 
        /// &lt;!-- This section is generated, changes will be overwritten --&gt;
        /// This data source uses the following Azure API Providers:
        /// 
        /// * `Microsoft.Cdn` - 2024-02-01
        /// </summary>
        public static Output<GetFrontdoorProfileResult> Invoke(GetFrontdoorProfileInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetFrontdoorProfileResult>("azure:cdn/getFrontdoorProfile:getFrontdoorProfile", args ?? new GetFrontdoorProfileInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetFrontdoorProfileArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Specifies the name of the Front Door Profile.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        /// <summary>
        /// The name of the Resource Group where this Front Door Profile exists.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetFrontdoorProfileArgs()
        {
        }
        public static new GetFrontdoorProfileArgs Empty => new GetFrontdoorProfileArgs();
    }

    public sealed class GetFrontdoorProfileInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Specifies the name of the Front Door Profile.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// The name of the Resource Group where this Front Door Profile exists.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetFrontdoorProfileInvokeArgs()
        {
        }
        public static new GetFrontdoorProfileInvokeArgs Empty => new GetFrontdoorProfileInvokeArgs();
    }


    [OutputType]
    public sealed class GetFrontdoorProfileResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// An `identity` block as defined below.
        /// </summary>
        public readonly Outputs.GetFrontdoorProfileIdentityResult Identity;
        /// <summary>
        /// One or more `log_scrubbing_rule` blocks as defined below.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetFrontdoorProfileLogScrubbingRuleResult> LogScrubbingRules;
        public readonly string Name;
        public readonly string ResourceGroupName;
        /// <summary>
        /// The UUID of the Front Door Profile which will be sent in the HTTP Header as the `X-Azure-FDID` attribute.
        /// </summary>
        public readonly string ResourceGuid;
        /// <summary>
        /// Specifies the maximum response timeout in seconds.
        /// </summary>
        public readonly int ResponseTimeoutSeconds;
        /// <summary>
        /// Specifies the SKU for this Front Door Profile.
        /// </summary>
        public readonly string SkuName;
        /// <summary>
        /// Specifies a mapping of Tags assigned to this Front Door Profile.
        /// </summary>
        public readonly ImmutableDictionary<string, string> Tags;

        [OutputConstructor]
        private GetFrontdoorProfileResult(
            string id,

            Outputs.GetFrontdoorProfileIdentityResult identity,

            ImmutableArray<Outputs.GetFrontdoorProfileLogScrubbingRuleResult> logScrubbingRules,

            string name,

            string resourceGroupName,

            string resourceGuid,

            int responseTimeoutSeconds,

            string skuName,

            ImmutableDictionary<string, string> tags)
        {
            Id = id;
            Identity = identity;
            LogScrubbingRules = logScrubbingRules;
            Name = name;
            ResourceGroupName = resourceGroupName;
            ResourceGuid = resourceGuid;
            ResponseTimeoutSeconds = responseTimeoutSeconds;
            SkuName = skuName;
            Tags = tags;
        }
    }
}
