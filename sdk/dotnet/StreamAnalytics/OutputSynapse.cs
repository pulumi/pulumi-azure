// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.StreamAnalytics
{
    /// <summary>
    /// Manages a Stream Analytics Output to an Azure Synapse Analytics Workspace.
    /// 
    /// ## Import
    /// 
    /// A Stream Analytics Output to an Azure Synapse Analytics Workspace can be imported using the `resource id`, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import azure:streamanalytics/outputSynapse:OutputSynapse example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.StreamAnalytics/streamingJobs/job1/outputs/output1
    /// ```
    /// </summary>
    [AzureResourceType("azure:streamanalytics/outputSynapse:OutputSynapse")]
    public partial class OutputSynapse : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The name of the Azure SQL database. Changing this forces a new resource to be created.
        /// </summary>
        [Output("database")]
        public Output<string> Database { get; private set; } = null!;

        /// <summary>
        /// The name of the Stream Output. Changing this forces a new resource to be created.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The password that will be used to connect to the Azure SQL database.
        /// </summary>
        [Output("password")]
        public Output<string> Password { get; private set; } = null!;

        /// <summary>
        /// The name of the Resource Group where the Stream Analytics Job exists. Changing this forces a new resource to be created.
        /// </summary>
        [Output("resourceGroupName")]
        public Output<string> ResourceGroupName { get; private set; } = null!;

        /// <summary>
        /// The name of the SQL server containing the Azure SQL database. Changing this forces a new resource to be created.
        /// </summary>
        [Output("server")]
        public Output<string> Server { get; private set; } = null!;

        /// <summary>
        /// The name of the Stream Analytics Job. Changing this forces a new resource to be created.
        /// </summary>
        [Output("streamAnalyticsJobName")]
        public Output<string> StreamAnalyticsJobName { get; private set; } = null!;

        /// <summary>
        /// The name of the table in the Azure SQL database. Changing this forces a new resource to be created.
        /// </summary>
        [Output("table")]
        public Output<string> Table { get; private set; } = null!;

        /// <summary>
        /// The user name that will be used to connect to the Azure SQL database. Changing this forces a new resource to be created.
        /// </summary>
        [Output("user")]
        public Output<string> User { get; private set; } = null!;


        /// <summary>
        /// Create a OutputSynapse resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public OutputSynapse(string name, OutputSynapseArgs args, CustomResourceOptions? options = null)
            : base("azure:streamanalytics/outputSynapse:OutputSynapse", name, args ?? new OutputSynapseArgs(), MakeResourceOptions(options, ""))
        {
        }

        private OutputSynapse(string name, Input<string> id, OutputSynapseState? state = null, CustomResourceOptions? options = null)
            : base("azure:streamanalytics/outputSynapse:OutputSynapse", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                AdditionalSecretOutputs =
                {
                    "password",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing OutputSynapse resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static OutputSynapse Get(string name, Input<string> id, OutputSynapseState? state = null, CustomResourceOptions? options = null)
        {
            return new OutputSynapse(name, id, state, options);
        }
    }

    public sealed class OutputSynapseArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the Azure SQL database. Changing this forces a new resource to be created.
        /// </summary>
        [Input("database", required: true)]
        public Input<string> Database { get; set; } = null!;

        /// <summary>
        /// The name of the Stream Output. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("password", required: true)]
        private Input<string>? _password;

        /// <summary>
        /// The password that will be used to connect to the Azure SQL database.
        /// </summary>
        public Input<string>? Password
        {
            get => _password;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _password = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// The name of the Resource Group where the Stream Analytics Job exists. Changing this forces a new resource to be created.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the SQL server containing the Azure SQL database. Changing this forces a new resource to be created.
        /// </summary>
        [Input("server", required: true)]
        public Input<string> Server { get; set; } = null!;

        /// <summary>
        /// The name of the Stream Analytics Job. Changing this forces a new resource to be created.
        /// </summary>
        [Input("streamAnalyticsJobName", required: true)]
        public Input<string> StreamAnalyticsJobName { get; set; } = null!;

        /// <summary>
        /// The name of the table in the Azure SQL database. Changing this forces a new resource to be created.
        /// </summary>
        [Input("table", required: true)]
        public Input<string> Table { get; set; } = null!;

        /// <summary>
        /// The user name that will be used to connect to the Azure SQL database. Changing this forces a new resource to be created.
        /// </summary>
        [Input("user", required: true)]
        public Input<string> User { get; set; } = null!;

        public OutputSynapseArgs()
        {
        }
        public static new OutputSynapseArgs Empty => new OutputSynapseArgs();
    }

    public sealed class OutputSynapseState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the Azure SQL database. Changing this forces a new resource to be created.
        /// </summary>
        [Input("database")]
        public Input<string>? Database { get; set; }

        /// <summary>
        /// The name of the Stream Output. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("password")]
        private Input<string>? _password;

        /// <summary>
        /// The password that will be used to connect to the Azure SQL database.
        /// </summary>
        public Input<string>? Password
        {
            get => _password;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _password = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// The name of the Resource Group where the Stream Analytics Job exists. Changing this forces a new resource to be created.
        /// </summary>
        [Input("resourceGroupName")]
        public Input<string>? ResourceGroupName { get; set; }

        /// <summary>
        /// The name of the SQL server containing the Azure SQL database. Changing this forces a new resource to be created.
        /// </summary>
        [Input("server")]
        public Input<string>? Server { get; set; }

        /// <summary>
        /// The name of the Stream Analytics Job. Changing this forces a new resource to be created.
        /// </summary>
        [Input("streamAnalyticsJobName")]
        public Input<string>? StreamAnalyticsJobName { get; set; }

        /// <summary>
        /// The name of the table in the Azure SQL database. Changing this forces a new resource to be created.
        /// </summary>
        [Input("table")]
        public Input<string>? Table { get; set; }

        /// <summary>
        /// The user name that will be used to connect to the Azure SQL database. Changing this forces a new resource to be created.
        /// </summary>
        [Input("user")]
        public Input<string>? User { get; set; }

        public OutputSynapseState()
        {
        }
        public static new OutputSynapseState Empty => new OutputSynapseState();
    }
}
