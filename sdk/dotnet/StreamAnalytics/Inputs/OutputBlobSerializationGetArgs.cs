// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.StreamAnalytics.Inputs
{

    public sealed class OutputBlobSerializationGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The encoding of the incoming data in the case of input and the encoding of outgoing data in the case of output. It currently can only be set to `UTF8`.
        /// 
        /// &gt; **Note:** This is required when `Type` is set to `Csv` or `Json`.
        /// </summary>
        [Input("encoding")]
        public Input<string>? Encoding { get; set; }

        /// <summary>
        /// The delimiter that will be used to separate comma-separated value (CSV) records. Possible values are ` ` (space), `,` (comma), `	` (tab), `|` (pipe) and `;`.
        /// 
        /// &gt; **Note:** This is required when `Type` is set to `Csv`.
        /// </summary>
        [Input("fieldDelimiter")]
        public Input<string>? FieldDelimiter { get; set; }

        /// <summary>
        /// Specifies the format of the JSON the output will be written in. Possible values are `Array` and `LineSeparated`.
        /// 
        /// &gt; **Note:** This is Required and can only be specified when `Type` is set to `Json`.
        /// </summary>
        [Input("format")]
        public Input<string>? Format { get; set; }

        /// <summary>
        /// The serialization format used for outgoing data streams. Possible values are `Avro`, `Csv`, `Json` and `Parquet`.
        /// 
        /// &gt; **Note:** `BatchMaxWaitTime` and `BatchMinRows` are required when `Type` is set to `Parquet`
        /// </summary>
        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        public OutputBlobSerializationGetArgs()
        {
        }
        public static new OutputBlobSerializationGetArgs Empty => new OutputBlobSerializationGetArgs();
    }
}
