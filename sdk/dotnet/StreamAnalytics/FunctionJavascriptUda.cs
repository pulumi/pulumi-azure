// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.StreamAnalytics
{
    /// <summary>
    /// Manages a JavaScript UDA Function within a Stream Analytics Streaming Job.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using Azure = Pulumi.Azure;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var exampleResourceGroup = Azure.Core.GetResourceGroup.Invoke(new()
    ///     {
    ///         Name = "example-resources",
    ///     });
    /// 
    ///     var exampleJob = Azure.StreamAnalytics.GetJob.Invoke(new()
    ///     {
    ///         Name = "example-job",
    ///         ResourceGroupName = exampleResourceGroup.Apply(getBudgetResourceGroupResult =&gt; getBudgetResourceGroupResult.Name),
    ///     });
    /// 
    ///     var exampleFunctionJavascriptUda = new Azure.StreamAnalytics.FunctionJavascriptUda("exampleFunctionJavascriptUda", new()
    ///     {
    ///         StreamAnalyticsJobId = exampleJob.Apply(getJobResult =&gt; getJobResult.Id),
    ///         Script = @"function main() {
    ///     this.init = function () {
    ///         this.state = 0;
    ///     }
    /// 
    ///     this.accumulate = function (value, timestamp) {
    ///         this.state += value;
    ///     }
    /// 
    ///     this.computeResult = function () {
    ///         return this.state;
    ///     }
    /// }
    /// ",
    ///         Inputs = new[]
    ///         {
    ///             new Azure.StreamAnalytics.Inputs.FunctionJavascriptUdaInputArgs
    ///             {
    ///                 Type = "bigint",
    ///             },
    ///         },
    ///         Output = new Azure.StreamAnalytics.Inputs.FunctionJavascriptUdaOutputArgs
    ///         {
    ///             Type = "bigint",
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Stream Analytics JavaScript UDA Functions can be imported using the `resource id`, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import azure:streamanalytics/functionJavascriptUda:FunctionJavascriptUda example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.StreamAnalytics/streamingjobs/job1/functions/func1
    /// ```
    /// </summary>
    [AzureResourceType("azure:streamanalytics/functionJavascriptUda:FunctionJavascriptUda")]
    public partial class FunctionJavascriptUda : global::Pulumi.CustomResource
    {
        /// <summary>
        /// One or more `input` blocks as defined below.
        /// </summary>
        [Output("inputs")]
        public Output<ImmutableArray<Outputs.FunctionJavascriptUdaInput>> Inputs { get; private set; } = null!;

        /// <summary>
        /// The name of the JavaScript UDA Function. Changing this forces a new resource to be created.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// An `output` block as defined below.
        /// </summary>
        [Output("output")]
        public Output<Outputs.FunctionJavascriptUdaOutput> Output { get; private set; } = null!;

        /// <summary>
        /// The JavaScript of this UDA Function.
        /// </summary>
        [Output("script")]
        public Output<string> Script { get; private set; } = null!;

        /// <summary>
        /// The resource ID of the Stream Analytics Job where this Function should be created. Changing this forces a new resource to be created.
        /// </summary>
        [Output("streamAnalyticsJobId")]
        public Output<string> StreamAnalyticsJobId { get; private set; } = null!;


        /// <summary>
        /// Create a FunctionJavascriptUda resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public FunctionJavascriptUda(string name, FunctionJavascriptUdaArgs args, CustomResourceOptions? options = null)
            : base("azure:streamanalytics/functionJavascriptUda:FunctionJavascriptUda", name, args ?? new FunctionJavascriptUdaArgs(), MakeResourceOptions(options, ""))
        {
        }

        private FunctionJavascriptUda(string name, Input<string> id, FunctionJavascriptUdaState? state = null, CustomResourceOptions? options = null)
            : base("azure:streamanalytics/functionJavascriptUda:FunctionJavascriptUda", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing FunctionJavascriptUda resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static FunctionJavascriptUda Get(string name, Input<string> id, FunctionJavascriptUdaState? state = null, CustomResourceOptions? options = null)
        {
            return new FunctionJavascriptUda(name, id, state, options);
        }
    }

    public sealed class FunctionJavascriptUdaArgs : global::Pulumi.ResourceArgs
    {
        [Input("inputs", required: true)]
        private InputList<Inputs.FunctionJavascriptUdaInputArgs>? _inputs;

        /// <summary>
        /// One or more `input` blocks as defined below.
        /// </summary>
        public InputList<Inputs.FunctionJavascriptUdaInputArgs> Inputs
        {
            get => _inputs ?? (_inputs = new InputList<Inputs.FunctionJavascriptUdaInputArgs>());
            set => _inputs = value;
        }

        /// <summary>
        /// The name of the JavaScript UDA Function. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// An `output` block as defined below.
        /// </summary>
        [Input("output", required: true)]
        public Input<Inputs.FunctionJavascriptUdaOutputArgs> Output { get; set; } = null!;

        /// <summary>
        /// The JavaScript of this UDA Function.
        /// </summary>
        [Input("script", required: true)]
        public Input<string> Script { get; set; } = null!;

        /// <summary>
        /// The resource ID of the Stream Analytics Job where this Function should be created. Changing this forces a new resource to be created.
        /// </summary>
        [Input("streamAnalyticsJobId", required: true)]
        public Input<string> StreamAnalyticsJobId { get; set; } = null!;

        public FunctionJavascriptUdaArgs()
        {
        }
        public static new FunctionJavascriptUdaArgs Empty => new FunctionJavascriptUdaArgs();
    }

    public sealed class FunctionJavascriptUdaState : global::Pulumi.ResourceArgs
    {
        [Input("inputs")]
        private InputList<Inputs.FunctionJavascriptUdaInputGetArgs>? _inputs;

        /// <summary>
        /// One or more `input` blocks as defined below.
        /// </summary>
        public InputList<Inputs.FunctionJavascriptUdaInputGetArgs> Inputs
        {
            get => _inputs ?? (_inputs = new InputList<Inputs.FunctionJavascriptUdaInputGetArgs>());
            set => _inputs = value;
        }

        /// <summary>
        /// The name of the JavaScript UDA Function. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// An `output` block as defined below.
        /// </summary>
        [Input("output")]
        public Input<Inputs.FunctionJavascriptUdaOutputGetArgs>? Output { get; set; }

        /// <summary>
        /// The JavaScript of this UDA Function.
        /// </summary>
        [Input("script")]
        public Input<string>? Script { get; set; }

        /// <summary>
        /// The resource ID of the Stream Analytics Job where this Function should be created. Changing this forces a new resource to be created.
        /// </summary>
        [Input("streamAnalyticsJobId")]
        public Input<string>? StreamAnalyticsJobId { get; set; }

        public FunctionJavascriptUdaState()
        {
        }
        public static new FunctionJavascriptUdaState Empty => new FunctionJavascriptUdaState();
    }
}
