// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.StreamAnalytics
{
    /// <summary>
    /// Manages a Stream Analytics Output Table.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using Azure = Pulumi.Azure;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var exampleResourceGroup = new Azure.Core.ResourceGroup("exampleResourceGroup", new()
    ///     {
    ///         Location = "West Europe",
    ///     });
    /// 
    ///     var exampleJob = Azure.StreamAnalytics.GetJob.Invoke(new()
    ///     {
    ///         Name = "example-job",
    ///         ResourceGroupName = exampleResourceGroup.Name,
    ///     });
    /// 
    ///     var exampleAccount = new Azure.Storage.Account("exampleAccount", new()
    ///     {
    ///         ResourceGroupName = exampleResourceGroup.Name,
    ///         Location = exampleResourceGroup.Location,
    ///         AccountTier = "Standard",
    ///         AccountReplicationType = "LRS",
    ///     });
    /// 
    ///     var exampleTable = new Azure.Storage.Table("exampleTable", new()
    ///     {
    ///         StorageAccountName = exampleAccount.Name,
    ///     });
    /// 
    ///     var exampleOutputTable = new Azure.StreamAnalytics.OutputTable("exampleOutputTable", new()
    ///     {
    ///         StreamAnalyticsJobName = exampleJob.Apply(getJobResult =&gt; getJobResult.Name),
    ///         ResourceGroupName = exampleJob.Apply(getJobResult =&gt; getJobResult.ResourceGroupName),
    ///         StorageAccountName = exampleAccount.Name,
    ///         StorageAccountKey = exampleAccount.PrimaryAccessKey,
    ///         Table = exampleTable.Name,
    ///         PartitionKey = "foo",
    ///         RowKey = "bar",
    ///         BatchSize = 100,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Stream Analytics Output to Table can be imported using the `resource id`, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import azure:streamanalytics/outputTable:OutputTable example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.StreamAnalytics/streamingjobs/job1/outputs/output1
    /// ```
    /// </summary>
    [AzureResourceType("azure:streamanalytics/outputTable:OutputTable")]
    public partial class OutputTable : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The number of records for a batch operation. Must be between `1` and `100`.
        /// </summary>
        [Output("batchSize")]
        public Output<int> BatchSize { get; private set; } = null!;

        /// <summary>
        /// A list of the column names to be removed from output event entities.
        /// </summary>
        [Output("columnsToRemoves")]
        public Output<ImmutableArray<string>> ColumnsToRemoves { get; private set; } = null!;

        /// <summary>
        /// The name of the Stream Output. Changing this forces a new resource to be created.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The name of the output column that contains the partition key.
        /// </summary>
        [Output("partitionKey")]
        public Output<string> PartitionKey { get; private set; } = null!;

        /// <summary>
        /// The name of the Resource Group where the Stream Analytics Job exists. Changing this forces a new resource to be created.
        /// </summary>
        [Output("resourceGroupName")]
        public Output<string> ResourceGroupName { get; private set; } = null!;

        /// <summary>
        /// The name of the output column that contains the row key.
        /// </summary>
        [Output("rowKey")]
        public Output<string> RowKey { get; private set; } = null!;

        /// <summary>
        /// The Access Key which should be used to connect to this Storage Account.
        /// </summary>
        [Output("storageAccountKey")]
        public Output<string> StorageAccountKey { get; private set; } = null!;

        /// <summary>
        /// The name of the Storage Account.
        /// </summary>
        [Output("storageAccountName")]
        public Output<string> StorageAccountName { get; private set; } = null!;

        /// <summary>
        /// The name of the Stream Analytics Job. Changing this forces a new resource to be created.
        /// </summary>
        [Output("streamAnalyticsJobName")]
        public Output<string> StreamAnalyticsJobName { get; private set; } = null!;

        /// <summary>
        /// The name of the table where the stream should be output to.
        /// </summary>
        [Output("table")]
        public Output<string> Table { get; private set; } = null!;


        /// <summary>
        /// Create a OutputTable resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public OutputTable(string name, OutputTableArgs args, CustomResourceOptions? options = null)
            : base("azure:streamanalytics/outputTable:OutputTable", name, args ?? new OutputTableArgs(), MakeResourceOptions(options, ""))
        {
        }

        private OutputTable(string name, Input<string> id, OutputTableState? state = null, CustomResourceOptions? options = null)
            : base("azure:streamanalytics/outputTable:OutputTable", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing OutputTable resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static OutputTable Get(string name, Input<string> id, OutputTableState? state = null, CustomResourceOptions? options = null)
        {
            return new OutputTable(name, id, state, options);
        }
    }

    public sealed class OutputTableArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The number of records for a batch operation. Must be between `1` and `100`.
        /// </summary>
        [Input("batchSize", required: true)]
        public Input<int> BatchSize { get; set; } = null!;

        [Input("columnsToRemoves")]
        private InputList<string>? _columnsToRemoves;

        /// <summary>
        /// A list of the column names to be removed from output event entities.
        /// </summary>
        public InputList<string> ColumnsToRemoves
        {
            get => _columnsToRemoves ?? (_columnsToRemoves = new InputList<string>());
            set => _columnsToRemoves = value;
        }

        /// <summary>
        /// The name of the Stream Output. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The name of the output column that contains the partition key.
        /// </summary>
        [Input("partitionKey", required: true)]
        public Input<string> PartitionKey { get; set; } = null!;

        /// <summary>
        /// The name of the Resource Group where the Stream Analytics Job exists. Changing this forces a new resource to be created.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the output column that contains the row key.
        /// </summary>
        [Input("rowKey", required: true)]
        public Input<string> RowKey { get; set; } = null!;

        /// <summary>
        /// The Access Key which should be used to connect to this Storage Account.
        /// </summary>
        [Input("storageAccountKey", required: true)]
        public Input<string> StorageAccountKey { get; set; } = null!;

        /// <summary>
        /// The name of the Storage Account.
        /// </summary>
        [Input("storageAccountName", required: true)]
        public Input<string> StorageAccountName { get; set; } = null!;

        /// <summary>
        /// The name of the Stream Analytics Job. Changing this forces a new resource to be created.
        /// </summary>
        [Input("streamAnalyticsJobName", required: true)]
        public Input<string> StreamAnalyticsJobName { get; set; } = null!;

        /// <summary>
        /// The name of the table where the stream should be output to.
        /// </summary>
        [Input("table", required: true)]
        public Input<string> Table { get; set; } = null!;

        public OutputTableArgs()
        {
        }
        public static new OutputTableArgs Empty => new OutputTableArgs();
    }

    public sealed class OutputTableState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The number of records for a batch operation. Must be between `1` and `100`.
        /// </summary>
        [Input("batchSize")]
        public Input<int>? BatchSize { get; set; }

        [Input("columnsToRemoves")]
        private InputList<string>? _columnsToRemoves;

        /// <summary>
        /// A list of the column names to be removed from output event entities.
        /// </summary>
        public InputList<string> ColumnsToRemoves
        {
            get => _columnsToRemoves ?? (_columnsToRemoves = new InputList<string>());
            set => _columnsToRemoves = value;
        }

        /// <summary>
        /// The name of the Stream Output. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The name of the output column that contains the partition key.
        /// </summary>
        [Input("partitionKey")]
        public Input<string>? PartitionKey { get; set; }

        /// <summary>
        /// The name of the Resource Group where the Stream Analytics Job exists. Changing this forces a new resource to be created.
        /// </summary>
        [Input("resourceGroupName")]
        public Input<string>? ResourceGroupName { get; set; }

        /// <summary>
        /// The name of the output column that contains the row key.
        /// </summary>
        [Input("rowKey")]
        public Input<string>? RowKey { get; set; }

        /// <summary>
        /// The Access Key which should be used to connect to this Storage Account.
        /// </summary>
        [Input("storageAccountKey")]
        public Input<string>? StorageAccountKey { get; set; }

        /// <summary>
        /// The name of the Storage Account.
        /// </summary>
        [Input("storageAccountName")]
        public Input<string>? StorageAccountName { get; set; }

        /// <summary>
        /// The name of the Stream Analytics Job. Changing this forces a new resource to be created.
        /// </summary>
        [Input("streamAnalyticsJobName")]
        public Input<string>? StreamAnalyticsJobName { get; set; }

        /// <summary>
        /// The name of the table where the stream should be output to.
        /// </summary>
        [Input("table")]
        public Input<string>? Table { get; set; }

        public OutputTableState()
        {
        }
        public static new OutputTableState Empty => new OutputTableState();
    }
}
