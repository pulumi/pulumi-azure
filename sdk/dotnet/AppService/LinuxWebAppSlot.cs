// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.AppService
{
    /// <summary>
    /// Manages a Linux Web App Slot.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using Azure = Pulumi.Azure;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var exampleResourceGroup = new Azure.Core.ResourceGroup("exampleResourceGroup", new()
    ///     {
    ///         Location = "West Europe",
    ///     });
    /// 
    ///     var exampleServicePlan = new Azure.AppService.ServicePlan("exampleServicePlan", new()
    ///     {
    ///         ResourceGroupName = exampleResourceGroup.Name,
    ///         Location = exampleResourceGroup.Location,
    ///         OsType = "Linux",
    ///         SkuName = "P1v2",
    ///     });
    /// 
    ///     var exampleLinuxWebApp = new Azure.AppService.LinuxWebApp("exampleLinuxWebApp", new()
    ///     {
    ///         ResourceGroupName = exampleResourceGroup.Name,
    ///         Location = exampleServicePlan.Location,
    ///         ServicePlanId = exampleServicePlan.Id,
    ///         SiteConfig = ,
    ///     });
    /// 
    ///     var exampleLinuxWebAppSlot = new Azure.AppService.LinuxWebAppSlot("exampleLinuxWebAppSlot", new()
    ///     {
    ///         AppServiceId = exampleLinuxWebApp.Id,
    ///         SiteConfig = ,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Linux Web Apps can be imported using the `resource id`, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import azure:appservice/linuxWebAppSlot:LinuxWebAppSlot example /subscriptions/12345678-1234-9876-4563-123456789012/resourceGroups/resGroup1/providers/Microsoft.Web/sites/site1/slots/slot1
    /// ```
    /// </summary>
    [AzureResourceType("azure:appservice/linuxWebAppSlot:LinuxWebAppSlot")]
    public partial class LinuxWebAppSlot : global::Pulumi.CustomResource
    {
        /// <summary>
        /// A `app_metadata` block as defined below.
        /// </summary>
        [Output("appMetadata")]
        public Output<ImmutableDictionary<string, string>> AppMetadata { get; private set; } = null!;

        /// <summary>
        /// The ID of the Linux Web App this Deployment Slot will be part of. Changing this forces a new Linux Web App to be created.
        /// </summary>
        [Output("appServiceId")]
        public Output<string> AppServiceId { get; private set; } = null!;

        /// <summary>
        /// A map of key-value pairs of App Settings.
        /// </summary>
        [Output("appSettings")]
        public Output<ImmutableDictionary<string, string>?> AppSettings { get; private set; } = null!;

        /// <summary>
        /// A `auth_settings` block as defined below.
        /// </summary>
        [Output("authSettings")]
        public Output<Outputs.LinuxWebAppSlotAuthSettings> AuthSettings { get; private set; } = null!;

        /// <summary>
        /// A `backup` block as defined below.
        /// </summary>
        [Output("backup")]
        public Output<Outputs.LinuxWebAppSlotBackup?> Backup { get; private set; } = null!;

        /// <summary>
        /// Should Client Affinity be enabled?
        /// </summary>
        [Output("clientAffinityEnabled")]
        public Output<bool?> ClientAffinityEnabled { get; private set; } = null!;

        /// <summary>
        /// Should Client Certificates be enabled?
        /// </summary>
        [Output("clientCertificateEnabled")]
        public Output<bool?> ClientCertificateEnabled { get; private set; } = null!;

        /// <summary>
        /// The Client Certificate mode. Possible values include `Optional` and `Required`. This property has no effect when `client_cert_enabled` is `false`
        /// </summary>
        [Output("clientCertificateMode")]
        public Output<string?> ClientCertificateMode { get; private set; } = null!;

        /// <summary>
        /// One or more `connection_string` blocks as defined below.
        /// </summary>
        [Output("connectionStrings")]
        public Output<ImmutableArray<Outputs.LinuxWebAppSlotConnectionString>> ConnectionStrings { get; private set; } = null!;

        /// <summary>
        /// The identifier used by App Service to perform domain ownership verification via DNS TXT record.
        /// </summary>
        [Output("customDomainVerificationId")]
        public Output<string> CustomDomainVerificationId { get; private set; } = null!;

        /// <summary>
        /// The default hostname of the Linux Web App.
        /// </summary>
        [Output("defaultHostname")]
        public Output<string> DefaultHostname { get; private set; } = null!;

        /// <summary>
        /// Should the Linux Web App be enabled? Defaults to `true`.
        /// </summary>
        [Output("enabled")]
        public Output<bool?> Enabled { get; private set; } = null!;

        /// <summary>
        /// Should the Linux Web App require HTTPS connections.
        /// </summary>
        [Output("httpsOnly")]
        public Output<bool?> HttpsOnly { get; private set; } = null!;

        /// <summary>
        /// An `identity` block as defined below.
        /// </summary>
        [Output("identity")]
        public Output<Outputs.LinuxWebAppSlotIdentity?> Identity { get; private set; } = null!;

        /// <summary>
        /// The User Assigned Identity ID used for accessing KeyVault secrets. The identity must be assigned to the application in the `identity` block. [For more information see - Access vaults with a user-assigned identity](https://docs.microsoft.com/azure/app-service/app-service-key-vault-references#access-vaults-with-a-user-assigned-identity)
        /// </summary>
        [Output("keyVaultReferenceIdentityId")]
        public Output<string> KeyVaultReferenceIdentityId { get; private set; } = null!;

        /// <summary>
        /// The Kind value for this Linux Web App.
        /// </summary>
        [Output("kind")]
        public Output<string> Kind { get; private set; } = null!;

        /// <summary>
        /// A `logs` block as defined below.
        /// </summary>
        [Output("logs")]
        public Output<Outputs.LinuxWebAppSlotLogs?> Logs { get; private set; } = null!;

        /// <summary>
        /// The name which should be used for this Linux Web App. Changing this forces a new Linux Web App to be created.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// A list of outbound IP addresses - such as `["52.23.25.3", "52.143.43.12"]`
        /// </summary>
        [Output("outboundIpAddressLists")]
        public Output<ImmutableArray<string>> OutboundIpAddressLists { get; private set; } = null!;

        /// <summary>
        /// A comma separated list of outbound IP addresses - such as `52.23.25.3,52.143.43.12`.
        /// </summary>
        [Output("outboundIpAddresses")]
        public Output<string> OutboundIpAddresses { get; private set; } = null!;

        /// <summary>
        /// A `possible_outbound_ip_address_list` block as defined below.
        /// </summary>
        [Output("possibleOutboundIpAddressLists")]
        public Output<ImmutableArray<string>> PossibleOutboundIpAddressLists { get; private set; } = null!;

        /// <summary>
        /// A comma separated list of outbound IP addresses - such as `52.23.25.3,52.143.43.12,52.143.43.17` - not all of which are necessarily in use. Superset of `outbound_ip_addresses`.
        /// </summary>
        [Output("possibleOutboundIpAddresses")]
        public Output<string> PossibleOutboundIpAddresses { get; private set; } = null!;

        /// <summary>
        /// A `site_config` block as defined below.
        /// </summary>
        [Output("siteConfig")]
        public Output<Outputs.LinuxWebAppSlotSiteConfig> SiteConfig { get; private set; } = null!;

        /// <summary>
        /// A `site_credential` block as defined below.
        /// </summary>
        [Output("siteCredentials")]
        public Output<ImmutableArray<Outputs.LinuxWebAppSlotSiteCredential>> SiteCredentials { get; private set; } = null!;

        /// <summary>
        /// One or more `storage_account` blocks as defined below.
        /// </summary>
        [Output("storageAccounts")]
        public Output<ImmutableArray<Outputs.LinuxWebAppSlotStorageAccount>> StorageAccounts { get; private set; } = null!;

        /// <summary>
        /// A mapping of tags which should be assigned to the Linux Web App.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// The subnet id which will be used by this Web App Slot for [regional virtual network integration](https://docs.microsoft.com/en-us/azure/app-service/overview-vnet-integration#regional-virtual-network-integration).
        /// </summary>
        [Output("virtualNetworkSubnetId")]
        public Output<string?> VirtualNetworkSubnetId { get; private set; } = null!;

        /// <summary>
        /// The local path and filename of the Zip packaged application to deploy to this Linux Web App.
        /// </summary>
        [Output("zipDeployFile")]
        public Output<string> ZipDeployFile { get; private set; } = null!;


        /// <summary>
        /// Create a LinuxWebAppSlot resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public LinuxWebAppSlot(string name, LinuxWebAppSlotArgs args, CustomResourceOptions? options = null)
            : base("azure:appservice/linuxWebAppSlot:LinuxWebAppSlot", name, args ?? new LinuxWebAppSlotArgs(), MakeResourceOptions(options, ""))
        {
        }

        private LinuxWebAppSlot(string name, Input<string> id, LinuxWebAppSlotState? state = null, CustomResourceOptions? options = null)
            : base("azure:appservice/linuxWebAppSlot:LinuxWebAppSlot", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing LinuxWebAppSlot resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static LinuxWebAppSlot Get(string name, Input<string> id, LinuxWebAppSlotState? state = null, CustomResourceOptions? options = null)
        {
            return new LinuxWebAppSlot(name, id, state, options);
        }
    }

    public sealed class LinuxWebAppSlotArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the Linux Web App this Deployment Slot will be part of. Changing this forces a new Linux Web App to be created.
        /// </summary>
        [Input("appServiceId", required: true)]
        public Input<string> AppServiceId { get; set; } = null!;

        [Input("appSettings")]
        private InputMap<string>? _appSettings;

        /// <summary>
        /// A map of key-value pairs of App Settings.
        /// </summary>
        public InputMap<string> AppSettings
        {
            get => _appSettings ?? (_appSettings = new InputMap<string>());
            set => _appSettings = value;
        }

        /// <summary>
        /// A `auth_settings` block as defined below.
        /// </summary>
        [Input("authSettings")]
        public Input<Inputs.LinuxWebAppSlotAuthSettingsArgs>? AuthSettings { get; set; }

        /// <summary>
        /// A `backup` block as defined below.
        /// </summary>
        [Input("backup")]
        public Input<Inputs.LinuxWebAppSlotBackupArgs>? Backup { get; set; }

        /// <summary>
        /// Should Client Affinity be enabled?
        /// </summary>
        [Input("clientAffinityEnabled")]
        public Input<bool>? ClientAffinityEnabled { get; set; }

        /// <summary>
        /// Should Client Certificates be enabled?
        /// </summary>
        [Input("clientCertificateEnabled")]
        public Input<bool>? ClientCertificateEnabled { get; set; }

        /// <summary>
        /// The Client Certificate mode. Possible values include `Optional` and `Required`. This property has no effect when `client_cert_enabled` is `false`
        /// </summary>
        [Input("clientCertificateMode")]
        public Input<string>? ClientCertificateMode { get; set; }

        [Input("connectionStrings")]
        private InputList<Inputs.LinuxWebAppSlotConnectionStringArgs>? _connectionStrings;

        /// <summary>
        /// One or more `connection_string` blocks as defined below.
        /// </summary>
        public InputList<Inputs.LinuxWebAppSlotConnectionStringArgs> ConnectionStrings
        {
            get => _connectionStrings ?? (_connectionStrings = new InputList<Inputs.LinuxWebAppSlotConnectionStringArgs>());
            set => _connectionStrings = value;
        }

        /// <summary>
        /// Should the Linux Web App be enabled? Defaults to `true`.
        /// </summary>
        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        /// <summary>
        /// Should the Linux Web App require HTTPS connections.
        /// </summary>
        [Input("httpsOnly")]
        public Input<bool>? HttpsOnly { get; set; }

        /// <summary>
        /// An `identity` block as defined below.
        /// </summary>
        [Input("identity")]
        public Input<Inputs.LinuxWebAppSlotIdentityArgs>? Identity { get; set; }

        /// <summary>
        /// The User Assigned Identity ID used for accessing KeyVault secrets. The identity must be assigned to the application in the `identity` block. [For more information see - Access vaults with a user-assigned identity](https://docs.microsoft.com/azure/app-service/app-service-key-vault-references#access-vaults-with-a-user-assigned-identity)
        /// </summary>
        [Input("keyVaultReferenceIdentityId")]
        public Input<string>? KeyVaultReferenceIdentityId { get; set; }

        /// <summary>
        /// A `logs` block as defined below.
        /// </summary>
        [Input("logs")]
        public Input<Inputs.LinuxWebAppSlotLogsArgs>? Logs { get; set; }

        /// <summary>
        /// The name which should be used for this Linux Web App. Changing this forces a new Linux Web App to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// A `site_config` block as defined below.
        /// </summary>
        [Input("siteConfig", required: true)]
        public Input<Inputs.LinuxWebAppSlotSiteConfigArgs> SiteConfig { get; set; } = null!;

        [Input("storageAccounts")]
        private InputList<Inputs.LinuxWebAppSlotStorageAccountArgs>? _storageAccounts;

        /// <summary>
        /// One or more `storage_account` blocks as defined below.
        /// </summary>
        public InputList<Inputs.LinuxWebAppSlotStorageAccountArgs> StorageAccounts
        {
            get => _storageAccounts ?? (_storageAccounts = new InputList<Inputs.LinuxWebAppSlotStorageAccountArgs>());
            set => _storageAccounts = value;
        }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// A mapping of tags which should be assigned to the Linux Web App.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        /// <summary>
        /// The subnet id which will be used by this Web App Slot for [regional virtual network integration](https://docs.microsoft.com/en-us/azure/app-service/overview-vnet-integration#regional-virtual-network-integration).
        /// </summary>
        [Input("virtualNetworkSubnetId")]
        public Input<string>? VirtualNetworkSubnetId { get; set; }

        /// <summary>
        /// The local path and filename of the Zip packaged application to deploy to this Linux Web App.
        /// </summary>
        [Input("zipDeployFile")]
        public Input<string>? ZipDeployFile { get; set; }

        public LinuxWebAppSlotArgs()
        {
        }
        public static new LinuxWebAppSlotArgs Empty => new LinuxWebAppSlotArgs();
    }

    public sealed class LinuxWebAppSlotState : global::Pulumi.ResourceArgs
    {
        [Input("appMetadata")]
        private InputMap<string>? _appMetadata;

        /// <summary>
        /// A `app_metadata` block as defined below.
        /// </summary>
        public InputMap<string> AppMetadata
        {
            get => _appMetadata ?? (_appMetadata = new InputMap<string>());
            set => _appMetadata = value;
        }

        /// <summary>
        /// The ID of the Linux Web App this Deployment Slot will be part of. Changing this forces a new Linux Web App to be created.
        /// </summary>
        [Input("appServiceId")]
        public Input<string>? AppServiceId { get; set; }

        [Input("appSettings")]
        private InputMap<string>? _appSettings;

        /// <summary>
        /// A map of key-value pairs of App Settings.
        /// </summary>
        public InputMap<string> AppSettings
        {
            get => _appSettings ?? (_appSettings = new InputMap<string>());
            set => _appSettings = value;
        }

        /// <summary>
        /// A `auth_settings` block as defined below.
        /// </summary>
        [Input("authSettings")]
        public Input<Inputs.LinuxWebAppSlotAuthSettingsGetArgs>? AuthSettings { get; set; }

        /// <summary>
        /// A `backup` block as defined below.
        /// </summary>
        [Input("backup")]
        public Input<Inputs.LinuxWebAppSlotBackupGetArgs>? Backup { get; set; }

        /// <summary>
        /// Should Client Affinity be enabled?
        /// </summary>
        [Input("clientAffinityEnabled")]
        public Input<bool>? ClientAffinityEnabled { get; set; }

        /// <summary>
        /// Should Client Certificates be enabled?
        /// </summary>
        [Input("clientCertificateEnabled")]
        public Input<bool>? ClientCertificateEnabled { get; set; }

        /// <summary>
        /// The Client Certificate mode. Possible values include `Optional` and `Required`. This property has no effect when `client_cert_enabled` is `false`
        /// </summary>
        [Input("clientCertificateMode")]
        public Input<string>? ClientCertificateMode { get; set; }

        [Input("connectionStrings")]
        private InputList<Inputs.LinuxWebAppSlotConnectionStringGetArgs>? _connectionStrings;

        /// <summary>
        /// One or more `connection_string` blocks as defined below.
        /// </summary>
        public InputList<Inputs.LinuxWebAppSlotConnectionStringGetArgs> ConnectionStrings
        {
            get => _connectionStrings ?? (_connectionStrings = new InputList<Inputs.LinuxWebAppSlotConnectionStringGetArgs>());
            set => _connectionStrings = value;
        }

        /// <summary>
        /// The identifier used by App Service to perform domain ownership verification via DNS TXT record.
        /// </summary>
        [Input("customDomainVerificationId")]
        public Input<string>? CustomDomainVerificationId { get; set; }

        /// <summary>
        /// The default hostname of the Linux Web App.
        /// </summary>
        [Input("defaultHostname")]
        public Input<string>? DefaultHostname { get; set; }

        /// <summary>
        /// Should the Linux Web App be enabled? Defaults to `true`.
        /// </summary>
        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        /// <summary>
        /// Should the Linux Web App require HTTPS connections.
        /// </summary>
        [Input("httpsOnly")]
        public Input<bool>? HttpsOnly { get; set; }

        /// <summary>
        /// An `identity` block as defined below.
        /// </summary>
        [Input("identity")]
        public Input<Inputs.LinuxWebAppSlotIdentityGetArgs>? Identity { get; set; }

        /// <summary>
        /// The User Assigned Identity ID used for accessing KeyVault secrets. The identity must be assigned to the application in the `identity` block. [For more information see - Access vaults with a user-assigned identity](https://docs.microsoft.com/azure/app-service/app-service-key-vault-references#access-vaults-with-a-user-assigned-identity)
        /// </summary>
        [Input("keyVaultReferenceIdentityId")]
        public Input<string>? KeyVaultReferenceIdentityId { get; set; }

        /// <summary>
        /// The Kind value for this Linux Web App.
        /// </summary>
        [Input("kind")]
        public Input<string>? Kind { get; set; }

        /// <summary>
        /// A `logs` block as defined below.
        /// </summary>
        [Input("logs")]
        public Input<Inputs.LinuxWebAppSlotLogsGetArgs>? Logs { get; set; }

        /// <summary>
        /// The name which should be used for this Linux Web App. Changing this forces a new Linux Web App to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("outboundIpAddressLists")]
        private InputList<string>? _outboundIpAddressLists;

        /// <summary>
        /// A list of outbound IP addresses - such as `["52.23.25.3", "52.143.43.12"]`
        /// </summary>
        public InputList<string> OutboundIpAddressLists
        {
            get => _outboundIpAddressLists ?? (_outboundIpAddressLists = new InputList<string>());
            set => _outboundIpAddressLists = value;
        }

        /// <summary>
        /// A comma separated list of outbound IP addresses - such as `52.23.25.3,52.143.43.12`.
        /// </summary>
        [Input("outboundIpAddresses")]
        public Input<string>? OutboundIpAddresses { get; set; }

        [Input("possibleOutboundIpAddressLists")]
        private InputList<string>? _possibleOutboundIpAddressLists;

        /// <summary>
        /// A `possible_outbound_ip_address_list` block as defined below.
        /// </summary>
        public InputList<string> PossibleOutboundIpAddressLists
        {
            get => _possibleOutboundIpAddressLists ?? (_possibleOutboundIpAddressLists = new InputList<string>());
            set => _possibleOutboundIpAddressLists = value;
        }

        /// <summary>
        /// A comma separated list of outbound IP addresses - such as `52.23.25.3,52.143.43.12,52.143.43.17` - not all of which are necessarily in use. Superset of `outbound_ip_addresses`.
        /// </summary>
        [Input("possibleOutboundIpAddresses")]
        public Input<string>? PossibleOutboundIpAddresses { get; set; }

        /// <summary>
        /// A `site_config` block as defined below.
        /// </summary>
        [Input("siteConfig")]
        public Input<Inputs.LinuxWebAppSlotSiteConfigGetArgs>? SiteConfig { get; set; }

        [Input("siteCredentials")]
        private InputList<Inputs.LinuxWebAppSlotSiteCredentialGetArgs>? _siteCredentials;

        /// <summary>
        /// A `site_credential` block as defined below.
        /// </summary>
        public InputList<Inputs.LinuxWebAppSlotSiteCredentialGetArgs> SiteCredentials
        {
            get => _siteCredentials ?? (_siteCredentials = new InputList<Inputs.LinuxWebAppSlotSiteCredentialGetArgs>());
            set => _siteCredentials = value;
        }

        [Input("storageAccounts")]
        private InputList<Inputs.LinuxWebAppSlotStorageAccountGetArgs>? _storageAccounts;

        /// <summary>
        /// One or more `storage_account` blocks as defined below.
        /// </summary>
        public InputList<Inputs.LinuxWebAppSlotStorageAccountGetArgs> StorageAccounts
        {
            get => _storageAccounts ?? (_storageAccounts = new InputList<Inputs.LinuxWebAppSlotStorageAccountGetArgs>());
            set => _storageAccounts = value;
        }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// A mapping of tags which should be assigned to the Linux Web App.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        /// <summary>
        /// The subnet id which will be used by this Web App Slot for [regional virtual network integration](https://docs.microsoft.com/en-us/azure/app-service/overview-vnet-integration#regional-virtual-network-integration).
        /// </summary>
        [Input("virtualNetworkSubnetId")]
        public Input<string>? VirtualNetworkSubnetId { get; set; }

        /// <summary>
        /// The local path and filename of the Zip packaged application to deploy to this Linux Web App.
        /// </summary>
        [Input("zipDeployFile")]
        public Input<string>? ZipDeployFile { get; set; }

        public LinuxWebAppSlotState()
        {
        }
        public static new LinuxWebAppSlotState Empty => new LinuxWebAppSlotState();
    }
}
