// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.AppService
{
    /// <summary>
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using Azure = Pulumi.Azure;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var example = new Azure.AppService.SourceControlToken("example", new Azure.AppService.SourceControlTokenArgs
    ///         {
    ///             Token = "ghp_sometokenvaluesecretsauce",
    ///             Type = "GitHub",
    ///         });
    ///     }
    /// 
    /// }
    /// ```
    /// 
    /// ## Import
    /// 
    /// App Service Source Github Tokens can be imported using the `resource id`, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import azure:appservice/sourceControlToken:SourceControlToken example /providers/Microsoft.Web/sourcecontrols/GitHub
    /// ```
    /// </summary>
    [AzureResourceType("azure:appservice/sourceControlToken:SourceControlToken")]
    public partial class SourceControlToken : Pulumi.CustomResource
    {
        /// <summary>
        /// The Access Token.
        /// </summary>
        [Output("token")]
        public Output<string> Token { get; private set; } = null!;

        [Output("tokenSecret")]
        public Output<string?> TokenSecret { get; private set; } = null!;

        /// <summary>
        /// The Token type. Possible values include `Bitbucket`, `Dropbox`, `Github`, and `OneDrive`.
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a SourceControlToken resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public SourceControlToken(string name, SourceControlTokenArgs args, CustomResourceOptions? options = null)
            : base("azure:appservice/sourceControlToken:SourceControlToken", name, args ?? new SourceControlTokenArgs(), MakeResourceOptions(options, ""))
        {
        }

        private SourceControlToken(string name, Input<string> id, SourceControlTokenState? state = null, CustomResourceOptions? options = null)
            : base("azure:appservice/sourceControlToken:SourceControlToken", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing SourceControlToken resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static SourceControlToken Get(string name, Input<string> id, SourceControlTokenState? state = null, CustomResourceOptions? options = null)
        {
            return new SourceControlToken(name, id, state, options);
        }
    }

    public sealed class SourceControlTokenArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The Access Token.
        /// </summary>
        [Input("token", required: true)]
        public Input<string> Token { get; set; } = null!;

        [Input("tokenSecret")]
        public Input<string>? TokenSecret { get; set; }

        /// <summary>
        /// The Token type. Possible values include `Bitbucket`, `Dropbox`, `Github`, and `OneDrive`.
        /// </summary>
        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        public SourceControlTokenArgs()
        {
        }
    }

    public sealed class SourceControlTokenState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The Access Token.
        /// </summary>
        [Input("token")]
        public Input<string>? Token { get; set; }

        [Input("tokenSecret")]
        public Input<string>? TokenSecret { get; set; }

        /// <summary>
        /// The Token type. Possible values include `Bitbucket`, `Dropbox`, `Github`, and `OneDrive`.
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        public SourceControlTokenState()
        {
        }
    }
}
