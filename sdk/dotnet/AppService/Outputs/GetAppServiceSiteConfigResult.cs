// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.AppService.Outputs
{

    [OutputType]
    public sealed class GetAppServiceSiteConfigResult
    {
        /// <summary>
        /// Is the app be loaded at all times?
        /// </summary>
        public readonly bool AlwaysOn;
        /// <summary>
        /// App command line to launch.
        /// </summary>
        public readonly string AppCommandLine;
        /// <summary>
        /// A `cors` block as defined above.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetAppServiceSiteConfigCorResult> Cors;
        /// <summary>
        /// The ordering of default documents to load, if an address isn't specified.
        /// </summary>
        public readonly ImmutableArray<string> DefaultDocuments;
        /// <summary>
        /// The version of the .net framework's CLR used in this App Service.
        /// </summary>
        public readonly string DotnetFrameworkVersion;
        /// <summary>
        /// State of FTP / FTPS service for this AppService.
        /// </summary>
        public readonly string FtpsState;
        /// <summary>
        /// Is HTTP2 Enabled on this App Service?
        /// </summary>
        public readonly bool Http2Enabled;
        /// <summary>
        /// One or more `ip_restriction` blocks as defined above.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetAppServiceSiteConfigIpRestrictionResult> IpRestrictions;
        /// <summary>
        /// The Java Container in use.
        /// </summary>
        public readonly string JavaContainer;
        /// <summary>
        /// The version of the Java Container in use.
        /// </summary>
        public readonly string JavaContainerVersion;
        /// <summary>
        /// The version of Java in use.
        /// </summary>
        public readonly string JavaVersion;
        /// <summary>
        /// Linux App Framework and version for the AppService.
        /// </summary>
        public readonly string LinuxFxVersion;
        /// <summary>
        /// Is "MySQL In App" Enabled? This runs a local MySQL instance with your app and shares resources from the App Service plan.
        /// </summary>
        public readonly bool LocalMysqlEnabled;
        /// <summary>
        /// The Managed Pipeline Mode used in this App Service.
        /// </summary>
        public readonly string ManagedPipelineMode;
        /// <summary>
        /// The minimum supported TLS version for this App Service.
        /// </summary>
        public readonly string MinTlsVersion;
        /// <summary>
        /// The version of PHP used in this App Service.
        /// </summary>
        public readonly string PhpVersion;
        /// <summary>
        /// The version of Python used in this App Service.
        /// </summary>
        public readonly string PythonVersion;
        /// <summary>
        /// Is Remote Debugging Enabled in this App Service?
        /// </summary>
        public readonly bool RemoteDebuggingEnabled;
        /// <summary>
        /// Which version of Visual Studio is the Remote Debugger compatible with?
        /// </summary>
        public readonly string RemoteDebuggingVersion;
        /// <summary>
        /// The type of Source Control enabled for this App Service.
        /// </summary>
        public readonly string ScmType;
        /// <summary>
        /// Does the App Service run in 32 bit mode, rather than 64 bit mode?
        /// </summary>
        public readonly bool Use32BitWorkerProcess;
        /// <summary>
        /// Are WebSockets enabled for this App Service?
        /// </summary>
        public readonly bool WebsocketsEnabled;
        /// <summary>
        /// Windows Container Docker Image for the AppService.
        /// </summary>
        public readonly string WindowsFxVersion;

        [OutputConstructor]
        private GetAppServiceSiteConfigResult(
            bool alwaysOn,

            string appCommandLine,

            ImmutableArray<Outputs.GetAppServiceSiteConfigCorResult> cors,

            ImmutableArray<string> defaultDocuments,

            string dotnetFrameworkVersion,

            string ftpsState,

            bool http2Enabled,

            ImmutableArray<Outputs.GetAppServiceSiteConfigIpRestrictionResult> ipRestrictions,

            string javaContainer,

            string javaContainerVersion,

            string javaVersion,

            string linuxFxVersion,

            bool localMysqlEnabled,

            string managedPipelineMode,

            string minTlsVersion,

            string phpVersion,

            string pythonVersion,

            bool remoteDebuggingEnabled,

            string remoteDebuggingVersion,

            string scmType,

            bool use32BitWorkerProcess,

            bool websocketsEnabled,

            string windowsFxVersion)
        {
            AlwaysOn = alwaysOn;
            AppCommandLine = appCommandLine;
            Cors = cors;
            DefaultDocuments = defaultDocuments;
            DotnetFrameworkVersion = dotnetFrameworkVersion;
            FtpsState = ftpsState;
            Http2Enabled = http2Enabled;
            IpRestrictions = ipRestrictions;
            JavaContainer = javaContainer;
            JavaContainerVersion = javaContainerVersion;
            JavaVersion = javaVersion;
            LinuxFxVersion = linuxFxVersion;
            LocalMysqlEnabled = localMysqlEnabled;
            ManagedPipelineMode = managedPipelineMode;
            MinTlsVersion = minTlsVersion;
            PhpVersion = phpVersion;
            PythonVersion = pythonVersion;
            RemoteDebuggingEnabled = remoteDebuggingEnabled;
            RemoteDebuggingVersion = remoteDebuggingVersion;
            ScmType = scmType;
            Use32BitWorkerProcess = use32BitWorkerProcess;
            WebsocketsEnabled = websocketsEnabled;
            WindowsFxVersion = windowsFxVersion;
        }
    }
}
