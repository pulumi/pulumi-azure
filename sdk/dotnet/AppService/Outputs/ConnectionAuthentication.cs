// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.AppService.Outputs
{

    [OutputType]
    public sealed class ConnectionAuthentication
    {
        /// <summary>
        /// Service principal certificate for `servicePrincipal` auth. Should be specified when `Type` is set to `servicePrincipalCertificate`.
        /// </summary>
        public readonly string? Certificate;
        /// <summary>
        /// Client ID for `userAssignedIdentity` or `servicePrincipal` auth. Should be specified when `Type` is set to `servicePrincipalSecret` or `servicePrincipalCertificate`. When `Type` is set to `userAssignedIdentity`, `ClientId` and `SubscriptionId` should be either both specified or both not specified.
        /// </summary>
        public readonly string? ClientId;
        /// <summary>
        /// Username or account name for secret auth. `Name` and `Secret` should be either both specified or both not specified when `Type` is set to `Secret`.
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// Principal ID for `servicePrincipal` auth. Should be specified when `Type` is set to `servicePrincipalSecret` or `servicePrincipalCertificate`.
        /// </summary>
        public readonly string? PrincipalId;
        /// <summary>
        /// Password or account key for secret auth. `Secret` and `Name` should be either both specified or both not specified when `Type` is set to `Secret`.
        /// </summary>
        public readonly string? Secret;
        /// <summary>
        /// Subscription ID for `userAssignedIdentity`. `SubscriptionId` and `ClientId` should be either both specified or both not specified.
        /// </summary>
        public readonly string? SubscriptionId;
        /// <summary>
        /// The authentication type. Possible values are `systemAssignedIdentity`, `userAssignedIdentity`, `servicePrincipalSecret`, `servicePrincipalCertificate`, `Secret`. Changing this forces a new resource to be created.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private ConnectionAuthentication(
            string? certificate,

            string? clientId,

            string? name,

            string? principalId,

            string? secret,

            string? subscriptionId,

            string type)
        {
            Certificate = certificate;
            ClientId = clientId;
            Name = name;
            PrincipalId = principalId;
            Secret = secret;
            SubscriptionId = subscriptionId;
            Type = type;
        }
    }
}
