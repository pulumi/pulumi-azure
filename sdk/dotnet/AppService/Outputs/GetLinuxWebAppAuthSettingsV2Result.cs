// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.AppService.Outputs
{

    [OutputType]
    public sealed class GetLinuxWebAppAuthSettingsV2Result
    {
        /// <summary>
        /// An `active_directory_v2` block as defined below.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetLinuxWebAppAuthSettingsV2ActiveDirectoryV2Result> ActiveDirectoryV2s;
        /// <summary>
        /// An `apple_v2` block as defined below.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetLinuxWebAppAuthSettingsV2AppleV2Result> AppleV2s;
        /// <summary>
        /// Are the AuthV2 Settings enabled.
        /// </summary>
        public readonly bool AuthEnabled;
        /// <summary>
        /// An `azure_static_web_app_v2` block as defined below.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetLinuxWebAppAuthSettingsV2AzureStaticWebAppV2Result> AzureStaticWebAppV2s;
        /// <summary>
        /// The path to the App Auth settings.
        /// </summary>
        public readonly string ConfigFilePath;
        /// <summary>
        /// Zero or more `custom_oidc_v2` blocks as defined below.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetLinuxWebAppAuthSettingsV2CustomOidcV2Result> CustomOidcV2s;
        /// <summary>
        /// The Default Authentication Provider used when more than one Authentication Provider is configured and the `unauthenticated_action` is set to `RedirectToLoginPage`.
        /// </summary>
        public readonly string DefaultProvider;
        /// <summary>
        /// The paths which should be excluded from the `unauthenticated_action` when it is set to `RedirectToLoginPage`.
        /// </summary>
        public readonly ImmutableArray<string> ExcludedPaths;
        /// <summary>
        /// A `facebook_v2` block as defined below.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetLinuxWebAppAuthSettingsV2FacebookV2Result> FacebookV2s;
        /// <summary>
        /// The convention used to determine the url of the request made.
        /// </summary>
        public readonly string ForwardProxyConvention;
        /// <summary>
        /// The name of the custom header containing the host of the request.
        /// </summary>
        public readonly string ForwardProxyCustomHostHeaderName;
        /// <summary>
        /// The name of the custom header containing the scheme of the request.
        /// </summary>
        public readonly string ForwardProxyCustomSchemeHeaderName;
        /// <summary>
        /// A `github_v2` block as defined below.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetLinuxWebAppAuthSettingsV2GithubV2Result> GithubV2s;
        /// <summary>
        /// A `google_v2` block as defined below.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetLinuxWebAppAuthSettingsV2GoogleV2Result> GoogleV2s;
        /// <summary>
        /// The prefix that should precede all the authentication and authorisation paths.
        /// </summary>
        public readonly string HttpRouteApiPrefix;
        /// <summary>
        /// A `login` block as defined below.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetLinuxWebAppAuthSettingsV2LoginResult> Logins;
        /// <summary>
        /// A `microsoft_v2` block as defined below.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetLinuxWebAppAuthSettingsV2MicrosoftV2Result> MicrosoftV2s;
        /// <summary>
        /// Is the authentication flow used for all requests.
        /// </summary>
        public readonly bool RequireAuthentication;
        /// <summary>
        /// Is HTTPS required on connections?
        /// </summary>
        public readonly bool RequireHttps;
        /// <summary>
        /// The Runtime Version of the Authentication and Authorisation feature of this App.
        /// </summary>
        public readonly string RuntimeVersion;
        /// <summary>
        /// A `twitter_v2` block as defined below.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetLinuxWebAppAuthSettingsV2TwitterV2Result> TwitterV2s;
        /// <summary>
        /// The action to take for requests made without authentication.
        /// </summary>
        public readonly string UnauthenticatedAction;

        [OutputConstructor]
        private GetLinuxWebAppAuthSettingsV2Result(
            ImmutableArray<Outputs.GetLinuxWebAppAuthSettingsV2ActiveDirectoryV2Result> activeDirectoryV2s,

            ImmutableArray<Outputs.GetLinuxWebAppAuthSettingsV2AppleV2Result> appleV2s,

            bool authEnabled,

            ImmutableArray<Outputs.GetLinuxWebAppAuthSettingsV2AzureStaticWebAppV2Result> azureStaticWebAppV2s,

            string configFilePath,

            ImmutableArray<Outputs.GetLinuxWebAppAuthSettingsV2CustomOidcV2Result> customOidcV2s,

            string defaultProvider,

            ImmutableArray<string> excludedPaths,

            ImmutableArray<Outputs.GetLinuxWebAppAuthSettingsV2FacebookV2Result> facebookV2s,

            string forwardProxyConvention,

            string forwardProxyCustomHostHeaderName,

            string forwardProxyCustomSchemeHeaderName,

            ImmutableArray<Outputs.GetLinuxWebAppAuthSettingsV2GithubV2Result> githubV2s,

            ImmutableArray<Outputs.GetLinuxWebAppAuthSettingsV2GoogleV2Result> googleV2s,

            string httpRouteApiPrefix,

            ImmutableArray<Outputs.GetLinuxWebAppAuthSettingsV2LoginResult> logins,

            ImmutableArray<Outputs.GetLinuxWebAppAuthSettingsV2MicrosoftV2Result> microsoftV2s,

            bool requireAuthentication,

            bool requireHttps,

            string runtimeVersion,

            ImmutableArray<Outputs.GetLinuxWebAppAuthSettingsV2TwitterV2Result> twitterV2s,

            string unauthenticatedAction)
        {
            ActiveDirectoryV2s = activeDirectoryV2s;
            AppleV2s = appleV2s;
            AuthEnabled = authEnabled;
            AzureStaticWebAppV2s = azureStaticWebAppV2s;
            ConfigFilePath = configFilePath;
            CustomOidcV2s = customOidcV2s;
            DefaultProvider = defaultProvider;
            ExcludedPaths = excludedPaths;
            FacebookV2s = facebookV2s;
            ForwardProxyConvention = forwardProxyConvention;
            ForwardProxyCustomHostHeaderName = forwardProxyCustomHostHeaderName;
            ForwardProxyCustomSchemeHeaderName = forwardProxyCustomSchemeHeaderName;
            GithubV2s = githubV2s;
            GoogleV2s = googleV2s;
            HttpRouteApiPrefix = httpRouteApiPrefix;
            Logins = logins;
            MicrosoftV2s = microsoftV2s;
            RequireAuthentication = requireAuthentication;
            RequireHttps = requireHttps;
            RuntimeVersion = runtimeVersion;
            TwitterV2s = twitterV2s;
            UnauthenticatedAction = unauthenticatedAction;
        }
    }
}
