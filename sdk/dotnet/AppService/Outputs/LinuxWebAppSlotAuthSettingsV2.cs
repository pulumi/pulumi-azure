// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.AppService.Outputs
{

    [OutputType]
    public sealed class LinuxWebAppSlotAuthSettingsV2
    {
        /// <summary>
        /// An `ActiveDirectoryV2` block as defined below.
        /// </summary>
        public readonly Outputs.LinuxWebAppSlotAuthSettingsV2ActiveDirectoryV2? ActiveDirectoryV2;
        /// <summary>
        /// An `AppleV2` block as defined below.
        /// </summary>
        public readonly Outputs.LinuxWebAppSlotAuthSettingsV2AppleV2? AppleV2;
        /// <summary>
        /// Should the AuthV2 Settings be enabled. Defaults to `False`.
        /// </summary>
        public readonly bool? AuthEnabled;
        /// <summary>
        /// An `AzureStaticWebAppV2` block as defined below.
        /// </summary>
        public readonly Outputs.LinuxWebAppSlotAuthSettingsV2AzureStaticWebAppV2? AzureStaticWebAppV2;
        /// <summary>
        /// The path to the App Auth settings.
        /// 
        /// &gt; **Note:** Relative Paths are evaluated from the Site Root directory.
        /// </summary>
        public readonly string? ConfigFilePath;
        /// <summary>
        /// Zero or more `CustomOidcV2` blocks as defined below.
        /// </summary>
        public readonly ImmutableArray<Outputs.LinuxWebAppSlotAuthSettingsV2CustomOidcV2> CustomOidcV2s;
        /// <summary>
        /// The Default Authentication Provider to use when the `UnauthenticatedAction` is set to `RedirectToLoginPage`. Possible values include: `Apple`, `Azureactivedirectory`, `Facebook`, `Github`, `Google`, `Twitter` and the `Name` of your `CustomOidcV2` provider.
        /// 
        /// &gt; **Note:** Whilst any value will be accepted by the API for `DefaultProvider`, it can leave the app in an unusable state if this value does not correspond to the name of a known provider (either built-in value, or CustomOidc name) as it is used to build the auth endpoint URI.
        /// </summary>
        public readonly string? DefaultProvider;
        /// <summary>
        /// The paths which should be excluded from the `UnauthenticatedAction` when it is set to `RedirectToLoginPage`.
        /// 
        /// &gt; **Note:** This list should be used instead of setting `WEBSITE_WARMUP_PATH` in `AppSettings` as it takes priority.
        /// </summary>
        public readonly ImmutableArray<string> ExcludedPaths;
        /// <summary>
        /// A `FacebookV2` block as defined below.
        /// </summary>
        public readonly Outputs.LinuxWebAppSlotAuthSettingsV2FacebookV2? FacebookV2;
        /// <summary>
        /// The convention used to determine the url of the request made. Possible values include `NoProxy`, `Standard`, `Custom`. Defaults to `NoProxy`.
        /// </summary>
        public readonly string? ForwardProxyConvention;
        /// <summary>
        /// The name of the custom header containing the host of the request.
        /// </summary>
        public readonly string? ForwardProxyCustomHostHeaderName;
        /// <summary>
        /// The name of the custom header containing the scheme of the request.
        /// </summary>
        public readonly string? ForwardProxyCustomSchemeHeaderName;
        /// <summary>
        /// A `GithubV2` block as defined below.
        /// </summary>
        public readonly Outputs.LinuxWebAppSlotAuthSettingsV2GithubV2? GithubV2;
        /// <summary>
        /// A `GoogleV2` block as defined below.
        /// </summary>
        public readonly Outputs.LinuxWebAppSlotAuthSettingsV2GoogleV2? GoogleV2;
        /// <summary>
        /// The prefix that should precede all the authentication and authorisation paths. Defaults to `/.auth`.
        /// </summary>
        public readonly string? HttpRouteApiPrefix;
        /// <summary>
        /// A `Login` block as defined below.
        /// </summary>
        public readonly Outputs.LinuxWebAppSlotAuthSettingsV2Login Login;
        /// <summary>
        /// A `MicrosoftV2` block as defined below.
        /// </summary>
        public readonly Outputs.LinuxWebAppSlotAuthSettingsV2MicrosoftV2? MicrosoftV2;
        /// <summary>
        /// Should the authentication flow be used for all requests.
        /// </summary>
        public readonly bool? RequireAuthentication;
        /// <summary>
        /// Should HTTPS be required on connections? Defaults to `True`.
        /// </summary>
        public readonly bool? RequireHttps;
        /// <summary>
        /// The Runtime Version of the Authentication and Authorisation feature of this App. Defaults to `~1`.
        /// </summary>
        public readonly string? RuntimeVersion;
        /// <summary>
        /// A `TwitterV2` block as defined below.
        /// </summary>
        public readonly Outputs.LinuxWebAppSlotAuthSettingsV2TwitterV2? TwitterV2;
        /// <summary>
        /// The action to take for requests made without authentication. Possible values include `RedirectToLoginPage`, `AllowAnonymous`, `Return401`, and `Return403`. Defaults to `RedirectToLoginPage`.
        /// </summary>
        public readonly string? UnauthenticatedAction;

        [OutputConstructor]
        private LinuxWebAppSlotAuthSettingsV2(
            Outputs.LinuxWebAppSlotAuthSettingsV2ActiveDirectoryV2? activeDirectoryV2,

            Outputs.LinuxWebAppSlotAuthSettingsV2AppleV2? appleV2,

            bool? authEnabled,

            Outputs.LinuxWebAppSlotAuthSettingsV2AzureStaticWebAppV2? azureStaticWebAppV2,

            string? configFilePath,

            ImmutableArray<Outputs.LinuxWebAppSlotAuthSettingsV2CustomOidcV2> customOidcV2s,

            string? defaultProvider,

            ImmutableArray<string> excludedPaths,

            Outputs.LinuxWebAppSlotAuthSettingsV2FacebookV2? facebookV2,

            string? forwardProxyConvention,

            string? forwardProxyCustomHostHeaderName,

            string? forwardProxyCustomSchemeHeaderName,

            Outputs.LinuxWebAppSlotAuthSettingsV2GithubV2? githubV2,

            Outputs.LinuxWebAppSlotAuthSettingsV2GoogleV2? googleV2,

            string? httpRouteApiPrefix,

            Outputs.LinuxWebAppSlotAuthSettingsV2Login login,

            Outputs.LinuxWebAppSlotAuthSettingsV2MicrosoftV2? microsoftV2,

            bool? requireAuthentication,

            bool? requireHttps,

            string? runtimeVersion,

            Outputs.LinuxWebAppSlotAuthSettingsV2TwitterV2? twitterV2,

            string? unauthenticatedAction)
        {
            ActiveDirectoryV2 = activeDirectoryV2;
            AppleV2 = appleV2;
            AuthEnabled = authEnabled;
            AzureStaticWebAppV2 = azureStaticWebAppV2;
            ConfigFilePath = configFilePath;
            CustomOidcV2s = customOidcV2s;
            DefaultProvider = defaultProvider;
            ExcludedPaths = excludedPaths;
            FacebookV2 = facebookV2;
            ForwardProxyConvention = forwardProxyConvention;
            ForwardProxyCustomHostHeaderName = forwardProxyCustomHostHeaderName;
            ForwardProxyCustomSchemeHeaderName = forwardProxyCustomSchemeHeaderName;
            GithubV2 = githubV2;
            GoogleV2 = googleV2;
            HttpRouteApiPrefix = httpRouteApiPrefix;
            Login = login;
            MicrosoftV2 = microsoftV2;
            RequireAuthentication = requireAuthentication;
            RequireHttps = requireHttps;
            RuntimeVersion = runtimeVersion;
            TwitterV2 = twitterV2;
            UnauthenticatedAction = unauthenticatedAction;
        }
    }
}
