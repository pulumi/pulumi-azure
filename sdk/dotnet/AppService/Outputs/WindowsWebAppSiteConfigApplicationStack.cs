// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.AppService.Outputs
{

    [OutputType]
    public sealed class WindowsWebAppSiteConfigApplicationStack
    {
        /// <summary>
        /// The Application Stack for the Windows Web App. Possible values include `dotnet`, `dotnetcore`, `node`, `python`, `php`, and `java`.
        /// 
        /// &gt; **NOTE:** Whilst this property is Optional omitting it can cause unexpected behaviour, in particular for display of settings in the Azure Portal.
        /// 
        /// &gt; **NOTE:** Windows Web apps can configure multiple `app_stack` properties, it is recommended to always configure this `Optional` value and set it to the primary application stack of your app to ensure correct operation of this resource and display the correct metadata in the Azure Portal.
        /// </summary>
        public readonly string? CurrentStack;
        /// <summary>
        /// The name of the container to be used. This value is required with `docker_container_tag`.
        /// </summary>
        public readonly string? DockerContainerName;
        public readonly string? DockerContainerRegistry;
        /// <summary>
        /// The tag of the container to be used. This value is required with `docker_container_name`.
        /// </summary>
        public readonly string? DockerContainerTag;
        /// <summary>
        /// The docker image, including tag, to be used. e.g. `azure-app-service/windows/parkingpage:latest`.
        /// </summary>
        public readonly string? DockerImageName;
        /// <summary>
        /// The User Name to use for authentication against the registry to pull the image.
        /// 
        /// &gt; **NOTE:** `docker_registry_url`, `docker_registry_username`, and `docker_registry_password` replace the use of the `app_settings` values of `DOCKER_REGISTRY_SERVER_URL`, `DOCKER_REGISTRY_SERVER_USERNAME` and `DOCKER_REGISTRY_SERVER_PASSWORD` respectively, these values will be managed by the provider and should not be specified in the `app_settings` map.
        /// </summary>
        public readonly string? DockerRegistryPassword;
        /// <summary>
        /// The URL of the container registry where the `docker_image_name` is located. e.g. `https://index.docker.io` or `https://mcr.microsoft.com`. This value is required with `docker_image_name`.
        /// </summary>
        public readonly string? DockerRegistryUrl;
        /// <summary>
        /// The User Name to use for authentication against the registry to pull the image.
        /// </summary>
        public readonly string? DockerRegistryUsername;
        /// <summary>
        /// The version of .NET to use when `current_stack` is set to `dotnetcore`. Possible values include `v4.0`.
        /// </summary>
        public readonly string? DotnetCoreVersion;
        /// <summary>
        /// The version of .NET to use when `current_stack` is set to `dotnet`. Possible values include `v2.0`,`v3.0`, `v4.0`, `v5.0`, `v6.0`, `v7.0` and `v8.0`.
        /// 
        /// &gt; **NOTE:** The Portal displayed values and the actual underlying API values differ for this setting, as follows:
        /// Portal Value | API value
        /// :--|--:
        /// ASP.NET V3.5 | v2.0
        /// ASP.NET V4.8 | v4.0
        /// .NET 6 (LTS) | v6.0
        /// .NET 7 (STS) | v7.0
        /// .NET 8 (LTS) | v8.0
        /// </summary>
        public readonly string? DotnetVersion;
        public readonly string? JavaContainer;
        public readonly string? JavaContainerVersion;
        /// <summary>
        /// Should the Java Embedded Server (Java SE) be used to run the app.
        /// </summary>
        public readonly bool? JavaEmbeddedServerEnabled;
        /// <summary>
        /// The version of Java to use when `current_stack` is set to `java`. 
        /// 
        /// &gt; **NOTE:** For currently supported versions, please see the official documentation. Some example values include: `1.8`, `1.8.0_322`,  `11`, `11.0.14`, `17` and `17.0.2`
        /// </summary>
        public readonly string? JavaVersion;
        /// <summary>
        /// The version of node to use when `current_stack` is set to `node`. Possible values are `~12`, `~14`, `~16`, and `~18`.
        /// 
        /// &gt; **NOTE:** This property conflicts with `java_version`.
        /// </summary>
        public readonly string? NodeVersion;
        /// <summary>
        /// The version of PHP to use when `current_stack` is set to `php`. Possible values are `7.1`, `7.4` and `Off`.
        /// 
        /// &gt; **NOTE:** The value `Off` is used to signify latest supported by the service.
        /// </summary>
        public readonly string? PhpVersion;
        /// <summary>
        /// Specifies whether this is a Python app. Defaults to `false`.
        /// </summary>
        public readonly bool? Python;
        public readonly string? PythonVersion;
        /// <summary>
        /// The version of Tomcat the Java App should use. Conflicts with `java_embedded_server_enabled`
        /// 
        /// &gt; **NOTE:** See the official documentation for current supported versions.  Some example valuess include: `10.0`, `10.0.20`.
        /// </summary>
        public readonly string? TomcatVersion;

        [OutputConstructor]
        private WindowsWebAppSiteConfigApplicationStack(
            string? currentStack,

            string? dockerContainerName,

            string? dockerContainerRegistry,

            string? dockerContainerTag,

            string? dockerImageName,

            string? dockerRegistryPassword,

            string? dockerRegistryUrl,

            string? dockerRegistryUsername,

            string? dotnetCoreVersion,

            string? dotnetVersion,

            string? javaContainer,

            string? javaContainerVersion,

            bool? javaEmbeddedServerEnabled,

            string? javaVersion,

            string? nodeVersion,

            string? phpVersion,

            bool? python,

            string? pythonVersion,

            string? tomcatVersion)
        {
            CurrentStack = currentStack;
            DockerContainerName = dockerContainerName;
            DockerContainerRegistry = dockerContainerRegistry;
            DockerContainerTag = dockerContainerTag;
            DockerImageName = dockerImageName;
            DockerRegistryPassword = dockerRegistryPassword;
            DockerRegistryUrl = dockerRegistryUrl;
            DockerRegistryUsername = dockerRegistryUsername;
            DotnetCoreVersion = dotnetCoreVersion;
            DotnetVersion = dotnetVersion;
            JavaContainer = javaContainer;
            JavaContainerVersion = javaContainerVersion;
            JavaEmbeddedServerEnabled = javaEmbeddedServerEnabled;
            JavaVersion = javaVersion;
            NodeVersion = nodeVersion;
            PhpVersion = phpVersion;
            Python = python;
            PythonVersion = pythonVersion;
            TomcatVersion = tomcatVersion;
        }
    }
}
