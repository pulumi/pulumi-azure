// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.AppService.Outputs
{

    [OutputType]
    public sealed class GetWindowsWebAppSiteConfigResult
    {
        /// <summary>
        /// Is this Windows Web App is Always On enabled.
        /// </summary>
        public readonly bool AlwaysOn;
        /// <summary>
        /// The ID of the APIM configuration for this Windows Web App.
        /// </summary>
        public readonly string ApiDefinitionUrl;
        /// <summary>
        /// The ID of the API Management setting linked to the Windows Web App.
        /// </summary>
        public readonly string ApiManagementApiId;
        /// <summary>
        /// The command line used to launch this app.
        /// </summary>
        public readonly string AppCommandLine;
        /// <summary>
        /// A `application_stack` block as defined above.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetWindowsWebAppSiteConfigApplicationStackResult> ApplicationStacks;
        /// <summary>
        /// Are Auto heal rules to be enabled.
        /// </summary>
        public readonly bool AutoHealEnabled;
        /// <summary>
        /// A `auto_heal_setting` block as defined above.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetWindowsWebAppSiteConfigAutoHealSettingResult> AutoHealSettings;
        /// <summary>
        /// The Client ID of the Managed Service Identity used for connections to the Azure Container Registry.
        /// </summary>
        public readonly string ContainerRegistryManagedIdentityClientId;
        /// <summary>
        /// Do connections for Azure Container Registry use Managed Identity.
        /// </summary>
        public readonly bool ContainerRegistryUseManagedIdentity;
        /// <summary>
        /// A `cors` block as defined above.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetWindowsWebAppSiteConfigCorResult> Cors;
        /// <summary>
        /// The list of Default Documents for the Windows Web App.
        /// </summary>
        public readonly ImmutableArray<string> DefaultDocuments;
        /// <summary>
        /// Is Detailed Error Logging enabled.
        /// </summary>
        public readonly bool DetailedErrorLoggingEnabled;
        /// <summary>
        /// The State of FTP / FTPS service.
        /// </summary>
        public readonly string FtpsState;
        /// <summary>
        /// (Optional) The amount of time in minutes that a node can be unhealthy before being removed from the load balancer. Possible values are between `2` and `10`. Only valid in conjunction with `health_check_path`.
        /// </summary>
        public readonly int HealthCheckEvictionTimeInMin;
        /// <summary>
        /// The path to the Health Check endpoint.
        /// </summary>
        public readonly string HealthCheckPath;
        /// <summary>
        /// Is HTTP2.0 enabled.
        /// </summary>
        public readonly bool Http2Enabled;
        /// <summary>
        /// A `ip_restriction` block as defined above.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetWindowsWebAppSiteConfigIpRestrictionResult> IpRestrictions;
        /// <summary>
        /// The site Load Balancing Mode.
        /// </summary>
        public readonly string LoadBalancingMode;
        /// <summary>
        /// Is the Local MySQL enabled.
        /// </summary>
        public readonly bool LocalMysqlEnabled;
        /// <summary>
        /// The Managed Pipeline Mode.
        /// </summary>
        public readonly string ManagedPipelineMode;
        /// <summary>
        /// The Minimum version of TLS for requests.
        /// </summary>
        public readonly string MinimumTlsVersion;
        public readonly bool RemoteDebuggingEnabled;
        /// <summary>
        /// The Remote Debugging Version.
        /// </summary>
        public readonly string RemoteDebuggingVersion;
        /// <summary>
        /// A `scm_ip_restriction` block as defined above.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetWindowsWebAppSiteConfigScmIpRestrictionResult> ScmIpRestrictions;
        /// <summary>
        /// The Minimum version of TLS for requests to SCM.
        /// </summary>
        public readonly string ScmMinimumTlsVersion;
        /// <summary>
        /// The Source Control Management Type in use.
        /// </summary>
        public readonly string ScmType;
        /// <summary>
        /// Is the Windows Web App `ip_restriction` configuration used for the SCM also.
        /// </summary>
        public readonly bool ScmUseMainIpRestriction;
        /// <summary>
        /// Does the Windows Web App use a 32-bit worker.
        /// </summary>
        public readonly bool Use32BitWorker;
        /// <summary>
        /// A `virtual_application` block as defined below.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetWindowsWebAppSiteConfigVirtualApplicationResult> VirtualApplications;
        /// <summary>
        /// Are all outbound traffic to NAT Gateways, Network Security Groups and User Defined Routes applied?
        /// </summary>
        public readonly bool VnetRouteAllEnabled;
        /// <summary>
        /// Are Web Sockets enabled?
        /// </summary>
        public readonly bool WebsocketsEnabled;
        /// <summary>
        /// The string representation of the Windows FX Version.
        /// </summary>
        public readonly string WindowsFxVersion;
        /// <summary>
        /// The number of Workers for this Windows App Service.
        /// </summary>
        public readonly int WorkerCount;

        [OutputConstructor]
        private GetWindowsWebAppSiteConfigResult(
            bool alwaysOn,

            string apiDefinitionUrl,

            string apiManagementApiId,

            string appCommandLine,

            ImmutableArray<Outputs.GetWindowsWebAppSiteConfigApplicationStackResult> applicationStacks,

            bool autoHealEnabled,

            ImmutableArray<Outputs.GetWindowsWebAppSiteConfigAutoHealSettingResult> autoHealSettings,

            string containerRegistryManagedIdentityClientId,

            bool containerRegistryUseManagedIdentity,

            ImmutableArray<Outputs.GetWindowsWebAppSiteConfigCorResult> cors,

            ImmutableArray<string> defaultDocuments,

            bool detailedErrorLoggingEnabled,

            string ftpsState,

            int healthCheckEvictionTimeInMin,

            string healthCheckPath,

            bool http2Enabled,

            ImmutableArray<Outputs.GetWindowsWebAppSiteConfigIpRestrictionResult> ipRestrictions,

            string loadBalancingMode,

            bool localMysqlEnabled,

            string managedPipelineMode,

            string minimumTlsVersion,

            bool remoteDebuggingEnabled,

            string remoteDebuggingVersion,

            ImmutableArray<Outputs.GetWindowsWebAppSiteConfigScmIpRestrictionResult> scmIpRestrictions,

            string scmMinimumTlsVersion,

            string scmType,

            bool scmUseMainIpRestriction,

            bool use32BitWorker,

            ImmutableArray<Outputs.GetWindowsWebAppSiteConfigVirtualApplicationResult> virtualApplications,

            bool vnetRouteAllEnabled,

            bool websocketsEnabled,

            string windowsFxVersion,

            int workerCount)
        {
            AlwaysOn = alwaysOn;
            ApiDefinitionUrl = apiDefinitionUrl;
            ApiManagementApiId = apiManagementApiId;
            AppCommandLine = appCommandLine;
            ApplicationStacks = applicationStacks;
            AutoHealEnabled = autoHealEnabled;
            AutoHealSettings = autoHealSettings;
            ContainerRegistryManagedIdentityClientId = containerRegistryManagedIdentityClientId;
            ContainerRegistryUseManagedIdentity = containerRegistryUseManagedIdentity;
            Cors = cors;
            DefaultDocuments = defaultDocuments;
            DetailedErrorLoggingEnabled = detailedErrorLoggingEnabled;
            FtpsState = ftpsState;
            HealthCheckEvictionTimeInMin = healthCheckEvictionTimeInMin;
            HealthCheckPath = healthCheckPath;
            Http2Enabled = http2Enabled;
            IpRestrictions = ipRestrictions;
            LoadBalancingMode = loadBalancingMode;
            LocalMysqlEnabled = localMysqlEnabled;
            ManagedPipelineMode = managedPipelineMode;
            MinimumTlsVersion = minimumTlsVersion;
            RemoteDebuggingEnabled = remoteDebuggingEnabled;
            RemoteDebuggingVersion = remoteDebuggingVersion;
            ScmIpRestrictions = scmIpRestrictions;
            ScmMinimumTlsVersion = scmMinimumTlsVersion;
            ScmType = scmType;
            ScmUseMainIpRestriction = scmUseMainIpRestriction;
            Use32BitWorker = use32BitWorker;
            VirtualApplications = virtualApplications;
            VnetRouteAllEnabled = vnetRouteAllEnabled;
            WebsocketsEnabled = websocketsEnabled;
            WindowsFxVersion = windowsFxVersion;
            WorkerCount = workerCount;
        }
    }
}
