// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.AppService.Outputs
{

    [OutputType]
    public sealed class WindowsFunctionAppSlotSiteConfig
    {
        /// <summary>
        /// If this Windows Web App is Always On enabled. Defaults to `false`.
        /// </summary>
        public readonly bool? AlwaysOn;
        /// <summary>
        /// The URL of the API definition that describes this Windows Function App.
        /// </summary>
        public readonly string? ApiDefinitionUrl;
        /// <summary>
        /// The ID of the API Management API for this Windows Function App.
        /// </summary>
        public readonly string? ApiManagementApiId;
        /// <summary>
        /// The program and any arguments used to launch this app via the command line. (Example `node myapp.js`).
        /// </summary>
        public readonly string? AppCommandLine;
        /// <summary>
        /// The number of workers this function app can scale out to. Only applicable to apps on the Consumption and Premium plan.
        /// </summary>
        public readonly int? AppScaleLimit;
        /// <summary>
        /// an `app_service_logs` block as detailed below.
        /// </summary>
        public readonly Outputs.WindowsFunctionAppSlotSiteConfigAppServiceLogs? AppServiceLogs;
        /// <summary>
        /// The Connection String for linking the Windows Function App to Application Insights.
        /// </summary>
        public readonly string? ApplicationInsightsConnectionString;
        /// <summary>
        /// The Instrumentation Key for connecting the Windows Function App to Application Insights.
        /// </summary>
        public readonly string? ApplicationInsightsKey;
        /// <summary>
        /// an `application_stack` block as detailed below.
        /// </summary>
        public readonly Outputs.WindowsFunctionAppSlotSiteConfigApplicationStack? ApplicationStack;
        /// <summary>
        /// The name of the slot to automatically swap with when this slot is successfully deployed.
        /// </summary>
        public readonly string? AutoSwapSlotName;
        /// <summary>
        /// a `cors` block as detailed below.
        /// </summary>
        public readonly Outputs.WindowsFunctionAppSlotSiteConfigCors? Cors;
        /// <summary>
        /// Specifies a list of Default Documents for the Windows Web App.
        /// </summary>
        public readonly ImmutableArray<string> DefaultDocuments;
        /// <summary>
        /// Is detailed error logging enabled
        /// </summary>
        public readonly bool? DetailedErrorLoggingEnabled;
        /// <summary>
        /// The number of minimum instances for this Windows Function App. Only affects apps on Elastic Premium plans.
        /// </summary>
        public readonly int? ElasticInstanceMinimum;
        /// <summary>
        /// State of FTP / FTPS service for this function app. Possible values include: `AllAllowed`, `FtpsOnly` and `Disabled`. Defaults to `Disabled`.
        /// </summary>
        public readonly string? FtpsState;
        /// <summary>
        /// The amount of time in minutes that a node is unhealthy before being removed from the load balancer. Possible values are between `2` and `10`. Defaults to `0`. Only valid in conjunction with `health_check_path`.
        /// </summary>
        public readonly int? HealthCheckEvictionTimeInMin;
        /// <summary>
        /// The path to be checked for this function app health.
        /// </summary>
        public readonly string? HealthCheckPath;
        /// <summary>
        /// Specifies if the HTTP2 protocol should be enabled. Defaults to `false`.
        /// </summary>
        public readonly bool? Http2Enabled;
        /// <summary>
        /// an `ip_restriction` block as detailed below.
        /// </summary>
        public readonly ImmutableArray<Outputs.WindowsFunctionAppSlotSiteConfigIpRestriction> IpRestrictions;
        /// <summary>
        /// The Site load balancing mode. Possible values include: `WeightedRoundRobin`, `LeastRequests`, `LeastResponseTime`, `WeightedTotalTraffic`, `RequestHash`, `PerSiteRoundRobin`. Defaults to `LeastRequests` if omitted.
        /// </summary>
        public readonly string? LoadBalancingMode;
        /// <summary>
        /// The Managed Pipeline mode. Possible values include: `Integrated`, `Classic`. Defaults to `Integrated`.
        /// </summary>
        public readonly string? ManagedPipelineMode;
        /// <summary>
        /// The configures the minimum version of TLS required for SSL requests. Possible values include: `1.0`, `1.1`, and `1.2`. Defaults to `1.2`.
        /// </summary>
        public readonly string? MinimumTlsVersion;
        /// <summary>
        /// The number of pre-warmed instances for this function app. Only affects apps on an Elastic Premium plan.
        /// </summary>
        public readonly int? PreWarmedInstanceCount;
        /// <summary>
        /// Should Remote Debugging be enabled. Defaults to `false`.
        /// </summary>
        public readonly bool? RemoteDebuggingEnabled;
        /// <summary>
        /// The Remote Debugging Version. Possible values include `VS2017`, `VS2019`, and `VS2022`
        /// </summary>
        public readonly string? RemoteDebuggingVersion;
        /// <summary>
        /// Should Scale Monitoring of the Functions Runtime be enabled?
        /// 
        /// &gt; **NOTE:** Functions runtime scale monitoring can only be enabled for Elastic Premium Function Apps or Workflow Standard Logic Apps and requires a minimum prewarmed instance count of 1.
        /// </summary>
        public readonly bool? RuntimeScaleMonitoringEnabled;
        /// <summary>
        /// a `scm_ip_restriction` block as detailed below.
        /// </summary>
        public readonly ImmutableArray<Outputs.WindowsFunctionAppSlotSiteConfigScmIpRestriction> ScmIpRestrictions;
        /// <summary>
        /// Configures the minimum version of TLS required for SSL requests to the SCM site Possible values include: `1.0`, `1.1`, and `1.2`. Defaults to `1.2`.
        /// </summary>
        public readonly string? ScmMinimumTlsVersion;
        /// <summary>
        /// The SCM Type in use by the Windows Function App.
        /// </summary>
        public readonly string? ScmType;
        /// <summary>
        /// Should the Windows Function App `ip_restriction` configuration be used for the SCM also.
        /// </summary>
        public readonly bool? ScmUseMainIpRestriction;
        /// <summary>
        /// Should the Windows Web App use a 32-bit worker. Defaults to `true`.
        /// </summary>
        public readonly bool? Use32BitWorker;
        /// <summary>
        /// Should all outbound traffic to have NAT Gateways, Network Security Groups and User Defined Routes applied? Defaults to `false`.
        /// </summary>
        public readonly bool? VnetRouteAllEnabled;
        /// <summary>
        /// Should Web Sockets be enabled. Defaults to `false`.
        /// </summary>
        public readonly bool? WebsocketsEnabled;
        /// <summary>
        /// The Windows FX Version string.
        /// </summary>
        public readonly string? WindowsFxVersion;
        /// <summary>
        /// The number of Workers for this Windows Function App.
        /// </summary>
        public readonly int? WorkerCount;

        [OutputConstructor]
        private WindowsFunctionAppSlotSiteConfig(
            bool? alwaysOn,

            string? apiDefinitionUrl,

            string? apiManagementApiId,

            string? appCommandLine,

            int? appScaleLimit,

            Outputs.WindowsFunctionAppSlotSiteConfigAppServiceLogs? appServiceLogs,

            string? applicationInsightsConnectionString,

            string? applicationInsightsKey,

            Outputs.WindowsFunctionAppSlotSiteConfigApplicationStack? applicationStack,

            string? autoSwapSlotName,

            Outputs.WindowsFunctionAppSlotSiteConfigCors? cors,

            ImmutableArray<string> defaultDocuments,

            bool? detailedErrorLoggingEnabled,

            int? elasticInstanceMinimum,

            string? ftpsState,

            int? healthCheckEvictionTimeInMin,

            string? healthCheckPath,

            bool? http2Enabled,

            ImmutableArray<Outputs.WindowsFunctionAppSlotSiteConfigIpRestriction> ipRestrictions,

            string? loadBalancingMode,

            string? managedPipelineMode,

            string? minimumTlsVersion,

            int? preWarmedInstanceCount,

            bool? remoteDebuggingEnabled,

            string? remoteDebuggingVersion,

            bool? runtimeScaleMonitoringEnabled,

            ImmutableArray<Outputs.WindowsFunctionAppSlotSiteConfigScmIpRestriction> scmIpRestrictions,

            string? scmMinimumTlsVersion,

            string? scmType,

            bool? scmUseMainIpRestriction,

            bool? use32BitWorker,

            bool? vnetRouteAllEnabled,

            bool? websocketsEnabled,

            string? windowsFxVersion,

            int? workerCount)
        {
            AlwaysOn = alwaysOn;
            ApiDefinitionUrl = apiDefinitionUrl;
            ApiManagementApiId = apiManagementApiId;
            AppCommandLine = appCommandLine;
            AppScaleLimit = appScaleLimit;
            AppServiceLogs = appServiceLogs;
            ApplicationInsightsConnectionString = applicationInsightsConnectionString;
            ApplicationInsightsKey = applicationInsightsKey;
            ApplicationStack = applicationStack;
            AutoSwapSlotName = autoSwapSlotName;
            Cors = cors;
            DefaultDocuments = defaultDocuments;
            DetailedErrorLoggingEnabled = detailedErrorLoggingEnabled;
            ElasticInstanceMinimum = elasticInstanceMinimum;
            FtpsState = ftpsState;
            HealthCheckEvictionTimeInMin = healthCheckEvictionTimeInMin;
            HealthCheckPath = healthCheckPath;
            Http2Enabled = http2Enabled;
            IpRestrictions = ipRestrictions;
            LoadBalancingMode = loadBalancingMode;
            ManagedPipelineMode = managedPipelineMode;
            MinimumTlsVersion = minimumTlsVersion;
            PreWarmedInstanceCount = preWarmedInstanceCount;
            RemoteDebuggingEnabled = remoteDebuggingEnabled;
            RemoteDebuggingVersion = remoteDebuggingVersion;
            RuntimeScaleMonitoringEnabled = runtimeScaleMonitoringEnabled;
            ScmIpRestrictions = scmIpRestrictions;
            ScmMinimumTlsVersion = scmMinimumTlsVersion;
            ScmType = scmType;
            ScmUseMainIpRestriction = scmUseMainIpRestriction;
            Use32BitWorker = use32BitWorker;
            VnetRouteAllEnabled = vnetRouteAllEnabled;
            WebsocketsEnabled = websocketsEnabled;
            WindowsFxVersion = windowsFxVersion;
            WorkerCount = workerCount;
        }
    }
}
