// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.AppService.Outputs
{

    [OutputType]
    public sealed class GetLinuxWebAppAuthSettingsV2LoginResult
    {
        /// <summary>
        /// External URLs that can be redirected to as part of logging in or logging out of the app.
        /// </summary>
        public readonly ImmutableArray<string> AllowedExternalRedirectUrls;
        /// <summary>
        /// The method by which cookies expire.
        /// </summary>
        public readonly string CookieExpirationConvention;
        /// <summary>
        /// The time after the request is made when the session cookie should expire.
        /// </summary>
        public readonly string CookieExpirationTime;
        /// <summary>
        /// The endpoint to which logout requests are made.
        /// </summary>
        public readonly string LogoutEndpoint;
        /// <summary>
        /// The time after the request is made when the nonce should expire.
        /// </summary>
        public readonly string NonceExpirationTime;
        /// <summary>
        /// Are the fragments from the request preserved after the login request is made.
        /// </summary>
        public readonly bool PreserveUrlFragmentsForLogins;
        /// <summary>
        /// The number of hours after session token expiration that a session token can be used to call the token refresh API.
        /// </summary>
        public readonly double TokenRefreshExtensionTime;
        /// <summary>
        /// Is the Token Store configuration Enabled.
        /// </summary>
        public readonly bool TokenStoreEnabled;
        /// <summary>
        /// The directory path in the App Filesystem in which the tokens are stored.
        /// </summary>
        public readonly string TokenStorePath;
        /// <summary>
        /// The name of the app setting which contains the SAS URL of the blob storage containing the tokens.
        /// </summary>
        public readonly string TokenStoreSasSettingName;
        /// <summary>
        /// Is the nonce validated while completing the login flow.
        /// </summary>
        public readonly bool ValidateNonce;

        [OutputConstructor]
        private GetLinuxWebAppAuthSettingsV2LoginResult(
            ImmutableArray<string> allowedExternalRedirectUrls,

            string cookieExpirationConvention,

            string cookieExpirationTime,

            string logoutEndpoint,

            string nonceExpirationTime,

            bool preserveUrlFragmentsForLogins,

            double tokenRefreshExtensionTime,

            bool tokenStoreEnabled,

            string tokenStorePath,

            string tokenStoreSasSettingName,

            bool validateNonce)
        {
            AllowedExternalRedirectUrls = allowedExternalRedirectUrls;
            CookieExpirationConvention = cookieExpirationConvention;
            CookieExpirationTime = cookieExpirationTime;
            LogoutEndpoint = logoutEndpoint;
            NonceExpirationTime = nonceExpirationTime;
            PreserveUrlFragmentsForLogins = preserveUrlFragmentsForLogins;
            TokenRefreshExtensionTime = tokenRefreshExtensionTime;
            TokenStoreEnabled = tokenStoreEnabled;
            TokenStorePath = tokenStorePath;
            TokenStoreSasSettingName = tokenStoreSasSettingName;
            ValidateNonce = validateNonce;
        }
    }
}
