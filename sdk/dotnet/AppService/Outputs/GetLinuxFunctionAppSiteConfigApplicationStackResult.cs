// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.AppService.Outputs
{

    [OutputType]
    public sealed class GetLinuxFunctionAppSiteConfigApplicationStackResult
    {
        /// <summary>
        /// One or more `docker` blocks as defined below.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetLinuxFunctionAppSiteConfigApplicationStackDockerResult> Dockers;
        /// <summary>
        /// The version of .Net used.
        /// </summary>
        public readonly string DotnetVersion;
        /// <summary>
        /// The Version of Java used.
        /// </summary>
        public readonly string JavaVersion;
        /// <summary>
        /// The version of Node used.
        /// </summary>
        public readonly string NodeVersion;
        /// <summary>
        /// The version of PowerShell Core used.
        /// </summary>
        public readonly string PowershellCoreVersion;
        /// <summary>
        /// The version of Python used.
        /// </summary>
        public readonly string PythonVersion;
        /// <summary>
        /// Does the Linux Function App use a custom runtime?
        /// </summary>
        public readonly bool UseCustomRuntime;
        public readonly bool UseDotnetIsolatedRuntime;

        [OutputConstructor]
        private GetLinuxFunctionAppSiteConfigApplicationStackResult(
            ImmutableArray<Outputs.GetLinuxFunctionAppSiteConfigApplicationStackDockerResult> dockers,

            string dotnetVersion,

            string javaVersion,

            string nodeVersion,

            string powershellCoreVersion,

            string pythonVersion,

            bool useCustomRuntime,

            bool useDotnetIsolatedRuntime)
        {
            Dockers = dockers;
            DotnetVersion = dotnetVersion;
            JavaVersion = javaVersion;
            NodeVersion = nodeVersion;
            PowershellCoreVersion = powershellCoreVersion;
            PythonVersion = pythonVersion;
            UseCustomRuntime = useCustomRuntime;
            UseDotnetIsolatedRuntime = useDotnetIsolatedRuntime;
        }
    }
}
