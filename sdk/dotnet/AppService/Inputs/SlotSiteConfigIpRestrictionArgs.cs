// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.AppService.Inputs
{

    public sealed class SlotSiteConfigIpRestrictionArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Does this restriction `Allow` or `Deny` access for this IP range. Defaults to `Allow`.
        /// </summary>
        [Input("action")]
        public Input<string>? Action { get; set; }

        /// <summary>
        /// The `headers` block for this specific `ip_restriction` as defined below. The HTTP header filters are evaluated after the rule itself and both conditions must be true for the rule to apply.
        /// </summary>
        [Input("headers")]
        public Input<Inputs.SlotSiteConfigIpRestrictionHeadersArgs>? Headers { get; set; }

        /// <summary>
        /// The IP Address used for this IP Restriction in CIDR notation.
        /// </summary>
        [Input("ipAddress")]
        public Input<string>? IpAddress { get; set; }

        /// <summary>
        /// The name for this IP Restriction.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The priority for this IP Restriction. Restrictions are enforced in priority order. By default, priority is set to 65000 if not specified.
        /// </summary>
        [Input("priority")]
        public Input<int>? Priority { get; set; }

        /// <summary>
        /// The Service Tag used for this IP Restriction.
        /// </summary>
        [Input("serviceTag")]
        public Input<string>? ServiceTag { get; set; }

        /// <summary>
        /// The Virtual Network Subnet ID used for this IP Restriction.
        /// 
        /// &gt; **NOTE:** One of either `ip_address`, `service_tag` or `virtual_network_subnet_id` must be specified
        /// </summary>
        [Input("virtualNetworkSubnetId")]
        public Input<string>? VirtualNetworkSubnetId { get; set; }

        public SlotSiteConfigIpRestrictionArgs()
        {
        }
        public static new SlotSiteConfigIpRestrictionArgs Empty => new SlotSiteConfigIpRestrictionArgs();
    }
}
