// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.AppService.Inputs
{

    public sealed class LinuxWebAppSlotAuthSettingsV2Args : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// An `active_directory_v2` block as defined below.
        /// </summary>
        [Input("activeDirectoryV2")]
        public Input<Inputs.LinuxWebAppSlotAuthSettingsV2ActiveDirectoryV2Args>? ActiveDirectoryV2 { get; set; }

        /// <summary>
        /// An `apple_v2` block as defined below.
        /// </summary>
        [Input("appleV2")]
        public Input<Inputs.LinuxWebAppSlotAuthSettingsV2AppleV2Args>? AppleV2 { get; set; }

        /// <summary>
        /// Should the AuthV2 Settings be enabled. Defaults to `false`.
        /// </summary>
        [Input("authEnabled")]
        public Input<bool>? AuthEnabled { get; set; }

        /// <summary>
        /// An `azure_static_web_app_v2` block as defined below.
        /// </summary>
        [Input("azureStaticWebAppV2")]
        public Input<Inputs.LinuxWebAppSlotAuthSettingsV2AzureStaticWebAppV2Args>? AzureStaticWebAppV2 { get; set; }

        /// <summary>
        /// The path to the App Auth settings.
        /// </summary>
        [Input("configFilePath")]
        public Input<string>? ConfigFilePath { get; set; }

        [Input("customOidcV2s")]
        private InputList<Inputs.LinuxWebAppSlotAuthSettingsV2CustomOidcV2Args>? _customOidcV2s;

        /// <summary>
        /// Zero or more `custom_oidc_v2` blocks as defined below.
        /// </summary>
        public InputList<Inputs.LinuxWebAppSlotAuthSettingsV2CustomOidcV2Args> CustomOidcV2s
        {
            get => _customOidcV2s ?? (_customOidcV2s = new InputList<Inputs.LinuxWebAppSlotAuthSettingsV2CustomOidcV2Args>());
            set => _customOidcV2s = value;
        }

        /// <summary>
        /// The default authentication provider to use when multiple providers are configured. Possible values include: `BuiltInAuthenticationProviderAzureActiveDirectory`, `BuiltInAuthenticationProviderFacebook`, `BuiltInAuthenticationProviderGoogle`, `BuiltInAuthenticationProviderMicrosoftAccount`, `BuiltInAuthenticationProviderTwitter`, `BuiltInAuthenticationProviderGithub`
        /// </summary>
        [Input("defaultProvider")]
        public Input<string>? DefaultProvider { get; set; }

        [Input("excludedPaths")]
        private InputList<string>? _excludedPaths;

        /// <summary>
        /// The paths which should be excluded from the `unauthenticated_action` when it is set to `RedirectToLoginPage`.
        /// </summary>
        public InputList<string> ExcludedPaths
        {
            get => _excludedPaths ?? (_excludedPaths = new InputList<string>());
            set => _excludedPaths = value;
        }

        /// <summary>
        /// A `facebook_v2` block as defined below.
        /// </summary>
        [Input("facebookV2")]
        public Input<Inputs.LinuxWebAppSlotAuthSettingsV2FacebookV2Args>? FacebookV2 { get; set; }

        /// <summary>
        /// The convention used to determine the url of the request made. Possible values include `ForwardProxyConventionNoProxy`, `ForwardProxyConventionStandard`, `ForwardProxyConventionCustom`. Defaults to `ForwardProxyConventionNoProxy`.
        /// </summary>
        [Input("forwardProxyConvention")]
        public Input<string>? ForwardProxyConvention { get; set; }

        /// <summary>
        /// The name of the custom header containing the host of the request.
        /// </summary>
        [Input("forwardProxyCustomHostHeaderName")]
        public Input<string>? ForwardProxyCustomHostHeaderName { get; set; }

        /// <summary>
        /// The name of the custom header containing the scheme of the request.
        /// </summary>
        [Input("forwardProxyCustomSchemeHeaderName")]
        public Input<string>? ForwardProxyCustomSchemeHeaderName { get; set; }

        /// <summary>
        /// A `github_v2` block as defined below.
        /// </summary>
        [Input("githubV2")]
        public Input<Inputs.LinuxWebAppSlotAuthSettingsV2GithubV2Args>? GithubV2 { get; set; }

        /// <summary>
        /// A `google_v2` block as defined below.
        /// </summary>
        [Input("googleV2")]
        public Input<Inputs.LinuxWebAppSlotAuthSettingsV2GoogleV2Args>? GoogleV2 { get; set; }

        /// <summary>
        /// The prefix that should precede all the authentication and authorisation paths. Defaults to `/.auth`.
        /// </summary>
        [Input("httpRouteApiPrefix")]
        public Input<string>? HttpRouteApiPrefix { get; set; }

        /// <summary>
        /// A `login` block as defined below.
        /// </summary>
        [Input("login", required: true)]
        public Input<Inputs.LinuxWebAppSlotAuthSettingsV2LoginArgs> Login { get; set; } = null!;

        /// <summary>
        /// A `microsoft_v2` block as defined below.
        /// </summary>
        [Input("microsoftV2")]
        public Input<Inputs.LinuxWebAppSlotAuthSettingsV2MicrosoftV2Args>? MicrosoftV2 { get; set; }

        /// <summary>
        /// Should the authentication flow be used for all requests.
        /// </summary>
        [Input("requireAuthentication")]
        public Input<bool>? RequireAuthentication { get; set; }

        /// <summary>
        /// Should HTTPS be required on connections? Defaults to `true`.
        /// </summary>
        [Input("requireHttps")]
        public Input<bool>? RequireHttps { get; set; }

        /// <summary>
        /// The RuntimeVersion of the Authentication / Authorization feature in use for the Linux Web App.
        /// </summary>
        [Input("runtimeVersion")]
        public Input<string>? RuntimeVersion { get; set; }

        /// <summary>
        /// A `twitter_v2` block as defined below.
        /// </summary>
        [Input("twitterV2")]
        public Input<Inputs.LinuxWebAppSlotAuthSettingsV2TwitterV2Args>? TwitterV2 { get; set; }

        /// <summary>
        /// The action to take for requests made without authentication. Possible values include `RedirectToLoginPage`, `AllowAnonymous`, `Return401`, and `Return403`. Defaults to `RedirectToLoginPage`.
        /// </summary>
        [Input("unauthenticatedAction")]
        public Input<string>? UnauthenticatedAction { get; set; }

        public LinuxWebAppSlotAuthSettingsV2Args()
        {
        }
        public static new LinuxWebAppSlotAuthSettingsV2Args Empty => new LinuxWebAppSlotAuthSettingsV2Args();
    }
}
