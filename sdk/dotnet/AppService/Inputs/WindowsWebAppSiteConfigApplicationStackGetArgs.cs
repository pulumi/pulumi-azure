// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.AppService.Inputs
{

    public sealed class WindowsWebAppSiteConfigApplicationStackGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The Application Stack for the Windows Web App. Possible values include `dotnet`, `dotnetcore`, `node`, `python`, `php`, and `java`.
        /// </summary>
        [Input("currentStack")]
        public Input<string>? CurrentStack { get; set; }

        /// <summary>
        /// The name of the Docker Container. For example `azure-app-service/samples/aspnethelloworld`
        /// </summary>
        [Input("dockerContainerName")]
        public Input<string>? DockerContainerName { get; set; }

        /// <summary>
        /// The registry Host on which the specified Docker Container can be located. For example `mcr.microsoft.com`
        /// </summary>
        [Input("dockerContainerRegistry")]
        public Input<string>? DockerContainerRegistry { get; set; }

        /// <summary>
        /// The Image Tag of the specified Docker Container to use. For example `latest`
        /// </summary>
        [Input("dockerContainerTag")]
        public Input<string>? DockerContainerTag { get; set; }

        /// <summary>
        /// The version of .NET to use when `current_stack` is set to `dotnetcore`. Possible values include `v4.0`.
        /// </summary>
        [Input("dotnetCoreVersion")]
        public Input<string>? DotnetCoreVersion { get; set; }

        /// <summary>
        /// The version of .NET to use when `current_stack` is set to `dotnet`. Possible values include `v2.0`,`v3.0`, `v4.0`, `v5.0`, `v6.0` and `v7.0`.
        /// </summary>
        [Input("dotnetVersion")]
        public Input<string>? DotnetVersion { get; set; }

        [Input("javaContainer")]
        public Input<string>? JavaContainer { get; set; }

        [Input("javaContainerVersion")]
        public Input<string>? JavaContainerVersion { get; set; }

        /// <summary>
        /// Should the Java Embedded Server (Java SE) be used to run the app.
        /// </summary>
        [Input("javaEmbeddedServerEnabled")]
        public Input<bool>? JavaEmbeddedServerEnabled { get; set; }

        /// <summary>
        /// The version of Java to use when `current_stack` is set to `java`.
        /// </summary>
        [Input("javaVersion")]
        public Input<string>? JavaVersion { get; set; }

        /// <summary>
        /// The version of node to use when `current_stack` is set to `node`. Possible values are `~12`, `~14`, `~16`, and `~18`.
        /// </summary>
        [Input("nodeVersion")]
        public Input<string>? NodeVersion { get; set; }

        /// <summary>
        /// The version of PHP to use when `current_stack` is set to `php`. Possible values are `v7.1`, `v7.4` and `Off`.
        /// </summary>
        [Input("phpVersion")]
        public Input<string>? PhpVersion { get; set; }

        /// <summary>
        /// Specifies whether this is a Python app. Defaults to `false`.
        /// </summary>
        [Input("python")]
        public Input<bool>? Python { get; set; }

        [Input("pythonVersion")]
        public Input<string>? PythonVersion { get; set; }

        /// <summary>
        /// The version of Tomcat the Java App should use. Conflicts with `java_embedded_server_enabled`
        /// </summary>
        [Input("tomcatVersion")]
        public Input<string>? TomcatVersion { get; set; }

        public WindowsWebAppSiteConfigApplicationStackGetArgs()
        {
        }
        public static new WindowsWebAppSiteConfigApplicationStackGetArgs Empty => new WindowsWebAppSiteConfigApplicationStackGetArgs();
    }
}
