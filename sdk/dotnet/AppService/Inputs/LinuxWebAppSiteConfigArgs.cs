// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.AppService.Inputs
{

    public sealed class LinuxWebAppSiteConfigArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// If this Linux Web App is Always On enabled. Defaults to `true`.
        /// 
        /// &gt; **NOTE:** `always_on` must be explicitly set to `false` when using `Free`, `F1`, `D1`, or `Shared` Service Plans.
        /// </summary>
        [Input("alwaysOn")]
        public Input<bool>? AlwaysOn { get; set; }

        /// <summary>
        /// The URL to the API Definition for this Linux Web App.
        /// </summary>
        [Input("apiDefinitionUrl")]
        public Input<string>? ApiDefinitionUrl { get; set; }

        /// <summary>
        /// The API Management API ID this Linux Web App is associated with.
        /// </summary>
        [Input("apiManagementApiId")]
        public Input<string>? ApiManagementApiId { get; set; }

        /// <summary>
        /// The App command line to launch.
        /// </summary>
        [Input("appCommandLine")]
        public Input<string>? AppCommandLine { get; set; }

        /// <summary>
        /// A `application_stack` block as defined above.
        /// </summary>
        [Input("applicationStack")]
        public Input<Inputs.LinuxWebAppSiteConfigApplicationStackArgs>? ApplicationStack { get; set; }

        /// <summary>
        /// Should Auto heal rules be enabled? Required with `auto_heal_setting`.
        /// </summary>
        [Input("autoHealEnabled")]
        public Input<bool>? AutoHealEnabled { get; set; }

        /// <summary>
        /// A `auto_heal_setting` block as defined above. Required with `auto_heal`.
        /// </summary>
        [Input("autoHealSetting")]
        public Input<Inputs.LinuxWebAppSiteConfigAutoHealSettingArgs>? AutoHealSetting { get; set; }

        /// <summary>
        /// The Client ID of the Managed Service Identity to use for connections to the Azure Container Registry.
        /// </summary>
        [Input("containerRegistryManagedIdentityClientId")]
        public Input<string>? ContainerRegistryManagedIdentityClientId { get; set; }

        /// <summary>
        /// Should connections for Azure Container Registry use Managed Identity.
        /// </summary>
        [Input("containerRegistryUseManagedIdentity")]
        public Input<bool>? ContainerRegistryUseManagedIdentity { get; set; }

        /// <summary>
        /// A `cors` block as defined above.
        /// </summary>
        [Input("cors")]
        public Input<Inputs.LinuxWebAppSiteConfigCorsArgs>? Cors { get; set; }

        [Input("defaultDocuments")]
        private InputList<string>? _defaultDocuments;

        /// <summary>
        /// Specifies a list of Default Documents for the Linux Web App.
        /// </summary>
        public InputList<string> DefaultDocuments
        {
            get => _defaultDocuments ?? (_defaultDocuments = new InputList<string>());
            set => _defaultDocuments = value;
        }

        [Input("detailedErrorLoggingEnabled")]
        public Input<bool>? DetailedErrorLoggingEnabled { get; set; }

        [Input("ftpsState")]
        public Input<string>? FtpsState { get; set; }

        /// <summary>
        /// The amount of time in minutes that a node can be unhealthy before being removed from the load balancer. Possible values are between `2` and `10`. Only valid in conjunction with `health_check_path`.
        /// </summary>
        [Input("healthCheckEvictionTimeInMin")]
        public Input<int>? HealthCheckEvictionTimeInMin { get; set; }

        /// <summary>
        /// The path to the Health Check.
        /// </summary>
        [Input("healthCheckPath")]
        public Input<string>? HealthCheckPath { get; set; }

        /// <summary>
        /// Should the HTTP2 be enabled?
        /// </summary>
        [Input("http2Enabled")]
        public Input<bool>? Http2Enabled { get; set; }

        [Input("ipRestrictions")]
        private InputList<Inputs.LinuxWebAppSiteConfigIpRestrictionArgs>? _ipRestrictions;

        /// <summary>
        /// One or more `ip_restriction` blocks as defined above.
        /// </summary>
        public InputList<Inputs.LinuxWebAppSiteConfigIpRestrictionArgs> IpRestrictions
        {
            get => _ipRestrictions ?? (_ipRestrictions = new InputList<Inputs.LinuxWebAppSiteConfigIpRestrictionArgs>());
            set => _ipRestrictions = value;
        }

        [Input("linuxFxVersion")]
        public Input<string>? LinuxFxVersion { get; set; }

        /// <summary>
        /// The Site load balancing. Possible values include: `WeightedRoundRobin`, `LeastRequests`, `LeastResponseTime`, `WeightedTotalTraffic`, `RequestHash`, `PerSiteRoundRobin`. Defaults to `LeastRequests` if omitted.
        /// </summary>
        [Input("loadBalancingMode")]
        public Input<string>? LoadBalancingMode { get; set; }

        /// <summary>
        /// Use Local MySQL. Defaults to `false`.
        /// </summary>
        [Input("localMysqlEnabled")]
        public Input<bool>? LocalMysqlEnabled { get; set; }

        /// <summary>
        /// Managed pipeline mode. Possible values include `Integrated`, and `Classic`. Defaults to `Integrated`.
        /// </summary>
        [Input("managedPipelineMode")]
        public Input<string>? ManagedPipelineMode { get; set; }

        /// <summary>
        /// The configures the minimum version of TLS required for SSL requests. Possible values include: `1.0`, `1.1`, and `1.2`. Defaults to `1.2`.
        /// </summary>
        [Input("minimumTlsVersion")]
        public Input<string>? MinimumTlsVersion { get; set; }

        /// <summary>
        /// Should Remote Debugging be enabled? Defaults to `false`.
        /// </summary>
        [Input("remoteDebuggingEnabled")]
        public Input<bool>? RemoteDebuggingEnabled { get; set; }

        /// <summary>
        /// The Remote Debugging Version. Possible values include `VS2017`, `VS2019` and `VS2022`.
        /// </summary>
        [Input("remoteDebuggingVersion")]
        public Input<string>? RemoteDebuggingVersion { get; set; }

        [Input("scmIpRestrictions")]
        private InputList<Inputs.LinuxWebAppSiteConfigScmIpRestrictionArgs>? _scmIpRestrictions;

        /// <summary>
        /// One or more `scm_ip_restriction` blocks as defined above.
        /// </summary>
        public InputList<Inputs.LinuxWebAppSiteConfigScmIpRestrictionArgs> ScmIpRestrictions
        {
            get => _scmIpRestrictions ?? (_scmIpRestrictions = new InputList<Inputs.LinuxWebAppSiteConfigScmIpRestrictionArgs>());
            set => _scmIpRestrictions = value;
        }

        /// <summary>
        /// The configures the minimum version of TLS required for SSL requests to the SCM site Possible values include: `1.0`, `1.1`, and `1.2`. Defaults to `1.2`.
        /// </summary>
        [Input("scmMinimumTlsVersion")]
        public Input<string>? ScmMinimumTlsVersion { get; set; }

        [Input("scmType")]
        public Input<string>? ScmType { get; set; }

        /// <summary>
        /// Should the Linux Web App `ip_restriction` configuration be used for the SCM also.
        /// </summary>
        [Input("scmUseMainIpRestriction")]
        public Input<bool>? ScmUseMainIpRestriction { get; set; }

        /// <summary>
        /// Should the Linux Web App use a 32-bit worker? Defaults to `true`.
        /// </summary>
        [Input("use32BitWorker")]
        public Input<bool>? Use32BitWorker { get; set; }

        /// <summary>
        /// Should all outbound traffic have NAT Gateways, Network Security Groups and User Defined Routes applied? Defaults to `false`.
        /// </summary>
        [Input("vnetRouteAllEnabled")]
        public Input<bool>? VnetRouteAllEnabled { get; set; }

        /// <summary>
        /// Should Web Sockets be enabled? Defaults to `false`.
        /// </summary>
        [Input("websocketsEnabled")]
        public Input<bool>? WebsocketsEnabled { get; set; }

        /// <summary>
        /// The number of Workers for this Linux App Service.
        /// </summary>
        [Input("workerCount")]
        public Input<int>? WorkerCount { get; set; }

        public LinuxWebAppSiteConfigArgs()
        {
        }
        public static new LinuxWebAppSiteConfigArgs Empty => new LinuxWebAppSiteConfigArgs();
    }
}
