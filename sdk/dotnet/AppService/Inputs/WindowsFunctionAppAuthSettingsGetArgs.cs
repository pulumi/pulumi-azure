// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.AppService.Inputs
{

    public sealed class WindowsFunctionAppAuthSettingsGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// An `active_directory` block as defined above.
        /// </summary>
        [Input("activeDirectory")]
        public Input<Inputs.WindowsFunctionAppAuthSettingsActiveDirectoryGetArgs>? ActiveDirectory { get; set; }

        [Input("additionalLoginParameters")]
        private InputMap<string>? _additionalLoginParameters;

        /// <summary>
        /// Specifies a map of login Parameters to send to the OpenID Connect authorization endpoint when a user logs in.
        /// </summary>
        public InputMap<string> AdditionalLoginParameters
        {
            get => _additionalLoginParameters ?? (_additionalLoginParameters = new InputMap<string>());
            set => _additionalLoginParameters = value;
        }

        [Input("allowedExternalRedirectUrls")]
        private InputList<string>? _allowedExternalRedirectUrls;

        /// <summary>
        /// Specifies a list of External URLs that can be redirected to as part of logging in or logging out of the Windows Function App.
        /// </summary>
        public InputList<string> AllowedExternalRedirectUrls
        {
            get => _allowedExternalRedirectUrls ?? (_allowedExternalRedirectUrls = new InputList<string>());
            set => _allowedExternalRedirectUrls = value;
        }

        /// <summary>
        /// The Default Authentication Provider to use when the `unauthenticated_action` is set to `RedirectToLoginPage`. Possible values include: `apple`, `azureactivedirectory`, `facebook`, `github`, `google`, `twitter` and the `name` of your `custom_oidc_v2` provider.
        /// 
        /// &gt; **NOTE:** Whilst any value will be accepted by the API for `default_provider`, it can leave the app in an unusable state if this value does not correspond to the name of a known provider (either built-in value, or custom_oidc name) as it is used to build the auth endpoint URI.
        /// </summary>
        [Input("defaultProvider")]
        public Input<string>? DefaultProvider { get; set; }

        /// <summary>
        /// Should the Authentication / Authorization feature be enabled for the Windows Function App?
        /// </summary>
        [Input("enabled", required: true)]
        public Input<bool> Enabled { get; set; } = null!;

        /// <summary>
        /// A `facebook` block as defined below.
        /// </summary>
        [Input("facebook")]
        public Input<Inputs.WindowsFunctionAppAuthSettingsFacebookGetArgs>? Facebook { get; set; }

        /// <summary>
        /// A `github` block as defined below.
        /// </summary>
        [Input("github")]
        public Input<Inputs.WindowsFunctionAppAuthSettingsGithubGetArgs>? Github { get; set; }

        /// <summary>
        /// A `google` block as defined below.
        /// </summary>
        [Input("google")]
        public Input<Inputs.WindowsFunctionAppAuthSettingsGoogleGetArgs>? Google { get; set; }

        /// <summary>
        /// The OpenID Connect Issuer URI that represents the entity which issues access tokens for this Windows Function App.
        /// 
        /// &gt; **NOTE:** When using Azure Active Directory, this value is the URI of the directory tenant, e.g. &lt;https://sts.windows.net/{tenant-guid}/&gt;.
        /// </summary>
        [Input("issuer")]
        public Input<string>? Issuer { get; set; }

        /// <summary>
        /// A `microsoft` block as defined below.
        /// </summary>
        [Input("microsoft")]
        public Input<Inputs.WindowsFunctionAppAuthSettingsMicrosoftGetArgs>? Microsoft { get; set; }

        /// <summary>
        /// The Runtime Version of the Authentication and Authorisation feature of this App. Defaults to `~1`.
        /// </summary>
        [Input("runtimeVersion")]
        public Input<string>? RuntimeVersion { get; set; }

        /// <summary>
        /// The number of hours after session token expiration that a session token can be used to call the token refresh API. Defaults to `72` hours.
        /// </summary>
        [Input("tokenRefreshExtensionHours")]
        public Input<double>? TokenRefreshExtensionHours { get; set; }

        /// <summary>
        /// Should the Windows Function App durably store platform-specific security tokens that are obtained during login flows? Defaults to `false`.
        /// </summary>
        [Input("tokenStoreEnabled")]
        public Input<bool>? TokenStoreEnabled { get; set; }

        /// <summary>
        /// A `twitter` block as defined below.
        /// </summary>
        [Input("twitter")]
        public Input<Inputs.WindowsFunctionAppAuthSettingsTwitterGetArgs>? Twitter { get; set; }

        /// <summary>
        /// The action to take when an unauthenticated client attempts to access the app. Possible values include: `RedirectToLoginPage`, `AllowAnonymous`.
        /// </summary>
        [Input("unauthenticatedClientAction")]
        public Input<string>? UnauthenticatedClientAction { get; set; }

        public WindowsFunctionAppAuthSettingsGetArgs()
        {
        }
        public static new WindowsFunctionAppAuthSettingsGetArgs Empty => new WindowsFunctionAppAuthSettingsGetArgs();
    }
}
