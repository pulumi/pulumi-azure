// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.AppService.Inputs
{

    public sealed class WindowsWebAppSlotAuthSettingsV2ActiveDirectoryV2Args : global::Pulumi.ResourceArgs
    {
        [Input("allowedApplications")]
        private InputList<string>? _allowedApplications;

        /// <summary>
        /// The list of allowed Applications for the Default Authorisation Policy.
        /// </summary>
        public InputList<string> AllowedApplications
        {
            get => _allowedApplications ?? (_allowedApplications = new InputList<string>());
            set => _allowedApplications = value;
        }

        [Input("allowedAudiences")]
        private InputList<string>? _allowedAudiences;

        /// <summary>
        /// Specifies a list of Allowed audience values to consider when validating JWTs issued by Azure Active Directory.
        /// 
        /// &gt; **Note:** The `client_id` value is always considered an allowed audience, so should not be included.
        /// </summary>
        public InputList<string> AllowedAudiences
        {
            get => _allowedAudiences ?? (_allowedAudiences = new InputList<string>());
            set => _allowedAudiences = value;
        }

        [Input("allowedGroups")]
        private InputList<string>? _allowedGroups;

        /// <summary>
        /// The list of allowed Group Names for the Default Authorisation Policy.
        /// </summary>
        public InputList<string> AllowedGroups
        {
            get => _allowedGroups ?? (_allowedGroups = new InputList<string>());
            set => _allowedGroups = value;
        }

        [Input("allowedIdentities")]
        private InputList<string>? _allowedIdentities;

        /// <summary>
        /// The list of allowed Identities for the Default Authorisation Policy.
        /// </summary>
        public InputList<string> AllowedIdentities
        {
            get => _allowedIdentities ?? (_allowedIdentities = new InputList<string>());
            set => _allowedIdentities = value;
        }

        /// <summary>
        /// The ID of the Client to use to authenticate with Azure Active Directory.
        /// </summary>
        [Input("clientId", required: true)]
        public Input<string> ClientId { get; set; } = null!;

        /// <summary>
        /// The thumbprint of the certificate used for signing purposes.
        /// </summary>
        [Input("clientSecretCertificateThumbprint")]
        public Input<string>? ClientSecretCertificateThumbprint { get; set; }

        /// <summary>
        /// The App Setting name that contains the client secret of the Client. Cannot be used with `client_secret`.
        /// </summary>
        [Input("clientSecretSettingName")]
        public Input<string>? ClientSecretSettingName { get; set; }

        [Input("jwtAllowedClientApplications")]
        private InputList<string>? _jwtAllowedClientApplications;

        /// <summary>
        /// A list of Allowed Client Applications in the JWT Claim.
        /// </summary>
        public InputList<string> JwtAllowedClientApplications
        {
            get => _jwtAllowedClientApplications ?? (_jwtAllowedClientApplications = new InputList<string>());
            set => _jwtAllowedClientApplications = value;
        }

        [Input("jwtAllowedGroups")]
        private InputList<string>? _jwtAllowedGroups;

        /// <summary>
        /// A list of Allowed Groups in the JWT Claim.
        /// </summary>
        public InputList<string> JwtAllowedGroups
        {
            get => _jwtAllowedGroups ?? (_jwtAllowedGroups = new InputList<string>());
            set => _jwtAllowedGroups = value;
        }

        [Input("loginParameters")]
        private InputMap<string>? _loginParameters;

        /// <summary>
        /// A map of key-value pairs to send to the Authorisation Endpoint when a user logs in.
        /// </summary>
        public InputMap<string> LoginParameters
        {
            get => _loginParameters ?? (_loginParameters = new InputMap<string>());
            set => _loginParameters = value;
        }

        /// <summary>
        /// The Azure Tenant Endpoint for the Authenticating Tenant. e.g. `https://login.microsoftonline.com/v2.0/{tenant-guid}/`
        /// </summary>
        [Input("tenantAuthEndpoint", required: true)]
        public Input<string> TenantAuthEndpoint { get; set; } = null!;

        /// <summary>
        /// Should the www-authenticate provider should be omitted from the request? Defaults to `false`.
        /// </summary>
        [Input("wwwAuthenticationDisabled")]
        public Input<bool>? WwwAuthenticationDisabled { get; set; }

        public WindowsWebAppSlotAuthSettingsV2ActiveDirectoryV2Args()
        {
        }
        public static new WindowsWebAppSlotAuthSettingsV2ActiveDirectoryV2Args Empty => new WindowsWebAppSlotAuthSettingsV2ActiveDirectoryV2Args();
    }
}
