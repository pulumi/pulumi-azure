// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.AppService
{
    public static class GetSourceControlToken
    {
        /// <summary>
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Azure = Pulumi.Azure;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Azure.AppService.GetSourceControlToken.Invoke(new()
        ///     {
        ///         Type = "GitHub",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["id"] = data.Azurerm_app_service_github_token.Example.Id,
        ///     };
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetSourceControlTokenResult> InvokeAsync(GetSourceControlTokenArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSourceControlTokenResult>("azure:appservice/getSourceControlToken:getSourceControlToken", args ?? new GetSourceControlTokenArgs(), options.WithDefaults());

        /// <summary>
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Azure = Pulumi.Azure;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Azure.AppService.GetSourceControlToken.Invoke(new()
        ///     {
        ///         Type = "GitHub",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["id"] = data.Azurerm_app_service_github_token.Example.Id,
        ///     };
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetSourceControlTokenResult> Invoke(GetSourceControlTokenInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSourceControlTokenResult>("azure:appservice/getSourceControlToken:getSourceControlToken", args ?? new GetSourceControlTokenInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSourceControlTokenArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The Token type. Possible values include `Bitbucket`, `Dropbox`, `Github`, and `OneDrive`.
        /// </summary>
        [Input("type", required: true)]
        public string Type { get; set; } = null!;

        public GetSourceControlTokenArgs()
        {
        }
        public static new GetSourceControlTokenArgs Empty => new GetSourceControlTokenArgs();
    }

    public sealed class GetSourceControlTokenInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The Token type. Possible values include `Bitbucket`, `Dropbox`, `Github`, and `OneDrive`.
        /// </summary>
        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        public GetSourceControlTokenInvokeArgs()
        {
        }
        public static new GetSourceControlTokenInvokeArgs Empty => new GetSourceControlTokenInvokeArgs();
    }


    [OutputType]
    public sealed class GetSourceControlTokenResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The GitHub Token value.
        /// </summary>
        public readonly string Token;
        public readonly string TokenSecret;
        public readonly string Type;

        [OutputConstructor]
        private GetSourceControlTokenResult(
            string id,

            string token,

            string tokenSecret,

            string type)
        {
            Id = id;
            Token = token;
            TokenSecret = tokenSecret;
            Type = type;
        }
    }
}
