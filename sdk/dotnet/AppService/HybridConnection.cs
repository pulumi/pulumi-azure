// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.AppService
{
    /// <summary>
    /// Manages an App Service Hybrid Connection for an existing App Service, Relay and Service Bus.
    /// 
    /// !&gt; **NOTE:** This resource has been deprecated in version 3.0 of the AzureRM provider and will be removed in version 4.0. Please use `azure.appservice.FunctionAppHybridConnection` resources instead.
    /// 
    /// ## Import
    /// 
    /// App Service Hybrid Connections can be imported using the `resource id`, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import azure:appservice/hybridConnection:HybridConnection example /subscriptions/00000000-0000-0000-0000-00000000000/resourceGroups/exampleResourceGroup1/providers/Microsoft.Web/sites/exampleAppService1/hybridConnectionNamespaces/exampleRN1/relays/exampleRHC1
    /// ```
    /// </summary>
    [AzureResourceType("azure:appservice/hybridConnection:HybridConnection")]
    public partial class HybridConnection : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Specifies the name of the App Service. Changing this forces a new resource to be created.
        /// </summary>
        [Output("appServiceName")]
        public Output<string> AppServiceName { get; private set; } = null!;

        /// <summary>
        /// The hostname of the endpoint.
        /// </summary>
        [Output("hostname")]
        public Output<string> Hostname { get; private set; } = null!;

        /// <summary>
        /// The name of the Relay Namespace.
        /// </summary>
        [Output("namespaceName")]
        public Output<string> NamespaceName { get; private set; } = null!;

        /// <summary>
        /// The port of the endpoint.
        /// </summary>
        [Output("port")]
        public Output<int> Port { get; private set; } = null!;

        /// <summary>
        /// The ID of the Service Bus Relay. Changing this forces a new resource to be created.
        /// </summary>
        [Output("relayId")]
        public Output<string> RelayId { get; private set; } = null!;

        [Output("relayName")]
        public Output<string> RelayName { get; private set; } = null!;

        /// <summary>
        /// The name of the resource group in which to create the App Service. Changing this forces a new resource to be created.
        /// </summary>
        [Output("resourceGroupName")]
        public Output<string> ResourceGroupName { get; private set; } = null!;

        /// <summary>
        /// The name of the Service Bus key which has Send permissions. Defaults to `RootManageSharedAccessKey`.
        /// </summary>
        [Output("sendKeyName")]
        public Output<string?> SendKeyName { get; private set; } = null!;

        /// <summary>
        /// The value of the Service Bus Primary Access key.
        /// </summary>
        [Output("sendKeyValue")]
        public Output<string> SendKeyValue { get; private set; } = null!;

        /// <summary>
        /// The name of the Service Bus namespace.
        /// </summary>
        [Output("serviceBusNamespace")]
        public Output<string> ServiceBusNamespace { get; private set; } = null!;

        /// <summary>
        /// The suffix for the service bus endpoint.
        /// </summary>
        [Output("serviceBusSuffix")]
        public Output<string> ServiceBusSuffix { get; private set; } = null!;


        /// <summary>
        /// Create a HybridConnection resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public HybridConnection(string name, HybridConnectionArgs args, CustomResourceOptions? options = null)
            : base("azure:appservice/hybridConnection:HybridConnection", name, args ?? new HybridConnectionArgs(), MakeResourceOptions(options, ""))
        {
        }

        private HybridConnection(string name, Input<string> id, HybridConnectionState? state = null, CustomResourceOptions? options = null)
            : base("azure:appservice/hybridConnection:HybridConnection", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                AdditionalSecretOutputs =
                {
                    "sendKeyValue",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing HybridConnection resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static HybridConnection Get(string name, Input<string> id, HybridConnectionState? state = null, CustomResourceOptions? options = null)
        {
            return new HybridConnection(name, id, state, options);
        }
    }

    public sealed class HybridConnectionArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies the name of the App Service. Changing this forces a new resource to be created.
        /// </summary>
        [Input("appServiceName", required: true)]
        public Input<string> AppServiceName { get; set; } = null!;

        /// <summary>
        /// The hostname of the endpoint.
        /// </summary>
        [Input("hostname", required: true)]
        public Input<string> Hostname { get; set; } = null!;

        /// <summary>
        /// The port of the endpoint.
        /// </summary>
        [Input("port", required: true)]
        public Input<int> Port { get; set; } = null!;

        /// <summary>
        /// The ID of the Service Bus Relay. Changing this forces a new resource to be created.
        /// </summary>
        [Input("relayId", required: true)]
        public Input<string> RelayId { get; set; } = null!;

        /// <summary>
        /// The name of the resource group in which to create the App Service. Changing this forces a new resource to be created.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the Service Bus key which has Send permissions. Defaults to `RootManageSharedAccessKey`.
        /// </summary>
        [Input("sendKeyName")]
        public Input<string>? SendKeyName { get; set; }

        public HybridConnectionArgs()
        {
        }
        public static new HybridConnectionArgs Empty => new HybridConnectionArgs();
    }

    public sealed class HybridConnectionState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies the name of the App Service. Changing this forces a new resource to be created.
        /// </summary>
        [Input("appServiceName")]
        public Input<string>? AppServiceName { get; set; }

        /// <summary>
        /// The hostname of the endpoint.
        /// </summary>
        [Input("hostname")]
        public Input<string>? Hostname { get; set; }

        /// <summary>
        /// The name of the Relay Namespace.
        /// </summary>
        [Input("namespaceName")]
        public Input<string>? NamespaceName { get; set; }

        /// <summary>
        /// The port of the endpoint.
        /// </summary>
        [Input("port")]
        public Input<int>? Port { get; set; }

        /// <summary>
        /// The ID of the Service Bus Relay. Changing this forces a new resource to be created.
        /// </summary>
        [Input("relayId")]
        public Input<string>? RelayId { get; set; }

        [Input("relayName")]
        public Input<string>? RelayName { get; set; }

        /// <summary>
        /// The name of the resource group in which to create the App Service. Changing this forces a new resource to be created.
        /// </summary>
        [Input("resourceGroupName")]
        public Input<string>? ResourceGroupName { get; set; }

        /// <summary>
        /// The name of the Service Bus key which has Send permissions. Defaults to `RootManageSharedAccessKey`.
        /// </summary>
        [Input("sendKeyName")]
        public Input<string>? SendKeyName { get; set; }

        [Input("sendKeyValue")]
        private Input<string>? _sendKeyValue;

        /// <summary>
        /// The value of the Service Bus Primary Access key.
        /// </summary>
        public Input<string>? SendKeyValue
        {
            get => _sendKeyValue;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _sendKeyValue = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// The name of the Service Bus namespace.
        /// </summary>
        [Input("serviceBusNamespace")]
        public Input<string>? ServiceBusNamespace { get; set; }

        /// <summary>
        /// The suffix for the service bus endpoint.
        /// </summary>
        [Input("serviceBusSuffix")]
        public Input<string>? ServiceBusSuffix { get; set; }

        public HybridConnectionState()
        {
        }
        public static new HybridConnectionState Empty => new HybridConnectionState();
    }
}
