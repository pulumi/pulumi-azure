// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Hpc.Outputs
{

    [OutputType]
    public sealed class CacheDirectoryLdap
    {
        /// <summary>
        /// The base distinguished name (DN) for the LDAP domain.
        /// </summary>
        public readonly string BaseDn;
        /// <summary>
        /// A `bind` block as defined above.
        /// </summary>
        public readonly Outputs.CacheDirectoryLdapBind? Bind;
        /// <summary>
        /// The URI of the CA certificate to validate the LDAP secure connection.
        /// </summary>
        public readonly string? CertificateValidationUri;
        /// <summary>
        /// Whether the certificate should be automatically downloaded. This can be set to `true` only when `certificate_validation_uri` is provided. Defaults to `false`.
        /// </summary>
        public readonly bool? DownloadCertificateAutomatically;
        /// <summary>
        /// Whether the LDAP connection should be encrypted? Defaults to `false`.
        /// </summary>
        public readonly bool? Encrypted;
        /// <summary>
        /// The FQDN or IP address of the LDAP server.
        /// </summary>
        public readonly string Server;

        [OutputConstructor]
        private CacheDirectoryLdap(
            string baseDn,

            Outputs.CacheDirectoryLdapBind? bind,

            string? certificateValidationUri,

            bool? downloadCertificateAutomatically,

            bool? encrypted,

            string server)
        {
            BaseDn = baseDn;
            Bind = bind;
            CertificateValidationUri = certificateValidationUri;
            DownloadCertificateAutomatically = downloadCertificateAutomatically;
            Encrypted = encrypted;
            Server = server;
        }
    }
}
