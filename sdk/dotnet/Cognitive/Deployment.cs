// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Cognitive
{
    /// <summary>
    /// Manages a Cognitive Services Account Deployment.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Azure = Pulumi.Azure;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var exampleResourceGroup = new Azure.Core.ResourceGroup("exampleResourceGroup", new()
    ///     {
    ///         Location = "West Europe",
    ///     });
    /// 
    ///     var exampleAccount = new Azure.Cognitive.Account("exampleAccount", new()
    ///     {
    ///         Location = exampleResourceGroup.Location,
    ///         ResourceGroupName = exampleResourceGroup.Name,
    ///         Kind = "OpenAI",
    ///         SkuName = "S0",
    ///     });
    /// 
    ///     var exampleDeployment = new Azure.Cognitive.Deployment("exampleDeployment", new()
    ///     {
    ///         CognitiveAccountId = exampleAccount.Id,
    ///         Model = new Azure.Cognitive.Inputs.DeploymentModelArgs
    ///         {
    ///             Format = "OpenAI",
    ///             Name = "text-curie-001",
    ///             Version = "1",
    ///         },
    ///         Scale = new Azure.Cognitive.Inputs.DeploymentScaleArgs
    ///         {
    ///             Type = "Standard",
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Cognitive Services Account Deployment can be imported using the `resource id`, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import azure:cognitive/deployment:Deployment example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resourceGroup1/providers/Microsoft.CognitiveServices/accounts/account1/deployments/deployment1
    /// ```
    /// </summary>
    [AzureResourceType("azure:cognitive/deployment:Deployment")]
    public partial class Deployment : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The ID of the Cognitive Services Account. Changing this forces a new resource to be created.
        /// </summary>
        [Output("cognitiveAccountId")]
        public Output<string> CognitiveAccountId { get; private set; } = null!;

        /// <summary>
        /// A `model` block as defined below. Changing this forces a new resource to be created.
        /// </summary>
        [Output("model")]
        public Output<Outputs.DeploymentModel> Model { get; private set; } = null!;

        /// <summary>
        /// The name of the Cognitive Services Account Deployment. Changing this forces a new resource to be created.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The name of RAI policy.
        /// </summary>
        [Output("raiPolicyName")]
        public Output<string?> RaiPolicyName { get; private set; } = null!;

        /// <summary>
        /// A `scale` block as defined below.
        /// </summary>
        [Output("scale")]
        public Output<Outputs.DeploymentScale> Scale { get; private set; } = null!;

        /// <summary>
        /// Deployment model version upgrade option. Possible values are `OnceNewDefaultVersionAvailable`, `OnceCurrentVersionExpired`, and `NoAutoUpgrade`. Defaults to `OnceNewDefaultVersionAvailable`. Changing this forces a new resource to be created.
        /// </summary>
        [Output("versionUpgradeOption")]
        public Output<string?> VersionUpgradeOption { get; private set; } = null!;


        /// <summary>
        /// Create a Deployment resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Deployment(string name, DeploymentArgs args, CustomResourceOptions? options = null)
            : base("azure:cognitive/deployment:Deployment", name, args ?? new DeploymentArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Deployment(string name, Input<string> id, DeploymentState? state = null, CustomResourceOptions? options = null)
            : base("azure:cognitive/deployment:Deployment", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Deployment resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Deployment Get(string name, Input<string> id, DeploymentState? state = null, CustomResourceOptions? options = null)
        {
            return new Deployment(name, id, state, options);
        }
    }

    public sealed class DeploymentArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the Cognitive Services Account. Changing this forces a new resource to be created.
        /// </summary>
        [Input("cognitiveAccountId", required: true)]
        public Input<string> CognitiveAccountId { get; set; } = null!;

        /// <summary>
        /// A `model` block as defined below. Changing this forces a new resource to be created.
        /// </summary>
        [Input("model", required: true)]
        public Input<Inputs.DeploymentModelArgs> Model { get; set; } = null!;

        /// <summary>
        /// The name of the Cognitive Services Account Deployment. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The name of RAI policy.
        /// </summary>
        [Input("raiPolicyName")]
        public Input<string>? RaiPolicyName { get; set; }

        /// <summary>
        /// A `scale` block as defined below.
        /// </summary>
        [Input("scale", required: true)]
        public Input<Inputs.DeploymentScaleArgs> Scale { get; set; } = null!;

        /// <summary>
        /// Deployment model version upgrade option. Possible values are `OnceNewDefaultVersionAvailable`, `OnceCurrentVersionExpired`, and `NoAutoUpgrade`. Defaults to `OnceNewDefaultVersionAvailable`. Changing this forces a new resource to be created.
        /// </summary>
        [Input("versionUpgradeOption")]
        public Input<string>? VersionUpgradeOption { get; set; }

        public DeploymentArgs()
        {
        }
        public static new DeploymentArgs Empty => new DeploymentArgs();
    }

    public sealed class DeploymentState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the Cognitive Services Account. Changing this forces a new resource to be created.
        /// </summary>
        [Input("cognitiveAccountId")]
        public Input<string>? CognitiveAccountId { get; set; }

        /// <summary>
        /// A `model` block as defined below. Changing this forces a new resource to be created.
        /// </summary>
        [Input("model")]
        public Input<Inputs.DeploymentModelGetArgs>? Model { get; set; }

        /// <summary>
        /// The name of the Cognitive Services Account Deployment. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The name of RAI policy.
        /// </summary>
        [Input("raiPolicyName")]
        public Input<string>? RaiPolicyName { get; set; }

        /// <summary>
        /// A `scale` block as defined below.
        /// </summary>
        [Input("scale")]
        public Input<Inputs.DeploymentScaleGetArgs>? Scale { get; set; }

        /// <summary>
        /// Deployment model version upgrade option. Possible values are `OnceNewDefaultVersionAvailable`, `OnceCurrentVersionExpired`, and `NoAutoUpgrade`. Defaults to `OnceNewDefaultVersionAvailable`. Changing this forces a new resource to be created.
        /// </summary>
        [Input("versionUpgradeOption")]
        public Input<string>? VersionUpgradeOption { get; set; }

        public DeploymentState()
        {
        }
        public static new DeploymentState Empty => new DeploymentState();
    }
}
