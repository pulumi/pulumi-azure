// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Cognitive.Outputs
{

    [OutputType]
    public sealed class DeploymentSku
    {
        /// <summary>
        /// Tokens-per-Minute (TPM). The unit of measure for this field is in the thousands of Tokens-per-Minute. Defaults to `1` which means that the limitation is `1000` tokens per minute. If the resources SKU supports scale in/out then the capacity field should be included in the resources' configuration. If the scale in/out is not supported by the resources SKU then this field can be safely omitted. For more information about TPM please see the [product documentation](https://learn.microsoft.com/azure/ai-services/openai/how-to/quota?tabs=rest).
        /// </summary>
        public readonly int? Capacity;
        /// <summary>
        /// If the service has different generations of hardware, for the same SKU, then that can be captured here. Changing this forces a new resource to be created.
        /// </summary>
        public readonly string? Family;
        public readonly string Name;
        /// <summary>
        /// The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. Changing this forces a new resource to be created.
        /// </summary>
        public readonly string? Size;
        /// <summary>
        /// Possible values are `Free`, `Basic`, `Standard`, `Premium`, `Enterprise`. This property is required only when multiple tiers are available with the SKU name. Changing this forces a new resource to be created.
        /// </summary>
        public readonly string? Tier;

        [OutputConstructor]
        private DeploymentSku(
            int? capacity,

            string? family,

            string name,

            string? size,

            string? tier)
        {
            Capacity = capacity;
            Family = family;
            Name = name;
            Size = size;
            Tier = tier;
        }
    }
}
