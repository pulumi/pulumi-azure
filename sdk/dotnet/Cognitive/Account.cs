// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Cognitive
{
    /// <summary>
    /// Manages a Cognitive Services Account.
    /// 
    /// &gt; **Note:** Version v2.65.0 of the Azure Provider and later will attempt to Purge the Cognitive Account during deletion. This feature can be disabled using the `features` block within the `provider` block, see the provider documentation on the features block for more information.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Azure = Pulumi.Azure;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var exampleResourceGroup = new Azure.Core.ResourceGroup("exampleResourceGroup", new()
    ///     {
    ///         Location = "West Europe",
    ///     });
    /// 
    ///     var exampleAccount = new Azure.Cognitive.Account("exampleAccount", new()
    ///     {
    ///         Location = exampleResourceGroup.Location,
    ///         ResourceGroupName = exampleResourceGroup.Name,
    ///         Kind = "Face",
    ///         SkuName = "S0",
    ///         Tags = 
    ///         {
    ///             { "Acceptance", "Test" },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Cognitive Service Accounts can be imported using the `resource id`, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import azure:cognitive/account:Account account1 /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.CognitiveServices/accounts/account1
    /// ```
    /// </summary>
    [AzureResourceType("azure:cognitive/account:Account")]
    public partial class Account : global::Pulumi.CustomResource
    {
        /// <summary>
        /// If `kind` is `TextAnalytics` this specifies the ID of the Search service.
        /// </summary>
        [Output("customQuestionAnsweringSearchServiceId")]
        public Output<string?> CustomQuestionAnsweringSearchServiceId { get; private set; } = null!;

        /// <summary>
        /// If `kind` is `TextAnalytics` this specifies the key of the Search service.
        /// 
        /// &gt; **NOTE:** `custom_question_answering_search_service_id` and `custom_question_answering_search_service_key` are used for [Custom Question Answering, the renamed version of QnA Maker](https://docs.microsoft.com/azure/cognitive-services/qnamaker/custom-question-answering), while `qna_runtime_endpoint` is used for [the old version of QnA Maker](https://docs.microsoft.com/azure/cognitive-services/qnamaker/overview/overview)
        /// </summary>
        [Output("customQuestionAnsweringSearchServiceKey")]
        public Output<string?> CustomQuestionAnsweringSearchServiceKey { get; private set; } = null!;

        /// <summary>
        /// The subdomain name used for token-based authentication. This property is required when `network_acls` is specified. Changing this forces a new resource to be created.
        /// </summary>
        [Output("customSubdomainName")]
        public Output<string?> CustomSubdomainName { get; private set; } = null!;

        /// <summary>
        /// A `customer_managed_key` block as documented below.
        /// </summary>
        [Output("customerManagedKey")]
        public Output<Outputs.AccountCustomerManagedKey?> CustomerManagedKey { get; private set; } = null!;

        /// <summary>
        /// Whether to enable the dynamic throttling for this Cognitive Service Account.
        /// </summary>
        [Output("dynamicThrottlingEnabled")]
        public Output<bool?> DynamicThrottlingEnabled { get; private set; } = null!;

        /// <summary>
        /// The endpoint used to connect to the Cognitive Service Account.
        /// </summary>
        [Output("endpoint")]
        public Output<string> Endpoint { get; private set; } = null!;

        /// <summary>
        /// List of FQDNs allowed for the Cognitive Account.
        /// </summary>
        [Output("fqdns")]
        public Output<ImmutableArray<string>> Fqdns { get; private set; } = null!;

        /// <summary>
        /// An `identity` block as defined below.
        /// </summary>
        [Output("identity")]
        public Output<Outputs.AccountIdentity?> Identity { get; private set; } = null!;

        /// <summary>
        /// Specifies the type of Cognitive Service Account that should be created. Possible values are `Academic`, `AnomalyDetector`, `Bing.Autosuggest`, `Bing.Autosuggest.v7`, `Bing.CustomSearch`, `Bing.Search`, `Bing.Search.v7`, `Bing.Speech`, `Bing.SpellCheck`, `Bing.SpellCheck.v7`, `CognitiveServices`, `ComputerVision`, `ContentModerator`, `CustomSpeech`, `CustomVision.Prediction`, `CustomVision.Training`, `Emotion`, `Face`, `FormRecognizer`, `ImmersiveReader`, `LUIS`, `LUIS.Authoring`, `MetricsAdvisor`, `OpenAI`, `Personalizer`, `QnAMaker`, `Recommendations`, `SpeakerRecognition`, `Speech`, `SpeechServices`, `SpeechTranslation`, `TextAnalytics`, `TextTranslation` and `WebLM`. Changing this forces a new resource to be created.
        /// 
        /// &gt; **NOTE:** New Bing Search resources cannot be created as their APIs are moving from Cognitive Services Platform to new surface area under Microsoft.com. Starting from October 30, 2020, existing instances of Bing Search APIs provisioned via Cognitive Services will be continuously supported for next 3 years or till the end of respective Enterprise Agreement, whichever happens first.
        /// 
        /// &gt; **NOTE:** You must create your first Face, Text Analytics, or Computer Vision resources from the Azure portal to review and acknowledge the terms and conditions. In Azure Portal, the checkbox to accept terms and conditions is only displayed when a US region is selected. More information on [Prerequisites](https://docs.microsoft.com/azure/cognitive-services/cognitive-services-apis-create-account-cli?tabs=windows#prerequisites).
        /// </summary>
        [Output("kind")]
        public Output<string> Kind { get; private set; } = null!;

        /// <summary>
        /// Whether local authentication methods is enabled for the Cognitive Account. Defaults to `true`.
        /// </summary>
        [Output("localAuthEnabled")]
        public Output<bool?> LocalAuthEnabled { get; private set; } = null!;

        /// <summary>
        /// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
        /// </summary>
        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// The Azure AD Client ID (Application ID). This attribute is only set when kind is `MetricsAdvisor`. Changing this forces a new resource to be created.
        /// </summary>
        [Output("metricsAdvisorAadClientId")]
        public Output<string?> MetricsAdvisorAadClientId { get; private set; } = null!;

        /// <summary>
        /// The Azure AD Tenant ID. This attribute is only set when kind is `MetricsAdvisor`. Changing this forces a new resource to be created.
        /// </summary>
        [Output("metricsAdvisorAadTenantId")]
        public Output<string?> MetricsAdvisorAadTenantId { get; private set; } = null!;

        /// <summary>
        /// The super user of Metrics Advisor. This attribute is only set when kind is `MetricsAdvisor`. Changing this forces a new resource to be created.
        /// </summary>
        [Output("metricsAdvisorSuperUserName")]
        public Output<string?> MetricsAdvisorSuperUserName { get; private set; } = null!;

        /// <summary>
        /// The website name of Metrics Advisor. This attribute is only set when kind is `MetricsAdvisor`. Changing this forces a new resource to be created.
        /// 
        /// &gt; **NOTE:** This URL is mandatory if the `kind` is set to `QnAMaker`.
        /// </summary>
        [Output("metricsAdvisorWebsiteName")]
        public Output<string?> MetricsAdvisorWebsiteName { get; private set; } = null!;

        /// <summary>
        /// Specifies the name of the Cognitive Service Account. Changing this forces a new resource to be created.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// A `network_acls` block as defined below. When this property is specified, `custom_subdomain_name` is also required to be set.
        /// </summary>
        [Output("networkAcls")]
        public Output<Outputs.AccountNetworkAcls?> NetworkAcls { get; private set; } = null!;

        /// <summary>
        /// Whether outbound network access is restricted for the Cognitive Account. Defaults to `false`.
        /// </summary>
        [Output("outboundNetworkAccessRestricted")]
        public Output<bool?> OutboundNetworkAccessRestricted { get; private set; } = null!;

        /// <summary>
        /// A primary access key which can be used to connect to the Cognitive Service Account.
        /// </summary>
        [Output("primaryAccessKey")]
        public Output<string> PrimaryAccessKey { get; private set; } = null!;

        /// <summary>
        /// Whether public network access is allowed for the Cognitive Account. Defaults to `true`.
        /// </summary>
        [Output("publicNetworkAccessEnabled")]
        public Output<bool?> PublicNetworkAccessEnabled { get; private set; } = null!;

        /// <summary>
        /// A URL to link a QnAMaker cognitive account to a QnA runtime.
        /// </summary>
        [Output("qnaRuntimeEndpoint")]
        public Output<string?> QnaRuntimeEndpoint { get; private set; } = null!;

        /// <summary>
        /// The name of the resource group in which the Cognitive Service Account is created. Changing this forces a new resource to be created.
        /// </summary>
        [Output("resourceGroupName")]
        public Output<string> ResourceGroupName { get; private set; } = null!;

        /// <summary>
        /// The secondary access key which can be used to connect to the Cognitive Service Account.
        /// </summary>
        [Output("secondaryAccessKey")]
        public Output<string> SecondaryAccessKey { get; private set; } = null!;

        /// <summary>
        /// Specifies the SKU Name for this Cognitive Service Account. Possible values are `F0`, `F1`, `S0`, `S`, `S1`, `S2`, `S3`, `S4`, `S5`, `S6`, `P0`, `P1`, `P2`, `E0` and `DC0`.
        /// 
        /// &gt; **NOTE:** SKU `DC0` is the commitment tier for Cognitive Services containers running in disconnected environments. You must obtain approval from Microsoft by submitting the [request form](https://aka.ms/csdisconnectedcontainers) first, before you can use this SKU. More information on [Purchase a commitment plan to use containers in disconnected environments](https://learn.microsoft.com/en-us/azure/cognitive-services/containers/disconnected-containers?tabs=stt#purchase-a-commitment-plan-to-use-containers-in-disconnected-environments).
        /// </summary>
        [Output("skuName")]
        public Output<string> SkuName { get; private set; } = null!;

        /// <summary>
        /// A `storage` block as defined below.
        /// </summary>
        [Output("storages")]
        public Output<ImmutableArray<Outputs.AccountStorage>> Storages { get; private set; } = null!;

        /// <summary>
        /// A mapping of tags to assign to the resource.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;


        /// <summary>
        /// Create a Account resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Account(string name, AccountArgs args, CustomResourceOptions? options = null)
            : base("azure:cognitive/account:Account", name, args ?? new AccountArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Account(string name, Input<string> id, AccountState? state = null, CustomResourceOptions? options = null)
            : base("azure:cognitive/account:Account", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                AdditionalSecretOutputs =
                {
                    "customQuestionAnsweringSearchServiceKey",
                    "primaryAccessKey",
                    "secondaryAccessKey",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Account resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Account Get(string name, Input<string> id, AccountState? state = null, CustomResourceOptions? options = null)
        {
            return new Account(name, id, state, options);
        }
    }

    public sealed class AccountArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// If `kind` is `TextAnalytics` this specifies the ID of the Search service.
        /// </summary>
        [Input("customQuestionAnsweringSearchServiceId")]
        public Input<string>? CustomQuestionAnsweringSearchServiceId { get; set; }

        [Input("customQuestionAnsweringSearchServiceKey")]
        private Input<string>? _customQuestionAnsweringSearchServiceKey;

        /// <summary>
        /// If `kind` is `TextAnalytics` this specifies the key of the Search service.
        /// 
        /// &gt; **NOTE:** `custom_question_answering_search_service_id` and `custom_question_answering_search_service_key` are used for [Custom Question Answering, the renamed version of QnA Maker](https://docs.microsoft.com/azure/cognitive-services/qnamaker/custom-question-answering), while `qna_runtime_endpoint` is used for [the old version of QnA Maker](https://docs.microsoft.com/azure/cognitive-services/qnamaker/overview/overview)
        /// </summary>
        public Input<string>? CustomQuestionAnsweringSearchServiceKey
        {
            get => _customQuestionAnsweringSearchServiceKey;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _customQuestionAnsweringSearchServiceKey = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// The subdomain name used for token-based authentication. This property is required when `network_acls` is specified. Changing this forces a new resource to be created.
        /// </summary>
        [Input("customSubdomainName")]
        public Input<string>? CustomSubdomainName { get; set; }

        /// <summary>
        /// A `customer_managed_key` block as documented below.
        /// </summary>
        [Input("customerManagedKey")]
        public Input<Inputs.AccountCustomerManagedKeyArgs>? CustomerManagedKey { get; set; }

        /// <summary>
        /// Whether to enable the dynamic throttling for this Cognitive Service Account.
        /// </summary>
        [Input("dynamicThrottlingEnabled")]
        public Input<bool>? DynamicThrottlingEnabled { get; set; }

        [Input("fqdns")]
        private InputList<string>? _fqdns;

        /// <summary>
        /// List of FQDNs allowed for the Cognitive Account.
        /// </summary>
        public InputList<string> Fqdns
        {
            get => _fqdns ?? (_fqdns = new InputList<string>());
            set => _fqdns = value;
        }

        /// <summary>
        /// An `identity` block as defined below.
        /// </summary>
        [Input("identity")]
        public Input<Inputs.AccountIdentityArgs>? Identity { get; set; }

        /// <summary>
        /// Specifies the type of Cognitive Service Account that should be created. Possible values are `Academic`, `AnomalyDetector`, `Bing.Autosuggest`, `Bing.Autosuggest.v7`, `Bing.CustomSearch`, `Bing.Search`, `Bing.Search.v7`, `Bing.Speech`, `Bing.SpellCheck`, `Bing.SpellCheck.v7`, `CognitiveServices`, `ComputerVision`, `ContentModerator`, `CustomSpeech`, `CustomVision.Prediction`, `CustomVision.Training`, `Emotion`, `Face`, `FormRecognizer`, `ImmersiveReader`, `LUIS`, `LUIS.Authoring`, `MetricsAdvisor`, `OpenAI`, `Personalizer`, `QnAMaker`, `Recommendations`, `SpeakerRecognition`, `Speech`, `SpeechServices`, `SpeechTranslation`, `TextAnalytics`, `TextTranslation` and `WebLM`. Changing this forces a new resource to be created.
        /// 
        /// &gt; **NOTE:** New Bing Search resources cannot be created as their APIs are moving from Cognitive Services Platform to new surface area under Microsoft.com. Starting from October 30, 2020, existing instances of Bing Search APIs provisioned via Cognitive Services will be continuously supported for next 3 years or till the end of respective Enterprise Agreement, whichever happens first.
        /// 
        /// &gt; **NOTE:** You must create your first Face, Text Analytics, or Computer Vision resources from the Azure portal to review and acknowledge the terms and conditions. In Azure Portal, the checkbox to accept terms and conditions is only displayed when a US region is selected. More information on [Prerequisites](https://docs.microsoft.com/azure/cognitive-services/cognitive-services-apis-create-account-cli?tabs=windows#prerequisites).
        /// </summary>
        [Input("kind", required: true)]
        public Input<string> Kind { get; set; } = null!;

        /// <summary>
        /// Whether local authentication methods is enabled for the Cognitive Account. Defaults to `true`.
        /// </summary>
        [Input("localAuthEnabled")]
        public Input<bool>? LocalAuthEnabled { get; set; }

        /// <summary>
        /// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// The Azure AD Client ID (Application ID). This attribute is only set when kind is `MetricsAdvisor`. Changing this forces a new resource to be created.
        /// </summary>
        [Input("metricsAdvisorAadClientId")]
        public Input<string>? MetricsAdvisorAadClientId { get; set; }

        /// <summary>
        /// The Azure AD Tenant ID. This attribute is only set when kind is `MetricsAdvisor`. Changing this forces a new resource to be created.
        /// </summary>
        [Input("metricsAdvisorAadTenantId")]
        public Input<string>? MetricsAdvisorAadTenantId { get; set; }

        /// <summary>
        /// The super user of Metrics Advisor. This attribute is only set when kind is `MetricsAdvisor`. Changing this forces a new resource to be created.
        /// </summary>
        [Input("metricsAdvisorSuperUserName")]
        public Input<string>? MetricsAdvisorSuperUserName { get; set; }

        /// <summary>
        /// The website name of Metrics Advisor. This attribute is only set when kind is `MetricsAdvisor`. Changing this forces a new resource to be created.
        /// 
        /// &gt; **NOTE:** This URL is mandatory if the `kind` is set to `QnAMaker`.
        /// </summary>
        [Input("metricsAdvisorWebsiteName")]
        public Input<string>? MetricsAdvisorWebsiteName { get; set; }

        /// <summary>
        /// Specifies the name of the Cognitive Service Account. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// A `network_acls` block as defined below. When this property is specified, `custom_subdomain_name` is also required to be set.
        /// </summary>
        [Input("networkAcls")]
        public Input<Inputs.AccountNetworkAclsArgs>? NetworkAcls { get; set; }

        /// <summary>
        /// Whether outbound network access is restricted for the Cognitive Account. Defaults to `false`.
        /// </summary>
        [Input("outboundNetworkAccessRestricted")]
        public Input<bool>? OutboundNetworkAccessRestricted { get; set; }

        /// <summary>
        /// Whether public network access is allowed for the Cognitive Account. Defaults to `true`.
        /// </summary>
        [Input("publicNetworkAccessEnabled")]
        public Input<bool>? PublicNetworkAccessEnabled { get; set; }

        /// <summary>
        /// A URL to link a QnAMaker cognitive account to a QnA runtime.
        /// </summary>
        [Input("qnaRuntimeEndpoint")]
        public Input<string>? QnaRuntimeEndpoint { get; set; }

        /// <summary>
        /// The name of the resource group in which the Cognitive Service Account is created. Changing this forces a new resource to be created.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// Specifies the SKU Name for this Cognitive Service Account. Possible values are `F0`, `F1`, `S0`, `S`, `S1`, `S2`, `S3`, `S4`, `S5`, `S6`, `P0`, `P1`, `P2`, `E0` and `DC0`.
        /// 
        /// &gt; **NOTE:** SKU `DC0` is the commitment tier for Cognitive Services containers running in disconnected environments. You must obtain approval from Microsoft by submitting the [request form](https://aka.ms/csdisconnectedcontainers) first, before you can use this SKU. More information on [Purchase a commitment plan to use containers in disconnected environments](https://learn.microsoft.com/en-us/azure/cognitive-services/containers/disconnected-containers?tabs=stt#purchase-a-commitment-plan-to-use-containers-in-disconnected-environments).
        /// </summary>
        [Input("skuName", required: true)]
        public Input<string> SkuName { get; set; } = null!;

        [Input("storages")]
        private InputList<Inputs.AccountStorageArgs>? _storages;

        /// <summary>
        /// A `storage` block as defined below.
        /// </summary>
        public InputList<Inputs.AccountStorageArgs> Storages
        {
            get => _storages ?? (_storages = new InputList<Inputs.AccountStorageArgs>());
            set => _storages = value;
        }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// A mapping of tags to assign to the resource.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public AccountArgs()
        {
        }
        public static new AccountArgs Empty => new AccountArgs();
    }

    public sealed class AccountState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// If `kind` is `TextAnalytics` this specifies the ID of the Search service.
        /// </summary>
        [Input("customQuestionAnsweringSearchServiceId")]
        public Input<string>? CustomQuestionAnsweringSearchServiceId { get; set; }

        [Input("customQuestionAnsweringSearchServiceKey")]
        private Input<string>? _customQuestionAnsweringSearchServiceKey;

        /// <summary>
        /// If `kind` is `TextAnalytics` this specifies the key of the Search service.
        /// 
        /// &gt; **NOTE:** `custom_question_answering_search_service_id` and `custom_question_answering_search_service_key` are used for [Custom Question Answering, the renamed version of QnA Maker](https://docs.microsoft.com/azure/cognitive-services/qnamaker/custom-question-answering), while `qna_runtime_endpoint` is used for [the old version of QnA Maker](https://docs.microsoft.com/azure/cognitive-services/qnamaker/overview/overview)
        /// </summary>
        public Input<string>? CustomQuestionAnsweringSearchServiceKey
        {
            get => _customQuestionAnsweringSearchServiceKey;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _customQuestionAnsweringSearchServiceKey = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// The subdomain name used for token-based authentication. This property is required when `network_acls` is specified. Changing this forces a new resource to be created.
        /// </summary>
        [Input("customSubdomainName")]
        public Input<string>? CustomSubdomainName { get; set; }

        /// <summary>
        /// A `customer_managed_key` block as documented below.
        /// </summary>
        [Input("customerManagedKey")]
        public Input<Inputs.AccountCustomerManagedKeyGetArgs>? CustomerManagedKey { get; set; }

        /// <summary>
        /// Whether to enable the dynamic throttling for this Cognitive Service Account.
        /// </summary>
        [Input("dynamicThrottlingEnabled")]
        public Input<bool>? DynamicThrottlingEnabled { get; set; }

        /// <summary>
        /// The endpoint used to connect to the Cognitive Service Account.
        /// </summary>
        [Input("endpoint")]
        public Input<string>? Endpoint { get; set; }

        [Input("fqdns")]
        private InputList<string>? _fqdns;

        /// <summary>
        /// List of FQDNs allowed for the Cognitive Account.
        /// </summary>
        public InputList<string> Fqdns
        {
            get => _fqdns ?? (_fqdns = new InputList<string>());
            set => _fqdns = value;
        }

        /// <summary>
        /// An `identity` block as defined below.
        /// </summary>
        [Input("identity")]
        public Input<Inputs.AccountIdentityGetArgs>? Identity { get; set; }

        /// <summary>
        /// Specifies the type of Cognitive Service Account that should be created. Possible values are `Academic`, `AnomalyDetector`, `Bing.Autosuggest`, `Bing.Autosuggest.v7`, `Bing.CustomSearch`, `Bing.Search`, `Bing.Search.v7`, `Bing.Speech`, `Bing.SpellCheck`, `Bing.SpellCheck.v7`, `CognitiveServices`, `ComputerVision`, `ContentModerator`, `CustomSpeech`, `CustomVision.Prediction`, `CustomVision.Training`, `Emotion`, `Face`, `FormRecognizer`, `ImmersiveReader`, `LUIS`, `LUIS.Authoring`, `MetricsAdvisor`, `OpenAI`, `Personalizer`, `QnAMaker`, `Recommendations`, `SpeakerRecognition`, `Speech`, `SpeechServices`, `SpeechTranslation`, `TextAnalytics`, `TextTranslation` and `WebLM`. Changing this forces a new resource to be created.
        /// 
        /// &gt; **NOTE:** New Bing Search resources cannot be created as their APIs are moving from Cognitive Services Platform to new surface area under Microsoft.com. Starting from October 30, 2020, existing instances of Bing Search APIs provisioned via Cognitive Services will be continuously supported for next 3 years or till the end of respective Enterprise Agreement, whichever happens first.
        /// 
        /// &gt; **NOTE:** You must create your first Face, Text Analytics, or Computer Vision resources from the Azure portal to review and acknowledge the terms and conditions. In Azure Portal, the checkbox to accept terms and conditions is only displayed when a US region is selected. More information on [Prerequisites](https://docs.microsoft.com/azure/cognitive-services/cognitive-services-apis-create-account-cli?tabs=windows#prerequisites).
        /// </summary>
        [Input("kind")]
        public Input<string>? Kind { get; set; }

        /// <summary>
        /// Whether local authentication methods is enabled for the Cognitive Account. Defaults to `true`.
        /// </summary>
        [Input("localAuthEnabled")]
        public Input<bool>? LocalAuthEnabled { get; set; }

        /// <summary>
        /// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// The Azure AD Client ID (Application ID). This attribute is only set when kind is `MetricsAdvisor`. Changing this forces a new resource to be created.
        /// </summary>
        [Input("metricsAdvisorAadClientId")]
        public Input<string>? MetricsAdvisorAadClientId { get; set; }

        /// <summary>
        /// The Azure AD Tenant ID. This attribute is only set when kind is `MetricsAdvisor`. Changing this forces a new resource to be created.
        /// </summary>
        [Input("metricsAdvisorAadTenantId")]
        public Input<string>? MetricsAdvisorAadTenantId { get; set; }

        /// <summary>
        /// The super user of Metrics Advisor. This attribute is only set when kind is `MetricsAdvisor`. Changing this forces a new resource to be created.
        /// </summary>
        [Input("metricsAdvisorSuperUserName")]
        public Input<string>? MetricsAdvisorSuperUserName { get; set; }

        /// <summary>
        /// The website name of Metrics Advisor. This attribute is only set when kind is `MetricsAdvisor`. Changing this forces a new resource to be created.
        /// 
        /// &gt; **NOTE:** This URL is mandatory if the `kind` is set to `QnAMaker`.
        /// </summary>
        [Input("metricsAdvisorWebsiteName")]
        public Input<string>? MetricsAdvisorWebsiteName { get; set; }

        /// <summary>
        /// Specifies the name of the Cognitive Service Account. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// A `network_acls` block as defined below. When this property is specified, `custom_subdomain_name` is also required to be set.
        /// </summary>
        [Input("networkAcls")]
        public Input<Inputs.AccountNetworkAclsGetArgs>? NetworkAcls { get; set; }

        /// <summary>
        /// Whether outbound network access is restricted for the Cognitive Account. Defaults to `false`.
        /// </summary>
        [Input("outboundNetworkAccessRestricted")]
        public Input<bool>? OutboundNetworkAccessRestricted { get; set; }

        [Input("primaryAccessKey")]
        private Input<string>? _primaryAccessKey;

        /// <summary>
        /// A primary access key which can be used to connect to the Cognitive Service Account.
        /// </summary>
        public Input<string>? PrimaryAccessKey
        {
            get => _primaryAccessKey;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _primaryAccessKey = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// Whether public network access is allowed for the Cognitive Account. Defaults to `true`.
        /// </summary>
        [Input("publicNetworkAccessEnabled")]
        public Input<bool>? PublicNetworkAccessEnabled { get; set; }

        /// <summary>
        /// A URL to link a QnAMaker cognitive account to a QnA runtime.
        /// </summary>
        [Input("qnaRuntimeEndpoint")]
        public Input<string>? QnaRuntimeEndpoint { get; set; }

        /// <summary>
        /// The name of the resource group in which the Cognitive Service Account is created. Changing this forces a new resource to be created.
        /// </summary>
        [Input("resourceGroupName")]
        public Input<string>? ResourceGroupName { get; set; }

        [Input("secondaryAccessKey")]
        private Input<string>? _secondaryAccessKey;

        /// <summary>
        /// The secondary access key which can be used to connect to the Cognitive Service Account.
        /// </summary>
        public Input<string>? SecondaryAccessKey
        {
            get => _secondaryAccessKey;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _secondaryAccessKey = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// Specifies the SKU Name for this Cognitive Service Account. Possible values are `F0`, `F1`, `S0`, `S`, `S1`, `S2`, `S3`, `S4`, `S5`, `S6`, `P0`, `P1`, `P2`, `E0` and `DC0`.
        /// 
        /// &gt; **NOTE:** SKU `DC0` is the commitment tier for Cognitive Services containers running in disconnected environments. You must obtain approval from Microsoft by submitting the [request form](https://aka.ms/csdisconnectedcontainers) first, before you can use this SKU. More information on [Purchase a commitment plan to use containers in disconnected environments](https://learn.microsoft.com/en-us/azure/cognitive-services/containers/disconnected-containers?tabs=stt#purchase-a-commitment-plan-to-use-containers-in-disconnected-environments).
        /// </summary>
        [Input("skuName")]
        public Input<string>? SkuName { get; set; }

        [Input("storages")]
        private InputList<Inputs.AccountStorageGetArgs>? _storages;

        /// <summary>
        /// A `storage` block as defined below.
        /// </summary>
        public InputList<Inputs.AccountStorageGetArgs> Storages
        {
            get => _storages ?? (_storages = new InputList<Inputs.AccountStorageGetArgs>());
            set => _storages = value;
        }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// A mapping of tags to assign to the resource.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public AccountState()
        {
        }
        public static new AccountState Empty => new AccountState();
    }
}
