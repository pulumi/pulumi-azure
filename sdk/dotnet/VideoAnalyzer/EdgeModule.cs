// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.VideoAnalyzer
{
    /// <summary>
    /// Manages a Video Analyzer Edge Module.
    /// 
    /// !&gt; Video Analyzer (Preview) is now Deprecated and will be Retired on 2022-11-30 - as such the `azure.videoanalyzer.EdgeModule` resource is deprecated and will be removed in v4.0 of the AzureRM Provider.
    /// 
    /// ## Import
    /// 
    /// Video Analyzer Edge Module can be imported using the `resource id`, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import azure:videoanalyzer/edgeModule:EdgeModule edge /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.Media/videoAnalyzers/analyzer1/edgeModules/edge1
    /// ```
    /// </summary>
    [AzureResourceType("azure:videoanalyzer/edgeModule:EdgeModule")]
    public partial class EdgeModule : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Specifies the name of the Video Analyzer Edge Module. Changing this forces a new resource to be created.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The name of the resource group in which to create the Video Analyzer Edge Module. Changing this forces a new resource to be created.
        /// </summary>
        [Output("resourceGroupName")]
        public Output<string> ResourceGroupName { get; private set; } = null!;

        /// <summary>
        /// The name of the Video Analyzer in which to create the Edge Module. Changing this forces a new resource to be created.
        /// </summary>
        [Output("videoAnalyzerName")]
        public Output<string> VideoAnalyzerName { get; private set; } = null!;


        /// <summary>
        /// Create a EdgeModule resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public EdgeModule(string name, EdgeModuleArgs args, CustomResourceOptions? options = null)
            : base("azure:videoanalyzer/edgeModule:EdgeModule", name, args ?? new EdgeModuleArgs(), MakeResourceOptions(options, ""))
        {
        }

        private EdgeModule(string name, Input<string> id, EdgeModuleState? state = null, CustomResourceOptions? options = null)
            : base("azure:videoanalyzer/edgeModule:EdgeModule", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing EdgeModule resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static EdgeModule Get(string name, Input<string> id, EdgeModuleState? state = null, CustomResourceOptions? options = null)
        {
            return new EdgeModule(name, id, state, options);
        }
    }

    public sealed class EdgeModuleArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies the name of the Video Analyzer Edge Module. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The name of the resource group in which to create the Video Analyzer Edge Module. Changing this forces a new resource to be created.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the Video Analyzer in which to create the Edge Module. Changing this forces a new resource to be created.
        /// </summary>
        [Input("videoAnalyzerName", required: true)]
        public Input<string> VideoAnalyzerName { get; set; } = null!;

        public EdgeModuleArgs()
        {
        }
        public static new EdgeModuleArgs Empty => new EdgeModuleArgs();
    }

    public sealed class EdgeModuleState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies the name of the Video Analyzer Edge Module. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The name of the resource group in which to create the Video Analyzer Edge Module. Changing this forces a new resource to be created.
        /// </summary>
        [Input("resourceGroupName")]
        public Input<string>? ResourceGroupName { get; set; }

        /// <summary>
        /// The name of the Video Analyzer in which to create the Edge Module. Changing this forces a new resource to be created.
        /// </summary>
        [Input("videoAnalyzerName")]
        public Input<string>? VideoAnalyzerName { get; set; }

        public EdgeModuleState()
        {
        }
        public static new EdgeModuleState Empty => new EdgeModuleState();
    }
}
