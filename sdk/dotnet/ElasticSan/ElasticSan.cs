// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.ElasticSan
{
    /// <summary>
    /// Manages an Elastic SAN resource.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Azure = Pulumi.Azure;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var exampleResourceGroup = new Azure.Core.ResourceGroup("exampleResourceGroup", new()
    ///     {
    ///         Location = "West Europe",
    ///     });
    /// 
    ///     var exampleElasticSan = new Azure.ElasticSan.ElasticSan("exampleElasticSan", new()
    ///     {
    ///         ResourceGroupName = exampleResourceGroup.Name,
    ///         Location = exampleResourceGroup.Location,
    ///         BaseSizeInTib = 1,
    ///         ExtendedSizeInTib = 2,
    ///         Sku = new Azure.ElasticSan.Inputs.ElasticSanSkuArgs
    ///         {
    ///             Name = "example-value",
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// An existing Elastic SAN can be imported into Terraform using the `resource id`, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import azure:elasticsan/elasticSan:ElasticSan example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg1/providers/Microsoft.ElasticSan/elasticSans/esan1
    /// ```
    /// </summary>
    [AzureResourceType("azure:elasticsan/elasticSan:ElasticSan")]
    public partial class ElasticSan : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Specifies the base size of the Elastic SAN resource in TiB. Possible values are between `1` and `100`.
        /// 
        /// &gt; **NOTE** When updating `base_size_in_tib`, the new value should be greater than the existing one.
        /// </summary>
        [Output("baseSizeInTib")]
        public Output<int> BaseSizeInTib { get; private set; } = null!;

        /// <summary>
        /// Specifies the extended size of the Elastic SAN resource in TiB. Possible values are between `1` and `100`.
        /// 
        /// &gt; **NOTE** `extended_size_in_tib` cannot be removed and when updating, the new value should be greater than the existing one.
        /// </summary>
        [Output("extendedSizeInTib")]
        public Output<int?> ExtendedSizeInTib { get; private set; } = null!;

        /// <summary>
        /// The Azure Region where the Elastic SAN resource should exist. Changing this forces a new resource to be created.
        /// </summary>
        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// Specifies the name of this Elastic SAN resource. Changing this forces a new resource to be created.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Specifies the name of the Resource Group within which this Elastic SAN resource should exist. Changing this forces a new resource to be created.
        /// </summary>
        [Output("resourceGroupName")]
        public Output<string> ResourceGroupName { get; private set; } = null!;

        /// <summary>
        /// A `sku` block as defined below.
        /// </summary>
        [Output("sku")]
        public Output<Outputs.ElasticSanSku> Sku { get; private set; } = null!;

        /// <summary>
        /// A mapping of tags which should be assigned to the Elastic SAN resource.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// Total Provisioned IOps of the Elastic SAN resource.
        /// </summary>
        [Output("totalIops")]
        public Output<int> TotalIops { get; private set; } = null!;

        /// <summary>
        /// Total Provisioned MBps Elastic SAN resource.
        /// </summary>
        [Output("totalMbps")]
        public Output<int> TotalMbps { get; private set; } = null!;

        /// <summary>
        /// Total size of the Elastic SAN resource in TB.
        /// </summary>
        [Output("totalSizeInTib")]
        public Output<int> TotalSizeInTib { get; private set; } = null!;

        /// <summary>
        /// Total size of the provisioned Volumes in GiB.
        /// </summary>
        [Output("totalVolumeSizeInGib")]
        public Output<int> TotalVolumeSizeInGib { get; private set; } = null!;

        /// <summary>
        /// Total number of volume groups in this Elastic SAN resource.
        /// </summary>
        [Output("volumeGroupCount")]
        public Output<int> VolumeGroupCount { get; private set; } = null!;

        /// <summary>
        /// Logical zone for the Elastic SAN resource. Changing this forces a new resource to be created.
        /// 
        /// &gt; **NOTE** `zones` cannot be specified if `sku.name` is set to `Premium_ZRS`.
        /// </summary>
        [Output("zones")]
        public Output<ImmutableArray<string>> Zones { get; private set; } = null!;


        /// <summary>
        /// Create a ElasticSan resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ElasticSan(string name, ElasticSanArgs args, CustomResourceOptions? options = null)
            : base("azure:elasticsan/elasticSan:ElasticSan", name, args ?? new ElasticSanArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ElasticSan(string name, Input<string> id, ElasticSanState? state = null, CustomResourceOptions? options = null)
            : base("azure:elasticsan/elasticSan:ElasticSan", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ElasticSan resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ElasticSan Get(string name, Input<string> id, ElasticSanState? state = null, CustomResourceOptions? options = null)
        {
            return new ElasticSan(name, id, state, options);
        }
    }

    public sealed class ElasticSanArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies the base size of the Elastic SAN resource in TiB. Possible values are between `1` and `100`.
        /// 
        /// &gt; **NOTE** When updating `base_size_in_tib`, the new value should be greater than the existing one.
        /// </summary>
        [Input("baseSizeInTib", required: true)]
        public Input<int> BaseSizeInTib { get; set; } = null!;

        /// <summary>
        /// Specifies the extended size of the Elastic SAN resource in TiB. Possible values are between `1` and `100`.
        /// 
        /// &gt; **NOTE** `extended_size_in_tib` cannot be removed and when updating, the new value should be greater than the existing one.
        /// </summary>
        [Input("extendedSizeInTib")]
        public Input<int>? ExtendedSizeInTib { get; set; }

        /// <summary>
        /// The Azure Region where the Elastic SAN resource should exist. Changing this forces a new resource to be created.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// Specifies the name of this Elastic SAN resource. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Specifies the name of the Resource Group within which this Elastic SAN resource should exist. Changing this forces a new resource to be created.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// A `sku` block as defined below.
        /// </summary>
        [Input("sku", required: true)]
        public Input<Inputs.ElasticSanSkuArgs> Sku { get; set; } = null!;

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// A mapping of tags which should be assigned to the Elastic SAN resource.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("zones")]
        private InputList<string>? _zones;

        /// <summary>
        /// Logical zone for the Elastic SAN resource. Changing this forces a new resource to be created.
        /// 
        /// &gt; **NOTE** `zones` cannot be specified if `sku.name` is set to `Premium_ZRS`.
        /// </summary>
        public InputList<string> Zones
        {
            get => _zones ?? (_zones = new InputList<string>());
            set => _zones = value;
        }

        public ElasticSanArgs()
        {
        }
        public static new ElasticSanArgs Empty => new ElasticSanArgs();
    }

    public sealed class ElasticSanState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies the base size of the Elastic SAN resource in TiB. Possible values are between `1` and `100`.
        /// 
        /// &gt; **NOTE** When updating `base_size_in_tib`, the new value should be greater than the existing one.
        /// </summary>
        [Input("baseSizeInTib")]
        public Input<int>? BaseSizeInTib { get; set; }

        /// <summary>
        /// Specifies the extended size of the Elastic SAN resource in TiB. Possible values are between `1` and `100`.
        /// 
        /// &gt; **NOTE** `extended_size_in_tib` cannot be removed and when updating, the new value should be greater than the existing one.
        /// </summary>
        [Input("extendedSizeInTib")]
        public Input<int>? ExtendedSizeInTib { get; set; }

        /// <summary>
        /// The Azure Region where the Elastic SAN resource should exist. Changing this forces a new resource to be created.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// Specifies the name of this Elastic SAN resource. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Specifies the name of the Resource Group within which this Elastic SAN resource should exist. Changing this forces a new resource to be created.
        /// </summary>
        [Input("resourceGroupName")]
        public Input<string>? ResourceGroupName { get; set; }

        /// <summary>
        /// A `sku` block as defined below.
        /// </summary>
        [Input("sku")]
        public Input<Inputs.ElasticSanSkuGetArgs>? Sku { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// A mapping of tags which should be assigned to the Elastic SAN resource.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        /// <summary>
        /// Total Provisioned IOps of the Elastic SAN resource.
        /// </summary>
        [Input("totalIops")]
        public Input<int>? TotalIops { get; set; }

        /// <summary>
        /// Total Provisioned MBps Elastic SAN resource.
        /// </summary>
        [Input("totalMbps")]
        public Input<int>? TotalMbps { get; set; }

        /// <summary>
        /// Total size of the Elastic SAN resource in TB.
        /// </summary>
        [Input("totalSizeInTib")]
        public Input<int>? TotalSizeInTib { get; set; }

        /// <summary>
        /// Total size of the provisioned Volumes in GiB.
        /// </summary>
        [Input("totalVolumeSizeInGib")]
        public Input<int>? TotalVolumeSizeInGib { get; set; }

        /// <summary>
        /// Total number of volume groups in this Elastic SAN resource.
        /// </summary>
        [Input("volumeGroupCount")]
        public Input<int>? VolumeGroupCount { get; set; }

        [Input("zones")]
        private InputList<string>? _zones;

        /// <summary>
        /// Logical zone for the Elastic SAN resource. Changing this forces a new resource to be created.
        /// 
        /// &gt; **NOTE** `zones` cannot be specified if `sku.name` is set to `Premium_ZRS`.
        /// </summary>
        public InputList<string> Zones
        {
            get => _zones ?? (_zones = new InputList<string>());
            set => _zones = value;
        }

        public ElasticSanState()
        {
        }
        public static new ElasticSanState Empty => new ElasticSanState();
    }
}
