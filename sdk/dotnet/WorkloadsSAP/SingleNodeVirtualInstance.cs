// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.WorkloadsSAP
{
    /// <summary>
    /// Manages an SAP Single Node Virtual Instance with new SAP System.
    /// 
    /// &gt; **Note:** Before using this resource, it's required to submit the request of registering the Resource Provider with Azure CLI `az provider register --namespace "Microsoft.Workloads"`. The Resource Provider can take a while to register, you can check the status by running `az provider show --namespace "Microsoft.Workloads" --query "registrationState"`. Once this outputs "Registered" the Resource Provider is available for use.
    /// 
    /// ## Import
    /// 
    /// SAP Single Node Virtual Instances with new SAP Systems can be imported using the `resource id`, e.g.
    /// 
    /// ```sh
    /// $ pulumi import azure:workloadssap/singleNodeVirtualInstance:SingleNodeVirtualInstance example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Workloads/sapVirtualInstances/vis1
    /// ```
    /// </summary>
    [AzureResourceType("azure:workloadssap/singleNodeVirtualInstance:SingleNodeVirtualInstance")]
    public partial class SingleNodeVirtualInstance : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The Geo-Location where the SAP system is to be created. Changing this forces a new resource to be created.
        /// </summary>
        [Output("appLocation")]
        public Output<string> AppLocation { get; private set; } = null!;

        /// <summary>
        /// The environment type for the SAP Single Node Virtual Instance. Possible values are `NonProd` and `Prod`. Changing this forces a new resource to be created.
        /// </summary>
        [Output("environment")]
        public Output<string> Environment { get; private set; } = null!;

        /// <summary>
        /// An `Identity` block as defined below.
        /// </summary>
        [Output("identity")]
        public Output<Outputs.SingleNodeVirtualInstanceIdentity?> Identity { get; private set; } = null!;

        /// <summary>
        /// The Azure Region where the SAP Single Node Virtual Instance should exist. Changing this forces a new resource to be created.
        /// </summary>
        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// The name of the managed Resource Group for the SAP Single Node Virtual Instance. Changing this forces a new resource to be created.
        /// </summary>
        [Output("managedResourceGroupName")]
        public Output<string?> ManagedResourceGroupName { get; private set; } = null!;

        /// <summary>
        /// The network access type for managed resources. Possible values are `Private` and `Public`. Defaults to `Public`.
        /// </summary>
        [Output("managedResourcesNetworkAccessType")]
        public Output<string?> ManagedResourcesNetworkAccessType { get; private set; } = null!;

        /// <summary>
        /// Specifies the name of this SAP Single Node Virtual Instance. Changing this forces a new resource to be created.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The name of the Resource Group where the SAP Single Node Virtual Instance should exist. Changing this forces a new resource to be created.
        /// </summary>
        [Output("resourceGroupName")]
        public Output<string> ResourceGroupName { get; private set; } = null!;

        /// <summary>
        /// The fully qualified domain name for the SAP system. Changing this forces a new resource to be created.
        /// </summary>
        [Output("sapFqdn")]
        public Output<string> SapFqdn { get; private set; } = null!;

        /// <summary>
        /// The SAP Product type for the SAP Single Node Virtual Instance. Possible values are `ECC`, `Other` and `S4HANA`. Changing this forces a new resource to be created.
        /// </summary>
        [Output("sapProduct")]
        public Output<string> SapProduct { get; private set; } = null!;

        /// <summary>
        /// A `SingleServerConfiguration` block as defined below. Changing this forces a new resource to be created.
        /// </summary>
        [Output("singleServerConfiguration")]
        public Output<Outputs.SingleNodeVirtualInstanceSingleServerConfiguration> SingleServerConfiguration { get; private set; } = null!;

        /// <summary>
        /// A mapping of tags which should be assigned to the SAP Single Node Virtual Instance.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;


        /// <summary>
        /// Create a SingleNodeVirtualInstance resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public SingleNodeVirtualInstance(string name, SingleNodeVirtualInstanceArgs args, CustomResourceOptions? options = null)
            : base("azure:workloadssap/singleNodeVirtualInstance:SingleNodeVirtualInstance", name, args ?? new SingleNodeVirtualInstanceArgs(), MakeResourceOptions(options, ""))
        {
        }

        private SingleNodeVirtualInstance(string name, Input<string> id, SingleNodeVirtualInstanceState? state = null, CustomResourceOptions? options = null)
            : base("azure:workloadssap/singleNodeVirtualInstance:SingleNodeVirtualInstance", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing SingleNodeVirtualInstance resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static SingleNodeVirtualInstance Get(string name, Input<string> id, SingleNodeVirtualInstanceState? state = null, CustomResourceOptions? options = null)
        {
            return new SingleNodeVirtualInstance(name, id, state, options);
        }
    }

    public sealed class SingleNodeVirtualInstanceArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The Geo-Location where the SAP system is to be created. Changing this forces a new resource to be created.
        /// </summary>
        [Input("appLocation", required: true)]
        public Input<string> AppLocation { get; set; } = null!;

        /// <summary>
        /// The environment type for the SAP Single Node Virtual Instance. Possible values are `NonProd` and `Prod`. Changing this forces a new resource to be created.
        /// </summary>
        [Input("environment", required: true)]
        public Input<string> Environment { get; set; } = null!;

        /// <summary>
        /// An `Identity` block as defined below.
        /// </summary>
        [Input("identity")]
        public Input<Inputs.SingleNodeVirtualInstanceIdentityArgs>? Identity { get; set; }

        /// <summary>
        /// The Azure Region where the SAP Single Node Virtual Instance should exist. Changing this forces a new resource to be created.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// The name of the managed Resource Group for the SAP Single Node Virtual Instance. Changing this forces a new resource to be created.
        /// </summary>
        [Input("managedResourceGroupName")]
        public Input<string>? ManagedResourceGroupName { get; set; }

        /// <summary>
        /// The network access type for managed resources. Possible values are `Private` and `Public`. Defaults to `Public`.
        /// </summary>
        [Input("managedResourcesNetworkAccessType")]
        public Input<string>? ManagedResourcesNetworkAccessType { get; set; }

        /// <summary>
        /// Specifies the name of this SAP Single Node Virtual Instance. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The name of the Resource Group where the SAP Single Node Virtual Instance should exist. Changing this forces a new resource to be created.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The fully qualified domain name for the SAP system. Changing this forces a new resource to be created.
        /// </summary>
        [Input("sapFqdn", required: true)]
        public Input<string> SapFqdn { get; set; } = null!;

        /// <summary>
        /// The SAP Product type for the SAP Single Node Virtual Instance. Possible values are `ECC`, `Other` and `S4HANA`. Changing this forces a new resource to be created.
        /// </summary>
        [Input("sapProduct", required: true)]
        public Input<string> SapProduct { get; set; } = null!;

        /// <summary>
        /// A `SingleServerConfiguration` block as defined below. Changing this forces a new resource to be created.
        /// </summary>
        [Input("singleServerConfiguration", required: true)]
        public Input<Inputs.SingleNodeVirtualInstanceSingleServerConfigurationArgs> SingleServerConfiguration { get; set; } = null!;

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// A mapping of tags which should be assigned to the SAP Single Node Virtual Instance.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public SingleNodeVirtualInstanceArgs()
        {
        }
        public static new SingleNodeVirtualInstanceArgs Empty => new SingleNodeVirtualInstanceArgs();
    }

    public sealed class SingleNodeVirtualInstanceState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The Geo-Location where the SAP system is to be created. Changing this forces a new resource to be created.
        /// </summary>
        [Input("appLocation")]
        public Input<string>? AppLocation { get; set; }

        /// <summary>
        /// The environment type for the SAP Single Node Virtual Instance. Possible values are `NonProd` and `Prod`. Changing this forces a new resource to be created.
        /// </summary>
        [Input("environment")]
        public Input<string>? Environment { get; set; }

        /// <summary>
        /// An `Identity` block as defined below.
        /// </summary>
        [Input("identity")]
        public Input<Inputs.SingleNodeVirtualInstanceIdentityGetArgs>? Identity { get; set; }

        /// <summary>
        /// The Azure Region where the SAP Single Node Virtual Instance should exist. Changing this forces a new resource to be created.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// The name of the managed Resource Group for the SAP Single Node Virtual Instance. Changing this forces a new resource to be created.
        /// </summary>
        [Input("managedResourceGroupName")]
        public Input<string>? ManagedResourceGroupName { get; set; }

        /// <summary>
        /// The network access type for managed resources. Possible values are `Private` and `Public`. Defaults to `Public`.
        /// </summary>
        [Input("managedResourcesNetworkAccessType")]
        public Input<string>? ManagedResourcesNetworkAccessType { get; set; }

        /// <summary>
        /// Specifies the name of this SAP Single Node Virtual Instance. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The name of the Resource Group where the SAP Single Node Virtual Instance should exist. Changing this forces a new resource to be created.
        /// </summary>
        [Input("resourceGroupName")]
        public Input<string>? ResourceGroupName { get; set; }

        /// <summary>
        /// The fully qualified domain name for the SAP system. Changing this forces a new resource to be created.
        /// </summary>
        [Input("sapFqdn")]
        public Input<string>? SapFqdn { get; set; }

        /// <summary>
        /// The SAP Product type for the SAP Single Node Virtual Instance. Possible values are `ECC`, `Other` and `S4HANA`. Changing this forces a new resource to be created.
        /// </summary>
        [Input("sapProduct")]
        public Input<string>? SapProduct { get; set; }

        /// <summary>
        /// A `SingleServerConfiguration` block as defined below. Changing this forces a new resource to be created.
        /// </summary>
        [Input("singleServerConfiguration")]
        public Input<Inputs.SingleNodeVirtualInstanceSingleServerConfigurationGetArgs>? SingleServerConfiguration { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// A mapping of tags which should be assigned to the SAP Single Node Virtual Instance.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public SingleNodeVirtualInstanceState()
        {
        }
        public static new SingleNodeVirtualInstanceState Empty => new SingleNodeVirtualInstanceState();
    }
}
