// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.WorkloadsSAP
{
    /// <summary>
    /// Manages an SAP Discovery Virtual Instance.
    /// 
    /// &gt; **Note:** Before using this resource, it's required to submit the request of registering the Resource Provider with Azure CLI `az provider register --namespace "Microsoft.Workloads"`. The Resource Provider can take a while to register, you can check the status by running `az provider show --namespace "Microsoft.Workloads" --query "registrationState"`. Once this outputs "Registered" the Resource Provider is available for use.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Azure = Pulumi.Azure;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Azure.Core.ResourceGroup("example", new()
    ///     {
    ///         Name = "example-sapvis",
    ///         Location = "West Europe",
    ///     });
    /// 
    ///     var exampleDiscoveryVirtualInstance = new Azure.WorkloadsSAP.DiscoveryVirtualInstance("example", new()
    ///     {
    ///         Name = "X01",
    ///         ResourceGroupName = example.Name,
    ///         Location = example.Location,
    ///         Environment = "NonProd",
    ///         SapProduct = "S4HANA",
    ///         CentralServerVirtualMachineId = "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/exampleRG/providers/Microsoft.Compute/virtualMachines/csvm1",
    ///         ManagedStorageAccountName = "managedsa",
    ///         Identity = new Azure.WorkloadsSAP.Inputs.DiscoveryVirtualInstanceIdentityArgs
    ///         {
    ///             Type = "UserAssigned",
    ///             IdentityIds = new[]
    ///             {
    ///                 "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/exampleRG/providers/Microsoft.ManagedIdentity/userAssignedIdentities/uai1",
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## API Providers
    /// 
    /// &lt;!-- This section is generated, changes will be overwritten --&gt;
    /// This resource uses the following Azure API Providers:
    /// 
    /// * `Microsoft.Workloads` - 2024-09-01
    /// 
    /// ## Import
    /// 
    /// SAP Discovery Virtual Instances can be imported using the `resource id`, e.g.
    /// 
    /// ```sh
    /// $ pulumi import azure:workloadssap/discoveryVirtualInstance:DiscoveryVirtualInstance example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Workloads/sapVirtualInstances/vis1
    /// ```
    /// </summary>
    [AzureResourceType("azure:workloadssap/discoveryVirtualInstance:DiscoveryVirtualInstance")]
    public partial class DiscoveryVirtualInstance : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The ID of the Virtual Machine of the Central Server. Changing this forces a new resource to be created.
        /// </summary>
        [Output("centralServerVirtualMachineId")]
        public Output<string> CentralServerVirtualMachineId { get; private set; } = null!;

        /// <summary>
        /// The environment type for the SAP Discovery Virtual Instance. Possible values are `NonProd` and `Prod`. Changing this forces a new resource to be created.
        /// </summary>
        [Output("environment")]
        public Output<string> Environment { get; private set; } = null!;

        /// <summary>
        /// An `Identity` block as defined below.
        /// </summary>
        [Output("identity")]
        public Output<Outputs.DiscoveryVirtualInstanceIdentity?> Identity { get; private set; } = null!;

        /// <summary>
        /// The Azure Region where the SAP Discovery Virtual Instance should exist. Changing this forces a new resource to be created.
        /// </summary>
        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// The name of the managed Resource Group for the SAP Discovery Virtual Instance. Changing this forces a new resource to be created.
        /// </summary>
        [Output("managedResourceGroupName")]
        public Output<string?> ManagedResourceGroupName { get; private set; } = null!;

        /// <summary>
        /// The network access type for managed resources. Possible values are `Private` and `Public`. Defaults to `Public`.
        /// </summary>
        [Output("managedResourcesNetworkAccessType")]
        public Output<string?> ManagedResourcesNetworkAccessType { get; private set; } = null!;

        /// <summary>
        /// The name of the custom Storage Account created by the service in the managed Resource Group. Changing this forces a new resource to be created.
        /// </summary>
        [Output("managedStorageAccountName")]
        public Output<string?> ManagedStorageAccountName { get; private set; } = null!;

        /// <summary>
        /// Specifies the name of the SAP Discovery Virtual Instance. Changing this forces a new resource to be created.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The name of the Resource Group where the SAP Discovery Virtual Instance should exist. Changing this forces a new resource to be created.
        /// </summary>
        [Output("resourceGroupName")]
        public Output<string> ResourceGroupName { get; private set; } = null!;

        /// <summary>
        /// The SAP Product type for the SAP Discovery Virtual Instance. Possible values are `ECC`, `Other` and `S4HANA`. Changing this forces a new resource to be created.
        /// </summary>
        [Output("sapProduct")]
        public Output<string> SapProduct { get; private set; } = null!;

        /// <summary>
        /// A mapping of tags which should be assigned to the SAP Discovery Virtual Instance.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;


        /// <summary>
        /// Create a DiscoveryVirtualInstance resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public DiscoveryVirtualInstance(string name, DiscoveryVirtualInstanceArgs args, CustomResourceOptions? options = null)
            : base("azure:workloadssap/discoveryVirtualInstance:DiscoveryVirtualInstance", name, args ?? new DiscoveryVirtualInstanceArgs(), MakeResourceOptions(options, ""))
        {
        }

        private DiscoveryVirtualInstance(string name, Input<string> id, DiscoveryVirtualInstanceState? state = null, CustomResourceOptions? options = null)
            : base("azure:workloadssap/discoveryVirtualInstance:DiscoveryVirtualInstance", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing DiscoveryVirtualInstance resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static DiscoveryVirtualInstance Get(string name, Input<string> id, DiscoveryVirtualInstanceState? state = null, CustomResourceOptions? options = null)
        {
            return new DiscoveryVirtualInstance(name, id, state, options);
        }
    }

    public sealed class DiscoveryVirtualInstanceArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the Virtual Machine of the Central Server. Changing this forces a new resource to be created.
        /// </summary>
        [Input("centralServerVirtualMachineId", required: true)]
        public Input<string> CentralServerVirtualMachineId { get; set; } = null!;

        /// <summary>
        /// The environment type for the SAP Discovery Virtual Instance. Possible values are `NonProd` and `Prod`. Changing this forces a new resource to be created.
        /// </summary>
        [Input("environment", required: true)]
        public Input<string> Environment { get; set; } = null!;

        /// <summary>
        /// An `Identity` block as defined below.
        /// </summary>
        [Input("identity")]
        public Input<Inputs.DiscoveryVirtualInstanceIdentityArgs>? Identity { get; set; }

        /// <summary>
        /// The Azure Region where the SAP Discovery Virtual Instance should exist. Changing this forces a new resource to be created.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// The name of the managed Resource Group for the SAP Discovery Virtual Instance. Changing this forces a new resource to be created.
        /// </summary>
        [Input("managedResourceGroupName")]
        public Input<string>? ManagedResourceGroupName { get; set; }

        /// <summary>
        /// The network access type for managed resources. Possible values are `Private` and `Public`. Defaults to `Public`.
        /// </summary>
        [Input("managedResourcesNetworkAccessType")]
        public Input<string>? ManagedResourcesNetworkAccessType { get; set; }

        /// <summary>
        /// The name of the custom Storage Account created by the service in the managed Resource Group. Changing this forces a new resource to be created.
        /// </summary>
        [Input("managedStorageAccountName")]
        public Input<string>? ManagedStorageAccountName { get; set; }

        /// <summary>
        /// Specifies the name of the SAP Discovery Virtual Instance. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The name of the Resource Group where the SAP Discovery Virtual Instance should exist. Changing this forces a new resource to be created.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The SAP Product type for the SAP Discovery Virtual Instance. Possible values are `ECC`, `Other` and `S4HANA`. Changing this forces a new resource to be created.
        /// </summary>
        [Input("sapProduct", required: true)]
        public Input<string> SapProduct { get; set; } = null!;

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// A mapping of tags which should be assigned to the SAP Discovery Virtual Instance.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public DiscoveryVirtualInstanceArgs()
        {
        }
        public static new DiscoveryVirtualInstanceArgs Empty => new DiscoveryVirtualInstanceArgs();
    }

    public sealed class DiscoveryVirtualInstanceState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the Virtual Machine of the Central Server. Changing this forces a new resource to be created.
        /// </summary>
        [Input("centralServerVirtualMachineId")]
        public Input<string>? CentralServerVirtualMachineId { get; set; }

        /// <summary>
        /// The environment type for the SAP Discovery Virtual Instance. Possible values are `NonProd` and `Prod`. Changing this forces a new resource to be created.
        /// </summary>
        [Input("environment")]
        public Input<string>? Environment { get; set; }

        /// <summary>
        /// An `Identity` block as defined below.
        /// </summary>
        [Input("identity")]
        public Input<Inputs.DiscoveryVirtualInstanceIdentityGetArgs>? Identity { get; set; }

        /// <summary>
        /// The Azure Region where the SAP Discovery Virtual Instance should exist. Changing this forces a new resource to be created.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// The name of the managed Resource Group for the SAP Discovery Virtual Instance. Changing this forces a new resource to be created.
        /// </summary>
        [Input("managedResourceGroupName")]
        public Input<string>? ManagedResourceGroupName { get; set; }

        /// <summary>
        /// The network access type for managed resources. Possible values are `Private` and `Public`. Defaults to `Public`.
        /// </summary>
        [Input("managedResourcesNetworkAccessType")]
        public Input<string>? ManagedResourcesNetworkAccessType { get; set; }

        /// <summary>
        /// The name of the custom Storage Account created by the service in the managed Resource Group. Changing this forces a new resource to be created.
        /// </summary>
        [Input("managedStorageAccountName")]
        public Input<string>? ManagedStorageAccountName { get; set; }

        /// <summary>
        /// Specifies the name of the SAP Discovery Virtual Instance. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The name of the Resource Group where the SAP Discovery Virtual Instance should exist. Changing this forces a new resource to be created.
        /// </summary>
        [Input("resourceGroupName")]
        public Input<string>? ResourceGroupName { get; set; }

        /// <summary>
        /// The SAP Product type for the SAP Discovery Virtual Instance. Possible values are `ECC`, `Other` and `S4HANA`. Changing this forces a new resource to be created.
        /// </summary>
        [Input("sapProduct")]
        public Input<string>? SapProduct { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// A mapping of tags which should be assigned to the SAP Discovery Virtual Instance.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public DiscoveryVirtualInstanceState()
        {
        }
        public static new DiscoveryVirtualInstanceState Empty => new DiscoveryVirtualInstanceState();
    }
}
