// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.WorkloadsSAP.Inputs
{

    public sealed class SingleNodeVirtualInstanceSingleServerConfigurationArgs : global::Pulumi.ResourceArgs
    {
        [Input("appResourceGroupName", required: true)]
        public Input<string> AppResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The supported SAP database type. Possible values are `DB2` and `HANA`. Changing this forces a new resource to be created.
        /// </summary>
        [Input("databaseType")]
        public Input<string>? DatabaseType { get; set; }

        [Input("diskVolumeConfigurations")]
        private InputList<Inputs.SingleNodeVirtualInstanceSingleServerConfigurationDiskVolumeConfigurationArgs>? _diskVolumeConfigurations;

        /// <summary>
        /// One or more `DiskVolumeConfiguration` blocks as defined below. Changing this forces a new resource to be created.
        /// </summary>
        public InputList<Inputs.SingleNodeVirtualInstanceSingleServerConfigurationDiskVolumeConfigurationArgs> DiskVolumeConfigurations
        {
            get => _diskVolumeConfigurations ?? (_diskVolumeConfigurations = new InputList<Inputs.SingleNodeVirtualInstanceSingleServerConfigurationDiskVolumeConfigurationArgs>());
            set => _diskVolumeConfigurations = value;
        }

        /// <summary>
        /// Specifies whether a secondary IP address should be added to the network interface on all VMs of the SAP system being deployed. Defaults to `False`. Changing this forces a new resource to be created.
        /// </summary>
        [Input("secondaryIpEnabled")]
        public Input<bool>? SecondaryIpEnabled { get; set; }

        /// <summary>
        /// The resource ID of the Subnet for the SAP Single Node Virtual Instance. Changing this forces a new resource to be created.
        /// </summary>
        [Input("subnetId", required: true)]
        public Input<string> SubnetId { get; set; } = null!;

        /// <summary>
        /// A `VirtualMachineConfiguration` block as defined below. Changing this forces a new resource to be created.
        /// </summary>
        [Input("virtualMachineConfiguration", required: true)]
        public Input<Inputs.SingleNodeVirtualInstanceSingleServerConfigurationVirtualMachineConfigurationArgs> VirtualMachineConfiguration { get; set; } = null!;

        /// <summary>
        /// A `VirtualMachineResourceNames` block as defined below. Changing this forces a new resource to be created.
        /// </summary>
        [Input("virtualMachineResourceNames")]
        public Input<Inputs.SingleNodeVirtualInstanceSingleServerConfigurationVirtualMachineResourceNamesArgs>? VirtualMachineResourceNames { get; set; }

        public SingleNodeVirtualInstanceSingleServerConfigurationArgs()
        {
        }
        public static new SingleNodeVirtualInstanceSingleServerConfigurationArgs Empty => new SingleNodeVirtualInstanceSingleServerConfigurationArgs();
    }
}
