// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Healthcare
{
    /// <summary>
    /// Manages a Healthcare FHIR (Fast Healthcare Interoperability Resources) Service
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Azure = Pulumi.Azure;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var exampleResourceGroup = new Azure.Core.ResourceGroup("exampleResourceGroup", new()
    ///     {
    ///         Location = "West Europe",
    ///     });
    /// 
    ///     var current = Azure.Core.GetClientConfig.Invoke();
    /// 
    ///     var exampleWorkspace = new Azure.Healthcare.Workspace("exampleWorkspace", new()
    ///     {
    ///         Location = exampleResourceGroup.Location,
    ///         ResourceGroupName = exampleResourceGroup.Name,
    ///     });
    /// 
    ///     var exampleFhirService = new Azure.Healthcare.FhirService("exampleFhirService", new()
    ///     {
    ///         Location = "east us",
    ///         ResourceGroupName = "tfex-resource_group",
    ///         WorkspaceId = exampleWorkspace.Id,
    ///         Kind = "fhir-R4",
    ///         Authentication = new Azure.Healthcare.Inputs.FhirServiceAuthenticationArgs
    ///         {
    ///             Authority = "https://login.microsoftonline.com/tenantId",
    ///             Audience = "https://tfexfhir.fhir.azurehealthcareapis.com",
    ///         },
    ///         AccessPolicyObjectIds = new[]
    ///         {
    ///             current.Apply(getClientConfigResult =&gt; getClientConfigResult.ObjectId),
    ///         },
    ///         Identity = new Azure.Healthcare.Inputs.FhirServiceIdentityArgs
    ///         {
    ///             Type = "SystemAssigned",
    ///         },
    ///         ContainerRegistryLoginServerUrls = new[]
    ///         {
    ///             "tfex-container_registry_login_server",
    ///         },
    ///         Cors = new Azure.Healthcare.Inputs.FhirServiceCorsArgs
    ///         {
    ///             AllowedOrigins = new[]
    ///             {
    ///                 "https://tfex.com:123",
    ///                 "https://tfex1.com:3389",
    ///             },
    ///             AllowedHeaders = new[]
    ///             {
    ///                 "*",
    ///             },
    ///             AllowedMethods = new[]
    ///             {
    ///                 "GET",
    ///                 "DELETE",
    ///                 "PUT",
    ///             },
    ///             MaxAgeInSeconds = 3600,
    ///             CredentialsAllowed = true,
    ///         },
    ///         ConfigurationExportStorageAccountName = "storage_account_name",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Healthcare FHIR Service can be imported using the resource`id`, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import azure:healthcare/fhirService:FhirService example /subscriptions/12345678-1234-9876-4563-123456789012/resourceGroups/group1/providers/Microsoft.HealthcareApis/workspaces/workspace1/fhirServices/service1
    /// ```
    /// </summary>
    [AzureResourceType("azure:healthcare/fhirService:FhirService")]
    public partial class FhirService : global::Pulumi.CustomResource
    {
        /// <summary>
        /// A list of the access policies of the service instance.
        /// </summary>
        [Output("accessPolicyObjectIds")]
        public Output<ImmutableArray<string>> AccessPolicyObjectIds { get; private set; } = null!;

        /// <summary>
        /// An `authentication` block as defined below.
        /// </summary>
        [Output("authentication")]
        public Output<Outputs.FhirServiceAuthentication> Authentication { get; private set; } = null!;

        /// <summary>
        /// Specifies the name of the storage account which the operation configuration information is exported to.
        /// </summary>
        [Output("configurationExportStorageAccountName")]
        public Output<string?> ConfigurationExportStorageAccountName { get; private set; } = null!;

        /// <summary>
        /// A list of azure container registry settings used for convert data operation of the service instance.
        /// </summary>
        [Output("containerRegistryLoginServerUrls")]
        public Output<ImmutableArray<string>> ContainerRegistryLoginServerUrls { get; private set; } = null!;

        /// <summary>
        /// A `cors` block as defined below.
        /// </summary>
        [Output("cors")]
        public Output<Outputs.FhirServiceCors?> Cors { get; private set; } = null!;

        /// <summary>
        /// An `identity` block as defined below.
        /// </summary>
        [Output("identity")]
        public Output<Outputs.FhirServiceIdentity?> Identity { get; private set; } = null!;

        /// <summary>
        /// Specifies the kind of the Healthcare FHIR Service. Possible values are: `fhir-Stu3` and `fhir-R4`. Defaults to `fhir-R4`. Changing this forces a new Healthcare FHIR Service to be created.
        /// </summary>
        [Output("kind")]
        public Output<string?> Kind { get; private set; } = null!;

        /// <summary>
        /// Specifies the Azure Region where the Healthcare FHIR Service should be created. Changing this forces a new Healthcare FHIR Service to be created.
        /// </summary>
        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// Specifies the name of the Healthcare FHIR Service. Changing this forces a new Healthcare FHIR Service to be created.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// [A list](https://www.terraform.io/docs/configuration/attr-as-blocks.html) of `oci_artifact` objects as defined below to describe [OCI artifacts for export](https://learn.microsoft.com/en-gb/azure/healthcare-apis/fhir/de-identified-export).
        /// </summary>
        [Output("ociArtifacts")]
        public Output<ImmutableArray<Outputs.FhirServiceOciArtifact>> OciArtifacts { get; private set; } = null!;

        /// <summary>
        /// Whether public networks access is enabled.
        /// </summary>
        [Output("publicNetworkAccessEnabled")]
        public Output<bool> PublicNetworkAccessEnabled { get; private set; } = null!;

        /// <summary>
        /// Specifies the name of the Resource Group in which to create the Healthcare FHIR Service. Changing this forces a new resource to be created.
        /// </summary>
        [Output("resourceGroupName")]
        public Output<string> ResourceGroupName { get; private set; } = null!;

        /// <summary>
        /// A mapping of tags to assign to the Healthcare FHIR Service.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// Specifies the id of the Healthcare Workspace where the Healthcare FHIR Service should exist. Changing this forces a new Healthcare FHIR Service to be created.
        /// </summary>
        [Output("workspaceId")]
        public Output<string> WorkspaceId { get; private set; } = null!;


        /// <summary>
        /// Create a FhirService resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public FhirService(string name, FhirServiceArgs args, CustomResourceOptions? options = null)
            : base("azure:healthcare/fhirService:FhirService", name, args ?? new FhirServiceArgs(), MakeResourceOptions(options, ""))
        {
        }

        private FhirService(string name, Input<string> id, FhirServiceState? state = null, CustomResourceOptions? options = null)
            : base("azure:healthcare/fhirService:FhirService", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing FhirService resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static FhirService Get(string name, Input<string> id, FhirServiceState? state = null, CustomResourceOptions? options = null)
        {
            return new FhirService(name, id, state, options);
        }
    }

    public sealed class FhirServiceArgs : global::Pulumi.ResourceArgs
    {
        [Input("accessPolicyObjectIds")]
        private InputList<string>? _accessPolicyObjectIds;

        /// <summary>
        /// A list of the access policies of the service instance.
        /// </summary>
        public InputList<string> AccessPolicyObjectIds
        {
            get => _accessPolicyObjectIds ?? (_accessPolicyObjectIds = new InputList<string>());
            set => _accessPolicyObjectIds = value;
        }

        /// <summary>
        /// An `authentication` block as defined below.
        /// </summary>
        [Input("authentication", required: true)]
        public Input<Inputs.FhirServiceAuthenticationArgs> Authentication { get; set; } = null!;

        /// <summary>
        /// Specifies the name of the storage account which the operation configuration information is exported to.
        /// </summary>
        [Input("configurationExportStorageAccountName")]
        public Input<string>? ConfigurationExportStorageAccountName { get; set; }

        [Input("containerRegistryLoginServerUrls")]
        private InputList<string>? _containerRegistryLoginServerUrls;

        /// <summary>
        /// A list of azure container registry settings used for convert data operation of the service instance.
        /// </summary>
        public InputList<string> ContainerRegistryLoginServerUrls
        {
            get => _containerRegistryLoginServerUrls ?? (_containerRegistryLoginServerUrls = new InputList<string>());
            set => _containerRegistryLoginServerUrls = value;
        }

        /// <summary>
        /// A `cors` block as defined below.
        /// </summary>
        [Input("cors")]
        public Input<Inputs.FhirServiceCorsArgs>? Cors { get; set; }

        /// <summary>
        /// An `identity` block as defined below.
        /// </summary>
        [Input("identity")]
        public Input<Inputs.FhirServiceIdentityArgs>? Identity { get; set; }

        /// <summary>
        /// Specifies the kind of the Healthcare FHIR Service. Possible values are: `fhir-Stu3` and `fhir-R4`. Defaults to `fhir-R4`. Changing this forces a new Healthcare FHIR Service to be created.
        /// </summary>
        [Input("kind")]
        public Input<string>? Kind { get; set; }

        /// <summary>
        /// Specifies the Azure Region where the Healthcare FHIR Service should be created. Changing this forces a new Healthcare FHIR Service to be created.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// Specifies the name of the Healthcare FHIR Service. Changing this forces a new Healthcare FHIR Service to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("ociArtifacts")]
        private InputList<Inputs.FhirServiceOciArtifactArgs>? _ociArtifacts;

        /// <summary>
        /// [A list](https://www.terraform.io/docs/configuration/attr-as-blocks.html) of `oci_artifact` objects as defined below to describe [OCI artifacts for export](https://learn.microsoft.com/en-gb/azure/healthcare-apis/fhir/de-identified-export).
        /// </summary>
        public InputList<Inputs.FhirServiceOciArtifactArgs> OciArtifacts
        {
            get => _ociArtifacts ?? (_ociArtifacts = new InputList<Inputs.FhirServiceOciArtifactArgs>());
            set => _ociArtifacts = value;
        }

        /// <summary>
        /// Specifies the name of the Resource Group in which to create the Healthcare FHIR Service. Changing this forces a new resource to be created.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// A mapping of tags to assign to the Healthcare FHIR Service.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        /// <summary>
        /// Specifies the id of the Healthcare Workspace where the Healthcare FHIR Service should exist. Changing this forces a new Healthcare FHIR Service to be created.
        /// </summary>
        [Input("workspaceId", required: true)]
        public Input<string> WorkspaceId { get; set; } = null!;

        public FhirServiceArgs()
        {
        }
        public static new FhirServiceArgs Empty => new FhirServiceArgs();
    }

    public sealed class FhirServiceState : global::Pulumi.ResourceArgs
    {
        [Input("accessPolicyObjectIds")]
        private InputList<string>? _accessPolicyObjectIds;

        /// <summary>
        /// A list of the access policies of the service instance.
        /// </summary>
        public InputList<string> AccessPolicyObjectIds
        {
            get => _accessPolicyObjectIds ?? (_accessPolicyObjectIds = new InputList<string>());
            set => _accessPolicyObjectIds = value;
        }

        /// <summary>
        /// An `authentication` block as defined below.
        /// </summary>
        [Input("authentication")]
        public Input<Inputs.FhirServiceAuthenticationGetArgs>? Authentication { get; set; }

        /// <summary>
        /// Specifies the name of the storage account which the operation configuration information is exported to.
        /// </summary>
        [Input("configurationExportStorageAccountName")]
        public Input<string>? ConfigurationExportStorageAccountName { get; set; }

        [Input("containerRegistryLoginServerUrls")]
        private InputList<string>? _containerRegistryLoginServerUrls;

        /// <summary>
        /// A list of azure container registry settings used for convert data operation of the service instance.
        /// </summary>
        public InputList<string> ContainerRegistryLoginServerUrls
        {
            get => _containerRegistryLoginServerUrls ?? (_containerRegistryLoginServerUrls = new InputList<string>());
            set => _containerRegistryLoginServerUrls = value;
        }

        /// <summary>
        /// A `cors` block as defined below.
        /// </summary>
        [Input("cors")]
        public Input<Inputs.FhirServiceCorsGetArgs>? Cors { get; set; }

        /// <summary>
        /// An `identity` block as defined below.
        /// </summary>
        [Input("identity")]
        public Input<Inputs.FhirServiceIdentityGetArgs>? Identity { get; set; }

        /// <summary>
        /// Specifies the kind of the Healthcare FHIR Service. Possible values are: `fhir-Stu3` and `fhir-R4`. Defaults to `fhir-R4`. Changing this forces a new Healthcare FHIR Service to be created.
        /// </summary>
        [Input("kind")]
        public Input<string>? Kind { get; set; }

        /// <summary>
        /// Specifies the Azure Region where the Healthcare FHIR Service should be created. Changing this forces a new Healthcare FHIR Service to be created.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// Specifies the name of the Healthcare FHIR Service. Changing this forces a new Healthcare FHIR Service to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("ociArtifacts")]
        private InputList<Inputs.FhirServiceOciArtifactGetArgs>? _ociArtifacts;

        /// <summary>
        /// [A list](https://www.terraform.io/docs/configuration/attr-as-blocks.html) of `oci_artifact` objects as defined below to describe [OCI artifacts for export](https://learn.microsoft.com/en-gb/azure/healthcare-apis/fhir/de-identified-export).
        /// </summary>
        public InputList<Inputs.FhirServiceOciArtifactGetArgs> OciArtifacts
        {
            get => _ociArtifacts ?? (_ociArtifacts = new InputList<Inputs.FhirServiceOciArtifactGetArgs>());
            set => _ociArtifacts = value;
        }

        /// <summary>
        /// Whether public networks access is enabled.
        /// </summary>
        [Input("publicNetworkAccessEnabled")]
        public Input<bool>? PublicNetworkAccessEnabled { get; set; }

        /// <summary>
        /// Specifies the name of the Resource Group in which to create the Healthcare FHIR Service. Changing this forces a new resource to be created.
        /// </summary>
        [Input("resourceGroupName")]
        public Input<string>? ResourceGroupName { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// A mapping of tags to assign to the Healthcare FHIR Service.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        /// <summary>
        /// Specifies the id of the Healthcare Workspace where the Healthcare FHIR Service should exist. Changing this forces a new Healthcare FHIR Service to be created.
        /// </summary>
        [Input("workspaceId")]
        public Input<string>? WorkspaceId { get; set; }

        public FhirServiceState()
        {
        }
        public static new FhirServiceState Empty => new FhirServiceState();
    }
}
