// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Healthcare
{
    /// <summary>
    /// Manages a Healthcare Med Tech Service Fhir Destination.
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using Azure = Pulumi.Azure;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var test = new Azure.Healthcare.MedtechServiceFhirDestination("test", new()
    ///     {
    ///         DestinationFhirMappingJson = @"  {
    ///             ""templateType"": ""CollectionFhirTemplate"",
    ///             ""template"": [
    ///               {
    ///                 ""templateType"": ""CodeValueFhir"",
    ///                 ""template"": {
    ///                   ""codes"": [
    ///                     {
    ///                       ""code"": ""8867-4"",
    ///                       ""system"": ""http://loinc.org"",
    ///                       ""display"": ""Heart rate""
    ///                     }
    ///                   ],
    ///                   ""periodInterval"": 60,
    ///                   ""typeName"": ""heartrate"",
    ///                   ""value"": {
    ///                     ""defaultPeriod"": 5000,
    ///                     ""unit"": ""count/min"",
    ///                     ""valueName"": ""hr"",
    ///                     ""valueType"": ""SampledData""
    ///                   }
    ///                 }
    ///               }
    ///             ]
    ///   }
    ///   
    /// ",
    ///         DestinationFhirServiceId = "fhir_service_id",
    ///         DestinationIdentityResolutionType = "Create",
    ///         Location = "east us",
    ///         MedtechServiceId = "mt_service_id",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Healthcare Med Tech Service Fhir Destination can be imported using the resource`id`, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import azure:healthcare/medtechServiceFhirDestination:MedtechServiceFhirDestination example /subscriptions/12345678-1234-9876-4563-123456789012/resourceGroups/group1/providers/Microsoft.HealthcareApis/workspaces/workspace1/iotConnectors/iotconnector1/fhirDestinations/destination1
    /// ```
    /// </summary>
    [AzureResourceType("azure:healthcare/medtechServiceFhirDestination:MedtechServiceFhirDestination")]
    public partial class MedtechServiceFhirDestination : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Specifies the destination Fhir mappings of the Med Tech Service Fhir Destination.
        /// </summary>
        [Output("destinationFhirMappingJson")]
        public Output<string> DestinationFhirMappingJson { get; private set; } = null!;

        [Output("destinationFhirServiceId")]
        public Output<string> DestinationFhirServiceId { get; private set; } = null!;

        /// <summary>
        /// Specifies the destination identity resolution type where the Healthcare Med Tech Service Fhir Destination should be created. Possible values are `Create`, `Lookup`.
        /// </summary>
        [Output("destinationIdentityResolutionType")]
        public Output<string> DestinationIdentityResolutionType { get; private set; } = null!;

        /// <summary>
        /// Specifies the Azure Region where the Healthcare Med Tech Service Fhir Destination should be created. Changing this forces a new Healthcare Med Tech Service Fhir Destination to be created.
        /// </summary>
        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// Specifies the name of the Healthcare Med Tech Service where the Healthcare Med Tech Service Fhir Destination should exist. Changing this forces a new Healthcare Med Tech Service Fhir Destination to be created.
        /// </summary>
        [Output("medtechServiceId")]
        public Output<string> MedtechServiceId { get; private set; } = null!;

        /// <summary>
        /// Specifies the name of the Healthcare Med Tech Service Fhir Destination. Changing this forces a new Healthcare Med Tech Service Fhir Destination to be created.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;


        /// <summary>
        /// Create a MedtechServiceFhirDestination resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public MedtechServiceFhirDestination(string name, MedtechServiceFhirDestinationArgs args, CustomResourceOptions? options = null)
            : base("azure:healthcare/medtechServiceFhirDestination:MedtechServiceFhirDestination", name, args ?? new MedtechServiceFhirDestinationArgs(), MakeResourceOptions(options, ""))
        {
        }

        private MedtechServiceFhirDestination(string name, Input<string> id, MedtechServiceFhirDestinationState? state = null, CustomResourceOptions? options = null)
            : base("azure:healthcare/medtechServiceFhirDestination:MedtechServiceFhirDestination", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing MedtechServiceFhirDestination resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static MedtechServiceFhirDestination Get(string name, Input<string> id, MedtechServiceFhirDestinationState? state = null, CustomResourceOptions? options = null)
        {
            return new MedtechServiceFhirDestination(name, id, state, options);
        }
    }

    public sealed class MedtechServiceFhirDestinationArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies the destination Fhir mappings of the Med Tech Service Fhir Destination.
        /// </summary>
        [Input("destinationFhirMappingJson", required: true)]
        public Input<string> DestinationFhirMappingJson { get; set; } = null!;

        [Input("destinationFhirServiceId", required: true)]
        public Input<string> DestinationFhirServiceId { get; set; } = null!;

        /// <summary>
        /// Specifies the destination identity resolution type where the Healthcare Med Tech Service Fhir Destination should be created. Possible values are `Create`, `Lookup`.
        /// </summary>
        [Input("destinationIdentityResolutionType", required: true)]
        public Input<string> DestinationIdentityResolutionType { get; set; } = null!;

        /// <summary>
        /// Specifies the Azure Region where the Healthcare Med Tech Service Fhir Destination should be created. Changing this forces a new Healthcare Med Tech Service Fhir Destination to be created.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// Specifies the name of the Healthcare Med Tech Service where the Healthcare Med Tech Service Fhir Destination should exist. Changing this forces a new Healthcare Med Tech Service Fhir Destination to be created.
        /// </summary>
        [Input("medtechServiceId", required: true)]
        public Input<string> MedtechServiceId { get; set; } = null!;

        /// <summary>
        /// Specifies the name of the Healthcare Med Tech Service Fhir Destination. Changing this forces a new Healthcare Med Tech Service Fhir Destination to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        public MedtechServiceFhirDestinationArgs()
        {
        }
        public static new MedtechServiceFhirDestinationArgs Empty => new MedtechServiceFhirDestinationArgs();
    }

    public sealed class MedtechServiceFhirDestinationState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies the destination Fhir mappings of the Med Tech Service Fhir Destination.
        /// </summary>
        [Input("destinationFhirMappingJson")]
        public Input<string>? DestinationFhirMappingJson { get; set; }

        [Input("destinationFhirServiceId")]
        public Input<string>? DestinationFhirServiceId { get; set; }

        /// <summary>
        /// Specifies the destination identity resolution type where the Healthcare Med Tech Service Fhir Destination should be created. Possible values are `Create`, `Lookup`.
        /// </summary>
        [Input("destinationIdentityResolutionType")]
        public Input<string>? DestinationIdentityResolutionType { get; set; }

        /// <summary>
        /// Specifies the Azure Region where the Healthcare Med Tech Service Fhir Destination should be created. Changing this forces a new Healthcare Med Tech Service Fhir Destination to be created.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// Specifies the name of the Healthcare Med Tech Service where the Healthcare Med Tech Service Fhir Destination should exist. Changing this forces a new Healthcare Med Tech Service Fhir Destination to be created.
        /// </summary>
        [Input("medtechServiceId")]
        public Input<string>? MedtechServiceId { get; set; }

        /// <summary>
        /// Specifies the name of the Healthcare Med Tech Service Fhir Destination. Changing this forces a new Healthcare Med Tech Service Fhir Destination to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        public MedtechServiceFhirDestinationState()
        {
        }
        public static new MedtechServiceFhirDestinationState Empty => new MedtechServiceFhirDestinationState();
    }
}
