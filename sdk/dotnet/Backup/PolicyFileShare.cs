// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Backup
{
    /// <summary>
    /// Manages an Azure File Share Backup Policy within a Recovery Services vault.
    /// 
    /// &gt; **NOTE:** Azure Backup for Azure File Shares is currently in public preview. During the preview, the service is subject to additional limitations and unsupported backup scenarios. [Read More](https://docs.microsoft.com/en-us/azure/backup/backup-azure-files#limitations-for-azure-file-share-backup-during-preview)
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using Azure = Pulumi.Azure;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var rg = new Azure.Core.ResourceGroup("rg", new Azure.Core.ResourceGroupArgs
    ///         {
    ///             Location = "West US",
    ///         });
    ///         var vault = new Azure.RecoveryServices.Vault("vault", new Azure.RecoveryServices.VaultArgs
    ///         {
    ///             Location = rg.Location,
    ///             ResourceGroupName = rg.Name,
    ///             Sku = "Standard",
    ///         });
    ///         var policy = new Azure.Backup.PolicyFileShare("policy", new Azure.Backup.PolicyFileShareArgs
    ///         {
    ///             ResourceGroupName = rg.Name,
    ///             RecoveryVaultName = vault.Name,
    ///             Timezone = "UTC",
    ///             Backup = new Azure.Backup.Inputs.PolicyFileShareBackupArgs
    ///             {
    ///                 Frequency = "Daily",
    ///                 Time = "23:00",
    ///             },
    ///             RetentionDaily = new Azure.Backup.Inputs.PolicyFileShareRetentionDailyArgs
    ///             {
    ///                 Count = 10,
    ///             },
    ///         });
    ///     }
    /// 
    /// }
    /// ```
    /// 
    /// ## Import
    /// 
    /// Azure File Share Backup Policies can be imported using the `resource id`, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import azure:backup/policyFileShare:PolicyFileShare policy1 /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.RecoveryServices/vaults/example-recovery-vault/backupPolicies/policy1
    /// ```
    /// </summary>
    [AzureResourceType("azure:backup/policyFileShare:PolicyFileShare")]
    public partial class PolicyFileShare : Pulumi.CustomResource
    {
        /// <summary>
        /// Configures the Policy backup frequency and times as documented in the `backup` block below.
        /// </summary>
        [Output("backup")]
        public Output<Outputs.PolicyFileShareBackup> Backup { get; private set; } = null!;

        /// <summary>
        /// Specifies the name of the policy. Changing this forces a new resource to be created.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Specifies the name of the Recovery Services Vault to use. Changing this forces a new resource to be created.
        /// </summary>
        [Output("recoveryVaultName")]
        public Output<string> RecoveryVaultName { get; private set; } = null!;

        /// <summary>
        /// The name of the resource group in which to create the policy. Changing this forces a new resource to be created.
        /// </summary>
        [Output("resourceGroupName")]
        public Output<string> ResourceGroupName { get; private set; } = null!;

        /// <summary>
        /// Configures the policy daily retention as documented in the `retention_daily` block below.
        /// </summary>
        [Output("retentionDaily")]
        public Output<Outputs.PolicyFileShareRetentionDaily> RetentionDaily { get; private set; } = null!;

        /// <summary>
        /// Specifies the timezone. [the possible values are defined here](http://jackstromberg.com/2017/01/list-of-time-zones-consumed-by-azure/). Defaults to `UTC`
        /// </summary>
        [Output("timezone")]
        public Output<string?> Timezone { get; private set; } = null!;


        /// <summary>
        /// Create a PolicyFileShare resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public PolicyFileShare(string name, PolicyFileShareArgs args, CustomResourceOptions? options = null)
            : base("azure:backup/policyFileShare:PolicyFileShare", name, args ?? new PolicyFileShareArgs(), MakeResourceOptions(options, ""))
        {
        }

        private PolicyFileShare(string name, Input<string> id, PolicyFileShareState? state = null, CustomResourceOptions? options = null)
            : base("azure:backup/policyFileShare:PolicyFileShare", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing PolicyFileShare resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static PolicyFileShare Get(string name, Input<string> id, PolicyFileShareState? state = null, CustomResourceOptions? options = null)
        {
            return new PolicyFileShare(name, id, state, options);
        }
    }

    public sealed class PolicyFileShareArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Configures the Policy backup frequency and times as documented in the `backup` block below.
        /// </summary>
        [Input("backup", required: true)]
        public Input<Inputs.PolicyFileShareBackupArgs> Backup { get; set; } = null!;

        /// <summary>
        /// Specifies the name of the policy. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Specifies the name of the Recovery Services Vault to use. Changing this forces a new resource to be created.
        /// </summary>
        [Input("recoveryVaultName", required: true)]
        public Input<string> RecoveryVaultName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group in which to create the policy. Changing this forces a new resource to be created.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// Configures the policy daily retention as documented in the `retention_daily` block below.
        /// </summary>
        [Input("retentionDaily", required: true)]
        public Input<Inputs.PolicyFileShareRetentionDailyArgs> RetentionDaily { get; set; } = null!;

        /// <summary>
        /// Specifies the timezone. [the possible values are defined here](http://jackstromberg.com/2017/01/list-of-time-zones-consumed-by-azure/). Defaults to `UTC`
        /// </summary>
        [Input("timezone")]
        public Input<string>? Timezone { get; set; }

        public PolicyFileShareArgs()
        {
        }
    }

    public sealed class PolicyFileShareState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Configures the Policy backup frequency and times as documented in the `backup` block below.
        /// </summary>
        [Input("backup")]
        public Input<Inputs.PolicyFileShareBackupGetArgs>? Backup { get; set; }

        /// <summary>
        /// Specifies the name of the policy. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Specifies the name of the Recovery Services Vault to use. Changing this forces a new resource to be created.
        /// </summary>
        [Input("recoveryVaultName")]
        public Input<string>? RecoveryVaultName { get; set; }

        /// <summary>
        /// The name of the resource group in which to create the policy. Changing this forces a new resource to be created.
        /// </summary>
        [Input("resourceGroupName")]
        public Input<string>? ResourceGroupName { get; set; }

        /// <summary>
        /// Configures the policy daily retention as documented in the `retention_daily` block below.
        /// </summary>
        [Input("retentionDaily")]
        public Input<Inputs.PolicyFileShareRetentionDailyGetArgs>? RetentionDaily { get; set; }

        /// <summary>
        /// Specifies the timezone. [the possible values are defined here](http://jackstromberg.com/2017/01/list-of-time-zones-consumed-by-azure/). Defaults to `UTC`
        /// </summary>
        [Input("timezone")]
        public Input<string>? Timezone { get; set; }

        public PolicyFileShareState()
        {
        }
    }
}
