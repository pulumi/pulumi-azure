// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Backup
{
    /// <summary>
    /// Manages an Azure VM Workload Backup Policy within a Recovery Services vault.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Azure = Pulumi.Azure;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var exampleResourceGroup = new Azure.Core.ResourceGroup("exampleResourceGroup", new()
    ///     {
    ///         Location = "West Europe",
    ///     });
    /// 
    ///     var exampleVault = new Azure.RecoveryServices.Vault("exampleVault", new()
    ///     {
    ///         Location = exampleResourceGroup.Location,
    ///         ResourceGroupName = exampleResourceGroup.Name,
    ///         Sku = "Standard",
    ///         SoftDeleteEnabled = false,
    ///     });
    /// 
    ///     var examplePolicyVMWorkload = new Azure.Backup.PolicyVMWorkload("examplePolicyVMWorkload", new()
    ///     {
    ///         ResourceGroupName = exampleResourceGroup.Name,
    ///         RecoveryVaultName = exampleVault.Name,
    ///         WorkloadType = "SQLDataBase",
    ///         Settings = new Azure.Backup.Inputs.PolicyVMWorkloadSettingsArgs
    ///         {
    ///             TimeZone = "UTC",
    ///             CompressionEnabled = false,
    ///         },
    ///         ProtectionPolicies = new[]
    ///         {
    ///             new Azure.Backup.Inputs.PolicyVMWorkloadProtectionPolicyArgs
    ///             {
    ///                 PolicyType = "Full",
    ///                 Backup = new Azure.Backup.Inputs.PolicyVMWorkloadProtectionPolicyBackupArgs
    ///                 {
    ///                     Frequency = "Daily",
    ///                     Time = "15:00",
    ///                 },
    ///                 RetentionDaily = new Azure.Backup.Inputs.PolicyVMWorkloadProtectionPolicyRetentionDailyArgs
    ///                 {
    ///                     Count = 8,
    ///                 },
    ///             },
    ///             new Azure.Backup.Inputs.PolicyVMWorkloadProtectionPolicyArgs
    ///             {
    ///                 PolicyType = "Log",
    ///                 Backup = new Azure.Backup.Inputs.PolicyVMWorkloadProtectionPolicyBackupArgs
    ///                 {
    ///                     FrequencyInMinutes = 15,
    ///                 },
    ///                 SimpleRetention = new Azure.Backup.Inputs.PolicyVMWorkloadProtectionPolicySimpleRetentionArgs
    ///                 {
    ///                     Count = 8,
    ///                 },
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Azure VM Workload Backup Policies can be imported using the `resource id`, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import azure:backup/policyVMWorkload:PolicyVMWorkload policy1 /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.RecoveryServices/vaults/vault1/backupPolicies/policy1
    /// ```
    /// </summary>
    [AzureResourceType("azure:backup/policyVMWorkload:PolicyVMWorkload")]
    public partial class PolicyVMWorkload : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The name of the VM Workload Backup Policy. Changing this forces a new resource to be created.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// One or more `protection_policy` blocks as defined below.
        /// </summary>
        [Output("protectionPolicies")]
        public Output<ImmutableArray<Outputs.PolicyVMWorkloadProtectionPolicy>> ProtectionPolicies { get; private set; } = null!;

        /// <summary>
        /// The name of the Recovery Services Vault to use. Changing this forces a new resource to be created.
        /// </summary>
        [Output("recoveryVaultName")]
        public Output<string> RecoveryVaultName { get; private set; } = null!;

        /// <summary>
        /// The name of the resource group in which to create the VM Workload Backup Policy. Changing this forces a new resource to be created.
        /// </summary>
        [Output("resourceGroupName")]
        public Output<string> ResourceGroupName { get; private set; } = null!;

        /// <summary>
        /// A `settings` block as defined below.
        /// </summary>
        [Output("settings")]
        public Output<Outputs.PolicyVMWorkloadSettings> Settings { get; private set; } = null!;

        /// <summary>
        /// The VM Workload type for the Backup Policy. Possible values are `SQLDataBase` and `SAPHanaDatabase`. Changing this forces a new resource to be created.
        /// </summary>
        [Output("workloadType")]
        public Output<string> WorkloadType { get; private set; } = null!;


        /// <summary>
        /// Create a PolicyVMWorkload resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public PolicyVMWorkload(string name, PolicyVMWorkloadArgs args, CustomResourceOptions? options = null)
            : base("azure:backup/policyVMWorkload:PolicyVMWorkload", name, args ?? new PolicyVMWorkloadArgs(), MakeResourceOptions(options, ""))
        {
        }

        private PolicyVMWorkload(string name, Input<string> id, PolicyVMWorkloadState? state = null, CustomResourceOptions? options = null)
            : base("azure:backup/policyVMWorkload:PolicyVMWorkload", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing PolicyVMWorkload resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static PolicyVMWorkload Get(string name, Input<string> id, PolicyVMWorkloadState? state = null, CustomResourceOptions? options = null)
        {
            return new PolicyVMWorkload(name, id, state, options);
        }
    }

    public sealed class PolicyVMWorkloadArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the VM Workload Backup Policy. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("protectionPolicies", required: true)]
        private InputList<Inputs.PolicyVMWorkloadProtectionPolicyArgs>? _protectionPolicies;

        /// <summary>
        /// One or more `protection_policy` blocks as defined below.
        /// </summary>
        public InputList<Inputs.PolicyVMWorkloadProtectionPolicyArgs> ProtectionPolicies
        {
            get => _protectionPolicies ?? (_protectionPolicies = new InputList<Inputs.PolicyVMWorkloadProtectionPolicyArgs>());
            set => _protectionPolicies = value;
        }

        /// <summary>
        /// The name of the Recovery Services Vault to use. Changing this forces a new resource to be created.
        /// </summary>
        [Input("recoveryVaultName", required: true)]
        public Input<string> RecoveryVaultName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group in which to create the VM Workload Backup Policy. Changing this forces a new resource to be created.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// A `settings` block as defined below.
        /// </summary>
        [Input("settings", required: true)]
        public Input<Inputs.PolicyVMWorkloadSettingsArgs> Settings { get; set; } = null!;

        /// <summary>
        /// The VM Workload type for the Backup Policy. Possible values are `SQLDataBase` and `SAPHanaDatabase`. Changing this forces a new resource to be created.
        /// </summary>
        [Input("workloadType", required: true)]
        public Input<string> WorkloadType { get; set; } = null!;

        public PolicyVMWorkloadArgs()
        {
        }
        public static new PolicyVMWorkloadArgs Empty => new PolicyVMWorkloadArgs();
    }

    public sealed class PolicyVMWorkloadState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the VM Workload Backup Policy. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("protectionPolicies")]
        private InputList<Inputs.PolicyVMWorkloadProtectionPolicyGetArgs>? _protectionPolicies;

        /// <summary>
        /// One or more `protection_policy` blocks as defined below.
        /// </summary>
        public InputList<Inputs.PolicyVMWorkloadProtectionPolicyGetArgs> ProtectionPolicies
        {
            get => _protectionPolicies ?? (_protectionPolicies = new InputList<Inputs.PolicyVMWorkloadProtectionPolicyGetArgs>());
            set => _protectionPolicies = value;
        }

        /// <summary>
        /// The name of the Recovery Services Vault to use. Changing this forces a new resource to be created.
        /// </summary>
        [Input("recoveryVaultName")]
        public Input<string>? RecoveryVaultName { get; set; }

        /// <summary>
        /// The name of the resource group in which to create the VM Workload Backup Policy. Changing this forces a new resource to be created.
        /// </summary>
        [Input("resourceGroupName")]
        public Input<string>? ResourceGroupName { get; set; }

        /// <summary>
        /// A `settings` block as defined below.
        /// </summary>
        [Input("settings")]
        public Input<Inputs.PolicyVMWorkloadSettingsGetArgs>? Settings { get; set; }

        /// <summary>
        /// The VM Workload type for the Backup Policy. Possible values are `SQLDataBase` and `SAPHanaDatabase`. Changing this forces a new resource to be created.
        /// </summary>
        [Input("workloadType")]
        public Input<string>? WorkloadType { get; set; }

        public PolicyVMWorkloadState()
        {
        }
        public static new PolicyVMWorkloadState Empty => new PolicyVMWorkloadState();
    }
}
