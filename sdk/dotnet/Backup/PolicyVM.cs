// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Backup
{
    /// <summary>
    /// Manages an Azure Backup VM Backup Policy.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Azure = Pulumi.Azure;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var exampleResourceGroup = new Azure.Core.ResourceGroup("exampleResourceGroup", new()
    ///     {
    ///         Location = "West Europe",
    ///     });
    /// 
    ///     var exampleVault = new Azure.RecoveryServices.Vault("exampleVault", new()
    ///     {
    ///         Location = exampleResourceGroup.Location,
    ///         ResourceGroupName = exampleResourceGroup.Name,
    ///         Sku = "Standard",
    ///     });
    /// 
    ///     var examplePolicyVM = new Azure.Backup.PolicyVM("examplePolicyVM", new()
    ///     {
    ///         ResourceGroupName = exampleResourceGroup.Name,
    ///         RecoveryVaultName = exampleVault.Name,
    ///         Timezone = "UTC",
    ///         Backup = new Azure.Backup.Inputs.PolicyVMBackupArgs
    ///         {
    ///             Frequency = "Daily",
    ///             Time = "23:00",
    ///         },
    ///         RetentionDaily = new Azure.Backup.Inputs.PolicyVMRetentionDailyArgs
    ///         {
    ///             Count = 10,
    ///         },
    ///         RetentionWeekly = new Azure.Backup.Inputs.PolicyVMRetentionWeeklyArgs
    ///         {
    ///             Count = 42,
    ///             Weekdays = new[]
    ///             {
    ///                 "Sunday",
    ///                 "Wednesday",
    ///                 "Friday",
    ///                 "Saturday",
    ///             },
    ///         },
    ///         RetentionMonthly = new Azure.Backup.Inputs.PolicyVMRetentionMonthlyArgs
    ///         {
    ///             Count = 7,
    ///             Weekdays = new[]
    ///             {
    ///                 "Sunday",
    ///                 "Wednesday",
    ///             },
    ///             Weeks = new[]
    ///             {
    ///                 "First",
    ///                 "Last",
    ///             },
    ///         },
    ///         RetentionYearly = new Azure.Backup.Inputs.PolicyVMRetentionYearlyArgs
    ///         {
    ///             Count = 77,
    ///             Weekdays = new[]
    ///             {
    ///                 "Sunday",
    ///             },
    ///             Weeks = new[]
    ///             {
    ///                 "Last",
    ///             },
    ///             Months = new[]
    ///             {
    ///                 "January",
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// VM Backup Policies can be imported using the `resource id`, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import azure:backup/policyVM:PolicyVM policy1 /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.RecoveryServices/vaults/example-recovery-vault/backupPolicies/policy1
    /// ```
    /// </summary>
    [AzureResourceType("azure:backup/policyVM:PolicyVM")]
    public partial class PolicyVM : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Configures the Policy backup frequency, times &amp; days as documented in the `backup` block below.
        /// </summary>
        [Output("backup")]
        public Output<Outputs.PolicyVMBackup> Backup { get; private set; } = null!;

        /// <summary>
        /// Specifies the instant restore resource group name as documented in the `instant_restore_resource_group` block below.
        /// </summary>
        [Output("instantRestoreResourceGroup")]
        public Output<Outputs.PolicyVMInstantRestoreResourceGroup?> InstantRestoreResourceGroup { get; private set; } = null!;

        /// <summary>
        /// Specifies the instant restore retention range in days. Possible values are between `1` and `5` when `policy_type` is `V1`, and `1` to `30` when `policy_type` is `V2`.
        /// 
        /// &gt; **NOTE:** `instant_restore_retention_days` **must** be set to `5` if the backup frequency is set to `Weekly`.
        /// </summary>
        [Output("instantRestoreRetentionDays")]
        public Output<int> InstantRestoreRetentionDays { get; private set; } = null!;

        /// <summary>
        /// Specifies the name of the Backup Policy. Changing this forces a new resource to be created.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Type of the Backup Policy. Possible values are `V1` and `V2` where `V2` stands for the Enhanced Policy. Defaults to `V1`. Changing this forces a new resource to be created.
        /// </summary>
        [Output("policyType")]
        public Output<string?> PolicyType { get; private set; } = null!;

        /// <summary>
        /// Specifies the name of the Recovery Services Vault to use. Changing this forces a new resource to be created.
        /// </summary>
        [Output("recoveryVaultName")]
        public Output<string> RecoveryVaultName { get; private set; } = null!;

        /// <summary>
        /// The name of the resource group in which to create the policy. Changing this forces a new resource to be created.
        /// </summary>
        [Output("resourceGroupName")]
        public Output<string> ResourceGroupName { get; private set; } = null!;

        /// <summary>
        /// Configures the policy daily retention as documented in the `retention_daily` block below. Required when backup frequency is `Daily`.
        /// </summary>
        [Output("retentionDaily")]
        public Output<Outputs.PolicyVMRetentionDaily?> RetentionDaily { get; private set; } = null!;

        /// <summary>
        /// Configures the policy monthly retention as documented in the `retention_monthly` block below.
        /// </summary>
        [Output("retentionMonthly")]
        public Output<Outputs.PolicyVMRetentionMonthly?> RetentionMonthly { get; private set; } = null!;

        /// <summary>
        /// Configures the policy weekly retention as documented in the `retention_weekly` block below. Required when backup frequency is `Weekly`.
        /// </summary>
        [Output("retentionWeekly")]
        public Output<Outputs.PolicyVMRetentionWeekly?> RetentionWeekly { get; private set; } = null!;

        /// <summary>
        /// Configures the policy yearly retention as documented in the `retention_yearly` block below.
        /// </summary>
        [Output("retentionYearly")]
        public Output<Outputs.PolicyVMRetentionYearly?> RetentionYearly { get; private set; } = null!;

        /// <summary>
        /// Specifies the timezone. [the possible values are defined here](https://jackstromberg.com/2017/01/list-of-time-zones-consumed-by-azure/). Defaults to `UTC`
        /// </summary>
        [Output("timezone")]
        public Output<string?> Timezone { get; private set; } = null!;


        /// <summary>
        /// Create a PolicyVM resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public PolicyVM(string name, PolicyVMArgs args, CustomResourceOptions? options = null)
            : base("azure:backup/policyVM:PolicyVM", name, args ?? new PolicyVMArgs(), MakeResourceOptions(options, ""))
        {
        }

        private PolicyVM(string name, Input<string> id, PolicyVMState? state = null, CustomResourceOptions? options = null)
            : base("azure:backup/policyVM:PolicyVM", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing PolicyVM resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static PolicyVM Get(string name, Input<string> id, PolicyVMState? state = null, CustomResourceOptions? options = null)
        {
            return new PolicyVM(name, id, state, options);
        }
    }

    public sealed class PolicyVMArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Configures the Policy backup frequency, times &amp; days as documented in the `backup` block below.
        /// </summary>
        [Input("backup", required: true)]
        public Input<Inputs.PolicyVMBackupArgs> Backup { get; set; } = null!;

        /// <summary>
        /// Specifies the instant restore resource group name as documented in the `instant_restore_resource_group` block below.
        /// </summary>
        [Input("instantRestoreResourceGroup")]
        public Input<Inputs.PolicyVMInstantRestoreResourceGroupArgs>? InstantRestoreResourceGroup { get; set; }

        /// <summary>
        /// Specifies the instant restore retention range in days. Possible values are between `1` and `5` when `policy_type` is `V1`, and `1` to `30` when `policy_type` is `V2`.
        /// 
        /// &gt; **NOTE:** `instant_restore_retention_days` **must** be set to `5` if the backup frequency is set to `Weekly`.
        /// </summary>
        [Input("instantRestoreRetentionDays")]
        public Input<int>? InstantRestoreRetentionDays { get; set; }

        /// <summary>
        /// Specifies the name of the Backup Policy. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Type of the Backup Policy. Possible values are `V1` and `V2` where `V2` stands for the Enhanced Policy. Defaults to `V1`. Changing this forces a new resource to be created.
        /// </summary>
        [Input("policyType")]
        public Input<string>? PolicyType { get; set; }

        /// <summary>
        /// Specifies the name of the Recovery Services Vault to use. Changing this forces a new resource to be created.
        /// </summary>
        [Input("recoveryVaultName", required: true)]
        public Input<string> RecoveryVaultName { get; set; } = null!;

        /// <summary>
        /// The name of the resource group in which to create the policy. Changing this forces a new resource to be created.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// Configures the policy daily retention as documented in the `retention_daily` block below. Required when backup frequency is `Daily`.
        /// </summary>
        [Input("retentionDaily")]
        public Input<Inputs.PolicyVMRetentionDailyArgs>? RetentionDaily { get; set; }

        /// <summary>
        /// Configures the policy monthly retention as documented in the `retention_monthly` block below.
        /// </summary>
        [Input("retentionMonthly")]
        public Input<Inputs.PolicyVMRetentionMonthlyArgs>? RetentionMonthly { get; set; }

        /// <summary>
        /// Configures the policy weekly retention as documented in the `retention_weekly` block below. Required when backup frequency is `Weekly`.
        /// </summary>
        [Input("retentionWeekly")]
        public Input<Inputs.PolicyVMRetentionWeeklyArgs>? RetentionWeekly { get; set; }

        /// <summary>
        /// Configures the policy yearly retention as documented in the `retention_yearly` block below.
        /// </summary>
        [Input("retentionYearly")]
        public Input<Inputs.PolicyVMRetentionYearlyArgs>? RetentionYearly { get; set; }

        /// <summary>
        /// Specifies the timezone. [the possible values are defined here](https://jackstromberg.com/2017/01/list-of-time-zones-consumed-by-azure/). Defaults to `UTC`
        /// </summary>
        [Input("timezone")]
        public Input<string>? Timezone { get; set; }

        public PolicyVMArgs()
        {
        }
        public static new PolicyVMArgs Empty => new PolicyVMArgs();
    }

    public sealed class PolicyVMState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Configures the Policy backup frequency, times &amp; days as documented in the `backup` block below.
        /// </summary>
        [Input("backup")]
        public Input<Inputs.PolicyVMBackupGetArgs>? Backup { get; set; }

        /// <summary>
        /// Specifies the instant restore resource group name as documented in the `instant_restore_resource_group` block below.
        /// </summary>
        [Input("instantRestoreResourceGroup")]
        public Input<Inputs.PolicyVMInstantRestoreResourceGroupGetArgs>? InstantRestoreResourceGroup { get; set; }

        /// <summary>
        /// Specifies the instant restore retention range in days. Possible values are between `1` and `5` when `policy_type` is `V1`, and `1` to `30` when `policy_type` is `V2`.
        /// 
        /// &gt; **NOTE:** `instant_restore_retention_days` **must** be set to `5` if the backup frequency is set to `Weekly`.
        /// </summary>
        [Input("instantRestoreRetentionDays")]
        public Input<int>? InstantRestoreRetentionDays { get; set; }

        /// <summary>
        /// Specifies the name of the Backup Policy. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Type of the Backup Policy. Possible values are `V1` and `V2` where `V2` stands for the Enhanced Policy. Defaults to `V1`. Changing this forces a new resource to be created.
        /// </summary>
        [Input("policyType")]
        public Input<string>? PolicyType { get; set; }

        /// <summary>
        /// Specifies the name of the Recovery Services Vault to use. Changing this forces a new resource to be created.
        /// </summary>
        [Input("recoveryVaultName")]
        public Input<string>? RecoveryVaultName { get; set; }

        /// <summary>
        /// The name of the resource group in which to create the policy. Changing this forces a new resource to be created.
        /// </summary>
        [Input("resourceGroupName")]
        public Input<string>? ResourceGroupName { get; set; }

        /// <summary>
        /// Configures the policy daily retention as documented in the `retention_daily` block below. Required when backup frequency is `Daily`.
        /// </summary>
        [Input("retentionDaily")]
        public Input<Inputs.PolicyVMRetentionDailyGetArgs>? RetentionDaily { get; set; }

        /// <summary>
        /// Configures the policy monthly retention as documented in the `retention_monthly` block below.
        /// </summary>
        [Input("retentionMonthly")]
        public Input<Inputs.PolicyVMRetentionMonthlyGetArgs>? RetentionMonthly { get; set; }

        /// <summary>
        /// Configures the policy weekly retention as documented in the `retention_weekly` block below. Required when backup frequency is `Weekly`.
        /// </summary>
        [Input("retentionWeekly")]
        public Input<Inputs.PolicyVMRetentionWeeklyGetArgs>? RetentionWeekly { get; set; }

        /// <summary>
        /// Configures the policy yearly retention as documented in the `retention_yearly` block below.
        /// </summary>
        [Input("retentionYearly")]
        public Input<Inputs.PolicyVMRetentionYearlyGetArgs>? RetentionYearly { get; set; }

        /// <summary>
        /// Specifies the timezone. [the possible values are defined here](https://jackstromberg.com/2017/01/list-of-time-zones-consumed-by-azure/). Defaults to `UTC`
        /// </summary>
        [Input("timezone")]
        public Input<string>? Timezone { get; set; }

        public PolicyVMState()
        {
        }
        public static new PolicyVMState Empty => new PolicyVMState();
    }
}
