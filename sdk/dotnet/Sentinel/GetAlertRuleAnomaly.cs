// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Sentinel
{
    public static class GetAlertRuleAnomaly
    {
        /// <summary>
        /// Use this data source to access information about an existing Anomaly Alert Rule.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Azure = Pulumi.Azure;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleResourceGroup = new Azure.Core.ResourceGroup("exampleResourceGroup", new()
        ///     {
        ///         Location = "West Europe",
        ///     });
        /// 
        ///     var exampleAnalyticsWorkspace = new Azure.OperationalInsights.AnalyticsWorkspace("exampleAnalyticsWorkspace", new()
        ///     {
        ///         Location = exampleResourceGroup.Location,
        ///         ResourceGroupName = exampleResourceGroup.Name,
        ///         Sku = "PerGB2018",
        ///     });
        /// 
        ///     var exampleLogAnalyticsWorkspaceOnboarding = new Azure.Sentinel.LogAnalyticsWorkspaceOnboarding("exampleLogAnalyticsWorkspaceOnboarding", new()
        ///     {
        ///         WorkspaceId = exampleAnalyticsWorkspace.Id,
        ///         CustomerManagedKeyEnabled = false,
        ///     });
        /// 
        ///     var exampleAlertRuleAnomaly = Azure.Sentinel.GetAlertRuleAnomaly.Invoke(new()
        ///     {
        ///         LogAnalyticsWorkspaceId = exampleLogAnalyticsWorkspaceOnboarding.WorkspaceId,
        ///         DisplayName = "Potential data staging",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["id"] = exampleAlertRuleAnomaly.Apply(getAlertRuleAnomalyResult =&gt; getAlertRuleAnomalyResult.Id),
        ///     };
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetAlertRuleAnomalyResult> InvokeAsync(GetAlertRuleAnomalyArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetAlertRuleAnomalyResult>("azure:sentinel/getAlertRuleAnomaly:getAlertRuleAnomaly", args ?? new GetAlertRuleAnomalyArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to access information about an existing Anomaly Alert Rule.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Azure = Pulumi.Azure;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleResourceGroup = new Azure.Core.ResourceGroup("exampleResourceGroup", new()
        ///     {
        ///         Location = "West Europe",
        ///     });
        /// 
        ///     var exampleAnalyticsWorkspace = new Azure.OperationalInsights.AnalyticsWorkspace("exampleAnalyticsWorkspace", new()
        ///     {
        ///         Location = exampleResourceGroup.Location,
        ///         ResourceGroupName = exampleResourceGroup.Name,
        ///         Sku = "PerGB2018",
        ///     });
        /// 
        ///     var exampleLogAnalyticsWorkspaceOnboarding = new Azure.Sentinel.LogAnalyticsWorkspaceOnboarding("exampleLogAnalyticsWorkspaceOnboarding", new()
        ///     {
        ///         WorkspaceId = exampleAnalyticsWorkspace.Id,
        ///         CustomerManagedKeyEnabled = false,
        ///     });
        /// 
        ///     var exampleAlertRuleAnomaly = Azure.Sentinel.GetAlertRuleAnomaly.Invoke(new()
        ///     {
        ///         LogAnalyticsWorkspaceId = exampleLogAnalyticsWorkspaceOnboarding.WorkspaceId,
        ///         DisplayName = "Potential data staging",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["id"] = exampleAlertRuleAnomaly.Apply(getAlertRuleAnomalyResult =&gt; getAlertRuleAnomalyResult.Id),
        ///     };
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetAlertRuleAnomalyResult> Invoke(GetAlertRuleAnomalyInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetAlertRuleAnomalyResult>("azure:sentinel/getAlertRuleAnomaly:getAlertRuleAnomaly", args ?? new GetAlertRuleAnomalyInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetAlertRuleAnomalyArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The display name of this Sentinel Alert Rule Template. Either `display_name` or `name` have to be specified.
        /// 
        /// &gt; **NOTE** One of `name` or `display_name` must be specified.
        /// </summary>
        [Input("displayName")]
        public string? DisplayName { get; set; }

        /// <summary>
        /// The ID of the Log Analytics Workspace.
        /// </summary>
        [Input("logAnalyticsWorkspaceId", required: true)]
        public string LogAnalyticsWorkspaceId { get; set; } = null!;

        /// <summary>
        /// The guid of this Sentinel Alert Rule Template. Either `display_name` or `name` have to be specified.
        /// </summary>
        [Input("name")]
        public string? Name { get; set; }

        public GetAlertRuleAnomalyArgs()
        {
        }
        public static new GetAlertRuleAnomalyArgs Empty => new GetAlertRuleAnomalyArgs();
    }

    public sealed class GetAlertRuleAnomalyInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The display name of this Sentinel Alert Rule Template. Either `display_name` or `name` have to be specified.
        /// 
        /// &gt; **NOTE** One of `name` or `display_name` must be specified.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        /// <summary>
        /// The ID of the Log Analytics Workspace.
        /// </summary>
        [Input("logAnalyticsWorkspaceId", required: true)]
        public Input<string> LogAnalyticsWorkspaceId { get; set; } = null!;

        /// <summary>
        /// The guid of this Sentinel Alert Rule Template. Either `display_name` or `name` have to be specified.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        public GetAlertRuleAnomalyInvokeArgs()
        {
        }
        public static new GetAlertRuleAnomalyInvokeArgs Empty => new GetAlertRuleAnomalyInvokeArgs();
    }


    [OutputType]
    public sealed class GetAlertRuleAnomalyResult
    {
        /// <summary>
        /// The version of the Anomaly Security ML Analytics Settings.
        /// </summary>
        public readonly int AnomalySettingsVersion;
        /// <summary>
        /// The anomaly version of the Anomaly Alert Rule.
        /// </summary>
        public readonly string AnomalyVersion;
        /// <summary>
        /// The description of the threshold observation.
        /// </summary>
        public readonly string Description;
        public readonly string DisplayName;
        /// <summary>
        /// Is the Anomaly Alert Rule enabled?
        /// </summary>
        public readonly bool Enabled;
        /// <summary>
        /// The frequency the Anomaly Alert Rule will be run.
        /// </summary>
        public readonly string Frequency;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string LogAnalyticsWorkspaceId;
        public readonly string Mode;
        /// <summary>
        /// A list of `multi_select_observation` blocks as defined below.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetAlertRuleAnomalyMultiSelectObservationResult> MultiSelectObservations;
        /// <summary>
        /// The name of the threshold observation.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// A list of `prioritized_exclude_observation` blocks as defined below.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetAlertRuleAnomalyPrioritizedExcludeObservationResult> PrioritizedExcludeObservations;
        /// <summary>
        /// A `required_data_connector` block as defined below.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetAlertRuleAnomalyRequiredDataConnectorResult> RequiredDataConnectors;
        /// <summary>
        /// The ID of the anomaly settings definition Id.
        /// </summary>
        public readonly string SettingsDefinitionId;
        /// <summary>
        /// A list of `single_select_observation` blocks as defined below.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetAlertRuleAnomalySingleSelectObservationResult> SingleSelectObservations;
        /// <summary>
        /// A list of categories of attacks by which to classify the rule.
        /// </summary>
        public readonly ImmutableArray<string> Tactics;
        /// <summary>
        /// A list of techniques of attacks by which to classify the rule.
        /// </summary>
        public readonly ImmutableArray<string> Techniques;
        /// <summary>
        /// A list of `threshold_observation` blocks as defined below.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetAlertRuleAnomalyThresholdObservationResult> ThresholdObservations;

        [OutputConstructor]
        private GetAlertRuleAnomalyResult(
            int anomalySettingsVersion,

            string anomalyVersion,

            string description,

            string displayName,

            bool enabled,

            string frequency,

            string id,

            string logAnalyticsWorkspaceId,

            string mode,

            ImmutableArray<Outputs.GetAlertRuleAnomalyMultiSelectObservationResult> multiSelectObservations,

            string name,

            ImmutableArray<Outputs.GetAlertRuleAnomalyPrioritizedExcludeObservationResult> prioritizedExcludeObservations,

            ImmutableArray<Outputs.GetAlertRuleAnomalyRequiredDataConnectorResult> requiredDataConnectors,

            string settingsDefinitionId,

            ImmutableArray<Outputs.GetAlertRuleAnomalySingleSelectObservationResult> singleSelectObservations,

            ImmutableArray<string> tactics,

            ImmutableArray<string> techniques,

            ImmutableArray<Outputs.GetAlertRuleAnomalyThresholdObservationResult> thresholdObservations)
        {
            AnomalySettingsVersion = anomalySettingsVersion;
            AnomalyVersion = anomalyVersion;
            Description = description;
            DisplayName = displayName;
            Enabled = enabled;
            Frequency = frequency;
            Id = id;
            LogAnalyticsWorkspaceId = logAnalyticsWorkspaceId;
            Mode = mode;
            MultiSelectObservations = multiSelectObservations;
            Name = name;
            PrioritizedExcludeObservations = prioritizedExcludeObservations;
            RequiredDataConnectors = requiredDataConnectors;
            SettingsDefinitionId = settingsDefinitionId;
            SingleSelectObservations = singleSelectObservations;
            Tactics = tactics;
            Techniques = techniques;
            ThresholdObservations = thresholdObservations;
        }
    }
}
