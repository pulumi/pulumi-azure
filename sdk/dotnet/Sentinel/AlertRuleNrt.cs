// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Sentinel
{
    /// <summary>
    /// Manages a Sentinel NRT Alert Rule.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Azure = Pulumi.Azure;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var exampleResourceGroup = new Azure.Core.ResourceGroup("exampleResourceGroup", new()
    ///     {
    ///         Location = "West Europe",
    ///     });
    /// 
    ///     var exampleAnalyticsWorkspace = new Azure.OperationalInsights.AnalyticsWorkspace("exampleAnalyticsWorkspace", new()
    ///     {
    ///         Location = exampleResourceGroup.Location,
    ///         ResourceGroupName = exampleResourceGroup.Name,
    ///         Sku = "pergb2018",
    ///     });
    /// 
    ///     var exampleLogAnalyticsWorkspaceOnboarding = new Azure.Sentinel.LogAnalyticsWorkspaceOnboarding("exampleLogAnalyticsWorkspaceOnboarding", new()
    ///     {
    ///         WorkspaceId = exampleAnalyticsWorkspace.Id,
    ///     });
    /// 
    ///     var exampleAlertRuleNrt = new Azure.Sentinel.AlertRuleNrt("exampleAlertRuleNrt", new()
    ///     {
    ///         LogAnalyticsWorkspaceId = exampleLogAnalyticsWorkspaceOnboarding.WorkspaceId,
    ///         DisplayName = "example",
    ///         Severity = "High",
    ///         Query = @"AzureActivity |
    ///   where OperationName == ""Create or Update Virtual Machine"" or OperationName ==""Create Deployment"" |
    ///   where ActivityStatus == ""Succeeded"" |
    ///   make-series dcount(ResourceId) default=0 on EventSubmissionTimestamp in range(ago(7d), now(), 1d) by Caller
    /// ",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Sentinel NRT Alert Rules can be imported using the `resource id`, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import azure:sentinel/alertRuleNrt:AlertRuleNrt example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.OperationalInsights/workspaces/workspace1/providers/Microsoft.SecurityInsights/alertRules/rule1
    /// ```
    /// </summary>
    [AzureResourceType("azure:sentinel/alertRuleNrt:AlertRuleNrt")]
    public partial class AlertRuleNrt : global::Pulumi.CustomResource
    {
        /// <summary>
        /// An `alert_details_override` block as defined below.
        /// </summary>
        [Output("alertDetailsOverrides")]
        public Output<ImmutableArray<Outputs.AlertRuleNrtAlertDetailsOverride>> AlertDetailsOverrides { get; private set; } = null!;

        /// <summary>
        /// The GUID of the alert rule template which is used for this Sentinel NRT Alert Rule. Changing this forces a new Sentinel NRT Alert Rule to be created.
        /// </summary>
        [Output("alertRuleTemplateGuid")]
        public Output<string?> AlertRuleTemplateGuid { get; private set; } = null!;

        /// <summary>
        /// The version of the alert rule template which is used for this Sentinel NRT Alert Rule. Changing this forces a new Sentinel NRT Alert Rule to be created.
        /// </summary>
        [Output("alertRuleTemplateVersion")]
        public Output<string?> AlertRuleTemplateVersion { get; private set; } = null!;

        /// <summary>
        /// A map of string key-value pairs of columns to be attached to this Sentinel NRT Alert Rule. The key will appear as the field name in alerts and the value is the event parameter you wish to surface in the alerts.
        /// </summary>
        [Output("customDetails")]
        public Output<ImmutableDictionary<string, string>?> CustomDetails { get; private set; } = null!;

        /// <summary>
        /// The description of this Sentinel NRT Alert Rule.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// The friendly name of this Sentinel NRT Alert Rule.
        /// </summary>
        [Output("displayName")]
        public Output<string> DisplayName { get; private set; } = null!;

        /// <summary>
        /// Should the Sentinel NRT Alert Rule be enabled? Defaults to `true`.
        /// </summary>
        [Output("enabled")]
        public Output<bool?> Enabled { get; private set; } = null!;

        /// <summary>
        /// A list of `entity_mapping` blocks as defined below.
        /// </summary>
        [Output("entityMappings")]
        public Output<ImmutableArray<Outputs.AlertRuleNrtEntityMapping>> EntityMappings { get; private set; } = null!;

        /// <summary>
        /// A `event_grouping` block as defined below.
        /// 
        /// &gt; **NOTE:** `event_grouping` will be required in the next major version of the AzureRM Provider.
        /// </summary>
        [Output("eventGrouping")]
        public Output<Outputs.AlertRuleNrtEventGrouping> EventGrouping { get; private set; } = null!;

        /// <summary>
        /// A `incident` block as defined below.
        /// </summary>
        [Output("incident")]
        public Output<Outputs.AlertRuleNrtIncident> Incident { get; private set; } = null!;

        /// <summary>
        /// The ID of the Log Analytics Workspace this Sentinel NRT Alert Rule belongs to. Changing this forces a new Sentinel NRT Alert Rule to be created.
        /// </summary>
        [Output("logAnalyticsWorkspaceId")]
        public Output<string> LogAnalyticsWorkspaceId { get; private set; } = null!;

        /// <summary>
        /// The name which should be used for this Sentinel NRT Alert Rule. Changing this forces a new Sentinel NRT Alert Rule to be created.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The query of this Sentinel NRT Alert Rule.
        /// </summary>
        [Output("query")]
        public Output<string> Query { get; private set; } = null!;

        /// <summary>
        /// A list of `sentinel_entity_mapping` blocks as defined below.
        /// 
        /// &gt; **NOTE:** `entity_mapping` and `sentinel_entity_mapping` together can't exceed 5.
        /// </summary>
        [Output("sentinelEntityMappings")]
        public Output<ImmutableArray<Outputs.AlertRuleNrtSentinelEntityMapping>> SentinelEntityMappings { get; private set; } = null!;

        /// <summary>
        /// The alert severity of this Sentinel NRT Alert Rule. Possible values are `High`, `Medium`, `Low` and `Informational`.
        /// </summary>
        [Output("severity")]
        public Output<string> Severity { get; private set; } = null!;

        /// <summary>
        /// If `suppression_enabled` is `true`, this is ISO 8601 timespan duration, which specifies the amount of time the query should stop running after alert is generated. Defaults to `PT5H`.
        /// </summary>
        [Output("suppressionDuration")]
        public Output<string?> SuppressionDuration { get; private set; } = null!;

        /// <summary>
        /// Should the Sentinel NRT Alert Rulea stop running query after alert is generated? Defaults to `false`.
        /// </summary>
        [Output("suppressionEnabled")]
        public Output<bool?> SuppressionEnabled { get; private set; } = null!;

        /// <summary>
        /// A list of categories of attacks by which to classify the rule. Possible values are `Collection`, `CommandAndControl`, `CredentialAccess`, `DefenseEvasion`, `Discovery`, `Execution`, `Exfiltration`, `Impact`, `ImpairProcessControl`, `InhibitResponseFunction`, `InitialAccess`, `LateralMovement`, `Persistence`, `PreAttack`, `PrivilegeEscalation`, `Reconnaissance` and `ResourceDevelopment`.
        /// </summary>
        [Output("tactics")]
        public Output<ImmutableArray<string>> Tactics { get; private set; } = null!;

        /// <summary>
        /// A list of techniques of attacks by which to classify the rule.
        /// </summary>
        [Output("techniques")]
        public Output<ImmutableArray<string>> Techniques { get; private set; } = null!;


        /// <summary>
        /// Create a AlertRuleNrt resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public AlertRuleNrt(string name, AlertRuleNrtArgs args, CustomResourceOptions? options = null)
            : base("azure:sentinel/alertRuleNrt:AlertRuleNrt", name, args ?? new AlertRuleNrtArgs(), MakeResourceOptions(options, ""))
        {
        }

        private AlertRuleNrt(string name, Input<string> id, AlertRuleNrtState? state = null, CustomResourceOptions? options = null)
            : base("azure:sentinel/alertRuleNrt:AlertRuleNrt", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing AlertRuleNrt resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static AlertRuleNrt Get(string name, Input<string> id, AlertRuleNrtState? state = null, CustomResourceOptions? options = null)
        {
            return new AlertRuleNrt(name, id, state, options);
        }
    }

    public sealed class AlertRuleNrtArgs : global::Pulumi.ResourceArgs
    {
        [Input("alertDetailsOverrides")]
        private InputList<Inputs.AlertRuleNrtAlertDetailsOverrideArgs>? _alertDetailsOverrides;

        /// <summary>
        /// An `alert_details_override` block as defined below.
        /// </summary>
        public InputList<Inputs.AlertRuleNrtAlertDetailsOverrideArgs> AlertDetailsOverrides
        {
            get => _alertDetailsOverrides ?? (_alertDetailsOverrides = new InputList<Inputs.AlertRuleNrtAlertDetailsOverrideArgs>());
            set => _alertDetailsOverrides = value;
        }

        /// <summary>
        /// The GUID of the alert rule template which is used for this Sentinel NRT Alert Rule. Changing this forces a new Sentinel NRT Alert Rule to be created.
        /// </summary>
        [Input("alertRuleTemplateGuid")]
        public Input<string>? AlertRuleTemplateGuid { get; set; }

        /// <summary>
        /// The version of the alert rule template which is used for this Sentinel NRT Alert Rule. Changing this forces a new Sentinel NRT Alert Rule to be created.
        /// </summary>
        [Input("alertRuleTemplateVersion")]
        public Input<string>? AlertRuleTemplateVersion { get; set; }

        [Input("customDetails")]
        private InputMap<string>? _customDetails;

        /// <summary>
        /// A map of string key-value pairs of columns to be attached to this Sentinel NRT Alert Rule. The key will appear as the field name in alerts and the value is the event parameter you wish to surface in the alerts.
        /// </summary>
        public InputMap<string> CustomDetails
        {
            get => _customDetails ?? (_customDetails = new InputMap<string>());
            set => _customDetails = value;
        }

        /// <summary>
        /// The description of this Sentinel NRT Alert Rule.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The friendly name of this Sentinel NRT Alert Rule.
        /// </summary>
        [Input("displayName", required: true)]
        public Input<string> DisplayName { get; set; } = null!;

        /// <summary>
        /// Should the Sentinel NRT Alert Rule be enabled? Defaults to `true`.
        /// </summary>
        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        [Input("entityMappings")]
        private InputList<Inputs.AlertRuleNrtEntityMappingArgs>? _entityMappings;

        /// <summary>
        /// A list of `entity_mapping` blocks as defined below.
        /// </summary>
        public InputList<Inputs.AlertRuleNrtEntityMappingArgs> EntityMappings
        {
            get => _entityMappings ?? (_entityMappings = new InputList<Inputs.AlertRuleNrtEntityMappingArgs>());
            set => _entityMappings = value;
        }

        /// <summary>
        /// A `event_grouping` block as defined below.
        /// 
        /// &gt; **NOTE:** `event_grouping` will be required in the next major version of the AzureRM Provider.
        /// </summary>
        [Input("eventGrouping")]
        public Input<Inputs.AlertRuleNrtEventGroupingArgs>? EventGrouping { get; set; }

        /// <summary>
        /// A `incident` block as defined below.
        /// </summary>
        [Input("incident")]
        public Input<Inputs.AlertRuleNrtIncidentArgs>? Incident { get; set; }

        /// <summary>
        /// The ID of the Log Analytics Workspace this Sentinel NRT Alert Rule belongs to. Changing this forces a new Sentinel NRT Alert Rule to be created.
        /// </summary>
        [Input("logAnalyticsWorkspaceId", required: true)]
        public Input<string> LogAnalyticsWorkspaceId { get; set; } = null!;

        /// <summary>
        /// The name which should be used for this Sentinel NRT Alert Rule. Changing this forces a new Sentinel NRT Alert Rule to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The query of this Sentinel NRT Alert Rule.
        /// </summary>
        [Input("query", required: true)]
        public Input<string> Query { get; set; } = null!;

        [Input("sentinelEntityMappings")]
        private InputList<Inputs.AlertRuleNrtSentinelEntityMappingArgs>? _sentinelEntityMappings;

        /// <summary>
        /// A list of `sentinel_entity_mapping` blocks as defined below.
        /// 
        /// &gt; **NOTE:** `entity_mapping` and `sentinel_entity_mapping` together can't exceed 5.
        /// </summary>
        public InputList<Inputs.AlertRuleNrtSentinelEntityMappingArgs> SentinelEntityMappings
        {
            get => _sentinelEntityMappings ?? (_sentinelEntityMappings = new InputList<Inputs.AlertRuleNrtSentinelEntityMappingArgs>());
            set => _sentinelEntityMappings = value;
        }

        /// <summary>
        /// The alert severity of this Sentinel NRT Alert Rule. Possible values are `High`, `Medium`, `Low` and `Informational`.
        /// </summary>
        [Input("severity", required: true)]
        public Input<string> Severity { get; set; } = null!;

        /// <summary>
        /// If `suppression_enabled` is `true`, this is ISO 8601 timespan duration, which specifies the amount of time the query should stop running after alert is generated. Defaults to `PT5H`.
        /// </summary>
        [Input("suppressionDuration")]
        public Input<string>? SuppressionDuration { get; set; }

        /// <summary>
        /// Should the Sentinel NRT Alert Rulea stop running query after alert is generated? Defaults to `false`.
        /// </summary>
        [Input("suppressionEnabled")]
        public Input<bool>? SuppressionEnabled { get; set; }

        [Input("tactics")]
        private InputList<string>? _tactics;

        /// <summary>
        /// A list of categories of attacks by which to classify the rule. Possible values are `Collection`, `CommandAndControl`, `CredentialAccess`, `DefenseEvasion`, `Discovery`, `Execution`, `Exfiltration`, `Impact`, `ImpairProcessControl`, `InhibitResponseFunction`, `InitialAccess`, `LateralMovement`, `Persistence`, `PreAttack`, `PrivilegeEscalation`, `Reconnaissance` and `ResourceDevelopment`.
        /// </summary>
        public InputList<string> Tactics
        {
            get => _tactics ?? (_tactics = new InputList<string>());
            set => _tactics = value;
        }

        [Input("techniques")]
        private InputList<string>? _techniques;

        /// <summary>
        /// A list of techniques of attacks by which to classify the rule.
        /// </summary>
        public InputList<string> Techniques
        {
            get => _techniques ?? (_techniques = new InputList<string>());
            set => _techniques = value;
        }

        public AlertRuleNrtArgs()
        {
        }
        public static new AlertRuleNrtArgs Empty => new AlertRuleNrtArgs();
    }

    public sealed class AlertRuleNrtState : global::Pulumi.ResourceArgs
    {
        [Input("alertDetailsOverrides")]
        private InputList<Inputs.AlertRuleNrtAlertDetailsOverrideGetArgs>? _alertDetailsOverrides;

        /// <summary>
        /// An `alert_details_override` block as defined below.
        /// </summary>
        public InputList<Inputs.AlertRuleNrtAlertDetailsOverrideGetArgs> AlertDetailsOverrides
        {
            get => _alertDetailsOverrides ?? (_alertDetailsOverrides = new InputList<Inputs.AlertRuleNrtAlertDetailsOverrideGetArgs>());
            set => _alertDetailsOverrides = value;
        }

        /// <summary>
        /// The GUID of the alert rule template which is used for this Sentinel NRT Alert Rule. Changing this forces a new Sentinel NRT Alert Rule to be created.
        /// </summary>
        [Input("alertRuleTemplateGuid")]
        public Input<string>? AlertRuleTemplateGuid { get; set; }

        /// <summary>
        /// The version of the alert rule template which is used for this Sentinel NRT Alert Rule. Changing this forces a new Sentinel NRT Alert Rule to be created.
        /// </summary>
        [Input("alertRuleTemplateVersion")]
        public Input<string>? AlertRuleTemplateVersion { get; set; }

        [Input("customDetails")]
        private InputMap<string>? _customDetails;

        /// <summary>
        /// A map of string key-value pairs of columns to be attached to this Sentinel NRT Alert Rule. The key will appear as the field name in alerts and the value is the event parameter you wish to surface in the alerts.
        /// </summary>
        public InputMap<string> CustomDetails
        {
            get => _customDetails ?? (_customDetails = new InputMap<string>());
            set => _customDetails = value;
        }

        /// <summary>
        /// The description of this Sentinel NRT Alert Rule.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The friendly name of this Sentinel NRT Alert Rule.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        /// <summary>
        /// Should the Sentinel NRT Alert Rule be enabled? Defaults to `true`.
        /// </summary>
        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        [Input("entityMappings")]
        private InputList<Inputs.AlertRuleNrtEntityMappingGetArgs>? _entityMappings;

        /// <summary>
        /// A list of `entity_mapping` blocks as defined below.
        /// </summary>
        public InputList<Inputs.AlertRuleNrtEntityMappingGetArgs> EntityMappings
        {
            get => _entityMappings ?? (_entityMappings = new InputList<Inputs.AlertRuleNrtEntityMappingGetArgs>());
            set => _entityMappings = value;
        }

        /// <summary>
        /// A `event_grouping` block as defined below.
        /// 
        /// &gt; **NOTE:** `event_grouping` will be required in the next major version of the AzureRM Provider.
        /// </summary>
        [Input("eventGrouping")]
        public Input<Inputs.AlertRuleNrtEventGroupingGetArgs>? EventGrouping { get; set; }

        /// <summary>
        /// A `incident` block as defined below.
        /// </summary>
        [Input("incident")]
        public Input<Inputs.AlertRuleNrtIncidentGetArgs>? Incident { get; set; }

        /// <summary>
        /// The ID of the Log Analytics Workspace this Sentinel NRT Alert Rule belongs to. Changing this forces a new Sentinel NRT Alert Rule to be created.
        /// </summary>
        [Input("logAnalyticsWorkspaceId")]
        public Input<string>? LogAnalyticsWorkspaceId { get; set; }

        /// <summary>
        /// The name which should be used for this Sentinel NRT Alert Rule. Changing this forces a new Sentinel NRT Alert Rule to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The query of this Sentinel NRT Alert Rule.
        /// </summary>
        [Input("query")]
        public Input<string>? Query { get; set; }

        [Input("sentinelEntityMappings")]
        private InputList<Inputs.AlertRuleNrtSentinelEntityMappingGetArgs>? _sentinelEntityMappings;

        /// <summary>
        /// A list of `sentinel_entity_mapping` blocks as defined below.
        /// 
        /// &gt; **NOTE:** `entity_mapping` and `sentinel_entity_mapping` together can't exceed 5.
        /// </summary>
        public InputList<Inputs.AlertRuleNrtSentinelEntityMappingGetArgs> SentinelEntityMappings
        {
            get => _sentinelEntityMappings ?? (_sentinelEntityMappings = new InputList<Inputs.AlertRuleNrtSentinelEntityMappingGetArgs>());
            set => _sentinelEntityMappings = value;
        }

        /// <summary>
        /// The alert severity of this Sentinel NRT Alert Rule. Possible values are `High`, `Medium`, `Low` and `Informational`.
        /// </summary>
        [Input("severity")]
        public Input<string>? Severity { get; set; }

        /// <summary>
        /// If `suppression_enabled` is `true`, this is ISO 8601 timespan duration, which specifies the amount of time the query should stop running after alert is generated. Defaults to `PT5H`.
        /// </summary>
        [Input("suppressionDuration")]
        public Input<string>? SuppressionDuration { get; set; }

        /// <summary>
        /// Should the Sentinel NRT Alert Rulea stop running query after alert is generated? Defaults to `false`.
        /// </summary>
        [Input("suppressionEnabled")]
        public Input<bool>? SuppressionEnabled { get; set; }

        [Input("tactics")]
        private InputList<string>? _tactics;

        /// <summary>
        /// A list of categories of attacks by which to classify the rule. Possible values are `Collection`, `CommandAndControl`, `CredentialAccess`, `DefenseEvasion`, `Discovery`, `Execution`, `Exfiltration`, `Impact`, `ImpairProcessControl`, `InhibitResponseFunction`, `InitialAccess`, `LateralMovement`, `Persistence`, `PreAttack`, `PrivilegeEscalation`, `Reconnaissance` and `ResourceDevelopment`.
        /// </summary>
        public InputList<string> Tactics
        {
            get => _tactics ?? (_tactics = new InputList<string>());
            set => _tactics = value;
        }

        [Input("techniques")]
        private InputList<string>? _techniques;

        /// <summary>
        /// A list of techniques of attacks by which to classify the rule.
        /// </summary>
        public InputList<string> Techniques
        {
            get => _techniques ?? (_techniques = new InputList<string>());
            set => _techniques = value;
        }

        public AlertRuleNrtState()
        {
        }
        public static new AlertRuleNrtState Empty => new AlertRuleNrtState();
    }
}
