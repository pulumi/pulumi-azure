// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Sentinel
{
    /// <summary>
    /// Manages a Sentinel Threat Intelligence Indicator.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Azure = Pulumi.Azure;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var exampleResourceGroup = new Azure.Core.ResourceGroup("exampleResourceGroup", new()
    ///     {
    ///         Location = "east us",
    ///     });
    /// 
    ///     var exampleAnalyticsWorkspace = new Azure.OperationalInsights.AnalyticsWorkspace("exampleAnalyticsWorkspace", new()
    ///     {
    ///         Location = exampleResourceGroup.Location,
    ///         ResourceGroupName = exampleResourceGroup.Name,
    ///         Sku = "PerGB2018",
    ///         RetentionInDays = 30,
    ///     });
    /// 
    ///     var exampleLogAnalyticsWorkspaceOnboarding = new Azure.Sentinel.LogAnalyticsWorkspaceOnboarding("exampleLogAnalyticsWorkspaceOnboarding", new()
    ///     {
    ///         ResourceGroupName = exampleResourceGroup.Name,
    ///         WorkspaceName = exampleAnalyticsWorkspace.Name,
    ///     });
    /// 
    ///     var exampleThreatIntelligenceIndicator = new Azure.Sentinel.ThreatIntelligenceIndicator("exampleThreatIntelligenceIndicator", new()
    ///     {
    ///         WorkspaceId = exampleAnalyticsWorkspace.Id,
    ///         PatternType = "domain-name",
    ///         Pattern = "http://example.com",
    ///         Source = "Microsoft Sentinel",
    ///         ValidateFromUtc = "2022-12-14T16:00:00Z",
    ///         DisplayName = "example-indicator",
    ///     }, new CustomResourceOptions
    ///     {
    ///         DependsOn = new[]
    ///         {
    ///             azurerm_sentinel_log_analytics_workspace_onboarding.Test,
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Sentinel Threat Intelligence Indicators can be imported using the `resource id`, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import azure:sentinel/threatIntelligenceIndicator:ThreatIntelligenceIndicator example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resourcegroup1/providers/Microsoft.OperationalInsights/workspaces/workspace1/providers/Microsoft.SecurityInsights/threatIntelligence/main/indicators/indicator1
    /// ```
    /// </summary>
    [AzureResourceType("azure:sentinel/threatIntelligenceIndicator:ThreatIntelligenceIndicator")]
    public partial class ThreatIntelligenceIndicator : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Confidence levels of the Threat Intelligence Indicator.
        /// </summary>
        [Output("confidence")]
        public Output<int?> Confidence { get; private set; } = null!;

        /// <summary>
        /// The creator of the Threat Intelligence Indicator.
        /// </summary>
        [Output("createdBy")]
        public Output<string?> CreatedBy { get; private set; } = null!;

        /// <summary>
        /// The date of this Threat Intelligence Indicator created.
        /// </summary>
        [Output("createdOn")]
        public Output<string> CreatedOn { get; private set; } = null!;

        /// <summary>
        /// Whether the Threat Intelligence entity is defanged?
        /// </summary>
        [Output("defanged")]
        public Output<bool> Defanged { get; private set; } = null!;

        /// <summary>
        /// The description of the Threat Intelligence Indicator.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// The display name of the Threat Intelligence Indicator.
        /// </summary>
        [Output("displayName")]
        public Output<string> DisplayName { get; private set; } = null!;

        /// <summary>
        /// The extension config of the Threat Intelligence Indicator in JSON format.
        /// </summary>
        [Output("extension")]
        public Output<string> Extension { get; private set; } = null!;

        /// <summary>
        /// The external ID of the Threat Intelligence Indicator.
        /// </summary>
        [Output("externalId")]
        public Output<string> ExternalId { get; private set; } = null!;

        /// <summary>
        /// the External last updated time in UTC.
        /// </summary>
        [Output("externalLastUpdatedTimeUtc")]
        public Output<string> ExternalLastUpdatedTimeUtc { get; private set; } = null!;

        /// <summary>
        /// One or more `external_reference` blocks as defined below.
        /// </summary>
        [Output("externalReferences")]
        public Output<ImmutableArray<Outputs.ThreatIntelligenceIndicatorExternalReference>> ExternalReferences { get; private set; } = null!;

        /// <summary>
        /// One or more `granular_marking` blocks as defined below.
        /// </summary>
        [Output("granularMarkings")]
        public Output<ImmutableArray<Outputs.ThreatIntelligenceIndicatorGranularMarking>> GranularMarkings { get; private set; } = null!;

        /// <summary>
        /// The guid of this Sentinel Threat Intelligence Indicator.
        /// </summary>
        [Output("guid")]
        public Output<string> Guid { get; private set; } = null!;

        /// <summary>
        /// A list of indicator types of this Threat Intelligence Indicator.
        /// </summary>
        [Output("indicatorTypes")]
        public Output<ImmutableArray<string>> IndicatorTypes { get; private set; } = null!;

        /// <summary>
        /// One or more `kill_chain_phase` blocks as defined below.
        /// </summary>
        [Output("killChainPhases")]
        public Output<ImmutableArray<Outputs.ThreatIntelligenceIndicatorKillChainPhase>> KillChainPhases { get; private set; } = null!;

        /// <summary>
        /// The language of the Threat Intelligence Indicator.
        /// </summary>
        [Output("language")]
        public Output<string?> Language { get; private set; } = null!;

        /// <summary>
        /// The last updated time of the Threat Intelligence Indicator in UTC.
        /// </summary>
        [Output("lastUpdatedTimeUtc")]
        public Output<string> LastUpdatedTimeUtc { get; private set; } = null!;

        /// <summary>
        /// Specifies a list of Threat Intelligence marking references.
        /// </summary>
        [Output("objectMarkingRefs")]
        public Output<ImmutableArray<string>> ObjectMarkingRefs { get; private set; } = null!;

        /// <summary>
        /// A `parsed_pattern` block as defined below.
        /// </summary>
        [Output("parsedPatterns")]
        public Output<ImmutableArray<Outputs.ThreatIntelligenceIndicatorParsedPattern>> ParsedPatterns { get; private set; } = null!;

        /// <summary>
        /// The pattern used by the Threat Intelligence Indicator. When `pattern_type` set to `file`, `pattern` must be specified with `&lt;HashName&gt;:&lt;Value&gt;` format, such as `MD5:78ecc5c05cd8b79af480df2f8fba0b9d`.
        /// </summary>
        [Output("pattern")]
        public Output<string> Pattern { get; private set; } = null!;

        /// <summary>
        /// The type of pattern used by the Threat Intelligence Indicator. Possible values are `domain-name`, `file`, `ipv4-addr`, `ipv6-addr` and `url`.
        /// </summary>
        [Output("patternType")]
        public Output<string> PatternType { get; private set; } = null!;

        /// <summary>
        /// The version of a Threat Intelligence entity.
        /// </summary>
        [Output("patternVersion")]
        public Output<string?> PatternVersion { get; private set; } = null!;

        /// <summary>
        /// Whether the Threat Intelligence entity revoked.
        /// </summary>
        [Output("revoked")]
        public Output<bool?> Revoked { get; private set; } = null!;

        /// <summary>
        /// Source of the Threat Intelligence Indicator. Changing this forces a new resource to be created.
        /// </summary>
        [Output("source")]
        public Output<string> Source { get; private set; } = null!;

        /// <summary>
        /// Specifies a list of tags of the Threat Intelligence Indicator.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableArray<string>> Tags { get; private set; } = null!;

        /// <summary>
        /// Specifies a list of threat types of this Threat Intelligence Indicator.
        /// </summary>
        [Output("threatTypes")]
        public Output<ImmutableArray<string>> ThreatTypes { get; private set; } = null!;

        /// <summary>
        /// The start of validate date in RFC3339.
        /// </summary>
        [Output("validateFromUtc")]
        public Output<string> ValidateFromUtc { get; private set; } = null!;

        /// <summary>
        /// The end of validate date of the Threat Intelligence Indicator in RFC3339 format.
        /// </summary>
        [Output("validateUntilUtc")]
        public Output<string?> ValidateUntilUtc { get; private set; } = null!;

        /// <summary>
        /// The ID of the Log Analytics Workspace. Changing this forces a new Sentinel Threat Intelligence Indicator to be created.
        /// </summary>
        [Output("workspaceId")]
        public Output<string> WorkspaceId { get; private set; } = null!;


        /// <summary>
        /// Create a ThreatIntelligenceIndicator resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ThreatIntelligenceIndicator(string name, ThreatIntelligenceIndicatorArgs args, CustomResourceOptions? options = null)
            : base("azure:sentinel/threatIntelligenceIndicator:ThreatIntelligenceIndicator", name, args ?? new ThreatIntelligenceIndicatorArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ThreatIntelligenceIndicator(string name, Input<string> id, ThreatIntelligenceIndicatorState? state = null, CustomResourceOptions? options = null)
            : base("azure:sentinel/threatIntelligenceIndicator:ThreatIntelligenceIndicator", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ThreatIntelligenceIndicator resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ThreatIntelligenceIndicator Get(string name, Input<string> id, ThreatIntelligenceIndicatorState? state = null, CustomResourceOptions? options = null)
        {
            return new ThreatIntelligenceIndicator(name, id, state, options);
        }
    }

    public sealed class ThreatIntelligenceIndicatorArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Confidence levels of the Threat Intelligence Indicator.
        /// </summary>
        [Input("confidence")]
        public Input<int>? Confidence { get; set; }

        /// <summary>
        /// The creator of the Threat Intelligence Indicator.
        /// </summary>
        [Input("createdBy")]
        public Input<string>? CreatedBy { get; set; }

        /// <summary>
        /// The description of the Threat Intelligence Indicator.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The display name of the Threat Intelligence Indicator.
        /// </summary>
        [Input("displayName", required: true)]
        public Input<string> DisplayName { get; set; } = null!;

        /// <summary>
        /// The extension config of the Threat Intelligence Indicator in JSON format.
        /// </summary>
        [Input("extension")]
        public Input<string>? Extension { get; set; }

        [Input("externalReferences")]
        private InputList<Inputs.ThreatIntelligenceIndicatorExternalReferenceArgs>? _externalReferences;

        /// <summary>
        /// One or more `external_reference` blocks as defined below.
        /// </summary>
        public InputList<Inputs.ThreatIntelligenceIndicatorExternalReferenceArgs> ExternalReferences
        {
            get => _externalReferences ?? (_externalReferences = new InputList<Inputs.ThreatIntelligenceIndicatorExternalReferenceArgs>());
            set => _externalReferences = value;
        }

        [Input("granularMarkings")]
        private InputList<Inputs.ThreatIntelligenceIndicatorGranularMarkingArgs>? _granularMarkings;

        /// <summary>
        /// One or more `granular_marking` blocks as defined below.
        /// </summary>
        public InputList<Inputs.ThreatIntelligenceIndicatorGranularMarkingArgs> GranularMarkings
        {
            get => _granularMarkings ?? (_granularMarkings = new InputList<Inputs.ThreatIntelligenceIndicatorGranularMarkingArgs>());
            set => _granularMarkings = value;
        }

        [Input("killChainPhases")]
        private InputList<Inputs.ThreatIntelligenceIndicatorKillChainPhaseArgs>? _killChainPhases;

        /// <summary>
        /// One or more `kill_chain_phase` blocks as defined below.
        /// </summary>
        public InputList<Inputs.ThreatIntelligenceIndicatorKillChainPhaseArgs> KillChainPhases
        {
            get => _killChainPhases ?? (_killChainPhases = new InputList<Inputs.ThreatIntelligenceIndicatorKillChainPhaseArgs>());
            set => _killChainPhases = value;
        }

        /// <summary>
        /// The language of the Threat Intelligence Indicator.
        /// </summary>
        [Input("language")]
        public Input<string>? Language { get; set; }

        [Input("objectMarkingRefs")]
        private InputList<string>? _objectMarkingRefs;

        /// <summary>
        /// Specifies a list of Threat Intelligence marking references.
        /// </summary>
        public InputList<string> ObjectMarkingRefs
        {
            get => _objectMarkingRefs ?? (_objectMarkingRefs = new InputList<string>());
            set => _objectMarkingRefs = value;
        }

        /// <summary>
        /// The pattern used by the Threat Intelligence Indicator. When `pattern_type` set to `file`, `pattern` must be specified with `&lt;HashName&gt;:&lt;Value&gt;` format, such as `MD5:78ecc5c05cd8b79af480df2f8fba0b9d`.
        /// </summary>
        [Input("pattern", required: true)]
        public Input<string> Pattern { get; set; } = null!;

        /// <summary>
        /// The type of pattern used by the Threat Intelligence Indicator. Possible values are `domain-name`, `file`, `ipv4-addr`, `ipv6-addr` and `url`.
        /// </summary>
        [Input("patternType", required: true)]
        public Input<string> PatternType { get; set; } = null!;

        /// <summary>
        /// The version of a Threat Intelligence entity.
        /// </summary>
        [Input("patternVersion")]
        public Input<string>? PatternVersion { get; set; }

        /// <summary>
        /// Whether the Threat Intelligence entity revoked.
        /// </summary>
        [Input("revoked")]
        public Input<bool>? Revoked { get; set; }

        /// <summary>
        /// Source of the Threat Intelligence Indicator. Changing this forces a new resource to be created.
        /// </summary>
        [Input("source", required: true)]
        public Input<string> Source { get; set; } = null!;

        [Input("tags")]
        private InputList<string>? _tags;

        /// <summary>
        /// Specifies a list of tags of the Threat Intelligence Indicator.
        /// </summary>
        public InputList<string> Tags
        {
            get => _tags ?? (_tags = new InputList<string>());
            set => _tags = value;
        }

        [Input("threatTypes")]
        private InputList<string>? _threatTypes;

        /// <summary>
        /// Specifies a list of threat types of this Threat Intelligence Indicator.
        /// </summary>
        public InputList<string> ThreatTypes
        {
            get => _threatTypes ?? (_threatTypes = new InputList<string>());
            set => _threatTypes = value;
        }

        /// <summary>
        /// The start of validate date in RFC3339.
        /// </summary>
        [Input("validateFromUtc", required: true)]
        public Input<string> ValidateFromUtc { get; set; } = null!;

        /// <summary>
        /// The end of validate date of the Threat Intelligence Indicator in RFC3339 format.
        /// </summary>
        [Input("validateUntilUtc")]
        public Input<string>? ValidateUntilUtc { get; set; }

        /// <summary>
        /// The ID of the Log Analytics Workspace. Changing this forces a new Sentinel Threat Intelligence Indicator to be created.
        /// </summary>
        [Input("workspaceId", required: true)]
        public Input<string> WorkspaceId { get; set; } = null!;

        public ThreatIntelligenceIndicatorArgs()
        {
        }
        public static new ThreatIntelligenceIndicatorArgs Empty => new ThreatIntelligenceIndicatorArgs();
    }

    public sealed class ThreatIntelligenceIndicatorState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Confidence levels of the Threat Intelligence Indicator.
        /// </summary>
        [Input("confidence")]
        public Input<int>? Confidence { get; set; }

        /// <summary>
        /// The creator of the Threat Intelligence Indicator.
        /// </summary>
        [Input("createdBy")]
        public Input<string>? CreatedBy { get; set; }

        /// <summary>
        /// The date of this Threat Intelligence Indicator created.
        /// </summary>
        [Input("createdOn")]
        public Input<string>? CreatedOn { get; set; }

        /// <summary>
        /// Whether the Threat Intelligence entity is defanged?
        /// </summary>
        [Input("defanged")]
        public Input<bool>? Defanged { get; set; }

        /// <summary>
        /// The description of the Threat Intelligence Indicator.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The display name of the Threat Intelligence Indicator.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        /// <summary>
        /// The extension config of the Threat Intelligence Indicator in JSON format.
        /// </summary>
        [Input("extension")]
        public Input<string>? Extension { get; set; }

        /// <summary>
        /// The external ID of the Threat Intelligence Indicator.
        /// </summary>
        [Input("externalId")]
        public Input<string>? ExternalId { get; set; }

        /// <summary>
        /// the External last updated time in UTC.
        /// </summary>
        [Input("externalLastUpdatedTimeUtc")]
        public Input<string>? ExternalLastUpdatedTimeUtc { get; set; }

        [Input("externalReferences")]
        private InputList<Inputs.ThreatIntelligenceIndicatorExternalReferenceGetArgs>? _externalReferences;

        /// <summary>
        /// One or more `external_reference` blocks as defined below.
        /// </summary>
        public InputList<Inputs.ThreatIntelligenceIndicatorExternalReferenceGetArgs> ExternalReferences
        {
            get => _externalReferences ?? (_externalReferences = new InputList<Inputs.ThreatIntelligenceIndicatorExternalReferenceGetArgs>());
            set => _externalReferences = value;
        }

        [Input("granularMarkings")]
        private InputList<Inputs.ThreatIntelligenceIndicatorGranularMarkingGetArgs>? _granularMarkings;

        /// <summary>
        /// One or more `granular_marking` blocks as defined below.
        /// </summary>
        public InputList<Inputs.ThreatIntelligenceIndicatorGranularMarkingGetArgs> GranularMarkings
        {
            get => _granularMarkings ?? (_granularMarkings = new InputList<Inputs.ThreatIntelligenceIndicatorGranularMarkingGetArgs>());
            set => _granularMarkings = value;
        }

        /// <summary>
        /// The guid of this Sentinel Threat Intelligence Indicator.
        /// </summary>
        [Input("guid")]
        public Input<string>? Guid { get; set; }

        [Input("indicatorTypes")]
        private InputList<string>? _indicatorTypes;

        /// <summary>
        /// A list of indicator types of this Threat Intelligence Indicator.
        /// </summary>
        public InputList<string> IndicatorTypes
        {
            get => _indicatorTypes ?? (_indicatorTypes = new InputList<string>());
            set => _indicatorTypes = value;
        }

        [Input("killChainPhases")]
        private InputList<Inputs.ThreatIntelligenceIndicatorKillChainPhaseGetArgs>? _killChainPhases;

        /// <summary>
        /// One or more `kill_chain_phase` blocks as defined below.
        /// </summary>
        public InputList<Inputs.ThreatIntelligenceIndicatorKillChainPhaseGetArgs> KillChainPhases
        {
            get => _killChainPhases ?? (_killChainPhases = new InputList<Inputs.ThreatIntelligenceIndicatorKillChainPhaseGetArgs>());
            set => _killChainPhases = value;
        }

        /// <summary>
        /// The language of the Threat Intelligence Indicator.
        /// </summary>
        [Input("language")]
        public Input<string>? Language { get; set; }

        /// <summary>
        /// The last updated time of the Threat Intelligence Indicator in UTC.
        /// </summary>
        [Input("lastUpdatedTimeUtc")]
        public Input<string>? LastUpdatedTimeUtc { get; set; }

        [Input("objectMarkingRefs")]
        private InputList<string>? _objectMarkingRefs;

        /// <summary>
        /// Specifies a list of Threat Intelligence marking references.
        /// </summary>
        public InputList<string> ObjectMarkingRefs
        {
            get => _objectMarkingRefs ?? (_objectMarkingRefs = new InputList<string>());
            set => _objectMarkingRefs = value;
        }

        [Input("parsedPatterns")]
        private InputList<Inputs.ThreatIntelligenceIndicatorParsedPatternGetArgs>? _parsedPatterns;

        /// <summary>
        /// A `parsed_pattern` block as defined below.
        /// </summary>
        public InputList<Inputs.ThreatIntelligenceIndicatorParsedPatternGetArgs> ParsedPatterns
        {
            get => _parsedPatterns ?? (_parsedPatterns = new InputList<Inputs.ThreatIntelligenceIndicatorParsedPatternGetArgs>());
            set => _parsedPatterns = value;
        }

        /// <summary>
        /// The pattern used by the Threat Intelligence Indicator. When `pattern_type` set to `file`, `pattern` must be specified with `&lt;HashName&gt;:&lt;Value&gt;` format, such as `MD5:78ecc5c05cd8b79af480df2f8fba0b9d`.
        /// </summary>
        [Input("pattern")]
        public Input<string>? Pattern { get; set; }

        /// <summary>
        /// The type of pattern used by the Threat Intelligence Indicator. Possible values are `domain-name`, `file`, `ipv4-addr`, `ipv6-addr` and `url`.
        /// </summary>
        [Input("patternType")]
        public Input<string>? PatternType { get; set; }

        /// <summary>
        /// The version of a Threat Intelligence entity.
        /// </summary>
        [Input("patternVersion")]
        public Input<string>? PatternVersion { get; set; }

        /// <summary>
        /// Whether the Threat Intelligence entity revoked.
        /// </summary>
        [Input("revoked")]
        public Input<bool>? Revoked { get; set; }

        /// <summary>
        /// Source of the Threat Intelligence Indicator. Changing this forces a new resource to be created.
        /// </summary>
        [Input("source")]
        public Input<string>? Source { get; set; }

        [Input("tags")]
        private InputList<string>? _tags;

        /// <summary>
        /// Specifies a list of tags of the Threat Intelligence Indicator.
        /// </summary>
        public InputList<string> Tags
        {
            get => _tags ?? (_tags = new InputList<string>());
            set => _tags = value;
        }

        [Input("threatTypes")]
        private InputList<string>? _threatTypes;

        /// <summary>
        /// Specifies a list of threat types of this Threat Intelligence Indicator.
        /// </summary>
        public InputList<string> ThreatTypes
        {
            get => _threatTypes ?? (_threatTypes = new InputList<string>());
            set => _threatTypes = value;
        }

        /// <summary>
        /// The start of validate date in RFC3339.
        /// </summary>
        [Input("validateFromUtc")]
        public Input<string>? ValidateFromUtc { get; set; }

        /// <summary>
        /// The end of validate date of the Threat Intelligence Indicator in RFC3339 format.
        /// </summary>
        [Input("validateUntilUtc")]
        public Input<string>? ValidateUntilUtc { get; set; }

        /// <summary>
        /// The ID of the Log Analytics Workspace. Changing this forces a new Sentinel Threat Intelligence Indicator to be created.
        /// </summary>
        [Input("workspaceId")]
        public Input<string>? WorkspaceId { get; set; }

        public ThreatIntelligenceIndicatorState()
        {
        }
        public static new ThreatIntelligenceIndicatorState Empty => new ThreatIntelligenceIndicatorState();
    }
}
