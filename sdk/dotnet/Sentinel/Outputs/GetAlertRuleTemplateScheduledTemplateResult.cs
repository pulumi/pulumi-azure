// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Sentinel.Outputs
{

    [OutputType]
    public sealed class GetAlertRuleTemplateScheduledTemplateResult
    {
        /// <summary>
        /// The description of this Sentinel Scheduled Alert Rule Template.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// The query of this Sentinel Scheduled Alert Rule Template.
        /// </summary>
        public readonly string Query;
        /// <summary>
        /// The ISO 8601 timespan duration between two consecutive queries.
        /// </summary>
        public readonly string QueryFrequency;
        /// <summary>
        /// The ISO 8601 timespan duration, which determine the time period of the data covered by the query.
        /// </summary>
        public readonly string QueryPeriod;
        /// <summary>
        /// The alert severity of this Sentinel Scheduled Alert Rule Template.
        /// </summary>
        public readonly string Severity;
        /// <summary>
        /// A list of categories of attacks by which to classify the rule.
        /// </summary>
        public readonly ImmutableArray<string> Tactics;
        /// <summary>
        /// The alert trigger operator, combined with `trigger_threshold`, setting alert threshold of this Sentinel Scheduled Alert Rule Template.
        /// </summary>
        public readonly string TriggerOperator;
        /// <summary>
        /// The baseline number of query results generated, combined with `trigger_operator`, setting alert threshold of this Sentinel Scheduled Alert Rule Template.
        /// </summary>
        public readonly int TriggerThreshold;

        [OutputConstructor]
        private GetAlertRuleTemplateScheduledTemplateResult(
            string description,

            string query,

            string queryFrequency,

            string queryPeriod,

            string severity,

            ImmutableArray<string> tactics,

            string triggerOperator,

            int triggerThreshold)
        {
            Description = description;
            Query = query;
            QueryFrequency = queryFrequency;
            QueryPeriod = queryPeriod;
            Severity = severity;
            Tactics = tactics;
            TriggerOperator = triggerOperator;
            TriggerThreshold = triggerThreshold;
        }
    }
}
