// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Iot
{
    /// <summary>
    /// Manages an Azure IoT Time Series Insights IoTHub Event Source.
    /// 
    /// ## Import
    /// 
    /// Azure IoT Time Series Insights IoTHub Event Source can be imported using the `resource id`, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import azure:iot/timeSeriesInsightsEventSourceIothub:TimeSeriesInsightsEventSourceIothub example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/example/providers/Microsoft.TimeSeriesInsights/environments/environment1/eventSources/example
    /// ```
    /// </summary>
    [AzureResourceType("azure:iot/timeSeriesInsightsEventSourceIothub:TimeSeriesInsightsEventSourceIothub")]
    public partial class TimeSeriesInsightsEventSourceIothub : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Specifies the name of the IotHub Consumer Group that holds the partitions from which events will be read.
        /// </summary>
        [Output("consumerGroupName")]
        public Output<string> ConsumerGroupName { get; private set; } = null!;

        /// <summary>
        /// Specifies the id of the IoT Time Series Insights Environment that the Event Source should be associated with. Changing this forces a new resource to created.
        /// </summary>
        [Output("environmentId")]
        public Output<string> EnvironmentId { get; private set; } = null!;

        /// <summary>
        /// Specifies the resource id where events will be coming from.
        /// </summary>
        [Output("eventSourceResourceId")]
        public Output<string> EventSourceResourceId { get; private set; } = null!;

        /// <summary>
        /// Specifies the name of the IotHub which will be associated with this resource.
        /// </summary>
        [Output("iothubName")]
        public Output<string> IothubName { get; private set; } = null!;

        /// <summary>
        /// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
        /// </summary>
        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// Specifies the name of the Azure IoT Time Series Insights IoTHub Event Source. Changing this forces a new resource to be created. Must be globally unique.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Specifies the value of the Shared Access Policy key that grants the Time Series Insights service read access to the IotHub.
        /// </summary>
        [Output("sharedAccessKey")]
        public Output<string> SharedAccessKey { get; private set; } = null!;

        /// <summary>
        /// Specifies the name of the Shared Access key that grants the Event Source access to the IotHub.
        /// </summary>
        [Output("sharedAccessKeyName")]
        public Output<string> SharedAccessKeyName { get; private set; } = null!;

        /// <summary>
        /// A mapping of tags to assign to the resource.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// Specifies the value that will be used as the event source's timestamp. This value defaults to the event creation time.
        /// </summary>
        [Output("timestampPropertyName")]
        public Output<string> TimestampPropertyName { get; private set; } = null!;


        /// <summary>
        /// Create a TimeSeriesInsightsEventSourceIothub resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public TimeSeriesInsightsEventSourceIothub(string name, TimeSeriesInsightsEventSourceIothubArgs args, CustomResourceOptions? options = null)
            : base("azure:iot/timeSeriesInsightsEventSourceIothub:TimeSeriesInsightsEventSourceIothub", name, args ?? new TimeSeriesInsightsEventSourceIothubArgs(), MakeResourceOptions(options, ""))
        {
        }

        private TimeSeriesInsightsEventSourceIothub(string name, Input<string> id, TimeSeriesInsightsEventSourceIothubState? state = null, CustomResourceOptions? options = null)
            : base("azure:iot/timeSeriesInsightsEventSourceIothub:TimeSeriesInsightsEventSourceIothub", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                AdditionalSecretOutputs =
                {
                    "sharedAccessKey",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing TimeSeriesInsightsEventSourceIothub resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static TimeSeriesInsightsEventSourceIothub Get(string name, Input<string> id, TimeSeriesInsightsEventSourceIothubState? state = null, CustomResourceOptions? options = null)
        {
            return new TimeSeriesInsightsEventSourceIothub(name, id, state, options);
        }
    }

    public sealed class TimeSeriesInsightsEventSourceIothubArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies the name of the IotHub Consumer Group that holds the partitions from which events will be read.
        /// </summary>
        [Input("consumerGroupName", required: true)]
        public Input<string> ConsumerGroupName { get; set; } = null!;

        /// <summary>
        /// Specifies the id of the IoT Time Series Insights Environment that the Event Source should be associated with. Changing this forces a new resource to created.
        /// </summary>
        [Input("environmentId", required: true)]
        public Input<string> EnvironmentId { get; set; } = null!;

        /// <summary>
        /// Specifies the resource id where events will be coming from.
        /// </summary>
        [Input("eventSourceResourceId", required: true)]
        public Input<string> EventSourceResourceId { get; set; } = null!;

        /// <summary>
        /// Specifies the name of the IotHub which will be associated with this resource.
        /// </summary>
        [Input("iothubName", required: true)]
        public Input<string> IothubName { get; set; } = null!;

        /// <summary>
        /// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// Specifies the name of the Azure IoT Time Series Insights IoTHub Event Source. Changing this forces a new resource to be created. Must be globally unique.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("sharedAccessKey", required: true)]
        private Input<string>? _sharedAccessKey;

        /// <summary>
        /// Specifies the value of the Shared Access Policy key that grants the Time Series Insights service read access to the IotHub.
        /// </summary>
        public Input<string>? SharedAccessKey
        {
            get => _sharedAccessKey;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _sharedAccessKey = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// Specifies the name of the Shared Access key that grants the Event Source access to the IotHub.
        /// </summary>
        [Input("sharedAccessKeyName", required: true)]
        public Input<string> SharedAccessKeyName { get; set; } = null!;

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// A mapping of tags to assign to the resource.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        /// <summary>
        /// Specifies the value that will be used as the event source's timestamp. This value defaults to the event creation time.
        /// </summary>
        [Input("timestampPropertyName")]
        public Input<string>? TimestampPropertyName { get; set; }

        public TimeSeriesInsightsEventSourceIothubArgs()
        {
        }
        public static new TimeSeriesInsightsEventSourceIothubArgs Empty => new TimeSeriesInsightsEventSourceIothubArgs();
    }

    public sealed class TimeSeriesInsightsEventSourceIothubState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies the name of the IotHub Consumer Group that holds the partitions from which events will be read.
        /// </summary>
        [Input("consumerGroupName")]
        public Input<string>? ConsumerGroupName { get; set; }

        /// <summary>
        /// Specifies the id of the IoT Time Series Insights Environment that the Event Source should be associated with. Changing this forces a new resource to created.
        /// </summary>
        [Input("environmentId")]
        public Input<string>? EnvironmentId { get; set; }

        /// <summary>
        /// Specifies the resource id where events will be coming from.
        /// </summary>
        [Input("eventSourceResourceId")]
        public Input<string>? EventSourceResourceId { get; set; }

        /// <summary>
        /// Specifies the name of the IotHub which will be associated with this resource.
        /// </summary>
        [Input("iothubName")]
        public Input<string>? IothubName { get; set; }

        /// <summary>
        /// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// Specifies the name of the Azure IoT Time Series Insights IoTHub Event Source. Changing this forces a new resource to be created. Must be globally unique.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("sharedAccessKey")]
        private Input<string>? _sharedAccessKey;

        /// <summary>
        /// Specifies the value of the Shared Access Policy key that grants the Time Series Insights service read access to the IotHub.
        /// </summary>
        public Input<string>? SharedAccessKey
        {
            get => _sharedAccessKey;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _sharedAccessKey = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// Specifies the name of the Shared Access key that grants the Event Source access to the IotHub.
        /// </summary>
        [Input("sharedAccessKeyName")]
        public Input<string>? SharedAccessKeyName { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// A mapping of tags to assign to the resource.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        /// <summary>
        /// Specifies the value that will be used as the event source's timestamp. This value defaults to the event creation time.
        /// </summary>
        [Input("timestampPropertyName")]
        public Input<string>? TimestampPropertyName { get; set; }

        public TimeSeriesInsightsEventSourceIothubState()
        {
        }
        public static new TimeSeriesInsightsEventSourceIothubState Empty => new TimeSeriesInsightsEventSourceIothubState();
    }
}
