// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Iot
{
    public static class GetIotHub
    {
        /// <summary>
        /// Use this data source to access information about an existing IoTHub.
        /// </summary>
        public static Task<GetIotHubResult> InvokeAsync(GetIotHubArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetIotHubResult>("azure:iot/getIotHub:getIotHub", args ?? new GetIotHubArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to access information about an existing IoTHub.
        /// </summary>
        public static Output<GetIotHubResult> Invoke(GetIotHubInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetIotHubResult>("azure:iot/getIotHub:getIotHub", args ?? new GetIotHubInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetIotHubArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of this IoTHub.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        /// <summary>
        /// The name of the Resource Group where the IoTHub exists.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        [Input("tags")]
        private Dictionary<string, string>? _tags;

        /// <summary>
        /// A mapping of tags which should be assigned to the IoTHub.
        /// </summary>
        public Dictionary<string, string> Tags
        {
            get => _tags ?? (_tags = new Dictionary<string, string>());
            set => _tags = value;
        }

        public GetIotHubArgs()
        {
        }
        public static new GetIotHubArgs Empty => new GetIotHubArgs();
    }

    public sealed class GetIotHubInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of this IoTHub.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// The name of the Resource Group where the IoTHub exists.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// A mapping of tags which should be assigned to the IoTHub.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public GetIotHubInvokeArgs()
        {
        }
        public static new GetIotHubInvokeArgs Empty => new GetIotHubInvokeArgs();
    }


    [OutputType]
    public sealed class GetIotHubResult
    {
        /// <summary>
        /// The Hostname of the IoTHub.
        /// </summary>
        public readonly string Hostname;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// A `identity` block as defined below.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetIotHubIdentityResult> Identities;
        public readonly string Name;
        public readonly string ResourceGroupName;
        public readonly ImmutableDictionary<string, string>? Tags;

        [OutputConstructor]
        private GetIotHubResult(
            string hostname,

            string id,

            ImmutableArray<Outputs.GetIotHubIdentityResult> identities,

            string name,

            string resourceGroupName,

            ImmutableDictionary<string, string>? tags)
        {
            Hostname = hostname;
            Id = id;
            Identities = identities;
            Name = name;
            ResourceGroupName = resourceGroupName;
            Tags = tags;
        }
    }
}
