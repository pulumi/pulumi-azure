// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Iot
{
    /// <summary>
    /// Manages an IotHub Cosmos DB Account Endpoint
    /// 
    /// &gt; **NOTE:** Endpoints can be defined either directly on the `azure.iot.IoTHub` resource, or using the `azurerm_iothub_endpoint_*` resources - but the two ways of defining the endpoints cannot be used together. If both are used against the same IoTHub, spurious changes will occur. Also, defining a `azurerm_iothub_endpoint_*` resource and another endpoint of a different type directly on the `azure.iot.IoTHub` resource is not supported.
    /// 
    /// ## Import
    /// 
    /// IoTHub Cosmos DB Account Endpoint can be imported using the `resource id`, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import azure:iot/endpointCosmosdbAccount:EndpointCosmosdbAccount endpoint1 /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.Devices/iotHubs/hub1/endpoints/cosmosDBAccountEndpoint1
    /// ```
    /// </summary>
    [AzureResourceType("azure:iot/endpointCosmosdbAccount:EndpointCosmosdbAccount")]
    public partial class EndpointCosmosdbAccount : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The type used to authenticate against the Cosmos DB Account endpoint. Possible values are `keyBased` and `identityBased`. Defaults to `keyBased`.
        /// </summary>
        [Output("authenticationType")]
        public Output<string?> AuthenticationType { get; private set; } = null!;

        /// <summary>
        /// The name of the Cosmos DB Container in the Cosmos DB Database. Changing this forces a new resource to be created.
        /// </summary>
        [Output("containerName")]
        public Output<string> ContainerName { get; private set; } = null!;

        /// <summary>
        /// The name of the Cosmos DB Database in the Cosmos DB Account. Changing this forces a new resource to be created.
        /// </summary>
        [Output("databaseName")]
        public Output<string> DatabaseName { get; private set; } = null!;

        /// <summary>
        /// The URI of the Cosmos DB Account. Changing this forces a new resource to be created.
        /// </summary>
        [Output("endpointUri")]
        public Output<string> EndpointUri { get; private set; } = null!;

        /// <summary>
        /// The ID of the User Managed Identity used to authenticate against the Cosmos DB Account endpoint.
        /// 
        /// &gt; **NOTE:** `identity_id` can only be specified when `authentication_type` is `identityBased`. It must be one of the `identity_ids` of the Iot Hub. If not specified when `authentication_type` is `identityBased`, System Assigned Managed Identity of the Iot Hub will be used.
        /// </summary>
        [Output("identityId")]
        public Output<string?> IdentityId { get; private set; } = null!;

        /// <summary>
        /// The ID of the IoT Hub to create the endpoint. Changing this forces a new resource to be created.
        /// </summary>
        [Output("iothubId")]
        public Output<string> IothubId { get; private set; } = null!;

        /// <summary>
        /// The name of the endpoint. The name must be unique across endpoint types. The following names are reserved: `events`, `operationsMonitoringEvents`, `fileNotifications` and `$default`. Changing this forces a new resource to be created.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The name of the partition key associated with the Cosmos DB Container.
        /// </summary>
        [Output("partitionKeyName")]
        public Output<string?> PartitionKeyName { get; private set; } = null!;

        /// <summary>
        /// The template for generating a synthetic partition key value for use within the Cosmos DB Container.
        /// </summary>
        [Output("partitionKeyTemplate")]
        public Output<string?> PartitionKeyTemplate { get; private set; } = null!;

        /// <summary>
        /// The primary key of the Cosmos DB Account.
        /// 
        /// &gt; **NOTE:** `primary_key` must and can only be specified when `authentication_type` is `keyBased`.
        /// </summary>
        [Output("primaryKey")]
        public Output<string?> PrimaryKey { get; private set; } = null!;

        /// <summary>
        /// The name of the resource group under which the Cosmos DB Account has been created. Changing this forces a new resource to be created.
        /// </summary>
        [Output("resourceGroupName")]
        public Output<string> ResourceGroupName { get; private set; } = null!;

        /// <summary>
        /// The secondary key of the Cosmos DB Account.
        /// 
        /// &gt; **NOTE:** `secondary_key` must and can only be specified when `authentication_type` is `keyBased`.
        /// </summary>
        [Output("secondaryKey")]
        public Output<string?> SecondaryKey { get; private set; } = null!;


        /// <summary>
        /// Create a EndpointCosmosdbAccount resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public EndpointCosmosdbAccount(string name, EndpointCosmosdbAccountArgs args, CustomResourceOptions? options = null)
            : base("azure:iot/endpointCosmosdbAccount:EndpointCosmosdbAccount", name, args ?? new EndpointCosmosdbAccountArgs(), MakeResourceOptions(options, ""))
        {
        }

        private EndpointCosmosdbAccount(string name, Input<string> id, EndpointCosmosdbAccountState? state = null, CustomResourceOptions? options = null)
            : base("azure:iot/endpointCosmosdbAccount:EndpointCosmosdbAccount", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                AdditionalSecretOutputs =
                {
                    "primaryKey",
                    "secondaryKey",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing EndpointCosmosdbAccount resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static EndpointCosmosdbAccount Get(string name, Input<string> id, EndpointCosmosdbAccountState? state = null, CustomResourceOptions? options = null)
        {
            return new EndpointCosmosdbAccount(name, id, state, options);
        }
    }

    public sealed class EndpointCosmosdbAccountArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The type used to authenticate against the Cosmos DB Account endpoint. Possible values are `keyBased` and `identityBased`. Defaults to `keyBased`.
        /// </summary>
        [Input("authenticationType")]
        public Input<string>? AuthenticationType { get; set; }

        /// <summary>
        /// The name of the Cosmos DB Container in the Cosmos DB Database. Changing this forces a new resource to be created.
        /// </summary>
        [Input("containerName", required: true)]
        public Input<string> ContainerName { get; set; } = null!;

        /// <summary>
        /// The name of the Cosmos DB Database in the Cosmos DB Account. Changing this forces a new resource to be created.
        /// </summary>
        [Input("databaseName", required: true)]
        public Input<string> DatabaseName { get; set; } = null!;

        /// <summary>
        /// The URI of the Cosmos DB Account. Changing this forces a new resource to be created.
        /// </summary>
        [Input("endpointUri", required: true)]
        public Input<string> EndpointUri { get; set; } = null!;

        /// <summary>
        /// The ID of the User Managed Identity used to authenticate against the Cosmos DB Account endpoint.
        /// 
        /// &gt; **NOTE:** `identity_id` can only be specified when `authentication_type` is `identityBased`. It must be one of the `identity_ids` of the Iot Hub. If not specified when `authentication_type` is `identityBased`, System Assigned Managed Identity of the Iot Hub will be used.
        /// </summary>
        [Input("identityId")]
        public Input<string>? IdentityId { get; set; }

        /// <summary>
        /// The ID of the IoT Hub to create the endpoint. Changing this forces a new resource to be created.
        /// </summary>
        [Input("iothubId", required: true)]
        public Input<string> IothubId { get; set; } = null!;

        /// <summary>
        /// The name of the endpoint. The name must be unique across endpoint types. The following names are reserved: `events`, `operationsMonitoringEvents`, `fileNotifications` and `$default`. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The name of the partition key associated with the Cosmos DB Container.
        /// </summary>
        [Input("partitionKeyName")]
        public Input<string>? PartitionKeyName { get; set; }

        /// <summary>
        /// The template for generating a synthetic partition key value for use within the Cosmos DB Container.
        /// </summary>
        [Input("partitionKeyTemplate")]
        public Input<string>? PartitionKeyTemplate { get; set; }

        [Input("primaryKey")]
        private Input<string>? _primaryKey;

        /// <summary>
        /// The primary key of the Cosmos DB Account.
        /// 
        /// &gt; **NOTE:** `primary_key` must and can only be specified when `authentication_type` is `keyBased`.
        /// </summary>
        public Input<string>? PrimaryKey
        {
            get => _primaryKey;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _primaryKey = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// The name of the resource group under which the Cosmos DB Account has been created. Changing this forces a new resource to be created.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        [Input("secondaryKey")]
        private Input<string>? _secondaryKey;

        /// <summary>
        /// The secondary key of the Cosmos DB Account.
        /// 
        /// &gt; **NOTE:** `secondary_key` must and can only be specified when `authentication_type` is `keyBased`.
        /// </summary>
        public Input<string>? SecondaryKey
        {
            get => _secondaryKey;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _secondaryKey = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        public EndpointCosmosdbAccountArgs()
        {
        }
        public static new EndpointCosmosdbAccountArgs Empty => new EndpointCosmosdbAccountArgs();
    }

    public sealed class EndpointCosmosdbAccountState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The type used to authenticate against the Cosmos DB Account endpoint. Possible values are `keyBased` and `identityBased`. Defaults to `keyBased`.
        /// </summary>
        [Input("authenticationType")]
        public Input<string>? AuthenticationType { get; set; }

        /// <summary>
        /// The name of the Cosmos DB Container in the Cosmos DB Database. Changing this forces a new resource to be created.
        /// </summary>
        [Input("containerName")]
        public Input<string>? ContainerName { get; set; }

        /// <summary>
        /// The name of the Cosmos DB Database in the Cosmos DB Account. Changing this forces a new resource to be created.
        /// </summary>
        [Input("databaseName")]
        public Input<string>? DatabaseName { get; set; }

        /// <summary>
        /// The URI of the Cosmos DB Account. Changing this forces a new resource to be created.
        /// </summary>
        [Input("endpointUri")]
        public Input<string>? EndpointUri { get; set; }

        /// <summary>
        /// The ID of the User Managed Identity used to authenticate against the Cosmos DB Account endpoint.
        /// 
        /// &gt; **NOTE:** `identity_id` can only be specified when `authentication_type` is `identityBased`. It must be one of the `identity_ids` of the Iot Hub. If not specified when `authentication_type` is `identityBased`, System Assigned Managed Identity of the Iot Hub will be used.
        /// </summary>
        [Input("identityId")]
        public Input<string>? IdentityId { get; set; }

        /// <summary>
        /// The ID of the IoT Hub to create the endpoint. Changing this forces a new resource to be created.
        /// </summary>
        [Input("iothubId")]
        public Input<string>? IothubId { get; set; }

        /// <summary>
        /// The name of the endpoint. The name must be unique across endpoint types. The following names are reserved: `events`, `operationsMonitoringEvents`, `fileNotifications` and `$default`. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The name of the partition key associated with the Cosmos DB Container.
        /// </summary>
        [Input("partitionKeyName")]
        public Input<string>? PartitionKeyName { get; set; }

        /// <summary>
        /// The template for generating a synthetic partition key value for use within the Cosmos DB Container.
        /// </summary>
        [Input("partitionKeyTemplate")]
        public Input<string>? PartitionKeyTemplate { get; set; }

        [Input("primaryKey")]
        private Input<string>? _primaryKey;

        /// <summary>
        /// The primary key of the Cosmos DB Account.
        /// 
        /// &gt; **NOTE:** `primary_key` must and can only be specified when `authentication_type` is `keyBased`.
        /// </summary>
        public Input<string>? PrimaryKey
        {
            get => _primaryKey;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _primaryKey = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// The name of the resource group under which the Cosmos DB Account has been created. Changing this forces a new resource to be created.
        /// </summary>
        [Input("resourceGroupName")]
        public Input<string>? ResourceGroupName { get; set; }

        [Input("secondaryKey")]
        private Input<string>? _secondaryKey;

        /// <summary>
        /// The secondary key of the Cosmos DB Account.
        /// 
        /// &gt; **NOTE:** `secondary_key` must and can only be specified when `authentication_type` is `keyBased`.
        /// </summary>
        public Input<string>? SecondaryKey
        {
            get => _secondaryKey;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _secondaryKey = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        public EndpointCosmosdbAccountState()
        {
        }
        public static new EndpointCosmosdbAccountState Empty => new EndpointCosmosdbAccountState();
    }
}
