// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.AIFoundry
{
    /// <summary>
    /// Manages an AI Foundry Project.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Azure = Pulumi.Azure;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var current = Azure.Core.GetClientConfig.Invoke();
    /// 
    ///     var example = new Azure.Core.ResourceGroup("example", new()
    ///     {
    ///         Name = "example",
    ///         Location = "westeurope",
    ///     });
    /// 
    ///     var exampleKeyVault = new Azure.KeyVault.KeyVault("example", new()
    ///     {
    ///         Name = "examplekv",
    ///         Location = example.Location,
    ///         ResourceGroupName = example.Name,
    ///         TenantId = current.Apply(getClientConfigResult =&gt; getClientConfigResult.TenantId),
    ///         SkuName = "standard",
    ///         PurgeProtectionEnabled = true,
    ///     });
    /// 
    ///     var test = new Azure.KeyVault.AccessPolicy("test", new()
    ///     {
    ///         KeyVaultId = exampleKeyVault.Id,
    ///         TenantId = current.Apply(getClientConfigResult =&gt; getClientConfigResult.TenantId),
    ///         ObjectId = current.Apply(getClientConfigResult =&gt; getClientConfigResult.ObjectId),
    ///         KeyPermissions = new[]
    ///         {
    ///             "Create",
    ///             "Get",
    ///             "Delete",
    ///             "Purge",
    ///             "GetRotationPolicy",
    ///         },
    ///     });
    /// 
    ///     var exampleAccount = new Azure.Storage.Account("example", new()
    ///     {
    ///         Name = "examplesa",
    ///         Location = example.Location,
    ///         ResourceGroupName = example.Name,
    ///         AccountTier = "Standard",
    ///         AccountReplicationType = "LRS",
    ///     });
    /// 
    ///     var exampleAIServices = new Azure.Cognitive.AIServices("example", new()
    ///     {
    ///         Name = "exampleaiservices",
    ///         Location = example.Location,
    ///         ResourceGroupName = example.Name,
    ///         SkuName = "S0",
    ///     });
    /// 
    ///     var exampleHub = new Azure.AIFoundry.Hub("example", new()
    ///     {
    ///         Name = "exampleaihub",
    ///         Location = exampleAIServices.Location,
    ///         ResourceGroupName = example.Name,
    ///         StorageAccountId = exampleAccount.Id,
    ///         KeyVaultId = exampleKeyVault.Id,
    ///         Identity = new Azure.AIFoundry.Inputs.HubIdentityArgs
    ///         {
    ///             Type = "SystemAssigned",
    ///         },
    ///     });
    /// 
    ///     var exampleProject = new Azure.AIFoundry.Project("example", new()
    ///     {
    ///         Name = "example",
    ///         Location = exampleHub.Location,
    ///         AiServicesHubId = exampleHub.Id,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// AI Foundry Projects can be imported using the `resource id`, e.g.
    /// 
    /// ```sh
    /// $ pulumi import azure:aifoundry/project:Project example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.MachineLearningServices/workspaces/project1
    /// ```
    /// </summary>
    [AzureResourceType("azure:aifoundry/project:Project")]
    public partial class Project : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The AI Foundry ID under which this Project should be created. Changing this forces a new AI Foundry Project to be created.
        /// </summary>
        [Output("aiServicesHubId")]
        public Output<string> AiServicesHubId { get; private set; } = null!;

        /// <summary>
        /// The description of this AI Foundry Project.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// The display name of this AI Foundry Project.
        /// </summary>
        [Output("friendlyName")]
        public Output<string?> FriendlyName { get; private set; } = null!;

        /// <summary>
        /// Whether High Business Impact (HBI) should be enabled or not. Enabling this setting will reduce diagnostic data collected by the service. Changing this forces a new AI Foundry Project to be created. Defaults to `false`.
        /// </summary>
        [Output("highBusinessImpactEnabled")]
        public Output<bool> HighBusinessImpactEnabled { get; private set; } = null!;

        /// <summary>
        /// A `identity` block as defined below.
        /// </summary>
        [Output("identity")]
        public Output<Outputs.ProjectIdentity?> Identity { get; private set; } = null!;

        /// <summary>
        /// The Azure Region where the AI Foundry Project should exist. Changing this forces a new AI Foundry Project to be created.
        /// </summary>
        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// The name which should be used for this AI Foundry Project. Changing this forces a new AI Foundry Project to be created.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The immutable project ID associated with this AI Foundry Project.
        /// </summary>
        [Output("projectId")]
        public Output<string> ProjectId { get; private set; } = null!;

        /// <summary>
        /// A mapping of tags which should be assigned to the AI Foundry Project.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;


        /// <summary>
        /// Create a Project resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Project(string name, ProjectArgs args, CustomResourceOptions? options = null)
            : base("azure:aifoundry/project:Project", name, args ?? new ProjectArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Project(string name, Input<string> id, ProjectState? state = null, CustomResourceOptions? options = null)
            : base("azure:aifoundry/project:Project", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Project resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Project Get(string name, Input<string> id, ProjectState? state = null, CustomResourceOptions? options = null)
        {
            return new Project(name, id, state, options);
        }
    }

    public sealed class ProjectArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The AI Foundry ID under which this Project should be created. Changing this forces a new AI Foundry Project to be created.
        /// </summary>
        [Input("aiServicesHubId", required: true)]
        public Input<string> AiServicesHubId { get; set; } = null!;

        /// <summary>
        /// The description of this AI Foundry Project.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The display name of this AI Foundry Project.
        /// </summary>
        [Input("friendlyName")]
        public Input<string>? FriendlyName { get; set; }

        /// <summary>
        /// Whether High Business Impact (HBI) should be enabled or not. Enabling this setting will reduce diagnostic data collected by the service. Changing this forces a new AI Foundry Project to be created. Defaults to `false`.
        /// </summary>
        [Input("highBusinessImpactEnabled")]
        public Input<bool>? HighBusinessImpactEnabled { get; set; }

        /// <summary>
        /// A `identity` block as defined below.
        /// </summary>
        [Input("identity")]
        public Input<Inputs.ProjectIdentityArgs>? Identity { get; set; }

        /// <summary>
        /// The Azure Region where the AI Foundry Project should exist. Changing this forces a new AI Foundry Project to be created.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// The name which should be used for this AI Foundry Project. Changing this forces a new AI Foundry Project to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// A mapping of tags which should be assigned to the AI Foundry Project.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public ProjectArgs()
        {
        }
        public static new ProjectArgs Empty => new ProjectArgs();
    }

    public sealed class ProjectState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The AI Foundry ID under which this Project should be created. Changing this forces a new AI Foundry Project to be created.
        /// </summary>
        [Input("aiServicesHubId")]
        public Input<string>? AiServicesHubId { get; set; }

        /// <summary>
        /// The description of this AI Foundry Project.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The display name of this AI Foundry Project.
        /// </summary>
        [Input("friendlyName")]
        public Input<string>? FriendlyName { get; set; }

        /// <summary>
        /// Whether High Business Impact (HBI) should be enabled or not. Enabling this setting will reduce diagnostic data collected by the service. Changing this forces a new AI Foundry Project to be created. Defaults to `false`.
        /// </summary>
        [Input("highBusinessImpactEnabled")]
        public Input<bool>? HighBusinessImpactEnabled { get; set; }

        /// <summary>
        /// A `identity` block as defined below.
        /// </summary>
        [Input("identity")]
        public Input<Inputs.ProjectIdentityGetArgs>? Identity { get; set; }

        /// <summary>
        /// The Azure Region where the AI Foundry Project should exist. Changing this forces a new AI Foundry Project to be created.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// The name which should be used for this AI Foundry Project. Changing this forces a new AI Foundry Project to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The immutable project ID associated with this AI Foundry Project.
        /// </summary>
        [Input("projectId")]
        public Input<string>? ProjectId { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// A mapping of tags which should be assigned to the AI Foundry Project.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public ProjectState()
        {
        }
        public static new ProjectState Empty => new ProjectState();
    }
}
