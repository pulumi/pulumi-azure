// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.AIFoundry
{
    /// <summary>
    /// Manages an AI Foundry Hub.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Azure = Pulumi.Azure;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var current = Azure.Core.GetClientConfig.Invoke();
    /// 
    ///     var example = new Azure.Core.ResourceGroup("example", new()
    ///     {
    ///         Name = "example",
    ///         Location = "westeurope",
    ///     });
    /// 
    ///     var exampleKeyVault = new Azure.KeyVault.KeyVault("example", new()
    ///     {
    ///         Name = "examplekv",
    ///         Location = example.Location,
    ///         ResourceGroupName = example.Name,
    ///         TenantId = current.Apply(getClientConfigResult =&gt; getClientConfigResult.TenantId),
    ///         SkuName = "standard",
    ///         PurgeProtectionEnabled = true,
    ///     });
    /// 
    ///     var test = new Azure.KeyVault.AccessPolicy("test", new()
    ///     {
    ///         KeyVaultId = exampleKeyVault.Id,
    ///         TenantId = current.Apply(getClientConfigResult =&gt; getClientConfigResult.TenantId),
    ///         ObjectId = current.Apply(getClientConfigResult =&gt; getClientConfigResult.ObjectId),
    ///         KeyPermissions = new[]
    ///         {
    ///             "Create",
    ///             "Get",
    ///             "Delete",
    ///             "Purge",
    ///             "GetRotationPolicy",
    ///         },
    ///     });
    /// 
    ///     var exampleAccount = new Azure.Storage.Account("example", new()
    ///     {
    ///         Name = "examplesa",
    ///         Location = example.Location,
    ///         ResourceGroupName = example.Name,
    ///         AccountTier = "Standard",
    ///         AccountReplicationType = "LRS",
    ///     });
    /// 
    ///     var exampleAIServices = new Azure.Cognitive.AIServices("example", new()
    ///     {
    ///         Name = "exampleaiservices",
    ///         Location = example.Location,
    ///         ResourceGroupName = example.Name,
    ///         SkuName = "S0",
    ///     });
    /// 
    ///     var exampleHub = new Azure.AIFoundry.Hub("example", new()
    ///     {
    ///         Name = "exampleaihub",
    ///         Location = exampleAIServices.Location,
    ///         ResourceGroupName = example.Name,
    ///         StorageAccountId = exampleAccount.Id,
    ///         KeyVaultId = exampleKeyVault.Id,
    ///         Identity = new Azure.AIFoundry.Inputs.HubIdentityArgs
    ///         {
    ///             Type = "SystemAssigned",
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## API Providers
    /// 
    /// &lt;!-- This section is generated, changes will be overwritten --&gt;
    /// This resource uses the following Azure API Providers:
    /// 
    /// * `Microsoft.MachineLearningServices` - 2025-06-01
    /// 
    /// ## Import
    /// 
    /// AI Foundry Hubs can be imported using the `resource id`, e.g.
    /// 
    /// ```sh
    /// $ pulumi import azure:aifoundry/hub:Hub example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.MachineLearningServices/workspaces/hub1
    /// ```
    /// </summary>
    [AzureResourceType("azure:aifoundry/hub:Hub")]
    public partial class Hub : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The Application Insights ID that should be used by this AI Foundry Hub.
        /// </summary>
        [Output("applicationInsightsId")]
        public Output<string?> ApplicationInsightsId { get; private set; } = null!;

        /// <summary>
        /// The Container Registry ID that should be used by this AI Foundry Hub.
        /// </summary>
        [Output("containerRegistryId")]
        public Output<string?> ContainerRegistryId { get; private set; } = null!;

        /// <summary>
        /// The description of this AI Foundry Hub.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// The URL for the discovery service to identify regional endpoints for AI Foundry Hub services.
        /// </summary>
        [Output("discoveryUrl")]
        public Output<string> DiscoveryUrl { get; private set; } = null!;

        /// <summary>
        /// An `encryption` block as defined below. Changing this forces a new AI Foundry Hub to be created.
        /// </summary>
        [Output("encryption")]
        public Output<Outputs.HubEncryption?> Encryption { get; private set; } = null!;

        /// <summary>
        /// The display name of this AI Foundry Hub.
        /// </summary>
        [Output("friendlyName")]
        public Output<string?> FriendlyName { get; private set; } = null!;

        /// <summary>
        /// Whether High Business Impact (HBI) should be enabled or not. Enabling this setting will reduce diagnostic data collected by the service. Changing this forces a new AI Foundry Hub to be created. Defaults to `false`.
        /// 
        /// &gt; **Note:** `high_business_impact_enabled` will be enabled by default when creating an AI Foundry Hub with `encryption` enabled.
        /// </summary>
        [Output("highBusinessImpactEnabled")]
        public Output<bool> HighBusinessImpactEnabled { get; private set; } = null!;

        /// <summary>
        /// A `identity` block as defined below.
        /// </summary>
        [Output("identity")]
        public Output<Outputs.HubIdentity> Identity { get; private set; } = null!;

        /// <summary>
        /// The Key Vault ID that should be used by this AI Foundry Hub. Changing this forces a new AI Foundry Hub to be created.
        /// </summary>
        [Output("keyVaultId")]
        public Output<string> KeyVaultId { get; private set; } = null!;

        /// <summary>
        /// The Azure Region where the AI Foundry Hub should exist. Changing this forces a new AI Foundry Hub to be created.
        /// </summary>
        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// A `managed_network` block as defined below.
        /// </summary>
        [Output("managedNetwork")]
        public Output<Outputs.HubManagedNetwork> ManagedNetwork { get; private set; } = null!;

        /// <summary>
        /// The name which should be used for this AI Foundry Hub. Changing this forces a new AI Foundry Hub to be created.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The user assigned identity ID that represents the AI Foundry Hub identity. This must be set when enabling encryption with a user assigned identity.
        /// </summary>
        [Output("primaryUserAssignedIdentity")]
        public Output<string?> PrimaryUserAssignedIdentity { get; private set; } = null!;

        /// <summary>
        /// Whether public network access for this AI Service Hub should be enabled. Possible values include `Enabled` and `Disabled`. Defaults to `Enabled`.
        /// </summary>
        [Output("publicNetworkAccess")]
        public Output<string?> PublicNetworkAccess { get; private set; } = null!;

        /// <summary>
        /// The name of the Resource Group where the AI Foundry Hub should exist. Changing this forces a new AI Foundry Hub to be created.
        /// </summary>
        [Output("resourceGroupName")]
        public Output<string> ResourceGroupName { get; private set; } = null!;

        /// <summary>
        /// The Storage Account ID that should be used by this AI Foundry Hub. Changing this forces a new AI Foundry Hub to be created.
        /// </summary>
        [Output("storageAccountId")]
        public Output<string> StorageAccountId { get; private set; } = null!;

        /// <summary>
        /// A mapping of tags which should be assigned to the AI Foundry Hub.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// The immutable ID associated with this AI Foundry Hub.
        /// </summary>
        [Output("workspaceId")]
        public Output<string> WorkspaceId { get; private set; } = null!;


        /// <summary>
        /// Create a Hub resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Hub(string name, HubArgs args, CustomResourceOptions? options = null)
            : base("azure:aifoundry/hub:Hub", name, args ?? new HubArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Hub(string name, Input<string> id, HubState? state = null, CustomResourceOptions? options = null)
            : base("azure:aifoundry/hub:Hub", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Hub resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Hub Get(string name, Input<string> id, HubState? state = null, CustomResourceOptions? options = null)
        {
            return new Hub(name, id, state, options);
        }
    }

    public sealed class HubArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The Application Insights ID that should be used by this AI Foundry Hub.
        /// </summary>
        [Input("applicationInsightsId")]
        public Input<string>? ApplicationInsightsId { get; set; }

        /// <summary>
        /// The Container Registry ID that should be used by this AI Foundry Hub.
        /// </summary>
        [Input("containerRegistryId")]
        public Input<string>? ContainerRegistryId { get; set; }

        /// <summary>
        /// The description of this AI Foundry Hub.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// An `encryption` block as defined below. Changing this forces a new AI Foundry Hub to be created.
        /// </summary>
        [Input("encryption")]
        public Input<Inputs.HubEncryptionArgs>? Encryption { get; set; }

        /// <summary>
        /// The display name of this AI Foundry Hub.
        /// </summary>
        [Input("friendlyName")]
        public Input<string>? FriendlyName { get; set; }

        /// <summary>
        /// Whether High Business Impact (HBI) should be enabled or not. Enabling this setting will reduce diagnostic data collected by the service. Changing this forces a new AI Foundry Hub to be created. Defaults to `false`.
        /// 
        /// &gt; **Note:** `high_business_impact_enabled` will be enabled by default when creating an AI Foundry Hub with `encryption` enabled.
        /// </summary>
        [Input("highBusinessImpactEnabled")]
        public Input<bool>? HighBusinessImpactEnabled { get; set; }

        /// <summary>
        /// A `identity` block as defined below.
        /// </summary>
        [Input("identity", required: true)]
        public Input<Inputs.HubIdentityArgs> Identity { get; set; } = null!;

        /// <summary>
        /// The Key Vault ID that should be used by this AI Foundry Hub. Changing this forces a new AI Foundry Hub to be created.
        /// </summary>
        [Input("keyVaultId", required: true)]
        public Input<string> KeyVaultId { get; set; } = null!;

        /// <summary>
        /// The Azure Region where the AI Foundry Hub should exist. Changing this forces a new AI Foundry Hub to be created.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// A `managed_network` block as defined below.
        /// </summary>
        [Input("managedNetwork")]
        public Input<Inputs.HubManagedNetworkArgs>? ManagedNetwork { get; set; }

        /// <summary>
        /// The name which should be used for this AI Foundry Hub. Changing this forces a new AI Foundry Hub to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The user assigned identity ID that represents the AI Foundry Hub identity. This must be set when enabling encryption with a user assigned identity.
        /// </summary>
        [Input("primaryUserAssignedIdentity")]
        public Input<string>? PrimaryUserAssignedIdentity { get; set; }

        /// <summary>
        /// Whether public network access for this AI Service Hub should be enabled. Possible values include `Enabled` and `Disabled`. Defaults to `Enabled`.
        /// </summary>
        [Input("publicNetworkAccess")]
        public Input<string>? PublicNetworkAccess { get; set; }

        /// <summary>
        /// The name of the Resource Group where the AI Foundry Hub should exist. Changing this forces a new AI Foundry Hub to be created.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The Storage Account ID that should be used by this AI Foundry Hub. Changing this forces a new AI Foundry Hub to be created.
        /// </summary>
        [Input("storageAccountId", required: true)]
        public Input<string> StorageAccountId { get; set; } = null!;

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// A mapping of tags which should be assigned to the AI Foundry Hub.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public HubArgs()
        {
        }
        public static new HubArgs Empty => new HubArgs();
    }

    public sealed class HubState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The Application Insights ID that should be used by this AI Foundry Hub.
        /// </summary>
        [Input("applicationInsightsId")]
        public Input<string>? ApplicationInsightsId { get; set; }

        /// <summary>
        /// The Container Registry ID that should be used by this AI Foundry Hub.
        /// </summary>
        [Input("containerRegistryId")]
        public Input<string>? ContainerRegistryId { get; set; }

        /// <summary>
        /// The description of this AI Foundry Hub.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The URL for the discovery service to identify regional endpoints for AI Foundry Hub services.
        /// </summary>
        [Input("discoveryUrl")]
        public Input<string>? DiscoveryUrl { get; set; }

        /// <summary>
        /// An `encryption` block as defined below. Changing this forces a new AI Foundry Hub to be created.
        /// </summary>
        [Input("encryption")]
        public Input<Inputs.HubEncryptionGetArgs>? Encryption { get; set; }

        /// <summary>
        /// The display name of this AI Foundry Hub.
        /// </summary>
        [Input("friendlyName")]
        public Input<string>? FriendlyName { get; set; }

        /// <summary>
        /// Whether High Business Impact (HBI) should be enabled or not. Enabling this setting will reduce diagnostic data collected by the service. Changing this forces a new AI Foundry Hub to be created. Defaults to `false`.
        /// 
        /// &gt; **Note:** `high_business_impact_enabled` will be enabled by default when creating an AI Foundry Hub with `encryption` enabled.
        /// </summary>
        [Input("highBusinessImpactEnabled")]
        public Input<bool>? HighBusinessImpactEnabled { get; set; }

        /// <summary>
        /// A `identity` block as defined below.
        /// </summary>
        [Input("identity")]
        public Input<Inputs.HubIdentityGetArgs>? Identity { get; set; }

        /// <summary>
        /// The Key Vault ID that should be used by this AI Foundry Hub. Changing this forces a new AI Foundry Hub to be created.
        /// </summary>
        [Input("keyVaultId")]
        public Input<string>? KeyVaultId { get; set; }

        /// <summary>
        /// The Azure Region where the AI Foundry Hub should exist. Changing this forces a new AI Foundry Hub to be created.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// A `managed_network` block as defined below.
        /// </summary>
        [Input("managedNetwork")]
        public Input<Inputs.HubManagedNetworkGetArgs>? ManagedNetwork { get; set; }

        /// <summary>
        /// The name which should be used for this AI Foundry Hub. Changing this forces a new AI Foundry Hub to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The user assigned identity ID that represents the AI Foundry Hub identity. This must be set when enabling encryption with a user assigned identity.
        /// </summary>
        [Input("primaryUserAssignedIdentity")]
        public Input<string>? PrimaryUserAssignedIdentity { get; set; }

        /// <summary>
        /// Whether public network access for this AI Service Hub should be enabled. Possible values include `Enabled` and `Disabled`. Defaults to `Enabled`.
        /// </summary>
        [Input("publicNetworkAccess")]
        public Input<string>? PublicNetworkAccess { get; set; }

        /// <summary>
        /// The name of the Resource Group where the AI Foundry Hub should exist. Changing this forces a new AI Foundry Hub to be created.
        /// </summary>
        [Input("resourceGroupName")]
        public Input<string>? ResourceGroupName { get; set; }

        /// <summary>
        /// The Storage Account ID that should be used by this AI Foundry Hub. Changing this forces a new AI Foundry Hub to be created.
        /// </summary>
        [Input("storageAccountId")]
        public Input<string>? StorageAccountId { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// A mapping of tags which should be assigned to the AI Foundry Hub.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        /// <summary>
        /// The immutable ID associated with this AI Foundry Hub.
        /// </summary>
        [Input("workspaceId")]
        public Input<string>? WorkspaceId { get; set; }

        public HubState()
        {
        }
        public static new HubState Empty => new HubState();
    }
}
