// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.DataShare
{
    public static class GetDatasetKustoDatabase
    {
        /// <summary>
        /// Use this data source to access information about an existing Data Share Kusto Database Dataset.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Azure = Pulumi.Azure;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var example = Output.Create(Azure.DataShare.GetDatasetKustoDatabase.InvokeAsync(new Azure.DataShare.GetDatasetKustoDatabaseArgs
        ///         {
        ///             Name = "example-dskdds",
        ///             ShareId = "example-share-id",
        ///         }));
        ///         this.Id = example.Apply(example =&gt; example.Id);
        ///     }
        /// 
        ///     [Output("id")]
        ///     public Output&lt;string&gt; Id { get; set; }
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetDatasetKustoDatabaseResult> InvokeAsync(GetDatasetKustoDatabaseArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetDatasetKustoDatabaseResult>("azure:datashare/getDatasetKustoDatabase:getDatasetKustoDatabase", args ?? new GetDatasetKustoDatabaseArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to access information about an existing Data Share Kusto Database Dataset.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Azure = Pulumi.Azure;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var example = Output.Create(Azure.DataShare.GetDatasetKustoDatabase.InvokeAsync(new Azure.DataShare.GetDatasetKustoDatabaseArgs
        ///         {
        ///             Name = "example-dskdds",
        ///             ShareId = "example-share-id",
        ///         }));
        ///         this.Id = example.Apply(example =&gt; example.Id);
        ///     }
        /// 
        ///     [Output("id")]
        ///     public Output&lt;string&gt; Id { get; set; }
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetDatasetKustoDatabaseResult> Invoke(GetDatasetKustoDatabaseInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetDatasetKustoDatabaseResult>("azure:datashare/getDatasetKustoDatabase:getDatasetKustoDatabase", args ?? new GetDatasetKustoDatabaseInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDatasetKustoDatabaseArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of this Data Share Kusto Database Dataset.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        /// <summary>
        /// The resource ID of the Data Share where this Data Share Kusto Database Dataset should be created.
        /// </summary>
        [Input("shareId", required: true)]
        public string ShareId { get; set; } = null!;

        public GetDatasetKustoDatabaseArgs()
        {
        }
    }

    public sealed class GetDatasetKustoDatabaseInvokeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of this Data Share Kusto Database Dataset.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// The resource ID of the Data Share where this Data Share Kusto Database Dataset should be created.
        /// </summary>
        [Input("shareId", required: true)]
        public Input<string> ShareId { get; set; } = null!;

        public GetDatasetKustoDatabaseInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetDatasetKustoDatabaseResult
    {
        /// <summary>
        /// The name of the Data Share Dataset.
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The location of the Kusto Cluster.
        /// </summary>
        public readonly string KustoClusterLocation;
        /// <summary>
        /// The resource ID of the Kusto Cluster Database to be shared with the receiver.
        /// </summary>
        public readonly string KustoDatabaseId;
        public readonly string Name;
        public readonly string ShareId;

        [OutputConstructor]
        private GetDatasetKustoDatabaseResult(
            string displayName,

            string id,

            string kustoClusterLocation,

            string kustoDatabaseId,

            string name,

            string shareId)
        {
            DisplayName = displayName;
            Id = id;
            KustoClusterLocation = kustoClusterLocation;
            KustoDatabaseId = kustoDatabaseId;
            Name = name;
            ShareId = shareId;
        }
    }
}
