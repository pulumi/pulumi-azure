// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Dashboard
{
    public static class Azurerm_portal_dashboard
    {
        /// <summary>
        /// Use this data source to access information about an existing shared dashboard in the Azure Portal. This is the data source of the `azure.dashboard.Dashboard` resource.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Azure = Pulumi.Azure;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var example = Output.Create(Azure.Dashboard.Azurerm_portal_dashboard.InvokeAsync(new Azure.Dashboard.Azurerm_portal_dashboardArgs
        ///         {
        ///             Name = "existing-dashboard",
        ///             ResourceGroupName = "dashboard-rg",
        ///         }));
        ///         this.Id = data.Azurerm_dashboard.Example.Id;
        ///     }
        /// 
        ///     [Output("id")]
        ///     public Output&lt;string&gt; Id { get; set; }
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<Azurerm_portal_dashboardResult> InvokeAsync(Azurerm_portal_dashboardArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<Azurerm_portal_dashboardResult>("azure:dashboard/azurerm_portal_dashboard:azurerm_portal_dashboard", args ?? new Azurerm_portal_dashboardArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to access information about an existing shared dashboard in the Azure Portal. This is the data source of the `azure.dashboard.Dashboard` resource.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Azure = Pulumi.Azure;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var example = Output.Create(Azure.Dashboard.Azurerm_portal_dashboard.InvokeAsync(new Azure.Dashboard.Azurerm_portal_dashboardArgs
        ///         {
        ///             Name = "existing-dashboard",
        ///             ResourceGroupName = "dashboard-rg",
        ///         }));
        ///         this.Id = data.Azurerm_dashboard.Example.Id;
        ///     }
        /// 
        ///     [Output("id")]
        ///     public Output&lt;string&gt; Id { get; set; }
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<Azurerm_portal_dashboardResult> Invoke(Azurerm_portal_dashboardInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<Azurerm_portal_dashboardResult>("azure:dashboard/azurerm_portal_dashboard:azurerm_portal_dashboard", args ?? new Azurerm_portal_dashboardInvokeArgs(), options.WithDefaults());
    }


    public sealed class Azurerm_portal_dashboardArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// JSON data representing dashboard body.
        /// </summary>
        [Input("dashboardProperties")]
        public string? DashboardProperties { get; set; }

        /// <summary>
        /// Specifies the name of the shared Azure Portal Dashboard.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        /// <summary>
        /// Specifies the name of the resource group the shared Azure Portal Dashboard is located in.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public Azurerm_portal_dashboardArgs()
        {
        }
    }

    public sealed class Azurerm_portal_dashboardInvokeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// JSON data representing dashboard body.
        /// </summary>
        [Input("dashboardProperties")]
        public Input<string>? DashboardProperties { get; set; }

        /// <summary>
        /// Specifies the name of the shared Azure Portal Dashboard.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// Specifies the name of the resource group the shared Azure Portal Dashboard is located in.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public Azurerm_portal_dashboardInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class Azurerm_portal_dashboardResult
    {
        /// <summary>
        /// JSON data representing dashboard body.
        /// </summary>
        public readonly string DashboardProperties;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The Azure Region where the shared Azure Portal dashboard exists.
        /// </summary>
        public readonly string Location;
        public readonly string Name;
        public readonly string ResourceGroupName;
        /// <summary>
        /// A mapping of tags assigned to the shared Azure Portal dashboard.
        /// </summary>
        public readonly ImmutableDictionary<string, string> Tags;

        [OutputConstructor]
        private Azurerm_portal_dashboardResult(
            string dashboardProperties,

            string id,

            string location,

            string name,

            string resourceGroupName,

            ImmutableDictionary<string, string> tags)
        {
            DashboardProperties = dashboardProperties;
            Id = id;
            Location = location;
            Name = name;
            ResourceGroupName = resourceGroupName;
            Tags = tags;
        }
    }
}
