// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Dashboard
{
    /// <summary>
    /// Manages a Dashboard Grafana Managed Private Endpoint.
    /// 
    /// &gt; **Note:** This resource will _not_ approve the managed private endpoint connection on the linked resource. This will need to be done manually via Azure CLI, PowerShell, or AzAPI resources. See here for an example that uses AzAPI.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Azure = Pulumi.Azure;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Azure.Core.ResourceGroup("example", new()
    ///     {
    ///         Name = "example-resources",
    ///         Location = "Canada Central",
    ///     });
    /// 
    ///     var exampleWorkspace = new Azure.Monitoring.Workspace("example", new()
    ///     {
    ///         Name = "example-mamw",
    ///         ResourceGroupName = example.Name,
    ///         Location = example.Location,
    ///         PublicNetworkAccessEnabled = false,
    ///     });
    /// 
    ///     var exampleGrafana = new Azure.Dashboard.Grafana("example", new()
    ///     {
    ///         Name = "example-dg",
    ///         ResourceGroupName = example.Name,
    ///         Location = example.Location,
    ///         GrafanaMajorVersion = "11",
    ///         PublicNetworkAccessEnabled = false,
    ///         AzureMonitorWorkspaceIntegrations = new[]
    ///         {
    ///             new Azure.Dashboard.Inputs.GrafanaAzureMonitorWorkspaceIntegrationArgs
    ///             {
    ///                 ResourceId = exampleWorkspace.Id,
    ///             },
    ///         },
    ///     });
    /// 
    ///     var exampleGrafanaManagedPrivateEndpoint = new Azure.Dashboard.GrafanaManagedPrivateEndpoint("example", new()
    ///     {
    ///         GrafanaId = exampleGrafana.Id,
    ///         Name = "example-mpe",
    ///         Location = exampleGrafana.Location,
    ///         PrivateLinkResourceId = exampleWorkspace.Id,
    ///         GroupIds = new[]
    ///         {
    ///             "prometheusMetrics",
    ///         },
    ///         PrivateLinkResourceRegion = exampleGrafana.Location,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## API Providers
    /// 
    /// &lt;!-- This section is generated, changes will be overwritten --&gt;
    /// This resource uses the following Azure API Providers:
    /// 
    /// * `Microsoft.Dashboard` - 2023-09-01
    /// 
    /// ## Import
    /// 
    /// Dashboard Grafana Managed Private Endpoint Examples can be imported using the `resource id`, e.g.
    /// 
    /// ```sh
    /// $ pulumi import azure:dashboard/grafanaManagedPrivateEndpoint:GrafanaManagedPrivateEndpoint example /subscriptions/12345678-1234-9876-4563-123456789012/resourceGroups/resGroup1/providers/Microsoft.Dashboard/grafana/workspace1/managedPrivateEndpoints/endpoint1
    /// ```
    /// </summary>
    [AzureResourceType("azure:dashboard/grafanaManagedPrivateEndpoint:GrafanaManagedPrivateEndpoint")]
    public partial class GrafanaManagedPrivateEndpoint : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The id of the associated managed Grafana. Changing this forces a new Dashboard Grafana Managed Private Endpoint to be created.
        /// </summary>
        [Output("grafanaId")]
        public Output<string> GrafanaId { get; private set; } = null!;

        /// <summary>
        /// Specifies a list of private link group IDs. The value of this will depend on the private link resource to which you are connecting. Changing this forces a new Dashboard Grafana Managed Private Endpoint to be created.
        /// </summary>
        [Output("groupIds")]
        public Output<ImmutableArray<string>> GroupIds { get; private set; } = null!;

        /// <summary>
        /// The Azure Region where the Dashboard Grafana Managed Private Endpoint should exist. Changing this forces a new Dashboard Grafana Managed Private Endpoint to be created.
        /// </summary>
        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// The name which should be used for this Dashboard Grafana Managed Private Endpoint. Must be between 2 and 20 alphanumeric characters or dashes, must begin with letter and end with a letter or number. Changing this forces a new Dashboard Grafana Managed Private Endpoint to be created.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The ID of the resource to which this Dashboard Grafana Managed Private Endpoint will connect. Changing this forces a new Dashboard Grafana Managed Private Endpoint to be created.
        /// </summary>
        [Output("privateLinkResourceId")]
        public Output<string> PrivateLinkResourceId { get; private set; } = null!;

        /// <summary>
        /// The region in which to create the private link. Changing this forces a new Dashboard Grafana Managed Private Endpoint to be created.
        /// </summary>
        [Output("privateLinkResourceRegion")]
        public Output<string?> PrivateLinkResourceRegion { get; private set; } = null!;

        /// <summary>
        /// A domain name for this endpoint to be used within Grafana. Must be just a domain, without schema, and with at least three parts.
        /// </summary>
        [Output("privateLinkServiceUrl")]
        public Output<string?> PrivateLinkServiceUrl { get; private set; } = null!;

        /// <summary>
        /// A message to provide in the request which will be seen by approvers.
        /// </summary>
        [Output("requestMessage")]
        public Output<string?> RequestMessage { get; private set; } = null!;

        /// <summary>
        /// A mapping of tags which should be assigned to the Dashboard Grafana Managed Private Endpoint.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;


        /// <summary>
        /// Create a GrafanaManagedPrivateEndpoint resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public GrafanaManagedPrivateEndpoint(string name, GrafanaManagedPrivateEndpointArgs args, CustomResourceOptions? options = null)
            : base("azure:dashboard/grafanaManagedPrivateEndpoint:GrafanaManagedPrivateEndpoint", name, args ?? new GrafanaManagedPrivateEndpointArgs(), MakeResourceOptions(options, ""))
        {
        }

        private GrafanaManagedPrivateEndpoint(string name, Input<string> id, GrafanaManagedPrivateEndpointState? state = null, CustomResourceOptions? options = null)
            : base("azure:dashboard/grafanaManagedPrivateEndpoint:GrafanaManagedPrivateEndpoint", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing GrafanaManagedPrivateEndpoint resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static GrafanaManagedPrivateEndpoint Get(string name, Input<string> id, GrafanaManagedPrivateEndpointState? state = null, CustomResourceOptions? options = null)
        {
            return new GrafanaManagedPrivateEndpoint(name, id, state, options);
        }
    }

    public sealed class GrafanaManagedPrivateEndpointArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The id of the associated managed Grafana. Changing this forces a new Dashboard Grafana Managed Private Endpoint to be created.
        /// </summary>
        [Input("grafanaId", required: true)]
        public Input<string> GrafanaId { get; set; } = null!;

        [Input("groupIds")]
        private InputList<string>? _groupIds;

        /// <summary>
        /// Specifies a list of private link group IDs. The value of this will depend on the private link resource to which you are connecting. Changing this forces a new Dashboard Grafana Managed Private Endpoint to be created.
        /// </summary>
        public InputList<string> GroupIds
        {
            get => _groupIds ?? (_groupIds = new InputList<string>());
            set => _groupIds = value;
        }

        /// <summary>
        /// The Azure Region where the Dashboard Grafana Managed Private Endpoint should exist. Changing this forces a new Dashboard Grafana Managed Private Endpoint to be created.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// The name which should be used for this Dashboard Grafana Managed Private Endpoint. Must be between 2 and 20 alphanumeric characters or dashes, must begin with letter and end with a letter or number. Changing this forces a new Dashboard Grafana Managed Private Endpoint to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The ID of the resource to which this Dashboard Grafana Managed Private Endpoint will connect. Changing this forces a new Dashboard Grafana Managed Private Endpoint to be created.
        /// </summary>
        [Input("privateLinkResourceId", required: true)]
        public Input<string> PrivateLinkResourceId { get; set; } = null!;

        /// <summary>
        /// The region in which to create the private link. Changing this forces a new Dashboard Grafana Managed Private Endpoint to be created.
        /// </summary>
        [Input("privateLinkResourceRegion")]
        public Input<string>? PrivateLinkResourceRegion { get; set; }

        /// <summary>
        /// A domain name for this endpoint to be used within Grafana. Must be just a domain, without schema, and with at least three parts.
        /// </summary>
        [Input("privateLinkServiceUrl")]
        public Input<string>? PrivateLinkServiceUrl { get; set; }

        /// <summary>
        /// A message to provide in the request which will be seen by approvers.
        /// </summary>
        [Input("requestMessage")]
        public Input<string>? RequestMessage { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// A mapping of tags which should be assigned to the Dashboard Grafana Managed Private Endpoint.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public GrafanaManagedPrivateEndpointArgs()
        {
        }
        public static new GrafanaManagedPrivateEndpointArgs Empty => new GrafanaManagedPrivateEndpointArgs();
    }

    public sealed class GrafanaManagedPrivateEndpointState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The id of the associated managed Grafana. Changing this forces a new Dashboard Grafana Managed Private Endpoint to be created.
        /// </summary>
        [Input("grafanaId")]
        public Input<string>? GrafanaId { get; set; }

        [Input("groupIds")]
        private InputList<string>? _groupIds;

        /// <summary>
        /// Specifies a list of private link group IDs. The value of this will depend on the private link resource to which you are connecting. Changing this forces a new Dashboard Grafana Managed Private Endpoint to be created.
        /// </summary>
        public InputList<string> GroupIds
        {
            get => _groupIds ?? (_groupIds = new InputList<string>());
            set => _groupIds = value;
        }

        /// <summary>
        /// The Azure Region where the Dashboard Grafana Managed Private Endpoint should exist. Changing this forces a new Dashboard Grafana Managed Private Endpoint to be created.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// The name which should be used for this Dashboard Grafana Managed Private Endpoint. Must be between 2 and 20 alphanumeric characters or dashes, must begin with letter and end with a letter or number. Changing this forces a new Dashboard Grafana Managed Private Endpoint to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The ID of the resource to which this Dashboard Grafana Managed Private Endpoint will connect. Changing this forces a new Dashboard Grafana Managed Private Endpoint to be created.
        /// </summary>
        [Input("privateLinkResourceId")]
        public Input<string>? PrivateLinkResourceId { get; set; }

        /// <summary>
        /// The region in which to create the private link. Changing this forces a new Dashboard Grafana Managed Private Endpoint to be created.
        /// </summary>
        [Input("privateLinkResourceRegion")]
        public Input<string>? PrivateLinkResourceRegion { get; set; }

        /// <summary>
        /// A domain name for this endpoint to be used within Grafana. Must be just a domain, without schema, and with at least three parts.
        /// </summary>
        [Input("privateLinkServiceUrl")]
        public Input<string>? PrivateLinkServiceUrl { get; set; }

        /// <summary>
        /// A message to provide in the request which will be seen by approvers.
        /// </summary>
        [Input("requestMessage")]
        public Input<string>? RequestMessage { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// A mapping of tags which should be assigned to the Dashboard Grafana Managed Private Endpoint.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public GrafanaManagedPrivateEndpointState()
        {
        }
        public static new GrafanaManagedPrivateEndpointState Empty => new GrafanaManagedPrivateEndpointState();
    }
}
