// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Dashboard
{
    /// <summary>
    /// Manages a Dashboard Grafana.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Azure = Pulumi.Azure;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var exampleResourceGroup = new Azure.Core.ResourceGroup("exampleResourceGroup", new()
    ///     {
    ///         Location = "West Europe",
    ///     });
    /// 
    ///     var exampleGrafana = new Azure.Dashboard.Grafana("exampleGrafana", new()
    ///     {
    ///         ResourceGroupName = exampleResourceGroup.Name,
    ///         Location = "West Europe",
    ///         ApiKeyEnabled = true,
    ///         DeterministicOutboundIpEnabled = true,
    ///         PublicNetworkAccessEnabled = false,
    ///         Identity = new Azure.Dashboard.Inputs.GrafanaIdentityArgs
    ///         {
    ///             Type = "SystemAssigned",
    ///         },
    ///         Tags = 
    ///         {
    ///             { "key", "value" },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Dashboard Grafana can be imported using the `resource id`, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import azure:dashboard/grafana:Grafana example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resourceGroup1/providers/Microsoft.Dashboard/grafana/workspace1
    /// ```
    /// </summary>
    [AzureResourceType("azure:dashboard/grafana:Grafana")]
    public partial class Grafana : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Whether to enable the api key setting of the Grafana instance. Defaults to `false`.
        /// </summary>
        [Output("apiKeyEnabled")]
        public Output<bool?> ApiKeyEnabled { get; private set; } = null!;

        /// <summary>
        /// Scope for dns deterministic name hash calculation. The only possible value is `TenantReuse`. Defaults to `TenantReuse`.
        /// </summary>
        [Output("autoGeneratedDomainNameLabelScope")]
        public Output<string?> AutoGeneratedDomainNameLabelScope { get; private set; } = null!;

        /// <summary>
        /// A `azure_monitor_workspace_integrations` block as defined below.
        /// </summary>
        [Output("azureMonitorWorkspaceIntegrations")]
        public Output<ImmutableArray<Outputs.GrafanaAzureMonitorWorkspaceIntegration>> AzureMonitorWorkspaceIntegrations { get; private set; } = null!;

        /// <summary>
        /// Whether to enable the Grafana instance to use deterministic outbound IPs. Defaults to `false`.
        /// </summary>
        [Output("deterministicOutboundIpEnabled")]
        public Output<bool?> DeterministicOutboundIpEnabled { get; private set; } = null!;

        /// <summary>
        /// The endpoint of the Grafana instance.
        /// </summary>
        [Output("endpoint")]
        public Output<string> Endpoint { get; private set; } = null!;

        /// <summary>
        /// Which major version of Grafana to deploy. Defaults to `9`. Possible values are `9`, `10`. Changing this forces a new resource to be created.
        /// </summary>
        [Output("grafanaMajorVersion")]
        public Output<string?> GrafanaMajorVersion { get; private set; } = null!;

        /// <summary>
        /// The full Grafana software semantic version deployed.
        /// </summary>
        [Output("grafanaVersion")]
        public Output<string> GrafanaVersion { get; private set; } = null!;

        /// <summary>
        /// An `identity` block as defined below. Changing this forces a new Dashboard Grafana to be created.
        /// </summary>
        [Output("identity")]
        public Output<Outputs.GrafanaIdentity?> Identity { get; private set; } = null!;

        /// <summary>
        /// Specifies the Azure Region where the Dashboard Grafana should exist. Changing this forces a new Dashboard Grafana to be created.
        /// </summary>
        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// Specifies the name which should be used for this Dashboard Grafana. Changing this forces a new Dashboard Grafana to be created.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// List of outbound IPs if deterministicOutboundIP is enabled.
        /// </summary>
        [Output("outboundIps")]
        public Output<ImmutableArray<string>> OutboundIps { get; private set; } = null!;

        /// <summary>
        /// Whether to enable traffic over the public interface. Defaults to `true`.
        /// </summary>
        [Output("publicNetworkAccessEnabled")]
        public Output<bool?> PublicNetworkAccessEnabled { get; private set; } = null!;

        /// <summary>
        /// Specifies the name of the Resource Group where the Dashboard Grafana should exist. Changing this forces a new Dashboard Grafana to be created.
        /// </summary>
        [Output("resourceGroupName")]
        public Output<string> ResourceGroupName { get; private set; } = null!;

        /// <summary>
        /// The name of the SKU used for the Grafana instance. The only possible value is `Standard`. Defaults to `Standard`. Changing this forces a new Dashboard Grafana to be created.
        /// </summary>
        [Output("sku")]
        public Output<string?> Sku { get; private set; } = null!;

        /// <summary>
        /// A mapping of tags which should be assigned to the Dashboard Grafana.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// Whether to enable the zone redundancy setting of the Grafana instance. Defaults to `false`. Changing this forces a new Dashboard Grafana to be created.
        /// </summary>
        [Output("zoneRedundancyEnabled")]
        public Output<bool?> ZoneRedundancyEnabled { get; private set; } = null!;


        /// <summary>
        /// Create a Grafana resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Grafana(string name, GrafanaArgs args, CustomResourceOptions? options = null)
            : base("azure:dashboard/grafana:Grafana", name, args ?? new GrafanaArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Grafana(string name, Input<string> id, GrafanaState? state = null, CustomResourceOptions? options = null)
            : base("azure:dashboard/grafana:Grafana", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Grafana resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Grafana Get(string name, Input<string> id, GrafanaState? state = null, CustomResourceOptions? options = null)
        {
            return new Grafana(name, id, state, options);
        }
    }

    public sealed class GrafanaArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Whether to enable the api key setting of the Grafana instance. Defaults to `false`.
        /// </summary>
        [Input("apiKeyEnabled")]
        public Input<bool>? ApiKeyEnabled { get; set; }

        /// <summary>
        /// Scope for dns deterministic name hash calculation. The only possible value is `TenantReuse`. Defaults to `TenantReuse`.
        /// </summary>
        [Input("autoGeneratedDomainNameLabelScope")]
        public Input<string>? AutoGeneratedDomainNameLabelScope { get; set; }

        [Input("azureMonitorWorkspaceIntegrations")]
        private InputList<Inputs.GrafanaAzureMonitorWorkspaceIntegrationArgs>? _azureMonitorWorkspaceIntegrations;

        /// <summary>
        /// A `azure_monitor_workspace_integrations` block as defined below.
        /// </summary>
        public InputList<Inputs.GrafanaAzureMonitorWorkspaceIntegrationArgs> AzureMonitorWorkspaceIntegrations
        {
            get => _azureMonitorWorkspaceIntegrations ?? (_azureMonitorWorkspaceIntegrations = new InputList<Inputs.GrafanaAzureMonitorWorkspaceIntegrationArgs>());
            set => _azureMonitorWorkspaceIntegrations = value;
        }

        /// <summary>
        /// Whether to enable the Grafana instance to use deterministic outbound IPs. Defaults to `false`.
        /// </summary>
        [Input("deterministicOutboundIpEnabled")]
        public Input<bool>? DeterministicOutboundIpEnabled { get; set; }

        /// <summary>
        /// Which major version of Grafana to deploy. Defaults to `9`. Possible values are `9`, `10`. Changing this forces a new resource to be created.
        /// </summary>
        [Input("grafanaMajorVersion")]
        public Input<string>? GrafanaMajorVersion { get; set; }

        /// <summary>
        /// An `identity` block as defined below. Changing this forces a new Dashboard Grafana to be created.
        /// </summary>
        [Input("identity")]
        public Input<Inputs.GrafanaIdentityArgs>? Identity { get; set; }

        /// <summary>
        /// Specifies the Azure Region where the Dashboard Grafana should exist. Changing this forces a new Dashboard Grafana to be created.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// Specifies the name which should be used for this Dashboard Grafana. Changing this forces a new Dashboard Grafana to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Whether to enable traffic over the public interface. Defaults to `true`.
        /// </summary>
        [Input("publicNetworkAccessEnabled")]
        public Input<bool>? PublicNetworkAccessEnabled { get; set; }

        /// <summary>
        /// Specifies the name of the Resource Group where the Dashboard Grafana should exist. Changing this forces a new Dashboard Grafana to be created.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the SKU used for the Grafana instance. The only possible value is `Standard`. Defaults to `Standard`. Changing this forces a new Dashboard Grafana to be created.
        /// </summary>
        [Input("sku")]
        public Input<string>? Sku { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// A mapping of tags which should be assigned to the Dashboard Grafana.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        /// <summary>
        /// Whether to enable the zone redundancy setting of the Grafana instance. Defaults to `false`. Changing this forces a new Dashboard Grafana to be created.
        /// </summary>
        [Input("zoneRedundancyEnabled")]
        public Input<bool>? ZoneRedundancyEnabled { get; set; }

        public GrafanaArgs()
        {
        }
        public static new GrafanaArgs Empty => new GrafanaArgs();
    }

    public sealed class GrafanaState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Whether to enable the api key setting of the Grafana instance. Defaults to `false`.
        /// </summary>
        [Input("apiKeyEnabled")]
        public Input<bool>? ApiKeyEnabled { get; set; }

        /// <summary>
        /// Scope for dns deterministic name hash calculation. The only possible value is `TenantReuse`. Defaults to `TenantReuse`.
        /// </summary>
        [Input("autoGeneratedDomainNameLabelScope")]
        public Input<string>? AutoGeneratedDomainNameLabelScope { get; set; }

        [Input("azureMonitorWorkspaceIntegrations")]
        private InputList<Inputs.GrafanaAzureMonitorWorkspaceIntegrationGetArgs>? _azureMonitorWorkspaceIntegrations;

        /// <summary>
        /// A `azure_monitor_workspace_integrations` block as defined below.
        /// </summary>
        public InputList<Inputs.GrafanaAzureMonitorWorkspaceIntegrationGetArgs> AzureMonitorWorkspaceIntegrations
        {
            get => _azureMonitorWorkspaceIntegrations ?? (_azureMonitorWorkspaceIntegrations = new InputList<Inputs.GrafanaAzureMonitorWorkspaceIntegrationGetArgs>());
            set => _azureMonitorWorkspaceIntegrations = value;
        }

        /// <summary>
        /// Whether to enable the Grafana instance to use deterministic outbound IPs. Defaults to `false`.
        /// </summary>
        [Input("deterministicOutboundIpEnabled")]
        public Input<bool>? DeterministicOutboundIpEnabled { get; set; }

        /// <summary>
        /// The endpoint of the Grafana instance.
        /// </summary>
        [Input("endpoint")]
        public Input<string>? Endpoint { get; set; }

        /// <summary>
        /// Which major version of Grafana to deploy. Defaults to `9`. Possible values are `9`, `10`. Changing this forces a new resource to be created.
        /// </summary>
        [Input("grafanaMajorVersion")]
        public Input<string>? GrafanaMajorVersion { get; set; }

        /// <summary>
        /// The full Grafana software semantic version deployed.
        /// </summary>
        [Input("grafanaVersion")]
        public Input<string>? GrafanaVersion { get; set; }

        /// <summary>
        /// An `identity` block as defined below. Changing this forces a new Dashboard Grafana to be created.
        /// </summary>
        [Input("identity")]
        public Input<Inputs.GrafanaIdentityGetArgs>? Identity { get; set; }

        /// <summary>
        /// Specifies the Azure Region where the Dashboard Grafana should exist. Changing this forces a new Dashboard Grafana to be created.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// Specifies the name which should be used for this Dashboard Grafana. Changing this forces a new Dashboard Grafana to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("outboundIps")]
        private InputList<string>? _outboundIps;

        /// <summary>
        /// List of outbound IPs if deterministicOutboundIP is enabled.
        /// </summary>
        public InputList<string> OutboundIps
        {
            get => _outboundIps ?? (_outboundIps = new InputList<string>());
            set => _outboundIps = value;
        }

        /// <summary>
        /// Whether to enable traffic over the public interface. Defaults to `true`.
        /// </summary>
        [Input("publicNetworkAccessEnabled")]
        public Input<bool>? PublicNetworkAccessEnabled { get; set; }

        /// <summary>
        /// Specifies the name of the Resource Group where the Dashboard Grafana should exist. Changing this forces a new Dashboard Grafana to be created.
        /// </summary>
        [Input("resourceGroupName")]
        public Input<string>? ResourceGroupName { get; set; }

        /// <summary>
        /// The name of the SKU used for the Grafana instance. The only possible value is `Standard`. Defaults to `Standard`. Changing this forces a new Dashboard Grafana to be created.
        /// </summary>
        [Input("sku")]
        public Input<string>? Sku { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// A mapping of tags which should be assigned to the Dashboard Grafana.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        /// <summary>
        /// Whether to enable the zone redundancy setting of the Grafana instance. Defaults to `false`. Changing this forces a new Dashboard Grafana to be created.
        /// </summary>
        [Input("zoneRedundancyEnabled")]
        public Input<bool>? ZoneRedundancyEnabled { get; set; }

        public GrafanaState()
        {
        }
        public static new GrafanaState Empty => new GrafanaState();
    }
}
