// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Dashboard.Outputs
{

    [OutputType]
    public sealed class GrafanaSmtp
    {
        /// <summary>
        /// Whether to enable the smtp setting of the Grafana instance. Defaults to `false`.
        /// </summary>
        public readonly bool? Enabled;
        /// <summary>
        /// Address used when sending emails.
        /// </summary>
        public readonly string FromAddress;
        /// <summary>
        /// Name used when sending emails. Defaults to `Azure Managed Grafana Notification`.
        /// </summary>
        public readonly string? FromName;
        /// <summary>
        /// SMTP server hostname with port, e.g. test.email.net:587
        /// </summary>
        public readonly string Host;
        /// <summary>
        /// Password of SMTP authentication.
        /// </summary>
        public readonly string Password;
        /// <summary>
        /// Whether to use TLS when connecting to SMTP server. Possible values are `OpportunisticStartTLS`, `NoStartTLS`, `MandatoryStartTLS`.
        /// </summary>
        public readonly string StartTlsPolicy;
        /// <summary>
        /// User of SMTP authentication.
        /// </summary>
        public readonly string User;
        /// <summary>
        /// Whether verify SSL for SMTP server. Defaults to `false`.
        /// </summary>
        public readonly bool? VerificationSkipEnabled;

        [OutputConstructor]
        private GrafanaSmtp(
            bool? enabled,

            string fromAddress,

            string? fromName,

            string host,

            string password,

            string startTlsPolicy,

            string user,

            bool? verificationSkipEnabled)
        {
            Enabled = enabled;
            FromAddress = fromAddress;
            FromName = fromName;
            Host = host;
            Password = password;
            StartTlsPolicy = startTlsPolicy;
            User = user;
            VerificationSkipEnabled = verificationSkipEnabled;
        }
    }
}
