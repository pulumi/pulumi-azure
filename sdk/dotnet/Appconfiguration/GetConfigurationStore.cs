// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.AppConfiguration
{
    public static partial class Invokes
    {
        /// <summary>
        /// Use this data source to access information about an existing App Configuration.
        /// 
        /// &gt; This content is derived from https://github.com/terraform-providers/terraform-provider-azurerm/blob/master/website/docs/d/app_configuration.html.markdown.
        /// </summary>
        public static Task<GetConfigurationStoreResult> GetConfigurationStore(GetConfigurationStoreArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetConfigurationStoreResult>("azure:appconfiguration/getConfigurationStore:getConfigurationStore", args ?? InvokeArgs.Empty, options.WithVersion());
    }

    public sealed class GetConfigurationStoreArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The Name of this App Configuration.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        /// <summary>
        /// The name of the Resource Group where the App Configuration exists.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetConfigurationStoreArgs()
        {
        }
    }

    [OutputType]
    public sealed class GetConfigurationStoreResult
    {
        /// <summary>
        /// The Endpoint used to access this App Configuration.
        /// </summary>
        public readonly string Endpoint;
        /// <summary>
        /// The Azure Region where the App Configuration exists.
        /// </summary>
        public readonly string Location;
        public readonly string Name;
        /// <summary>
        /// A `primary_read_key` block as defined below containing the primary read access key.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetConfigurationStorePrimaryReadKeysResult> PrimaryReadKeys;
        /// <summary>
        /// A `primary_write_key` block as defined below containing the primary write access key.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetConfigurationStorePrimaryWriteKeysResult> PrimaryWriteKeys;
        public readonly string ResourceGroupName;
        /// <summary>
        /// A `secondary_read_key` block as defined below containing the secondary read access key.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetConfigurationStoreSecondaryReadKeysResult> SecondaryReadKeys;
        /// <summary>
        /// A `secondary_write_key` block as defined below containing the secondary write access key.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetConfigurationStoreSecondaryWriteKeysResult> SecondaryWriteKeys;
        /// <summary>
        /// The name of the SKU used for this App Configuration.
        /// </summary>
        public readonly string Sku;
        /// <summary>
        /// A mapping of tags assigned to the App Configuration.
        /// </summary>
        public readonly ImmutableDictionary<string, string> Tags;
        /// <summary>
        /// id is the provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;

        [OutputConstructor]
        private GetConfigurationStoreResult(
            string endpoint,
            string location,
            string name,
            ImmutableArray<Outputs.GetConfigurationStorePrimaryReadKeysResult> primaryReadKeys,
            ImmutableArray<Outputs.GetConfigurationStorePrimaryWriteKeysResult> primaryWriteKeys,
            string resourceGroupName,
            ImmutableArray<Outputs.GetConfigurationStoreSecondaryReadKeysResult> secondaryReadKeys,
            ImmutableArray<Outputs.GetConfigurationStoreSecondaryWriteKeysResult> secondaryWriteKeys,
            string sku,
            ImmutableDictionary<string, string> tags,
            string id)
        {
            Endpoint = endpoint;
            Location = location;
            Name = name;
            PrimaryReadKeys = primaryReadKeys;
            PrimaryWriteKeys = primaryWriteKeys;
            ResourceGroupName = resourceGroupName;
            SecondaryReadKeys = secondaryReadKeys;
            SecondaryWriteKeys = secondaryWriteKeys;
            Sku = sku;
            Tags = tags;
            Id = id;
        }
    }

    namespace Outputs
    {

    [OutputType]
    public sealed class GetConfigurationStorePrimaryReadKeysResult
    {
        /// <summary>
        /// The Connection String for this Access Key - comprising of the Endpoint, ID and Secret.
        /// </summary>
        public readonly string ConnectionString;
        /// <summary>
        /// The ID of the Access Key.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The Secret of the Access Key.
        /// </summary>
        public readonly string Secret;

        [OutputConstructor]
        private GetConfigurationStorePrimaryReadKeysResult(
            string connectionString,
            string id,
            string secret)
        {
            ConnectionString = connectionString;
            Id = id;
            Secret = secret;
        }
    }

    [OutputType]
    public sealed class GetConfigurationStorePrimaryWriteKeysResult
    {
        /// <summary>
        /// The Connection String for this Access Key - comprising of the Endpoint, ID and Secret.
        /// </summary>
        public readonly string ConnectionString;
        /// <summary>
        /// The ID of the Access Key.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The Secret of the Access Key.
        /// </summary>
        public readonly string Secret;

        [OutputConstructor]
        private GetConfigurationStorePrimaryWriteKeysResult(
            string connectionString,
            string id,
            string secret)
        {
            ConnectionString = connectionString;
            Id = id;
            Secret = secret;
        }
    }

    [OutputType]
    public sealed class GetConfigurationStoreSecondaryReadKeysResult
    {
        /// <summary>
        /// The Connection String for this Access Key - comprising of the Endpoint, ID and Secret.
        /// </summary>
        public readonly string ConnectionString;
        /// <summary>
        /// The ID of the Access Key.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The Secret of the Access Key.
        /// </summary>
        public readonly string Secret;

        [OutputConstructor]
        private GetConfigurationStoreSecondaryReadKeysResult(
            string connectionString,
            string id,
            string secret)
        {
            ConnectionString = connectionString;
            Id = id;
            Secret = secret;
        }
    }

    [OutputType]
    public sealed class GetConfigurationStoreSecondaryWriteKeysResult
    {
        /// <summary>
        /// The Connection String for this Access Key - comprising of the Endpoint, ID and Secret.
        /// </summary>
        public readonly string ConnectionString;
        /// <summary>
        /// The ID of the Access Key.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The Secret of the Access Key.
        /// </summary>
        public readonly string Secret;

        [OutputConstructor]
        private GetConfigurationStoreSecondaryWriteKeysResult(
            string connectionString,
            string id,
            string secret)
        {
            ConnectionString = connectionString;
            Id = id;
            Secret = secret;
        }
    }
    }
}
