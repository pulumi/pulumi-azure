// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.NetApp.Inputs
{

    public sealed class VolumeGroupSapHanaVolumeExportPolicyRuleGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// A comma-sperated list of allowed client IPv4 addresses.
        /// </summary>
        [Input("allowedClients", required: true)]
        public Input<string> AllowedClients { get; set; } = null!;

        /// <summary>
        /// Enables NFSv3. Please note that this cannot be enabled if volume has NFSv4.1 as its protocol.
        /// </summary>
        [Input("nfsv3Enabled", required: true)]
        public Input<bool> Nfsv3Enabled { get; set; } = null!;

        /// <summary>
        /// Enables NFSv4.1. Please note that this cannot be enabled if volume has NFSv3 as its protocol.
        /// </summary>
        [Input("nfsv41Enabled", required: true)]
        public Input<bool> Nfsv41Enabled { get; set; } = null!;

        /// <summary>
        /// Is root access permitted to this volume? Defaults to `true`.
        /// </summary>
        [Input("rootAccessEnabled")]
        public Input<bool>? RootAccessEnabled { get; set; }

        /// <summary>
        /// The index number of the rule, must start at 1 and maximum 5.
        /// </summary>
        [Input("ruleIndex", required: true)]
        public Input<int> RuleIndex { get; set; } = null!;

        /// <summary>
        /// Is the file system on unix read only? Defaults to `false.
        /// </summary>
        [Input("unixReadOnly")]
        public Input<bool>? UnixReadOnly { get; set; }

        /// <summary>
        /// Is the file system on unix read and write? Defaults to `true`.
        /// </summary>
        [Input("unixReadWrite")]
        public Input<bool>? UnixReadWrite { get; set; }

        public VolumeGroupSapHanaVolumeExportPolicyRuleGetArgs()
        {
        }
        public static new VolumeGroupSapHanaVolumeExportPolicyRuleGetArgs Empty => new VolumeGroupSapHanaVolumeExportPolicyRuleGetArgs();
    }
}
