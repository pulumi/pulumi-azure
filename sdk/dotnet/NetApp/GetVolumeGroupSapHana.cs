// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.NetApp
{
    public static class GetVolumeGroupSapHana
    {
        /// <summary>
        /// Use this data source to access information about an existing Application Volume Group for SAP HANA application.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Azure = Pulumi.Azure;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Azure.NetApp.GetVolumeGroupSapHana.Invoke(new()
        ///     {
        ///         Name = "existing application volume group name",
        ///         ResourceGroupName = "resource group name where the account and volume group belong to",
        ///         AccountName = "existing account where the application volume group belong to",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["id"] = example.Apply(getVolumeGroupSapHanaResult =&gt; getVolumeGroupSapHanaResult.Id),
        ///     };
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetVolumeGroupSapHanaResult> InvokeAsync(GetVolumeGroupSapHanaArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetVolumeGroupSapHanaResult>("azure:netapp/getVolumeGroupSapHana:getVolumeGroupSapHana", args ?? new GetVolumeGroupSapHanaArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to access information about an existing Application Volume Group for SAP HANA application.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Azure = Pulumi.Azure;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Azure.NetApp.GetVolumeGroupSapHana.Invoke(new()
        ///     {
        ///         Name = "existing application volume group name",
        ///         ResourceGroupName = "resource group name where the account and volume group belong to",
        ///         AccountName = "existing account where the application volume group belong to",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["id"] = example.Apply(getVolumeGroupSapHanaResult =&gt; getVolumeGroupSapHanaResult.Id),
        ///     };
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetVolumeGroupSapHanaResult> Invoke(GetVolumeGroupSapHanaInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetVolumeGroupSapHanaResult>("azure:netapp/getVolumeGroupSapHana:getVolumeGroupSapHana", args ?? new GetVolumeGroupSapHanaInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetVolumeGroupSapHanaArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the account where the application volume group belong to.
        /// </summary>
        [Input("accountName", required: true)]
        public string AccountName { get; set; } = null!;

        /// <summary>
        /// The name of this Application Volume Group for SAP HANA application.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        /// <summary>
        /// The name of the Resource Group where the Application Volume Group exists.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetVolumeGroupSapHanaArgs()
        {
        }
        public static new GetVolumeGroupSapHanaArgs Empty => new GetVolumeGroupSapHanaArgs();
    }

    public sealed class GetVolumeGroupSapHanaInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the account where the application volume group belong to.
        /// </summary>
        [Input("accountName", required: true)]
        public Input<string> AccountName { get; set; } = null!;

        /// <summary>
        /// The name of this Application Volume Group for SAP HANA application.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// The name of the Resource Group where the Application Volume Group exists.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetVolumeGroupSapHanaInvokeArgs()
        {
        }
        public static new GetVolumeGroupSapHanaInvokeArgs Empty => new GetVolumeGroupSapHanaInvokeArgs();
    }


    [OutputType]
    public sealed class GetVolumeGroupSapHanaResult
    {
        public readonly string AccountName;
        /// <summary>
        /// The application identifier.
        /// </summary>
        public readonly string ApplicationIdentifier;
        /// <summary>
        /// Volume group description.
        /// </summary>
        public readonly string GroupDescription;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The Azure Region where the Application Volume Group exists.
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// The name of this volume.
        /// </summary>
        public readonly string Name;
        public readonly string ResourceGroupName;
        /// <summary>
        /// A `volume` block as defined below.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetVolumeGroupSapHanaVolumeResult> Volumes;

        [OutputConstructor]
        private GetVolumeGroupSapHanaResult(
            string accountName,

            string applicationIdentifier,

            string groupDescription,

            string id,

            string location,

            string name,

            string resourceGroupName,

            ImmutableArray<Outputs.GetVolumeGroupSapHanaVolumeResult> volumes)
        {
            AccountName = accountName;
            ApplicationIdentifier = applicationIdentifier;
            GroupDescription = groupDescription;
            Id = id;
            Location = location;
            Name = name;
            ResourceGroupName = resourceGroupName;
            Volumes = volumes;
        }
    }
}
