// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.NetApp
{
    /// <summary>
    /// Manages a NetApp Account Encryption Resource.
    /// 
    /// For more information about Azure NetApp Files Customer-Managed Keys feature, please refer to [Configure customer-managed keys for Azure NetApp Files volume encryption](https://learn.microsoft.com/en-us/azure/azure-netapp-files/configure-customer-managed-keys)
    /// 
    /// ## Import
    /// 
    /// Account Encryption Resources can be imported using the `resource id`, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import azure:netapp/accountEncryption:AccountEncryption example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.NetApp/netAppAccounts/account1
    /// ```
    /// </summary>
    [AzureResourceType("azure:netapp/accountEncryption:AccountEncryption")]
    public partial class AccountEncryption : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The versionless encryption key url.
        /// </summary>
        [Output("encryptionKey")]
        public Output<string> EncryptionKey { get; private set; } = null!;

        /// <summary>
        /// The ID of the NetApp account where volume under it will have customer managed keys-based encryption enabled.
        /// </summary>
        [Output("netappAccountId")]
        public Output<string> NetappAccountId { get; private set; } = null!;

        /// <summary>
        /// The ID of the System Assigned Manged Identity. Conflicts with `user_assigned_identity_id`.
        /// </summary>
        [Output("systemAssignedIdentityPrincipalId")]
        public Output<string?> SystemAssignedIdentityPrincipalId { get; private set; } = null!;

        /// <summary>
        /// The ID of the User Assigned Managed Identity. Conflicts with `system_assigned_identity_principal_id`.
        /// </summary>
        [Output("userAssignedIdentityId")]
        public Output<string?> UserAssignedIdentityId { get; private set; } = null!;


        /// <summary>
        /// Create a AccountEncryption resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public AccountEncryption(string name, AccountEncryptionArgs args, CustomResourceOptions? options = null)
            : base("azure:netapp/accountEncryption:AccountEncryption", name, args ?? new AccountEncryptionArgs(), MakeResourceOptions(options, ""))
        {
        }

        private AccountEncryption(string name, Input<string> id, AccountEncryptionState? state = null, CustomResourceOptions? options = null)
            : base("azure:netapp/accountEncryption:AccountEncryption", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing AccountEncryption resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static AccountEncryption Get(string name, Input<string> id, AccountEncryptionState? state = null, CustomResourceOptions? options = null)
        {
            return new AccountEncryption(name, id, state, options);
        }
    }

    public sealed class AccountEncryptionArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The versionless encryption key url.
        /// </summary>
        [Input("encryptionKey", required: true)]
        public Input<string> EncryptionKey { get; set; } = null!;

        /// <summary>
        /// The ID of the NetApp account where volume under it will have customer managed keys-based encryption enabled.
        /// </summary>
        [Input("netappAccountId", required: true)]
        public Input<string> NetappAccountId { get; set; } = null!;

        /// <summary>
        /// The ID of the System Assigned Manged Identity. Conflicts with `user_assigned_identity_id`.
        /// </summary>
        [Input("systemAssignedIdentityPrincipalId")]
        public Input<string>? SystemAssignedIdentityPrincipalId { get; set; }

        /// <summary>
        /// The ID of the User Assigned Managed Identity. Conflicts with `system_assigned_identity_principal_id`.
        /// </summary>
        [Input("userAssignedIdentityId")]
        public Input<string>? UserAssignedIdentityId { get; set; }

        public AccountEncryptionArgs()
        {
        }
        public static new AccountEncryptionArgs Empty => new AccountEncryptionArgs();
    }

    public sealed class AccountEncryptionState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The versionless encryption key url.
        /// </summary>
        [Input("encryptionKey")]
        public Input<string>? EncryptionKey { get; set; }

        /// <summary>
        /// The ID of the NetApp account where volume under it will have customer managed keys-based encryption enabled.
        /// </summary>
        [Input("netappAccountId")]
        public Input<string>? NetappAccountId { get; set; }

        /// <summary>
        /// The ID of the System Assigned Manged Identity. Conflicts with `user_assigned_identity_id`.
        /// </summary>
        [Input("systemAssignedIdentityPrincipalId")]
        public Input<string>? SystemAssignedIdentityPrincipalId { get; set; }

        /// <summary>
        /// The ID of the User Assigned Managed Identity. Conflicts with `system_assigned_identity_principal_id`.
        /// </summary>
        [Input("userAssignedIdentityId")]
        public Input<string>? UserAssignedIdentityId { get; set; }

        public AccountEncryptionState()
        {
        }
        public static new AccountEncryptionState Empty => new AccountEncryptionState();
    }
}
