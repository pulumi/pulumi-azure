// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.NetApp
{
    public static class GetVolumeQuotaRule
    {
        /// <summary>
        /// Use this data source to access information about an existing Volume Quota Rule.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Azure = Pulumi.Azure;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Azure.NetApp.GetVolumeQuotaRule.Invoke(new()
        ///     {
        ///         Name = "exampleQuotaRule",
        ///         VolumeId = "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg1/providers/Microsoft.NetApp/netAppAccounts/account1/capacityPools/pool1/volumes/vol1",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["id"] = example.Apply(getVolumeQuotaRuleResult =&gt; getVolumeQuotaRuleResult.Id),
        ///     };
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetVolumeQuotaRuleResult> InvokeAsync(GetVolumeQuotaRuleArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetVolumeQuotaRuleResult>("azure:netapp/getVolumeQuotaRule:getVolumeQuotaRule", args ?? new GetVolumeQuotaRuleArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to access information about an existing Volume Quota Rule.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Azure = Pulumi.Azure;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Azure.NetApp.GetVolumeQuotaRule.Invoke(new()
        ///     {
        ///         Name = "exampleQuotaRule",
        ///         VolumeId = "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg1/providers/Microsoft.NetApp/netAppAccounts/account1/capacityPools/pool1/volumes/vol1",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["id"] = example.Apply(getVolumeQuotaRuleResult =&gt; getVolumeQuotaRuleResult.Id),
        ///     };
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetVolumeQuotaRuleResult> Invoke(GetVolumeQuotaRuleInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetVolumeQuotaRuleResult>("azure:netapp/getVolumeQuotaRule:getVolumeQuotaRule", args ?? new GetVolumeQuotaRuleInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetVolumeQuotaRuleArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of this Volume Quota Rule.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        /// <summary>
        /// The NetApp volume ID where the Volume Quota Rule is assigned to.
        /// </summary>
        [Input("volumeId", required: true)]
        public string VolumeId { get; set; } = null!;

        public GetVolumeQuotaRuleArgs()
        {
        }
        public static new GetVolumeQuotaRuleArgs Empty => new GetVolumeQuotaRuleArgs();
    }

    public sealed class GetVolumeQuotaRuleInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of this Volume Quota Rule.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// The NetApp volume ID where the Volume Quota Rule is assigned to.
        /// </summary>
        [Input("volumeId", required: true)]
        public Input<string> VolumeId { get; set; } = null!;

        public GetVolumeQuotaRuleInvokeArgs()
        {
        }
        public static new GetVolumeQuotaRuleInvokeArgs Empty => new GetVolumeQuotaRuleInvokeArgs();
    }


    [OutputType]
    public sealed class GetVolumeQuotaRuleResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The Azure Region where the Volume Quota Rule exists.
        /// </summary>
        public readonly string Location;
        public readonly string Name;
        /// <summary>
        /// The quota size in kibibytes.
        /// </summary>
        public readonly int QuotaSizeInKib;
        /// <summary>
        /// The quota Target.
        /// </summary>
        public readonly string QuotaTarget;
        /// <summary>
        /// The quota type.
        /// </summary>
        public readonly string QuotaType;
        public readonly string VolumeId;

        [OutputConstructor]
        private GetVolumeQuotaRuleResult(
            string id,

            string location,

            string name,

            int quotaSizeInKib,

            string quotaTarget,

            string quotaType,

            string volumeId)
        {
            Id = id;
            Location = location;
            Name = name;
            QuotaSizeInKib = quotaSizeInKib;
            QuotaTarget = quotaTarget;
            QuotaType = quotaType;
            VolumeId = volumeId;
        }
    }
}
