// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.NetApp.Outputs
{

    [OutputType]
    public sealed class VolumeExportPolicyRule
    {
        /// <summary>
        /// A list of allowed clients IPv4 addresses.
        /// </summary>
        public readonly ImmutableArray<string> AllowedClients;
        /// <summary>
        /// Is the CIFS protocol allowed?
        /// </summary>
        public readonly bool? CifsEnabled;
        /// <summary>
        /// Is the NFSv3 protocol allowed?
        /// </summary>
        public readonly bool? Nfsv3Enabled;
        /// <summary>
        /// Is the NFSv4 protocol allowed?
        /// </summary>
        public readonly bool? Nfsv4Enabled;
        /// <summary>
        /// A list of allowed protocols. Valid values include `CIFS`, `NFSv3`, or `NFSv4.1`. Only one value is supported at this time. This replaces the previous arguments: `cifs_enabled`, `nfsv3_enabled` and `nfsv4_enabled`.
        /// </summary>
        public readonly string? ProtocolsEnabled;
        /// <summary>
        /// The index number of the rule.
        /// </summary>
        public readonly int RuleIndex;
        /// <summary>
        /// Is the file system on unix read only?
        /// </summary>
        public readonly bool? UnixReadOnly;
        /// <summary>
        /// Is the file system on unix read and write?
        /// </summary>
        public readonly bool? UnixReadWrite;

        [OutputConstructor]
        private VolumeExportPolicyRule(
            ImmutableArray<string> allowedClients,

            bool? cifsEnabled,

            bool? nfsv3Enabled,

            bool? nfsv4Enabled,

            string? protocolsEnabled,

            int ruleIndex,

            bool? unixReadOnly,

            bool? unixReadWrite)
        {
            AllowedClients = allowedClients;
            CifsEnabled = cifsEnabled;
            Nfsv3Enabled = nfsv3Enabled;
            Nfsv4Enabled = nfsv4Enabled;
            ProtocolsEnabled = protocolsEnabled;
            RuleIndex = ruleIndex;
            UnixReadOnly = unixReadOnly;
            UnixReadWrite = unixReadWrite;
        }
    }
}
