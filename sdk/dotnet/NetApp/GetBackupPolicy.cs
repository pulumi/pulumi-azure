// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.NetApp
{
    public static class GetBackupPolicy
    {
        /// <summary>
        /// Use this data source to access information about an existing NetApp Backup Vault.
        /// 
        /// ## NetApp Backup Policy Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Azure = Pulumi.Azure;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Azure.NetApp.GetBackupPolicy.Invoke(new()
        ///     {
        ///         ResourceGroupName = "example-resource-group",
        ///         AccountName = "example-netappaccount",
        ///         Name = "example-backuppolicy",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["backupPolicyId"] = example.Apply(getBackupPolicyResult =&gt; getBackupPolicyResult.Id),
        ///     };
        /// });
        /// ```
        /// 
        /// ## API Providers
        /// 
        /// &lt;!-- This section is generated, changes will be overwritten --&gt;
        /// This data source uses the following Azure API Providers:
        /// 
        /// * `Microsoft.NetApp` - 2025-06-01
        /// </summary>
        public static Task<GetBackupPolicyResult> InvokeAsync(GetBackupPolicyArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetBackupPolicyResult>("azure:netapp/getBackupPolicy:getBackupPolicy", args ?? new GetBackupPolicyArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to access information about an existing NetApp Backup Vault.
        /// 
        /// ## NetApp Backup Policy Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Azure = Pulumi.Azure;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Azure.NetApp.GetBackupPolicy.Invoke(new()
        ///     {
        ///         ResourceGroupName = "example-resource-group",
        ///         AccountName = "example-netappaccount",
        ///         Name = "example-backuppolicy",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["backupPolicyId"] = example.Apply(getBackupPolicyResult =&gt; getBackupPolicyResult.Id),
        ///     };
        /// });
        /// ```
        /// 
        /// ## API Providers
        /// 
        /// &lt;!-- This section is generated, changes will be overwritten --&gt;
        /// This data source uses the following Azure API Providers:
        /// 
        /// * `Microsoft.NetApp` - 2025-06-01
        /// </summary>
        public static Output<GetBackupPolicyResult> Invoke(GetBackupPolicyInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetBackupPolicyResult>("azure:netapp/getBackupPolicy:getBackupPolicy", args ?? new GetBackupPolicyInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to access information about an existing NetApp Backup Vault.
        /// 
        /// ## NetApp Backup Policy Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Azure = Pulumi.Azure;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Azure.NetApp.GetBackupPolicy.Invoke(new()
        ///     {
        ///         ResourceGroupName = "example-resource-group",
        ///         AccountName = "example-netappaccount",
        ///         Name = "example-backuppolicy",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["backupPolicyId"] = example.Apply(getBackupPolicyResult =&gt; getBackupPolicyResult.Id),
        ///     };
        /// });
        /// ```
        /// 
        /// ## API Providers
        /// 
        /// &lt;!-- This section is generated, changes will be overwritten --&gt;
        /// This data source uses the following Azure API Providers:
        /// 
        /// * `Microsoft.NetApp` - 2025-06-01
        /// </summary>
        public static Output<GetBackupPolicyResult> Invoke(GetBackupPolicyInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetBackupPolicyResult>("azure:netapp/getBackupPolicy:getBackupPolicy", args ?? new GetBackupPolicyInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetBackupPolicyArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the NetApp Account in which the NetApp Policy exists.
        /// </summary>
        [Input("accountName", required: true)]
        public string AccountName { get; set; } = null!;

        /// <summary>
        /// The name of the NetApp Backup Policy.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        /// <summary>
        /// The name of the resource group where the NetApp Backup Policy exists.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetBackupPolicyArgs()
        {
        }
        public static new GetBackupPolicyArgs Empty => new GetBackupPolicyArgs();
    }

    public sealed class GetBackupPolicyInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the NetApp Account in which the NetApp Policy exists.
        /// </summary>
        [Input("accountName", required: true)]
        public Input<string> AccountName { get; set; } = null!;

        /// <summary>
        /// The name of the NetApp Backup Policy.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// The name of the resource group where the NetApp Backup Policy exists.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetBackupPolicyInvokeArgs()
        {
        }
        public static new GetBackupPolicyInvokeArgs Empty => new GetBackupPolicyInvokeArgs();
    }


    [OutputType]
    public sealed class GetBackupPolicyResult
    {
        /// <summary>
        /// The name of the NetApp account in which the NetApp Policy exists.
        /// </summary>
        public readonly string AccountName;
        /// <summary>
        /// The number of daily backups to keep.
        /// </summary>
        public readonly int DailyBackupsToKeep;
        /// <summary>
        /// Whether the Backup Policy is enabled.
        /// </summary>
        public readonly bool Enabled;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// NetApp Backup Policy location.
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// The number of monthly backups to keep.
        /// </summary>
        public readonly int MonthlyBackupsToKeep;
        public readonly string Name;
        public readonly string ResourceGroupName;
        /// <summary>
        /// List of tags assigned to the resource.
        /// </summary>
        public readonly ImmutableDictionary<string, string> Tags;
        /// <summary>
        /// The number of weekly backups to keep.
        /// </summary>
        public readonly int WeeklyBackupsToKeep;

        [OutputConstructor]
        private GetBackupPolicyResult(
            string accountName,

            int dailyBackupsToKeep,

            bool enabled,

            string id,

            string location,

            int monthlyBackupsToKeep,

            string name,

            string resourceGroupName,

            ImmutableDictionary<string, string> tags,

            int weeklyBackupsToKeep)
        {
            AccountName = accountName;
            DailyBackupsToKeep = dailyBackupsToKeep;
            Enabled = enabled;
            Id = id;
            Location = location;
            MonthlyBackupsToKeep = monthlyBackupsToKeep;
            Name = name;
            ResourceGroupName = resourceGroupName;
            Tags = tags;
            WeeklyBackupsToKeep = weeklyBackupsToKeep;
        }
    }
}
