// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.PostgreSql
{
    /// <summary>
    /// Manages a PostgreSQL Flexible Server Backup.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Azure = Pulumi.Azure;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Azure.Core.ResourceGroup("example", new()
    ///     {
    ///         Name = "example-resources",
    ///         Location = "West Europe",
    ///     });
    /// 
    ///     var exampleFlexibleServer = new Azure.PostgreSql.FlexibleServer("example", new()
    ///     {
    ///         Name = "example-fs",
    ///         ResourceGroupName = example.Name,
    ///         Location = example.Location,
    ///         AdministratorLogin = "adminTerraform",
    ///         AdministratorPassword = "QAZwsx123",
    ///         Version = "12",
    ///         SkuName = "GP_Standard_D2s_v3",
    ///         Zone = "2",
    ///     });
    /// 
    ///     var exampleFlexibleServerBackup = new Azure.PostgreSql.FlexibleServerBackup("example", new()
    ///     {
    ///         Name = "example-pfsb",
    ///         ServerId = exampleFlexibleServer.Id,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## API Providers
    /// 
    /// &lt;!-- This section is generated, changes will be overwritten --&gt;
    /// This resource uses the following Azure API Providers:
    /// 
    /// * `Microsoft.DBforPostgreSQL` - 2024-08-01
    /// 
    /// ## Import
    /// 
    /// An existing PostgreSQL Flexible Server Backup can be imported into Pulumi using the `resource id`, e.g.
    /// 
    /// ```sh
    /// $ pulumi import azure:postgresql/flexibleServerBackup:FlexibleServerBackup example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.DBforPostgreSQL/flexibleServers/fs1/backups/backup1
    /// ```
    /// </summary>
    [AzureResourceType("azure:postgresql/flexibleServerBackup:FlexibleServerBackup")]
    public partial class FlexibleServerBackup : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The Time (ISO8601 format) at which the backup was completed.
        /// </summary>
        [Output("completedTime")]
        public Output<string> CompletedTime { get; private set; } = null!;

        /// <summary>
        /// Specifies the name of this PostgreSQL Flexible Server Backup. Changing this forces a new resource to be created.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The ID of the PostgreSQL Flexible Server from which to create this PostgreSQL Flexible Server Backup. Changing this forces a new resource to be created.
        /// </summary>
        [Output("serverId")]
        public Output<string> ServerId { get; private set; } = null!;


        /// <summary>
        /// Create a FlexibleServerBackup resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public FlexibleServerBackup(string name, FlexibleServerBackupArgs args, CustomResourceOptions? options = null)
            : base("azure:postgresql/flexibleServerBackup:FlexibleServerBackup", name, args ?? new FlexibleServerBackupArgs(), MakeResourceOptions(options, ""))
        {
        }

        private FlexibleServerBackup(string name, Input<string> id, FlexibleServerBackupState? state = null, CustomResourceOptions? options = null)
            : base("azure:postgresql/flexibleServerBackup:FlexibleServerBackup", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing FlexibleServerBackup resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static FlexibleServerBackup Get(string name, Input<string> id, FlexibleServerBackupState? state = null, CustomResourceOptions? options = null)
        {
            return new FlexibleServerBackup(name, id, state, options);
        }
    }

    public sealed class FlexibleServerBackupArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies the name of this PostgreSQL Flexible Server Backup. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The ID of the PostgreSQL Flexible Server from which to create this PostgreSQL Flexible Server Backup. Changing this forces a new resource to be created.
        /// </summary>
        [Input("serverId", required: true)]
        public Input<string> ServerId { get; set; } = null!;

        public FlexibleServerBackupArgs()
        {
        }
        public static new FlexibleServerBackupArgs Empty => new FlexibleServerBackupArgs();
    }

    public sealed class FlexibleServerBackupState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The Time (ISO8601 format) at which the backup was completed.
        /// </summary>
        [Input("completedTime")]
        public Input<string>? CompletedTime { get; set; }

        /// <summary>
        /// Specifies the name of this PostgreSQL Flexible Server Backup. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The ID of the PostgreSQL Flexible Server from which to create this PostgreSQL Flexible Server Backup. Changing this forces a new resource to be created.
        /// </summary>
        [Input("serverId")]
        public Input<string>? ServerId { get; set; }

        public FlexibleServerBackupState()
        {
        }
        public static new FlexibleServerBackupState Empty => new FlexibleServerBackupState();
    }
}
