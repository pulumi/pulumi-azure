// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Dns
{
    public static class GetSrvRecord
    {
        /// <summary>
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Azure = Pulumi.Azure;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = new Azure.Dns.SrvRecord("example", new()
        ///     {
        ///         ZoneName = "test-zone",
        ///         ResourceGroupName = "test-rg",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["dnsSrvRecordId"] = example.Id,
        ///     };
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetSrvRecordResult> InvokeAsync(GetSrvRecordArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetSrvRecordResult>("azure:dns/getSrvRecord:getSrvRecord", args ?? new GetSrvRecordArgs(), options.WithDefaults());

        /// <summary>
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Azure = Pulumi.Azure;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = new Azure.Dns.SrvRecord("example", new()
        ///     {
        ///         ZoneName = "test-zone",
        ///         ResourceGroupName = "test-rg",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["dnsSrvRecordId"] = example.Id,
        ///     };
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetSrvRecordResult> Invoke(GetSrvRecordInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetSrvRecordResult>("azure:dns/getSrvRecord:getSrvRecord", args ?? new GetSrvRecordInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSrvRecordArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the DNS SRV Record.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        /// <summary>
        /// Specifies the resource group where the DNS Zone (parent resource) exists.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// Specifies the DNS Zone where the resource exists.
        /// </summary>
        [Input("zoneName", required: true)]
        public string ZoneName { get; set; } = null!;

        public GetSrvRecordArgs()
        {
        }
        public static new GetSrvRecordArgs Empty => new GetSrvRecordArgs();
    }

    public sealed class GetSrvRecordInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the DNS SRV Record.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// Specifies the resource group where the DNS Zone (parent resource) exists.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// Specifies the DNS Zone where the resource exists.
        /// </summary>
        [Input("zoneName", required: true)]
        public Input<string> ZoneName { get; set; } = null!;

        public GetSrvRecordInvokeArgs()
        {
        }
        public static new GetSrvRecordInvokeArgs Empty => new GetSrvRecordInvokeArgs();
    }


    [OutputType]
    public sealed class GetSrvRecordResult
    {
        /// <summary>
        /// The FQDN of the DNS SRV Record.
        /// </summary>
        public readonly string Fqdn;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string Name;
        /// <summary>
        /// A list of values that make up the SRV record. Each `record` block supports fields documented below.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetSrvRecordRecordResult> Records;
        public readonly string ResourceGroupName;
        /// <summary>
        /// A mapping of tags assigned to the resource.
        /// </summary>
        public readonly ImmutableDictionary<string, string> Tags;
        /// <summary>
        /// The Time To Live (TTL) of the DNS record in seconds.
        /// </summary>
        public readonly int Ttl;
        public readonly string ZoneName;

        [OutputConstructor]
        private GetSrvRecordResult(
            string fqdn,

            string id,

            string name,

            ImmutableArray<Outputs.GetSrvRecordRecordResult> records,

            string resourceGroupName,

            ImmutableDictionary<string, string> tags,

            int ttl,

            string zoneName)
        {
            Fqdn = fqdn;
            Id = id;
            Name = name;
            Records = records;
            ResourceGroupName = resourceGroupName;
            Tags = tags;
            Ttl = ttl;
            ZoneName = zoneName;
        }
    }
}
