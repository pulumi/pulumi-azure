// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Containerservice
{
    /// <summary>
    /// Manages a Managed Kubernetes Cluster (also known as AKS / Azure Kubernetes Service)
    /// 
    /// &gt; **Note:** All arguments including the client secret will be stored in the raw state as plain-text. [Read more about sensitive data in state](https://www.terraform.io/docs/state/sensitive-data.html).
    /// 
    /// &gt; This content is derived from https://github.com/terraform-providers/terraform-provider-azurerm/blob/master/website/docs/r/kubernetes_cluster.html.markdown.
    /// </summary>
    public partial class KubernetesCluster : Pulumi.CustomResource
    {
        [Output("addonProfile")]
        public Output<Outputs.KubernetesClusterAddonProfile> AddonProfile { get; private set; } = null!;

        /// <summary>
        /// One or more `agent_pool_profile` blocks as defined below.
        /// </summary>
        [Output("agentPoolProfiles")]
        public Output<ImmutableArray<Outputs.KubernetesClusterAgentPoolProfiles>> AgentPoolProfiles { get; private set; } = null!;

        [Output("apiServerAuthorizedIpRanges")]
        public Output<ImmutableArray<string>> ApiServerAuthorizedIpRanges { get; private set; } = null!;

        /// <summary>
        /// DNS prefix specified when creating the managed cluster. Changing this forces a new resource to be created.
        /// </summary>
        [Output("dnsPrefix")]
        public Output<string> DnsPrefix { get; private set; } = null!;

        [Output("enablePodSecurityPolicy")]
        public Output<bool> EnablePodSecurityPolicy { get; private set; } = null!;

        /// <summary>
        /// The FQDN of the Azure Kubernetes Managed Cluster.
        /// </summary>
        [Output("fqdn")]
        public Output<string> Fqdn { get; private set; } = null!;

        /// <summary>
        /// A `kube_admin_config` block as defined below. This is only available when Role Based Access Control with Azure Active Directory is enabled.
        /// </summary>
        [Output("kubeAdminConfig")]
        public Output<Outputs.KubernetesClusterKubeAdminConfig> KubeAdminConfig { get; private set; } = null!;

        /// <summary>
        /// Raw Kubernetes config for the admin account to be used by [kubectl](https://kubernetes.io/docs/reference/kubectl/overview/) and other compatible tools. This is only available when Role Based Access Control with Azure Active Directory is enabled.
        /// </summary>
        [Output("kubeAdminConfigRaw")]
        public Output<string> KubeAdminConfigRaw { get; private set; } = null!;

        /// <summary>
        /// A `kube_config` block as defined below.
        /// </summary>
        [Output("kubeConfig")]
        public Output<Outputs.KubernetesClusterKubeConfig> KubeConfig { get; private set; } = null!;

        /// <summary>
        /// Raw Kubernetes config to be used by [kubectl](https://kubernetes.io/docs/reference/kubectl/overview/) and other compatible tools
        /// </summary>
        [Output("kubeConfigRaw")]
        public Output<string> KubeConfigRaw { get; private set; } = null!;

        [Output("kubernetesVersion")]
        public Output<string> KubernetesVersion { get; private set; } = null!;

        [Output("linuxProfile")]
        public Output<Outputs.KubernetesClusterLinuxProfile?> LinuxProfile { get; private set; } = null!;

        /// <summary>
        /// The location where the Managed Kubernetes Cluster should be created. Changing this forces a new resource to be created.
        /// </summary>
        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// The name of the Managed Kubernetes Cluster to create. Changing this forces a new resource to be created.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("networkProfile")]
        public Output<Outputs.KubernetesClusterNetworkProfile> NetworkProfile { get; private set; } = null!;

        /// <summary>
        /// The auto-generated Resource Group which contains the resources for this Managed Kubernetes Cluster.
        /// </summary>
        [Output("nodeResourceGroup")]
        public Output<string> NodeResourceGroup { get; private set; } = null!;

        /// <summary>
        /// Specifies the Resource Group where the Managed Kubernetes Cluster should exist. Changing this forces a new resource to be created.
        /// </summary>
        [Output("resourceGroupName")]
        public Output<string> ResourceGroupName { get; private set; } = null!;

        [Output("roleBasedAccessControl")]
        public Output<Outputs.KubernetesClusterRoleBasedAccessControl> RoleBasedAccessControl { get; private set; } = null!;

        /// <summary>
        /// A `service_principal` block as documented below.
        /// </summary>
        [Output("servicePrincipal")]
        public Output<Outputs.KubernetesClusterServicePrincipal> ServicePrincipal { get; private set; } = null!;

        [Output("tags")]
        public Output<ImmutableDictionary<string, object>> Tags { get; private set; } = null!;

        [Output("windowsProfile")]
        public Output<Outputs.KubernetesClusterWindowsProfile?> WindowsProfile { get; private set; } = null!;


        /// <summary>
        /// Create a KubernetesCluster resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public KubernetesCluster(string name, KubernetesClusterArgs args, CustomResourceOptions? options = null)
            : base("azure:containerservice/kubernetesCluster:KubernetesCluster", name, args, MakeResourceOptions(options, ""))
        {
        }

        private KubernetesCluster(string name, Input<string> id, KubernetesClusterState? state = null, CustomResourceOptions? options = null)
            : base("azure:containerservice/kubernetesCluster:KubernetesCluster", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing KubernetesCluster resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static KubernetesCluster Get(string name, Input<string> id, KubernetesClusterState? state = null, CustomResourceOptions? options = null)
        {
            return new KubernetesCluster(name, id, state, options);
        }
    }

    public sealed class KubernetesClusterArgs : Pulumi.ResourceArgs
    {
        [Input("addonProfile")]
        public Input<Inputs.KubernetesClusterAddonProfileArgs>? AddonProfile { get; set; }

        [Input("agentPoolProfiles", required: true)]
        private InputList<Inputs.KubernetesClusterAgentPoolProfilesArgs>? _agentPoolProfiles;

        /// <summary>
        /// One or more `agent_pool_profile` blocks as defined below.
        /// </summary>
        public InputList<Inputs.KubernetesClusterAgentPoolProfilesArgs> AgentPoolProfiles
        {
            get => _agentPoolProfiles ?? (_agentPoolProfiles = new InputList<Inputs.KubernetesClusterAgentPoolProfilesArgs>());
            set => _agentPoolProfiles = value;
        }

        [Input("apiServerAuthorizedIpRanges")]
        private InputList<string>? _apiServerAuthorizedIpRanges;
        public InputList<string> ApiServerAuthorizedIpRanges
        {
            get => _apiServerAuthorizedIpRanges ?? (_apiServerAuthorizedIpRanges = new InputList<string>());
            set => _apiServerAuthorizedIpRanges = value;
        }

        /// <summary>
        /// DNS prefix specified when creating the managed cluster. Changing this forces a new resource to be created.
        /// </summary>
        [Input("dnsPrefix", required: true)]
        public Input<string> DnsPrefix { get; set; } = null!;

        [Input("enablePodSecurityPolicy")]
        public Input<bool>? EnablePodSecurityPolicy { get; set; }

        [Input("kubernetesVersion")]
        public Input<string>? KubernetesVersion { get; set; }

        [Input("linuxProfile")]
        public Input<Inputs.KubernetesClusterLinuxProfileArgs>? LinuxProfile { get; set; }

        /// <summary>
        /// The location where the Managed Kubernetes Cluster should be created. Changing this forces a new resource to be created.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// The name of the Managed Kubernetes Cluster to create. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("networkProfile")]
        public Input<Inputs.KubernetesClusterNetworkProfileArgs>? NetworkProfile { get; set; }

        /// <summary>
        /// The auto-generated Resource Group which contains the resources for this Managed Kubernetes Cluster.
        /// </summary>
        [Input("nodeResourceGroup")]
        public Input<string>? NodeResourceGroup { get; set; }

        /// <summary>
        /// Specifies the Resource Group where the Managed Kubernetes Cluster should exist. Changing this forces a new resource to be created.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        [Input("roleBasedAccessControl")]
        public Input<Inputs.KubernetesClusterRoleBasedAccessControlArgs>? RoleBasedAccessControl { get; set; }

        /// <summary>
        /// A `service_principal` block as documented below.
        /// </summary>
        [Input("servicePrincipal", required: true)]
        public Input<Inputs.KubernetesClusterServicePrincipalArgs> ServicePrincipal { get; set; } = null!;

        [Input("tags")]
        private InputMap<object>? _tags;
        public InputMap<object> Tags
        {
            get => _tags ?? (_tags = new InputMap<object>());
            set => _tags = value;
        }

        [Input("windowsProfile")]
        public Input<Inputs.KubernetesClusterWindowsProfileArgs>? WindowsProfile { get; set; }

        public KubernetesClusterArgs()
        {
        }
    }

    public sealed class KubernetesClusterState : Pulumi.ResourceArgs
    {
        [Input("addonProfile")]
        public Input<Inputs.KubernetesClusterAddonProfileGetArgs>? AddonProfile { get; set; }

        [Input("agentPoolProfiles")]
        private InputList<Inputs.KubernetesClusterAgentPoolProfilesGetArgs>? _agentPoolProfiles;

        /// <summary>
        /// One or more `agent_pool_profile` blocks as defined below.
        /// </summary>
        public InputList<Inputs.KubernetesClusterAgentPoolProfilesGetArgs> AgentPoolProfiles
        {
            get => _agentPoolProfiles ?? (_agentPoolProfiles = new InputList<Inputs.KubernetesClusterAgentPoolProfilesGetArgs>());
            set => _agentPoolProfiles = value;
        }

        [Input("apiServerAuthorizedIpRanges")]
        private InputList<string>? _apiServerAuthorizedIpRanges;
        public InputList<string> ApiServerAuthorizedIpRanges
        {
            get => _apiServerAuthorizedIpRanges ?? (_apiServerAuthorizedIpRanges = new InputList<string>());
            set => _apiServerAuthorizedIpRanges = value;
        }

        /// <summary>
        /// DNS prefix specified when creating the managed cluster. Changing this forces a new resource to be created.
        /// </summary>
        [Input("dnsPrefix")]
        public Input<string>? DnsPrefix { get; set; }

        [Input("enablePodSecurityPolicy")]
        public Input<bool>? EnablePodSecurityPolicy { get; set; }

        /// <summary>
        /// The FQDN of the Azure Kubernetes Managed Cluster.
        /// </summary>
        [Input("fqdn")]
        public Input<string>? Fqdn { get; set; }

        /// <summary>
        /// A `kube_admin_config` block as defined below. This is only available when Role Based Access Control with Azure Active Directory is enabled.
        /// </summary>
        [Input("kubeAdminConfig")]
        public Input<Inputs.KubernetesClusterKubeAdminConfigGetArgs>? KubeAdminConfig { get; set; }

        /// <summary>
        /// Raw Kubernetes config for the admin account to be used by [kubectl](https://kubernetes.io/docs/reference/kubectl/overview/) and other compatible tools. This is only available when Role Based Access Control with Azure Active Directory is enabled.
        /// </summary>
        [Input("kubeAdminConfigRaw")]
        public Input<string>? KubeAdminConfigRaw { get; set; }

        /// <summary>
        /// A `kube_config` block as defined below.
        /// </summary>
        [Input("kubeConfig")]
        public Input<Inputs.KubernetesClusterKubeConfigGetArgs>? KubeConfig { get; set; }

        /// <summary>
        /// Raw Kubernetes config to be used by [kubectl](https://kubernetes.io/docs/reference/kubectl/overview/) and other compatible tools
        /// </summary>
        [Input("kubeConfigRaw")]
        public Input<string>? KubeConfigRaw { get; set; }

        [Input("kubernetesVersion")]
        public Input<string>? KubernetesVersion { get; set; }

        [Input("linuxProfile")]
        public Input<Inputs.KubernetesClusterLinuxProfileGetArgs>? LinuxProfile { get; set; }

        /// <summary>
        /// The location where the Managed Kubernetes Cluster should be created. Changing this forces a new resource to be created.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// The name of the Managed Kubernetes Cluster to create. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("networkProfile")]
        public Input<Inputs.KubernetesClusterNetworkProfileGetArgs>? NetworkProfile { get; set; }

        /// <summary>
        /// The auto-generated Resource Group which contains the resources for this Managed Kubernetes Cluster.
        /// </summary>
        [Input("nodeResourceGroup")]
        public Input<string>? NodeResourceGroup { get; set; }

        /// <summary>
        /// Specifies the Resource Group where the Managed Kubernetes Cluster should exist. Changing this forces a new resource to be created.
        /// </summary>
        [Input("resourceGroupName")]
        public Input<string>? ResourceGroupName { get; set; }

        [Input("roleBasedAccessControl")]
        public Input<Inputs.KubernetesClusterRoleBasedAccessControlGetArgs>? RoleBasedAccessControl { get; set; }

        /// <summary>
        /// A `service_principal` block as documented below.
        /// </summary>
        [Input("servicePrincipal")]
        public Input<Inputs.KubernetesClusterServicePrincipalGetArgs>? ServicePrincipal { get; set; }

        [Input("tags")]
        private InputMap<object>? _tags;
        public InputMap<object> Tags
        {
            get => _tags ?? (_tags = new InputMap<object>());
            set => _tags = value;
        }

        [Input("windowsProfile")]
        public Input<Inputs.KubernetesClusterWindowsProfileGetArgs>? WindowsProfile { get; set; }

        public KubernetesClusterState()
        {
        }
    }

    namespace Inputs
    {

    public sealed class KubernetesClusterAddonProfileAciConnectorLinuxArgs : Pulumi.ResourceArgs
    {
        [Input("enabled", required: true)]
        public Input<bool> Enabled { get; set; } = null!;

        [Input("subnetName")]
        public Input<string>? SubnetName { get; set; }

        public KubernetesClusterAddonProfileAciConnectorLinuxArgs()
        {
        }
    }

    public sealed class KubernetesClusterAddonProfileAciConnectorLinuxGetArgs : Pulumi.ResourceArgs
    {
        [Input("enabled", required: true)]
        public Input<bool> Enabled { get; set; } = null!;

        [Input("subnetName")]
        public Input<string>? SubnetName { get; set; }

        public KubernetesClusterAddonProfileAciConnectorLinuxGetArgs()
        {
        }
    }

    public sealed class KubernetesClusterAddonProfileArgs : Pulumi.ResourceArgs
    {
        [Input("aciConnectorLinux")]
        public Input<KubernetesClusterAddonProfileAciConnectorLinuxArgs>? AciConnectorLinux { get; set; }

        [Input("azurePolicy")]
        public Input<KubernetesClusterAddonProfileAzurePolicyArgs>? AzurePolicy { get; set; }

        /// <summary>
        /// A `http_application_routing` block as defined below.
        /// </summary>
        [Input("httpApplicationRouting")]
        public Input<KubernetesClusterAddonProfileHttpApplicationRoutingArgs>? HttpApplicationRouting { get; set; }

        [Input("kubeDashboard")]
        public Input<KubernetesClusterAddonProfileKubeDashboardArgs>? KubeDashboard { get; set; }

        [Input("omsAgent")]
        public Input<KubernetesClusterAddonProfileOmsAgentArgs>? OmsAgent { get; set; }

        public KubernetesClusterAddonProfileArgs()
        {
        }
    }

    public sealed class KubernetesClusterAddonProfileAzurePolicyArgs : Pulumi.ResourceArgs
    {
        [Input("enabled", required: true)]
        public Input<bool> Enabled { get; set; } = null!;

        public KubernetesClusterAddonProfileAzurePolicyArgs()
        {
        }
    }

    public sealed class KubernetesClusterAddonProfileAzurePolicyGetArgs : Pulumi.ResourceArgs
    {
        [Input("enabled", required: true)]
        public Input<bool> Enabled { get; set; } = null!;

        public KubernetesClusterAddonProfileAzurePolicyGetArgs()
        {
        }
    }

    public sealed class KubernetesClusterAddonProfileGetArgs : Pulumi.ResourceArgs
    {
        [Input("aciConnectorLinux")]
        public Input<KubernetesClusterAddonProfileAciConnectorLinuxGetArgs>? AciConnectorLinux { get; set; }

        [Input("azurePolicy")]
        public Input<KubernetesClusterAddonProfileAzurePolicyGetArgs>? AzurePolicy { get; set; }

        /// <summary>
        /// A `http_application_routing` block as defined below.
        /// </summary>
        [Input("httpApplicationRouting")]
        public Input<KubernetesClusterAddonProfileHttpApplicationRoutingGetArgs>? HttpApplicationRouting { get; set; }

        [Input("kubeDashboard")]
        public Input<KubernetesClusterAddonProfileKubeDashboardGetArgs>? KubeDashboard { get; set; }

        [Input("omsAgent")]
        public Input<KubernetesClusterAddonProfileOmsAgentGetArgs>? OmsAgent { get; set; }

        public KubernetesClusterAddonProfileGetArgs()
        {
        }
    }

    public sealed class KubernetesClusterAddonProfileHttpApplicationRoutingArgs : Pulumi.ResourceArgs
    {
        [Input("enabled", required: true)]
        public Input<bool> Enabled { get; set; } = null!;

        /// <summary>
        /// The Zone Name of the HTTP Application Routing.
        /// </summary>
        [Input("httpApplicationRoutingZoneName")]
        public Input<string>? HttpApplicationRoutingZoneName { get; set; }

        public KubernetesClusterAddonProfileHttpApplicationRoutingArgs()
        {
        }
    }

    public sealed class KubernetesClusterAddonProfileHttpApplicationRoutingGetArgs : Pulumi.ResourceArgs
    {
        [Input("enabled", required: true)]
        public Input<bool> Enabled { get; set; } = null!;

        /// <summary>
        /// The Zone Name of the HTTP Application Routing.
        /// </summary>
        [Input("httpApplicationRoutingZoneName")]
        public Input<string>? HttpApplicationRoutingZoneName { get; set; }

        public KubernetesClusterAddonProfileHttpApplicationRoutingGetArgs()
        {
        }
    }

    public sealed class KubernetesClusterAddonProfileKubeDashboardArgs : Pulumi.ResourceArgs
    {
        [Input("enabled", required: true)]
        public Input<bool> Enabled { get; set; } = null!;

        public KubernetesClusterAddonProfileKubeDashboardArgs()
        {
        }
    }

    public sealed class KubernetesClusterAddonProfileKubeDashboardGetArgs : Pulumi.ResourceArgs
    {
        [Input("enabled", required: true)]
        public Input<bool> Enabled { get; set; } = null!;

        public KubernetesClusterAddonProfileKubeDashboardGetArgs()
        {
        }
    }

    public sealed class KubernetesClusterAddonProfileOmsAgentArgs : Pulumi.ResourceArgs
    {
        [Input("enabled", required: true)]
        public Input<bool> Enabled { get; set; } = null!;

        [Input("logAnalyticsWorkspaceId")]
        public Input<string>? LogAnalyticsWorkspaceId { get; set; }

        public KubernetesClusterAddonProfileOmsAgentArgs()
        {
        }
    }

    public sealed class KubernetesClusterAddonProfileOmsAgentGetArgs : Pulumi.ResourceArgs
    {
        [Input("enabled", required: true)]
        public Input<bool> Enabled { get; set; } = null!;

        [Input("logAnalyticsWorkspaceId")]
        public Input<string>? LogAnalyticsWorkspaceId { get; set; }

        public KubernetesClusterAddonProfileOmsAgentGetArgs()
        {
        }
    }

    public sealed class KubernetesClusterAgentPoolProfilesArgs : Pulumi.ResourceArgs
    {
        [Input("availabilityZones")]
        private InputList<string>? _availabilityZones;
        public InputList<string> AvailabilityZones
        {
            get => _availabilityZones ?? (_availabilityZones = new InputList<string>());
            set => _availabilityZones = value;
        }

        [Input("count")]
        public Input<int>? Count { get; set; }

        /// <summary>
        /// DNS prefix specified when creating the managed cluster. Changing this forces a new resource to be created.
        /// </summary>
        [Input("dnsPrefix")]
        public Input<string>? DnsPrefix { get; set; }

        [Input("enableAutoScaling")]
        public Input<bool>? EnableAutoScaling { get; set; }

        /// <summary>
        /// The FQDN of the Azure Kubernetes Managed Cluster.
        /// </summary>
        [Input("fqdn")]
        public Input<string>? Fqdn { get; set; }

        [Input("maxCount")]
        public Input<int>? MaxCount { get; set; }

        [Input("maxPods")]
        public Input<int>? MaxPods { get; set; }

        [Input("minCount")]
        public Input<int>? MinCount { get; set; }

        /// <summary>
        /// The name of the Managed Kubernetes Cluster to create. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        [Input("nodeTaints")]
        private InputList<string>? _nodeTaints;
        public InputList<string> NodeTaints
        {
            get => _nodeTaints ?? (_nodeTaints = new InputList<string>());
            set => _nodeTaints = value;
        }

        [Input("osDiskSizeGb")]
        public Input<int>? OsDiskSizeGb { get; set; }

        [Input("osType")]
        public Input<string>? OsType { get; set; }

        [Input("type")]
        public Input<string>? Type { get; set; }

        [Input("vmSize", required: true)]
        public Input<string> VmSize { get; set; } = null!;

        [Input("vnetSubnetId")]
        public Input<string>? VnetSubnetId { get; set; }

        public KubernetesClusterAgentPoolProfilesArgs()
        {
        }
    }

    public sealed class KubernetesClusterAgentPoolProfilesGetArgs : Pulumi.ResourceArgs
    {
        [Input("availabilityZones")]
        private InputList<string>? _availabilityZones;
        public InputList<string> AvailabilityZones
        {
            get => _availabilityZones ?? (_availabilityZones = new InputList<string>());
            set => _availabilityZones = value;
        }

        [Input("count")]
        public Input<int>? Count { get; set; }

        /// <summary>
        /// DNS prefix specified when creating the managed cluster. Changing this forces a new resource to be created.
        /// </summary>
        [Input("dnsPrefix")]
        public Input<string>? DnsPrefix { get; set; }

        [Input("enableAutoScaling")]
        public Input<bool>? EnableAutoScaling { get; set; }

        /// <summary>
        /// The FQDN of the Azure Kubernetes Managed Cluster.
        /// </summary>
        [Input("fqdn")]
        public Input<string>? Fqdn { get; set; }

        [Input("maxCount")]
        public Input<int>? MaxCount { get; set; }

        [Input("maxPods")]
        public Input<int>? MaxPods { get; set; }

        [Input("minCount")]
        public Input<int>? MinCount { get; set; }

        /// <summary>
        /// The name of the Managed Kubernetes Cluster to create. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        [Input("nodeTaints")]
        private InputList<string>? _nodeTaints;
        public InputList<string> NodeTaints
        {
            get => _nodeTaints ?? (_nodeTaints = new InputList<string>());
            set => _nodeTaints = value;
        }

        [Input("osDiskSizeGb")]
        public Input<int>? OsDiskSizeGb { get; set; }

        [Input("osType")]
        public Input<string>? OsType { get; set; }

        [Input("type")]
        public Input<string>? Type { get; set; }

        [Input("vmSize", required: true)]
        public Input<string> VmSize { get; set; } = null!;

        [Input("vnetSubnetId")]
        public Input<string>? VnetSubnetId { get; set; }

        public KubernetesClusterAgentPoolProfilesGetArgs()
        {
        }
    }

    public sealed class KubernetesClusterKubeAdminConfigGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Base64 encoded public certificate used by clients to authenticate to the Kubernetes cluster.
        /// </summary>
        [Input("clientCertificate")]
        public Input<string>? ClientCertificate { get; set; }

        /// <summary>
        /// Base64 encoded private key used by clients to authenticate to the Kubernetes cluster.
        /// </summary>
        [Input("clientKey")]
        public Input<string>? ClientKey { get; set; }

        /// <summary>
        /// Base64 encoded public CA certificate used as the root of trust for the Kubernetes cluster.
        /// </summary>
        [Input("clusterCaCertificate")]
        public Input<string>? ClusterCaCertificate { get; set; }

        /// <summary>
        /// The Kubernetes cluster server host.
        /// </summary>
        [Input("host")]
        public Input<string>? Host { get; set; }

        /// <summary>
        /// A password or token used to authenticate to the Kubernetes cluster.
        /// </summary>
        [Input("password")]
        public Input<string>? Password { get; set; }

        /// <summary>
        /// A username used to authenticate to the Kubernetes cluster.
        /// </summary>
        [Input("username")]
        public Input<string>? Username { get; set; }

        public KubernetesClusterKubeAdminConfigGetArgs()
        {
        }
    }

    public sealed class KubernetesClusterKubeConfigGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Base64 encoded public certificate used by clients to authenticate to the Kubernetes cluster.
        /// </summary>
        [Input("clientCertificate")]
        public Input<string>? ClientCertificate { get; set; }

        /// <summary>
        /// Base64 encoded private key used by clients to authenticate to the Kubernetes cluster.
        /// </summary>
        [Input("clientKey")]
        public Input<string>? ClientKey { get; set; }

        /// <summary>
        /// Base64 encoded public CA certificate used as the root of trust for the Kubernetes cluster.
        /// </summary>
        [Input("clusterCaCertificate")]
        public Input<string>? ClusterCaCertificate { get; set; }

        /// <summary>
        /// The Kubernetes cluster server host.
        /// </summary>
        [Input("host")]
        public Input<string>? Host { get; set; }

        /// <summary>
        /// A password or token used to authenticate to the Kubernetes cluster.
        /// </summary>
        [Input("password")]
        public Input<string>? Password { get; set; }

        /// <summary>
        /// A username used to authenticate to the Kubernetes cluster.
        /// </summary>
        [Input("username")]
        public Input<string>? Username { get; set; }

        public KubernetesClusterKubeConfigGetArgs()
        {
        }
    }

    public sealed class KubernetesClusterLinuxProfileArgs : Pulumi.ResourceArgs
    {
        [Input("adminUsername", required: true)]
        public Input<string> AdminUsername { get; set; } = null!;

        [Input("sshKey", required: true)]
        public Input<KubernetesClusterLinuxProfileSshKeyArgs> SshKey { get; set; } = null!;

        public KubernetesClusterLinuxProfileArgs()
        {
        }
    }

    public sealed class KubernetesClusterLinuxProfileGetArgs : Pulumi.ResourceArgs
    {
        [Input("adminUsername", required: true)]
        public Input<string> AdminUsername { get; set; } = null!;

        [Input("sshKey", required: true)]
        public Input<KubernetesClusterLinuxProfileSshKeyGetArgs> SshKey { get; set; } = null!;

        public KubernetesClusterLinuxProfileGetArgs()
        {
        }
    }

    public sealed class KubernetesClusterLinuxProfileSshKeyArgs : Pulumi.ResourceArgs
    {
        [Input("keyData", required: true)]
        public Input<string> KeyData { get; set; } = null!;

        public KubernetesClusterLinuxProfileSshKeyArgs()
        {
        }
    }

    public sealed class KubernetesClusterLinuxProfileSshKeyGetArgs : Pulumi.ResourceArgs
    {
        [Input("keyData", required: true)]
        public Input<string> KeyData { get; set; } = null!;

        public KubernetesClusterLinuxProfileSshKeyGetArgs()
        {
        }
    }

    public sealed class KubernetesClusterNetworkProfileArgs : Pulumi.ResourceArgs
    {
        [Input("dnsServiceIp")]
        public Input<string>? DnsServiceIp { get; set; }

        [Input("dockerBridgeCidr")]
        public Input<string>? DockerBridgeCidr { get; set; }

        [Input("loadBalancerSku")]
        public Input<string>? LoadBalancerSku { get; set; }

        [Input("networkPlugin", required: true)]
        public Input<string> NetworkPlugin { get; set; } = null!;

        [Input("networkPolicy")]
        public Input<string>? NetworkPolicy { get; set; }

        [Input("podCidr")]
        public Input<string>? PodCidr { get; set; }

        [Input("serviceCidr")]
        public Input<string>? ServiceCidr { get; set; }

        public KubernetesClusterNetworkProfileArgs()
        {
        }
    }

    public sealed class KubernetesClusterNetworkProfileGetArgs : Pulumi.ResourceArgs
    {
        [Input("dnsServiceIp")]
        public Input<string>? DnsServiceIp { get; set; }

        [Input("dockerBridgeCidr")]
        public Input<string>? DockerBridgeCidr { get; set; }

        [Input("loadBalancerSku")]
        public Input<string>? LoadBalancerSku { get; set; }

        [Input("networkPlugin", required: true)]
        public Input<string> NetworkPlugin { get; set; } = null!;

        [Input("networkPolicy")]
        public Input<string>? NetworkPolicy { get; set; }

        [Input("podCidr")]
        public Input<string>? PodCidr { get; set; }

        [Input("serviceCidr")]
        public Input<string>? ServiceCidr { get; set; }

        public KubernetesClusterNetworkProfileGetArgs()
        {
        }
    }

    public sealed class KubernetesClusterRoleBasedAccessControlArgs : Pulumi.ResourceArgs
    {
        [Input("azureActiveDirectory")]
        public Input<KubernetesClusterRoleBasedAccessControlAzureActiveDirectoryArgs>? AzureActiveDirectory { get; set; }

        [Input("enabled", required: true)]
        public Input<bool> Enabled { get; set; } = null!;

        public KubernetesClusterRoleBasedAccessControlArgs()
        {
        }
    }

    public sealed class KubernetesClusterRoleBasedAccessControlAzureActiveDirectoryArgs : Pulumi.ResourceArgs
    {
        [Input("clientAppId", required: true)]
        public Input<string> ClientAppId { get; set; } = null!;

        [Input("serverAppId", required: true)]
        public Input<string> ServerAppId { get; set; } = null!;

        [Input("serverAppSecret", required: true)]
        public Input<string> ServerAppSecret { get; set; } = null!;

        [Input("tenantId")]
        public Input<string>? TenantId { get; set; }

        public KubernetesClusterRoleBasedAccessControlAzureActiveDirectoryArgs()
        {
        }
    }

    public sealed class KubernetesClusterRoleBasedAccessControlAzureActiveDirectoryGetArgs : Pulumi.ResourceArgs
    {
        [Input("clientAppId", required: true)]
        public Input<string> ClientAppId { get; set; } = null!;

        [Input("serverAppId", required: true)]
        public Input<string> ServerAppId { get; set; } = null!;

        [Input("serverAppSecret", required: true)]
        public Input<string> ServerAppSecret { get; set; } = null!;

        [Input("tenantId")]
        public Input<string>? TenantId { get; set; }

        public KubernetesClusterRoleBasedAccessControlAzureActiveDirectoryGetArgs()
        {
        }
    }

    public sealed class KubernetesClusterRoleBasedAccessControlGetArgs : Pulumi.ResourceArgs
    {
        [Input("azureActiveDirectory")]
        public Input<KubernetesClusterRoleBasedAccessControlAzureActiveDirectoryGetArgs>? AzureActiveDirectory { get; set; }

        [Input("enabled", required: true)]
        public Input<bool> Enabled { get; set; } = null!;

        public KubernetesClusterRoleBasedAccessControlGetArgs()
        {
        }
    }

    public sealed class KubernetesClusterServicePrincipalArgs : Pulumi.ResourceArgs
    {
        [Input("clientId", required: true)]
        public Input<string> ClientId { get; set; } = null!;

        [Input("clientSecret", required: true)]
        public Input<string> ClientSecret { get; set; } = null!;

        public KubernetesClusterServicePrincipalArgs()
        {
        }
    }

    public sealed class KubernetesClusterServicePrincipalGetArgs : Pulumi.ResourceArgs
    {
        [Input("clientId", required: true)]
        public Input<string> ClientId { get; set; } = null!;

        [Input("clientSecret", required: true)]
        public Input<string> ClientSecret { get; set; } = null!;

        public KubernetesClusterServicePrincipalGetArgs()
        {
        }
    }

    public sealed class KubernetesClusterWindowsProfileArgs : Pulumi.ResourceArgs
    {
        [Input("adminPassword")]
        public Input<string>? AdminPassword { get; set; }

        [Input("adminUsername", required: true)]
        public Input<string> AdminUsername { get; set; } = null!;

        public KubernetesClusterWindowsProfileArgs()
        {
        }
    }

    public sealed class KubernetesClusterWindowsProfileGetArgs : Pulumi.ResourceArgs
    {
        [Input("adminPassword")]
        public Input<string>? AdminPassword { get; set; }

        [Input("adminUsername", required: true)]
        public Input<string> AdminUsername { get; set; } = null!;

        public KubernetesClusterWindowsProfileGetArgs()
        {
        }
    }
    }

    namespace Outputs
    {

    [OutputType]
    public sealed class KubernetesClusterAddonProfile
    {
        public readonly KubernetesClusterAddonProfileAciConnectorLinux? AciConnectorLinux;
        public readonly KubernetesClusterAddonProfileAzurePolicy? AzurePolicy;
        /// <summary>
        /// A `http_application_routing` block as defined below.
        /// </summary>
        public readonly KubernetesClusterAddonProfileHttpApplicationRouting? HttpApplicationRouting;
        public readonly KubernetesClusterAddonProfileKubeDashboard? KubeDashboard;
        public readonly KubernetesClusterAddonProfileOmsAgent? OmsAgent;

        [OutputConstructor]
        private KubernetesClusterAddonProfile(
            KubernetesClusterAddonProfileAciConnectorLinux? aciConnectorLinux,
            KubernetesClusterAddonProfileAzurePolicy? azurePolicy,
            KubernetesClusterAddonProfileHttpApplicationRouting? httpApplicationRouting,
            KubernetesClusterAddonProfileKubeDashboard? kubeDashboard,
            KubernetesClusterAddonProfileOmsAgent? omsAgent)
        {
            AciConnectorLinux = aciConnectorLinux;
            AzurePolicy = azurePolicy;
            HttpApplicationRouting = httpApplicationRouting;
            KubeDashboard = kubeDashboard;
            OmsAgent = omsAgent;
        }
    }

    [OutputType]
    public sealed class KubernetesClusterAddonProfileAciConnectorLinux
    {
        public readonly bool Enabled;
        public readonly string? SubnetName;

        [OutputConstructor]
        private KubernetesClusterAddonProfileAciConnectorLinux(
            bool enabled,
            string? subnetName)
        {
            Enabled = enabled;
            SubnetName = subnetName;
        }
    }

    [OutputType]
    public sealed class KubernetesClusterAddonProfileAzurePolicy
    {
        public readonly bool Enabled;

        [OutputConstructor]
        private KubernetesClusterAddonProfileAzurePolicy(bool enabled)
        {
            Enabled = enabled;
        }
    }

    [OutputType]
    public sealed class KubernetesClusterAddonProfileHttpApplicationRouting
    {
        public readonly bool Enabled;
        /// <summary>
        /// The Zone Name of the HTTP Application Routing.
        /// </summary>
        public readonly string HttpApplicationRoutingZoneName;

        [OutputConstructor]
        private KubernetesClusterAddonProfileHttpApplicationRouting(
            bool enabled,
            string httpApplicationRoutingZoneName)
        {
            Enabled = enabled;
            HttpApplicationRoutingZoneName = httpApplicationRoutingZoneName;
        }
    }

    [OutputType]
    public sealed class KubernetesClusterAddonProfileKubeDashboard
    {
        public readonly bool Enabled;

        [OutputConstructor]
        private KubernetesClusterAddonProfileKubeDashboard(bool enabled)
        {
            Enabled = enabled;
        }
    }

    [OutputType]
    public sealed class KubernetesClusterAddonProfileOmsAgent
    {
        public readonly bool Enabled;
        public readonly string? LogAnalyticsWorkspaceId;

        [OutputConstructor]
        private KubernetesClusterAddonProfileOmsAgent(
            bool enabled,
            string? logAnalyticsWorkspaceId)
        {
            Enabled = enabled;
            LogAnalyticsWorkspaceId = logAnalyticsWorkspaceId;
        }
    }

    [OutputType]
    public sealed class KubernetesClusterAgentPoolProfiles
    {
        public readonly ImmutableArray<string> AvailabilityZones;
        public readonly int? Count;
        /// <summary>
        /// DNS prefix specified when creating the managed cluster. Changing this forces a new resource to be created.
        /// </summary>
        public readonly string DnsPrefix;
        public readonly bool? EnableAutoScaling;
        /// <summary>
        /// The FQDN of the Azure Kubernetes Managed Cluster.
        /// </summary>
        public readonly string Fqdn;
        public readonly int? MaxCount;
        public readonly int MaxPods;
        public readonly int? MinCount;
        /// <summary>
        /// The name of the Managed Kubernetes Cluster to create. Changing this forces a new resource to be created.
        /// </summary>
        public readonly string Name;
        public readonly ImmutableArray<string> NodeTaints;
        public readonly int OsDiskSizeGb;
        public readonly string? OsType;
        public readonly string? Type;
        public readonly string VmSize;
        public readonly string? VnetSubnetId;

        [OutputConstructor]
        private KubernetesClusterAgentPoolProfiles(
            ImmutableArray<string> availabilityZones,
            int? count,
            string dnsPrefix,
            bool? enableAutoScaling,
            string fqdn,
            int? maxCount,
            int maxPods,
            int? minCount,
            string name,
            ImmutableArray<string> nodeTaints,
            int osDiskSizeGb,
            string? osType,
            string? type,
            string vmSize,
            string? vnetSubnetId)
        {
            AvailabilityZones = availabilityZones;
            Count = count;
            DnsPrefix = dnsPrefix;
            EnableAutoScaling = enableAutoScaling;
            Fqdn = fqdn;
            MaxCount = maxCount;
            MaxPods = maxPods;
            MinCount = minCount;
            Name = name;
            NodeTaints = nodeTaints;
            OsDiskSizeGb = osDiskSizeGb;
            OsType = osType;
            Type = type;
            VmSize = vmSize;
            VnetSubnetId = vnetSubnetId;
        }
    }

    [OutputType]
    public sealed class KubernetesClusterKubeAdminConfig
    {
        /// <summary>
        /// Base64 encoded public certificate used by clients to authenticate to the Kubernetes cluster.
        /// </summary>
        public readonly string ClientCertificate;
        /// <summary>
        /// Base64 encoded private key used by clients to authenticate to the Kubernetes cluster.
        /// </summary>
        public readonly string ClientKey;
        /// <summary>
        /// Base64 encoded public CA certificate used as the root of trust for the Kubernetes cluster.
        /// </summary>
        public readonly string ClusterCaCertificate;
        /// <summary>
        /// The Kubernetes cluster server host.
        /// </summary>
        public readonly string Host;
        /// <summary>
        /// A password or token used to authenticate to the Kubernetes cluster.
        /// </summary>
        public readonly string Password;
        /// <summary>
        /// A username used to authenticate to the Kubernetes cluster.
        /// </summary>
        public readonly string Username;

        [OutputConstructor]
        private KubernetesClusterKubeAdminConfig(
            string clientCertificate,
            string clientKey,
            string clusterCaCertificate,
            string host,
            string password,
            string username)
        {
            ClientCertificate = clientCertificate;
            ClientKey = clientKey;
            ClusterCaCertificate = clusterCaCertificate;
            Host = host;
            Password = password;
            Username = username;
        }
    }

    [OutputType]
    public sealed class KubernetesClusterKubeConfig
    {
        /// <summary>
        /// Base64 encoded public certificate used by clients to authenticate to the Kubernetes cluster.
        /// </summary>
        public readonly string ClientCertificate;
        /// <summary>
        /// Base64 encoded private key used by clients to authenticate to the Kubernetes cluster.
        /// </summary>
        public readonly string ClientKey;
        /// <summary>
        /// Base64 encoded public CA certificate used as the root of trust for the Kubernetes cluster.
        /// </summary>
        public readonly string ClusterCaCertificate;
        /// <summary>
        /// The Kubernetes cluster server host.
        /// </summary>
        public readonly string Host;
        /// <summary>
        /// A password or token used to authenticate to the Kubernetes cluster.
        /// </summary>
        public readonly string Password;
        /// <summary>
        /// A username used to authenticate to the Kubernetes cluster.
        /// </summary>
        public readonly string Username;

        [OutputConstructor]
        private KubernetesClusterKubeConfig(
            string clientCertificate,
            string clientKey,
            string clusterCaCertificate,
            string host,
            string password,
            string username)
        {
            ClientCertificate = clientCertificate;
            ClientKey = clientKey;
            ClusterCaCertificate = clusterCaCertificate;
            Host = host;
            Password = password;
            Username = username;
        }
    }

    [OutputType]
    public sealed class KubernetesClusterLinuxProfile
    {
        public readonly string AdminUsername;
        public readonly KubernetesClusterLinuxProfileSshKey SshKey;

        [OutputConstructor]
        private KubernetesClusterLinuxProfile(
            string adminUsername,
            KubernetesClusterLinuxProfileSshKey sshKey)
        {
            AdminUsername = adminUsername;
            SshKey = sshKey;
        }
    }

    [OutputType]
    public sealed class KubernetesClusterLinuxProfileSshKey
    {
        public readonly string KeyData;

        [OutputConstructor]
        private KubernetesClusterLinuxProfileSshKey(string keyData)
        {
            KeyData = keyData;
        }
    }

    [OutputType]
    public sealed class KubernetesClusterNetworkProfile
    {
        public readonly string DnsServiceIp;
        public readonly string DockerBridgeCidr;
        public readonly string? LoadBalancerSku;
        public readonly string NetworkPlugin;
        public readonly string NetworkPolicy;
        public readonly string PodCidr;
        public readonly string ServiceCidr;

        [OutputConstructor]
        private KubernetesClusterNetworkProfile(
            string dnsServiceIp,
            string dockerBridgeCidr,
            string? loadBalancerSku,
            string networkPlugin,
            string networkPolicy,
            string podCidr,
            string serviceCidr)
        {
            DnsServiceIp = dnsServiceIp;
            DockerBridgeCidr = dockerBridgeCidr;
            LoadBalancerSku = loadBalancerSku;
            NetworkPlugin = networkPlugin;
            NetworkPolicy = networkPolicy;
            PodCidr = podCidr;
            ServiceCidr = serviceCidr;
        }
    }

    [OutputType]
    public sealed class KubernetesClusterRoleBasedAccessControl
    {
        public readonly KubernetesClusterRoleBasedAccessControlAzureActiveDirectory? AzureActiveDirectory;
        public readonly bool Enabled;

        [OutputConstructor]
        private KubernetesClusterRoleBasedAccessControl(
            KubernetesClusterRoleBasedAccessControlAzureActiveDirectory? azureActiveDirectory,
            bool enabled)
        {
            AzureActiveDirectory = azureActiveDirectory;
            Enabled = enabled;
        }
    }

    [OutputType]
    public sealed class KubernetesClusterRoleBasedAccessControlAzureActiveDirectory
    {
        public readonly string ClientAppId;
        public readonly string ServerAppId;
        public readonly string ServerAppSecret;
        public readonly string TenantId;

        [OutputConstructor]
        private KubernetesClusterRoleBasedAccessControlAzureActiveDirectory(
            string clientAppId,
            string serverAppId,
            string serverAppSecret,
            string tenantId)
        {
            ClientAppId = clientAppId;
            ServerAppId = serverAppId;
            ServerAppSecret = serverAppSecret;
            TenantId = tenantId;
        }
    }

    [OutputType]
    public sealed class KubernetesClusterServicePrincipal
    {
        public readonly string ClientId;
        public readonly string ClientSecret;

        [OutputConstructor]
        private KubernetesClusterServicePrincipal(
            string clientId,
            string clientSecret)
        {
            ClientId = clientId;
            ClientSecret = clientSecret;
        }
    }

    [OutputType]
    public sealed class KubernetesClusterWindowsProfile
    {
        public readonly string? AdminPassword;
        public readonly string AdminUsername;

        [OutputConstructor]
        private KubernetesClusterWindowsProfile(
            string? adminPassword,
            string adminUsername)
        {
            AdminPassword = adminPassword;
            AdminUsername = adminUsername;
        }
    }
    }
}
