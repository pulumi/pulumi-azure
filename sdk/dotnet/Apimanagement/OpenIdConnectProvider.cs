// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.ApiManagement
{
    /// <summary>
    /// Manages an OpenID Connect Provider within a API Management Service.
    /// </summary>
    public partial class OpenIdConnectProvider : Pulumi.CustomResource
    {
        /// <summary>
        /// The name of the API Management Service in which this OpenID Connect Provider should be created. Changing this forces a new resource to be created.
        /// </summary>
        [Output("apiManagementName")]
        public Output<string> ApiManagementName { get; private set; } = null!;

        /// <summary>
        /// The Client ID used for the Client Application.
        /// </summary>
        [Output("clientId")]
        public Output<string> ClientId { get; private set; } = null!;

        /// <summary>
        /// The Client Secret used for the Client Application.
        /// </summary>
        [Output("clientSecret")]
        public Output<string> ClientSecret { get; private set; } = null!;

        /// <summary>
        /// A description of this OpenID Connect Provider.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// A user-friendly name for this OpenID Connect Provider.
        /// </summary>
        [Output("displayName")]
        public Output<string> DisplayName { get; private set; } = null!;

        /// <summary>
        /// The URI of the Metadata endpoint.
        /// </summary>
        [Output("metadataEndpoint")]
        public Output<string> MetadataEndpoint { get; private set; } = null!;

        /// <summary>
        /// the Name of the OpenID Connect Provider which should be created within the API Management Service. Changing this forces a new resource to be created.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The name of the Resource Group where the API Management Service exists. Changing this forces a new resource to be created.
        /// </summary>
        [Output("resourceGroupName")]
        public Output<string> ResourceGroupName { get; private set; } = null!;


        /// <summary>
        /// Create a OpenIdConnectProvider resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public OpenIdConnectProvider(string name, OpenIdConnectProviderArgs args, CustomResourceOptions? options = null)
            : base("azure:apimanagement/openIdConnectProvider:OpenIdConnectProvider", name, args ?? new OpenIdConnectProviderArgs(), MakeResourceOptions(options, ""))
        {
        }

        private OpenIdConnectProvider(string name, Input<string> id, OpenIdConnectProviderState? state = null, CustomResourceOptions? options = null)
            : base("azure:apimanagement/openIdConnectProvider:OpenIdConnectProvider", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing OpenIdConnectProvider resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static OpenIdConnectProvider Get(string name, Input<string> id, OpenIdConnectProviderState? state = null, CustomResourceOptions? options = null)
        {
            return new OpenIdConnectProvider(name, id, state, options);
        }
    }

    public sealed class OpenIdConnectProviderArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the API Management Service in which this OpenID Connect Provider should be created. Changing this forces a new resource to be created.
        /// </summary>
        [Input("apiManagementName", required: true)]
        public Input<string> ApiManagementName { get; set; } = null!;

        /// <summary>
        /// The Client ID used for the Client Application.
        /// </summary>
        [Input("clientId", required: true)]
        public Input<string> ClientId { get; set; } = null!;

        /// <summary>
        /// The Client Secret used for the Client Application.
        /// </summary>
        [Input("clientSecret", required: true)]
        public Input<string> ClientSecret { get; set; } = null!;

        /// <summary>
        /// A description of this OpenID Connect Provider.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// A user-friendly name for this OpenID Connect Provider.
        /// </summary>
        [Input("displayName", required: true)]
        public Input<string> DisplayName { get; set; } = null!;

        /// <summary>
        /// The URI of the Metadata endpoint.
        /// </summary>
        [Input("metadataEndpoint", required: true)]
        public Input<string> MetadataEndpoint { get; set; } = null!;

        /// <summary>
        /// the Name of the OpenID Connect Provider which should be created within the API Management Service. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The name of the Resource Group where the API Management Service exists. Changing this forces a new resource to be created.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public OpenIdConnectProviderArgs()
        {
        }
    }

    public sealed class OpenIdConnectProviderState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the API Management Service in which this OpenID Connect Provider should be created. Changing this forces a new resource to be created.
        /// </summary>
        [Input("apiManagementName")]
        public Input<string>? ApiManagementName { get; set; }

        /// <summary>
        /// The Client ID used for the Client Application.
        /// </summary>
        [Input("clientId")]
        public Input<string>? ClientId { get; set; }

        /// <summary>
        /// The Client Secret used for the Client Application.
        /// </summary>
        [Input("clientSecret")]
        public Input<string>? ClientSecret { get; set; }

        /// <summary>
        /// A description of this OpenID Connect Provider.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// A user-friendly name for this OpenID Connect Provider.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        /// <summary>
        /// The URI of the Metadata endpoint.
        /// </summary>
        [Input("metadataEndpoint")]
        public Input<string>? MetadataEndpoint { get; set; }

        /// <summary>
        /// the Name of the OpenID Connect Provider which should be created within the API Management Service. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The name of the Resource Group where the API Management Service exists. Changing this forces a new resource to be created.
        /// </summary>
        [Input("resourceGroupName")]
        public Input<string>? ResourceGroupName { get; set; }

        public OpenIdConnectProviderState()
        {
        }
    }
}
