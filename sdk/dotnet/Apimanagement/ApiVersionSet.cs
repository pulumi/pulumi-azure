// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.ApiManagement
{
    /// <summary>
    /// Manages an API Version Set within an API Management Service.
    /// </summary>
    public partial class ApiVersionSet : Pulumi.CustomResource
    {
        /// <summary>
        /// The name of the API Management Service in which the API Version Set should exist. Changing this forces a new resource to be created.
        /// </summary>
        [Output("apiManagementName")]
        public Output<string> ApiManagementName { get; private set; } = null!;

        /// <summary>
        /// The description of API Version Set.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// The display name of this API Version Set.
        /// </summary>
        [Output("displayName")]
        public Output<string> DisplayName { get; private set; } = null!;

        /// <summary>
        /// The name of the API Version Set. Changing this forces a new resource to be created.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The name of the Resource Group in which the parent API Management Service exists. Changing this forces a new resource to be created.
        /// </summary>
        [Output("resourceGroupName")]
        public Output<string> ResourceGroupName { get; private set; } = null!;

        /// <summary>
        /// The name of the Header which should be read from Inbound Requests which defines the API Version.
        /// </summary>
        [Output("versionHeaderName")]
        public Output<string?> VersionHeaderName { get; private set; } = null!;

        /// <summary>
        /// The name of the Query String which should be read from Inbound Requests which defines the API Version.
        /// </summary>
        [Output("versionQueryName")]
        public Output<string?> VersionQueryName { get; private set; } = null!;

        /// <summary>
        /// Specifies where in an Inbound HTTP Request that the API Version should be read from. Possible values are `Header`, `Query` and `Segment`.
        /// </summary>
        [Output("versioningScheme")]
        public Output<string> VersioningScheme { get; private set; } = null!;


        /// <summary>
        /// Create a ApiVersionSet resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ApiVersionSet(string name, ApiVersionSetArgs args, CustomResourceOptions? options = null)
            : base("azure:apimanagement/apiVersionSet:ApiVersionSet", name, args ?? new ApiVersionSetArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ApiVersionSet(string name, Input<string> id, ApiVersionSetState? state = null, CustomResourceOptions? options = null)
            : base("azure:apimanagement/apiVersionSet:ApiVersionSet", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ApiVersionSet resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ApiVersionSet Get(string name, Input<string> id, ApiVersionSetState? state = null, CustomResourceOptions? options = null)
        {
            return new ApiVersionSet(name, id, state, options);
        }
    }

    public sealed class ApiVersionSetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the API Management Service in which the API Version Set should exist. Changing this forces a new resource to be created.
        /// </summary>
        [Input("apiManagementName", required: true)]
        public Input<string> ApiManagementName { get; set; } = null!;

        /// <summary>
        /// The description of API Version Set.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The display name of this API Version Set.
        /// </summary>
        [Input("displayName", required: true)]
        public Input<string> DisplayName { get; set; } = null!;

        /// <summary>
        /// The name of the API Version Set. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The name of the Resource Group in which the parent API Management Service exists. Changing this forces a new resource to be created.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the Header which should be read from Inbound Requests which defines the API Version.
        /// </summary>
        [Input("versionHeaderName")]
        public Input<string>? VersionHeaderName { get; set; }

        /// <summary>
        /// The name of the Query String which should be read from Inbound Requests which defines the API Version.
        /// </summary>
        [Input("versionQueryName")]
        public Input<string>? VersionQueryName { get; set; }

        /// <summary>
        /// Specifies where in an Inbound HTTP Request that the API Version should be read from. Possible values are `Header`, `Query` and `Segment`.
        /// </summary>
        [Input("versioningScheme", required: true)]
        public Input<string> VersioningScheme { get; set; } = null!;

        public ApiVersionSetArgs()
        {
        }
    }

    public sealed class ApiVersionSetState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the API Management Service in which the API Version Set should exist. Changing this forces a new resource to be created.
        /// </summary>
        [Input("apiManagementName")]
        public Input<string>? ApiManagementName { get; set; }

        /// <summary>
        /// The description of API Version Set.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The display name of this API Version Set.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        /// <summary>
        /// The name of the API Version Set. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The name of the Resource Group in which the parent API Management Service exists. Changing this forces a new resource to be created.
        /// </summary>
        [Input("resourceGroupName")]
        public Input<string>? ResourceGroupName { get; set; }

        /// <summary>
        /// The name of the Header which should be read from Inbound Requests which defines the API Version.
        /// </summary>
        [Input("versionHeaderName")]
        public Input<string>? VersionHeaderName { get; set; }

        /// <summary>
        /// The name of the Query String which should be read from Inbound Requests which defines the API Version.
        /// </summary>
        [Input("versionQueryName")]
        public Input<string>? VersionQueryName { get; set; }

        /// <summary>
        /// Specifies where in an Inbound HTTP Request that the API Version should be read from. Possible values are `Header`, `Query` and `Segment`.
        /// </summary>
        [Input("versioningScheme")]
        public Input<string>? VersioningScheme { get; set; }

        public ApiVersionSetState()
        {
        }
    }
}
