// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.ApiManagement
{
    public static partial class Invokes
    {
        /// <summary>
        /// Uses this data source to access information about an API Version Set within an API Management Service.
        /// 
        /// &gt; This content is derived from https://github.com/terraform-providers/terraform-provider-azurerm/blob/master/website/docs/d/api_management_api_version_set.html.markdown.
        /// </summary>
        [Obsolete("Use GetApiVersionSet.InvokeAsync() instead")]
        public static Task<GetApiVersionSetResult> GetApiVersionSet(GetApiVersionSetArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetApiVersionSetResult>("azure:apimanagement/getApiVersionSet:getApiVersionSet", args ?? InvokeArgs.Empty, options.WithVersion());
    }
    public static class GetApiVersionSet
    {
        /// <summary>
        /// Uses this data source to access information about an API Version Set within an API Management Service.
        /// 
        /// &gt; This content is derived from https://github.com/terraform-providers/terraform-provider-azurerm/blob/master/website/docs/d/api_management_api_version_set.html.markdown.
        /// </summary>
        public static Task<GetApiVersionSetResult> InvokeAsync(GetApiVersionSetArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetApiVersionSetResult>("azure:apimanagement/getApiVersionSet:getApiVersionSet", args ?? InvokeArgs.Empty, options.WithVersion());
    }

    public sealed class GetApiVersionSetArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the API Management Service where the API Version Set exists.
        /// </summary>
        [Input("apiManagementName", required: true)]
        public string ApiManagementName { get; set; } = null!;

        /// <summary>
        /// The name of the API Version Set.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        /// <summary>
        /// The name of the Resource Group in which the parent API Management Service exists.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetApiVersionSetArgs()
        {
        }
    }

    [OutputType]
    public sealed class GetApiVersionSetResult
    {
        public readonly string ApiManagementName;
        /// <summary>
        /// The description of API Version Set.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// The display name of this API Version Set.
        /// </summary>
        public readonly string DisplayName;
        public readonly string Name;
        public readonly string ResourceGroupName;
        /// <summary>
        /// The name of the Header which should be read from Inbound Requests which defines the API Version.
        /// </summary>
        public readonly string VersionHeaderName;
        /// <summary>
        /// The name of the Query String which should be read from Inbound Requests which defines the API Version.
        /// </summary>
        public readonly string VersionQueryName;
        public readonly string VersioningScheme;
        /// <summary>
        /// id is the provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;

        [OutputConstructor]
        private GetApiVersionSetResult(
            string apiManagementName,
            string description,
            string displayName,
            string name,
            string resourceGroupName,
            string versionHeaderName,
            string versionQueryName,
            string versioningScheme,
            string id)
        {
            ApiManagementName = apiManagementName;
            Description = description;
            DisplayName = displayName;
            Name = name;
            ResourceGroupName = resourceGroupName;
            VersionHeaderName = versionHeaderName;
            VersionQueryName = versionQueryName;
            VersioningScheme = versioningScheme;
            Id = id;
        }
    }
}
