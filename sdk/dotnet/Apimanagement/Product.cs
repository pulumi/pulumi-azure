// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.ApiManagement
{
    /// <summary>
    /// Manages an API Management Product.
    /// </summary>
    public partial class Product : Pulumi.CustomResource
    {
        /// <summary>
        /// The name of the API Management Service. Changing this forces a new resource to be created.
        /// </summary>
        [Output("apiManagementName")]
        public Output<string> ApiManagementName { get; private set; } = null!;

        /// <summary>
        /// Do subscribers need to be approved prior to being able to use the Product?
        /// </summary>
        [Output("approvalRequired")]
        public Output<bool?> ApprovalRequired { get; private set; } = null!;

        /// <summary>
        /// A description of this Product, which may include HTML formatting tags.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// The Display Name for this API Management Product.
        /// </summary>
        [Output("displayName")]
        public Output<string> DisplayName { get; private set; } = null!;

        /// <summary>
        /// The Identifier for this Product, which must be unique within the API Management Service. Changing this forces a new resource to be created.
        /// </summary>
        [Output("productId")]
        public Output<string> ProductId { get; private set; } = null!;

        /// <summary>
        /// Is this Product Published?
        /// </summary>
        [Output("published")]
        public Output<bool> Published { get; private set; } = null!;

        /// <summary>
        /// The name of the Resource Group in which the API Management Service should be exist. Changing this forces a new resource to be created.
        /// </summary>
        [Output("resourceGroupName")]
        public Output<string> ResourceGroupName { get; private set; } = null!;

        /// <summary>
        /// Is a Subscription required to access API's included in this Product?
        /// </summary>
        [Output("subscriptionRequired")]
        public Output<bool> SubscriptionRequired { get; private set; } = null!;

        /// <summary>
        /// The number of subscriptions a user can have to this Product at the same time.
        /// </summary>
        [Output("subscriptionsLimit")]
        public Output<int?> SubscriptionsLimit { get; private set; } = null!;

        /// <summary>
        /// The Terms and Conditions for this Product, which must be accepted by Developers before they can begin the Subscription process.
        /// </summary>
        [Output("terms")]
        public Output<string?> Terms { get; private set; } = null!;


        /// <summary>
        /// Create a Product resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Product(string name, ProductArgs args, CustomResourceOptions? options = null)
            : base("azure:apimanagement/product:Product", name, args ?? new ProductArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Product(string name, Input<string> id, ProductState? state = null, CustomResourceOptions? options = null)
            : base("azure:apimanagement/product:Product", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Product resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Product Get(string name, Input<string> id, ProductState? state = null, CustomResourceOptions? options = null)
        {
            return new Product(name, id, state, options);
        }
    }

    public sealed class ProductArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the API Management Service. Changing this forces a new resource to be created.
        /// </summary>
        [Input("apiManagementName", required: true)]
        public Input<string> ApiManagementName { get; set; } = null!;

        /// <summary>
        /// Do subscribers need to be approved prior to being able to use the Product?
        /// </summary>
        [Input("approvalRequired")]
        public Input<bool>? ApprovalRequired { get; set; }

        /// <summary>
        /// A description of this Product, which may include HTML formatting tags.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The Display Name for this API Management Product.
        /// </summary>
        [Input("displayName", required: true)]
        public Input<string> DisplayName { get; set; } = null!;

        /// <summary>
        /// The Identifier for this Product, which must be unique within the API Management Service. Changing this forces a new resource to be created.
        /// </summary>
        [Input("productId", required: true)]
        public Input<string> ProductId { get; set; } = null!;

        /// <summary>
        /// Is this Product Published?
        /// </summary>
        [Input("published", required: true)]
        public Input<bool> Published { get; set; } = null!;

        /// <summary>
        /// The name of the Resource Group in which the API Management Service should be exist. Changing this forces a new resource to be created.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// Is a Subscription required to access API's included in this Product?
        /// </summary>
        [Input("subscriptionRequired", required: true)]
        public Input<bool> SubscriptionRequired { get; set; } = null!;

        /// <summary>
        /// The number of subscriptions a user can have to this Product at the same time.
        /// </summary>
        [Input("subscriptionsLimit")]
        public Input<int>? SubscriptionsLimit { get; set; }

        /// <summary>
        /// The Terms and Conditions for this Product, which must be accepted by Developers before they can begin the Subscription process.
        /// </summary>
        [Input("terms")]
        public Input<string>? Terms { get; set; }

        public ProductArgs()
        {
        }
    }

    public sealed class ProductState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the API Management Service. Changing this forces a new resource to be created.
        /// </summary>
        [Input("apiManagementName")]
        public Input<string>? ApiManagementName { get; set; }

        /// <summary>
        /// Do subscribers need to be approved prior to being able to use the Product?
        /// </summary>
        [Input("approvalRequired")]
        public Input<bool>? ApprovalRequired { get; set; }

        /// <summary>
        /// A description of this Product, which may include HTML formatting tags.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The Display Name for this API Management Product.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        /// <summary>
        /// The Identifier for this Product, which must be unique within the API Management Service. Changing this forces a new resource to be created.
        /// </summary>
        [Input("productId")]
        public Input<string>? ProductId { get; set; }

        /// <summary>
        /// Is this Product Published?
        /// </summary>
        [Input("published")]
        public Input<bool>? Published { get; set; }

        /// <summary>
        /// The name of the Resource Group in which the API Management Service should be exist. Changing this forces a new resource to be created.
        /// </summary>
        [Input("resourceGroupName")]
        public Input<string>? ResourceGroupName { get; set; }

        /// <summary>
        /// Is a Subscription required to access API's included in this Product?
        /// </summary>
        [Input("subscriptionRequired")]
        public Input<bool>? SubscriptionRequired { get; set; }

        /// <summary>
        /// The number of subscriptions a user can have to this Product at the same time.
        /// </summary>
        [Input("subscriptionsLimit")]
        public Input<int>? SubscriptionsLimit { get; set; }

        /// <summary>
        /// The Terms and Conditions for this Product, which must be accepted by Developers before they can begin the Subscription process.
        /// </summary>
        [Input("terms")]
        public Input<string>? Terms { get; set; }

        public ProductState()
        {
        }
    }
}
