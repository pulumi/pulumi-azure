// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Storage
{
    public static partial class Invokes
    {
        /// <summary>
        /// Use this data source to obtain a Shared Access Signature (SAS Token) for an existing Storage Account Blob Container.
        /// 
        /// Shared access signatures allow fine-grained, ephemeral access control to various aspects of an Azure Storage Account Blob Container.
        /// 
        /// &gt; This content is derived from https://github.com/terraform-providers/terraform-provider-azurerm/blob/master/website/docs/d/storage_account_blob_container_sas.html.markdown.
        /// </summary>
        public static Task<GetAccountBlobContainerSASResult> GetAccountBlobContainerSAS(GetAccountBlobContainerSASArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetAccountBlobContainerSASResult>("azure:storage/getAccountBlobContainerSAS:getAccountBlobContainerSAS", args ?? ResourceArgs.Empty, options.WithVersion());
    }

    public sealed class GetAccountBlobContainerSASArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The `Cache-Control` response header that is sent when this SAS token is used.
        /// </summary>
        [Input("cacheControl")]
        public Input<string>? CacheControl { get; set; }

        [Input("connectionString", required: true)]
        public Input<string> ConnectionString { get; set; } = null!;

        /// <summary>
        /// Name of the container.
        /// </summary>
        [Input("containerName", required: true)]
        public Input<string> ContainerName { get; set; } = null!;

        /// <summary>
        /// The `Content-Disposition` response header that is sent when this SAS token is used.
        /// </summary>
        [Input("contentDisposition")]
        public Input<string>? ContentDisposition { get; set; }

        /// <summary>
        /// The `Content-Encoding` response header that is sent when this SAS token is used.
        /// </summary>
        [Input("contentEncoding")]
        public Input<string>? ContentEncoding { get; set; }

        /// <summary>
        /// The `Content-Language` response header that is sent when this SAS token is used.
        /// </summary>
        [Input("contentLanguage")]
        public Input<string>? ContentLanguage { get; set; }

        /// <summary>
        /// The `Content-Type` response header that is sent when this SAS token is used.
        /// </summary>
        [Input("contentType")]
        public Input<string>? ContentType { get; set; }

        /// <summary>
        /// The expiration time and date of this SAS. Must be a valid ISO-8601 format time/date string.
        /// </summary>
        [Input("expiry", required: true)]
        public Input<string> Expiry { get; set; } = null!;

        /// <summary>
        /// Only permit `https` access. If `false`, both `http` and `https` are permitted. Defaults to `true`.
        /// </summary>
        [Input("httpsOnly")]
        public Input<bool>? HttpsOnly { get; set; }

        /// <summary>
        /// Single ipv4 address or range (connected with a dash) of ipv4 addresses.
        /// </summary>
        [Input("ipAddress")]
        public Input<string>? IpAddress { get; set; }

        /// <summary>
        /// A `permissions` block as defined below.
        /// </summary>
        [Input("permissions", required: true)]
        public Input<Inputs.GetAccountBlobContainerSASPermissionsArgs> Permissions { get; set; } = null!;

        /// <summary>
        /// The starting time and date of validity of this SAS. Must be a valid ISO-8601 format time/date string.
        /// </summary>
        [Input("start", required: true)]
        public Input<string> Start { get; set; } = null!;

        public GetAccountBlobContainerSASArgs()
        {
        }
    }

    [OutputType]
    public sealed class GetAccountBlobContainerSASResult
    {
        public readonly string? CacheControl;
        public readonly string ConnectionString;
        public readonly string ContainerName;
        public readonly string? ContentDisposition;
        public readonly string? ContentEncoding;
        public readonly string? ContentLanguage;
        public readonly string? ContentType;
        public readonly string Expiry;
        public readonly bool? HttpsOnly;
        public readonly string? IpAddress;
        public readonly Outputs.GetAccountBlobContainerSASPermissionsResult Permissions;
        /// <summary>
        /// The computed Blob Container Shared Access Signature (SAS).
        /// </summary>
        public readonly string Sas;
        public readonly string Start;
        /// <summary>
        /// id is the provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;

        [OutputConstructor]
        private GetAccountBlobContainerSASResult(
            string? cacheControl,
            string connectionString,
            string containerName,
            string? contentDisposition,
            string? contentEncoding,
            string? contentLanguage,
            string? contentType,
            string expiry,
            bool? httpsOnly,
            string? ipAddress,
            Outputs.GetAccountBlobContainerSASPermissionsResult permissions,
            string sas,
            string start,
            string id)
        {
            CacheControl = cacheControl;
            ConnectionString = connectionString;
            ContainerName = containerName;
            ContentDisposition = contentDisposition;
            ContentEncoding = contentEncoding;
            ContentLanguage = contentLanguage;
            ContentType = contentType;
            Expiry = expiry;
            HttpsOnly = httpsOnly;
            IpAddress = ipAddress;
            Permissions = permissions;
            Sas = sas;
            Start = start;
            Id = id;
        }
    }

    namespace Inputs
    {

    public sealed class GetAccountBlobContainerSASPermissionsArgs : Pulumi.ResourceArgs
    {
        [Input("add", required: true)]
        public Input<bool> Add { get; set; } = null!;

        [Input("create", required: true)]
        public Input<bool> Create { get; set; } = null!;

        [Input("delete", required: true)]
        public Input<bool> Delete { get; set; } = null!;

        [Input("list", required: true)]
        public Input<bool> List { get; set; } = null!;

        [Input("read", required: true)]
        public Input<bool> Read { get; set; } = null!;

        [Input("write", required: true)]
        public Input<bool> Write { get; set; } = null!;

        public GetAccountBlobContainerSASPermissionsArgs()
        {
        }
    }
    }

    namespace Outputs
    {

    [OutputType]
    public sealed class GetAccountBlobContainerSASPermissionsResult
    {
        public readonly bool Add;
        public readonly bool Create;
        public readonly bool Delete;
        public readonly bool List;
        public readonly bool Read;
        public readonly bool Write;

        [OutputConstructor]
        private GetAccountBlobContainerSASPermissionsResult(
            bool add,
            bool create,
            bool delete,
            bool list,
            bool read,
            bool write)
        {
            Add = add;
            Create = create;
            Delete = delete;
            List = list;
            Read = read;
            Write = write;
        }
    }
    }
}
