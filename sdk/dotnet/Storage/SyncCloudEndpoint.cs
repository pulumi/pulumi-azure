// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Storage
{
    /// <summary>
    /// Manages a Storage Sync Cloud Endpoint.
    /// 
    /// &gt; **NOTE:** Please ensure Azure File Sync has access to the storage account in your subscription, which indicates that `Microsoft.StorageSync` is assigned role `Reader and Data Access` ( refer to details [here](https://docs.microsoft.com/en-us/azure/storage/files/storage-sync-files-troubleshoot?tabs=portal1%2Cazure-portal#common-troubleshooting-steps)).
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using Azure = Pulumi.Azure;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var exampleResourceGroup = new Azure.Core.ResourceGroup("exampleResourceGroup", new Azure.Core.ResourceGroupArgs
    ///         {
    ///             Location = "West Europe",
    ///         });
    ///         var exampleSync = new Azure.Storage.Sync("exampleSync", new Azure.Storage.SyncArgs
    ///         {
    ///             ResourceGroupName = exampleResourceGroup.Name,
    ///             Location = exampleResourceGroup.Location,
    ///         });
    ///         var exampleSyncGroup = new Azure.Storage.SyncGroup("exampleSyncGroup", new Azure.Storage.SyncGroupArgs
    ///         {
    ///             StorageSyncId = exampleSync.Id,
    ///         });
    ///         var exampleAccount = new Azure.Storage.Account("exampleAccount", new Azure.Storage.AccountArgs
    ///         {
    ///             ResourceGroupName = exampleResourceGroup.Name,
    ///             Location = exampleResourceGroup.Location,
    ///             AccountTier = "Standard",
    ///             AccountReplicationType = "LRS",
    ///         });
    ///         var exampleShare = new Azure.Storage.Share("exampleShare", new Azure.Storage.ShareArgs
    ///         {
    ///             StorageAccountName = exampleAccount.Name,
    ///             Acls = 
    ///             {
    ///                 new Azure.Storage.Inputs.ShareAclArgs
    ///                 {
    ///                     Id = "GhostedRecall",
    ///                     AccessPolicies = 
    ///                     {
    ///                         new Azure.Storage.Inputs.ShareAclAccessPolicyArgs
    ///                         {
    ///                             Permissions = "r",
    ///                         },
    ///                     },
    ///                 },
    ///             },
    ///         });
    ///         var exampleSyncCloudEndpoint = new Azure.Storage.SyncCloudEndpoint("exampleSyncCloudEndpoint", new Azure.Storage.SyncCloudEndpointArgs
    ///         {
    ///             StorageSyncGroupId = exampleSyncGroup.Id,
    ///             FileShareName = exampleShare.Name,
    ///             StorageAccountId = exampleAccount.Id,
    ///         });
    ///     }
    /// 
    /// }
    /// ```
    /// 
    /// ## Import
    /// 
    /// Storage Sync Cloud Endpoints can be imported using the `resource id`, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import azure:storage/syncCloudEndpoint:SyncCloudEndpoint example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.StorageSync/storageSyncServices/sync1/syncGroups/syncgroup1/cloudEndpoints/cloudEndpoint1
    /// ```
    /// </summary>
    [AzureResourceType("azure:storage/syncCloudEndpoint:SyncCloudEndpoint")]
    public partial class SyncCloudEndpoint : Pulumi.CustomResource
    {
        /// <summary>
        /// The Storage Share name to be synchronized in this Storage Sync Cloud Endpoint. Changing this forces a new Storage Sync Cloud Endpoint to be created.
        /// </summary>
        [Output("fileShareName")]
        public Output<string> FileShareName { get; private set; } = null!;

        /// <summary>
        /// The name which should be used for this Storage Sync Cloud Endpoint. Changing this forces a new Storage Sync Cloud Endpoint to be created.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The ID of the Storage Account where the Storage Share exists. Changing this forces a new Storage Sync Cloud Endpoint to be created.
        /// </summary>
        [Output("storageAccountId")]
        public Output<string> StorageAccountId { get; private set; } = null!;

        /// <summary>
        /// The Tenant ID of the Storage Account where the Storage Share exists. Changing this forces a new Storage Sync Cloud Endpoint to be created. Defaults to the current tenant id.
        /// </summary>
        [Output("storageAccountTenantId")]
        public Output<string> StorageAccountTenantId { get; private set; } = null!;

        /// <summary>
        /// The ID of the Storage Sync Group where this Cloud Endpoint should be created. Changing this forces a new Storage Sync Cloud Endpoint to be created.
        /// </summary>
        [Output("storageSyncGroupId")]
        public Output<string> StorageSyncGroupId { get; private set; } = null!;


        /// <summary>
        /// Create a SyncCloudEndpoint resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public SyncCloudEndpoint(string name, SyncCloudEndpointArgs args, CustomResourceOptions? options = null)
            : base("azure:storage/syncCloudEndpoint:SyncCloudEndpoint", name, args ?? new SyncCloudEndpointArgs(), MakeResourceOptions(options, ""))
        {
        }

        private SyncCloudEndpoint(string name, Input<string> id, SyncCloudEndpointState? state = null, CustomResourceOptions? options = null)
            : base("azure:storage/syncCloudEndpoint:SyncCloudEndpoint", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing SyncCloudEndpoint resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static SyncCloudEndpoint Get(string name, Input<string> id, SyncCloudEndpointState? state = null, CustomResourceOptions? options = null)
        {
            return new SyncCloudEndpoint(name, id, state, options);
        }
    }

    public sealed class SyncCloudEndpointArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The Storage Share name to be synchronized in this Storage Sync Cloud Endpoint. Changing this forces a new Storage Sync Cloud Endpoint to be created.
        /// </summary>
        [Input("fileShareName", required: true)]
        public Input<string> FileShareName { get; set; } = null!;

        /// <summary>
        /// The name which should be used for this Storage Sync Cloud Endpoint. Changing this forces a new Storage Sync Cloud Endpoint to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The ID of the Storage Account where the Storage Share exists. Changing this forces a new Storage Sync Cloud Endpoint to be created.
        /// </summary>
        [Input("storageAccountId", required: true)]
        public Input<string> StorageAccountId { get; set; } = null!;

        /// <summary>
        /// The Tenant ID of the Storage Account where the Storage Share exists. Changing this forces a new Storage Sync Cloud Endpoint to be created. Defaults to the current tenant id.
        /// </summary>
        [Input("storageAccountTenantId")]
        public Input<string>? StorageAccountTenantId { get; set; }

        /// <summary>
        /// The ID of the Storage Sync Group where this Cloud Endpoint should be created. Changing this forces a new Storage Sync Cloud Endpoint to be created.
        /// </summary>
        [Input("storageSyncGroupId", required: true)]
        public Input<string> StorageSyncGroupId { get; set; } = null!;

        public SyncCloudEndpointArgs()
        {
        }
    }

    public sealed class SyncCloudEndpointState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The Storage Share name to be synchronized in this Storage Sync Cloud Endpoint. Changing this forces a new Storage Sync Cloud Endpoint to be created.
        /// </summary>
        [Input("fileShareName")]
        public Input<string>? FileShareName { get; set; }

        /// <summary>
        /// The name which should be used for this Storage Sync Cloud Endpoint. Changing this forces a new Storage Sync Cloud Endpoint to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The ID of the Storage Account where the Storage Share exists. Changing this forces a new Storage Sync Cloud Endpoint to be created.
        /// </summary>
        [Input("storageAccountId")]
        public Input<string>? StorageAccountId { get; set; }

        /// <summary>
        /// The Tenant ID of the Storage Account where the Storage Share exists. Changing this forces a new Storage Sync Cloud Endpoint to be created. Defaults to the current tenant id.
        /// </summary>
        [Input("storageAccountTenantId")]
        public Input<string>? StorageAccountTenantId { get; set; }

        /// <summary>
        /// The ID of the Storage Sync Group where this Cloud Endpoint should be created. Changing this forces a new Storage Sync Cloud Endpoint to be created.
        /// </summary>
        [Input("storageSyncGroupId")]
        public Input<string>? StorageSyncGroupId { get; set; }

        public SyncCloudEndpointState()
        {
        }
    }
}
