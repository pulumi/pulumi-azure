// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Storage
{
    public static class GetQueue
    {
        /// <summary>
        /// Use this data source to access information about an existing Storage Queue.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Azure = Pulumi.Azure;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Azure.Storage.GetQueue.Invoke(new()
        ///     {
        ///         Name = "example-queue-name",
        ///         StorageAccountName = "example-storage-account-name",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetQueueResult> InvokeAsync(GetQueueArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetQueueResult>("azure:storage/getQueue:getQueue", args ?? new GetQueueArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to access information about an existing Storage Queue.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Azure = Pulumi.Azure;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Azure.Storage.GetQueue.Invoke(new()
        ///     {
        ///         Name = "example-queue-name",
        ///         StorageAccountName = "example-storage-account-name",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetQueueResult> Invoke(GetQueueInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetQueueResult>("azure:storage/getQueue:getQueue", args ?? new GetQueueInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetQueueArgs : global::Pulumi.InvokeArgs
    {
        [Input("metadata")]
        private Dictionary<string, string>? _metadata;

        /// <summary>
        /// A mapping of MetaData for this Queue.
        /// </summary>
        public Dictionary<string, string> Metadata
        {
            get => _metadata ?? (_metadata = new Dictionary<string, string>());
            set => _metadata = value;
        }

        /// <summary>
        /// The name of the Queue.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        /// <summary>
        /// The name of the Storage Account where the Queue exists.
        /// </summary>
        [Input("storageAccountName", required: true)]
        public string StorageAccountName { get; set; } = null!;

        public GetQueueArgs()
        {
        }
        public static new GetQueueArgs Empty => new GetQueueArgs();
    }

    public sealed class GetQueueInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("metadata")]
        private InputMap<string>? _metadata;

        /// <summary>
        /// A mapping of MetaData for this Queue.
        /// </summary>
        public InputMap<string> Metadata
        {
            get => _metadata ?? (_metadata = new InputMap<string>());
            set => _metadata = value;
        }

        /// <summary>
        /// The name of the Queue.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// The name of the Storage Account where the Queue exists.
        /// </summary>
        [Input("storageAccountName", required: true)]
        public Input<string> StorageAccountName { get; set; } = null!;

        public GetQueueInvokeArgs()
        {
        }
        public static new GetQueueInvokeArgs Empty => new GetQueueInvokeArgs();
    }


    [OutputType]
    public sealed class GetQueueResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// A mapping of MetaData for this Queue.
        /// </summary>
        public readonly ImmutableDictionary<string, string> Metadata;
        public readonly string Name;
        /// <summary>
        /// The Resource Manager ID of this Storage Queue.
        /// </summary>
        public readonly string ResourceManagerId;
        public readonly string StorageAccountName;

        [OutputConstructor]
        private GetQueueResult(
            string id,

            ImmutableDictionary<string, string> metadata,

            string name,

            string resourceManagerId,

            string storageAccountName)
        {
            Id = id;
            Metadata = metadata;
            Name = name;
            ResourceManagerId = resourceManagerId;
            StorageAccountName = storageAccountName;
        }
    }
}
