// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Storage
{
    /// <summary>
    /// Manages the Queue Properties of an Azure Storage Account.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Azure = Pulumi.Azure;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Azure.Core.ResourceGroup("example", new()
    ///     {
    ///         Name = "example-resources",
    ///         Location = "West Europe",
    ///     });
    /// 
    ///     var exampleAccount = new Azure.Storage.Account("example", new()
    ///     {
    ///         Name = "storageaccountname",
    ///         ResourceGroupName = example.Name,
    ///         Location = example.Location,
    ///         AccountTier = "Standard",
    ///         AccountReplicationType = "GRS",
    ///         Tags = 
    ///         {
    ///             { "environment", "staging" },
    ///         },
    ///     });
    /// 
    ///     var exampleAccountQueueProperties = new Azure.Storage.AccountQueueProperties("example", new()
    ///     {
    ///         StorageAccountId = exampleAccount.Id,
    ///         CorsRules = new[]
    ///         {
    ///             new Azure.Storage.Inputs.AccountQueuePropertiesCorsRuleArgs
    ///             {
    ///                 AllowedOrigins = new[]
    ///                 {
    ///                     "http://www.example.com",
    ///                 },
    ///                 ExposedHeaders = new[]
    ///                 {
    ///                     "x-tempo-*",
    ///                 },
    ///                 AllowedHeaders = new[]
    ///                 {
    ///                     "x-tempo-*",
    ///                 },
    ///                 AllowedMethods = new[]
    ///                 {
    ///                     "GET",
    ///                     "PUT",
    ///                 },
    ///                 MaxAgeInSeconds = 500,
    ///             },
    ///         },
    ///         Logging = new Azure.Storage.Inputs.AccountQueuePropertiesLoggingArgs
    ///         {
    ///             Version = "1.0",
    ///             Delete = true,
    ///             Read = true,
    ///             Write = true,
    ///             RetentionPolicyDays = 7,
    ///         },
    ///         HourMetrics = new Azure.Storage.Inputs.AccountQueuePropertiesHourMetricsArgs
    ///         {
    ///             Version = "1.0",
    ///             RetentionPolicyDays = 7,
    ///         },
    ///         MinuteMetrics = new Azure.Storage.Inputs.AccountQueuePropertiesMinuteMetricsArgs
    ///         {
    ///             Version = "1.0",
    ///             RetentionPolicyDays = 7,
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Storage Account Queue Properties can be imported using the `resource id`, e.g.
    /// 
    /// ```sh
    /// $ pulumi import azure:storage/accountQueueProperties:AccountQueueProperties queueprops /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myresourcegroup/providers/Microsoft.Storage/storageAccounts/myaccount
    /// ```
    /// </summary>
    [AzureResourceType("azure:storage/accountQueueProperties:AccountQueueProperties")]
    public partial class AccountQueueProperties : global::Pulumi.CustomResource
    {
        /// <summary>
        /// A `cors_rule` block as defined above.
        /// </summary>
        [Output("corsRules")]
        public Output<ImmutableArray<Outputs.AccountQueuePropertiesCorsRule>> CorsRules { get; private set; } = null!;

        /// <summary>
        /// A `hour_metrics` block as defined below.
        /// 
        /// &gt; **Note:** At least one of `cors_rule`, `logging`, `minute_metrics`, or `hour_metrics` must be specified.
        /// </summary>
        [Output("hourMetrics")]
        public Output<Outputs.AccountQueuePropertiesHourMetrics> HourMetrics { get; private set; } = null!;

        /// <summary>
        /// A `logging` block as defined below.
        /// </summary>
        [Output("logging")]
        public Output<Outputs.AccountQueuePropertiesLogging> Logging { get; private set; } = null!;

        /// <summary>
        /// A `minute_metrics` block as defined below.
        /// </summary>
        [Output("minuteMetrics")]
        public Output<Outputs.AccountQueuePropertiesMinuteMetrics> MinuteMetrics { get; private set; } = null!;

        /// <summary>
        /// The ID of the Storage Account to set Queue Properties on. Changing this forces a new resource to be created.
        /// </summary>
        [Output("storageAccountId")]
        public Output<string> StorageAccountId { get; private set; } = null!;


        /// <summary>
        /// Create a AccountQueueProperties resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public AccountQueueProperties(string name, AccountQueuePropertiesArgs args, CustomResourceOptions? options = null)
            : base("azure:storage/accountQueueProperties:AccountQueueProperties", name, args ?? new AccountQueuePropertiesArgs(), MakeResourceOptions(options, ""))
        {
        }

        private AccountQueueProperties(string name, Input<string> id, AccountQueuePropertiesState? state = null, CustomResourceOptions? options = null)
            : base("azure:storage/accountQueueProperties:AccountQueueProperties", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing AccountQueueProperties resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static AccountQueueProperties Get(string name, Input<string> id, AccountQueuePropertiesState? state = null, CustomResourceOptions? options = null)
        {
            return new AccountQueueProperties(name, id, state, options);
        }
    }

    public sealed class AccountQueuePropertiesArgs : global::Pulumi.ResourceArgs
    {
        [Input("corsRules")]
        private InputList<Inputs.AccountQueuePropertiesCorsRuleArgs>? _corsRules;

        /// <summary>
        /// A `cors_rule` block as defined above.
        /// </summary>
        public InputList<Inputs.AccountQueuePropertiesCorsRuleArgs> CorsRules
        {
            get => _corsRules ?? (_corsRules = new InputList<Inputs.AccountQueuePropertiesCorsRuleArgs>());
            set => _corsRules = value;
        }

        /// <summary>
        /// A `hour_metrics` block as defined below.
        /// 
        /// &gt; **Note:** At least one of `cors_rule`, `logging`, `minute_metrics`, or `hour_metrics` must be specified.
        /// </summary>
        [Input("hourMetrics")]
        public Input<Inputs.AccountQueuePropertiesHourMetricsArgs>? HourMetrics { get; set; }

        /// <summary>
        /// A `logging` block as defined below.
        /// </summary>
        [Input("logging")]
        public Input<Inputs.AccountQueuePropertiesLoggingArgs>? Logging { get; set; }

        /// <summary>
        /// A `minute_metrics` block as defined below.
        /// </summary>
        [Input("minuteMetrics")]
        public Input<Inputs.AccountQueuePropertiesMinuteMetricsArgs>? MinuteMetrics { get; set; }

        /// <summary>
        /// The ID of the Storage Account to set Queue Properties on. Changing this forces a new resource to be created.
        /// </summary>
        [Input("storageAccountId", required: true)]
        public Input<string> StorageAccountId { get; set; } = null!;

        public AccountQueuePropertiesArgs()
        {
        }
        public static new AccountQueuePropertiesArgs Empty => new AccountQueuePropertiesArgs();
    }

    public sealed class AccountQueuePropertiesState : global::Pulumi.ResourceArgs
    {
        [Input("corsRules")]
        private InputList<Inputs.AccountQueuePropertiesCorsRuleGetArgs>? _corsRules;

        /// <summary>
        /// A `cors_rule` block as defined above.
        /// </summary>
        public InputList<Inputs.AccountQueuePropertiesCorsRuleGetArgs> CorsRules
        {
            get => _corsRules ?? (_corsRules = new InputList<Inputs.AccountQueuePropertiesCorsRuleGetArgs>());
            set => _corsRules = value;
        }

        /// <summary>
        /// A `hour_metrics` block as defined below.
        /// 
        /// &gt; **Note:** At least one of `cors_rule`, `logging`, `minute_metrics`, or `hour_metrics` must be specified.
        /// </summary>
        [Input("hourMetrics")]
        public Input<Inputs.AccountQueuePropertiesHourMetricsGetArgs>? HourMetrics { get; set; }

        /// <summary>
        /// A `logging` block as defined below.
        /// </summary>
        [Input("logging")]
        public Input<Inputs.AccountQueuePropertiesLoggingGetArgs>? Logging { get; set; }

        /// <summary>
        /// A `minute_metrics` block as defined below.
        /// </summary>
        [Input("minuteMetrics")]
        public Input<Inputs.AccountQueuePropertiesMinuteMetricsGetArgs>? MinuteMetrics { get; set; }

        /// <summary>
        /// The ID of the Storage Account to set Queue Properties on. Changing this forces a new resource to be created.
        /// </summary>
        [Input("storageAccountId")]
        public Input<string>? StorageAccountId { get; set; }

        public AccountQueuePropertiesState()
        {
        }
        public static new AccountQueuePropertiesState Empty => new AccountQueuePropertiesState();
    }
}
