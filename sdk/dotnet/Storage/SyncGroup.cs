// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Storage
{
    /// <summary>
    /// Manages a Storage Sync Group.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using Azure = Pulumi.Azure;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var exampleResourceGroup = new Azure.Core.ResourceGroup("exampleResourceGroup", new Azure.Core.ResourceGroupArgs
    ///         {
    ///             Location = "West Europe",
    ///         });
    ///         var exampleSync = new Azure.Storage.Sync("exampleSync", new Azure.Storage.SyncArgs
    ///         {
    ///             ResourceGroupName = exampleResourceGroup.Name,
    ///             Location = exampleResourceGroup.Location,
    ///         });
    ///         var exampleSyncGroup = new Azure.Storage.SyncGroup("exampleSyncGroup", new Azure.Storage.SyncGroupArgs
    ///         {
    ///             StorageSyncId = exampleSync.Id,
    ///         });
    ///     }
    /// 
    /// }
    /// ```
    /// 
    /// ## Import
    /// 
    /// Storage Sync Groups can be imported using the `resource id`, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import azure:storage/syncGroup:SyncGroup example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resGroup1/providers/Microsoft.StorageSync/storageSyncServices/sync1/syncGroups/group1
    /// ```
    /// </summary>
    public partial class SyncGroup : Pulumi.CustomResource
    {
        /// <summary>
        /// The name which should be used for this Storage Sync Group. Changing this forces a new Storage Sync Group to be created.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The resource ID of the Storage Sync where this Storage Sync Group is. Changing this forces a new Storage Sync Group to be created.
        /// </summary>
        [Output("storageSyncId")]
        public Output<string> StorageSyncId { get; private set; } = null!;


        /// <summary>
        /// Create a SyncGroup resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public SyncGroup(string name, SyncGroupArgs args, CustomResourceOptions? options = null)
            : base("azure:storage/syncGroup:SyncGroup", name, args ?? new SyncGroupArgs(), MakeResourceOptions(options, ""))
        {
        }

        private SyncGroup(string name, Input<string> id, SyncGroupState? state = null, CustomResourceOptions? options = null)
            : base("azure:storage/syncGroup:SyncGroup", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing SyncGroup resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static SyncGroup Get(string name, Input<string> id, SyncGroupState? state = null, CustomResourceOptions? options = null)
        {
            return new SyncGroup(name, id, state, options);
        }
    }

    public sealed class SyncGroupArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name which should be used for this Storage Sync Group. Changing this forces a new Storage Sync Group to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The resource ID of the Storage Sync where this Storage Sync Group is. Changing this forces a new Storage Sync Group to be created.
        /// </summary>
        [Input("storageSyncId", required: true)]
        public Input<string> StorageSyncId { get; set; } = null!;

        public SyncGroupArgs()
        {
        }
    }

    public sealed class SyncGroupState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name which should be used for this Storage Sync Group. Changing this forces a new Storage Sync Group to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The resource ID of the Storage Sync where this Storage Sync Group is. Changing this forces a new Storage Sync Group to be created.
        /// </summary>
        [Input("storageSyncId")]
        public Input<string>? StorageSyncId { get; set; }

        public SyncGroupState()
        {
        }
    }
}
