// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Storage
{
    /// <summary>
    /// Manages a Storage Object Replication.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using Azure = Pulumi.Azure;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var srcResourceGroup = new Azure.Core.ResourceGroup("srcResourceGroup", new Azure.Core.ResourceGroupArgs
    ///         {
    ///             Location = "West Europe",
    ///         });
    ///         var srcAccount = new Azure.Storage.Account("srcAccount", new Azure.Storage.AccountArgs
    ///         {
    ///             ResourceGroupName = srcResourceGroup.Name,
    ///             Location = srcResourceGroup.Location,
    ///             AccountTier = "Standard",
    ///             AccountReplicationType = "LRS",
    ///             BlobProperties = new Azure.Storage.Inputs.AccountBlobPropertiesArgs
    ///             {
    ///                 VersioningEnabled = true,
    ///                 ChangeFeedEnabled = true,
    ///             },
    ///         });
    ///         var srcContainer = new Azure.Storage.Container("srcContainer", new Azure.Storage.ContainerArgs
    ///         {
    ///             StorageAccountName = srcAccount.Name,
    ///             ContainerAccessType = "private",
    ///         });
    ///         var dstResourceGroup = new Azure.Core.ResourceGroup("dstResourceGroup", new Azure.Core.ResourceGroupArgs
    ///         {
    ///             Location = "East US",
    ///         });
    ///         var dstAccount = new Azure.Storage.Account("dstAccount", new Azure.Storage.AccountArgs
    ///         {
    ///             ResourceGroupName = dstResourceGroup.Name,
    ///             Location = dstResourceGroup.Location,
    ///             AccountTier = "Standard",
    ///             AccountReplicationType = "LRS",
    ///             BlobProperties = new Azure.Storage.Inputs.AccountBlobPropertiesArgs
    ///             {
    ///                 VersioningEnabled = true,
    ///                 ChangeFeedEnabled = true,
    ///             },
    ///         });
    ///         var dstContainer = new Azure.Storage.Container("dstContainer", new Azure.Storage.ContainerArgs
    ///         {
    ///             StorageAccountName = dstAccount.Name,
    ///             ContainerAccessType = "private",
    ///         });
    ///         var example = new Azure.Storage.ObjectReplication("example", new Azure.Storage.ObjectReplicationArgs
    ///         {
    ///             SourceStorageAccountId = srcAccount.Id,
    ///             DestinationStorageAccountId = dstAccount.Id,
    ///             Rules = 
    ///             {
    ///                 new Azure.Storage.Inputs.ObjectReplicationRuleArgs
    ///                 {
    ///                     SourceContainerName = srcContainer.Name,
    ///                     DestinationContainerName = dstContainer.Name,
    ///                 },
    ///             },
    ///         });
    ///     }
    /// 
    /// }
    /// ```
    /// 
    /// ## Import
    /// 
    /// Storage Object Replication Policys can be imported using the `resource id`, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import azure:storage/objectReplication:ObjectReplication example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Storage/storageAccounts/storageAccount1/objectReplicationPolicies/objectReplicationPolicy1;/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group2/providers/Microsoft.Storage/storageAccounts/storageAccount2/objectReplicationPolicies/objectReplicationPolicy2
    /// ```
    /// </summary>
    [AzureResourceType("azure:storage/objectReplication:ObjectReplication")]
    public partial class ObjectReplication : Pulumi.CustomResource
    {
        /// <summary>
        /// The ID of the Object Replication in the destination storage account.
        /// </summary>
        [Output("destinationObjectReplicationId")]
        public Output<string> DestinationObjectReplicationId { get; private set; } = null!;

        /// <summary>
        /// The ID of the destination storage account. Changing this forces a new Storage Object Replication to be created.
        /// </summary>
        [Output("destinationStorageAccountId")]
        public Output<string> DestinationStorageAccountId { get; private set; } = null!;

        /// <summary>
        /// One or more `rules` blocks as defined below.
        /// </summary>
        [Output("rules")]
        public Output<ImmutableArray<Outputs.ObjectReplicationRule>> Rules { get; private set; } = null!;

        /// <summary>
        /// The ID of the Object Replication in the source storage account.
        /// </summary>
        [Output("sourceObjectReplicationId")]
        public Output<string> SourceObjectReplicationId { get; private set; } = null!;

        /// <summary>
        /// The ID of the source storage account. Changing this forces a new Storage Object Replication to be created.
        /// </summary>
        [Output("sourceStorageAccountId")]
        public Output<string> SourceStorageAccountId { get; private set; } = null!;


        /// <summary>
        /// Create a ObjectReplication resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ObjectReplication(string name, ObjectReplicationArgs args, CustomResourceOptions? options = null)
            : base("azure:storage/objectReplication:ObjectReplication", name, args ?? new ObjectReplicationArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ObjectReplication(string name, Input<string> id, ObjectReplicationState? state = null, CustomResourceOptions? options = null)
            : base("azure:storage/objectReplication:ObjectReplication", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ObjectReplication resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ObjectReplication Get(string name, Input<string> id, ObjectReplicationState? state = null, CustomResourceOptions? options = null)
        {
            return new ObjectReplication(name, id, state, options);
        }
    }

    public sealed class ObjectReplicationArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the destination storage account. Changing this forces a new Storage Object Replication to be created.
        /// </summary>
        [Input("destinationStorageAccountId", required: true)]
        public Input<string> DestinationStorageAccountId { get; set; } = null!;

        [Input("rules", required: true)]
        private InputList<Inputs.ObjectReplicationRuleArgs>? _rules;

        /// <summary>
        /// One or more `rules` blocks as defined below.
        /// </summary>
        public InputList<Inputs.ObjectReplicationRuleArgs> Rules
        {
            get => _rules ?? (_rules = new InputList<Inputs.ObjectReplicationRuleArgs>());
            set => _rules = value;
        }

        /// <summary>
        /// The ID of the source storage account. Changing this forces a new Storage Object Replication to be created.
        /// </summary>
        [Input("sourceStorageAccountId", required: true)]
        public Input<string> SourceStorageAccountId { get; set; } = null!;

        public ObjectReplicationArgs()
        {
        }
    }

    public sealed class ObjectReplicationState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the Object Replication in the destination storage account.
        /// </summary>
        [Input("destinationObjectReplicationId")]
        public Input<string>? DestinationObjectReplicationId { get; set; }

        /// <summary>
        /// The ID of the destination storage account. Changing this forces a new Storage Object Replication to be created.
        /// </summary>
        [Input("destinationStorageAccountId")]
        public Input<string>? DestinationStorageAccountId { get; set; }

        [Input("rules")]
        private InputList<Inputs.ObjectReplicationRuleGetArgs>? _rules;

        /// <summary>
        /// One or more `rules` blocks as defined below.
        /// </summary>
        public InputList<Inputs.ObjectReplicationRuleGetArgs> Rules
        {
            get => _rules ?? (_rules = new InputList<Inputs.ObjectReplicationRuleGetArgs>());
            set => _rules = value;
        }

        /// <summary>
        /// The ID of the Object Replication in the source storage account.
        /// </summary>
        [Input("sourceObjectReplicationId")]
        public Input<string>? SourceObjectReplicationId { get; set; }

        /// <summary>
        /// The ID of the source storage account. Changing this forces a new Storage Object Replication to be created.
        /// </summary>
        [Input("sourceStorageAccountId")]
        public Input<string>? SourceStorageAccountId { get; set; }

        public ObjectReplicationState()
        {
        }
    }
}
