// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Storage
{
    /// <summary>
    /// Manages the Static Website of an Azure Storage Account.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Azure = Pulumi.Azure;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Azure.Core.ResourceGroup("example", new()
    ///     {
    ///         Name = "example-resources",
    ///         Location = "West Europe",
    ///     });
    /// 
    ///     var exampleAccount = new Azure.Storage.Account("example", new()
    ///     {
    ///         Name = "storageaccountname",
    ///         ResourceGroupName = example.Name,
    ///         Location = example.Location,
    ///         AccountTier = "Standard",
    ///         AccountReplicationType = "GRS",
    ///         Tags = 
    ///         {
    ///             { "environment", "staging" },
    ///         },
    ///     });
    /// 
    ///     var test = new Azure.Storage.AccountStaticWebsite("test", new()
    ///     {
    ///         StorageAccountId = testAzurermStorageAccount.Id,
    ///         Error404Document = "custom_not_found.html",
    ///         IndexDocument = "custom_index.html",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Storage Account Static Websites can be imported using the `resource id`, e.g.
    /// 
    /// ```sh
    /// $ pulumi import azure:storage/accountStaticWebsite:AccountStaticWebsite mysite /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myresourcegroup/providers/Microsoft.Storage/storageAccounts/myaccount
    /// ```
    /// </summary>
    [AzureResourceType("azure:storage/accountStaticWebsite:AccountStaticWebsite")]
    public partial class AccountStaticWebsite : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The absolute path to a custom webpage that should be used when a request is made which does not correspond to an existing file.
        /// </summary>
        [Output("error404Document")]
        public Output<string?> Error404Document { get; private set; } = null!;

        /// <summary>
        /// The webpage that Azure Storage serves for requests to the root of a website or any subfolder. For example, index.html.
        /// </summary>
        [Output("indexDocument")]
        public Output<string?> IndexDocument { get; private set; } = null!;

        /// <summary>
        /// The ID of the Storage Account to set Static Website on. Changing this forces a new resource to be created.
        /// </summary>
        [Output("storageAccountId")]
        public Output<string> StorageAccountId { get; private set; } = null!;


        /// <summary>
        /// Create a AccountStaticWebsite resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public AccountStaticWebsite(string name, AccountStaticWebsiteArgs args, CustomResourceOptions? options = null)
            : base("azure:storage/accountStaticWebsite:AccountStaticWebsite", name, args ?? new AccountStaticWebsiteArgs(), MakeResourceOptions(options, ""))
        {
        }

        private AccountStaticWebsite(string name, Input<string> id, AccountStaticWebsiteState? state = null, CustomResourceOptions? options = null)
            : base("azure:storage/accountStaticWebsite:AccountStaticWebsite", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing AccountStaticWebsite resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static AccountStaticWebsite Get(string name, Input<string> id, AccountStaticWebsiteState? state = null, CustomResourceOptions? options = null)
        {
            return new AccountStaticWebsite(name, id, state, options);
        }
    }

    public sealed class AccountStaticWebsiteArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The absolute path to a custom webpage that should be used when a request is made which does not correspond to an existing file.
        /// </summary>
        [Input("error404Document")]
        public Input<string>? Error404Document { get; set; }

        /// <summary>
        /// The webpage that Azure Storage serves for requests to the root of a website or any subfolder. For example, index.html.
        /// </summary>
        [Input("indexDocument")]
        public Input<string>? IndexDocument { get; set; }

        /// <summary>
        /// The ID of the Storage Account to set Static Website on. Changing this forces a new resource to be created.
        /// </summary>
        [Input("storageAccountId", required: true)]
        public Input<string> StorageAccountId { get; set; } = null!;

        public AccountStaticWebsiteArgs()
        {
        }
        public static new AccountStaticWebsiteArgs Empty => new AccountStaticWebsiteArgs();
    }

    public sealed class AccountStaticWebsiteState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The absolute path to a custom webpage that should be used when a request is made which does not correspond to an existing file.
        /// </summary>
        [Input("error404Document")]
        public Input<string>? Error404Document { get; set; }

        /// <summary>
        /// The webpage that Azure Storage serves for requests to the root of a website or any subfolder. For example, index.html.
        /// </summary>
        [Input("indexDocument")]
        public Input<string>? IndexDocument { get; set; }

        /// <summary>
        /// The ID of the Storage Account to set Static Website on. Changing this forces a new resource to be created.
        /// </summary>
        [Input("storageAccountId")]
        public Input<string>? StorageAccountId { get; set; }

        public AccountStaticWebsiteState()
        {
        }
        public static new AccountStaticWebsiteState Empty => new AccountStaticWebsiteState();
    }
}
