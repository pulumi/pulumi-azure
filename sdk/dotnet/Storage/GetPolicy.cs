// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Storage
{
    public static class GetPolicy
    {
        /// <summary>
        /// Use this data source to access information about an existing Storage Management Policy.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Azure = Pulumi.Azure;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleAccount = Azure.Storage.GetAccount.Invoke(new()
        ///     {
        ///         Name = "storageaccountname",
        ///         ResourceGroupName = "resourcegroupname",
        ///     });
        /// 
        ///     var examplePolicy = Azure.Storage.GetPolicy.Invoke(new()
        ///     {
        ///         StorageAccountId = exampleAccount.Apply(getAccountResult =&gt; getAccountResult.Id),
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetPolicyResult> InvokeAsync(GetPolicyArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetPolicyResult>("azure:storage/getPolicy:getPolicy", args ?? new GetPolicyArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to access information about an existing Storage Management Policy.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Azure = Pulumi.Azure;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleAccount = Azure.Storage.GetAccount.Invoke(new()
        ///     {
        ///         Name = "storageaccountname",
        ///         ResourceGroupName = "resourcegroupname",
        ///     });
        /// 
        ///     var examplePolicy = Azure.Storage.GetPolicy.Invoke(new()
        ///     {
        ///         StorageAccountId = exampleAccount.Apply(getAccountResult =&gt; getAccountResult.Id),
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetPolicyResult> Invoke(GetPolicyInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetPolicyResult>("azure:storage/getPolicy:getPolicy", args ?? new GetPolicyInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetPolicyArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Specifies the id of the storage account to retrieve the management policy for.
        /// </summary>
        [Input("storageAccountId", required: true)]
        public string StorageAccountId { get; set; } = null!;

        public GetPolicyArgs()
        {
        }
        public static new GetPolicyArgs Empty => new GetPolicyArgs();
    }

    public sealed class GetPolicyInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Specifies the id of the storage account to retrieve the management policy for.
        /// </summary>
        [Input("storageAccountId", required: true)]
        public Input<string> StorageAccountId { get; set; } = null!;

        public GetPolicyInvokeArgs()
        {
        }
        public static new GetPolicyInvokeArgs Empty => new GetPolicyInvokeArgs();
    }


    [OutputType]
    public sealed class GetPolicyResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// A `rule` block as documented below.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetPolicyRuleResult> Rules;
        public readonly string StorageAccountId;

        [OutputConstructor]
        private GetPolicyResult(
            string id,

            ImmutableArray<Outputs.GetPolicyRuleResult> rules,

            string storageAccountId)
        {
            Id = id;
            Rules = rules;
            StorageAccountId = storageAccountId;
        }
    }
}
