// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Storage.Inputs
{

    public sealed class ManagementPolicyRuleFiltersArgs : global::Pulumi.ResourceArgs
    {
        [Input("blobTypes", required: true)]
        private InputList<string>? _blobTypes;

        /// <summary>
        /// An array of predefined values. Valid options are `blockBlob` and `appendBlob`.
        /// </summary>
        public InputList<string> BlobTypes
        {
            get => _blobTypes ?? (_blobTypes = new InputList<string>());
            set => _blobTypes = value;
        }

        [Input("matchBlobIndexTags")]
        private InputList<Inputs.ManagementPolicyRuleFiltersMatchBlobIndexTagArgs>? _matchBlobIndexTags;

        /// <summary>
        /// A `match_blob_index_tag` block as defined below. The block defines the blob index tag based filtering for blob objects.
        /// 
        /// &gt; **NOTE:** The `match_blob_index_tag` property requires enabling the `blobIndex` feature with [PSH or CLI commands](https://azure.microsoft.com/en-us/blog/manage-and-find-data-with-blob-index-for-azure-storage-now-in-preview/).
        /// </summary>
        public InputList<Inputs.ManagementPolicyRuleFiltersMatchBlobIndexTagArgs> MatchBlobIndexTags
        {
            get => _matchBlobIndexTags ?? (_matchBlobIndexTags = new InputList<Inputs.ManagementPolicyRuleFiltersMatchBlobIndexTagArgs>());
            set => _matchBlobIndexTags = value;
        }

        [Input("prefixMatches")]
        private InputList<string>? _prefixMatches;

        /// <summary>
        /// An array of strings for prefixes to be matched.
        /// </summary>
        public InputList<string> PrefixMatches
        {
            get => _prefixMatches ?? (_prefixMatches = new InputList<string>());
            set => _prefixMatches = value;
        }

        public ManagementPolicyRuleFiltersArgs()
        {
        }
        public static new ManagementPolicyRuleFiltersArgs Empty => new ManagementPolicyRuleFiltersArgs();
    }
}
