// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Storage.Inputs
{

    public sealed class AccountNetworkRulesGetArgs : Pulumi.ResourceArgs
    {
        [Input("bypasses")]
        private InputList<string>? _bypasses;

        /// <summary>
        /// Specifies whether traffic is bypassed for Logging/Metrics/AzureServices. Valid options are
        /// any combination of `Logging`, `Metrics`, `AzureServices`, or `None`.
        /// </summary>
        public InputList<string> Bypasses
        {
            get => _bypasses ?? (_bypasses = new InputList<string>());
            set => _bypasses = value;
        }

        /// <summary>
        /// Specifies the default action of allow or deny when no other rules match. Valid options are `Deny` or `Allow`.
        /// </summary>
        [Input("defaultAction", required: true)]
        public Input<string> DefaultAction { get; set; } = null!;

        [Input("ipRules")]
        private InputList<string>? _ipRules;

        /// <summary>
        /// List of public IP or IP ranges in CIDR Format. Only IPV4 addresses are allowed. Private IP address ranges (as defined in [RFC 1918](https://tools.ietf.org/html/rfc1918#section-3)) are not allowed.
        /// </summary>
        public InputList<string> IpRules
        {
            get => _ipRules ?? (_ipRules = new InputList<string>());
            set => _ipRules = value;
        }

        [Input("virtualNetworkSubnetIds")]
        private InputList<string>? _virtualNetworkSubnetIds;

        /// <summary>
        /// A list of resource ids for subnets.
        /// </summary>
        public InputList<string> VirtualNetworkSubnetIds
        {
            get => _virtualNetworkSubnetIds ?? (_virtualNetworkSubnetIds = new InputList<string>());
            set => _virtualNetworkSubnetIds = value;
        }

        public AccountNetworkRulesGetArgs()
        {
        }
    }
}
