// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Storage
{
    public static partial class Invokes
    {
        /// <summary>
        /// Use this data source to obtain a Shared Access Signature (SAS Token) for an existing Storage Account.
        /// 
        /// Shared access signatures allow fine-grained, ephemeral access control to various aspects of an Azure Storage Account.
        /// 
        /// Note that this is an [Account SAS](https://docs.microsoft.com/en-us/rest/api/storageservices/constructing-an-account-sas)
        /// and *not* a [Service SAS](https://docs.microsoft.com/en-us/rest/api/storageservices/constructing-a-service-sas).
        /// 
        /// &gt; This content is derived from https://github.com/terraform-providers/terraform-provider-azurerm/blob/master/website/docs/d/storage_account_sas.html.markdown.
        /// </summary>
        public static Task<GetAccountSASResult> GetAccountSAS(GetAccountSASArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetAccountSASResult>("azure:storage/getAccountSAS:getAccountSAS", args ?? InvokeArgs.Empty, options.WithVersion());
    }

    public sealed class GetAccountSASArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The connection string for the storage account to which this SAS applies. Typically directly from the `primary_connection_string` attribute of a `azure.storage.Account` resource.
        /// </summary>
        [Input("connectionString", required: true)]
        public string ConnectionString { get; set; } = null!;

        /// <summary>
        /// The expiration time and date of this SAS. Must be a valid ISO-8601 format time/date string.
        /// </summary>
        [Input("expiry", required: true)]
        public string Expiry { get; set; } = null!;

        /// <summary>
        /// Only permit `https` access. If `false`, both `http` and `https` are permitted. Defaults to `true`.
        /// </summary>
        [Input("httpsOnly")]
        public bool? HttpsOnly { get; set; }

        /// <summary>
        /// A `permissions` block as defined below.
        /// </summary>
        [Input("permissions", required: true)]
        public Inputs.GetAccountSASPermissionsArgs Permissions { get; set; } = null!;

        /// <summary>
        /// A `resource_types` block as defined below.
        /// </summary>
        [Input("resourceTypes", required: true)]
        public Inputs.GetAccountSASResourceTypesArgs ResourceTypes { get; set; } = null!;

        /// <summary>
        /// A `services` block as defined below.
        /// </summary>
        [Input("services", required: true)]
        public Inputs.GetAccountSASServicesArgs Services { get; set; } = null!;

        /// <summary>
        /// The starting time and date of validity of this SAS. Must be a valid ISO-8601 format time/date string.
        /// </summary>
        [Input("start", required: true)]
        public string Start { get; set; } = null!;

        public GetAccountSASArgs()
        {
        }
    }

    [OutputType]
    public sealed class GetAccountSASResult
    {
        public readonly string ConnectionString;
        public readonly string Expiry;
        public readonly bool? HttpsOnly;
        public readonly Outputs.GetAccountSASPermissionsResult Permissions;
        public readonly Outputs.GetAccountSASResourceTypesResult ResourceTypes;
        /// <summary>
        /// The computed Account Shared Access Signature (SAS).
        /// </summary>
        public readonly string Sas;
        public readonly Outputs.GetAccountSASServicesResult Services;
        public readonly string Start;
        /// <summary>
        /// id is the provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;

        [OutputConstructor]
        private GetAccountSASResult(
            string connectionString,
            string expiry,
            bool? httpsOnly,
            Outputs.GetAccountSASPermissionsResult permissions,
            Outputs.GetAccountSASResourceTypesResult resourceTypes,
            string sas,
            Outputs.GetAccountSASServicesResult services,
            string start,
            string id)
        {
            ConnectionString = connectionString;
            Expiry = expiry;
            HttpsOnly = httpsOnly;
            Permissions = permissions;
            ResourceTypes = resourceTypes;
            Sas = sas;
            Services = services;
            Start = start;
            Id = id;
        }
    }

    namespace Inputs
    {

    public sealed class GetAccountSASPermissionsArgs : Pulumi.InvokeArgs
    {
        [Input("add", required: true)]
        public bool Add { get; set; }

        [Input("create", required: true)]
        public bool Create { get; set; }

        [Input("delete", required: true)]
        public bool Delete { get; set; }

        [Input("list", required: true)]
        public bool List { get; set; }

        [Input("process", required: true)]
        public bool Process { get; set; }

        [Input("read", required: true)]
        public bool Read { get; set; }

        [Input("update", required: true)]
        public bool Update { get; set; }

        [Input("write", required: true)]
        public bool Write { get; set; }

        public GetAccountSASPermissionsArgs()
        {
        }
    }

    public sealed class GetAccountSASResourceTypesArgs : Pulumi.InvokeArgs
    {
        [Input("container", required: true)]
        public bool Container { get; set; }

        [Input("object", required: true)]
        public bool Object { get; set; }

        [Input("service", required: true)]
        public bool Service { get; set; }

        public GetAccountSASResourceTypesArgs()
        {
        }
    }

    public sealed class GetAccountSASServicesArgs : Pulumi.InvokeArgs
    {
        [Input("blob", required: true)]
        public bool Blob { get; set; }

        [Input("file", required: true)]
        public bool File { get; set; }

        [Input("queue", required: true)]
        public bool Queue { get; set; }

        [Input("table", required: true)]
        public bool Table { get; set; }

        public GetAccountSASServicesArgs()
        {
        }
    }
    }

    namespace Outputs
    {

    [OutputType]
    public sealed class GetAccountSASPermissionsResult
    {
        public readonly bool Add;
        public readonly bool Create;
        public readonly bool Delete;
        public readonly bool List;
        public readonly bool Process;
        public readonly bool Read;
        public readonly bool Update;
        public readonly bool Write;

        [OutputConstructor]
        private GetAccountSASPermissionsResult(
            bool add,
            bool create,
            bool delete,
            bool list,
            bool process,
            bool read,
            bool update,
            bool write)
        {
            Add = add;
            Create = create;
            Delete = delete;
            List = list;
            Process = process;
            Read = read;
            Update = update;
            Write = write;
        }
    }

    [OutputType]
    public sealed class GetAccountSASResourceTypesResult
    {
        public readonly bool Container;
        public readonly bool Object;
        public readonly bool Service;

        [OutputConstructor]
        private GetAccountSASResourceTypesResult(
            bool container,
            bool @object,
            bool service)
        {
            Container = container;
            Object = @object;
            Service = service;
        }
    }

    [OutputType]
    public sealed class GetAccountSASServicesResult
    {
        public readonly bool Blob;
        public readonly bool File;
        public readonly bool Queue;
        public readonly bool Table;

        [OutputConstructor]
        private GetAccountSASServicesResult(
            bool blob,
            bool file,
            bool queue,
            bool table)
        {
            Blob = blob;
            File = file;
            Queue = queue;
            Table = table;
        }
    }
    }
}
