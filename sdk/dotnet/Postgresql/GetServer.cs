// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.PostgreSql
{
    public static partial class Invokes
    {
        /// <summary>
        /// Use this data source to access information about an existing PostgreSQL Azure Database Server.
        /// 
        /// &gt; This content is derived from https://github.com/terraform-providers/terraform-provider-azurerm/blob/master/website/docs/d/postgresql_server.html.markdown.
        /// </summary>
        public static Task<GetServerResult> GetServer(GetServerArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetServerResult>("azure:postgresql/getServer:getServer", args ?? ResourceArgs.Empty, options.WithVersion());
    }

    public sealed class GetServerArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the PostgreSQL Server.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// Specifies the name of the Resource Group where the PostgreSQL Server exists.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetServerArgs()
        {
        }
    }

    [OutputType]
    public sealed class GetServerResult
    {
        /// <summary>
        /// The administrator username of the PostgreSQL Server.
        /// </summary>
        public readonly string AdministratorLogin;
        /// <summary>
        /// The fully qualified domain name of the PostgreSQL Server.
        /// </summary>
        public readonly string Fqdn;
        /// <summary>
        /// The location of the Resource Group in which the PostgreSQL Server exists.
        /// </summary>
        public readonly string Location;
        public readonly string Name;
        public readonly string ResourceGroupName;
        /// <summary>
        /// A mapping of tags assigned to the resource.
        /// </summary>
        public readonly ImmutableDictionary<string, string> Tags;
        /// <summary>
        /// The version of the PostgreSQL Server.
        /// </summary>
        public readonly string Version;
        /// <summary>
        /// id is the provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;

        [OutputConstructor]
        private GetServerResult(
            string administratorLogin,
            string fqdn,
            string location,
            string name,
            string resourceGroupName,
            ImmutableDictionary<string, string> tags,
            string version,
            string id)
        {
            AdministratorLogin = administratorLogin;
            Fqdn = fqdn;
            Location = location;
            Name = name;
            ResourceGroupName = resourceGroupName;
            Tags = tags;
            Version = version;
            Id = id;
        }
    }
}
