// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.MachineLearning
{
    /// <summary>
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using Azure = Pulumi.Azure;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var current = Azure.Core.GetClientConfig.Invoke();
    /// 
    ///     var exampleResourceGroup = new Azure.Core.ResourceGroup("exampleResourceGroup", new()
    ///     {
    ///         Location = "West Europe",
    ///     });
    /// 
    ///     var exampleInsights = new Azure.AppInsights.Insights("exampleInsights", new()
    ///     {
    ///         Location = exampleResourceGroup.Location,
    ///         ResourceGroupName = exampleResourceGroup.Name,
    ///         ApplicationType = "web",
    ///     });
    /// 
    ///     var exampleKeyVault = new Azure.KeyVault.KeyVault("exampleKeyVault", new()
    ///     {
    ///         Location = exampleResourceGroup.Location,
    ///         ResourceGroupName = exampleResourceGroup.Name,
    ///         TenantId = current.Apply(getClientConfigResult =&gt; getClientConfigResult.TenantId),
    ///         SkuName = "premium",
    ///     });
    /// 
    ///     var exampleAccount = new Azure.Storage.Account("exampleAccount", new()
    ///     {
    ///         Location = exampleResourceGroup.Location,
    ///         ResourceGroupName = exampleResourceGroup.Name,
    ///         AccountTier = "Standard",
    ///         AccountReplicationType = "GRS",
    ///     });
    /// 
    ///     var exampleWorkspace = new Azure.MachineLearning.Workspace("exampleWorkspace", new()
    ///     {
    ///         Location = exampleResourceGroup.Location,
    ///         ResourceGroupName = exampleResourceGroup.Name,
    ///         ApplicationInsightsId = exampleInsights.Id,
    ///         KeyVaultId = exampleKeyVault.Id,
    ///         StorageAccountId = exampleAccount.Id,
    ///         Identity = new Azure.MachineLearning.Inputs.WorkspaceIdentityArgs
    ///         {
    ///             Type = "SystemAssigned",
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// ### With Data Encryption
    /// 
    /// &gt; **NOTE:** The Key Vault must enable purge protection.
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using Azure = Pulumi.Azure;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var current = Azure.Core.GetClientConfig.Invoke();
    /// 
    ///     var exampleResourceGroup = new Azure.Core.ResourceGroup("exampleResourceGroup", new()
    ///     {
    ///         Location = "West Europe",
    ///     });
    /// 
    ///     var exampleInsights = new Azure.AppInsights.Insights("exampleInsights", new()
    ///     {
    ///         Location = exampleResourceGroup.Location,
    ///         ResourceGroupName = exampleResourceGroup.Name,
    ///         ApplicationType = "web",
    ///     });
    /// 
    ///     var exampleKeyVault = new Azure.KeyVault.KeyVault("exampleKeyVault", new()
    ///     {
    ///         Location = exampleResourceGroup.Location,
    ///         ResourceGroupName = exampleResourceGroup.Name,
    ///         TenantId = current.Apply(getClientConfigResult =&gt; getClientConfigResult.TenantId),
    ///         SkuName = "premium",
    ///         PurgeProtectionEnabled = true,
    ///     });
    /// 
    ///     var exampleAccessPolicy = new Azure.KeyVault.AccessPolicy("exampleAccessPolicy", new()
    ///     {
    ///         KeyVaultId = exampleKeyVault.Id,
    ///         TenantId = current.Apply(getClientConfigResult =&gt; getClientConfigResult.TenantId),
    ///         ObjectId = current.Apply(getClientConfigResult =&gt; getClientConfigResult.ObjectId),
    ///         KeyPermissions = new[]
    ///         {
    ///             "Create",
    ///             "Get",
    ///             "Delete",
    ///             "Purge",
    ///             "GetRotationPolicy",
    ///         },
    ///     });
    /// 
    ///     var exampleAccount = new Azure.Storage.Account("exampleAccount", new()
    ///     {
    ///         Location = exampleResourceGroup.Location,
    ///         ResourceGroupName = exampleResourceGroup.Name,
    ///         AccountTier = "Standard",
    ///         AccountReplicationType = "GRS",
    ///     });
    /// 
    ///     var exampleKey = new Azure.KeyVault.Key("exampleKey", new()
    ///     {
    ///         KeyVaultId = exampleKeyVault.Id,
    ///         KeyType = "RSA",
    ///         KeySize = 2048,
    ///         KeyOpts = new[]
    ///         {
    ///             "decrypt",
    ///             "encrypt",
    ///             "sign",
    ///             "unwrapKey",
    ///             "verify",
    ///             "wrapKey",
    ///         },
    ///     }, new CustomResourceOptions
    ///     {
    ///         DependsOn = new[]
    ///         {
    ///             exampleKeyVault,
    ///             exampleAccessPolicy,
    ///         },
    ///     });
    /// 
    ///     var exampleWorkspace = new Azure.MachineLearning.Workspace("exampleWorkspace", new()
    ///     {
    ///         Location = exampleResourceGroup.Location,
    ///         ResourceGroupName = exampleResourceGroup.Name,
    ///         ApplicationInsightsId = exampleInsights.Id,
    ///         KeyVaultId = exampleKeyVault.Id,
    ///         StorageAccountId = exampleAccount.Id,
    ///         Identity = new Azure.MachineLearning.Inputs.WorkspaceIdentityArgs
    ///         {
    ///             Type = "SystemAssigned",
    ///         },
    ///         Encryption = new Azure.MachineLearning.Inputs.WorkspaceEncryptionArgs
    ///         {
    ///             KeyVaultId = exampleKeyVault.Id,
    ///             KeyId = exampleKey.Id,
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// ### With User Assigned Identity And Data Encryption
    /// 
    /// &gt; **NOTE:** The Key Vault must enable purge protection.
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using Azure = Pulumi.Azure;
    /// using AzureAD = Pulumi.AzureAD;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var current = Azure.Core.GetClientConfig.Invoke();
    /// 
    ///     var exampleResourceGroup = new Azure.Core.ResourceGroup("exampleResourceGroup", new()
    ///     {
    ///         Location = "West Europe",
    ///     });
    /// 
    ///     var exampleInsights = new Azure.AppInsights.Insights("exampleInsights", new()
    ///     {
    ///         Location = exampleResourceGroup.Location,
    ///         ResourceGroupName = exampleResourceGroup.Name,
    ///         ApplicationType = "web",
    ///     });
    /// 
    ///     var exampleAccount = new Azure.Storage.Account("exampleAccount", new()
    ///     {
    ///         Location = exampleResourceGroup.Location,
    ///         ResourceGroupName = exampleResourceGroup.Name,
    ///         AccountTier = "Standard",
    ///         AccountReplicationType = "GRS",
    ///     });
    /// 
    ///     var exampleKeyVault = new Azure.KeyVault.KeyVault("exampleKeyVault", new()
    ///     {
    ///         Location = exampleResourceGroup.Location,
    ///         ResourceGroupName = exampleResourceGroup.Name,
    ///         TenantId = current.Apply(getClientConfigResult =&gt; getClientConfigResult.TenantId),
    ///         SkuName = "premium",
    ///         PurgeProtectionEnabled = true,
    ///     });
    /// 
    ///     var exampleUserAssignedIdentity = new Azure.Authorization.UserAssignedIdentity("exampleUserAssignedIdentity", new()
    ///     {
    ///         Location = exampleResourceGroup.Location,
    ///         ResourceGroupName = exampleResourceGroup.Name,
    ///     });
    /// 
    ///     var example_identity = new Azure.KeyVault.AccessPolicy("example-identity", new()
    ///     {
    ///         KeyVaultId = exampleKeyVault.Id,
    ///         TenantId = current.Apply(getClientConfigResult =&gt; getClientConfigResult.TenantId),
    ///         ObjectId = exampleUserAssignedIdentity.PrincipalId,
    ///         KeyPermissions = new[]
    ///         {
    ///             "WrapKey",
    ///             "UnwrapKey",
    ///             "Get",
    ///             "Recover",
    ///         },
    ///         SecretPermissions = new[]
    ///         {
    ///             "Get",
    ///             "List",
    ///             "Set",
    ///             "Delete",
    ///             "Recover",
    ///             "Backup",
    ///             "Restore",
    ///         },
    ///     });
    /// 
    ///     var example_sp = new Azure.KeyVault.AccessPolicy("example-sp", new()
    ///     {
    ///         KeyVaultId = exampleKeyVault.Id,
    ///         TenantId = current.Apply(getClientConfigResult =&gt; getClientConfigResult.TenantId),
    ///         ObjectId = current.Apply(getClientConfigResult =&gt; getClientConfigResult.ObjectId),
    ///         KeyPermissions = new[]
    ///         {
    ///             "Get",
    ///             "Create",
    ///             "Recover",
    ///             "Delete",
    ///             "Purge",
    ///             "GetRotationPolicy",
    ///         },
    ///     });
    /// 
    ///     var test = AzureAD.GetServicePrincipal.Invoke(new()
    ///     {
    ///         DisplayName = "Azure Cosmos DB",
    ///     });
    /// 
    ///     var example_cosmosdb = new Azure.KeyVault.AccessPolicy("example-cosmosdb", new()
    ///     {
    ///         KeyVaultId = exampleKeyVault.Id,
    ///         TenantId = current.Apply(getClientConfigResult =&gt; getClientConfigResult.TenantId),
    ///         ObjectId = test.Apply(getServicePrincipalResult =&gt; getServicePrincipalResult.ObjectId),
    ///         KeyPermissions = new[]
    ///         {
    ///             "Get",
    ///             "Recover",
    ///             "UnwrapKey",
    ///             "WrapKey",
    ///         },
    ///     }, new CustomResourceOptions
    ///     {
    ///         DependsOn = 
    ///         {
    ///             test,
    ///             current,
    ///         },
    ///     });
    /// 
    ///     var exampleKey = new Azure.KeyVault.Key("exampleKey", new()
    ///     {
    ///         KeyVaultId = exampleKeyVault.Id,
    ///         KeyType = "RSA",
    ///         KeySize = 2048,
    ///         KeyOpts = new[]
    ///         {
    ///             "decrypt",
    ///             "encrypt",
    ///             "sign",
    ///             "unwrapKey",
    ///             "verify",
    ///             "wrapKey",
    ///         },
    ///     }, new CustomResourceOptions
    ///     {
    ///         DependsOn = new[]
    ///         {
    ///             exampleKeyVault,
    ///             example_sp,
    ///         },
    ///     });
    /// 
    ///     var example_role1 = new Azure.Authorization.Assignment("example-role1", new()
    ///     {
    ///         Scope = exampleKeyVault.Id,
    ///         RoleDefinitionName = "Contributor",
    ///         PrincipalId = exampleUserAssignedIdentity.PrincipalId,
    ///     });
    /// 
    ///     var example_role2 = new Azure.Authorization.Assignment("example-role2", new()
    ///     {
    ///         Scope = exampleAccount.Id,
    ///         RoleDefinitionName = "Storage Blob Data Contributor",
    ///         PrincipalId = exampleUserAssignedIdentity.PrincipalId,
    ///     });
    /// 
    ///     var example_role3 = new Azure.Authorization.Assignment("example-role3", new()
    ///     {
    ///         Scope = exampleAccount.Id,
    ///         RoleDefinitionName = "Contributor",
    ///         PrincipalId = exampleUserAssignedIdentity.PrincipalId,
    ///     });
    /// 
    ///     var example_role4 = new Azure.Authorization.Assignment("example-role4", new()
    ///     {
    ///         Scope = exampleInsights.Id,
    ///         RoleDefinitionName = "Contributor",
    ///         PrincipalId = exampleUserAssignedIdentity.PrincipalId,
    ///     });
    /// 
    ///     var exampleWorkspace = new Azure.MachineLearning.Workspace("exampleWorkspace", new()
    ///     {
    ///         Location = exampleResourceGroup.Location,
    ///         ResourceGroupName = exampleResourceGroup.Name,
    ///         ApplicationInsightsId = exampleInsights.Id,
    ///         KeyVaultId = exampleKeyVault.Id,
    ///         StorageAccountId = exampleAccount.Id,
    ///         HighBusinessImpact = true,
    ///         PrimaryUserAssignedIdentity = exampleUserAssignedIdentity.Id,
    ///         Identity = new Azure.MachineLearning.Inputs.WorkspaceIdentityArgs
    ///         {
    ///             Type = "UserAssigned",
    ///             IdentityIds = new[]
    ///             {
    ///                 exampleUserAssignedIdentity.Id,
    ///             },
    ///         },
    ///         Encryption = new Azure.MachineLearning.Inputs.WorkspaceEncryptionArgs
    ///         {
    ///             UserAssignedIdentityId = exampleUserAssignedIdentity.Id,
    ///             KeyVaultId = exampleKeyVault.Id,
    ///             KeyId = exampleKey.Id,
    ///         },
    ///     }, new CustomResourceOptions
    ///     {
    ///         DependsOn = new[]
    ///         {
    ///             example_role1,
    ///             example_role2,
    ///             example_role3,
    ///             example_role4,
    ///             example_cosmosdb,
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Machine Learning Workspace can be imported using the `resource id`, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import azure:machinelearning/workspace:Workspace example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.MachineLearningServices/workspaces/workspace1
    /// ```
    /// </summary>
    [AzureResourceType("azure:machinelearning/workspace:Workspace")]
    public partial class Workspace : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The ID of the Application Insights associated with this Machine Learning Workspace. Changing this forces a new resource to be created.
        /// </summary>
        [Output("applicationInsightsId")]
        public Output<string> ApplicationInsightsId { get; private set; } = null!;

        /// <summary>
        /// The ID of the container registry associated with this Machine Learning Workspace. Changing this forces a new resource to be created.
        /// </summary>
        [Output("containerRegistryId")]
        public Output<string?> ContainerRegistryId { get; private set; } = null!;

        /// <summary>
        /// The description of this Machine Learning Workspace.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// The url for the discovery service to identify regional endpoints for machine learning experimentation services.
        /// </summary>
        [Output("discoveryUrl")]
        public Output<string> DiscoveryUrl { get; private set; } = null!;

        /// <summary>
        /// An `encryption` block as defined below. Changing this forces a new resource to be created.
        /// </summary>
        [Output("encryption")]
        public Output<Outputs.WorkspaceEncryption?> Encryption { get; private set; } = null!;

        /// <summary>
        /// Display name for this Machine Learning Workspace.
        /// </summary>
        [Output("friendlyName")]
        public Output<string?> FriendlyName { get; private set; } = null!;

        /// <summary>
        /// Flag to signal High Business Impact (HBI) data in the workspace and reduce diagnostic data collected by the service
        /// </summary>
        [Output("highBusinessImpact")]
        public Output<bool?> HighBusinessImpact { get; private set; } = null!;

        /// <summary>
        /// An `identity` block as defined below.
        /// </summary>
        [Output("identity")]
        public Output<Outputs.WorkspaceIdentity> Identity { get; private set; } = null!;

        /// <summary>
        /// The compute name for image build of the Machine Learning Workspace.
        /// </summary>
        [Output("imageBuildComputeName")]
        public Output<string?> ImageBuildComputeName { get; private set; } = null!;

        /// <summary>
        /// The ID of key vault associated with this Machine Learning Workspace. Changing this forces a new resource to be created.
        /// </summary>
        [Output("keyVaultId")]
        public Output<string> KeyVaultId { get; private set; } = null!;

        /// <summary>
        /// Specifies the supported Azure location where the Machine Learning Workspace should exist. Changing this forces a new resource to be created.
        /// </summary>
        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// Specifies the name of the Machine Learning Workspace. Changing this forces a new resource to be created.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The user assigned identity id that represents the workspace identity.
        /// </summary>
        [Output("primaryUserAssignedIdentity")]
        public Output<string?> PrimaryUserAssignedIdentity { get; private set; } = null!;

        /// <summary>
        /// Enable public access when this Machine Learning Workspace is behind a VNet. Changing this forces a new resource to be created.
        /// </summary>
        [Output("publicAccessBehindVirtualNetworkEnabled")]
        public Output<bool?> PublicAccessBehindVirtualNetworkEnabled { get; private set; } = null!;

        /// <summary>
        /// Enable public access when this Machine Learning Workspace is behind VNet.
        /// </summary>
        [Output("publicNetworkAccessEnabled")]
        public Output<bool> PublicNetworkAccessEnabled { get; private set; } = null!;

        /// <summary>
        /// Specifies the name of the Resource Group in which the Machine Learning Workspace should exist. Changing this forces a new resource to be created.
        /// </summary>
        [Output("resourceGroupName")]
        public Output<string> ResourceGroupName { get; private set; } = null!;

        /// <summary>
        /// SKU/edition of the Machine Learning Workspace, possible values are `Basic`. Defaults to `Basic`.
        /// </summary>
        [Output("skuName")]
        public Output<string?> SkuName { get; private set; } = null!;

        /// <summary>
        /// The ID of the Storage Account associated with this Machine Learning Workspace. Changing this forces a new resource to be created.
        /// </summary>
        [Output("storageAccountId")]
        public Output<string> StorageAccountId { get; private set; } = null!;

        /// <summary>
        /// A mapping of tags to assign to the resource.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// Enable V1 API features, enabling `v1_legacy_mode` may prevent you from using features provided by the v2 API. Defaults to `false`.
        /// </summary>
        [Output("v1LegacyModeEnabled")]
        public Output<bool?> V1LegacyModeEnabled { get; private set; } = null!;


        /// <summary>
        /// Create a Workspace resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Workspace(string name, WorkspaceArgs args, CustomResourceOptions? options = null)
            : base("azure:machinelearning/workspace:Workspace", name, args ?? new WorkspaceArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Workspace(string name, Input<string> id, WorkspaceState? state = null, CustomResourceOptions? options = null)
            : base("azure:machinelearning/workspace:Workspace", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Workspace resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Workspace Get(string name, Input<string> id, WorkspaceState? state = null, CustomResourceOptions? options = null)
        {
            return new Workspace(name, id, state, options);
        }
    }

    public sealed class WorkspaceArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the Application Insights associated with this Machine Learning Workspace. Changing this forces a new resource to be created.
        /// </summary>
        [Input("applicationInsightsId", required: true)]
        public Input<string> ApplicationInsightsId { get; set; } = null!;

        /// <summary>
        /// The ID of the container registry associated with this Machine Learning Workspace. Changing this forces a new resource to be created.
        /// </summary>
        [Input("containerRegistryId")]
        public Input<string>? ContainerRegistryId { get; set; }

        /// <summary>
        /// The description of this Machine Learning Workspace.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// An `encryption` block as defined below. Changing this forces a new resource to be created.
        /// </summary>
        [Input("encryption")]
        public Input<Inputs.WorkspaceEncryptionArgs>? Encryption { get; set; }

        /// <summary>
        /// Display name for this Machine Learning Workspace.
        /// </summary>
        [Input("friendlyName")]
        public Input<string>? FriendlyName { get; set; }

        /// <summary>
        /// Flag to signal High Business Impact (HBI) data in the workspace and reduce diagnostic data collected by the service
        /// </summary>
        [Input("highBusinessImpact")]
        public Input<bool>? HighBusinessImpact { get; set; }

        /// <summary>
        /// An `identity` block as defined below.
        /// </summary>
        [Input("identity", required: true)]
        public Input<Inputs.WorkspaceIdentityArgs> Identity { get; set; } = null!;

        /// <summary>
        /// The compute name for image build of the Machine Learning Workspace.
        /// </summary>
        [Input("imageBuildComputeName")]
        public Input<string>? ImageBuildComputeName { get; set; }

        /// <summary>
        /// The ID of key vault associated with this Machine Learning Workspace. Changing this forces a new resource to be created.
        /// </summary>
        [Input("keyVaultId", required: true)]
        public Input<string> KeyVaultId { get; set; } = null!;

        /// <summary>
        /// Specifies the supported Azure location where the Machine Learning Workspace should exist. Changing this forces a new resource to be created.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// Specifies the name of the Machine Learning Workspace. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The user assigned identity id that represents the workspace identity.
        /// </summary>
        [Input("primaryUserAssignedIdentity")]
        public Input<string>? PrimaryUserAssignedIdentity { get; set; }

        /// <summary>
        /// Enable public access when this Machine Learning Workspace is behind a VNet. Changing this forces a new resource to be created.
        /// </summary>
        [Input("publicAccessBehindVirtualNetworkEnabled")]
        public Input<bool>? PublicAccessBehindVirtualNetworkEnabled { get; set; }

        /// <summary>
        /// Enable public access when this Machine Learning Workspace is behind VNet.
        /// </summary>
        [Input("publicNetworkAccessEnabled")]
        public Input<bool>? PublicNetworkAccessEnabled { get; set; }

        /// <summary>
        /// Specifies the name of the Resource Group in which the Machine Learning Workspace should exist. Changing this forces a new resource to be created.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// SKU/edition of the Machine Learning Workspace, possible values are `Basic`. Defaults to `Basic`.
        /// </summary>
        [Input("skuName")]
        public Input<string>? SkuName { get; set; }

        /// <summary>
        /// The ID of the Storage Account associated with this Machine Learning Workspace. Changing this forces a new resource to be created.
        /// </summary>
        [Input("storageAccountId", required: true)]
        public Input<string> StorageAccountId { get; set; } = null!;

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// A mapping of tags to assign to the resource.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        /// <summary>
        /// Enable V1 API features, enabling `v1_legacy_mode` may prevent you from using features provided by the v2 API. Defaults to `false`.
        /// </summary>
        [Input("v1LegacyModeEnabled")]
        public Input<bool>? V1LegacyModeEnabled { get; set; }

        public WorkspaceArgs()
        {
        }
        public static new WorkspaceArgs Empty => new WorkspaceArgs();
    }

    public sealed class WorkspaceState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the Application Insights associated with this Machine Learning Workspace. Changing this forces a new resource to be created.
        /// </summary>
        [Input("applicationInsightsId")]
        public Input<string>? ApplicationInsightsId { get; set; }

        /// <summary>
        /// The ID of the container registry associated with this Machine Learning Workspace. Changing this forces a new resource to be created.
        /// </summary>
        [Input("containerRegistryId")]
        public Input<string>? ContainerRegistryId { get; set; }

        /// <summary>
        /// The description of this Machine Learning Workspace.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The url for the discovery service to identify regional endpoints for machine learning experimentation services.
        /// </summary>
        [Input("discoveryUrl")]
        public Input<string>? DiscoveryUrl { get; set; }

        /// <summary>
        /// An `encryption` block as defined below. Changing this forces a new resource to be created.
        /// </summary>
        [Input("encryption")]
        public Input<Inputs.WorkspaceEncryptionGetArgs>? Encryption { get; set; }

        /// <summary>
        /// Display name for this Machine Learning Workspace.
        /// </summary>
        [Input("friendlyName")]
        public Input<string>? FriendlyName { get; set; }

        /// <summary>
        /// Flag to signal High Business Impact (HBI) data in the workspace and reduce diagnostic data collected by the service
        /// </summary>
        [Input("highBusinessImpact")]
        public Input<bool>? HighBusinessImpact { get; set; }

        /// <summary>
        /// An `identity` block as defined below.
        /// </summary>
        [Input("identity")]
        public Input<Inputs.WorkspaceIdentityGetArgs>? Identity { get; set; }

        /// <summary>
        /// The compute name for image build of the Machine Learning Workspace.
        /// </summary>
        [Input("imageBuildComputeName")]
        public Input<string>? ImageBuildComputeName { get; set; }

        /// <summary>
        /// The ID of key vault associated with this Machine Learning Workspace. Changing this forces a new resource to be created.
        /// </summary>
        [Input("keyVaultId")]
        public Input<string>? KeyVaultId { get; set; }

        /// <summary>
        /// Specifies the supported Azure location where the Machine Learning Workspace should exist. Changing this forces a new resource to be created.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// Specifies the name of the Machine Learning Workspace. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The user assigned identity id that represents the workspace identity.
        /// </summary>
        [Input("primaryUserAssignedIdentity")]
        public Input<string>? PrimaryUserAssignedIdentity { get; set; }

        /// <summary>
        /// Enable public access when this Machine Learning Workspace is behind a VNet. Changing this forces a new resource to be created.
        /// </summary>
        [Input("publicAccessBehindVirtualNetworkEnabled")]
        public Input<bool>? PublicAccessBehindVirtualNetworkEnabled { get; set; }

        /// <summary>
        /// Enable public access when this Machine Learning Workspace is behind VNet.
        /// </summary>
        [Input("publicNetworkAccessEnabled")]
        public Input<bool>? PublicNetworkAccessEnabled { get; set; }

        /// <summary>
        /// Specifies the name of the Resource Group in which the Machine Learning Workspace should exist. Changing this forces a new resource to be created.
        /// </summary>
        [Input("resourceGroupName")]
        public Input<string>? ResourceGroupName { get; set; }

        /// <summary>
        /// SKU/edition of the Machine Learning Workspace, possible values are `Basic`. Defaults to `Basic`.
        /// </summary>
        [Input("skuName")]
        public Input<string>? SkuName { get; set; }

        /// <summary>
        /// The ID of the Storage Account associated with this Machine Learning Workspace. Changing this forces a new resource to be created.
        /// </summary>
        [Input("storageAccountId")]
        public Input<string>? StorageAccountId { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// A mapping of tags to assign to the resource.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        /// <summary>
        /// Enable V1 API features, enabling `v1_legacy_mode` may prevent you from using features provided by the v2 API. Defaults to `false`.
        /// </summary>
        [Input("v1LegacyModeEnabled")]
        public Input<bool>? V1LegacyModeEnabled { get; set; }

        public WorkspaceState()
        {
        }
        public static new WorkspaceState Empty => new WorkspaceState();
    }
}
