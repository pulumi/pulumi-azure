// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.MachineLearning
{
    /// <summary>
    /// Manages the linked service to link an Azure Machine learning workspace to an Azure Synapse workspace.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using Azure = Pulumi.Azure;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var current = Output.Create(Azure.Core.GetClientConfig.InvokeAsync());
    ///         var exampleResourceGroup = new Azure.Core.ResourceGroup("exampleResourceGroup", new Azure.Core.ResourceGroupArgs
    ///         {
    ///             Location = "west europe",
    ///             Tags = 
    ///             {
    ///                 { "stage", "example" },
    ///             },
    ///         });
    ///         var exampleInsights = new Azure.AppInsights.Insights("exampleInsights", new Azure.AppInsights.InsightsArgs
    ///         {
    ///             Location = exampleResourceGroup.Location,
    ///             ResourceGroupName = exampleResourceGroup.Name,
    ///             ApplicationType = "web",
    ///         });
    ///         var exampleKeyVault = new Azure.KeyVault.KeyVault("exampleKeyVault", new Azure.KeyVault.KeyVaultArgs
    ///         {
    ///             Location = exampleResourceGroup.Location,
    ///             ResourceGroupName = exampleResourceGroup.Name,
    ///             TenantId = current.Apply(current =&gt; current.TenantId),
    ///             SkuName = "standard",
    ///             PurgeProtectionEnabled = true,
    ///         });
    ///         var exampleAccount = new Azure.Storage.Account("exampleAccount", new Azure.Storage.AccountArgs
    ///         {
    ///             Location = exampleResourceGroup.Location,
    ///             ResourceGroupName = exampleResourceGroup.Name,
    ///             AccountTier = "Standard",
    ///             AccountReplicationType = "LRS",
    ///         });
    ///         var exampleWorkspace = new Azure.MachineLearning.Workspace("exampleWorkspace", new Azure.MachineLearning.WorkspaceArgs
    ///         {
    ///             Location = exampleResourceGroup.Location,
    ///             ResourceGroupName = exampleResourceGroup.Name,
    ///             ApplicationInsightsId = exampleInsights.Id,
    ///             KeyVaultId = exampleKeyVault.Id,
    ///             StorageAccountId = exampleAccount.Id,
    ///             Identity = new Azure.MachineLearning.Inputs.WorkspaceIdentityArgs
    ///             {
    ///                 Type = "SystemAssigned",
    ///             },
    ///         });
    ///         var exampleDataLakeGen2Filesystem = new Azure.Storage.DataLakeGen2Filesystem("exampleDataLakeGen2Filesystem", new Azure.Storage.DataLakeGen2FilesystemArgs
    ///         {
    ///             StorageAccountId = exampleAccount.Id,
    ///         });
    ///         var exampleSynapse_workspaceWorkspace = new Azure.Synapse.Workspace("exampleSynapse/workspaceWorkspace", new Azure.Synapse.WorkspaceArgs
    ///         {
    ///             ResourceGroupName = exampleResourceGroup.Name,
    ///             Location = exampleResourceGroup.Location,
    ///             StorageDataLakeGen2FilesystemId = exampleDataLakeGen2Filesystem.Id,
    ///             SqlAdministratorLogin = "sqladminuser",
    ///             SqlAdministratorLoginPassword = "H@Sh1CoR3!",
    ///             Identity = new Azure.Synapse.Inputs.WorkspaceIdentityArgs
    ///             {
    ///                 Type = "SystemAssigned",
    ///             },
    ///         });
    ///         var exampleSparkPool = new Azure.Synapse.SparkPool("exampleSparkPool", new Azure.Synapse.SparkPoolArgs
    ///         {
    ///             SynapseWorkspaceId = exampleSynapse / workspaceWorkspace.Id,
    ///             NodeSizeFamily = "MemoryOptimized",
    ///             NodeSize = "Small",
    ///             NodeCount = 3,
    ///         });
    ///         var exampleSynapseSpark = new Azure.MachineLearning.SynapseSpark("exampleSynapseSpark", new Azure.MachineLearning.SynapseSparkArgs
    ///         {
    ///             MachineLearningWorkspaceId = exampleWorkspace.Id,
    ///             Location = exampleResourceGroup.Location,
    ///             SynapseSparkPoolId = exampleSparkPool.Id,
    ///             Identity = new Azure.MachineLearning.Inputs.SynapseSparkIdentityArgs
    ///             {
    ///                 Type = "SystemAssigned",
    ///             },
    ///         });
    ///     }
    /// 
    /// }
    /// ```
    /// 
    /// ## Import
    /// 
    /// Machine Learning Synapse Sparks can be imported using the `resource id`, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import azure:machinelearning/synapseSpark:SynapseSpark example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resGroup1/providers/Microsoft.MachineLearningServices/workspaces/workspace1/computes/compute1
    /// ```
    /// </summary>
    [AzureResourceType("azure:machinelearning/synapseSpark:SynapseSpark")]
    public partial class SynapseSpark : Pulumi.CustomResource
    {
        /// <summary>
        /// The description of the Machine Learning Synapse Spark. Changing this forces a new Machine Learning Synapse Spark to be created.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// An `identity` block as defined below. Changing this forces a new Machine Learning Synapse Spark to be created.
        /// </summary>
        [Output("identity")]
        public Output<Outputs.SynapseSparkIdentity?> Identity { get; private set; } = null!;

        /// <summary>
        /// Whether local authentication methods is enabled. Defaults to `true`. Changing this forces a new Machine Learning Synapse Spark to be created.
        /// </summary>
        [Output("localAuthEnabled")]
        public Output<bool?> LocalAuthEnabled { get; private set; } = null!;

        /// <summary>
        /// The Azure Region where the Machine Learning Synapse Spark should exist. Changing this forces a new Machine Learning Synapse Spark to be created.
        /// </summary>
        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// The ID of the Machine Learning Workspace. Changing this forces a new Machine Learning Synapse Spark to be created.
        /// </summary>
        [Output("machineLearningWorkspaceId")]
        public Output<string> MachineLearningWorkspaceId { get; private set; } = null!;

        /// <summary>
        /// The name which should be used for this Machine Learning Synapse Spark. Changing this forces a new Machine Learning Synapse Spark to be created.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The ID of the linked Synapse Spark Pool. Changing this forces a new Machine Learning Synapse Spark to be created.
        /// </summary>
        [Output("synapseSparkPoolId")]
        public Output<string> SynapseSparkPoolId { get; private set; } = null!;

        /// <summary>
        /// A mapping of tags which should be assigned to the Machine Learning Synapse Spark. Changing this forces a new Machine Learning Synapse Spark to be created.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;


        /// <summary>
        /// Create a SynapseSpark resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public SynapseSpark(string name, SynapseSparkArgs args, CustomResourceOptions? options = null)
            : base("azure:machinelearning/synapseSpark:SynapseSpark", name, args ?? new SynapseSparkArgs(), MakeResourceOptions(options, ""))
        {
        }

        private SynapseSpark(string name, Input<string> id, SynapseSparkState? state = null, CustomResourceOptions? options = null)
            : base("azure:machinelearning/synapseSpark:SynapseSpark", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing SynapseSpark resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static SynapseSpark Get(string name, Input<string> id, SynapseSparkState? state = null, CustomResourceOptions? options = null)
        {
            return new SynapseSpark(name, id, state, options);
        }
    }

    public sealed class SynapseSparkArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The description of the Machine Learning Synapse Spark. Changing this forces a new Machine Learning Synapse Spark to be created.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// An `identity` block as defined below. Changing this forces a new Machine Learning Synapse Spark to be created.
        /// </summary>
        [Input("identity")]
        public Input<Inputs.SynapseSparkIdentityArgs>? Identity { get; set; }

        /// <summary>
        /// Whether local authentication methods is enabled. Defaults to `true`. Changing this forces a new Machine Learning Synapse Spark to be created.
        /// </summary>
        [Input("localAuthEnabled")]
        public Input<bool>? LocalAuthEnabled { get; set; }

        /// <summary>
        /// The Azure Region where the Machine Learning Synapse Spark should exist. Changing this forces a new Machine Learning Synapse Spark to be created.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// The ID of the Machine Learning Workspace. Changing this forces a new Machine Learning Synapse Spark to be created.
        /// </summary>
        [Input("machineLearningWorkspaceId", required: true)]
        public Input<string> MachineLearningWorkspaceId { get; set; } = null!;

        /// <summary>
        /// The name which should be used for this Machine Learning Synapse Spark. Changing this forces a new Machine Learning Synapse Spark to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The ID of the linked Synapse Spark Pool. Changing this forces a new Machine Learning Synapse Spark to be created.
        /// </summary>
        [Input("synapseSparkPoolId", required: true)]
        public Input<string> SynapseSparkPoolId { get; set; } = null!;

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// A mapping of tags which should be assigned to the Machine Learning Synapse Spark. Changing this forces a new Machine Learning Synapse Spark to be created.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public SynapseSparkArgs()
        {
        }
    }

    public sealed class SynapseSparkState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The description of the Machine Learning Synapse Spark. Changing this forces a new Machine Learning Synapse Spark to be created.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// An `identity` block as defined below. Changing this forces a new Machine Learning Synapse Spark to be created.
        /// </summary>
        [Input("identity")]
        public Input<Inputs.SynapseSparkIdentityGetArgs>? Identity { get; set; }

        /// <summary>
        /// Whether local authentication methods is enabled. Defaults to `true`. Changing this forces a new Machine Learning Synapse Spark to be created.
        /// </summary>
        [Input("localAuthEnabled")]
        public Input<bool>? LocalAuthEnabled { get; set; }

        /// <summary>
        /// The Azure Region where the Machine Learning Synapse Spark should exist. Changing this forces a new Machine Learning Synapse Spark to be created.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// The ID of the Machine Learning Workspace. Changing this forces a new Machine Learning Synapse Spark to be created.
        /// </summary>
        [Input("machineLearningWorkspaceId")]
        public Input<string>? MachineLearningWorkspaceId { get; set; }

        /// <summary>
        /// The name which should be used for this Machine Learning Synapse Spark. Changing this forces a new Machine Learning Synapse Spark to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The ID of the linked Synapse Spark Pool. Changing this forces a new Machine Learning Synapse Spark to be created.
        /// </summary>
        [Input("synapseSparkPoolId")]
        public Input<string>? SynapseSparkPoolId { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// A mapping of tags which should be assigned to the Machine Learning Synapse Spark. Changing this forces a new Machine Learning Synapse Spark to be created.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public SynapseSparkState()
        {
        }
    }
}
