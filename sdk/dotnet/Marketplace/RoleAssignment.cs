// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Marketplace
{
    /// <summary>
    /// Assigns a given Principal (User or Group) to a given Role in a Private Azure Marketplace.
    /// 
    /// ## Example Usage
    /// 
    /// ### Using A Role Definition Name)
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Azure = Pulumi.Azure;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = Azure.Core.GetClientConfig.Invoke();
    /// 
    ///     var exampleRoleAssignment = new Azure.Marketplace.RoleAssignment("example", new()
    ///     {
    ///         RoleDefinitionName = "Marketplace Admin",
    ///         PrincipalId = example.Apply(getClientConfigResult =&gt; getClientConfigResult.ObjectId),
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ### Using A Role Definition ID)
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Azure = Pulumi.Azure;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = Azure.Core.GetClientConfig.Invoke();
    /// 
    ///     var exampleGetRoleDefinition = Azure.Authorization.GetRoleDefinition.Invoke(new()
    ///     {
    ///         Name = "Log Analytics Reader",
    ///     });
    /// 
    ///     var exampleRoleAssignment = new Azure.Marketplace.RoleAssignment("example", new()
    ///     {
    ///         RoleDefinitionId = exampleGetRoleDefinition.Apply(getRoleDefinitionResult =&gt; getRoleDefinitionResult.Id),
    ///         PrincipalId = example.Apply(getClientConfigResult =&gt; getClientConfigResult.ObjectId),
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## API Providers
    /// 
    /// &lt;!-- This section is generated, changes will be overwritten --&gt;
    /// This resource uses the following Azure API Providers:
    /// 
    /// * `Microsoft.Authorization`: 2022-05-01-preview, 2022-04-01
    /// 
    /// ## Import
    /// 
    /// Role Assignments can be imported using the `resource id`, e.g.
    /// 
    /// ```sh
    /// $ pulumi import azure:marketplace/roleAssignment:RoleAssignment example /providers/Microsoft.Marketplace/providers/Microsoft.Authorization/roleAssignments/00000000-0000-0000-0000-000000000000
    /// ```
    /// 
    /// text
    /// 
    /// /providers/Microsoft.Marketplace/providers/Microsoft.Authorization/roleAssignments/00000000-0000-0000-0000-000000000000|00000000-0000-0000-0000-000000000000
    /// </summary>
    [AzureResourceType("azure:marketplace/roleAssignment:RoleAssignment")]
    public partial class RoleAssignment : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The condition that limits the resources that the role can be assigned to. Changing this forces a new resource to be created.
        /// </summary>
        [Output("condition")]
        public Output<string?> Condition { get; private set; } = null!;

        /// <summary>
        /// The version of the condition. Possible values are `1.0` or `2.0`. Changing this forces a new resource to be created.
        /// </summary>
        [Output("conditionVersion")]
        public Output<string?> ConditionVersion { get; private set; } = null!;

        /// <summary>
        /// The delegated Azure Resource ID which contains a Managed Identity. Changing this forces a new resource to be created.
        /// 
        /// &gt; **Note:** This field is only used in cross tenant scenarios.
        /// </summary>
        [Output("delegatedManagedIdentityResourceId")]
        public Output<string?> DelegatedManagedIdentityResourceId { get; private set; } = null!;

        /// <summary>
        /// The description for this Role Assignment. Changing this forces a new resource to be created.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// A unique UUID/GUID for this Role Assignment - one will be generated if not specified. Changing this forces a new resource to be created.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The ID of the Principal (User, Group or Service Principal) to assign the Role Definition to. Changing this forces a new resource to be created.
        /// 
        /// &gt; **Note:** The Principal ID is also known as the Object ID (i.e. not the "Application ID" for applications). To assign Azure roles, the Principal must have `Microsoft.Authorization/roleAssignments/write` permissions. See [documentation](https://learn.microsoft.com/en-us/azure/role-based-access-control/role-assignments-portal) for more information.
        /// </summary>
        [Output("principalId")]
        public Output<string> PrincipalId { get; private set; } = null!;

        /// <summary>
        /// The type of the `principal_id`, e.g. User, Group, Service Principal, Application, etc.
        /// </summary>
        [Output("principalType")]
        public Output<string> PrincipalType { get; private set; } = null!;

        /// <summary>
        /// The Scoped-ID of the Role Definition. Changing this forces a new resource to be created. Conflicts with `role_definition_name`.
        /// </summary>
        [Output("roleDefinitionId")]
        public Output<string?> RoleDefinitionId { get; private set; } = null!;

        /// <summary>
        /// The name of a built-in Role. Changing this forces a new resource to be created. Conflicts with `role_definition_id`.
        /// 
        /// &gt; **Note:** To assign `Marketplace Admin` role, the calling Principal must first be assigned Privileged Role Administrator (like `Owner` role) or Global Administrator. See [documentation](https://learn.microsoft.com/en-us/marketplace/create-manage-private-azure-marketplace-new#prerequisites) for more information.
        /// </summary>
        [Output("roleDefinitionName")]
        public Output<string?> RoleDefinitionName { get; private set; } = null!;

        /// <summary>
        /// If the `principal_id` is a newly provisioned `Service Principal` set this value to `true` to skip the `Azure Active Directory` check which may fail due to replication lag. This argument is only valid if the `principal_id` is a `Service Principal` identity. Defaults to `false`. Changing this forces a new resource to be created.
        /// 
        /// &gt; **Note:** This field takes effect only when `principal_id` is a `Service Principal` identity.
        /// </summary>
        [Output("skipServicePrincipalAadCheck")]
        public Output<bool?> SkipServicePrincipalAadCheck { get; private set; } = null!;


        /// <summary>
        /// Create a RoleAssignment resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public RoleAssignment(string name, RoleAssignmentArgs args, CustomResourceOptions? options = null)
            : base("azure:marketplace/roleAssignment:RoleAssignment", name, args ?? new RoleAssignmentArgs(), MakeResourceOptions(options, ""))
        {
        }

        private RoleAssignment(string name, Input<string> id, RoleAssignmentState? state = null, CustomResourceOptions? options = null)
            : base("azure:marketplace/roleAssignment:RoleAssignment", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing RoleAssignment resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static RoleAssignment Get(string name, Input<string> id, RoleAssignmentState? state = null, CustomResourceOptions? options = null)
        {
            return new RoleAssignment(name, id, state, options);
        }
    }

    public sealed class RoleAssignmentArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The condition that limits the resources that the role can be assigned to. Changing this forces a new resource to be created.
        /// </summary>
        [Input("condition")]
        public Input<string>? Condition { get; set; }

        /// <summary>
        /// The version of the condition. Possible values are `1.0` or `2.0`. Changing this forces a new resource to be created.
        /// </summary>
        [Input("conditionVersion")]
        public Input<string>? ConditionVersion { get; set; }

        /// <summary>
        /// The delegated Azure Resource ID which contains a Managed Identity. Changing this forces a new resource to be created.
        /// 
        /// &gt; **Note:** This field is only used in cross tenant scenarios.
        /// </summary>
        [Input("delegatedManagedIdentityResourceId")]
        public Input<string>? DelegatedManagedIdentityResourceId { get; set; }

        /// <summary>
        /// The description for this Role Assignment. Changing this forces a new resource to be created.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// A unique UUID/GUID for this Role Assignment - one will be generated if not specified. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The ID of the Principal (User, Group or Service Principal) to assign the Role Definition to. Changing this forces a new resource to be created.
        /// 
        /// &gt; **Note:** The Principal ID is also known as the Object ID (i.e. not the "Application ID" for applications). To assign Azure roles, the Principal must have `Microsoft.Authorization/roleAssignments/write` permissions. See [documentation](https://learn.microsoft.com/en-us/azure/role-based-access-control/role-assignments-portal) for more information.
        /// </summary>
        [Input("principalId", required: true)]
        public Input<string> PrincipalId { get; set; } = null!;

        /// <summary>
        /// The Scoped-ID of the Role Definition. Changing this forces a new resource to be created. Conflicts with `role_definition_name`.
        /// </summary>
        [Input("roleDefinitionId")]
        public Input<string>? RoleDefinitionId { get; set; }

        /// <summary>
        /// The name of a built-in Role. Changing this forces a new resource to be created. Conflicts with `role_definition_id`.
        /// 
        /// &gt; **Note:** To assign `Marketplace Admin` role, the calling Principal must first be assigned Privileged Role Administrator (like `Owner` role) or Global Administrator. See [documentation](https://learn.microsoft.com/en-us/marketplace/create-manage-private-azure-marketplace-new#prerequisites) for more information.
        /// </summary>
        [Input("roleDefinitionName")]
        public Input<string>? RoleDefinitionName { get; set; }

        /// <summary>
        /// If the `principal_id` is a newly provisioned `Service Principal` set this value to `true` to skip the `Azure Active Directory` check which may fail due to replication lag. This argument is only valid if the `principal_id` is a `Service Principal` identity. Defaults to `false`. Changing this forces a new resource to be created.
        /// 
        /// &gt; **Note:** This field takes effect only when `principal_id` is a `Service Principal` identity.
        /// </summary>
        [Input("skipServicePrincipalAadCheck")]
        public Input<bool>? SkipServicePrincipalAadCheck { get; set; }

        public RoleAssignmentArgs()
        {
        }
        public static new RoleAssignmentArgs Empty => new RoleAssignmentArgs();
    }

    public sealed class RoleAssignmentState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The condition that limits the resources that the role can be assigned to. Changing this forces a new resource to be created.
        /// </summary>
        [Input("condition")]
        public Input<string>? Condition { get; set; }

        /// <summary>
        /// The version of the condition. Possible values are `1.0` or `2.0`. Changing this forces a new resource to be created.
        /// </summary>
        [Input("conditionVersion")]
        public Input<string>? ConditionVersion { get; set; }

        /// <summary>
        /// The delegated Azure Resource ID which contains a Managed Identity. Changing this forces a new resource to be created.
        /// 
        /// &gt; **Note:** This field is only used in cross tenant scenarios.
        /// </summary>
        [Input("delegatedManagedIdentityResourceId")]
        public Input<string>? DelegatedManagedIdentityResourceId { get; set; }

        /// <summary>
        /// The description for this Role Assignment. Changing this forces a new resource to be created.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// A unique UUID/GUID for this Role Assignment - one will be generated if not specified. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The ID of the Principal (User, Group or Service Principal) to assign the Role Definition to. Changing this forces a new resource to be created.
        /// 
        /// &gt; **Note:** The Principal ID is also known as the Object ID (i.e. not the "Application ID" for applications). To assign Azure roles, the Principal must have `Microsoft.Authorization/roleAssignments/write` permissions. See [documentation](https://learn.microsoft.com/en-us/azure/role-based-access-control/role-assignments-portal) for more information.
        /// </summary>
        [Input("principalId")]
        public Input<string>? PrincipalId { get; set; }

        /// <summary>
        /// The type of the `principal_id`, e.g. User, Group, Service Principal, Application, etc.
        /// </summary>
        [Input("principalType")]
        public Input<string>? PrincipalType { get; set; }

        /// <summary>
        /// The Scoped-ID of the Role Definition. Changing this forces a new resource to be created. Conflicts with `role_definition_name`.
        /// </summary>
        [Input("roleDefinitionId")]
        public Input<string>? RoleDefinitionId { get; set; }

        /// <summary>
        /// The name of a built-in Role. Changing this forces a new resource to be created. Conflicts with `role_definition_id`.
        /// 
        /// &gt; **Note:** To assign `Marketplace Admin` role, the calling Principal must first be assigned Privileged Role Administrator (like `Owner` role) or Global Administrator. See [documentation](https://learn.microsoft.com/en-us/marketplace/create-manage-private-azure-marketplace-new#prerequisites) for more information.
        /// </summary>
        [Input("roleDefinitionName")]
        public Input<string>? RoleDefinitionName { get; set; }

        /// <summary>
        /// If the `principal_id` is a newly provisioned `Service Principal` set this value to `true` to skip the `Azure Active Directory` check which may fail due to replication lag. This argument is only valid if the `principal_id` is a `Service Principal` identity. Defaults to `false`. Changing this forces a new resource to be created.
        /// 
        /// &gt; **Note:** This field takes effect only when `principal_id` is a `Service Principal` identity.
        /// </summary>
        [Input("skipServicePrincipalAadCheck")]
        public Input<bool>? SkipServicePrincipalAadCheck { get; set; }

        public RoleAssignmentState()
        {
        }
        public static new RoleAssignmentState Empty => new RoleAssignmentState();
    }
}
