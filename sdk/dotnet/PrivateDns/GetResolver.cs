// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.PrivateDns
{
    public static class GetResolver
    {
        /// <summary>
        /// Gets information about an existing Private DNS Resolver.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Azure = Pulumi.Azure;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var test = Azure.PrivateDns.GetResolver.Invoke(new()
        ///     {
        ///         Name = "example",
        ///         ResourceGroupName = "example-resourcegroup-name",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetResolverResult> InvokeAsync(GetResolverArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetResolverResult>("azure:privatedns/getResolver:getResolver", args ?? new GetResolverArgs(), options.WithDefaults());

        /// <summary>
        /// Gets information about an existing Private DNS Resolver.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Azure = Pulumi.Azure;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var test = Azure.PrivateDns.GetResolver.Invoke(new()
        ///     {
        ///         Name = "example",
        ///         ResourceGroupName = "example-resourcegroup-name",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetResolverResult> Invoke(GetResolverInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetResolverResult>("azure:privatedns/getResolver:getResolver", args ?? new GetResolverInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetResolverArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the Private DNS Resolver.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        /// <summary>
        /// Name of the Resource Group where the Private DNS Resolver exists.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetResolverArgs()
        {
        }
        public static new GetResolverArgs Empty => new GetResolverArgs();
    }

    public sealed class GetResolverInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the Private DNS Resolver.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// Name of the Resource Group where the Private DNS Resolver exists.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetResolverInvokeArgs()
        {
        }
        public static new GetResolverInvokeArgs Empty => new GetResolverInvokeArgs();
    }


    [OutputType]
    public sealed class GetResolverResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The Azure Region where the Private DNS Resolver exists.
        /// </summary>
        public readonly string Location;
        public readonly string Name;
        public readonly string ResourceGroupName;
        /// <summary>
        /// The tags assigned to the Private DNS Resolver.
        /// </summary>
        public readonly ImmutableDictionary<string, string> Tags;
        /// <summary>
        /// The ID of the Virtual Network that is linked to the Private DNS Resolver.
        /// </summary>
        public readonly string VirtualNetworkId;

        [OutputConstructor]
        private GetResolverResult(
            string id,

            string location,

            string name,

            string resourceGroupName,

            ImmutableDictionary<string, string> tags,

            string virtualNetworkId)
        {
            Id = id;
            Location = location;
            Name = name;
            ResourceGroupName = resourceGroupName;
            Tags = tags;
            VirtualNetworkId = virtualNetworkId;
        }
    }
}
