// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.PrivateDns
{
    public static class GetZoneVirtualNetworkLink
    {
        /// <summary>
        /// Use this data source to access information about an existing Private DNS zone Virtual Network Link. These Links enable DNS resolution and registration inside Azure Virtual Networks using Azure Private DNS.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Azure = Pulumi.Azure;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Azure.PrivateDns.GetZoneVirtualNetworkLink.Invoke(new()
        ///     {
        ///         Name = "test",
        ///         ResourceGroupName = "test-rg",
        ///         PrivateDnsZoneName = "test-zone",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["privateDnsARecordId"] = example.Apply(getZoneVirtualNetworkLinkResult =&gt; getZoneVirtualNetworkLinkResult.Id),
        ///     };
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetZoneVirtualNetworkLinkResult> InvokeAsync(GetZoneVirtualNetworkLinkArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetZoneVirtualNetworkLinkResult>("azure:privatedns/getZoneVirtualNetworkLink:getZoneVirtualNetworkLink", args ?? new GetZoneVirtualNetworkLinkArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to access information about an existing Private DNS zone Virtual Network Link. These Links enable DNS resolution and registration inside Azure Virtual Networks using Azure Private DNS.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Azure = Pulumi.Azure;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Azure.PrivateDns.GetZoneVirtualNetworkLink.Invoke(new()
        ///     {
        ///         Name = "test",
        ///         ResourceGroupName = "test-rg",
        ///         PrivateDnsZoneName = "test-zone",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["privateDnsARecordId"] = example.Apply(getZoneVirtualNetworkLinkResult =&gt; getZoneVirtualNetworkLinkResult.Id),
        ///     };
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetZoneVirtualNetworkLinkResult> Invoke(GetZoneVirtualNetworkLinkInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetZoneVirtualNetworkLinkResult>("azure:privatedns/getZoneVirtualNetworkLink:getZoneVirtualNetworkLink", args ?? new GetZoneVirtualNetworkLinkInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetZoneVirtualNetworkLinkArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the Private DNS Zone Virtual Network Link.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        /// <summary>
        /// The name of the Private DNS zone (without a terminating dot).
        /// </summary>
        [Input("privateDnsZoneName", required: true)]
        public string PrivateDnsZoneName { get; set; } = null!;

        /// <summary>
        /// Specifies the resource group where the Private DNS Zone exists.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetZoneVirtualNetworkLinkArgs()
        {
        }
        public static new GetZoneVirtualNetworkLinkArgs Empty => new GetZoneVirtualNetworkLinkArgs();
    }

    public sealed class GetZoneVirtualNetworkLinkInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the Private DNS Zone Virtual Network Link.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// The name of the Private DNS zone (without a terminating dot).
        /// </summary>
        [Input("privateDnsZoneName", required: true)]
        public Input<string> PrivateDnsZoneName { get; set; } = null!;

        /// <summary>
        /// Specifies the resource group where the Private DNS Zone exists.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetZoneVirtualNetworkLinkInvokeArgs()
        {
        }
        public static new GetZoneVirtualNetworkLinkInvokeArgs Empty => new GetZoneVirtualNetworkLinkInvokeArgs();
    }


    [OutputType]
    public sealed class GetZoneVirtualNetworkLinkResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string Name;
        public readonly string PrivateDnsZoneName;
        /// <summary>
        /// Whether the auto-registration of virtual machine records in the virtual network in the Private DNS zone is enabled or not.
        /// </summary>
        public readonly bool RegistrationEnabled;
        public readonly string ResourceGroupName;
        /// <summary>
        /// A mapping of tags to assign to the resource.
        /// </summary>
        public readonly ImmutableDictionary<string, string> Tags;
        /// <summary>
        /// The ID of the Virtual Network that is linked to the DNS Zone.
        /// </summary>
        public readonly string VirtualNetworkId;

        [OutputConstructor]
        private GetZoneVirtualNetworkLinkResult(
            string id,

            string name,

            string privateDnsZoneName,

            bool registrationEnabled,

            string resourceGroupName,

            ImmutableDictionary<string, string> tags,

            string virtualNetworkId)
        {
            Id = id;
            Name = name;
            PrivateDnsZoneName = privateDnsZoneName;
            RegistrationEnabled = registrationEnabled;
            ResourceGroupName = resourceGroupName;
            Tags = tags;
            VirtualNetworkId = virtualNetworkId;
        }
    }
}
