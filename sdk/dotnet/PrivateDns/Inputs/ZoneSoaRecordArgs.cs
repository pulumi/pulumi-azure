// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.PrivateDns.Inputs
{

    public sealed class ZoneSoaRecordArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The email contact for the SOA record.
        /// </summary>
        [Input("email", required: true)]
        public Input<string> Email { get; set; } = null!;

        /// <summary>
        /// The expire time for the SOA record. Defaults to `2419200`.
        /// </summary>
        [Input("expireTime")]
        public Input<int>? ExpireTime { get; set; }

        /// <summary>
        /// The fully qualified domain name of the Record Set.
        /// </summary>
        [Input("fqdn")]
        public Input<string>? Fqdn { get; set; }

        /// <summary>
        /// The domain name of the authoritative name server for the SOA record.
        /// </summary>
        [Input("hostName")]
        public Input<string>? HostName { get; set; }

        /// <summary>
        /// The minimum Time To Live for the SOA record. By convention, it is used to determine the negative caching duration. Defaults to `10`.
        /// </summary>
        [Input("minimumTtl")]
        public Input<int>? MinimumTtl { get; set; }

        /// <summary>
        /// The refresh time for the SOA record. Defaults to `3600`.
        /// </summary>
        [Input("refreshTime")]
        public Input<int>? RefreshTime { get; set; }

        /// <summary>
        /// The retry time for the SOA record. Defaults to `300`.
        /// </summary>
        [Input("retryTime")]
        public Input<int>? RetryTime { get; set; }

        /// <summary>
        /// The serial number for the SOA record.
        /// </summary>
        [Input("serialNumber")]
        public Input<int>? SerialNumber { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// A mapping of tags to assign to the Record Set.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        /// <summary>
        /// The Time To Live of the SOA Record in seconds. Defaults to `3600`.
        /// </summary>
        [Input("ttl")]
        public Input<int>? Ttl { get; set; }

        public ZoneSoaRecordArgs()
        {
        }
        public static new ZoneSoaRecordArgs Empty => new ZoneSoaRecordArgs();
    }
}
