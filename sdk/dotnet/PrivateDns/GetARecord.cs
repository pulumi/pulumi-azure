// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.PrivateDns
{
    public static class GetARecord
    {
        public static Task<GetARecordResult> InvokeAsync(GetARecordArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetARecordResult>("azure:privatedns/getARecord:getARecord", args ?? new GetARecordArgs(), options.WithDefaults());

        public static Output<GetARecordResult> Invoke(GetARecordInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetARecordResult>("azure:privatedns/getARecord:getARecord", args ?? new GetARecordInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetARecordArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the Private DNS A Record.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        /// <summary>
        /// Specifies the resource group where the Private DNS Zone (parent resource) exists.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// Specifies the Private DNS Zone where the resource exists.
        /// </summary>
        [Input("zoneName", required: true)]
        public string ZoneName { get; set; } = null!;

        public GetARecordArgs()
        {
        }
        public static new GetARecordArgs Empty => new GetARecordArgs();
    }

    public sealed class GetARecordInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the Private DNS A Record.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// Specifies the resource group where the Private DNS Zone (parent resource) exists.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// Specifies the Private DNS Zone where the resource exists.
        /// </summary>
        [Input("zoneName", required: true)]
        public Input<string> ZoneName { get; set; } = null!;

        public GetARecordInvokeArgs()
        {
        }
        public static new GetARecordInvokeArgs Empty => new GetARecordInvokeArgs();
    }


    [OutputType]
    public sealed class GetARecordResult
    {
        /// <summary>
        /// The FQDN of the Private DNS A Record.
        /// </summary>
        public readonly string Fqdn;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string Name;
        /// <summary>
        /// List of IPv4 Addresses.
        /// </summary>
        public readonly ImmutableArray<string> Records;
        public readonly string ResourceGroupName;
        /// <summary>
        /// A mapping of tags assigned to the Private DNS A Record.
        /// </summary>
        public readonly ImmutableDictionary<string, string> Tags;
        /// <summary>
        /// The Time To Live (TTL) of the Private DNS record in seconds.
        /// </summary>
        public readonly int Ttl;
        public readonly string ZoneName;

        [OutputConstructor]
        private GetARecordResult(
            string fqdn,

            string id,

            string name,

            ImmutableArray<string> records,

            string resourceGroupName,

            ImmutableDictionary<string, string> tags,

            int ttl,

            string zoneName)
        {
            Fqdn = fqdn;
            Id = id;
            Name = name;
            Records = records;
            ResourceGroupName = resourceGroupName;
            Tags = tags;
            Ttl = ttl;
            ZoneName = zoneName;
        }
    }
}
