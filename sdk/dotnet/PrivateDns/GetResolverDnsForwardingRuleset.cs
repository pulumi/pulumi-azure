// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.PrivateDns
{
    public static class GetResolverDnsForwardingRuleset
    {
        /// <summary>
        /// Gets information about an existing Private DNS Resolver Dns Forwarding Ruleset.
        /// </summary>
        public static Task<GetResolverDnsForwardingRulesetResult> InvokeAsync(GetResolverDnsForwardingRulesetArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetResolverDnsForwardingRulesetResult>("azure:privatedns/getResolverDnsForwardingRuleset:getResolverDnsForwardingRuleset", args ?? new GetResolverDnsForwardingRulesetArgs(), options.WithDefaults());

        /// <summary>
        /// Gets information about an existing Private DNS Resolver Dns Forwarding Ruleset.
        /// </summary>
        public static Output<GetResolverDnsForwardingRulesetResult> Invoke(GetResolverDnsForwardingRulesetInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetResolverDnsForwardingRulesetResult>("azure:privatedns/getResolverDnsForwardingRuleset:getResolverDnsForwardingRuleset", args ?? new GetResolverDnsForwardingRulesetInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetResolverDnsForwardingRulesetArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the existing Private DNS Resolver Dns Forwarding Ruleset.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        /// <summary>
        /// Name of the Resource Group where the Private DNS Resolver Dns Forwarding Ruleset exists.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetResolverDnsForwardingRulesetArgs()
        {
        }
        public static new GetResolverDnsForwardingRulesetArgs Empty => new GetResolverDnsForwardingRulesetArgs();
    }

    public sealed class GetResolverDnsForwardingRulesetInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the existing Private DNS Resolver Dns Forwarding Ruleset.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// Name of the Resource Group where the Private DNS Resolver Dns Forwarding Ruleset exists.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetResolverDnsForwardingRulesetInvokeArgs()
        {
        }
        public static new GetResolverDnsForwardingRulesetInvokeArgs Empty => new GetResolverDnsForwardingRulesetInvokeArgs();
    }


    [OutputType]
    public sealed class GetResolverDnsForwardingRulesetResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The Azure Region where the Private DNS Resolver Dns Forwarding Ruleset exists.
        /// </summary>
        public readonly string Location;
        public readonly string Name;
        /// <summary>
        /// The IDs list of the Private DNS Resolver Outbound Endpoints that are linked to the Private DNS Resolver Dns Forwarding Ruleset.
        /// </summary>
        public readonly ImmutableArray<string> PrivateDnsResolverOutboundEndpointIds;
        public readonly string ResourceGroupName;
        /// <summary>
        /// The tags assigned to the Private DNS Resolver Dns Forwarding Ruleset.
        /// </summary>
        public readonly ImmutableDictionary<string, string> Tags;

        [OutputConstructor]
        private GetResolverDnsForwardingRulesetResult(
            string id,

            string location,

            string name,

            ImmutableArray<string> privateDnsResolverOutboundEndpointIds,

            string resourceGroupName,

            ImmutableDictionary<string, string> tags)
        {
            Id = id;
            Location = location;
            Name = name;
            PrivateDnsResolverOutboundEndpointIds = privateDnsResolverOutboundEndpointIds;
            ResourceGroupName = resourceGroupName;
            Tags = tags;
        }
    }
}
