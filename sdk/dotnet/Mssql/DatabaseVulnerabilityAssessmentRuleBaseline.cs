// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.MSSql
{
    /// <summary>
    /// Manages a Database Vulnerability Assessment Rule Baseline.
    /// 
    /// &gt; **NOTE** Database Vulnerability Assessment is currently only available for MS SQL databases.
    /// 
    /// &gt; This content is derived from https://github.com/terraform-providers/terraform-provider-azurerm/blob/master/website/docs/r/mssql_database_vulnerability_assessment_rule_baseline.html.markdown.
    /// </summary>
    public partial class DatabaseVulnerabilityAssessmentRuleBaseline : Pulumi.CustomResource
    {
        /// <summary>
        /// The name of the vulnerability assessment rule baseline. Valid options are `default` and `master`. `default` implies a baseline on a database level rule and `master` for server level rule. Defaults to `default`. Changing this forces a new resource to be created.
        /// </summary>
        [Output("baselineName")]
        public Output<string?> BaselineName { get; private set; } = null!;

        /// <summary>
        /// A `baseline_result` block as documented below. Multiple blocks can be defined.
        /// </summary>
        [Output("baselineResults")]
        public Output<ImmutableArray<Outputs.DatabaseVulnerabilityAssessmentRuleBaselineBaselineResults>> BaselineResults { get; private set; } = null!;

        /// <summary>
        /// Specifies the name of the MS SQL Database. Changing this forces a new resource to be created.
        /// </summary>
        [Output("databaseName")]
        public Output<string> DatabaseName { get; private set; } = null!;

        /// <summary>
        /// The vulnerability assessment rule ID. Changing this forces a new resource to be created.
        /// </summary>
        [Output("ruleId")]
        public Output<string> RuleId { get; private set; } = null!;

        /// <summary>
        /// The Vulnerability Assessment ID of the MS SQL Server. Changing this forces a new resource to be created.
        /// </summary>
        [Output("serverVulnerabilityAssessmentId")]
        public Output<string> ServerVulnerabilityAssessmentId { get; private set; } = null!;


        /// <summary>
        /// Create a DatabaseVulnerabilityAssessmentRuleBaseline resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public DatabaseVulnerabilityAssessmentRuleBaseline(string name, DatabaseVulnerabilityAssessmentRuleBaselineArgs args, CustomResourceOptions? options = null)
            : base("azure:mssql/databaseVulnerabilityAssessmentRuleBaseline:DatabaseVulnerabilityAssessmentRuleBaseline", name, args ?? ResourceArgs.Empty, MakeResourceOptions(options, ""))
        {
        }

        private DatabaseVulnerabilityAssessmentRuleBaseline(string name, Input<string> id, DatabaseVulnerabilityAssessmentRuleBaselineState? state = null, CustomResourceOptions? options = null)
            : base("azure:mssql/databaseVulnerabilityAssessmentRuleBaseline:DatabaseVulnerabilityAssessmentRuleBaseline", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing DatabaseVulnerabilityAssessmentRuleBaseline resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static DatabaseVulnerabilityAssessmentRuleBaseline Get(string name, Input<string> id, DatabaseVulnerabilityAssessmentRuleBaselineState? state = null, CustomResourceOptions? options = null)
        {
            return new DatabaseVulnerabilityAssessmentRuleBaseline(name, id, state, options);
        }
    }

    public sealed class DatabaseVulnerabilityAssessmentRuleBaselineArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the vulnerability assessment rule baseline. Valid options are `default` and `master`. `default` implies a baseline on a database level rule and `master` for server level rule. Defaults to `default`. Changing this forces a new resource to be created.
        /// </summary>
        [Input("baselineName")]
        public Input<string>? BaselineName { get; set; }

        [Input("baselineResults", required: true)]
        private InputList<Inputs.DatabaseVulnerabilityAssessmentRuleBaselineBaselineResultsArgs>? _baselineResults;

        /// <summary>
        /// A `baseline_result` block as documented below. Multiple blocks can be defined.
        /// </summary>
        public InputList<Inputs.DatabaseVulnerabilityAssessmentRuleBaselineBaselineResultsArgs> BaselineResults
        {
            get => _baselineResults ?? (_baselineResults = new InputList<Inputs.DatabaseVulnerabilityAssessmentRuleBaselineBaselineResultsArgs>());
            set => _baselineResults = value;
        }

        /// <summary>
        /// Specifies the name of the MS SQL Database. Changing this forces a new resource to be created.
        /// </summary>
        [Input("databaseName", required: true)]
        public Input<string> DatabaseName { get; set; } = null!;

        /// <summary>
        /// The vulnerability assessment rule ID. Changing this forces a new resource to be created.
        /// </summary>
        [Input("ruleId", required: true)]
        public Input<string> RuleId { get; set; } = null!;

        /// <summary>
        /// The Vulnerability Assessment ID of the MS SQL Server. Changing this forces a new resource to be created.
        /// </summary>
        [Input("serverVulnerabilityAssessmentId", required: true)]
        public Input<string> ServerVulnerabilityAssessmentId { get; set; } = null!;

        public DatabaseVulnerabilityAssessmentRuleBaselineArgs()
        {
        }
    }

    public sealed class DatabaseVulnerabilityAssessmentRuleBaselineState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the vulnerability assessment rule baseline. Valid options are `default` and `master`. `default` implies a baseline on a database level rule and `master` for server level rule. Defaults to `default`. Changing this forces a new resource to be created.
        /// </summary>
        [Input("baselineName")]
        public Input<string>? BaselineName { get; set; }

        [Input("baselineResults")]
        private InputList<Inputs.DatabaseVulnerabilityAssessmentRuleBaselineBaselineResultsGetArgs>? _baselineResults;

        /// <summary>
        /// A `baseline_result` block as documented below. Multiple blocks can be defined.
        /// </summary>
        public InputList<Inputs.DatabaseVulnerabilityAssessmentRuleBaselineBaselineResultsGetArgs> BaselineResults
        {
            get => _baselineResults ?? (_baselineResults = new InputList<Inputs.DatabaseVulnerabilityAssessmentRuleBaselineBaselineResultsGetArgs>());
            set => _baselineResults = value;
        }

        /// <summary>
        /// Specifies the name of the MS SQL Database. Changing this forces a new resource to be created.
        /// </summary>
        [Input("databaseName")]
        public Input<string>? DatabaseName { get; set; }

        /// <summary>
        /// The vulnerability assessment rule ID. Changing this forces a new resource to be created.
        /// </summary>
        [Input("ruleId")]
        public Input<string>? RuleId { get; set; }

        /// <summary>
        /// The Vulnerability Assessment ID of the MS SQL Server. Changing this forces a new resource to be created.
        /// </summary>
        [Input("serverVulnerabilityAssessmentId")]
        public Input<string>? ServerVulnerabilityAssessmentId { get; set; }

        public DatabaseVulnerabilityAssessmentRuleBaselineState()
        {
        }
    }

    namespace Inputs
    {

    public sealed class DatabaseVulnerabilityAssessmentRuleBaselineBaselineResultsArgs : Pulumi.ResourceArgs
    {
        [Input("results", required: true)]
        private InputList<string>? _results;
        public InputList<string> Results
        {
            get => _results ?? (_results = new InputList<string>());
            set => _results = value;
        }

        public DatabaseVulnerabilityAssessmentRuleBaselineBaselineResultsArgs()
        {
        }
    }

    public sealed class DatabaseVulnerabilityAssessmentRuleBaselineBaselineResultsGetArgs : Pulumi.ResourceArgs
    {
        [Input("results", required: true)]
        private InputList<string>? _results;
        public InputList<string> Results
        {
            get => _results ?? (_results = new InputList<string>());
            set => _results = value;
        }

        public DatabaseVulnerabilityAssessmentRuleBaselineBaselineResultsGetArgs()
        {
        }
    }
    }

    namespace Outputs
    {

    [OutputType]
    public sealed class DatabaseVulnerabilityAssessmentRuleBaselineBaselineResults
    {
        public readonly ImmutableArray<string> Results;

        [OutputConstructor]
        private DatabaseVulnerabilityAssessmentRuleBaselineBaselineResults(ImmutableArray<string> results)
        {
            Results = results;
        }
    }
    }
}
