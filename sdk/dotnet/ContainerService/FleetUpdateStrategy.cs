// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.ContainerService
{
    /// <summary>
    /// Manages a Kubernetes Fleet Update Strategy.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Azure = Pulumi.Azure;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Azure.Core.ResourceGroup("example", new()
    ///     {
    ///         Name = "example-rg",
    ///         Location = "westeurope",
    ///     });
    /// 
    ///     var exampleKubernetesFleetManager = new Azure.ContainerService.KubernetesFleetManager("example", new()
    ///     {
    ///         Location = example.Location,
    ///         Name = "example",
    ///         ResourceGroupName = example.Name,
    ///     });
    /// 
    ///     var exampleFleetUpdateStrategy = new Azure.ContainerService.FleetUpdateStrategy("example", new()
    ///     {
    ///         Name = "example",
    ///         KubernetesFleetManagerId = exampleKubernetesFleetManager.Id,
    ///         Stages = new[]
    ///         {
    ///             new Azure.ContainerService.Inputs.FleetUpdateStrategyStageArgs
    ///             {
    ///                 Name = "example-stage-1",
    ///                 Groups = new[]
    ///                 {
    ///                     new Azure.ContainerService.Inputs.FleetUpdateStrategyStageGroupArgs
    ///                     {
    ///                         Name = "example-group-1",
    ///                     },
    ///                 },
    ///                 AfterStageWaitInSeconds = 21,
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## API Providers
    /// 
    /// &lt;!-- This section is generated, changes will be overwritten --&gt;
    /// This resource uses the following Azure API Providers:
    /// 
    /// * `Microsoft.ContainerService`: 2024-04-01
    /// 
    /// ## Import
    /// 
    /// Kubernetes Fleet Update Strategies can be imported using the `resource id`, e.g.
    /// 
    /// ```sh
    /// $ pulumi import azure:containerservice/fleetUpdateStrategy:FleetUpdateStrategy example /subscriptions/12345678-1234-9876-4563-123456789012/resourceGroups/resourceGroup1/providers/Microsoft.ContainerService/fleets/fleet1/updateStrategies/updateStrategy1
    /// ```
    /// </summary>
    [AzureResourceType("azure:containerservice/fleetUpdateStrategy:FleetUpdateStrategy")]
    public partial class FleetUpdateStrategy : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The ID of the Fleet Manager. Changing this forces a new Kubernetes Fleet Update Strategy to be created.
        /// </summary>
        [Output("kubernetesFleetManagerId")]
        public Output<string> KubernetesFleetManagerId { get; private set; } = null!;

        /// <summary>
        /// The name which should be used for this Kubernetes Fleet Update Strategy. Changing this forces a new Kubernetes Fleet Update Strategy to be created.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// One or more `stage` blocks as defined below.
        /// </summary>
        [Output("stages")]
        public Output<ImmutableArray<Outputs.FleetUpdateStrategyStage>> Stages { get; private set; } = null!;


        /// <summary>
        /// Create a FleetUpdateStrategy resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public FleetUpdateStrategy(string name, FleetUpdateStrategyArgs args, CustomResourceOptions? options = null)
            : base("azure:containerservice/fleetUpdateStrategy:FleetUpdateStrategy", name, args ?? new FleetUpdateStrategyArgs(), MakeResourceOptions(options, ""))
        {
        }

        private FleetUpdateStrategy(string name, Input<string> id, FleetUpdateStrategyState? state = null, CustomResourceOptions? options = null)
            : base("azure:containerservice/fleetUpdateStrategy:FleetUpdateStrategy", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing FleetUpdateStrategy resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static FleetUpdateStrategy Get(string name, Input<string> id, FleetUpdateStrategyState? state = null, CustomResourceOptions? options = null)
        {
            return new FleetUpdateStrategy(name, id, state, options);
        }
    }

    public sealed class FleetUpdateStrategyArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the Fleet Manager. Changing this forces a new Kubernetes Fleet Update Strategy to be created.
        /// </summary>
        [Input("kubernetesFleetManagerId", required: true)]
        public Input<string> KubernetesFleetManagerId { get; set; } = null!;

        /// <summary>
        /// The name which should be used for this Kubernetes Fleet Update Strategy. Changing this forces a new Kubernetes Fleet Update Strategy to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("stages", required: true)]
        private InputList<Inputs.FleetUpdateStrategyStageArgs>? _stages;

        /// <summary>
        /// One or more `stage` blocks as defined below.
        /// </summary>
        public InputList<Inputs.FleetUpdateStrategyStageArgs> Stages
        {
            get => _stages ?? (_stages = new InputList<Inputs.FleetUpdateStrategyStageArgs>());
            set => _stages = value;
        }

        public FleetUpdateStrategyArgs()
        {
        }
        public static new FleetUpdateStrategyArgs Empty => new FleetUpdateStrategyArgs();
    }

    public sealed class FleetUpdateStrategyState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the Fleet Manager. Changing this forces a new Kubernetes Fleet Update Strategy to be created.
        /// </summary>
        [Input("kubernetesFleetManagerId")]
        public Input<string>? KubernetesFleetManagerId { get; set; }

        /// <summary>
        /// The name which should be used for this Kubernetes Fleet Update Strategy. Changing this forces a new Kubernetes Fleet Update Strategy to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("stages")]
        private InputList<Inputs.FleetUpdateStrategyStageGetArgs>? _stages;

        /// <summary>
        /// One or more `stage` blocks as defined below.
        /// </summary>
        public InputList<Inputs.FleetUpdateStrategyStageGetArgs> Stages
        {
            get => _stages ?? (_stages = new InputList<Inputs.FleetUpdateStrategyStageGetArgs>());
            set => _stages = value;
        }

        public FleetUpdateStrategyState()
        {
        }
        public static new FleetUpdateStrategyState Empty => new FleetUpdateStrategyState();
    }
}
