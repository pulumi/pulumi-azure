// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.ContainerService
{
    public static class GetKubernetesServiceVersions
    {
        /// <summary>
        /// Use this data source to retrieve the version of Kubernetes supported by Azure Kubernetes Service.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Azure = Pulumi.Azure;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var current = Azure.ContainerService.GetKubernetesServiceVersions.Invoke(new()
        ///     {
        ///         Location = "West Europe",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["versions"] = current.Apply(getKubernetesServiceVersionsResult =&gt; getKubernetesServiceVersionsResult.Versions),
        ///         ["latestVersion"] = current.Apply(getKubernetesServiceVersionsResult =&gt; getKubernetesServiceVersionsResult.LatestVersion),
        ///     };
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetKubernetesServiceVersionsResult> InvokeAsync(GetKubernetesServiceVersionsArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetKubernetesServiceVersionsResult>("azure:containerservice/getKubernetesServiceVersions:getKubernetesServiceVersions", args ?? new GetKubernetesServiceVersionsArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to retrieve the version of Kubernetes supported by Azure Kubernetes Service.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Azure = Pulumi.Azure;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var current = Azure.ContainerService.GetKubernetesServiceVersions.Invoke(new()
        ///     {
        ///         Location = "West Europe",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["versions"] = current.Apply(getKubernetesServiceVersionsResult =&gt; getKubernetesServiceVersionsResult.Versions),
        ///         ["latestVersion"] = current.Apply(getKubernetesServiceVersionsResult =&gt; getKubernetesServiceVersionsResult.LatestVersion),
        ///     };
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetKubernetesServiceVersionsResult> Invoke(GetKubernetesServiceVersionsInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetKubernetesServiceVersionsResult>("azure:containerservice/getKubernetesServiceVersions:getKubernetesServiceVersions", args ?? new GetKubernetesServiceVersionsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetKubernetesServiceVersionsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Should Preview versions of Kubernetes in AKS be included? Defaults to `true`
        /// </summary>
        [Input("includePreview")]
        public bool? IncludePreview { get; set; }

        /// <summary>
        /// Specifies the location in which to query for versions.
        /// </summary>
        [Input("location", required: true)]
        public string Location { get; set; } = null!;

        /// <summary>
        /// A prefix filter for the versions of Kubernetes which should be returned; for example `1.` will return `1.9` to `1.14`, whereas `1.12` will return `1.12.2`.
        /// </summary>
        [Input("versionPrefix")]
        public string? VersionPrefix { get; set; }

        public GetKubernetesServiceVersionsArgs()
        {
        }
        public static new GetKubernetesServiceVersionsArgs Empty => new GetKubernetesServiceVersionsArgs();
    }

    public sealed class GetKubernetesServiceVersionsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Should Preview versions of Kubernetes in AKS be included? Defaults to `true`
        /// </summary>
        [Input("includePreview")]
        public Input<bool>? IncludePreview { get; set; }

        /// <summary>
        /// Specifies the location in which to query for versions.
        /// </summary>
        [Input("location", required: true)]
        public Input<string> Location { get; set; } = null!;

        /// <summary>
        /// A prefix filter for the versions of Kubernetes which should be returned; for example `1.` will return `1.9` to `1.14`, whereas `1.12` will return `1.12.2`.
        /// </summary>
        [Input("versionPrefix")]
        public Input<string>? VersionPrefix { get; set; }

        public GetKubernetesServiceVersionsInvokeArgs()
        {
        }
        public static new GetKubernetesServiceVersionsInvokeArgs Empty => new GetKubernetesServiceVersionsInvokeArgs();
    }


    [OutputType]
    public sealed class GetKubernetesServiceVersionsResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly bool? IncludePreview;
        /// <summary>
        /// The most recent version available. If `include_preview == false`, this is the most recent non-preview version available.
        /// </summary>
        public readonly string LatestVersion;
        public readonly string Location;
        public readonly string? VersionPrefix;
        /// <summary>
        /// The list of all supported versions.
        /// </summary>
        public readonly ImmutableArray<string> Versions;

        [OutputConstructor]
        private GetKubernetesServiceVersionsResult(
            string id,

            bool? includePreview,

            string latestVersion,

            string location,

            string? versionPrefix,

            ImmutableArray<string> versions)
        {
            Id = id;
            IncludePreview = includePreview;
            LatestVersion = latestVersion;
            Location = location;
            VersionPrefix = versionPrefix;
            Versions = versions;
        }
    }
}
