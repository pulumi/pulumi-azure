// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.ContainerService.Inputs
{

    public sealed class RegistryTaskRegistryCredentialCustomGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The managed identity assigned to this custom credential. For user assigned identity, the value is the client ID of the identity. For system assigned identity, the value is `[system]`.
        /// </summary>
        [Input("identity")]
        public Input<string>? Identity { get; set; }

        /// <summary>
        /// The login server of the custom Container Registry.
        /// </summary>
        [Input("loginServer", required: true)]
        public Input<string> LoginServer { get; set; } = null!;

        [Input("password")]
        private Input<string>? _password;

        /// <summary>
        /// The password for logging into the custom Container Registry. It can be either a plain text of password, or a Keyvault Secret ID.
        /// </summary>
        public Input<string>? Password
        {
            get => _password;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _password = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// The username for logging into the custom Container Registry. It can be either a plain text of username, or a Keyvault Secret ID.
        /// </summary>
        [Input("username")]
        public Input<string>? Username { get; set; }

        public RegistryTaskRegistryCredentialCustomGetArgs()
        {
        }
        public static new RegistryTaskRegistryCredentialCustomGetArgs Empty => new RegistryTaskRegistryCredentialCustomGetArgs();
    }
}
