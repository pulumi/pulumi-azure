// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.ContainerService.Inputs
{

    public sealed class RegistryTaskSourceTriggerAuthenticationGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Time in seconds that the token remains valid.
        /// </summary>
        [Input("expireInSeconds")]
        public Input<int>? ExpireInSeconds { get; set; }

        [Input("refreshToken")]
        private Input<string>? _refreshToken;

        /// <summary>
        /// The refresh token used to refresh the access token.
        /// </summary>
        public Input<string>? RefreshToken
        {
            get => _refreshToken;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _refreshToken = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// The scope of the access token.
        /// </summary>
        [Input("scope")]
        public Input<string>? Scope { get; set; }

        [Input("token", required: true)]
        private Input<string>? _token;

        /// <summary>
        /// The access token used to access the source control provider.
        /// </summary>
        public Input<string>? Token
        {
            get => _token;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _token = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// The type of the token. Possible values are `PAT` (personal access token) and `OAuth`.
        /// </summary>
        [Input("tokenType", required: true)]
        public Input<string> TokenType { get; set; } = null!;

        public RegistryTaskSourceTriggerAuthenticationGetArgs()
        {
        }
        public static new RegistryTaskSourceTriggerAuthenticationGetArgs Empty => new RegistryTaskSourceTriggerAuthenticationGetArgs();
    }
}
