// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.ContainerService.Inputs
{

    public sealed class RegistryTaskEncodedStepGetArgs : global::Pulumi.ResourceArgs
    {
        [Input("contextAccessToken")]
        private Input<string>? _contextAccessToken;

        /// <summary>
        /// The token (Git PAT or SAS token of storage account blob) associated with the context for this step.
        /// </summary>
        public Input<string>? ContextAccessToken
        {
            get => _contextAccessToken;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _contextAccessToken = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// The URL (absolute or relative) of the source context for this step.
        /// </summary>
        [Input("contextPath")]
        public Input<string>? ContextPath { get; set; }

        [Input("secretValues")]
        private InputMap<string>? _secretValues;

        /// <summary>
        /// Specifies a map of secret values that can be passed when running a task.
        /// </summary>
        public InputMap<string> SecretValues
        {
            get => _secretValues ?? (_secretValues = new InputMap<string>());
            set
            {
                var emptySecret = Output.CreateSecret(ImmutableDictionary.Create<string, string>());
                _secretValues = Output.All(value, emptySecret).Apply(v => v[0]);
            }
        }

        /// <summary>
        /// The (optionally base64 encoded) content of the build template.
        /// </summary>
        [Input("taskContent", required: true)]
        public Input<string> TaskContent { get; set; } = null!;

        /// <summary>
        /// The (optionally base64 encoded) content of the build parameters.
        /// </summary>
        [Input("valueContent")]
        public Input<string>? ValueContent { get; set; }

        [Input("values")]
        private InputMap<string>? _values;

        /// <summary>
        /// Specifies a map of values that can be passed when running a task.
        /// </summary>
        public InputMap<string> Values
        {
            get => _values ?? (_values = new InputMap<string>());
            set => _values = value;
        }

        public RegistryTaskEncodedStepGetArgs()
        {
        }
        public static new RegistryTaskEncodedStepGetArgs Empty => new RegistryTaskEncodedStepGetArgs();
    }
}
