// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.ContainerService.Inputs
{

    public sealed class KubernetesClusterDefaultNodePoolKubeletConfigGetArgs : global::Pulumi.ResourceArgs
    {
        [Input("allowedUnsafeSysctls")]
        private InputList<string>? _allowedUnsafeSysctls;

        /// <summary>
        /// Specifies the allow list of unsafe sysctls command or patterns (ending in `*`).
        /// </summary>
        public InputList<string> AllowedUnsafeSysctls
        {
            get => _allowedUnsafeSysctls ?? (_allowedUnsafeSysctls = new InputList<string>());
            set => _allowedUnsafeSysctls = value;
        }

        /// <summary>
        /// Specifies the maximum number of container log files that can be present for a container. must be at least 2.
        /// </summary>
        [Input("containerLogMaxLine")]
        public Input<int>? ContainerLogMaxLine { get; set; }

        /// <summary>
        /// Specifies the maximum size (e.g. 10MB) of container log file before it is rotated.
        /// </summary>
        [Input("containerLogMaxSizeMb")]
        public Input<int>? ContainerLogMaxSizeMb { get; set; }

        /// <summary>
        /// Is CPU CFS quota enforcement for containers enabled?
        /// </summary>
        [Input("cpuCfsQuotaEnabled")]
        public Input<bool>? CpuCfsQuotaEnabled { get; set; }

        /// <summary>
        /// Specifies the CPU CFS quota period value.
        /// </summary>
        [Input("cpuCfsQuotaPeriod")]
        public Input<string>? CpuCfsQuotaPeriod { get; set; }

        /// <summary>
        /// Specifies the CPU Manager policy to use. Possible values are `none` and `static`,.
        /// </summary>
        [Input("cpuManagerPolicy")]
        public Input<string>? CpuManagerPolicy { get; set; }

        /// <summary>
        /// Specifies the percent of disk usage above which image garbage collection is always run. Must be between `0` and `100`.
        /// </summary>
        [Input("imageGcHighThreshold")]
        public Input<int>? ImageGcHighThreshold { get; set; }

        /// <summary>
        /// Specifies the percent of disk usage lower than which image garbage collection is never run. Must be between `0` and `100`.
        /// </summary>
        [Input("imageGcLowThreshold")]
        public Input<int>? ImageGcLowThreshold { get; set; }

        /// <summary>
        /// Specifies the maximum number of processes per pod.
        /// </summary>
        [Input("podMaxPid")]
        public Input<int>? PodMaxPid { get; set; }

        /// <summary>
        /// Specifies the Topology Manager policy to use. Possible values are `none`, `best-effort`, `restricted` or `single-numa-node`.
        /// </summary>
        [Input("topologyManagerPolicy")]
        public Input<string>? TopologyManagerPolicy { get; set; }

        public KubernetesClusterDefaultNodePoolKubeletConfigGetArgs()
        {
        }
        public static new KubernetesClusterDefaultNodePoolKubeletConfigGetArgs Empty => new KubernetesClusterDefaultNodePoolKubeletConfigGetArgs();
    }
}
