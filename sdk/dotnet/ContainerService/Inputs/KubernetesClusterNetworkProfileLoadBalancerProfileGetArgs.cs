// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.ContainerService.Inputs
{

    public sealed class KubernetesClusterNetworkProfileLoadBalancerProfileGetArgs : global::Pulumi.ResourceArgs
    {
        [Input("effectiveOutboundIps")]
        private InputList<string>? _effectiveOutboundIps;

        /// <summary>
        /// The outcome (resource IDs) of the specified arguments.
        /// </summary>
        public InputList<string> EffectiveOutboundIps
        {
            get => _effectiveOutboundIps ?? (_effectiveOutboundIps = new InputList<string>());
            set => _effectiveOutboundIps = value;
        }

        /// <summary>
        /// Desired outbound flow idle timeout in minutes for the cluster load balancer. Must be between `4` and `120` inclusive. Defaults to `30`.
        /// </summary>
        [Input("idleTimeoutInMinutes")]
        public Input<int>? IdleTimeoutInMinutes { get; set; }

        /// <summary>
        /// Count of desired managed outbound IPs for the cluster load balancer. Must be between `1` and `100` inclusive.
        /// </summary>
        [Input("managedOutboundIpCount")]
        public Input<int>? ManagedOutboundIpCount { get; set; }

        /// <summary>
        /// The desired number of IPv6 outbound IPs created and managed by Azure for the cluster load balancer. Must be in the range of 1 to 100 (inclusive). The default value is 0 for single-stack and 1 for dual-stack.
        /// 
        /// &gt; **Note:** `managed_outbound_ipv6_count` requires dual-stack networking. To enable dual-stack networking the Preview Feature `Microsoft.ContainerService/AKS-EnableDualStack` needs to be enabled and the Resource Provider re-registered, see [the documentation](https://docs.microsoft.com/azure/aks/configure-kubenet-dual-stack?tabs=azure-cli%2Ckubectl#register-the-aks-enabledualstack-preview-feature) for more information.
        /// </summary>
        [Input("managedOutboundIpv6Count")]
        public Input<int>? ManagedOutboundIpv6Count { get; set; }

        [Input("outboundIpAddressIds")]
        private InputList<string>? _outboundIpAddressIds;

        /// <summary>
        /// The ID of the Public IP Addresses which should be used for outbound communication for the cluster load balancer.
        /// 
        /// &gt; **Note:** Set `outbound_ip_address_ids` to an empty slice `[]` in order to unlink it from the cluster. Unlinking a `outbound_ip_address_ids` will revert the load balancing for the cluster back to a managed one.
        /// </summary>
        public InputList<string> OutboundIpAddressIds
        {
            get => _outboundIpAddressIds ?? (_outboundIpAddressIds = new InputList<string>());
            set => _outboundIpAddressIds = value;
        }

        [Input("outboundIpPrefixIds")]
        private InputList<string>? _outboundIpPrefixIds;

        /// <summary>
        /// The ID of the outbound Public IP Address Prefixes which should be used for the cluster load balancer.
        /// 
        /// &gt; **Note:** Set `outbound_ip_prefix_ids` to an empty slice `[]` in order to unlink it from the cluster. Unlinking a `outbound_ip_prefix_ids` will revert the load balancing for the cluster back to a managed one.
        /// </summary>
        public InputList<string> OutboundIpPrefixIds
        {
            get => _outboundIpPrefixIds ?? (_outboundIpPrefixIds = new InputList<string>());
            set => _outboundIpPrefixIds = value;
        }

        /// <summary>
        /// Number of desired SNAT port for each VM in the clusters load balancer. Must be between `0` and `64000` inclusive. Defaults to `0`.
        /// </summary>
        [Input("outboundPortsAllocated")]
        public Input<int>? OutboundPortsAllocated { get; set; }

        public KubernetesClusterNetworkProfileLoadBalancerProfileGetArgs()
        {
        }
        public static new KubernetesClusterNetworkProfileLoadBalancerProfileGetArgs Empty => new KubernetesClusterNetworkProfileLoadBalancerProfileGetArgs();
    }
}
