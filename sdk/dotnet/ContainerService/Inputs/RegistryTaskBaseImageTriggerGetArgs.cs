// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.ContainerService.Inputs
{

    public sealed class RegistryTaskBaseImageTriggerGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Should the trigger be enabled? Defaults to `true`.
        /// </summary>
        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        /// <summary>
        /// The name which should be used for this trigger.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// The type of the trigger. Possible values are `All` and `Runtime`.
        /// </summary>
        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        [Input("updateTriggerEndpoint")]
        private Input<string>? _updateTriggerEndpoint;

        /// <summary>
        /// The endpoint URL for receiving the trigger.
        /// </summary>
        public Input<string>? UpdateTriggerEndpoint
        {
            get => _updateTriggerEndpoint;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _updateTriggerEndpoint = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// Type of payload body for the trigger. Possible values are `Default` and `Token`.
        /// </summary>
        [Input("updateTriggerPayloadType")]
        public Input<string>? UpdateTriggerPayloadType { get; set; }

        public RegistryTaskBaseImageTriggerGetArgs()
        {
        }
        public static new RegistryTaskBaseImageTriggerGetArgs Empty => new RegistryTaskBaseImageTriggerGetArgs();
    }
}
