// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.ContainerService.Inputs
{

    public sealed class KubernetesClusterKubeAdminConfigGetArgs : global::Pulumi.ResourceArgs
    {
        [Input("clientCertificate")]
        private Input<string>? _clientCertificate;

        /// <summary>
        /// Base64 encoded public certificate used by clients to authenticate to the Kubernetes cluster.
        /// </summary>
        public Input<string>? ClientCertificate
        {
            get => _clientCertificate;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _clientCertificate = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("clientKey")]
        private Input<string>? _clientKey;

        /// <summary>
        /// Base64 encoded private key used by clients to authenticate to the Kubernetes cluster.
        /// </summary>
        public Input<string>? ClientKey
        {
            get => _clientKey;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _clientKey = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("clusterCaCertificate")]
        private Input<string>? _clusterCaCertificate;

        /// <summary>
        /// Base64 encoded public CA certificate used as the root of trust for the Kubernetes cluster.
        /// </summary>
        public Input<string>? ClusterCaCertificate
        {
            get => _clusterCaCertificate;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _clusterCaCertificate = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("host")]
        private Input<string>? _host;

        /// <summary>
        /// The Kubernetes cluster server host.
        /// </summary>
        public Input<string>? Host
        {
            get => _host;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _host = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("password")]
        private Input<string>? _password;

        /// <summary>
        /// A password or token used to authenticate to the Kubernetes cluster.
        /// </summary>
        public Input<string>? Password
        {
            get => _password;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _password = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("username")]
        private Input<string>? _username;

        /// <summary>
        /// A username used to authenticate to the Kubernetes cluster.
        /// </summary>
        public Input<string>? Username
        {
            get => _username;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _username = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        public KubernetesClusterKubeAdminConfigGetArgs()
        {
        }
        public static new KubernetesClusterKubeAdminConfigGetArgs Empty => new KubernetesClusterKubeAdminConfigGetArgs();
    }
}
