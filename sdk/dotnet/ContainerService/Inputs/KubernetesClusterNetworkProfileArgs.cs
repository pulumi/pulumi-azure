// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.ContainerService.Inputs
{

    public sealed class KubernetesClusterNetworkProfileArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// IP address within the Kubernetes service address range that will be used by cluster service discovery (kube-dns). Changing this forces a new resource to be created.
        /// </summary>
        [Input("dnsServiceIp")]
        public Input<string>? DnsServiceIp { get; set; }

        /// <summary>
        /// IP address (in CIDR notation) used as the Docker bridge IP address on nodes. Changing this forces a new resource to be created.
        /// </summary>
        [Input("dockerBridgeCidr")]
        public Input<string>? DockerBridgeCidr { get; set; }

        /// <summary>
        /// A `load_balancer_profile` block. This can only be specified when `load_balancer_sku` is set to `Standard`.
        /// </summary>
        [Input("loadBalancerProfile")]
        public Input<Inputs.KubernetesClusterNetworkProfileLoadBalancerProfileArgs>? LoadBalancerProfile { get; set; }

        /// <summary>
        /// Specifies the SKU of the Load Balancer used for this Kubernetes Cluster. Possible values are `Basic` and `Standard`. Defaults to `Standard`.
        /// </summary>
        [Input("loadBalancerSku")]
        public Input<string>? LoadBalancerSku { get; set; }

        /// <summary>
        /// Network plugin to use for networking. Currently supported values are `azure` and `kubenet`. Changing this forces a new resource to be created.
        /// </summary>
        [Input("networkPlugin", required: true)]
        public Input<string> NetworkPlugin { get; set; } = null!;

        /// <summary>
        /// Sets up network policy to be used with Azure CNI. [Network policy allows us to control the traffic flow between pods](https://docs.microsoft.com/en-us/azure/aks/use-network-policies). Currently supported values are `calico` and `azure`. Changing this forces a new resource to be created.
        /// </summary>
        [Input("networkPolicy")]
        public Input<string>? NetworkPolicy { get; set; }

        /// <summary>
        /// The outbound (egress) routing method which should be used for this Kubernetes Cluster. Possible values are `loadBalancer` and `userDefinedRouting`. Defaults to `loadBalancer`.
        /// </summary>
        [Input("outboundType")]
        public Input<string>? OutboundType { get; set; }

        /// <summary>
        /// The CIDR to use for pod IP addresses. This field can only be set when `network_plugin` is set to `kubenet`. Changing this forces a new resource to be created.
        /// </summary>
        [Input("podCidr")]
        public Input<string>? PodCidr { get; set; }

        /// <summary>
        /// The Network Range used by the Kubernetes service. Changing this forces a new resource to be created.
        /// </summary>
        [Input("serviceCidr")]
        public Input<string>? ServiceCidr { get; set; }

        public KubernetesClusterNetworkProfileArgs()
        {
        }
    }
}
