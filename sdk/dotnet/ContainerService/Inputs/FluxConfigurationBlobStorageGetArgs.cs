// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.ContainerService.Inputs
{

    public sealed class FluxConfigurationBlobStorageGetArgs : global::Pulumi.ResourceArgs
    {
        [Input("accountKey")]
        private Input<string>? _accountKey;

        /// <summary>
        /// Specifies the account key (shared key) to access the storage account.
        /// </summary>
        public Input<string>? AccountKey
        {
            get => _accountKey;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _accountKey = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// Specifies the Azure Blob container ID.
        /// </summary>
        [Input("containerId", required: true)]
        public Input<string> ContainerId { get; set; } = null!;

        /// <summary>
        /// Specifies the name of a local secret on the Kubernetes cluster to use as the authentication secret rather than the managed or user-provided configuration secrets.
        /// </summary>
        [Input("localAuthReference")]
        public Input<string>? LocalAuthReference { get; set; }

        /// <summary>
        /// A `ManagedIdentity` block as defined below.
        /// </summary>
        [Input("managedIdentity")]
        public Input<Inputs.FluxConfigurationBlobStorageManagedIdentityGetArgs>? ManagedIdentity { get; set; }

        [Input("sasToken")]
        private Input<string>? _sasToken;

        /// <summary>
        /// Specifies the shared access token to access the storage container.
        /// </summary>
        public Input<string>? SasToken
        {
            get => _sasToken;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _sasToken = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// A `ServicePrincipal` block as defined below.
        /// </summary>
        [Input("servicePrincipal")]
        public Input<Inputs.FluxConfigurationBlobStorageServicePrincipalGetArgs>? ServicePrincipal { get; set; }

        /// <summary>
        /// Specifies the interval at which to re-reconcile the cluster Azure Blob source with the remote.
        /// </summary>
        [Input("syncIntervalInSeconds")]
        public Input<int>? SyncIntervalInSeconds { get; set; }

        /// <summary>
        /// Specifies the maximum time to attempt to reconcile the cluster Azure Blob source with the remote.
        /// </summary>
        [Input("timeoutInSeconds")]
        public Input<int>? TimeoutInSeconds { get; set; }

        public FluxConfigurationBlobStorageGetArgs()
        {
        }
        public static new FluxConfigurationBlobStorageGetArgs Empty => new FluxConfigurationBlobStorageGetArgs();
    }
}
