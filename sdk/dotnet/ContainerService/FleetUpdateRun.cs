// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.ContainerService
{
    /// <summary>
    /// Manages a Kubernetes Fleet Update Run.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Azure = Pulumi.Azure;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Azure.Core.ResourceGroup("example", new()
    ///     {
    ///         Name = "example-rg",
    ///         Location = "westeurope",
    ///     });
    /// 
    ///     var exampleKubernetesFleetManager = new Azure.ContainerService.KubernetesFleetManager("example", new()
    ///     {
    ///         Location = example.Location,
    ///         Name = "example",
    ///         ResourceGroupName = example.Name,
    ///     });
    /// 
    ///     var exampleKubernetesCluster = new Azure.ContainerService.KubernetesCluster("example", new()
    ///     {
    ///         Name = "example",
    ///         Location = example.Location,
    ///         ResourceGroupName = example.Name,
    ///         DnsPrefix = "example",
    ///         DefaultNodePool = new Azure.ContainerService.Inputs.KubernetesClusterDefaultNodePoolArgs
    ///         {
    ///             Name = "default",
    ///             NodeCount = 1,
    ///             VmSize = "Standard_DS2_v2",
    ///         },
    ///         Identity = new Azure.ContainerService.Inputs.KubernetesClusterIdentityArgs
    ///         {
    ///             Type = "SystemAssigned",
    ///         },
    ///     });
    /// 
    ///     var exampleFleetMember = new Azure.ContainerService.FleetMember("example", new()
    ///     {
    ///         Name = "example",
    ///         KubernetesFleetId = exampleKubernetesFleetManager.Id,
    ///         KubernetesClusterId = exampleKubernetesCluster.Id,
    ///         Group = "example-group",
    ///     });
    /// 
    ///     var exampleFleetUpdateRun = new Azure.ContainerService.FleetUpdateRun("example", new()
    ///     {
    ///         Name = "example",
    ///         KubernetesFleetManagerId = exampleKubernetesFleetManager.Id,
    ///         ManagedClusterUpdate = new Azure.ContainerService.Inputs.FleetUpdateRunManagedClusterUpdateArgs
    ///         {
    ///             Upgrade = new Azure.ContainerService.Inputs.FleetUpdateRunManagedClusterUpdateUpgradeArgs
    ///             {
    ///                 Type = "Full",
    ///                 KubernetesVersion = "1.27",
    ///             },
    ///             NodeImageSelection = new Azure.ContainerService.Inputs.FleetUpdateRunManagedClusterUpdateNodeImageSelectionArgs
    ///             {
    ///                 Type = "Latest",
    ///             },
    ///         },
    ///         Stages = new[]
    ///         {
    ///             new Azure.ContainerService.Inputs.FleetUpdateRunStageArgs
    ///             {
    ///                 Name = "example",
    ///                 Groups = new[]
    ///                 {
    ///                     new Azure.ContainerService.Inputs.FleetUpdateRunStageGroupArgs
    ///                     {
    ///                         Name = "example-group",
    ///                     },
    ///                 },
    ///                 AfterStageWaitInSeconds = 21,
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## API Providers
    /// 
    /// &lt;!-- This section is generated, changes will be overwritten --&gt;
    /// This resource uses the following Azure API Providers:
    /// 
    /// * `Microsoft.ContainerService` - 2024-04-01
    /// 
    /// ## Import
    /// 
    /// Kubernetes Fleet Update Runs can be imported using the `resource id`, e.g.
    /// 
    /// ```sh
    /// $ pulumi import azure:containerservice/fleetUpdateRun:FleetUpdateRun example /subscriptions/12345678-1234-9876-4563-123456789012/resourceGroups/resourceGroup1/providers/Microsoft.ContainerService/fleets/fleet1/updateRuns/updateRun1
    /// ```
    /// </summary>
    [AzureResourceType("azure:containerservice/fleetUpdateRun:FleetUpdateRun")]
    public partial class FleetUpdateRun : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The ID of the Fleet Update Strategy. Only one of `FleetUpdateStrategyId` or `Stage` can be specified.
        /// </summary>
        [Output("fleetUpdateStrategyId")]
        public Output<string?> FleetUpdateStrategyId { get; private set; } = null!;

        /// <summary>
        /// The ID of the Fleet Manager. Changing this forces a new Kubernetes Fleet Update Run to be created.
        /// </summary>
        [Output("kubernetesFleetManagerId")]
        public Output<string> KubernetesFleetManagerId { get; private set; } = null!;

        /// <summary>
        /// A `ManagedClusterUpdate` block as defined below.
        /// </summary>
        [Output("managedClusterUpdate")]
        public Output<Outputs.FleetUpdateRunManagedClusterUpdate> ManagedClusterUpdate { get; private set; } = null!;

        /// <summary>
        /// The name which should be used for this Kubernetes Fleet Update Run. Changing this forces a new Kubernetes Fleet Update Run to be created.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// One or more `Stage` blocks as defined below. Only one of `Stage` or `FleetUpdateStrategyId` can be specified.
        /// </summary>
        [Output("stages")]
        public Output<ImmutableArray<Outputs.FleetUpdateRunStage>> Stages { get; private set; } = null!;


        /// <summary>
        /// Create a FleetUpdateRun resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public FleetUpdateRun(string name, FleetUpdateRunArgs args, CustomResourceOptions? options = null)
            : base("azure:containerservice/fleetUpdateRun:FleetUpdateRun", name, args ?? new FleetUpdateRunArgs(), MakeResourceOptions(options, ""))
        {
        }

        private FleetUpdateRun(string name, Input<string> id, FleetUpdateRunState? state = null, CustomResourceOptions? options = null)
            : base("azure:containerservice/fleetUpdateRun:FleetUpdateRun", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing FleetUpdateRun resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static FleetUpdateRun Get(string name, Input<string> id, FleetUpdateRunState? state = null, CustomResourceOptions? options = null)
        {
            return new FleetUpdateRun(name, id, state, options);
        }
    }

    public sealed class FleetUpdateRunArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the Fleet Update Strategy. Only one of `FleetUpdateStrategyId` or `Stage` can be specified.
        /// </summary>
        [Input("fleetUpdateStrategyId")]
        public Input<string>? FleetUpdateStrategyId { get; set; }

        /// <summary>
        /// The ID of the Fleet Manager. Changing this forces a new Kubernetes Fleet Update Run to be created.
        /// </summary>
        [Input("kubernetesFleetManagerId", required: true)]
        public Input<string> KubernetesFleetManagerId { get; set; } = null!;

        /// <summary>
        /// A `ManagedClusterUpdate` block as defined below.
        /// </summary>
        [Input("managedClusterUpdate", required: true)]
        public Input<Inputs.FleetUpdateRunManagedClusterUpdateArgs> ManagedClusterUpdate { get; set; } = null!;

        /// <summary>
        /// The name which should be used for this Kubernetes Fleet Update Run. Changing this forces a new Kubernetes Fleet Update Run to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("stages")]
        private InputList<Inputs.FleetUpdateRunStageArgs>? _stages;

        /// <summary>
        /// One or more `Stage` blocks as defined below. Only one of `Stage` or `FleetUpdateStrategyId` can be specified.
        /// </summary>
        public InputList<Inputs.FleetUpdateRunStageArgs> Stages
        {
            get => _stages ?? (_stages = new InputList<Inputs.FleetUpdateRunStageArgs>());
            set => _stages = value;
        }

        public FleetUpdateRunArgs()
        {
        }
        public static new FleetUpdateRunArgs Empty => new FleetUpdateRunArgs();
    }

    public sealed class FleetUpdateRunState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the Fleet Update Strategy. Only one of `FleetUpdateStrategyId` or `Stage` can be specified.
        /// </summary>
        [Input("fleetUpdateStrategyId")]
        public Input<string>? FleetUpdateStrategyId { get; set; }

        /// <summary>
        /// The ID of the Fleet Manager. Changing this forces a new Kubernetes Fleet Update Run to be created.
        /// </summary>
        [Input("kubernetesFleetManagerId")]
        public Input<string>? KubernetesFleetManagerId { get; set; }

        /// <summary>
        /// A `ManagedClusterUpdate` block as defined below.
        /// </summary>
        [Input("managedClusterUpdate")]
        public Input<Inputs.FleetUpdateRunManagedClusterUpdateGetArgs>? ManagedClusterUpdate { get; set; }

        /// <summary>
        /// The name which should be used for this Kubernetes Fleet Update Run. Changing this forces a new Kubernetes Fleet Update Run to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("stages")]
        private InputList<Inputs.FleetUpdateRunStageGetArgs>? _stages;

        /// <summary>
        /// One or more `Stage` blocks as defined below. Only one of `Stage` or `FleetUpdateStrategyId` can be specified.
        /// </summary>
        public InputList<Inputs.FleetUpdateRunStageGetArgs> Stages
        {
            get => _stages ?? (_stages = new InputList<Inputs.FleetUpdateRunStageGetArgs>());
            set => _stages = value;
        }

        public FleetUpdateRunState()
        {
        }
        public static new FleetUpdateRunState Empty => new FleetUpdateRunState();
    }
}
