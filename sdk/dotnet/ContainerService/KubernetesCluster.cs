// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.ContainerService
{
    /// <summary>
    /// Manages a Managed Kubernetes Cluster (also known as AKS / Azure Kubernetes Service)
    /// 
    /// ## Example Usage
    /// 
    /// This example provisions a basic Managed Kubernetes Cluster.
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Azure = Pulumi.Azure;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var exampleResourceGroup = new Azure.Core.ResourceGroup("exampleResourceGroup", new()
    ///     {
    ///         Location = "West Europe",
    ///     });
    /// 
    ///     var exampleKubernetesCluster = new Azure.ContainerService.KubernetesCluster("exampleKubernetesCluster", new()
    ///     {
    ///         Location = exampleResourceGroup.Location,
    ///         ResourceGroupName = exampleResourceGroup.Name,
    ///         DnsPrefix = "exampleaks1",
    ///         DefaultNodePool = new Azure.ContainerService.Inputs.KubernetesClusterDefaultNodePoolArgs
    ///         {
    ///             Name = "default",
    ///             NodeCount = 1,
    ///             VmSize = "Standard_D2_v2",
    ///         },
    ///         Identity = new Azure.ContainerService.Inputs.KubernetesClusterIdentityArgs
    ///         {
    ///             Type = "SystemAssigned",
    ///         },
    ///         Tags = 
    ///         {
    ///             { "Environment", "Production" },
    ///         },
    ///     });
    /// 
    ///     return new Dictionary&lt;string, object?&gt;
    ///     {
    ///         ["clientCertificate"] = exampleKubernetesCluster.KubeConfigs.Apply(kubeConfigs =&gt; kubeConfigs[0].ClientCertificate),
    ///         ["kubeConfig"] = exampleKubernetesCluster.KubeConfigRaw,
    ///     };
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Managed Kubernetes Clusters can be imported using the `resource id`, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import azure:containerservice/kubernetesCluster:KubernetesCluster cluster1 /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.ContainerService/managedClusters/cluster1
    /// ```
    /// </summary>
    [AzureResourceType("azure:containerservice/kubernetesCluster:KubernetesCluster")]
    public partial class KubernetesCluster : global::Pulumi.CustomResource
    {
        /// <summary>
        /// A `aci_connector_linux` block as defined below. For more details, please visit [Create and configure an AKS cluster to use virtual nodes](https://docs.microsoft.com/azure/aks/virtual-nodes-portal).
        /// </summary>
        [Output("aciConnectorLinux")]
        public Output<Outputs.KubernetesClusterAciConnectorLinux?> AciConnectorLinux { get; private set; } = null!;

        /// <summary>
        /// An `api_server_access_profile` block as defined below.
        /// </summary>
        [Output("apiServerAccessProfile")]
        public Output<Outputs.KubernetesClusterApiServerAccessProfile> ApiServerAccessProfile { get; private set; } = null!;

        [Output("apiServerAuthorizedIpRanges")]
        public Output<ImmutableArray<string>> ApiServerAuthorizedIpRanges { get; private set; } = null!;

        /// <summary>
        /// A `auto_scaler_profile` block as defined below.
        /// </summary>
        [Output("autoScalerProfile")]
        public Output<Outputs.KubernetesClusterAutoScalerProfile> AutoScalerProfile { get; private set; } = null!;

        /// <summary>
        /// The upgrade channel for this Kubernetes Cluster. Possible values are `patch`, `rapid`, `node-image` and `stable`. Omitting this field sets this value to `none`.
        /// 
        /// !&gt; **Note:** Cluster Auto-Upgrade will update the Kubernetes Cluster (and its Node Pools) to the latest GA version of Kubernetes automatically - please [see the Azure documentation for more information](https://docs.microsoft.com/azure/aks/upgrade-cluster#set-auto-upgrade-channel).
        /// 
        /// &gt; **Note:** Cluster Auto-Upgrade only updates to GA versions of Kubernetes and will not update to Preview versions.
        /// </summary>
        [Output("automaticChannelUpgrade")]
        public Output<string?> AutomaticChannelUpgrade { get; private set; } = null!;

        /// <summary>
        /// A `azure_active_directory_role_based_access_control` block as defined below.
        /// 
        /// &gt; **Note:** This requires that the Preview Feature `Microsoft.ContainerService/AKS-PrometheusAddonPreview` is enabled, see [the documentation](https://learn.microsoft.com/en-us/azure/azure-monitor/essentials/prometheus-metrics-enable?tabs=azure-portal) for more information.
        /// </summary>
        [Output("azureActiveDirectoryRoleBasedAccessControl")]
        public Output<Outputs.KubernetesClusterAzureActiveDirectoryRoleBasedAccessControl?> AzureActiveDirectoryRoleBasedAccessControl { get; private set; } = null!;

        /// <summary>
        /// Should the Azure Policy Add-On be enabled? For more details please visit [Understand Azure Policy for Azure Kubernetes Service](https://docs.microsoft.com/en-ie/azure/governance/policy/concepts/rego-for-aks)
        /// </summary>
        [Output("azurePolicyEnabled")]
        public Output<bool?> AzurePolicyEnabled { get; private set; } = null!;

        /// <summary>
        /// A `confidential_computing` block as defined below. For more details please [the documentation](https://learn.microsoft.com/en-us/azure/confidential-computing/confidential-nodes-aks-overview)
        /// </summary>
        [Output("confidentialComputing")]
        public Output<Outputs.KubernetesClusterConfidentialComputing?> ConfidentialComputing { get; private set; } = null!;

        /// <summary>
        /// A list of up to 10 base64 encoded CAs that will be added to the trust store on nodes with the `custom_ca_trust_enabled` feature enabled.
        /// 
        /// &gt; **Note:** Removing `custom_ca_trust_certificates_base64` after it has been set forces a new resource to be created.
        /// </summary>
        [Output("customCaTrustCertificatesBase64s")]
        public Output<ImmutableArray<string>> CustomCaTrustCertificatesBase64s { get; private set; } = null!;

        /// <summary>
        /// A `default_node_pool` block as defined below.
        /// </summary>
        [Output("defaultNodePool")]
        public Output<Outputs.KubernetesClusterDefaultNodePool> DefaultNodePool { get; private set; } = null!;

        /// <summary>
        /// The ID of the Disk Encryption Set which should be used for the Nodes and Volumes. More information [can be found in the documentation](https://docs.microsoft.com/azure/aks/azure-disk-customer-managed-keys). Changing this forces a new resource to be created.
        /// </summary>
        [Output("diskEncryptionSetId")]
        public Output<string?> DiskEncryptionSetId { get; private set; } = null!;

        /// <summary>
        /// DNS prefix specified when creating the managed cluster. Possible values must begin and end with a letter or number, contain only letters, numbers, and hyphens and be between 1 and 54 characters in length. Changing this forces a new resource to be created.
        /// </summary>
        [Output("dnsPrefix")]
        public Output<string?> DnsPrefix { get; private set; } = null!;

        /// <summary>
        /// Specifies the DNS prefix to use with private clusters. Changing this forces a new resource to be created.
        /// 
        /// &gt; **Note:** You must define either a `dns_prefix` or a `dns_prefix_private_cluster` field.
        /// 
        /// In addition, one of either `identity` or `service_principal` blocks must be specified.
        /// </summary>
        [Output("dnsPrefixPrivateCluster")]
        public Output<string?> DnsPrefixPrivateCluster { get; private set; } = null!;

        /// <summary>
        /// Specifies the Edge Zone within the Azure Region where this Managed Kubernetes Cluster should exist. Changing this forces a new resource to be created.
        /// </summary>
        [Output("edgeZone")]
        public Output<string?> EdgeZone { get; private set; } = null!;

        [Output("enablePodSecurityPolicy")]
        public Output<bool?> EnablePodSecurityPolicy { get; private set; } = null!;

        /// <summary>
        /// The FQDN of the Azure Kubernetes Managed Cluster.
        /// </summary>
        [Output("fqdn")]
        public Output<string> Fqdn { get; private set; } = null!;

        /// <summary>
        /// Should HTTP Application Routing be enabled?
        /// 
        /// &gt; **Note:** At this time HTTP Application Routing is not supported in Azure China or Azure US Government.
        /// </summary>
        [Output("httpApplicationRoutingEnabled")]
        public Output<bool?> HttpApplicationRoutingEnabled { get; private set; } = null!;

        /// <summary>
        /// The Zone Name of the HTTP Application Routing.
        /// </summary>
        [Output("httpApplicationRoutingZoneName")]
        public Output<string> HttpApplicationRoutingZoneName { get; private set; } = null!;

        /// <summary>
        /// A `http_proxy_config` block as defined below.
        /// </summary>
        [Output("httpProxyConfig")]
        public Output<Outputs.KubernetesClusterHttpProxyConfig?> HttpProxyConfig { get; private set; } = null!;

        /// <summary>
        /// An `identity` block as defined below. One of either `identity` or `service_principal` must be specified.
        /// 
        /// !&gt; **Note:** A migration scenario from `service_principal` to `identity` is supported. When upgrading `service_principal` to `identity`, your cluster's control plane and addon pods will switch to use managed identity, but the kubelets will keep using your configured `service_principal` until you upgrade your Node Pool.
        /// </summary>
        [Output("identity")]
        public Output<Outputs.KubernetesClusterIdentity?> Identity { get; private set; } = null!;

        /// <summary>
        /// Specifies whether Image Cleaner is enabled.
        /// </summary>
        [Output("imageCleanerEnabled")]
        public Output<bool?> ImageCleanerEnabled { get; private set; } = null!;

        /// <summary>
        /// Specifies the interval in hours when images should be cleaned up. Defaults to `48`.
        /// 
        /// &gt; **Note:** This requires that the Preview Feature `Microsoft.ContainerService/EnableImageCleanerPreview` is enabled and the Resource Provider is re-registered, see [the documentation](https://learn.microsoft.com/en-us/azure/aks/image-cleaner) for more information.
        /// </summary>
        [Output("imageCleanerIntervalHours")]
        public Output<int?> ImageCleanerIntervalHours { get; private set; } = null!;

        /// <summary>
        /// A `ingress_application_gateway` block as defined below.
        /// 
        /// &gt; **Note:** Since the Application Gateway is deployed inside a Virtual Network, users (and Service Principals) that are operating the Application Gateway must have the `Microsoft.Network/virtualNetworks/subnets/join/action` permission on the Virtual Network or Subnet. For more details, please visit [Virtual Network Permission](https://learn.microsoft.com/en-us/azure/application-gateway/configuration-infrastructure#virtual-network-permission).
        /// </summary>
        [Output("ingressApplicationGateway")]
        public Output<Outputs.KubernetesClusterIngressApplicationGateway?> IngressApplicationGateway { get; private set; } = null!;

        /// <summary>
        /// A `key_management_service` block as defined below. For more details, please visit [Key Management Service (KMS) etcd encryption to an AKS cluster](https://learn.microsoft.com/en-us/azure/aks/use-kms-etcd-encryption).
        /// </summary>
        [Output("keyManagementService")]
        public Output<Outputs.KubernetesClusterKeyManagementService?> KeyManagementService { get; private set; } = null!;

        /// <summary>
        /// A `key_vault_secrets_provider` block as defined below. For more details, please visit [Azure Keyvault Secrets Provider for AKS](https://docs.microsoft.com/azure/aks/csi-secrets-store-driver).
        /// </summary>
        [Output("keyVaultSecretsProvider")]
        public Output<Outputs.KubernetesClusterKeyVaultSecretsProvider?> KeyVaultSecretsProvider { get; private set; } = null!;

        /// <summary>
        /// Raw Kubernetes config for the admin account to be used by [kubectl](https://kubernetes.io/docs/reference/kubectl/overview/) and other compatible tools. This is only available when Role Based Access Control with Azure Active Directory is enabled and local accounts enabled.
        /// </summary>
        [Output("kubeAdminConfigRaw")]
        public Output<string> KubeAdminConfigRaw { get; private set; } = null!;

        /// <summary>
        /// A `kube_admin_config` block as defined below. This is only available when Role Based Access Control with Azure Active Directory is enabled and local accounts enabled.
        /// </summary>
        [Output("kubeAdminConfigs")]
        public Output<ImmutableArray<Outputs.KubernetesClusterKubeAdminConfig>> KubeAdminConfigs { get; private set; } = null!;

        /// <summary>
        /// Raw Kubernetes config to be used by [kubectl](https://kubernetes.io/docs/reference/kubectl/overview/) and other compatible tools.
        /// </summary>
        [Output("kubeConfigRaw")]
        public Output<string> KubeConfigRaw { get; private set; } = null!;

        /// <summary>
        /// A `kube_config` block as defined below.
        /// </summary>
        [Output("kubeConfigs")]
        public Output<ImmutableArray<Outputs.KubernetesClusterKubeConfig>> KubeConfigs { get; private set; } = null!;

        /// <summary>
        /// A `kubelet_identity` block as defined below.
        /// </summary>
        [Output("kubeletIdentity")]
        public Output<Outputs.KubernetesClusterKubeletIdentity> KubeletIdentity { get; private set; } = null!;

        /// <summary>
        /// Version of Kubernetes specified when creating the AKS managed cluster. If not specified, the latest recommended version will be used at provisioning time (but won't auto-upgrade). AKS does not require an exact patch version to be specified, minor version aliases such as `1.22` are also supported. - The minor version's latest GA patch is automatically chosen in that case. More details can be found in [the documentation](https://docs.microsoft.com/en-us/azure/aks/supported-kubernetes-versions?tabs=azure-cli#alias-minor-version).
        /// 
        /// &gt; **Note:** Upgrading your cluster may take up to 10 minutes per node.
        /// </summary>
        [Output("kubernetesVersion")]
        public Output<string> KubernetesVersion { get; private set; } = null!;

        /// <summary>
        /// A `linux_profile` block as defined below.
        /// </summary>
        [Output("linuxProfile")]
        public Output<Outputs.KubernetesClusterLinuxProfile?> LinuxProfile { get; private set; } = null!;

        /// <summary>
        /// If `true` local accounts will be disabled. See [the documentation](https://docs.microsoft.com/azure/aks/managed-aad#disable-local-accounts) for more information.
        /// 
        /// &gt; **Note:** If `local_account_disabled` is set to `true`, it is required to enable Kubernetes RBAC and AKS-managed Azure AD integration. See [the documentation](https://docs.microsoft.com/azure/aks/managed-aad#azure-ad-authentication-overview) for more information.
        /// </summary>
        [Output("localAccountDisabled")]
        public Output<bool?> LocalAccountDisabled { get; private set; } = null!;

        /// <summary>
        /// The location where the Managed Kubernetes Cluster should be created. Changing this forces a new resource to be created.
        /// </summary>
        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// A `maintenance_window` block as defined below.
        /// </summary>
        [Output("maintenanceWindow")]
        public Output<Outputs.KubernetesClusterMaintenanceWindow?> MaintenanceWindow { get; private set; } = null!;

        /// <summary>
        /// A `maintenance_window_auto_upgrade` block as defined below.
        /// </summary>
        [Output("maintenanceWindowAutoUpgrade")]
        public Output<Outputs.KubernetesClusterMaintenanceWindowAutoUpgrade?> MaintenanceWindowAutoUpgrade { get; private set; } = null!;

        /// <summary>
        /// A `maintenance_window_node_os` block as defined below.
        /// </summary>
        [Output("maintenanceWindowNodeOs")]
        public Output<Outputs.KubernetesClusterMaintenanceWindowNodeOs?> MaintenanceWindowNodeOs { get; private set; } = null!;

        /// <summary>
        /// A `microsoft_defender` block as defined below.
        /// </summary>
        [Output("microsoftDefender")]
        public Output<Outputs.KubernetesClusterMicrosoftDefender?> MicrosoftDefender { get; private set; } = null!;

        /// <summary>
        /// Specifies a Prometheus add-on profile for the Kubernetes Cluster. A `monitor_metrics` block as defined below.
        /// </summary>
        [Output("monitorMetrics")]
        public Output<Outputs.KubernetesClusterMonitorMetrics?> MonitorMetrics { get; private set; } = null!;

        /// <summary>
        /// The name of the Managed Kubernetes Cluster to create. Changing this forces a new resource to be created.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// A `network_profile` block as defined below. Changing this forces a new resource to be created.
        /// 
        /// &gt; **Note:** If `network_profile` is not defined, `kubenet` profile will be used by default.
        /// </summary>
        [Output("networkProfile")]
        public Output<Outputs.KubernetesClusterNetworkProfile> NetworkProfile { get; private set; } = null!;

        /// <summary>
        /// The upgrade channel for this Kubernetes Cluster Nodes' OS Image. Possible values are `Unmanaged`, `SecurityPatch`, `NodeImage` and `None`.
        /// 
        /// &gt; **Note:** `node_os_channel_upgrade` must be set to `NodeImage` if `automatic_channel_upgrade` has been set to `node-image`
        /// 
        /// &gt; **Note:** This requires that the Preview Feature `Microsoft.ContainerService/NodeOsUpgradeChannelPreview` is enabled and the Resource Provider is re-registered, see [the documentation](https://learn.microsoft.com/en-us/azure/aks/auto-upgrade-node-image#register-the-nodeosupgradechannelpreview-feature-flag) for more information.
        /// </summary>
        [Output("nodeOsChannelUpgrade")]
        public Output<string?> NodeOsChannelUpgrade { get; private set; } = null!;

        /// <summary>
        /// The name of the Resource Group where the Kubernetes Nodes should exist. Changing this forces a new resource to be created.
        /// 
        /// &gt; **Note:** Azure requires that a new, non-existent Resource Group is used, as otherwise, the provisioning of the Kubernetes Service will fail.
        /// </summary>
        [Output("nodeResourceGroup")]
        public Output<string> NodeResourceGroup { get; private set; } = null!;

        /// <summary>
        /// The ID of the Resource Group containing the resources for this Managed Kubernetes Cluster.
        /// </summary>
        [Output("nodeResourceGroupId")]
        public Output<string> NodeResourceGroupId { get; private set; } = null!;

        /// <summary>
        /// Enable or Disable the [OIDC issuer URL](https://learn.microsoft.com/en-gb/azure/aks/use-oidc-issuer)
        /// </summary>
        [Output("oidcIssuerEnabled")]
        public Output<bool?> OidcIssuerEnabled { get; private set; } = null!;

        /// <summary>
        /// The OIDC issuer URL that is associated with the cluster.
        /// </summary>
        [Output("oidcIssuerUrl")]
        public Output<string> OidcIssuerUrl { get; private set; } = null!;

        /// <summary>
        /// A `oms_agent` block as defined below.
        /// </summary>
        [Output("omsAgent")]
        public Output<Outputs.KubernetesClusterOmsAgent?> OmsAgent { get; private set; } = null!;

        /// <summary>
        /// Is Open Service Mesh enabled? For more details, please visit [Open Service Mesh for AKS](https://docs.microsoft.com/azure/aks/open-service-mesh-about).
        /// </summary>
        [Output("openServiceMeshEnabled")]
        public Output<bool?> OpenServiceMeshEnabled { get; private set; } = null!;

        /// <summary>
        /// The FQDN for the Azure Portal resources when private link has been enabled, which is only resolvable inside the Virtual Network used by the Kubernetes Cluster.
        /// </summary>
        [Output("portalFqdn")]
        public Output<string> PortalFqdn { get; private set; } = null!;

        /// <summary>
        /// Should this Kubernetes Cluster have its API server only exposed on internal IP addresses? This provides a Private IP Address for the Kubernetes API on the Virtual Network where the Kubernetes Cluster is located. Defaults to `false`. Changing this forces a new resource to be created.
        /// </summary>
        [Output("privateClusterEnabled")]
        public Output<bool?> PrivateClusterEnabled { get; private set; } = null!;

        /// <summary>
        /// Specifies whether a Public FQDN for this Private Cluster should be added. Defaults to `false`.
        /// 
        /// &gt; **Note:** If you use BYO DNS Zone, the AKS cluster should either use a User Assigned Identity or a service principal (which is deprecated) with the `Private DNS Zone Contributor` role and access to this Private DNS Zone. If `UserAssigned` identity is used - to prevent improper resource order destruction - the cluster should depend on the role assignment, like in this example:
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Azure = Pulumi.Azure;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleResourceGroup = new Azure.Core.ResourceGroup("exampleResourceGroup", new()
        ///     {
        ///         Location = "West Europe",
        ///     });
        /// 
        ///     var exampleZone = new Azure.PrivateDns.Zone("exampleZone", new()
        ///     {
        ///         ResourceGroupName = exampleResourceGroup.Name,
        ///     });
        /// 
        ///     var exampleUserAssignedIdentity = new Azure.Authorization.UserAssignedIdentity("exampleUserAssignedIdentity", new()
        ///     {
        ///         ResourceGroupName = exampleResourceGroup.Name,
        ///         Location = exampleResourceGroup.Location,
        ///     });
        /// 
        ///     var exampleAssignment = new Azure.Authorization.Assignment("exampleAssignment", new()
        ///     {
        ///         Scope = exampleZone.Id,
        ///         RoleDefinitionName = "Private DNS Zone Contributor",
        ///         PrincipalId = exampleUserAssignedIdentity.PrincipalId,
        ///     });
        /// 
        ///     var exampleKubernetesCluster = new Azure.ContainerService.KubernetesCluster("exampleKubernetesCluster", new()
        ///     {
        ///         Location = exampleResourceGroup.Location,
        ///         ResourceGroupName = exampleResourceGroup.Name,
        ///         DnsPrefix = "aksexamplednsprefix1",
        ///         PrivateClusterEnabled = true,
        ///         PrivateDnsZoneId = exampleZone.Id,
        ///     }, new CustomResourceOptions
        ///     {
        ///         DependsOn = new[]
        ///         {
        ///             exampleAssignment,
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        [Output("privateClusterPublicFqdnEnabled")]
        public Output<bool?> PrivateClusterPublicFqdnEnabled { get; private set; } = null!;

        /// <summary>
        /// Either the ID of Private DNS Zone which should be delegated to this Cluster, `System` to have AKS manage this or `None`. In case of `None` you will need to bring your own DNS server and set up resolving, otherwise, the cluster will have issues after provisioning. Changing this forces a new resource to be created.
        /// </summary>
        [Output("privateDnsZoneId")]
        public Output<string> PrivateDnsZoneId { get; private set; } = null!;

        /// <summary>
        /// The FQDN for the Kubernetes Cluster when private link has been enabled, which is only resolvable inside the Virtual Network used by the Kubernetes Cluster.
        /// </summary>
        [Output("privateFqdn")]
        public Output<string> PrivateFqdn { get; private set; } = null!;

        /// <summary>
        /// Whether public network access is allowed for this Kubernetes Cluster. Defaults to `true`.
        /// 
        /// !&gt; **Note:** `public_network_access_enabled` is currently not functional and is not passed to the Azure API. For further information please see this [issue](https://github.com/Azure/AKS/issues/3690). For controlling the public and private exposure of a cluster please see the properties `private_cluster_enabled` and `api_server_access_profile`.
        /// </summary>
        [Output("publicNetworkAccessEnabled")]
        public Output<bool?> PublicNetworkAccessEnabled { get; private set; } = null!;

        /// <summary>
        /// Specifies the Resource Group where the Managed Kubernetes Cluster should exist. Changing this forces a new resource to be created.
        /// </summary>
        [Output("resourceGroupName")]
        public Output<string> ResourceGroupName { get; private set; } = null!;

        /// <summary>
        /// Whether Role Based Access Control for the Kubernetes Cluster should be enabled. Defaults to `true`. Changing this forces a new resource to be created.
        /// </summary>
        [Output("roleBasedAccessControlEnabled")]
        public Output<bool?> RoleBasedAccessControlEnabled { get; private set; } = null!;

        /// <summary>
        /// Whether to enable run command for the cluster or not. Defaults to `true`.
        /// </summary>
        [Output("runCommandEnabled")]
        public Output<bool?> RunCommandEnabled { get; private set; } = null!;

        /// <summary>
        /// A `service_mesh_profile` block as defined below.
        /// 
        /// &gt; **Note:** This requires that the Preview Feature `Microsoft.ContainerService/AzureServiceMeshPreview` is enabled and the Resource Provider is re-registered, see [the documentation](https://learn.microsoft.com/en-us/azure/aks/istio-deploy-addon#register-the-azureservicemeshpreview-feature-flag) for more information.
        /// </summary>
        [Output("serviceMeshProfile")]
        public Output<Outputs.KubernetesClusterServiceMeshProfile?> ServiceMeshProfile { get; private set; } = null!;

        /// <summary>
        /// A `service_principal` block as documented below. One of either `identity` or `service_principal` must be specified.
        /// 
        /// !&gt; **Note:** A migration scenario from `service_principal` to `identity` is supported. When upgrading `service_principal` to `identity`, your cluster's control plane and addon pods will switch to use managed identity, but the kubelets will keep using your configured `service_principal` until you upgrade your Node Pool.
        /// </summary>
        [Output("servicePrincipal")]
        public Output<Outputs.KubernetesClusterServicePrincipal?> ServicePrincipal { get; private set; } = null!;

        /// <summary>
        /// The SKU Tier that should be used for this Kubernetes Cluster. Possible values are `Free`, and `Standard` (which includes the Uptime SLA). Defaults to `Free`.
        /// 
        /// &gt; **Note:** Whilst the AKS API previously supported the `Paid` SKU - the AKS API introduced a breaking change in API Version `2023-02-01` (used in v3.51.0 and later) where the value `Paid` must now be set to `Standard`.
        /// </summary>
        [Output("skuTier")]
        public Output<string?> SkuTier { get; private set; } = null!;

        /// <summary>
        /// A `storage_profile` block as defined below.
        /// </summary>
        [Output("storageProfile")]
        public Output<Outputs.KubernetesClusterStorageProfile?> StorageProfile { get; private set; } = null!;

        /// <summary>
        /// A mapping of tags to assign to the resource.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// A `web_app_routing` block as defined below.
        /// </summary>
        [Output("webAppRouting")]
        public Output<Outputs.KubernetesClusterWebAppRouting?> WebAppRouting { get; private set; } = null!;

        /// <summary>
        /// A `windows_profile` block as defined below.
        /// </summary>
        [Output("windowsProfile")]
        public Output<Outputs.KubernetesClusterWindowsProfile> WindowsProfile { get; private set; } = null!;

        /// <summary>
        /// A `workload_autoscaler_profile` block defined below.
        /// </summary>
        [Output("workloadAutoscalerProfile")]
        public Output<Outputs.KubernetesClusterWorkloadAutoscalerProfile?> WorkloadAutoscalerProfile { get; private set; } = null!;

        /// <summary>
        /// Specifies whether Azure AD Workload Identity should be enabled for the Cluster. Defaults to `false`.
        /// 
        /// &gt; **Note:** To enable Azure AD Workload Identity `oidc_issuer_enabled` must be set to `true`.
        /// 
        /// &gt; **Note:** Enabling this option will allocate Workload Identity resources to the `kube-system` namespace in Kubernetes. If you wish to customize the deployment of Workload Identity, you can refer to [the documentation on Azure AD Workload Identity.](https://azure.github.io/azure-workload-identity/docs/installation/mutating-admission-webhook.html) The documentation provides guidance on how to install the mutating admission webhook, which allows for the customization of Workload Identity deployment.
        /// </summary>
        [Output("workloadIdentityEnabled")]
        public Output<bool?> WorkloadIdentityEnabled { get; private set; } = null!;


        /// <summary>
        /// Create a KubernetesCluster resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public KubernetesCluster(string name, KubernetesClusterArgs args, CustomResourceOptions? options = null)
            : base("azure:containerservice/kubernetesCluster:KubernetesCluster", name, args ?? new KubernetesClusterArgs(), MakeResourceOptions(options, ""))
        {
        }

        private KubernetesCluster(string name, Input<string> id, KubernetesClusterState? state = null, CustomResourceOptions? options = null)
            : base("azure:containerservice/kubernetesCluster:KubernetesCluster", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                AdditionalSecretOutputs =
                {
                    "kubeAdminConfigRaw",
                    "kubeAdminConfigs",
                    "kubeConfigRaw",
                    "kubeConfigs",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing KubernetesCluster resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static KubernetesCluster Get(string name, Input<string> id, KubernetesClusterState? state = null, CustomResourceOptions? options = null)
        {
            return new KubernetesCluster(name, id, state, options);
        }
    }

    public sealed class KubernetesClusterArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// A `aci_connector_linux` block as defined below. For more details, please visit [Create and configure an AKS cluster to use virtual nodes](https://docs.microsoft.com/azure/aks/virtual-nodes-portal).
        /// </summary>
        [Input("aciConnectorLinux")]
        public Input<Inputs.KubernetesClusterAciConnectorLinuxArgs>? AciConnectorLinux { get; set; }

        /// <summary>
        /// An `api_server_access_profile` block as defined below.
        /// </summary>
        [Input("apiServerAccessProfile")]
        public Input<Inputs.KubernetesClusterApiServerAccessProfileArgs>? ApiServerAccessProfile { get; set; }

        [Input("apiServerAuthorizedIpRanges")]
        private InputList<string>? _apiServerAuthorizedIpRanges;
        [Obsolete(@"This property has been renamed to `authorized_ip_ranges` within the `api_server_access_profile` block and will be removed in v4.0 of the provider")]
        public InputList<string> ApiServerAuthorizedIpRanges
        {
            get => _apiServerAuthorizedIpRanges ?? (_apiServerAuthorizedIpRanges = new InputList<string>());
            set => _apiServerAuthorizedIpRanges = value;
        }

        /// <summary>
        /// A `auto_scaler_profile` block as defined below.
        /// </summary>
        [Input("autoScalerProfile")]
        public Input<Inputs.KubernetesClusterAutoScalerProfileArgs>? AutoScalerProfile { get; set; }

        /// <summary>
        /// The upgrade channel for this Kubernetes Cluster. Possible values are `patch`, `rapid`, `node-image` and `stable`. Omitting this field sets this value to `none`.
        /// 
        /// !&gt; **Note:** Cluster Auto-Upgrade will update the Kubernetes Cluster (and its Node Pools) to the latest GA version of Kubernetes automatically - please [see the Azure documentation for more information](https://docs.microsoft.com/azure/aks/upgrade-cluster#set-auto-upgrade-channel).
        /// 
        /// &gt; **Note:** Cluster Auto-Upgrade only updates to GA versions of Kubernetes and will not update to Preview versions.
        /// </summary>
        [Input("automaticChannelUpgrade")]
        public Input<string>? AutomaticChannelUpgrade { get; set; }

        /// <summary>
        /// A `azure_active_directory_role_based_access_control` block as defined below.
        /// 
        /// &gt; **Note:** This requires that the Preview Feature `Microsoft.ContainerService/AKS-PrometheusAddonPreview` is enabled, see [the documentation](https://learn.microsoft.com/en-us/azure/azure-monitor/essentials/prometheus-metrics-enable?tabs=azure-portal) for more information.
        /// </summary>
        [Input("azureActiveDirectoryRoleBasedAccessControl")]
        public Input<Inputs.KubernetesClusterAzureActiveDirectoryRoleBasedAccessControlArgs>? AzureActiveDirectoryRoleBasedAccessControl { get; set; }

        /// <summary>
        /// Should the Azure Policy Add-On be enabled? For more details please visit [Understand Azure Policy for Azure Kubernetes Service](https://docs.microsoft.com/en-ie/azure/governance/policy/concepts/rego-for-aks)
        /// </summary>
        [Input("azurePolicyEnabled")]
        public Input<bool>? AzurePolicyEnabled { get; set; }

        /// <summary>
        /// A `confidential_computing` block as defined below. For more details please [the documentation](https://learn.microsoft.com/en-us/azure/confidential-computing/confidential-nodes-aks-overview)
        /// </summary>
        [Input("confidentialComputing")]
        public Input<Inputs.KubernetesClusterConfidentialComputingArgs>? ConfidentialComputing { get; set; }

        [Input("customCaTrustCertificatesBase64s")]
        private InputList<string>? _customCaTrustCertificatesBase64s;

        /// <summary>
        /// A list of up to 10 base64 encoded CAs that will be added to the trust store on nodes with the `custom_ca_trust_enabled` feature enabled.
        /// 
        /// &gt; **Note:** Removing `custom_ca_trust_certificates_base64` after it has been set forces a new resource to be created.
        /// </summary>
        public InputList<string> CustomCaTrustCertificatesBase64s
        {
            get => _customCaTrustCertificatesBase64s ?? (_customCaTrustCertificatesBase64s = new InputList<string>());
            set => _customCaTrustCertificatesBase64s = value;
        }

        /// <summary>
        /// A `default_node_pool` block as defined below.
        /// </summary>
        [Input("defaultNodePool", required: true)]
        public Input<Inputs.KubernetesClusterDefaultNodePoolArgs> DefaultNodePool { get; set; } = null!;

        /// <summary>
        /// The ID of the Disk Encryption Set which should be used for the Nodes and Volumes. More information [can be found in the documentation](https://docs.microsoft.com/azure/aks/azure-disk-customer-managed-keys). Changing this forces a new resource to be created.
        /// </summary>
        [Input("diskEncryptionSetId")]
        public Input<string>? DiskEncryptionSetId { get; set; }

        /// <summary>
        /// DNS prefix specified when creating the managed cluster. Possible values must begin and end with a letter or number, contain only letters, numbers, and hyphens and be between 1 and 54 characters in length. Changing this forces a new resource to be created.
        /// </summary>
        [Input("dnsPrefix")]
        public Input<string>? DnsPrefix { get; set; }

        /// <summary>
        /// Specifies the DNS prefix to use with private clusters. Changing this forces a new resource to be created.
        /// 
        /// &gt; **Note:** You must define either a `dns_prefix` or a `dns_prefix_private_cluster` field.
        /// 
        /// In addition, one of either `identity` or `service_principal` blocks must be specified.
        /// </summary>
        [Input("dnsPrefixPrivateCluster")]
        public Input<string>? DnsPrefixPrivateCluster { get; set; }

        /// <summary>
        /// Specifies the Edge Zone within the Azure Region where this Managed Kubernetes Cluster should exist. Changing this forces a new resource to be created.
        /// </summary>
        [Input("edgeZone")]
        public Input<string>? EdgeZone { get; set; }

        [Input("enablePodSecurityPolicy")]
        public Input<bool>? EnablePodSecurityPolicy { get; set; }

        /// <summary>
        /// Should HTTP Application Routing be enabled?
        /// 
        /// &gt; **Note:** At this time HTTP Application Routing is not supported in Azure China or Azure US Government.
        /// </summary>
        [Input("httpApplicationRoutingEnabled")]
        public Input<bool>? HttpApplicationRoutingEnabled { get; set; }

        /// <summary>
        /// A `http_proxy_config` block as defined below.
        /// </summary>
        [Input("httpProxyConfig")]
        public Input<Inputs.KubernetesClusterHttpProxyConfigArgs>? HttpProxyConfig { get; set; }

        /// <summary>
        /// An `identity` block as defined below. One of either `identity` or `service_principal` must be specified.
        /// 
        /// !&gt; **Note:** A migration scenario from `service_principal` to `identity` is supported. When upgrading `service_principal` to `identity`, your cluster's control plane and addon pods will switch to use managed identity, but the kubelets will keep using your configured `service_principal` until you upgrade your Node Pool.
        /// </summary>
        [Input("identity")]
        public Input<Inputs.KubernetesClusterIdentityArgs>? Identity { get; set; }

        /// <summary>
        /// Specifies whether Image Cleaner is enabled.
        /// </summary>
        [Input("imageCleanerEnabled")]
        public Input<bool>? ImageCleanerEnabled { get; set; }

        /// <summary>
        /// Specifies the interval in hours when images should be cleaned up. Defaults to `48`.
        /// 
        /// &gt; **Note:** This requires that the Preview Feature `Microsoft.ContainerService/EnableImageCleanerPreview` is enabled and the Resource Provider is re-registered, see [the documentation](https://learn.microsoft.com/en-us/azure/aks/image-cleaner) for more information.
        /// </summary>
        [Input("imageCleanerIntervalHours")]
        public Input<int>? ImageCleanerIntervalHours { get; set; }

        /// <summary>
        /// A `ingress_application_gateway` block as defined below.
        /// 
        /// &gt; **Note:** Since the Application Gateway is deployed inside a Virtual Network, users (and Service Principals) that are operating the Application Gateway must have the `Microsoft.Network/virtualNetworks/subnets/join/action` permission on the Virtual Network or Subnet. For more details, please visit [Virtual Network Permission](https://learn.microsoft.com/en-us/azure/application-gateway/configuration-infrastructure#virtual-network-permission).
        /// </summary>
        [Input("ingressApplicationGateway")]
        public Input<Inputs.KubernetesClusterIngressApplicationGatewayArgs>? IngressApplicationGateway { get; set; }

        /// <summary>
        /// A `key_management_service` block as defined below. For more details, please visit [Key Management Service (KMS) etcd encryption to an AKS cluster](https://learn.microsoft.com/en-us/azure/aks/use-kms-etcd-encryption).
        /// </summary>
        [Input("keyManagementService")]
        public Input<Inputs.KubernetesClusterKeyManagementServiceArgs>? KeyManagementService { get; set; }

        /// <summary>
        /// A `key_vault_secrets_provider` block as defined below. For more details, please visit [Azure Keyvault Secrets Provider for AKS](https://docs.microsoft.com/azure/aks/csi-secrets-store-driver).
        /// </summary>
        [Input("keyVaultSecretsProvider")]
        public Input<Inputs.KubernetesClusterKeyVaultSecretsProviderArgs>? KeyVaultSecretsProvider { get; set; }

        /// <summary>
        /// A `kubelet_identity` block as defined below.
        /// </summary>
        [Input("kubeletIdentity")]
        public Input<Inputs.KubernetesClusterKubeletIdentityArgs>? KubeletIdentity { get; set; }

        /// <summary>
        /// Version of Kubernetes specified when creating the AKS managed cluster. If not specified, the latest recommended version will be used at provisioning time (but won't auto-upgrade). AKS does not require an exact patch version to be specified, minor version aliases such as `1.22` are also supported. - The minor version's latest GA patch is automatically chosen in that case. More details can be found in [the documentation](https://docs.microsoft.com/en-us/azure/aks/supported-kubernetes-versions?tabs=azure-cli#alias-minor-version).
        /// 
        /// &gt; **Note:** Upgrading your cluster may take up to 10 minutes per node.
        /// </summary>
        [Input("kubernetesVersion")]
        public Input<string>? KubernetesVersion { get; set; }

        /// <summary>
        /// A `linux_profile` block as defined below.
        /// </summary>
        [Input("linuxProfile")]
        public Input<Inputs.KubernetesClusterLinuxProfileArgs>? LinuxProfile { get; set; }

        /// <summary>
        /// If `true` local accounts will be disabled. See [the documentation](https://docs.microsoft.com/azure/aks/managed-aad#disable-local-accounts) for more information.
        /// 
        /// &gt; **Note:** If `local_account_disabled` is set to `true`, it is required to enable Kubernetes RBAC and AKS-managed Azure AD integration. See [the documentation](https://docs.microsoft.com/azure/aks/managed-aad#azure-ad-authentication-overview) for more information.
        /// </summary>
        [Input("localAccountDisabled")]
        public Input<bool>? LocalAccountDisabled { get; set; }

        /// <summary>
        /// The location where the Managed Kubernetes Cluster should be created. Changing this forces a new resource to be created.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// A `maintenance_window` block as defined below.
        /// </summary>
        [Input("maintenanceWindow")]
        public Input<Inputs.KubernetesClusterMaintenanceWindowArgs>? MaintenanceWindow { get; set; }

        /// <summary>
        /// A `maintenance_window_auto_upgrade` block as defined below.
        /// </summary>
        [Input("maintenanceWindowAutoUpgrade")]
        public Input<Inputs.KubernetesClusterMaintenanceWindowAutoUpgradeArgs>? MaintenanceWindowAutoUpgrade { get; set; }

        /// <summary>
        /// A `maintenance_window_node_os` block as defined below.
        /// </summary>
        [Input("maintenanceWindowNodeOs")]
        public Input<Inputs.KubernetesClusterMaintenanceWindowNodeOsArgs>? MaintenanceWindowNodeOs { get; set; }

        /// <summary>
        /// A `microsoft_defender` block as defined below.
        /// </summary>
        [Input("microsoftDefender")]
        public Input<Inputs.KubernetesClusterMicrosoftDefenderArgs>? MicrosoftDefender { get; set; }

        /// <summary>
        /// Specifies a Prometheus add-on profile for the Kubernetes Cluster. A `monitor_metrics` block as defined below.
        /// </summary>
        [Input("monitorMetrics")]
        public Input<Inputs.KubernetesClusterMonitorMetricsArgs>? MonitorMetrics { get; set; }

        /// <summary>
        /// The name of the Managed Kubernetes Cluster to create. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// A `network_profile` block as defined below. Changing this forces a new resource to be created.
        /// 
        /// &gt; **Note:** If `network_profile` is not defined, `kubenet` profile will be used by default.
        /// </summary>
        [Input("networkProfile")]
        public Input<Inputs.KubernetesClusterNetworkProfileArgs>? NetworkProfile { get; set; }

        /// <summary>
        /// The upgrade channel for this Kubernetes Cluster Nodes' OS Image. Possible values are `Unmanaged`, `SecurityPatch`, `NodeImage` and `None`.
        /// 
        /// &gt; **Note:** `node_os_channel_upgrade` must be set to `NodeImage` if `automatic_channel_upgrade` has been set to `node-image`
        /// 
        /// &gt; **Note:** This requires that the Preview Feature `Microsoft.ContainerService/NodeOsUpgradeChannelPreview` is enabled and the Resource Provider is re-registered, see [the documentation](https://learn.microsoft.com/en-us/azure/aks/auto-upgrade-node-image#register-the-nodeosupgradechannelpreview-feature-flag) for more information.
        /// </summary>
        [Input("nodeOsChannelUpgrade")]
        public Input<string>? NodeOsChannelUpgrade { get; set; }

        /// <summary>
        /// The name of the Resource Group where the Kubernetes Nodes should exist. Changing this forces a new resource to be created.
        /// 
        /// &gt; **Note:** Azure requires that a new, non-existent Resource Group is used, as otherwise, the provisioning of the Kubernetes Service will fail.
        /// </summary>
        [Input("nodeResourceGroup")]
        public Input<string>? NodeResourceGroup { get; set; }

        /// <summary>
        /// Enable or Disable the [OIDC issuer URL](https://learn.microsoft.com/en-gb/azure/aks/use-oidc-issuer)
        /// </summary>
        [Input("oidcIssuerEnabled")]
        public Input<bool>? OidcIssuerEnabled { get; set; }

        /// <summary>
        /// A `oms_agent` block as defined below.
        /// </summary>
        [Input("omsAgent")]
        public Input<Inputs.KubernetesClusterOmsAgentArgs>? OmsAgent { get; set; }

        /// <summary>
        /// Is Open Service Mesh enabled? For more details, please visit [Open Service Mesh for AKS](https://docs.microsoft.com/azure/aks/open-service-mesh-about).
        /// </summary>
        [Input("openServiceMeshEnabled")]
        public Input<bool>? OpenServiceMeshEnabled { get; set; }

        /// <summary>
        /// Should this Kubernetes Cluster have its API server only exposed on internal IP addresses? This provides a Private IP Address for the Kubernetes API on the Virtual Network where the Kubernetes Cluster is located. Defaults to `false`. Changing this forces a new resource to be created.
        /// </summary>
        [Input("privateClusterEnabled")]
        public Input<bool>? PrivateClusterEnabled { get; set; }

        /// <summary>
        /// Specifies whether a Public FQDN for this Private Cluster should be added. Defaults to `false`.
        /// 
        /// &gt; **Note:** If you use BYO DNS Zone, the AKS cluster should either use a User Assigned Identity or a service principal (which is deprecated) with the `Private DNS Zone Contributor` role and access to this Private DNS Zone. If `UserAssigned` identity is used - to prevent improper resource order destruction - the cluster should depend on the role assignment, like in this example:
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Azure = Pulumi.Azure;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleResourceGroup = new Azure.Core.ResourceGroup("exampleResourceGroup", new()
        ///     {
        ///         Location = "West Europe",
        ///     });
        /// 
        ///     var exampleZone = new Azure.PrivateDns.Zone("exampleZone", new()
        ///     {
        ///         ResourceGroupName = exampleResourceGroup.Name,
        ///     });
        /// 
        ///     var exampleUserAssignedIdentity = new Azure.Authorization.UserAssignedIdentity("exampleUserAssignedIdentity", new()
        ///     {
        ///         ResourceGroupName = exampleResourceGroup.Name,
        ///         Location = exampleResourceGroup.Location,
        ///     });
        /// 
        ///     var exampleAssignment = new Azure.Authorization.Assignment("exampleAssignment", new()
        ///     {
        ///         Scope = exampleZone.Id,
        ///         RoleDefinitionName = "Private DNS Zone Contributor",
        ///         PrincipalId = exampleUserAssignedIdentity.PrincipalId,
        ///     });
        /// 
        ///     var exampleKubernetesCluster = new Azure.ContainerService.KubernetesCluster("exampleKubernetesCluster", new()
        ///     {
        ///         Location = exampleResourceGroup.Location,
        ///         ResourceGroupName = exampleResourceGroup.Name,
        ///         DnsPrefix = "aksexamplednsprefix1",
        ///         PrivateClusterEnabled = true,
        ///         PrivateDnsZoneId = exampleZone.Id,
        ///     }, new CustomResourceOptions
        ///     {
        ///         DependsOn = new[]
        ///         {
        ///             exampleAssignment,
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        [Input("privateClusterPublicFqdnEnabled")]
        public Input<bool>? PrivateClusterPublicFqdnEnabled { get; set; }

        /// <summary>
        /// Either the ID of Private DNS Zone which should be delegated to this Cluster, `System` to have AKS manage this or `None`. In case of `None` you will need to bring your own DNS server and set up resolving, otherwise, the cluster will have issues after provisioning. Changing this forces a new resource to be created.
        /// </summary>
        [Input("privateDnsZoneId")]
        public Input<string>? PrivateDnsZoneId { get; set; }

        /// <summary>
        /// Whether public network access is allowed for this Kubernetes Cluster. Defaults to `true`.
        /// 
        /// !&gt; **Note:** `public_network_access_enabled` is currently not functional and is not passed to the Azure API. For further information please see this [issue](https://github.com/Azure/AKS/issues/3690). For controlling the public and private exposure of a cluster please see the properties `private_cluster_enabled` and `api_server_access_profile`.
        /// </summary>
        [Input("publicNetworkAccessEnabled")]
        public Input<bool>? PublicNetworkAccessEnabled { get; set; }

        /// <summary>
        /// Specifies the Resource Group where the Managed Kubernetes Cluster should exist. Changing this forces a new resource to be created.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// Whether Role Based Access Control for the Kubernetes Cluster should be enabled. Defaults to `true`. Changing this forces a new resource to be created.
        /// </summary>
        [Input("roleBasedAccessControlEnabled")]
        public Input<bool>? RoleBasedAccessControlEnabled { get; set; }

        /// <summary>
        /// Whether to enable run command for the cluster or not. Defaults to `true`.
        /// </summary>
        [Input("runCommandEnabled")]
        public Input<bool>? RunCommandEnabled { get; set; }

        /// <summary>
        /// A `service_mesh_profile` block as defined below.
        /// 
        /// &gt; **Note:** This requires that the Preview Feature `Microsoft.ContainerService/AzureServiceMeshPreview` is enabled and the Resource Provider is re-registered, see [the documentation](https://learn.microsoft.com/en-us/azure/aks/istio-deploy-addon#register-the-azureservicemeshpreview-feature-flag) for more information.
        /// </summary>
        [Input("serviceMeshProfile")]
        public Input<Inputs.KubernetesClusterServiceMeshProfileArgs>? ServiceMeshProfile { get; set; }

        /// <summary>
        /// A `service_principal` block as documented below. One of either `identity` or `service_principal` must be specified.
        /// 
        /// !&gt; **Note:** A migration scenario from `service_principal` to `identity` is supported. When upgrading `service_principal` to `identity`, your cluster's control plane and addon pods will switch to use managed identity, but the kubelets will keep using your configured `service_principal` until you upgrade your Node Pool.
        /// </summary>
        [Input("servicePrincipal")]
        public Input<Inputs.KubernetesClusterServicePrincipalArgs>? ServicePrincipal { get; set; }

        /// <summary>
        /// The SKU Tier that should be used for this Kubernetes Cluster. Possible values are `Free`, and `Standard` (which includes the Uptime SLA). Defaults to `Free`.
        /// 
        /// &gt; **Note:** Whilst the AKS API previously supported the `Paid` SKU - the AKS API introduced a breaking change in API Version `2023-02-01` (used in v3.51.0 and later) where the value `Paid` must now be set to `Standard`.
        /// </summary>
        [Input("skuTier")]
        public Input<string>? SkuTier { get; set; }

        /// <summary>
        /// A `storage_profile` block as defined below.
        /// </summary>
        [Input("storageProfile")]
        public Input<Inputs.KubernetesClusterStorageProfileArgs>? StorageProfile { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// A mapping of tags to assign to the resource.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        /// <summary>
        /// A `web_app_routing` block as defined below.
        /// </summary>
        [Input("webAppRouting")]
        public Input<Inputs.KubernetesClusterWebAppRoutingArgs>? WebAppRouting { get; set; }

        /// <summary>
        /// A `windows_profile` block as defined below.
        /// </summary>
        [Input("windowsProfile")]
        public Input<Inputs.KubernetesClusterWindowsProfileArgs>? WindowsProfile { get; set; }

        /// <summary>
        /// A `workload_autoscaler_profile` block defined below.
        /// </summary>
        [Input("workloadAutoscalerProfile")]
        public Input<Inputs.KubernetesClusterWorkloadAutoscalerProfileArgs>? WorkloadAutoscalerProfile { get; set; }

        /// <summary>
        /// Specifies whether Azure AD Workload Identity should be enabled for the Cluster. Defaults to `false`.
        /// 
        /// &gt; **Note:** To enable Azure AD Workload Identity `oidc_issuer_enabled` must be set to `true`.
        /// 
        /// &gt; **Note:** Enabling this option will allocate Workload Identity resources to the `kube-system` namespace in Kubernetes. If you wish to customize the deployment of Workload Identity, you can refer to [the documentation on Azure AD Workload Identity.](https://azure.github.io/azure-workload-identity/docs/installation/mutating-admission-webhook.html) The documentation provides guidance on how to install the mutating admission webhook, which allows for the customization of Workload Identity deployment.
        /// </summary>
        [Input("workloadIdentityEnabled")]
        public Input<bool>? WorkloadIdentityEnabled { get; set; }

        public KubernetesClusterArgs()
        {
        }
        public static new KubernetesClusterArgs Empty => new KubernetesClusterArgs();
    }

    public sealed class KubernetesClusterState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// A `aci_connector_linux` block as defined below. For more details, please visit [Create and configure an AKS cluster to use virtual nodes](https://docs.microsoft.com/azure/aks/virtual-nodes-portal).
        /// </summary>
        [Input("aciConnectorLinux")]
        public Input<Inputs.KubernetesClusterAciConnectorLinuxGetArgs>? AciConnectorLinux { get; set; }

        /// <summary>
        /// An `api_server_access_profile` block as defined below.
        /// </summary>
        [Input("apiServerAccessProfile")]
        public Input<Inputs.KubernetesClusterApiServerAccessProfileGetArgs>? ApiServerAccessProfile { get; set; }

        [Input("apiServerAuthorizedIpRanges")]
        private InputList<string>? _apiServerAuthorizedIpRanges;
        [Obsolete(@"This property has been renamed to `authorized_ip_ranges` within the `api_server_access_profile` block and will be removed in v4.0 of the provider")]
        public InputList<string> ApiServerAuthorizedIpRanges
        {
            get => _apiServerAuthorizedIpRanges ?? (_apiServerAuthorizedIpRanges = new InputList<string>());
            set => _apiServerAuthorizedIpRanges = value;
        }

        /// <summary>
        /// A `auto_scaler_profile` block as defined below.
        /// </summary>
        [Input("autoScalerProfile")]
        public Input<Inputs.KubernetesClusterAutoScalerProfileGetArgs>? AutoScalerProfile { get; set; }

        /// <summary>
        /// The upgrade channel for this Kubernetes Cluster. Possible values are `patch`, `rapid`, `node-image` and `stable`. Omitting this field sets this value to `none`.
        /// 
        /// !&gt; **Note:** Cluster Auto-Upgrade will update the Kubernetes Cluster (and its Node Pools) to the latest GA version of Kubernetes automatically - please [see the Azure documentation for more information](https://docs.microsoft.com/azure/aks/upgrade-cluster#set-auto-upgrade-channel).
        /// 
        /// &gt; **Note:** Cluster Auto-Upgrade only updates to GA versions of Kubernetes and will not update to Preview versions.
        /// </summary>
        [Input("automaticChannelUpgrade")]
        public Input<string>? AutomaticChannelUpgrade { get; set; }

        /// <summary>
        /// A `azure_active_directory_role_based_access_control` block as defined below.
        /// 
        /// &gt; **Note:** This requires that the Preview Feature `Microsoft.ContainerService/AKS-PrometheusAddonPreview` is enabled, see [the documentation](https://learn.microsoft.com/en-us/azure/azure-monitor/essentials/prometheus-metrics-enable?tabs=azure-portal) for more information.
        /// </summary>
        [Input("azureActiveDirectoryRoleBasedAccessControl")]
        public Input<Inputs.KubernetesClusterAzureActiveDirectoryRoleBasedAccessControlGetArgs>? AzureActiveDirectoryRoleBasedAccessControl { get; set; }

        /// <summary>
        /// Should the Azure Policy Add-On be enabled? For more details please visit [Understand Azure Policy for Azure Kubernetes Service](https://docs.microsoft.com/en-ie/azure/governance/policy/concepts/rego-for-aks)
        /// </summary>
        [Input("azurePolicyEnabled")]
        public Input<bool>? AzurePolicyEnabled { get; set; }

        /// <summary>
        /// A `confidential_computing` block as defined below. For more details please [the documentation](https://learn.microsoft.com/en-us/azure/confidential-computing/confidential-nodes-aks-overview)
        /// </summary>
        [Input("confidentialComputing")]
        public Input<Inputs.KubernetesClusterConfidentialComputingGetArgs>? ConfidentialComputing { get; set; }

        [Input("customCaTrustCertificatesBase64s")]
        private InputList<string>? _customCaTrustCertificatesBase64s;

        /// <summary>
        /// A list of up to 10 base64 encoded CAs that will be added to the trust store on nodes with the `custom_ca_trust_enabled` feature enabled.
        /// 
        /// &gt; **Note:** Removing `custom_ca_trust_certificates_base64` after it has been set forces a new resource to be created.
        /// </summary>
        public InputList<string> CustomCaTrustCertificatesBase64s
        {
            get => _customCaTrustCertificatesBase64s ?? (_customCaTrustCertificatesBase64s = new InputList<string>());
            set => _customCaTrustCertificatesBase64s = value;
        }

        /// <summary>
        /// A `default_node_pool` block as defined below.
        /// </summary>
        [Input("defaultNodePool")]
        public Input<Inputs.KubernetesClusterDefaultNodePoolGetArgs>? DefaultNodePool { get; set; }

        /// <summary>
        /// The ID of the Disk Encryption Set which should be used for the Nodes and Volumes. More information [can be found in the documentation](https://docs.microsoft.com/azure/aks/azure-disk-customer-managed-keys). Changing this forces a new resource to be created.
        /// </summary>
        [Input("diskEncryptionSetId")]
        public Input<string>? DiskEncryptionSetId { get; set; }

        /// <summary>
        /// DNS prefix specified when creating the managed cluster. Possible values must begin and end with a letter or number, contain only letters, numbers, and hyphens and be between 1 and 54 characters in length. Changing this forces a new resource to be created.
        /// </summary>
        [Input("dnsPrefix")]
        public Input<string>? DnsPrefix { get; set; }

        /// <summary>
        /// Specifies the DNS prefix to use with private clusters. Changing this forces a new resource to be created.
        /// 
        /// &gt; **Note:** You must define either a `dns_prefix` or a `dns_prefix_private_cluster` field.
        /// 
        /// In addition, one of either `identity` or `service_principal` blocks must be specified.
        /// </summary>
        [Input("dnsPrefixPrivateCluster")]
        public Input<string>? DnsPrefixPrivateCluster { get; set; }

        /// <summary>
        /// Specifies the Edge Zone within the Azure Region where this Managed Kubernetes Cluster should exist. Changing this forces a new resource to be created.
        /// </summary>
        [Input("edgeZone")]
        public Input<string>? EdgeZone { get; set; }

        [Input("enablePodSecurityPolicy")]
        public Input<bool>? EnablePodSecurityPolicy { get; set; }

        /// <summary>
        /// The FQDN of the Azure Kubernetes Managed Cluster.
        /// </summary>
        [Input("fqdn")]
        public Input<string>? Fqdn { get; set; }

        /// <summary>
        /// Should HTTP Application Routing be enabled?
        /// 
        /// &gt; **Note:** At this time HTTP Application Routing is not supported in Azure China or Azure US Government.
        /// </summary>
        [Input("httpApplicationRoutingEnabled")]
        public Input<bool>? HttpApplicationRoutingEnabled { get; set; }

        /// <summary>
        /// The Zone Name of the HTTP Application Routing.
        /// </summary>
        [Input("httpApplicationRoutingZoneName")]
        public Input<string>? HttpApplicationRoutingZoneName { get; set; }

        /// <summary>
        /// A `http_proxy_config` block as defined below.
        /// </summary>
        [Input("httpProxyConfig")]
        public Input<Inputs.KubernetesClusterHttpProxyConfigGetArgs>? HttpProxyConfig { get; set; }

        /// <summary>
        /// An `identity` block as defined below. One of either `identity` or `service_principal` must be specified.
        /// 
        /// !&gt; **Note:** A migration scenario from `service_principal` to `identity` is supported. When upgrading `service_principal` to `identity`, your cluster's control plane and addon pods will switch to use managed identity, but the kubelets will keep using your configured `service_principal` until you upgrade your Node Pool.
        /// </summary>
        [Input("identity")]
        public Input<Inputs.KubernetesClusterIdentityGetArgs>? Identity { get; set; }

        /// <summary>
        /// Specifies whether Image Cleaner is enabled.
        /// </summary>
        [Input("imageCleanerEnabled")]
        public Input<bool>? ImageCleanerEnabled { get; set; }

        /// <summary>
        /// Specifies the interval in hours when images should be cleaned up. Defaults to `48`.
        /// 
        /// &gt; **Note:** This requires that the Preview Feature `Microsoft.ContainerService/EnableImageCleanerPreview` is enabled and the Resource Provider is re-registered, see [the documentation](https://learn.microsoft.com/en-us/azure/aks/image-cleaner) for more information.
        /// </summary>
        [Input("imageCleanerIntervalHours")]
        public Input<int>? ImageCleanerIntervalHours { get; set; }

        /// <summary>
        /// A `ingress_application_gateway` block as defined below.
        /// 
        /// &gt; **Note:** Since the Application Gateway is deployed inside a Virtual Network, users (and Service Principals) that are operating the Application Gateway must have the `Microsoft.Network/virtualNetworks/subnets/join/action` permission on the Virtual Network or Subnet. For more details, please visit [Virtual Network Permission](https://learn.microsoft.com/en-us/azure/application-gateway/configuration-infrastructure#virtual-network-permission).
        /// </summary>
        [Input("ingressApplicationGateway")]
        public Input<Inputs.KubernetesClusterIngressApplicationGatewayGetArgs>? IngressApplicationGateway { get; set; }

        /// <summary>
        /// A `key_management_service` block as defined below. For more details, please visit [Key Management Service (KMS) etcd encryption to an AKS cluster](https://learn.microsoft.com/en-us/azure/aks/use-kms-etcd-encryption).
        /// </summary>
        [Input("keyManagementService")]
        public Input<Inputs.KubernetesClusterKeyManagementServiceGetArgs>? KeyManagementService { get; set; }

        /// <summary>
        /// A `key_vault_secrets_provider` block as defined below. For more details, please visit [Azure Keyvault Secrets Provider for AKS](https://docs.microsoft.com/azure/aks/csi-secrets-store-driver).
        /// </summary>
        [Input("keyVaultSecretsProvider")]
        public Input<Inputs.KubernetesClusterKeyVaultSecretsProviderGetArgs>? KeyVaultSecretsProvider { get; set; }

        [Input("kubeAdminConfigRaw")]
        private Input<string>? _kubeAdminConfigRaw;

        /// <summary>
        /// Raw Kubernetes config for the admin account to be used by [kubectl](https://kubernetes.io/docs/reference/kubectl/overview/) and other compatible tools. This is only available when Role Based Access Control with Azure Active Directory is enabled and local accounts enabled.
        /// </summary>
        public Input<string>? KubeAdminConfigRaw
        {
            get => _kubeAdminConfigRaw;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _kubeAdminConfigRaw = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("kubeAdminConfigs")]
        private InputList<Inputs.KubernetesClusterKubeAdminConfigGetArgs>? _kubeAdminConfigs;

        /// <summary>
        /// A `kube_admin_config` block as defined below. This is only available when Role Based Access Control with Azure Active Directory is enabled and local accounts enabled.
        /// </summary>
        public InputList<Inputs.KubernetesClusterKubeAdminConfigGetArgs> KubeAdminConfigs
        {
            get => _kubeAdminConfigs ?? (_kubeAdminConfigs = new InputList<Inputs.KubernetesClusterKubeAdminConfigGetArgs>());
            set
            {
                var emptySecret = Output.CreateSecret(ImmutableArray.Create<Inputs.KubernetesClusterKubeAdminConfigGetArgs>());
                _kubeAdminConfigs = Output.All(value, emptySecret).Apply(v => v[0]);
            }
        }

        [Input("kubeConfigRaw")]
        private Input<string>? _kubeConfigRaw;

        /// <summary>
        /// Raw Kubernetes config to be used by [kubectl](https://kubernetes.io/docs/reference/kubectl/overview/) and other compatible tools.
        /// </summary>
        public Input<string>? KubeConfigRaw
        {
            get => _kubeConfigRaw;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _kubeConfigRaw = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("kubeConfigs")]
        private InputList<Inputs.KubernetesClusterKubeConfigGetArgs>? _kubeConfigs;

        /// <summary>
        /// A `kube_config` block as defined below.
        /// </summary>
        public InputList<Inputs.KubernetesClusterKubeConfigGetArgs> KubeConfigs
        {
            get => _kubeConfigs ?? (_kubeConfigs = new InputList<Inputs.KubernetesClusterKubeConfigGetArgs>());
            set
            {
                var emptySecret = Output.CreateSecret(ImmutableArray.Create<Inputs.KubernetesClusterKubeConfigGetArgs>());
                _kubeConfigs = Output.All(value, emptySecret).Apply(v => v[0]);
            }
        }

        /// <summary>
        /// A `kubelet_identity` block as defined below.
        /// </summary>
        [Input("kubeletIdentity")]
        public Input<Inputs.KubernetesClusterKubeletIdentityGetArgs>? KubeletIdentity { get; set; }

        /// <summary>
        /// Version of Kubernetes specified when creating the AKS managed cluster. If not specified, the latest recommended version will be used at provisioning time (but won't auto-upgrade). AKS does not require an exact patch version to be specified, minor version aliases such as `1.22` are also supported. - The minor version's latest GA patch is automatically chosen in that case. More details can be found in [the documentation](https://docs.microsoft.com/en-us/azure/aks/supported-kubernetes-versions?tabs=azure-cli#alias-minor-version).
        /// 
        /// &gt; **Note:** Upgrading your cluster may take up to 10 minutes per node.
        /// </summary>
        [Input("kubernetesVersion")]
        public Input<string>? KubernetesVersion { get; set; }

        /// <summary>
        /// A `linux_profile` block as defined below.
        /// </summary>
        [Input("linuxProfile")]
        public Input<Inputs.KubernetesClusterLinuxProfileGetArgs>? LinuxProfile { get; set; }

        /// <summary>
        /// If `true` local accounts will be disabled. See [the documentation](https://docs.microsoft.com/azure/aks/managed-aad#disable-local-accounts) for more information.
        /// 
        /// &gt; **Note:** If `local_account_disabled` is set to `true`, it is required to enable Kubernetes RBAC and AKS-managed Azure AD integration. See [the documentation](https://docs.microsoft.com/azure/aks/managed-aad#azure-ad-authentication-overview) for more information.
        /// </summary>
        [Input("localAccountDisabled")]
        public Input<bool>? LocalAccountDisabled { get; set; }

        /// <summary>
        /// The location where the Managed Kubernetes Cluster should be created. Changing this forces a new resource to be created.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// A `maintenance_window` block as defined below.
        /// </summary>
        [Input("maintenanceWindow")]
        public Input<Inputs.KubernetesClusterMaintenanceWindowGetArgs>? MaintenanceWindow { get; set; }

        /// <summary>
        /// A `maintenance_window_auto_upgrade` block as defined below.
        /// </summary>
        [Input("maintenanceWindowAutoUpgrade")]
        public Input<Inputs.KubernetesClusterMaintenanceWindowAutoUpgradeGetArgs>? MaintenanceWindowAutoUpgrade { get; set; }

        /// <summary>
        /// A `maintenance_window_node_os` block as defined below.
        /// </summary>
        [Input("maintenanceWindowNodeOs")]
        public Input<Inputs.KubernetesClusterMaintenanceWindowNodeOsGetArgs>? MaintenanceWindowNodeOs { get; set; }

        /// <summary>
        /// A `microsoft_defender` block as defined below.
        /// </summary>
        [Input("microsoftDefender")]
        public Input<Inputs.KubernetesClusterMicrosoftDefenderGetArgs>? MicrosoftDefender { get; set; }

        /// <summary>
        /// Specifies a Prometheus add-on profile for the Kubernetes Cluster. A `monitor_metrics` block as defined below.
        /// </summary>
        [Input("monitorMetrics")]
        public Input<Inputs.KubernetesClusterMonitorMetricsGetArgs>? MonitorMetrics { get; set; }

        /// <summary>
        /// The name of the Managed Kubernetes Cluster to create. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// A `network_profile` block as defined below. Changing this forces a new resource to be created.
        /// 
        /// &gt; **Note:** If `network_profile` is not defined, `kubenet` profile will be used by default.
        /// </summary>
        [Input("networkProfile")]
        public Input<Inputs.KubernetesClusterNetworkProfileGetArgs>? NetworkProfile { get; set; }

        /// <summary>
        /// The upgrade channel for this Kubernetes Cluster Nodes' OS Image. Possible values are `Unmanaged`, `SecurityPatch`, `NodeImage` and `None`.
        /// 
        /// &gt; **Note:** `node_os_channel_upgrade` must be set to `NodeImage` if `automatic_channel_upgrade` has been set to `node-image`
        /// 
        /// &gt; **Note:** This requires that the Preview Feature `Microsoft.ContainerService/NodeOsUpgradeChannelPreview` is enabled and the Resource Provider is re-registered, see [the documentation](https://learn.microsoft.com/en-us/azure/aks/auto-upgrade-node-image#register-the-nodeosupgradechannelpreview-feature-flag) for more information.
        /// </summary>
        [Input("nodeOsChannelUpgrade")]
        public Input<string>? NodeOsChannelUpgrade { get; set; }

        /// <summary>
        /// The name of the Resource Group where the Kubernetes Nodes should exist. Changing this forces a new resource to be created.
        /// 
        /// &gt; **Note:** Azure requires that a new, non-existent Resource Group is used, as otherwise, the provisioning of the Kubernetes Service will fail.
        /// </summary>
        [Input("nodeResourceGroup")]
        public Input<string>? NodeResourceGroup { get; set; }

        /// <summary>
        /// The ID of the Resource Group containing the resources for this Managed Kubernetes Cluster.
        /// </summary>
        [Input("nodeResourceGroupId")]
        public Input<string>? NodeResourceGroupId { get; set; }

        /// <summary>
        /// Enable or Disable the [OIDC issuer URL](https://learn.microsoft.com/en-gb/azure/aks/use-oidc-issuer)
        /// </summary>
        [Input("oidcIssuerEnabled")]
        public Input<bool>? OidcIssuerEnabled { get; set; }

        /// <summary>
        /// The OIDC issuer URL that is associated with the cluster.
        /// </summary>
        [Input("oidcIssuerUrl")]
        public Input<string>? OidcIssuerUrl { get; set; }

        /// <summary>
        /// A `oms_agent` block as defined below.
        /// </summary>
        [Input("omsAgent")]
        public Input<Inputs.KubernetesClusterOmsAgentGetArgs>? OmsAgent { get; set; }

        /// <summary>
        /// Is Open Service Mesh enabled? For more details, please visit [Open Service Mesh for AKS](https://docs.microsoft.com/azure/aks/open-service-mesh-about).
        /// </summary>
        [Input("openServiceMeshEnabled")]
        public Input<bool>? OpenServiceMeshEnabled { get; set; }

        /// <summary>
        /// The FQDN for the Azure Portal resources when private link has been enabled, which is only resolvable inside the Virtual Network used by the Kubernetes Cluster.
        /// </summary>
        [Input("portalFqdn")]
        public Input<string>? PortalFqdn { get; set; }

        /// <summary>
        /// Should this Kubernetes Cluster have its API server only exposed on internal IP addresses? This provides a Private IP Address for the Kubernetes API on the Virtual Network where the Kubernetes Cluster is located. Defaults to `false`. Changing this forces a new resource to be created.
        /// </summary>
        [Input("privateClusterEnabled")]
        public Input<bool>? PrivateClusterEnabled { get; set; }

        /// <summary>
        /// Specifies whether a Public FQDN for this Private Cluster should be added. Defaults to `false`.
        /// 
        /// &gt; **Note:** If you use BYO DNS Zone, the AKS cluster should either use a User Assigned Identity or a service principal (which is deprecated) with the `Private DNS Zone Contributor` role and access to this Private DNS Zone. If `UserAssigned` identity is used - to prevent improper resource order destruction - the cluster should depend on the role assignment, like in this example:
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Azure = Pulumi.Azure;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleResourceGroup = new Azure.Core.ResourceGroup("exampleResourceGroup", new()
        ///     {
        ///         Location = "West Europe",
        ///     });
        /// 
        ///     var exampleZone = new Azure.PrivateDns.Zone("exampleZone", new()
        ///     {
        ///         ResourceGroupName = exampleResourceGroup.Name,
        ///     });
        /// 
        ///     var exampleUserAssignedIdentity = new Azure.Authorization.UserAssignedIdentity("exampleUserAssignedIdentity", new()
        ///     {
        ///         ResourceGroupName = exampleResourceGroup.Name,
        ///         Location = exampleResourceGroup.Location,
        ///     });
        /// 
        ///     var exampleAssignment = new Azure.Authorization.Assignment("exampleAssignment", new()
        ///     {
        ///         Scope = exampleZone.Id,
        ///         RoleDefinitionName = "Private DNS Zone Contributor",
        ///         PrincipalId = exampleUserAssignedIdentity.PrincipalId,
        ///     });
        /// 
        ///     var exampleKubernetesCluster = new Azure.ContainerService.KubernetesCluster("exampleKubernetesCluster", new()
        ///     {
        ///         Location = exampleResourceGroup.Location,
        ///         ResourceGroupName = exampleResourceGroup.Name,
        ///         DnsPrefix = "aksexamplednsprefix1",
        ///         PrivateClusterEnabled = true,
        ///         PrivateDnsZoneId = exampleZone.Id,
        ///     }, new CustomResourceOptions
        ///     {
        ///         DependsOn = new[]
        ///         {
        ///             exampleAssignment,
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        [Input("privateClusterPublicFqdnEnabled")]
        public Input<bool>? PrivateClusterPublicFqdnEnabled { get; set; }

        /// <summary>
        /// Either the ID of Private DNS Zone which should be delegated to this Cluster, `System` to have AKS manage this or `None`. In case of `None` you will need to bring your own DNS server and set up resolving, otherwise, the cluster will have issues after provisioning. Changing this forces a new resource to be created.
        /// </summary>
        [Input("privateDnsZoneId")]
        public Input<string>? PrivateDnsZoneId { get; set; }

        /// <summary>
        /// The FQDN for the Kubernetes Cluster when private link has been enabled, which is only resolvable inside the Virtual Network used by the Kubernetes Cluster.
        /// </summary>
        [Input("privateFqdn")]
        public Input<string>? PrivateFqdn { get; set; }

        /// <summary>
        /// Whether public network access is allowed for this Kubernetes Cluster. Defaults to `true`.
        /// 
        /// !&gt; **Note:** `public_network_access_enabled` is currently not functional and is not passed to the Azure API. For further information please see this [issue](https://github.com/Azure/AKS/issues/3690). For controlling the public and private exposure of a cluster please see the properties `private_cluster_enabled` and `api_server_access_profile`.
        /// </summary>
        [Input("publicNetworkAccessEnabled")]
        public Input<bool>? PublicNetworkAccessEnabled { get; set; }

        /// <summary>
        /// Specifies the Resource Group where the Managed Kubernetes Cluster should exist. Changing this forces a new resource to be created.
        /// </summary>
        [Input("resourceGroupName")]
        public Input<string>? ResourceGroupName { get; set; }

        /// <summary>
        /// Whether Role Based Access Control for the Kubernetes Cluster should be enabled. Defaults to `true`. Changing this forces a new resource to be created.
        /// </summary>
        [Input("roleBasedAccessControlEnabled")]
        public Input<bool>? RoleBasedAccessControlEnabled { get; set; }

        /// <summary>
        /// Whether to enable run command for the cluster or not. Defaults to `true`.
        /// </summary>
        [Input("runCommandEnabled")]
        public Input<bool>? RunCommandEnabled { get; set; }

        /// <summary>
        /// A `service_mesh_profile` block as defined below.
        /// 
        /// &gt; **Note:** This requires that the Preview Feature `Microsoft.ContainerService/AzureServiceMeshPreview` is enabled and the Resource Provider is re-registered, see [the documentation](https://learn.microsoft.com/en-us/azure/aks/istio-deploy-addon#register-the-azureservicemeshpreview-feature-flag) for more information.
        /// </summary>
        [Input("serviceMeshProfile")]
        public Input<Inputs.KubernetesClusterServiceMeshProfileGetArgs>? ServiceMeshProfile { get; set; }

        /// <summary>
        /// A `service_principal` block as documented below. One of either `identity` or `service_principal` must be specified.
        /// 
        /// !&gt; **Note:** A migration scenario from `service_principal` to `identity` is supported. When upgrading `service_principal` to `identity`, your cluster's control plane and addon pods will switch to use managed identity, but the kubelets will keep using your configured `service_principal` until you upgrade your Node Pool.
        /// </summary>
        [Input("servicePrincipal")]
        public Input<Inputs.KubernetesClusterServicePrincipalGetArgs>? ServicePrincipal { get; set; }

        /// <summary>
        /// The SKU Tier that should be used for this Kubernetes Cluster. Possible values are `Free`, and `Standard` (which includes the Uptime SLA). Defaults to `Free`.
        /// 
        /// &gt; **Note:** Whilst the AKS API previously supported the `Paid` SKU - the AKS API introduced a breaking change in API Version `2023-02-01` (used in v3.51.0 and later) where the value `Paid` must now be set to `Standard`.
        /// </summary>
        [Input("skuTier")]
        public Input<string>? SkuTier { get; set; }

        /// <summary>
        /// A `storage_profile` block as defined below.
        /// </summary>
        [Input("storageProfile")]
        public Input<Inputs.KubernetesClusterStorageProfileGetArgs>? StorageProfile { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// A mapping of tags to assign to the resource.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        /// <summary>
        /// A `web_app_routing` block as defined below.
        /// </summary>
        [Input("webAppRouting")]
        public Input<Inputs.KubernetesClusterWebAppRoutingGetArgs>? WebAppRouting { get; set; }

        /// <summary>
        /// A `windows_profile` block as defined below.
        /// </summary>
        [Input("windowsProfile")]
        public Input<Inputs.KubernetesClusterWindowsProfileGetArgs>? WindowsProfile { get; set; }

        /// <summary>
        /// A `workload_autoscaler_profile` block defined below.
        /// </summary>
        [Input("workloadAutoscalerProfile")]
        public Input<Inputs.KubernetesClusterWorkloadAutoscalerProfileGetArgs>? WorkloadAutoscalerProfile { get; set; }

        /// <summary>
        /// Specifies whether Azure AD Workload Identity should be enabled for the Cluster. Defaults to `false`.
        /// 
        /// &gt; **Note:** To enable Azure AD Workload Identity `oidc_issuer_enabled` must be set to `true`.
        /// 
        /// &gt; **Note:** Enabling this option will allocate Workload Identity resources to the `kube-system` namespace in Kubernetes. If you wish to customize the deployment of Workload Identity, you can refer to [the documentation on Azure AD Workload Identity.](https://azure.github.io/azure-workload-identity/docs/installation/mutating-admission-webhook.html) The documentation provides guidance on how to install the mutating admission webhook, which allows for the customization of Workload Identity deployment.
        /// </summary>
        [Input("workloadIdentityEnabled")]
        public Input<bool>? WorkloadIdentityEnabled { get; set; }

        public KubernetesClusterState()
        {
        }
        public static new KubernetesClusterState Empty => new KubernetesClusterState();
    }
}
