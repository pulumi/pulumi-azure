// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.ContainerService.Outputs
{

    [OutputType]
    public sealed class FluxConfigurationBlobStorageServicePrincipal
    {
        /// <summary>
        /// Base64-encoded certificate used to authenticate a Service Principal .
        /// </summary>
        public readonly string? ClientCertificateBase64;
        /// <summary>
        /// Specifies the password for the certificate used to authenticate a Service Principal .
        /// </summary>
        public readonly string? ClientCertificatePassword;
        /// <summary>
        /// Specifies whether to include x5c header in client claims when acquiring a token to enable subject name / issuer based authentication for the client certificate.
        /// </summary>
        public readonly bool? ClientCertificateSendChain;
        /// <summary>
        /// Specifies the client ID for authenticating a Service Principal.
        /// </summary>
        public readonly string ClientId;
        /// <summary>
        /// Specifies the client secret for authenticating a Service Principal.
        /// </summary>
        public readonly string? ClientSecret;
        /// <summary>
        /// Specifies the tenant ID for authenticating a Service Principal.
        /// </summary>
        public readonly string TenantId;

        [OutputConstructor]
        private FluxConfigurationBlobStorageServicePrincipal(
            string? clientCertificateBase64,

            string? clientCertificatePassword,

            bool? clientCertificateSendChain,

            string clientId,

            string? clientSecret,

            string tenantId)
        {
            ClientCertificateBase64 = clientCertificateBase64;
            ClientCertificatePassword = clientCertificatePassword;
            ClientCertificateSendChain = clientCertificateSendChain;
            ClientId = clientId;
            ClientSecret = clientSecret;
            TenantId = tenantId;
        }
    }
}
