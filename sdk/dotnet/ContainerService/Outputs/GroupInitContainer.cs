// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.ContainerService.Outputs
{

    [OutputType]
    public sealed class GroupInitContainer
    {
        /// <summary>
        /// A list of commands which should be run on the container. Changing this forces a new resource to be created.
        /// </summary>
        public readonly ImmutableArray<string> Commands;
        /// <summary>
        /// A list of environment variables to be set on the container. Specified as a map of name/value pairs. Changing this forces a new resource to be created.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? EnvironmentVariables;
        /// <summary>
        /// The container image name. Changing this forces a new resource to be created.
        /// </summary>
        public readonly string Image;
        /// <summary>
        /// Specifies the name of the Container. Changing this forces a new resource to be created.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// A list of sensitive environment variables to be set on the container. Specified as a map of name/value pairs. Changing this forces a new resource to be created.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? SecureEnvironmentVariables;
        /// <summary>
        /// The definition of a volume mount for this container as documented in the `volume` block below. Changing this forces a new resource to be created.
        /// </summary>
        public readonly ImmutableArray<Outputs.GroupInitContainerVolume> Volumes;

        [OutputConstructor]
        private GroupInitContainer(
            ImmutableArray<string> commands,

            ImmutableDictionary<string, string>? environmentVariables,

            string image,

            string name,

            ImmutableDictionary<string, string>? secureEnvironmentVariables,

            ImmutableArray<Outputs.GroupInitContainerVolume> volumes)
        {
            Commands = commands;
            EnvironmentVariables = environmentVariables;
            Image = image;
            Name = name;
            SecureEnvironmentVariables = secureEnvironmentVariables;
            Volumes = volumes;
        }
    }
}
