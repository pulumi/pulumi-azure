// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.ContainerService.Outputs
{

    [OutputType]
    public sealed class KubernetesClusterUpgradeOverride
    {
        /// <summary>
        /// Specifies the duration, in RFC 3339 format (e.g., `2025-10-01T13:00:00Z`), the `UpgradeOverride` values are effective. This field must be set for the `UpgradeOverride` values to take effect. The date-time must be within the next 30 days.
        /// 
        /// &gt; **Note:** This only matches the start time of an upgrade, and the effectiveness won't change once an upgrade starts even if the `EffectiveUntil` value expires as the upgrade proceeds.
        /// </summary>
        public readonly string? EffectiveUntil;
        /// <summary>
        /// Whether to force upgrade the cluster. Possible values are `True` or `False`.
        /// 
        /// !&gt; **Note:** The `ForceUpgradeEnabled` field instructs the upgrade operation to bypass upgrade protections (e.g. checking for deprecated API usage) which may render the cluster inoperative after the upgrade process has completed. Use the `ForceUpgradeEnabled` option with extreme caution only.
        /// </summary>
        public readonly bool ForceUpgradeEnabled;

        [OutputConstructor]
        private KubernetesClusterUpgradeOverride(
            string? effectiveUntil,

            bool forceUpgradeEnabled)
        {
            EffectiveUntil = effectiveUntil;
            ForceUpgradeEnabled = forceUpgradeEnabled;
        }
    }
}
