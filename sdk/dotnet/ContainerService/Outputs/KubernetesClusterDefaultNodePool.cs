// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.ContainerService.Outputs
{

    [OutputType]
    public sealed class KubernetesClusterDefaultNodePool
    {
        /// <summary>
        /// Should [the Kubernetes Auto Scaler](https://docs.microsoft.com/azure/aks/cluster-autoscaler) be enabled for this Node Pool? Defaults to `false`.
        /// </summary>
        public readonly bool? EnableAutoScaling;
        /// <summary>
        /// Should the nodes in the Default Node Pool have host encryption enabled? Defaults to `false`.
        /// </summary>
        public readonly bool? EnableHostEncryption;
        /// <summary>
        /// Should nodes in this Node Pool have a Public IP Address? Defaults to `false`. Changing this forces a new resource to be created.
        /// </summary>
        public readonly bool? EnableNodePublicIp;
        /// <summary>
        /// Should the nodes in this Node Pool have Federal Information Processing Standard enabled? Changing this forces a new resource to be created.
        /// </summary>
        public readonly bool? FipsEnabled;
        /// <summary>
        /// A `kubelet_config` block as defined below.
        /// </summary>
        public readonly Outputs.KubernetesClusterDefaultNodePoolKubeletConfig? KubeletConfig;
        /// <summary>
        /// The type of disk used by kubelet. Possible values are `OS` and `Temporary`.
        /// </summary>
        public readonly string? KubeletDiskType;
        /// <summary>
        /// A `linux_os_config` block as defined below.
        /// </summary>
        public readonly Outputs.KubernetesClusterDefaultNodePoolLinuxOsConfig? LinuxOsConfig;
        /// <summary>
        /// The maximum number of nodes which should exist in this Node Pool. If specified this must be between `1` and `1000`.
        /// </summary>
        public readonly int? MaxCount;
        /// <summary>
        /// The maximum number of pods that can run on each agent. Changing this forces a new resource to be created.
        /// </summary>
        public readonly int? MaxPods;
        /// <summary>
        /// The minimum number of nodes which should exist in this Node Pool. If specified this must be between `1` and `1000`.
        /// </summary>
        public readonly int? MinCount;
        /// <summary>
        /// The name which should be used for the default Kubernetes Node Pool. Changing this forces a new resource to be created.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The initial number of nodes which should exist in this Node Pool. If specified this must be between `1` and `1000` and between `min_count` and `max_count`.
        /// </summary>
        public readonly int? NodeCount;
        /// <summary>
        /// A map of Kubernetes labels which should be applied to nodes in the Default Node Pool.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? NodeLabels;
        /// <summary>
        /// Resource ID for the Public IP Addresses Prefix for the nodes in this Node Pool. `enable_node_public_ip` should be `true`. Changing this forces a new resource to be created.
        /// </summary>
        public readonly string? NodePublicIpPrefixId;
        public readonly ImmutableArray<string> NodeTaints;
        /// <summary>
        /// Enabling this option will taint default node pool with `CriticalAddonsOnly=true:NoSchedule` taint. Changing this forces a new resource to be created.
        /// </summary>
        public readonly bool? OnlyCriticalAddonsEnabled;
        /// <summary>
        /// Version of Kubernetes used for the Agents. If not specified, the default node pool will be created with the version specified by `kubernetes_version`. If both are unspecified, the latest recommended version will be used at provisioning time (but won't auto-upgrade)
        /// </summary>
        public readonly string? OrchestratorVersion;
        /// <summary>
        /// The size of the OS Disk which should be used for each agent in the Node Pool. Changing this forces a new resource to be created.
        /// </summary>
        public readonly int? OsDiskSizeGb;
        /// <summary>
        /// The type of disk which should be used for the Operating System. Possible values are `Ephemeral` and `Managed`. Defaults to `Managed`. Changing this forces a new resource to be created.
        /// </summary>
        public readonly string? OsDiskType;
        /// <summary>
        /// OsSKU to be used to specify Linux OSType. Not applicable to Windows OSType. Possible values include: `Ubuntu`, `CBLMariner`. Defaults to `Ubuntu`. Changing this forces a new resource to be created.
        /// </summary>
        public readonly string? OsSku;
        /// <summary>
        /// The ID of the Subnet where the pods in the default Node Pool should exist. Changing this forces a new resource to be created.
        /// </summary>
        public readonly string? PodSubnetId;
        public readonly string? ProximityPlacementGroupId;
        /// <summary>
        /// A mapping of tags to assign to the Node Pool.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// The type of Node Pool which should be created. Possible values are `AvailabilitySet` and `VirtualMachineScaleSets`. Defaults to `VirtualMachineScaleSets`.
        /// </summary>
        public readonly string? Type;
        /// <summary>
        /// Used to specify whether the UltraSSD is enabled in the Default Node Pool. Defaults to `false`. See [the documentation](https://docs.microsoft.com/azure/aks/use-ultra-disks) for more information.
        /// </summary>
        public readonly bool? UltraSsdEnabled;
        /// <summary>
        /// A `upgrade_settings` block as documented below.
        /// </summary>
        public readonly Outputs.KubernetesClusterDefaultNodePoolUpgradeSettings? UpgradeSettings;
        /// <summary>
        /// The size of the Virtual Machine, such as `Standard_DS2_v2`. Changing this forces a new resource to be created.
        /// </summary>
        public readonly string VmSize;
        /// <summary>
        /// The ID of a Subnet where the Kubernetes Node Pool should exist. Changing this forces a new resource to be created.
        /// </summary>
        public readonly string? VnetSubnetId;
        /// <summary>
        /// Specifies a list of Availability Zones in which this Kubernetes Cluster should be located. Changing this forces a new Kubernetes Cluster to be created.
        /// </summary>
        public readonly ImmutableArray<string> Zones;

        [OutputConstructor]
        private KubernetesClusterDefaultNodePool(
            bool? enableAutoScaling,

            bool? enableHostEncryption,

            bool? enableNodePublicIp,

            bool? fipsEnabled,

            Outputs.KubernetesClusterDefaultNodePoolKubeletConfig? kubeletConfig,

            string? kubeletDiskType,

            Outputs.KubernetesClusterDefaultNodePoolLinuxOsConfig? linuxOsConfig,

            int? maxCount,

            int? maxPods,

            int? minCount,

            string name,

            int? nodeCount,

            ImmutableDictionary<string, string>? nodeLabels,

            string? nodePublicIpPrefixId,

            ImmutableArray<string> nodeTaints,

            bool? onlyCriticalAddonsEnabled,

            string? orchestratorVersion,

            int? osDiskSizeGb,

            string? osDiskType,

            string? osSku,

            string? podSubnetId,

            string? proximityPlacementGroupId,

            ImmutableDictionary<string, string>? tags,

            string? type,

            bool? ultraSsdEnabled,

            Outputs.KubernetesClusterDefaultNodePoolUpgradeSettings? upgradeSettings,

            string vmSize,

            string? vnetSubnetId,

            ImmutableArray<string> zones)
        {
            EnableAutoScaling = enableAutoScaling;
            EnableHostEncryption = enableHostEncryption;
            EnableNodePublicIp = enableNodePublicIp;
            FipsEnabled = fipsEnabled;
            KubeletConfig = kubeletConfig;
            KubeletDiskType = kubeletDiskType;
            LinuxOsConfig = linuxOsConfig;
            MaxCount = maxCount;
            MaxPods = maxPods;
            MinCount = minCount;
            Name = name;
            NodeCount = nodeCount;
            NodeLabels = nodeLabels;
            NodePublicIpPrefixId = nodePublicIpPrefixId;
            NodeTaints = nodeTaints;
            OnlyCriticalAddonsEnabled = onlyCriticalAddonsEnabled;
            OrchestratorVersion = orchestratorVersion;
            OsDiskSizeGb = osDiskSizeGb;
            OsDiskType = osDiskType;
            OsSku = osSku;
            PodSubnetId = podSubnetId;
            ProximityPlacementGroupId = proximityPlacementGroupId;
            Tags = tags;
            Type = type;
            UltraSsdEnabled = ultraSsdEnabled;
            UpgradeSettings = upgradeSettings;
            VmSize = vmSize;
            VnetSubnetId = vnetSubnetId;
            Zones = zones;
        }
    }
}
