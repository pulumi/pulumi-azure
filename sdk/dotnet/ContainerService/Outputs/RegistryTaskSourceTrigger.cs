// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.ContainerService.Outputs
{

    [OutputType]
    public sealed class RegistryTaskSourceTrigger
    {
        /// <summary>
        /// A `authentication` block as defined above.
        /// </summary>
        public readonly Outputs.RegistryTaskSourceTriggerAuthentication? Authentication;
        /// <summary>
        /// The branch name of the source code.
        /// </summary>
        public readonly string? Branch;
        /// <summary>
        /// Should the trigger be enabled? Defaults to `true`.
        /// </summary>
        public readonly bool? Enabled;
        /// <summary>
        /// Specifies a list of source events corresponding to the trigger. Possible values are `commit` and `pullrequest`.
        /// </summary>
        public readonly ImmutableArray<string> Events;
        /// <summary>
        /// The name which should be used for this trigger.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The full URL to the source code repository.
        /// </summary>
        public readonly string RepositoryUrl;
        /// <summary>
        /// The type of the source control service. Possible values are `Github` and `VisualStudioTeamService`.
        /// </summary>
        public readonly string SourceType;

        [OutputConstructor]
        private RegistryTaskSourceTrigger(
            Outputs.RegistryTaskSourceTriggerAuthentication? authentication,

            string? branch,

            bool? enabled,

            ImmutableArray<string> events,

            string name,

            string repositoryUrl,

            string sourceType)
        {
            Authentication = authentication;
            Branch = branch;
            Enabled = enabled;
            Events = events;
            Name = name;
            RepositoryUrl = repositoryUrl;
            SourceType = sourceType;
        }
    }
}
