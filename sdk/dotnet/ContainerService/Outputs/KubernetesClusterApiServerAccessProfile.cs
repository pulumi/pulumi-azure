// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.ContainerService.Outputs
{

    [OutputType]
    public sealed class KubernetesClusterApiServerAccessProfile
    {
        /// <summary>
        /// Set of authorized IP ranges to allow access to API server, e.g. ["198.51.100.0/24"].
        /// </summary>
        public readonly ImmutableArray<string> AuthorizedIpRanges;
        /// <summary>
        /// The ID of the subnet on which to create an Application Gateway, which in turn will be integrated with the ingress controller of this Kubernetes Cluster. See [this](https://docs.microsoft.com/azure/application-gateway/tutorial-ingress-controller-add-on-new) page for further details.
        /// 
        /// &gt; **Note:** Exactly one of `gateway_id`, `subnet_id` or `subnet_cidr` must be specified.
        /// 
        /// &gt; **Note:** If specifying `ingress_application_gateway` in conjunction with `only_critical_addons_enabled`, the AGIC pod will fail to start. A separate `azure.containerservice.KubernetesClusterNodePool` is required to run the AGIC pod successfully. This is because AGIC is classed as a "non-critical addon".
        /// </summary>
        public readonly string? SubnetId;
        public readonly bool? VnetIntegrationEnabled;

        [OutputConstructor]
        private KubernetesClusterApiServerAccessProfile(
            ImmutableArray<string> authorizedIpRanges,

            string? subnetId,

            bool? vnetIntegrationEnabled)
        {
            AuthorizedIpRanges = authorizedIpRanges;
            SubnetId = subnetId;
            VnetIntegrationEnabled = vnetIntegrationEnabled;
        }
    }
}
