// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.ContainerService.Outputs
{

    [OutputType]
    public sealed class KubernetesClusterAddonProfileIngressApplicationGateway
    {
        public readonly string? EffectiveGatewayId;
        /// <summary>
        /// Whether to deploy the Application Gateway ingress controller to this Kubernetes Cluster?
        /// </summary>
        public readonly bool Enabled;
        /// <summary>
        /// The ID of the Application Gateway to integrate with the ingress controller of this Kubernetes Cluster. See [this](https://docs.microsoft.com/en-us/azure/application-gateway/tutorial-ingress-controller-add-on-existing) page for further details.
        /// </summary>
        public readonly string? GatewayId;
        /// <summary>
        /// The subnet CIDR to be used to create an Application Gateway, which in turn will be integrated with the ingress controller of this Kubernetes Cluster. See [this](https://docs.microsoft.com/en-us/azure/application-gateway/tutorial-ingress-controller-add-on-new) page for further details.
        /// </summary>
        public readonly string? SubnetCidr;
        /// <summary>
        /// The ID of the subnet on which to create an Application Gateway, which in turn will be integrated with the ingress controller of this Kubernetes Cluster. See [this](https://docs.microsoft.com/en-us/azure/application-gateway/tutorial-ingress-controller-add-on-new) page for further details.
        /// </summary>
        public readonly string? SubnetId;

        [OutputConstructor]
        private KubernetesClusterAddonProfileIngressApplicationGateway(
            string? effectiveGatewayId,

            bool enabled,

            string? gatewayId,

            string? subnetCidr,

            string? subnetId)
        {
            EffectiveGatewayId = effectiveGatewayId;
            Enabled = enabled;
            GatewayId = gatewayId;
            SubnetCidr = subnetCidr;
            SubnetId = subnetId;
        }
    }
}
