// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.ContainerService.Outputs
{

    [OutputType]
    public sealed class GroupContainer
    {
        /// <summary>
        /// A list of commands which should be run on the container. Changing this forces a new resource to be created.
        /// </summary>
        public readonly ImmutableArray<string> Commands;
        /// <summary>
        /// The required number of CPU cores of the containers. Changing this forces a new resource to be created.
        /// </summary>
        public readonly double Cpu;
        /// <summary>
        /// The upper limit of the number of CPU cores of the containers.
        /// </summary>
        public readonly double? CpuLimit;
        /// <summary>
        /// A list of environment variables to be set on the container. Specified as a map of name/value pairs. Changing this forces a new resource to be created.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? EnvironmentVariables;
        /// <summary>
        /// A `gpu` block as defined below. Changing this forces a new resource to be created.
        /// </summary>
        public readonly Outputs.GroupContainerGpu? Gpu;
        /// <summary>
        /// A `gpu_limit` block as defined below.
        /// </summary>
        public readonly Outputs.GroupContainerGpuLimit? GpuLimit;
        /// <summary>
        /// The container image name. Changing this forces a new resource to be created.
        /// </summary>
        public readonly string Image;
        /// <summary>
        /// The definition of a readiness probe for this container as documented in the `liveness_probe` block below. Changing this forces a new resource to be created.
        /// </summary>
        public readonly Outputs.GroupContainerLivenessProbe? LivenessProbe;
        /// <summary>
        /// The required memory of the containers in GB. Changing this forces a new resource to be created.
        /// </summary>
        public readonly double Memory;
        /// <summary>
        /// The the upper limit of the memory of the containers in GB.
        /// </summary>
        public readonly double? MemoryLimit;
        /// <summary>
        /// Specifies the name of the Container Group. Changing this forces a new resource to be created.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// A set of public ports for the container. Changing this forces a new resource to be created. Set as documented in the `ports` block below.
        /// </summary>
        public readonly ImmutableArray<Outputs.GroupContainerPort> Ports;
        /// <summary>
        /// The definition of a readiness probe for this container as documented in the `readiness_probe` block below. Changing this forces a new resource to be created.
        /// </summary>
        public readonly Outputs.GroupContainerReadinessProbe? ReadinessProbe;
        /// <summary>
        /// A list of sensitive environment variables to be set on the container. Specified as a map of name/value pairs. Changing this forces a new resource to be created.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? SecureEnvironmentVariables;
        /// <summary>
        /// The definition of a volume mount for this container as documented in the `volume` block below. Changing this forces a new resource to be created.
        /// </summary>
        public readonly ImmutableArray<Outputs.GroupContainerVolume> Volumes;

        [OutputConstructor]
        private GroupContainer(
            ImmutableArray<string> commands,

            double cpu,

            double? cpuLimit,

            ImmutableDictionary<string, string>? environmentVariables,

            Outputs.GroupContainerGpu? gpu,

            Outputs.GroupContainerGpuLimit? gpuLimit,

            string image,

            Outputs.GroupContainerLivenessProbe? livenessProbe,

            double memory,

            double? memoryLimit,

            string name,

            ImmutableArray<Outputs.GroupContainerPort> ports,

            Outputs.GroupContainerReadinessProbe? readinessProbe,

            ImmutableDictionary<string, string>? secureEnvironmentVariables,

            ImmutableArray<Outputs.GroupContainerVolume> volumes)
        {
            Commands = commands;
            Cpu = cpu;
            CpuLimit = cpuLimit;
            EnvironmentVariables = environmentVariables;
            Gpu = gpu;
            GpuLimit = gpuLimit;
            Image = image;
            LivenessProbe = livenessProbe;
            Memory = memory;
            MemoryLimit = memoryLimit;
            Name = name;
            Ports = ports;
            ReadinessProbe = readinessProbe;
            SecureEnvironmentVariables = secureEnvironmentVariables;
            Volumes = volumes;
        }
    }
}
