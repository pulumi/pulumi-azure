// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.ContainerService.Outputs
{

    [OutputType]
    public sealed class KubernetesClusterAddonProfile
    {
        /// <summary>
        /// A `aci_connector_linux` block as defined below. For more details, please visit [Create and configure an AKS cluster to use virtual nodes](https://docs.microsoft.com/en-us/azure/aks/virtual-nodes-portal).
        /// </summary>
        public readonly Outputs.KubernetesClusterAddonProfileAciConnectorLinux? AciConnectorLinux;
        public readonly Outputs.KubernetesClusterAddonProfileAzureKeyvaultSecretsProvider? AzureKeyvaultSecretsProvider;
        public readonly Outputs.KubernetesClusterAddonProfileAzurePolicy? AzurePolicy;
        /// <summary>
        /// A `http_application_routing` block as defined below.
        /// </summary>
        public readonly Outputs.KubernetesClusterAddonProfileHttpApplicationRouting? HttpApplicationRouting;
        /// <summary>
        /// A `ingress_application_gateway` block as defined below.
        /// </summary>
        public readonly Outputs.KubernetesClusterAddonProfileIngressApplicationGateway? IngressApplicationGateway;
        public readonly Outputs.KubernetesClusterAddonProfileKubeDashboard? KubeDashboard;
        /// <summary>
        /// A `oms_agent` block as defined below.
        /// </summary>
        public readonly Outputs.KubernetesClusterAddonProfileOmsAgent? OmsAgent;
        public readonly Outputs.KubernetesClusterAddonProfileOpenServiceMesh? OpenServiceMesh;

        [OutputConstructor]
        private KubernetesClusterAddonProfile(
            Outputs.KubernetesClusterAddonProfileAciConnectorLinux? aciConnectorLinux,

            Outputs.KubernetesClusterAddonProfileAzureKeyvaultSecretsProvider? azureKeyvaultSecretsProvider,

            Outputs.KubernetesClusterAddonProfileAzurePolicy? azurePolicy,

            Outputs.KubernetesClusterAddonProfileHttpApplicationRouting? httpApplicationRouting,

            Outputs.KubernetesClusterAddonProfileIngressApplicationGateway? ingressApplicationGateway,

            Outputs.KubernetesClusterAddonProfileKubeDashboard? kubeDashboard,

            Outputs.KubernetesClusterAddonProfileOmsAgent? omsAgent,

            Outputs.KubernetesClusterAddonProfileOpenServiceMesh? openServiceMesh)
        {
            AciConnectorLinux = aciConnectorLinux;
            AzureKeyvaultSecretsProvider = azureKeyvaultSecretsProvider;
            AzurePolicy = azurePolicy;
            HttpApplicationRouting = httpApplicationRouting;
            IngressApplicationGateway = ingressApplicationGateway;
            KubeDashboard = kubeDashboard;
            OmsAgent = omsAgent;
            OpenServiceMesh = openServiceMesh;
        }
    }
}
