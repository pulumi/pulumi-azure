// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.ContainerService.Outputs
{

    [OutputType]
    public sealed class KubernetesClusterRoleBasedAccessControlAzureActiveDirectory
    {
        /// <summary>
        /// A list of Object IDs of Azure Active Directory Groups which should have Admin Role on the Cluster.
        /// </summary>
        public readonly ImmutableArray<string> AdminGroupObjectIds;
        /// <summary>
        /// Is Role Based Access Control based on Azure AD enabled?
        /// </summary>
        public readonly bool? AzureRbacEnabled;
        /// <summary>
        /// The Client ID of an Azure Active Directory Application.
        /// </summary>
        public readonly string? ClientAppId;
        /// <summary>
        /// Is the Azure Active Directory integration Managed, meaning that Azure will create/manage the Service Principal used for integration.
        /// </summary>
        public readonly bool? Managed;
        /// <summary>
        /// The Server ID of an Azure Active Directory Application.
        /// </summary>
        public readonly string? ServerAppId;
        /// <summary>
        /// The Server Secret of an Azure Active Directory Application.
        /// </summary>
        public readonly string? ServerAppSecret;
        /// <summary>
        /// The Tenant ID used for Azure Active Directory Application. If this isn't specified the Tenant ID of the current Subscription is used.
        /// </summary>
        public readonly string? TenantId;

        [OutputConstructor]
        private KubernetesClusterRoleBasedAccessControlAzureActiveDirectory(
            ImmutableArray<string> adminGroupObjectIds,

            bool? azureRbacEnabled,

            string? clientAppId,

            bool? managed,

            string? serverAppId,

            string? serverAppSecret,

            string? tenantId)
        {
            AdminGroupObjectIds = adminGroupObjectIds;
            AzureRbacEnabled = azureRbacEnabled;
            ClientAppId = clientAppId;
            Managed = managed;
            ServerAppId = serverAppId;
            ServerAppSecret = serverAppSecret;
            TenantId = tenantId;
        }
    }
}
