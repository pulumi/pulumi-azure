// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.ContainerService.Outputs
{

    [OutputType]
    public sealed class KubernetesClusterNetworkProfile
    {
        /// <summary>
        /// IP address within the Kubernetes service address range that will be used by cluster service discovery (kube-dns). Changing this forces a new resource to be created.
        /// </summary>
        public readonly string? DnsServiceIp;
        /// <summary>
        /// IP address (in CIDR notation) used as the Docker bridge IP address on nodes. Changing this forces a new resource to be created.
        /// </summary>
        public readonly string? DockerBridgeCidr;
        /// <summary>
        /// Specifies the eBPF data plane used for building the Kubernetes network. Possible value is `cilium`. Changing this forces a new resource to be created.
        /// </summary>
        public readonly string? EbpfDataPlane;
        /// <summary>
        /// Specifies a list of IP versions the Kubernetes Cluster will use to assign IP addresses to its nodes and pods. Possible values are `IPv4` and/or `IPv6`. `IPv4` must always be specified. Changing this forces a new resource to be created.
        /// </summary>
        public readonly ImmutableArray<string> IpVersions;
        /// <summary>
        /// A `load_balancer_profile` block as defined below. This can only be specified when `load_balancer_sku` is set to `standard`.
        /// </summary>
        public readonly Outputs.KubernetesClusterNetworkProfileLoadBalancerProfile? LoadBalancerProfile;
        /// <summary>
        /// Specifies the SKU of the Load Balancer used for this Kubernetes Cluster. Possible values are `basic` and `standard`. Defaults to `standard`. Changing this forces a new resource to be created.
        /// </summary>
        public readonly string? LoadBalancerSku;
        /// <summary>
        /// A `nat_gateway_profile` block as defined below. This can only be specified when `load_balancer_sku` is set to `standard` and `outbound_type` is set to `managedNATGateway` or `userAssignedNATGateway`.
        /// </summary>
        public readonly Outputs.KubernetesClusterNetworkProfileNatGatewayProfile? NatGatewayProfile;
        /// <summary>
        /// Network mode to be used with Azure CNI. Possible values are `bridge` and `transparent`. Changing this forces a new resource to be created.
        /// </summary>
        public readonly string? NetworkMode;
        /// <summary>
        /// Network plugin to use for networking. Currently supported values are `azure`, `kubenet` and `none`. Changing this forces a new resource to be created.
        /// </summary>
        public readonly string NetworkPlugin;
        /// <summary>
        /// Specifies the network plugin mode used for building the Kubernetes network. Possible value is `Overlay`. Changing this forces a new resource to be created.
        /// </summary>
        public readonly string? NetworkPluginMode;
        /// <summary>
        /// Sets up network policy to be used with Azure CNI. [Network policy allows us to control the traffic flow between pods](https://docs.microsoft.com/azure/aks/use-network-policies). Currently supported values are `calico` and `azure`. Changing this forces a new resource to be created.
        /// </summary>
        public readonly string? NetworkPolicy;
        /// <summary>
        /// The outbound (egress) routing method which should be used for this Kubernetes Cluster. Possible values are `loadBalancer`, `userDefinedRouting`, `managedNATGateway` and `userAssignedNATGateway`. Defaults to `loadBalancer`. Changing this forces a new resource to be created.
        /// </summary>
        public readonly string? OutboundType;
        /// <summary>
        /// The CIDR to use for pod IP addresses. This field can only be set when `network_plugin` is set to `kubenet`. Changing this forces a new resource to be created.
        /// </summary>
        public readonly string? PodCidr;
        /// <summary>
        /// A list of CIDRs to use for pod IP addresses. For single-stack networking a single IPv4 CIDR is expected. For dual-stack networking an IPv4 and IPv6 CIDR are expected. Changing this forces a new resource to be created.
        /// </summary>
        public readonly ImmutableArray<string> PodCidrs;
        /// <summary>
        /// The Network Range used by the Kubernetes service. Changing this forces a new resource to be created.
        /// </summary>
        public readonly string? ServiceCidr;
        /// <summary>
        /// A list of CIDRs to use for Kubernetes services. For single-stack networking a single IPv4 CIDR is expected. For dual-stack networking an IPv4 and IPv6 CIDR are expected. Changing this forces a new resource to be created.
        /// </summary>
        public readonly ImmutableArray<string> ServiceCidrs;

        [OutputConstructor]
        private KubernetesClusterNetworkProfile(
            string? dnsServiceIp,

            string? dockerBridgeCidr,

            string? ebpfDataPlane,

            ImmutableArray<string> ipVersions,

            Outputs.KubernetesClusterNetworkProfileLoadBalancerProfile? loadBalancerProfile,

            string? loadBalancerSku,

            Outputs.KubernetesClusterNetworkProfileNatGatewayProfile? natGatewayProfile,

            string? networkMode,

            string networkPlugin,

            string? networkPluginMode,

            string? networkPolicy,

            string? outboundType,

            string? podCidr,

            ImmutableArray<string> podCidrs,

            string? serviceCidr,

            ImmutableArray<string> serviceCidrs)
        {
            DnsServiceIp = dnsServiceIp;
            DockerBridgeCidr = dockerBridgeCidr;
            EbpfDataPlane = ebpfDataPlane;
            IpVersions = ipVersions;
            LoadBalancerProfile = loadBalancerProfile;
            LoadBalancerSku = loadBalancerSku;
            NatGatewayProfile = natGatewayProfile;
            NetworkMode = networkMode;
            NetworkPlugin = networkPlugin;
            NetworkPluginMode = networkPluginMode;
            NetworkPolicy = networkPolicy;
            OutboundType = outboundType;
            PodCidr = podCidr;
            PodCidrs = podCidrs;
            ServiceCidr = serviceCidr;
            ServiceCidrs = serviceCidrs;
        }
    }
}
