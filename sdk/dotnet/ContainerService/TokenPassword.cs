// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.ContainerService
{
    /// <summary>
    /// Manages a Container Registry Token Password.
    /// 
    /// ## Import
    /// 
    /// Container Registry Token Passwords can be imported using the `resource id`, e.g.
    /// 
    /// ```sh
    /// $ pulumi import azure:containerservice/tokenPassword:TokenPassword example /subscriptions/12345678-1234-9876-4563-123456789012/resourceGroups/group1/providers/Microsoft.ContainerRegistry/registries/registry1/tokens/token1/passwords/password
    /// ```
    /// </summary>
    [AzureResourceType("azure:containerservice/tokenPassword:TokenPassword")]
    public partial class TokenPassword : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The ID of the Container Registry Token that this Container Registry Token Password resides in. Changing this forces a new Container Registry Token Password to be created.
        /// </summary>
        [Output("containerRegistryTokenId")]
        public Output<string> ContainerRegistryTokenId { get; private set; } = null!;

        /// <summary>
        /// One `password` block as defined below.
        /// </summary>
        [Output("password1")]
        public Output<Outputs.TokenPasswordPassword1> Password1 { get; private set; } = null!;

        /// <summary>
        /// One `password` block as defined below.
        /// </summary>
        [Output("password2")]
        public Output<Outputs.TokenPasswordPassword2?> Password2 { get; private set; } = null!;


        /// <summary>
        /// Create a TokenPassword resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public TokenPassword(string name, TokenPasswordArgs args, CustomResourceOptions? options = null)
            : base("azure:containerservice/tokenPassword:TokenPassword", name, args ?? new TokenPasswordArgs(), MakeResourceOptions(options, ""))
        {
        }

        private TokenPassword(string name, Input<string> id, TokenPasswordState? state = null, CustomResourceOptions? options = null)
            : base("azure:containerservice/tokenPassword:TokenPassword", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing TokenPassword resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static TokenPassword Get(string name, Input<string> id, TokenPasswordState? state = null, CustomResourceOptions? options = null)
        {
            return new TokenPassword(name, id, state, options);
        }
    }

    public sealed class TokenPasswordArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the Container Registry Token that this Container Registry Token Password resides in. Changing this forces a new Container Registry Token Password to be created.
        /// </summary>
        [Input("containerRegistryTokenId", required: true)]
        public Input<string> ContainerRegistryTokenId { get; set; } = null!;

        /// <summary>
        /// One `password` block as defined below.
        /// </summary>
        [Input("password1", required: true)]
        public Input<Inputs.TokenPasswordPassword1Args> Password1 { get; set; } = null!;

        /// <summary>
        /// One `password` block as defined below.
        /// </summary>
        [Input("password2")]
        public Input<Inputs.TokenPasswordPassword2Args>? Password2 { get; set; }

        public TokenPasswordArgs()
        {
        }
        public static new TokenPasswordArgs Empty => new TokenPasswordArgs();
    }

    public sealed class TokenPasswordState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the Container Registry Token that this Container Registry Token Password resides in. Changing this forces a new Container Registry Token Password to be created.
        /// </summary>
        [Input("containerRegistryTokenId")]
        public Input<string>? ContainerRegistryTokenId { get; set; }

        /// <summary>
        /// One `password` block as defined below.
        /// </summary>
        [Input("password1")]
        public Input<Inputs.TokenPasswordPassword1GetArgs>? Password1 { get; set; }

        /// <summary>
        /// One `password` block as defined below.
        /// </summary>
        [Input("password2")]
        public Input<Inputs.TokenPasswordPassword2GetArgs>? Password2 { get; set; }

        public TokenPasswordState()
        {
        }
        public static new TokenPasswordState Empty => new TokenPasswordState();
    }
}
