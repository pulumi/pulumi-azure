// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.ContainerService
{
    /// <summary>
    /// Manages a Node Pool within a Kubernetes Cluster
    /// 
    /// &gt; **NOTE:** Multiple Node Pools are only supported when the Kubernetes Cluster is using Virtual Machine Scale Sets.
    /// 
    /// ## Example Usage
    /// 
    /// This example provisions a basic Kubernetes Node Pool.
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Azure = Pulumi.Azure;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var exampleResourceGroup = new Azure.Core.ResourceGroup("exampleResourceGroup", new()
    ///     {
    ///         Location = "West Europe",
    ///     });
    /// 
    ///     var exampleKubernetesCluster = new Azure.ContainerService.KubernetesCluster("exampleKubernetesCluster", new()
    ///     {
    ///         Location = exampleResourceGroup.Location,
    ///         ResourceGroupName = exampleResourceGroup.Name,
    ///         DnsPrefix = "exampleaks1",
    ///         DefaultNodePool = new Azure.ContainerService.Inputs.KubernetesClusterDefaultNodePoolArgs
    ///         {
    ///             Name = "default",
    ///             NodeCount = 1,
    ///             VmSize = "Standard_D2_v2",
    ///         },
    ///         ServicePrincipal = new Azure.ContainerService.Inputs.KubernetesClusterServicePrincipalArgs
    ///         {
    ///             ClientId = "00000000-0000-0000-0000-000000000000",
    ///             ClientSecret = "00000000000000000000000000000000",
    ///         },
    ///     });
    /// 
    ///     var exampleKubernetesClusterNodePool = new Azure.ContainerService.KubernetesClusterNodePool("exampleKubernetesClusterNodePool", new()
    ///     {
    ///         KubernetesClusterId = exampleKubernetesCluster.Id,
    ///         VmSize = "Standard_DS2_v2",
    ///         NodeCount = 1,
    ///         Tags = 
    ///         {
    ///             { "Environment", "Production" },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Kubernetes Cluster Node Pools can be imported using the `resource id`, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import azure:containerservice/kubernetesClusterNodePool:KubernetesClusterNodePool pool1 /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.ContainerService/managedClusters/cluster1/agentPools/pool1
    /// ```
    /// </summary>
    [AzureResourceType("azure:containerservice/kubernetesClusterNodePool:KubernetesClusterNodePool")]
    public partial class KubernetesClusterNodePool : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Specifies the ID of the Capacity Reservation Group where this Node Pool should exist. Changing this forces a new resource to be created.
        /// </summary>
        [Output("capacityReservationGroupId")]
        public Output<string?> CapacityReservationGroupId { get; private set; } = null!;

        /// <summary>
        /// Specifies whether to trust a Custom CA.
        /// 
        /// &gt; **Note:** This requires that the Preview Feature `Microsoft.ContainerService/CustomCATrustPreview` is enabled and the Resource Provider is re-registered, see [the documentation](https://learn.microsoft.com/en-us/azure/aks/custom-certificate-authority) for more information.
        /// </summary>
        [Output("customCaTrustEnabled")]
        public Output<bool?> CustomCaTrustEnabled { get; private set; } = null!;

        /// <summary>
        /// Whether to enable [auto-scaler](https://docs.microsoft.com/azure/aks/cluster-autoscaler).
        /// </summary>
        [Output("enableAutoScaling")]
        public Output<bool?> EnableAutoScaling { get; private set; } = null!;

        /// <summary>
        /// Should the nodes in this Node Pool have host encryption enabled? Changing this forces a new resource to be created.
        /// 
        /// &gt; **NOTE:** Additional fields must be configured depending on the value of this field - see below.
        /// </summary>
        [Output("enableHostEncryption")]
        public Output<bool?> EnableHostEncryption { get; private set; } = null!;

        /// <summary>
        /// Should each node have a Public IP Address? Changing this forces a new resource to be created.
        /// </summary>
        [Output("enableNodePublicIp")]
        public Output<bool?> EnableNodePublicIp { get; private set; } = null!;

        /// <summary>
        /// The Eviction Policy which should be used for Virtual Machines within the Virtual Machine Scale Set powering this Node Pool. Possible values are `Deallocate` and `Delete`. Changing this forces a new resource to be created.
        /// 
        /// &gt; **Note:** An Eviction Policy can only be configured when `priority` is set to `Spot` and will default to `Delete` unless otherwise specified.
        /// </summary>
        [Output("evictionPolicy")]
        public Output<string?> EvictionPolicy { get; private set; } = null!;

        /// <summary>
        /// Should the nodes in this Node Pool have Federal Information Processing Standard enabled? Changing this forces a new resource to be created.
        /// 
        /// &gt; **Note:** FIPS support is in Public Preview - more information and details on how to opt into the Preview can be found in [this article](https://docs.microsoft.com/azure/aks/use-multiple-node-pools#add-a-fips-enabled-node-pool-preview).
        /// </summary>
        [Output("fipsEnabled")]
        public Output<bool?> FipsEnabled { get; private set; } = null!;

        /// <summary>
        /// Specifies the GPU MIG instance profile for supported GPU VM SKU. The allowed values are `MIG1g`, `MIG2g`, `MIG3g`, `MIG4g` and `MIG7g`. Changing this forces a new resource to be created.
        /// </summary>
        [Output("gpuInstance")]
        public Output<string?> GpuInstance { get; private set; } = null!;

        /// <summary>
        /// The fully qualified resource ID of the Dedicated Host Group to provision virtual machines from. Changing this forces a new resource to be created.
        /// </summary>
        [Output("hostGroupId")]
        public Output<string?> HostGroupId { get; private set; } = null!;

        /// <summary>
        /// A `kubelet_config` block as defined below. Changing this forces a new resource to be created.
        /// </summary>
        [Output("kubeletConfig")]
        public Output<Outputs.KubernetesClusterNodePoolKubeletConfig?> KubeletConfig { get; private set; } = null!;

        /// <summary>
        /// The type of disk used by kubelet. Possible values are `OS` and `Temporary`.
        /// </summary>
        [Output("kubeletDiskType")]
        public Output<string> KubeletDiskType { get; private set; } = null!;

        /// <summary>
        /// The ID of the Kubernetes Cluster where this Node Pool should exist. Changing this forces a new resource to be created.
        /// 
        /// &gt; **NOTE:** The type of Default Node Pool for the Kubernetes Cluster must be `VirtualMachineScaleSets` to attach multiple node pools.
        /// </summary>
        [Output("kubernetesClusterId")]
        public Output<string> KubernetesClusterId { get; private set; } = null!;

        /// <summary>
        /// A `linux_os_config` block as defined below. Changing this forces a new resource to be created.
        /// </summary>
        [Output("linuxOsConfig")]
        public Output<Outputs.KubernetesClusterNodePoolLinuxOsConfig?> LinuxOsConfig { get; private set; } = null!;

        /// <summary>
        /// The maximum number of nodes which should exist within this Node Pool. Valid values are between `0` and `1000` and must be greater than or equal to `min_count`.
        /// </summary>
        [Output("maxCount")]
        public Output<int?> MaxCount { get; private set; } = null!;

        /// <summary>
        /// The maximum number of pods that can run on each agent. Changing this forces a new resource to be created.
        /// </summary>
        [Output("maxPods")]
        public Output<int> MaxPods { get; private set; } = null!;

        /// <summary>
        /// A base64-encoded string which will be written to /etc/motd after decoding. This allows customization of the message of the day for Linux nodes. It cannot be specified for Windows nodes and must be a static string (i.e. will be printed raw and not executed as a script). Changing this forces a new resource to be created.
        /// </summary>
        [Output("messageOfTheDay")]
        public Output<string?> MessageOfTheDay { get; private set; } = null!;

        /// <summary>
        /// The minimum number of nodes which should exist within this Node Pool. Valid values are between `0` and `1000` and must be less than or equal to `max_count`.
        /// </summary>
        [Output("minCount")]
        public Output<int?> MinCount { get; private set; } = null!;

        /// <summary>
        /// Should this Node Pool be used for System or User resources? Possible values are `System` and `User`. Defaults to `User`.
        /// </summary>
        [Output("mode")]
        public Output<string?> Mode { get; private set; } = null!;

        /// <summary>
        /// The name of the Node Pool which should be created within the Kubernetes Cluster. Changing this forces a new resource to be created.
        /// 
        /// &gt; **NOTE:** A Windows Node Pool cannot have a `name` longer than 6 characters.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The number of nodes which should exist within this Node Pool. Valid values are between `0` and `1000` (inclusive) for user pools and between `1` and `1000` (inclusive) for system pools.
        /// </summary>
        [Output("nodeCount")]
        public Output<int> NodeCount { get; private set; } = null!;

        /// <summary>
        /// A map of Kubernetes labels which should be applied to nodes in this Node Pool.
        /// </summary>
        [Output("nodeLabels")]
        public Output<ImmutableDictionary<string, string>> NodeLabels { get; private set; } = null!;

        /// <summary>
        /// A `node_network_profile` block as documented below.
        /// </summary>
        [Output("nodeNetworkProfile")]
        public Output<Outputs.KubernetesClusterNodePoolNodeNetworkProfile?> NodeNetworkProfile { get; private set; } = null!;

        /// <summary>
        /// Resource ID for the Public IP Addresses Prefix for the nodes in this Node Pool. `enable_node_public_ip` should be `true`. Changing this forces a new resource to be created.
        /// </summary>
        [Output("nodePublicIpPrefixId")]
        public Output<string?> NodePublicIpPrefixId { get; private set; } = null!;

        /// <summary>
        /// A list of Kubernetes taints which should be applied to nodes in the agent pool (e.g `key=value:NoSchedule`). Changing this forces a new resource to be created.
        /// </summary>
        [Output("nodeTaints")]
        public Output<ImmutableArray<string>> NodeTaints { get; private set; } = null!;

        /// <summary>
        /// Version of Kubernetes used for the Agents. If not specified, the latest recommended version will be used at provisioning time (but won't auto-upgrade). AKS does not require an exact patch version to be specified, minor version aliases such as `1.22` are also supported. - The minor version's latest GA patch is automatically chosen in that case. More details can be found in [the documentation](https://docs.microsoft.com/en-us/azure/aks/supported-kubernetes-versions?tabs=azure-cli#alias-minor-version).
        /// 
        /// &gt; **Note:** This version must be supported by the Kubernetes Cluster - as such the version of Kubernetes used on the Cluster/Control Plane may need to be upgraded first.
        /// </summary>
        [Output("orchestratorVersion")]
        public Output<string> OrchestratorVersion { get; private set; } = null!;

        /// <summary>
        /// The Agent Operating System disk size in GB. Changing this forces a new resource to be created.
        /// </summary>
        [Output("osDiskSizeGb")]
        public Output<int> OsDiskSizeGb { get; private set; } = null!;

        /// <summary>
        /// The type of disk which should be used for the Operating System. Possible values are `Ephemeral` and `Managed`. Defaults to `Managed`. Changing this forces a new resource to be created.
        /// </summary>
        [Output("osDiskType")]
        public Output<string?> OsDiskType { get; private set; } = null!;

        /// <summary>
        /// Specifies the OS SKU used by the agent pool. Possible values are `AzureLinux`, `CBLMariner`, `Mariner`, `Ubuntu`, `Windows2019` and `Windows2022`. If not specified, the default is `Ubuntu` if OSType=Linux or `Windows2019` if OSType=Windows. And the default Windows OSSKU will be changed to `Windows2022` after Windows2019 is deprecated. Changing this forces a new resource to be created.
        /// </summary>
        [Output("osSku")]
        public Output<string> OsSku { get; private set; } = null!;

        /// <summary>
        /// The Operating System which should be used for this Node Pool. Changing this forces a new resource to be created. Possible values are `Linux` and `Windows`. Defaults to `Linux`.
        /// </summary>
        [Output("osType")]
        public Output<string?> OsType { get; private set; } = null!;

        /// <summary>
        /// The ID of the Subnet where the pods in the Node Pool should exist. Changing this forces a new resource to be created.
        /// </summary>
        [Output("podSubnetId")]
        public Output<string?> PodSubnetId { get; private set; } = null!;

        /// <summary>
        /// The Priority for Virtual Machines within the Virtual Machine Scale Set that powers this Node Pool. Possible values are `Regular` and `Spot`. Defaults to `Regular`. Changing this forces a new resource to be created.
        /// </summary>
        [Output("priority")]
        public Output<string?> Priority { get; private set; } = null!;

        /// <summary>
        /// The ID of the Proximity Placement Group where the Virtual Machine Scale Set that powers this Node Pool will be placed. Changing this forces a new resource to be created.
        /// 
        /// &gt; **Note:** When setting `priority` to Spot - you must configure an `eviction_policy`, `spot_max_price` and add the applicable `node_labels` and `node_taints` [as per the Azure Documentation](https://docs.microsoft.com/azure/aks/spot-node-pool).
        /// </summary>
        [Output("proximityPlacementGroupId")]
        public Output<string?> ProximityPlacementGroupId { get; private set; } = null!;

        /// <summary>
        /// Specifies how the node pool should deal with scaled-down nodes. Allowed values are `Delete` and `Deallocate`. Defaults to `Delete`.
        /// </summary>
        [Output("scaleDownMode")]
        public Output<string?> ScaleDownMode { get; private set; } = null!;

        /// <summary>
        /// The ID of the Snapshot which should be used to create this Node Pool. Changing this forces a new resource to be created.
        /// </summary>
        [Output("snapshotId")]
        public Output<string?> SnapshotId { get; private set; } = null!;

        /// <summary>
        /// The maximum price you're willing to pay in USD per Virtual Machine. Valid values are `-1` (the current on-demand price for a Virtual Machine) or a positive value with up to five decimal places. Changing this forces a new resource to be created.
        /// 
        /// &gt; **Note:** This field can only be configured when `priority` is set to `Spot`.
        /// </summary>
        [Output("spotMaxPrice")]
        public Output<double?> SpotMaxPrice { get; private set; } = null!;

        /// <summary>
        /// A mapping of tags to assign to the resource.
        /// 
        /// &gt; At this time there's a bug in the AKS API where Tags for a Node Pool are not stored in the correct case - you may wish to use [`ignoreChanges`](https://www.pulumi.com/docs/intro/concepts/programming-model/#ignorechanges) functionality to ignore changes to the casing until this is fixed in the AKS API.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// Used to specify whether the UltraSSD is enabled in the Node Pool. Defaults to `false`. See [the documentation](https://docs.microsoft.com/azure/aks/use-ultra-disks) for more information. Changing this forces a new resource to be created.
        /// </summary>
        [Output("ultraSsdEnabled")]
        public Output<bool?> UltraSsdEnabled { get; private set; } = null!;

        /// <summary>
        /// A `upgrade_settings` block as documented below.
        /// </summary>
        [Output("upgradeSettings")]
        public Output<Outputs.KubernetesClusterNodePoolUpgradeSettings?> UpgradeSettings { get; private set; } = null!;

        /// <summary>
        /// The SKU which should be used for the Virtual Machines used in this Node Pool. Changing this forces a new resource to be created.
        /// </summary>
        [Output("vmSize")]
        public Output<string> VmSize { get; private set; } = null!;

        /// <summary>
        /// The ID of the Subnet where this Node Pool should exist. Changing this forces a new resource to be created.
        /// 
        /// &gt; **NOTE:** A route table must be configured on this Subnet.
        /// </summary>
        [Output("vnetSubnetId")]
        public Output<string?> VnetSubnetId { get; private set; } = null!;

        /// <summary>
        /// A `windows_profile` block as documented below. Changing this forces a new resource to be created.
        /// </summary>
        [Output("windowsProfile")]
        public Output<Outputs.KubernetesClusterNodePoolWindowsProfile?> WindowsProfile { get; private set; } = null!;

        /// <summary>
        /// Used to specify the workload runtime. Allowed values are `OCIContainer`, `WasmWasi` and `KataMshvVmIsolation`.
        /// 
        /// &gt; **Note:** WebAssembly System Interface node pools are in Public Preview - more information and details on how to opt into the preview can be found in [this article](https://docs.microsoft.com/azure/aks/use-wasi-node-pools)
        /// 
        /// &gt; **Note:** Pod Sandboxing / KataVM Isolation node pools are in Public Preview - more information and details on how to opt into the preview can be found in [this article](https://learn.microsoft.com/azure/aks/use-pod-sandboxing)
        /// </summary>
        [Output("workloadRuntime")]
        public Output<string?> WorkloadRuntime { get; private set; } = null!;

        /// <summary>
        /// Specifies a list of Availability Zones in which this Kubernetes Cluster Node Pool should be located. Changing this forces a new Kubernetes Cluster Node Pool to be created.
        /// </summary>
        [Output("zones")]
        public Output<ImmutableArray<string>> Zones { get; private set; } = null!;


        /// <summary>
        /// Create a KubernetesClusterNodePool resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public KubernetesClusterNodePool(string name, KubernetesClusterNodePoolArgs args, CustomResourceOptions? options = null)
            : base("azure:containerservice/kubernetesClusterNodePool:KubernetesClusterNodePool", name, args ?? new KubernetesClusterNodePoolArgs(), MakeResourceOptions(options, ""))
        {
        }

        private KubernetesClusterNodePool(string name, Input<string> id, KubernetesClusterNodePoolState? state = null, CustomResourceOptions? options = null)
            : base("azure:containerservice/kubernetesClusterNodePool:KubernetesClusterNodePool", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing KubernetesClusterNodePool resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static KubernetesClusterNodePool Get(string name, Input<string> id, KubernetesClusterNodePoolState? state = null, CustomResourceOptions? options = null)
        {
            return new KubernetesClusterNodePool(name, id, state, options);
        }
    }

    public sealed class KubernetesClusterNodePoolArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies the ID of the Capacity Reservation Group where this Node Pool should exist. Changing this forces a new resource to be created.
        /// </summary>
        [Input("capacityReservationGroupId")]
        public Input<string>? CapacityReservationGroupId { get; set; }

        /// <summary>
        /// Specifies whether to trust a Custom CA.
        /// 
        /// &gt; **Note:** This requires that the Preview Feature `Microsoft.ContainerService/CustomCATrustPreview` is enabled and the Resource Provider is re-registered, see [the documentation](https://learn.microsoft.com/en-us/azure/aks/custom-certificate-authority) for more information.
        /// </summary>
        [Input("customCaTrustEnabled")]
        public Input<bool>? CustomCaTrustEnabled { get; set; }

        /// <summary>
        /// Whether to enable [auto-scaler](https://docs.microsoft.com/azure/aks/cluster-autoscaler).
        /// </summary>
        [Input("enableAutoScaling")]
        public Input<bool>? EnableAutoScaling { get; set; }

        /// <summary>
        /// Should the nodes in this Node Pool have host encryption enabled? Changing this forces a new resource to be created.
        /// 
        /// &gt; **NOTE:** Additional fields must be configured depending on the value of this field - see below.
        /// </summary>
        [Input("enableHostEncryption")]
        public Input<bool>? EnableHostEncryption { get; set; }

        /// <summary>
        /// Should each node have a Public IP Address? Changing this forces a new resource to be created.
        /// </summary>
        [Input("enableNodePublicIp")]
        public Input<bool>? EnableNodePublicIp { get; set; }

        /// <summary>
        /// The Eviction Policy which should be used for Virtual Machines within the Virtual Machine Scale Set powering this Node Pool. Possible values are `Deallocate` and `Delete`. Changing this forces a new resource to be created.
        /// 
        /// &gt; **Note:** An Eviction Policy can only be configured when `priority` is set to `Spot` and will default to `Delete` unless otherwise specified.
        /// </summary>
        [Input("evictionPolicy")]
        public Input<string>? EvictionPolicy { get; set; }

        /// <summary>
        /// Should the nodes in this Node Pool have Federal Information Processing Standard enabled? Changing this forces a new resource to be created.
        /// 
        /// &gt; **Note:** FIPS support is in Public Preview - more information and details on how to opt into the Preview can be found in [this article](https://docs.microsoft.com/azure/aks/use-multiple-node-pools#add-a-fips-enabled-node-pool-preview).
        /// </summary>
        [Input("fipsEnabled")]
        public Input<bool>? FipsEnabled { get; set; }

        /// <summary>
        /// Specifies the GPU MIG instance profile for supported GPU VM SKU. The allowed values are `MIG1g`, `MIG2g`, `MIG3g`, `MIG4g` and `MIG7g`. Changing this forces a new resource to be created.
        /// </summary>
        [Input("gpuInstance")]
        public Input<string>? GpuInstance { get; set; }

        /// <summary>
        /// The fully qualified resource ID of the Dedicated Host Group to provision virtual machines from. Changing this forces a new resource to be created.
        /// </summary>
        [Input("hostGroupId")]
        public Input<string>? HostGroupId { get; set; }

        /// <summary>
        /// A `kubelet_config` block as defined below. Changing this forces a new resource to be created.
        /// </summary>
        [Input("kubeletConfig")]
        public Input<Inputs.KubernetesClusterNodePoolKubeletConfigArgs>? KubeletConfig { get; set; }

        /// <summary>
        /// The type of disk used by kubelet. Possible values are `OS` and `Temporary`.
        /// </summary>
        [Input("kubeletDiskType")]
        public Input<string>? KubeletDiskType { get; set; }

        /// <summary>
        /// The ID of the Kubernetes Cluster where this Node Pool should exist. Changing this forces a new resource to be created.
        /// 
        /// &gt; **NOTE:** The type of Default Node Pool for the Kubernetes Cluster must be `VirtualMachineScaleSets` to attach multiple node pools.
        /// </summary>
        [Input("kubernetesClusterId", required: true)]
        public Input<string> KubernetesClusterId { get; set; } = null!;

        /// <summary>
        /// A `linux_os_config` block as defined below. Changing this forces a new resource to be created.
        /// </summary>
        [Input("linuxOsConfig")]
        public Input<Inputs.KubernetesClusterNodePoolLinuxOsConfigArgs>? LinuxOsConfig { get; set; }

        /// <summary>
        /// The maximum number of nodes which should exist within this Node Pool. Valid values are between `0` and `1000` and must be greater than or equal to `min_count`.
        /// </summary>
        [Input("maxCount")]
        public Input<int>? MaxCount { get; set; }

        /// <summary>
        /// The maximum number of pods that can run on each agent. Changing this forces a new resource to be created.
        /// </summary>
        [Input("maxPods")]
        public Input<int>? MaxPods { get; set; }

        /// <summary>
        /// A base64-encoded string which will be written to /etc/motd after decoding. This allows customization of the message of the day for Linux nodes. It cannot be specified for Windows nodes and must be a static string (i.e. will be printed raw and not executed as a script). Changing this forces a new resource to be created.
        /// </summary>
        [Input("messageOfTheDay")]
        public Input<string>? MessageOfTheDay { get; set; }

        /// <summary>
        /// The minimum number of nodes which should exist within this Node Pool. Valid values are between `0` and `1000` and must be less than or equal to `max_count`.
        /// </summary>
        [Input("minCount")]
        public Input<int>? MinCount { get; set; }

        /// <summary>
        /// Should this Node Pool be used for System or User resources? Possible values are `System` and `User`. Defaults to `User`.
        /// </summary>
        [Input("mode")]
        public Input<string>? Mode { get; set; }

        /// <summary>
        /// The name of the Node Pool which should be created within the Kubernetes Cluster. Changing this forces a new resource to be created.
        /// 
        /// &gt; **NOTE:** A Windows Node Pool cannot have a `name` longer than 6 characters.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The number of nodes which should exist within this Node Pool. Valid values are between `0` and `1000` (inclusive) for user pools and between `1` and `1000` (inclusive) for system pools.
        /// </summary>
        [Input("nodeCount")]
        public Input<int>? NodeCount { get; set; }

        [Input("nodeLabels")]
        private InputMap<string>? _nodeLabels;

        /// <summary>
        /// A map of Kubernetes labels which should be applied to nodes in this Node Pool.
        /// </summary>
        public InputMap<string> NodeLabels
        {
            get => _nodeLabels ?? (_nodeLabels = new InputMap<string>());
            set => _nodeLabels = value;
        }

        /// <summary>
        /// A `node_network_profile` block as documented below.
        /// </summary>
        [Input("nodeNetworkProfile")]
        public Input<Inputs.KubernetesClusterNodePoolNodeNetworkProfileArgs>? NodeNetworkProfile { get; set; }

        /// <summary>
        /// Resource ID for the Public IP Addresses Prefix for the nodes in this Node Pool. `enable_node_public_ip` should be `true`. Changing this forces a new resource to be created.
        /// </summary>
        [Input("nodePublicIpPrefixId")]
        public Input<string>? NodePublicIpPrefixId { get; set; }

        [Input("nodeTaints")]
        private InputList<string>? _nodeTaints;

        /// <summary>
        /// A list of Kubernetes taints which should be applied to nodes in the agent pool (e.g `key=value:NoSchedule`). Changing this forces a new resource to be created.
        /// </summary>
        public InputList<string> NodeTaints
        {
            get => _nodeTaints ?? (_nodeTaints = new InputList<string>());
            set => _nodeTaints = value;
        }

        /// <summary>
        /// Version of Kubernetes used for the Agents. If not specified, the latest recommended version will be used at provisioning time (but won't auto-upgrade). AKS does not require an exact patch version to be specified, minor version aliases such as `1.22` are also supported. - The minor version's latest GA patch is automatically chosen in that case. More details can be found in [the documentation](https://docs.microsoft.com/en-us/azure/aks/supported-kubernetes-versions?tabs=azure-cli#alias-minor-version).
        /// 
        /// &gt; **Note:** This version must be supported by the Kubernetes Cluster - as such the version of Kubernetes used on the Cluster/Control Plane may need to be upgraded first.
        /// </summary>
        [Input("orchestratorVersion")]
        public Input<string>? OrchestratorVersion { get; set; }

        /// <summary>
        /// The Agent Operating System disk size in GB. Changing this forces a new resource to be created.
        /// </summary>
        [Input("osDiskSizeGb")]
        public Input<int>? OsDiskSizeGb { get; set; }

        /// <summary>
        /// The type of disk which should be used for the Operating System. Possible values are `Ephemeral` and `Managed`. Defaults to `Managed`. Changing this forces a new resource to be created.
        /// </summary>
        [Input("osDiskType")]
        public Input<string>? OsDiskType { get; set; }

        /// <summary>
        /// Specifies the OS SKU used by the agent pool. Possible values are `AzureLinux`, `CBLMariner`, `Mariner`, `Ubuntu`, `Windows2019` and `Windows2022`. If not specified, the default is `Ubuntu` if OSType=Linux or `Windows2019` if OSType=Windows. And the default Windows OSSKU will be changed to `Windows2022` after Windows2019 is deprecated. Changing this forces a new resource to be created.
        /// </summary>
        [Input("osSku")]
        public Input<string>? OsSku { get; set; }

        /// <summary>
        /// The Operating System which should be used for this Node Pool. Changing this forces a new resource to be created. Possible values are `Linux` and `Windows`. Defaults to `Linux`.
        /// </summary>
        [Input("osType")]
        public Input<string>? OsType { get; set; }

        /// <summary>
        /// The ID of the Subnet where the pods in the Node Pool should exist. Changing this forces a new resource to be created.
        /// </summary>
        [Input("podSubnetId")]
        public Input<string>? PodSubnetId { get; set; }

        /// <summary>
        /// The Priority for Virtual Machines within the Virtual Machine Scale Set that powers this Node Pool. Possible values are `Regular` and `Spot`. Defaults to `Regular`. Changing this forces a new resource to be created.
        /// </summary>
        [Input("priority")]
        public Input<string>? Priority { get; set; }

        /// <summary>
        /// The ID of the Proximity Placement Group where the Virtual Machine Scale Set that powers this Node Pool will be placed. Changing this forces a new resource to be created.
        /// 
        /// &gt; **Note:** When setting `priority` to Spot - you must configure an `eviction_policy`, `spot_max_price` and add the applicable `node_labels` and `node_taints` [as per the Azure Documentation](https://docs.microsoft.com/azure/aks/spot-node-pool).
        /// </summary>
        [Input("proximityPlacementGroupId")]
        public Input<string>? ProximityPlacementGroupId { get; set; }

        /// <summary>
        /// Specifies how the node pool should deal with scaled-down nodes. Allowed values are `Delete` and `Deallocate`. Defaults to `Delete`.
        /// </summary>
        [Input("scaleDownMode")]
        public Input<string>? ScaleDownMode { get; set; }

        /// <summary>
        /// The ID of the Snapshot which should be used to create this Node Pool. Changing this forces a new resource to be created.
        /// </summary>
        [Input("snapshotId")]
        public Input<string>? SnapshotId { get; set; }

        /// <summary>
        /// The maximum price you're willing to pay in USD per Virtual Machine. Valid values are `-1` (the current on-demand price for a Virtual Machine) or a positive value with up to five decimal places. Changing this forces a new resource to be created.
        /// 
        /// &gt; **Note:** This field can only be configured when `priority` is set to `Spot`.
        /// </summary>
        [Input("spotMaxPrice")]
        public Input<double>? SpotMaxPrice { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// A mapping of tags to assign to the resource.
        /// 
        /// &gt; At this time there's a bug in the AKS API where Tags for a Node Pool are not stored in the correct case - you may wish to use [`ignoreChanges`](https://www.pulumi.com/docs/intro/concepts/programming-model/#ignorechanges) functionality to ignore changes to the casing until this is fixed in the AKS API.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        /// <summary>
        /// Used to specify whether the UltraSSD is enabled in the Node Pool. Defaults to `false`. See [the documentation](https://docs.microsoft.com/azure/aks/use-ultra-disks) for more information. Changing this forces a new resource to be created.
        /// </summary>
        [Input("ultraSsdEnabled")]
        public Input<bool>? UltraSsdEnabled { get; set; }

        /// <summary>
        /// A `upgrade_settings` block as documented below.
        /// </summary>
        [Input("upgradeSettings")]
        public Input<Inputs.KubernetesClusterNodePoolUpgradeSettingsArgs>? UpgradeSettings { get; set; }

        /// <summary>
        /// The SKU which should be used for the Virtual Machines used in this Node Pool. Changing this forces a new resource to be created.
        /// </summary>
        [Input("vmSize", required: true)]
        public Input<string> VmSize { get; set; } = null!;

        /// <summary>
        /// The ID of the Subnet where this Node Pool should exist. Changing this forces a new resource to be created.
        /// 
        /// &gt; **NOTE:** A route table must be configured on this Subnet.
        /// </summary>
        [Input("vnetSubnetId")]
        public Input<string>? VnetSubnetId { get; set; }

        /// <summary>
        /// A `windows_profile` block as documented below. Changing this forces a new resource to be created.
        /// </summary>
        [Input("windowsProfile")]
        public Input<Inputs.KubernetesClusterNodePoolWindowsProfileArgs>? WindowsProfile { get; set; }

        /// <summary>
        /// Used to specify the workload runtime. Allowed values are `OCIContainer`, `WasmWasi` and `KataMshvVmIsolation`.
        /// 
        /// &gt; **Note:** WebAssembly System Interface node pools are in Public Preview - more information and details on how to opt into the preview can be found in [this article](https://docs.microsoft.com/azure/aks/use-wasi-node-pools)
        /// 
        /// &gt; **Note:** Pod Sandboxing / KataVM Isolation node pools are in Public Preview - more information and details on how to opt into the preview can be found in [this article](https://learn.microsoft.com/azure/aks/use-pod-sandboxing)
        /// </summary>
        [Input("workloadRuntime")]
        public Input<string>? WorkloadRuntime { get; set; }

        [Input("zones")]
        private InputList<string>? _zones;

        /// <summary>
        /// Specifies a list of Availability Zones in which this Kubernetes Cluster Node Pool should be located. Changing this forces a new Kubernetes Cluster Node Pool to be created.
        /// </summary>
        public InputList<string> Zones
        {
            get => _zones ?? (_zones = new InputList<string>());
            set => _zones = value;
        }

        public KubernetesClusterNodePoolArgs()
        {
        }
        public static new KubernetesClusterNodePoolArgs Empty => new KubernetesClusterNodePoolArgs();
    }

    public sealed class KubernetesClusterNodePoolState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies the ID of the Capacity Reservation Group where this Node Pool should exist. Changing this forces a new resource to be created.
        /// </summary>
        [Input("capacityReservationGroupId")]
        public Input<string>? CapacityReservationGroupId { get; set; }

        /// <summary>
        /// Specifies whether to trust a Custom CA.
        /// 
        /// &gt; **Note:** This requires that the Preview Feature `Microsoft.ContainerService/CustomCATrustPreview` is enabled and the Resource Provider is re-registered, see [the documentation](https://learn.microsoft.com/en-us/azure/aks/custom-certificate-authority) for more information.
        /// </summary>
        [Input("customCaTrustEnabled")]
        public Input<bool>? CustomCaTrustEnabled { get; set; }

        /// <summary>
        /// Whether to enable [auto-scaler](https://docs.microsoft.com/azure/aks/cluster-autoscaler).
        /// </summary>
        [Input("enableAutoScaling")]
        public Input<bool>? EnableAutoScaling { get; set; }

        /// <summary>
        /// Should the nodes in this Node Pool have host encryption enabled? Changing this forces a new resource to be created.
        /// 
        /// &gt; **NOTE:** Additional fields must be configured depending on the value of this field - see below.
        /// </summary>
        [Input("enableHostEncryption")]
        public Input<bool>? EnableHostEncryption { get; set; }

        /// <summary>
        /// Should each node have a Public IP Address? Changing this forces a new resource to be created.
        /// </summary>
        [Input("enableNodePublicIp")]
        public Input<bool>? EnableNodePublicIp { get; set; }

        /// <summary>
        /// The Eviction Policy which should be used for Virtual Machines within the Virtual Machine Scale Set powering this Node Pool. Possible values are `Deallocate` and `Delete`. Changing this forces a new resource to be created.
        /// 
        /// &gt; **Note:** An Eviction Policy can only be configured when `priority` is set to `Spot` and will default to `Delete` unless otherwise specified.
        /// </summary>
        [Input("evictionPolicy")]
        public Input<string>? EvictionPolicy { get; set; }

        /// <summary>
        /// Should the nodes in this Node Pool have Federal Information Processing Standard enabled? Changing this forces a new resource to be created.
        /// 
        /// &gt; **Note:** FIPS support is in Public Preview - more information and details on how to opt into the Preview can be found in [this article](https://docs.microsoft.com/azure/aks/use-multiple-node-pools#add-a-fips-enabled-node-pool-preview).
        /// </summary>
        [Input("fipsEnabled")]
        public Input<bool>? FipsEnabled { get; set; }

        /// <summary>
        /// Specifies the GPU MIG instance profile for supported GPU VM SKU. The allowed values are `MIG1g`, `MIG2g`, `MIG3g`, `MIG4g` and `MIG7g`. Changing this forces a new resource to be created.
        /// </summary>
        [Input("gpuInstance")]
        public Input<string>? GpuInstance { get; set; }

        /// <summary>
        /// The fully qualified resource ID of the Dedicated Host Group to provision virtual machines from. Changing this forces a new resource to be created.
        /// </summary>
        [Input("hostGroupId")]
        public Input<string>? HostGroupId { get; set; }

        /// <summary>
        /// A `kubelet_config` block as defined below. Changing this forces a new resource to be created.
        /// </summary>
        [Input("kubeletConfig")]
        public Input<Inputs.KubernetesClusterNodePoolKubeletConfigGetArgs>? KubeletConfig { get; set; }

        /// <summary>
        /// The type of disk used by kubelet. Possible values are `OS` and `Temporary`.
        /// </summary>
        [Input("kubeletDiskType")]
        public Input<string>? KubeletDiskType { get; set; }

        /// <summary>
        /// The ID of the Kubernetes Cluster where this Node Pool should exist. Changing this forces a new resource to be created.
        /// 
        /// &gt; **NOTE:** The type of Default Node Pool for the Kubernetes Cluster must be `VirtualMachineScaleSets` to attach multiple node pools.
        /// </summary>
        [Input("kubernetesClusterId")]
        public Input<string>? KubernetesClusterId { get; set; }

        /// <summary>
        /// A `linux_os_config` block as defined below. Changing this forces a new resource to be created.
        /// </summary>
        [Input("linuxOsConfig")]
        public Input<Inputs.KubernetesClusterNodePoolLinuxOsConfigGetArgs>? LinuxOsConfig { get; set; }

        /// <summary>
        /// The maximum number of nodes which should exist within this Node Pool. Valid values are between `0` and `1000` and must be greater than or equal to `min_count`.
        /// </summary>
        [Input("maxCount")]
        public Input<int>? MaxCount { get; set; }

        /// <summary>
        /// The maximum number of pods that can run on each agent. Changing this forces a new resource to be created.
        /// </summary>
        [Input("maxPods")]
        public Input<int>? MaxPods { get; set; }

        /// <summary>
        /// A base64-encoded string which will be written to /etc/motd after decoding. This allows customization of the message of the day for Linux nodes. It cannot be specified for Windows nodes and must be a static string (i.e. will be printed raw and not executed as a script). Changing this forces a new resource to be created.
        /// </summary>
        [Input("messageOfTheDay")]
        public Input<string>? MessageOfTheDay { get; set; }

        /// <summary>
        /// The minimum number of nodes which should exist within this Node Pool. Valid values are between `0` and `1000` and must be less than or equal to `max_count`.
        /// </summary>
        [Input("minCount")]
        public Input<int>? MinCount { get; set; }

        /// <summary>
        /// Should this Node Pool be used for System or User resources? Possible values are `System` and `User`. Defaults to `User`.
        /// </summary>
        [Input("mode")]
        public Input<string>? Mode { get; set; }

        /// <summary>
        /// The name of the Node Pool which should be created within the Kubernetes Cluster. Changing this forces a new resource to be created.
        /// 
        /// &gt; **NOTE:** A Windows Node Pool cannot have a `name` longer than 6 characters.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The number of nodes which should exist within this Node Pool. Valid values are between `0` and `1000` (inclusive) for user pools and between `1` and `1000` (inclusive) for system pools.
        /// </summary>
        [Input("nodeCount")]
        public Input<int>? NodeCount { get; set; }

        [Input("nodeLabels")]
        private InputMap<string>? _nodeLabels;

        /// <summary>
        /// A map of Kubernetes labels which should be applied to nodes in this Node Pool.
        /// </summary>
        public InputMap<string> NodeLabels
        {
            get => _nodeLabels ?? (_nodeLabels = new InputMap<string>());
            set => _nodeLabels = value;
        }

        /// <summary>
        /// A `node_network_profile` block as documented below.
        /// </summary>
        [Input("nodeNetworkProfile")]
        public Input<Inputs.KubernetesClusterNodePoolNodeNetworkProfileGetArgs>? NodeNetworkProfile { get; set; }

        /// <summary>
        /// Resource ID for the Public IP Addresses Prefix for the nodes in this Node Pool. `enable_node_public_ip` should be `true`. Changing this forces a new resource to be created.
        /// </summary>
        [Input("nodePublicIpPrefixId")]
        public Input<string>? NodePublicIpPrefixId { get; set; }

        [Input("nodeTaints")]
        private InputList<string>? _nodeTaints;

        /// <summary>
        /// A list of Kubernetes taints which should be applied to nodes in the agent pool (e.g `key=value:NoSchedule`). Changing this forces a new resource to be created.
        /// </summary>
        public InputList<string> NodeTaints
        {
            get => _nodeTaints ?? (_nodeTaints = new InputList<string>());
            set => _nodeTaints = value;
        }

        /// <summary>
        /// Version of Kubernetes used for the Agents. If not specified, the latest recommended version will be used at provisioning time (but won't auto-upgrade). AKS does not require an exact patch version to be specified, minor version aliases such as `1.22` are also supported. - The minor version's latest GA patch is automatically chosen in that case. More details can be found in [the documentation](https://docs.microsoft.com/en-us/azure/aks/supported-kubernetes-versions?tabs=azure-cli#alias-minor-version).
        /// 
        /// &gt; **Note:** This version must be supported by the Kubernetes Cluster - as such the version of Kubernetes used on the Cluster/Control Plane may need to be upgraded first.
        /// </summary>
        [Input("orchestratorVersion")]
        public Input<string>? OrchestratorVersion { get; set; }

        /// <summary>
        /// The Agent Operating System disk size in GB. Changing this forces a new resource to be created.
        /// </summary>
        [Input("osDiskSizeGb")]
        public Input<int>? OsDiskSizeGb { get; set; }

        /// <summary>
        /// The type of disk which should be used for the Operating System. Possible values are `Ephemeral` and `Managed`. Defaults to `Managed`. Changing this forces a new resource to be created.
        /// </summary>
        [Input("osDiskType")]
        public Input<string>? OsDiskType { get; set; }

        /// <summary>
        /// Specifies the OS SKU used by the agent pool. Possible values are `AzureLinux`, `CBLMariner`, `Mariner`, `Ubuntu`, `Windows2019` and `Windows2022`. If not specified, the default is `Ubuntu` if OSType=Linux or `Windows2019` if OSType=Windows. And the default Windows OSSKU will be changed to `Windows2022` after Windows2019 is deprecated. Changing this forces a new resource to be created.
        /// </summary>
        [Input("osSku")]
        public Input<string>? OsSku { get; set; }

        /// <summary>
        /// The Operating System which should be used for this Node Pool. Changing this forces a new resource to be created. Possible values are `Linux` and `Windows`. Defaults to `Linux`.
        /// </summary>
        [Input("osType")]
        public Input<string>? OsType { get; set; }

        /// <summary>
        /// The ID of the Subnet where the pods in the Node Pool should exist. Changing this forces a new resource to be created.
        /// </summary>
        [Input("podSubnetId")]
        public Input<string>? PodSubnetId { get; set; }

        /// <summary>
        /// The Priority for Virtual Machines within the Virtual Machine Scale Set that powers this Node Pool. Possible values are `Regular` and `Spot`. Defaults to `Regular`. Changing this forces a new resource to be created.
        /// </summary>
        [Input("priority")]
        public Input<string>? Priority { get; set; }

        /// <summary>
        /// The ID of the Proximity Placement Group where the Virtual Machine Scale Set that powers this Node Pool will be placed. Changing this forces a new resource to be created.
        /// 
        /// &gt; **Note:** When setting `priority` to Spot - you must configure an `eviction_policy`, `spot_max_price` and add the applicable `node_labels` and `node_taints` [as per the Azure Documentation](https://docs.microsoft.com/azure/aks/spot-node-pool).
        /// </summary>
        [Input("proximityPlacementGroupId")]
        public Input<string>? ProximityPlacementGroupId { get; set; }

        /// <summary>
        /// Specifies how the node pool should deal with scaled-down nodes. Allowed values are `Delete` and `Deallocate`. Defaults to `Delete`.
        /// </summary>
        [Input("scaleDownMode")]
        public Input<string>? ScaleDownMode { get; set; }

        /// <summary>
        /// The ID of the Snapshot which should be used to create this Node Pool. Changing this forces a new resource to be created.
        /// </summary>
        [Input("snapshotId")]
        public Input<string>? SnapshotId { get; set; }

        /// <summary>
        /// The maximum price you're willing to pay in USD per Virtual Machine. Valid values are `-1` (the current on-demand price for a Virtual Machine) or a positive value with up to five decimal places. Changing this forces a new resource to be created.
        /// 
        /// &gt; **Note:** This field can only be configured when `priority` is set to `Spot`.
        /// </summary>
        [Input("spotMaxPrice")]
        public Input<double>? SpotMaxPrice { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// A mapping of tags to assign to the resource.
        /// 
        /// &gt; At this time there's a bug in the AKS API where Tags for a Node Pool are not stored in the correct case - you may wish to use [`ignoreChanges`](https://www.pulumi.com/docs/intro/concepts/programming-model/#ignorechanges) functionality to ignore changes to the casing until this is fixed in the AKS API.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        /// <summary>
        /// Used to specify whether the UltraSSD is enabled in the Node Pool. Defaults to `false`. See [the documentation](https://docs.microsoft.com/azure/aks/use-ultra-disks) for more information. Changing this forces a new resource to be created.
        /// </summary>
        [Input("ultraSsdEnabled")]
        public Input<bool>? UltraSsdEnabled { get; set; }

        /// <summary>
        /// A `upgrade_settings` block as documented below.
        /// </summary>
        [Input("upgradeSettings")]
        public Input<Inputs.KubernetesClusterNodePoolUpgradeSettingsGetArgs>? UpgradeSettings { get; set; }

        /// <summary>
        /// The SKU which should be used for the Virtual Machines used in this Node Pool. Changing this forces a new resource to be created.
        /// </summary>
        [Input("vmSize")]
        public Input<string>? VmSize { get; set; }

        /// <summary>
        /// The ID of the Subnet where this Node Pool should exist. Changing this forces a new resource to be created.
        /// 
        /// &gt; **NOTE:** A route table must be configured on this Subnet.
        /// </summary>
        [Input("vnetSubnetId")]
        public Input<string>? VnetSubnetId { get; set; }

        /// <summary>
        /// A `windows_profile` block as documented below. Changing this forces a new resource to be created.
        /// </summary>
        [Input("windowsProfile")]
        public Input<Inputs.KubernetesClusterNodePoolWindowsProfileGetArgs>? WindowsProfile { get; set; }

        /// <summary>
        /// Used to specify the workload runtime. Allowed values are `OCIContainer`, `WasmWasi` and `KataMshvVmIsolation`.
        /// 
        /// &gt; **Note:** WebAssembly System Interface node pools are in Public Preview - more information and details on how to opt into the preview can be found in [this article](https://docs.microsoft.com/azure/aks/use-wasi-node-pools)
        /// 
        /// &gt; **Note:** Pod Sandboxing / KataVM Isolation node pools are in Public Preview - more information and details on how to opt into the preview can be found in [this article](https://learn.microsoft.com/azure/aks/use-pod-sandboxing)
        /// </summary>
        [Input("workloadRuntime")]
        public Input<string>? WorkloadRuntime { get; set; }

        [Input("zones")]
        private InputList<string>? _zones;

        /// <summary>
        /// Specifies a list of Availability Zones in which this Kubernetes Cluster Node Pool should be located. Changing this forces a new Kubernetes Cluster Node Pool to be created.
        /// </summary>
        public InputList<string> Zones
        {
            get => _zones ?? (_zones = new InputList<string>());
            set => _zones = value;
        }

        public KubernetesClusterNodePoolState()
        {
        }
        public static new KubernetesClusterNodePoolState Empty => new KubernetesClusterNodePoolState();
    }
}
