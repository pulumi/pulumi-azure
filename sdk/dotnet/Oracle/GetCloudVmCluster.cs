// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Oracle
{
    public static class GetCloudVmCluster
    {
        /// <summary>
        /// Use this data source to access information about an existing Cloud VM Cluster.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Azure = Pulumi.Azure;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Azure.Oracle.GetCloudVmCluster.Invoke(new()
        ///     {
        ///         Name = "existing",
        ///         ResourceGroupName = "existing",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["id"] = example.Apply(getCloudVmClusterResult =&gt; getCloudVmClusterResult.Id),
        ///     };
        /// });
        /// ```
        /// 
        /// ## API Providers
        /// 
        /// &lt;!-- This section is generated, changes will be overwritten --&gt;
        /// This data source uses the following Azure API Providers:
        /// 
        /// * `Oracle.Database`: 2024-06-01
        /// </summary>
        public static Task<GetCloudVmClusterResult> InvokeAsync(GetCloudVmClusterArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetCloudVmClusterResult>("azure:oracle/getCloudVmCluster:getCloudVmCluster", args ?? new GetCloudVmClusterArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to access information about an existing Cloud VM Cluster.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Azure = Pulumi.Azure;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Azure.Oracle.GetCloudVmCluster.Invoke(new()
        ///     {
        ///         Name = "existing",
        ///         ResourceGroupName = "existing",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["id"] = example.Apply(getCloudVmClusterResult =&gt; getCloudVmClusterResult.Id),
        ///     };
        /// });
        /// ```
        /// 
        /// ## API Providers
        /// 
        /// &lt;!-- This section is generated, changes will be overwritten --&gt;
        /// This data source uses the following Azure API Providers:
        /// 
        /// * `Oracle.Database`: 2024-06-01
        /// </summary>
        public static Output<GetCloudVmClusterResult> Invoke(GetCloudVmClusterInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetCloudVmClusterResult>("azure:oracle/getCloudVmCluster:getCloudVmCluster", args ?? new GetCloudVmClusterInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to access information about an existing Cloud VM Cluster.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Azure = Pulumi.Azure;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Azure.Oracle.GetCloudVmCluster.Invoke(new()
        ///     {
        ///         Name = "existing",
        ///         ResourceGroupName = "existing",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["id"] = example.Apply(getCloudVmClusterResult =&gt; getCloudVmClusterResult.Id),
        ///     };
        /// });
        /// ```
        /// 
        /// ## API Providers
        /// 
        /// &lt;!-- This section is generated, changes will be overwritten --&gt;
        /// This data source uses the following Azure API Providers:
        /// 
        /// * `Oracle.Database`: 2024-06-01
        /// </summary>
        public static Output<GetCloudVmClusterResult> Invoke(GetCloudVmClusterInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetCloudVmClusterResult>("azure:oracle/getCloudVmCluster:getCloudVmCluster", args ?? new GetCloudVmClusterInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetCloudVmClusterArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of this Cloud VM Cluster.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        /// <summary>
        /// The name of the Resource Group where the Cloud VM Cluster exists.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetCloudVmClusterArgs()
        {
        }
        public static new GetCloudVmClusterArgs Empty => new GetCloudVmClusterArgs();
    }

    public sealed class GetCloudVmClusterInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of this Cloud VM Cluster.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// The name of the Resource Group where the Cloud VM Cluster exists.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetCloudVmClusterInvokeArgs()
        {
        }
        public static new GetCloudVmClusterInvokeArgs Empty => new GetCloudVmClusterInvokeArgs();
    }


    [OutputType]
    public sealed class GetCloudVmClusterResult
    {
        /// <summary>
        /// Client OCI backup subnet CIDR, default is `192.168.252.0/22`.
        /// </summary>
        public readonly string BackupSubnetCidr;
        /// <summary>
        /// The Cloud Exadata Infrastructure ID.
        /// </summary>
        public readonly string CloudExadataInfrastructureId;
        /// <summary>
        /// The cluster name for Cloud VM Cluster.
        /// </summary>
        public readonly string ClusterName;
        /// <summary>
        /// The OCID of the compartment.
        /// </summary>
        public readonly string CompartmentId;
        /// <summary>
        /// A `compute_nodes` block as defined below.
        /// </summary>
        public readonly ImmutableArray<string> ComputeNodes;
        /// <summary>
        /// The number of CPU cores enabled on the Cloud VM Cluster.
        /// </summary>
        public readonly int CpuCoreCount;
        /// <summary>
        /// A `data_collection_options` block as defined below.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetCloudVmClusterDataCollectionOptionResult> DataCollectionOptions;
        /// <summary>
        /// The percentage assigned to DATA storage (user data and database files). The remaining percentage is assigned to RECO storage (database redo logs, archive logs, and recovery manager backups). Accepted values are `35`, `40`, `60`, and 80. The default is `80` percent assigned to DATA storage. See [Storage Configuration](https://docs.oracle.com/en-us/iaas/exadatacloud/index.html#Exadata) in the Exadata documentation for details on the impact of the configuration settings on storage.
        /// </summary>
        public readonly int DataStoragePercentage;
        /// <summary>
        /// The data disk group size to be allocated in TBs.
        /// </summary>
        public readonly double DataStorageSizeInTbs;
        /// <summary>
        /// The local node storage to be allocated in GBs.
        /// </summary>
        public readonly int DbNodeStorageSizeInGbs;
        /// <summary>
        /// A `db_servers` block as defined below.
        /// </summary>
        public readonly ImmutableArray<string> DbServers;
        /// <summary>
        /// The type of redundancy configured for the Cloud Vm Cluster. `NORMAL` is 2-way redundancy. `HIGH` is 3-way redundancy.
        /// </summary>
        public readonly string DiskRedundancy;
        /// <summary>
        /// The user-friendly name for the Cloud VM Cluster. The name does not need to be unique.
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// The domain name for the Cloud VM Cluster.
        /// </summary>
        public readonly string Domain;
        /// <summary>
        /// A valid Oracle Grid Infrastructure (GI) software version.
        /// </summary>
        public readonly string GiVersion;
        /// <summary>
        /// The hostname for the Cloud VM Cluster without suffix.
        /// </summary>
        public readonly string Hostname;
        /// <summary>
        /// The hostname for the Cloud VM Cluster with suffix.
        /// </summary>
        public readonly string HostnameActual;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// A `iorm_config_cache` block as defined below.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetCloudVmClusterIormConfigCachResult> IormConfigCaches;
        /// <summary>
        /// The [OCID](https://docs.oracle.com/en-us/iaas/Content/General/Concepts/identifiers.htm) of the last maintenance update history entry. This value is updated when a maintenance update starts.
        /// </summary>
        public readonly string LastUpdateHistoryEntryId;
        /// <summary>
        /// The Oracle license model that applies to the Cloud VM Cluster.
        /// </summary>
        public readonly string LicenseModel;
        /// <summary>
        /// Additional information about the current `lifecycleState`.
        /// </summary>
        public readonly string LifecycleDetails;
        /// <summary>
        /// The current state of IORM configuration for the Exadata DB system.
        /// </summary>
        public readonly string LifecycleState;
        /// <summary>
        /// The port number configured for the listener on the Cloud VM Cluster.
        /// </summary>
        public readonly int ListenerPort;
        /// <summary>
        /// If true, database backup on local Exadata storage is configured for the Cloud VM Cluster. If false, database backup on local Exadata storage is not available in the Cloud VM Cluster.
        /// </summary>
        public readonly bool LocalBackupEnabled;
        /// <summary>
        /// The Azure Region where the Cloud VM Cluster exists.
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// The memory to be allocated in GBs.
        /// </summary>
        public readonly int MemorySizeInGbs;
        public readonly string Name;
        /// <summary>
        /// The number of nodes in the Cloud VM Cluster.
        /// </summary>
        public readonly int NodeCount;
        /// <summary>
        /// The list of [OCIDs](https://docs.oracle.com/en-us/iaas/Content/General/Concepts/identifiers.htm) for the network security groups (NSGs) to which this resource belongs. Setting this to an empty list removes all resources from all NSGs. For more information about NSGs, see [Security Rules](https://docs.oracle.com/en-us/iaas/Content/Network/Concepts/securityrules.htm). NsgIds restrictions:
        /// * A network security group (NSG) is optional for Autonomous Databases with private access. The nsgIds list can be empty.
        /// </summary>
        public readonly string NsgUrl;
        /// <summary>
        /// The URL of the resource in the OCI console.
        /// </summary>
        public readonly string OciUrl;
        /// <summary>
        /// The [OCID](https://docs.oracle.com/en-us/iaas/Content/General/Concepts/identifiers.htm) of the Cloud VM Cluster.
        /// </summary>
        public readonly string Ocid;
        /// <summary>
        /// The number of OCPU cores to enable on the Cloud VM Cluster. Only 1 decimal place is allowed for the fractional part.
        /// </summary>
        public readonly double OcpuCount;
        public readonly string ResourceGroupName;
        /// <summary>
        /// The FQDN of the DNS record for the SCAN IP addresses that are associated with the Cloud VM Cluster.
        /// </summary>
        public readonly string ScanDnsName;
        /// <summary>
        /// The [OCID](https://docs.oracle.com/en-us/iaas/Content/General/Concepts/identifiers.htm) of the DNS record for the SCAN IP addresses that are associated with the Cloud VM Cluster.
        /// </summary>
        public readonly string ScanDnsRecordId;
        /// <summary>
        /// A `scan_ip_ids` block as defined below.
        /// </summary>
        public readonly ImmutableArray<string> ScanIpIds;
        /// <summary>
        /// The TCP Single Client Access Name (SCAN) port. The default port is 1521.
        /// </summary>
        public readonly int ScanListenerPortTcp;
        /// <summary>
        /// The TCPS Single Client Access Name (SCAN) port. The default port is 2484.
        /// </summary>
        public readonly int ScanListenerPortTcpSsl;
        /// <summary>
        /// The model name of the Exadata hardware running the Cloud VM Cluster.
        /// </summary>
        public readonly string Shape;
        /// <summary>
        /// If true, sparse disk group is configured for the Cloud VM Cluster. If false, sparse disk group is not created.
        /// </summary>
        public readonly bool SparseDiskgroupEnabled;
        /// <summary>
        /// The public key portion of one or more key pairs used for SSH access to the Cloud VM Cluster.
        /// </summary>
        public readonly ImmutableArray<string> SshPublicKeys;
        /// <summary>
        /// The storage allocation for the disk group, in gigabytes (GB).
        /// </summary>
        public readonly int StorageSizeInGbs;
        /// <summary>
        /// The ID of the Azure Resource Manager subnet resource.
        /// </summary>
        public readonly string SubnetId;
        /// <summary>
        /// The [OCID](https://docs.oracle.com/en-us/iaas/Content/General/Concepts/identifiers.htm) of the subnet associated with the Cloud VM Cluster.
        /// </summary>
        public readonly string SubnetOcid;
        /// <summary>
        /// Operating system version of the image.
        /// </summary>
        public readonly string SystemVersion;
        /// <summary>
        /// A mapping of tags assigned to the Cloud VM Cluster.
        /// </summary>
        public readonly ImmutableDictionary<string, string> Tags;
        /// <summary>
        /// The date and time that the Cloud VM Cluster was created.
        /// </summary>
        public readonly string TimeCreated;
        /// <summary>
        /// The time zone of the Cloud VM Cluster. For details, see [Exadata Infrastructure Time Zones](https://docs.oracle.com/en-us/iaas/base-database/doc/manage-time-zone.html).
        /// </summary>
        public readonly string TimeZone;
        /// <summary>
        /// The [OCID](https://docs.oracle.com/en-us/iaas/Content/General/Concepts/identifiers.htm) of the virtual IP (VIP) addresses associated with the Cloud VM Cluster. The Cluster Ready Services (CRS) creates and maintains one VIP address for each node in the Exadata Cloud Service instance to enable failover. If one node fails, the VIP is reassigned to another active node in the Cluster.
        /// </summary>
        public readonly ImmutableArray<string> VipOds;
        /// <summary>
        /// The ID to an Azure Resource Manager Virtual Network resource.
        /// </summary>
        public readonly string VirtualNetworkId;
        /// <summary>
        /// The [OCID](https://docs.oracle.com/en-us/iaas/Content/General/Concepts/identifiers.htm) of the zone the Cloud VM Cluster is associated with.
        /// </summary>
        public readonly string ZoneId;

        [OutputConstructor]
        private GetCloudVmClusterResult(
            string backupSubnetCidr,

            string cloudExadataInfrastructureId,

            string clusterName,

            string compartmentId,

            ImmutableArray<string> computeNodes,

            int cpuCoreCount,

            ImmutableArray<Outputs.GetCloudVmClusterDataCollectionOptionResult> dataCollectionOptions,

            int dataStoragePercentage,

            double dataStorageSizeInTbs,

            int dbNodeStorageSizeInGbs,

            ImmutableArray<string> dbServers,

            string diskRedundancy,

            string displayName,

            string domain,

            string giVersion,

            string hostname,

            string hostnameActual,

            string id,

            ImmutableArray<Outputs.GetCloudVmClusterIormConfigCachResult> iormConfigCaches,

            string lastUpdateHistoryEntryId,

            string licenseModel,

            string lifecycleDetails,

            string lifecycleState,

            int listenerPort,

            bool localBackupEnabled,

            string location,

            int memorySizeInGbs,

            string name,

            int nodeCount,

            string nsgUrl,

            string ociUrl,

            string ocid,

            double ocpuCount,

            string resourceGroupName,

            string scanDnsName,

            string scanDnsRecordId,

            ImmutableArray<string> scanIpIds,

            int scanListenerPortTcp,

            int scanListenerPortTcpSsl,

            string shape,

            bool sparseDiskgroupEnabled,

            ImmutableArray<string> sshPublicKeys,

            int storageSizeInGbs,

            string subnetId,

            string subnetOcid,

            string systemVersion,

            ImmutableDictionary<string, string> tags,

            string timeCreated,

            string timeZone,

            ImmutableArray<string> vipOds,

            string virtualNetworkId,

            string zoneId)
        {
            BackupSubnetCidr = backupSubnetCidr;
            CloudExadataInfrastructureId = cloudExadataInfrastructureId;
            ClusterName = clusterName;
            CompartmentId = compartmentId;
            ComputeNodes = computeNodes;
            CpuCoreCount = cpuCoreCount;
            DataCollectionOptions = dataCollectionOptions;
            DataStoragePercentage = dataStoragePercentage;
            DataStorageSizeInTbs = dataStorageSizeInTbs;
            DbNodeStorageSizeInGbs = dbNodeStorageSizeInGbs;
            DbServers = dbServers;
            DiskRedundancy = diskRedundancy;
            DisplayName = displayName;
            Domain = domain;
            GiVersion = giVersion;
            Hostname = hostname;
            HostnameActual = hostnameActual;
            Id = id;
            IormConfigCaches = iormConfigCaches;
            LastUpdateHistoryEntryId = lastUpdateHistoryEntryId;
            LicenseModel = licenseModel;
            LifecycleDetails = lifecycleDetails;
            LifecycleState = lifecycleState;
            ListenerPort = listenerPort;
            LocalBackupEnabled = localBackupEnabled;
            Location = location;
            MemorySizeInGbs = memorySizeInGbs;
            Name = name;
            NodeCount = nodeCount;
            NsgUrl = nsgUrl;
            OciUrl = ociUrl;
            Ocid = ocid;
            OcpuCount = ocpuCount;
            ResourceGroupName = resourceGroupName;
            ScanDnsName = scanDnsName;
            ScanDnsRecordId = scanDnsRecordId;
            ScanIpIds = scanIpIds;
            ScanListenerPortTcp = scanListenerPortTcp;
            ScanListenerPortTcpSsl = scanListenerPortTcpSsl;
            Shape = shape;
            SparseDiskgroupEnabled = sparseDiskgroupEnabled;
            SshPublicKeys = sshPublicKeys;
            StorageSizeInGbs = storageSizeInGbs;
            SubnetId = subnetId;
            SubnetOcid = subnetOcid;
            SystemVersion = systemVersion;
            Tags = tags;
            TimeCreated = timeCreated;
            TimeZone = timeZone;
            VipOds = vipOds;
            VirtualNetworkId = virtualNetworkId;
            ZoneId = zoneId;
        }
    }
}
