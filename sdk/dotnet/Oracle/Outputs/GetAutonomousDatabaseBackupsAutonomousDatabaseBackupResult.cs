// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Oracle.Outputs
{

    [OutputType]
    public sealed class GetAutonomousDatabaseBackupsAutonomousDatabaseBackupResult
    {
        /// <summary>
        /// Indicates whether the backup is user-initiated or automatic.
        /// </summary>
        public readonly bool Automatic;
        /// <summary>
        /// The backup OCID.
        /// </summary>
        public readonly string AutonomousDatabaseBackupOcid;
        /// <summary>
        /// The OCID of the Autonomous Database OCID.
        /// </summary>
        public readonly string AutonomousDatabaseOcid;
        public readonly double DatabaseBackupSizeInTbs;
        /// <summary>
        /// The Oracle Database version of the Autonomous Database at the time the backup was taken.
        /// </summary>
        public readonly string DatabaseVersion;
        /// <summary>
        /// The user-friendly name of the backup.
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// The ID of the Autonomous Database Backup.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Information about the current lifecycle state of the backup.
        /// </summary>
        public readonly string LifecycleDetails;
        /// <summary>
        /// The current state of the backup.
        /// </summary>
        public readonly string LifecycleState;
        /// <summary>
        /// `- The Azure Region where the Autonomous Database Backup exists.
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// The current provisioning state of the Autonomous Database Backup.
        /// </summary>
        public readonly string ProvisioningState;
        /// <summary>
        /// Indicates whether the backup can be used to restore the Autonomous Database.
        /// </summary>
        public readonly bool Restorable;
        /// <summary>
        /// The retention period in days for the Autonomous Database Backup.
        /// </summary>
        public readonly int RetentionPeriodInDays;
        /// <summary>
        /// The date and time the backup will become unusable.
        /// </summary>
        public readonly string TimeAvailableTil;
        /// <summary>
        /// The date and time the backup was completed.
        /// </summary>
        public readonly string TimeEnded;
        /// <summary>
        /// The date and time the backup started.
        /// </summary>
        public readonly string TimeStarted;
        /// <summary>
        /// The type of backup.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetAutonomousDatabaseBackupsAutonomousDatabaseBackupResult(
            bool automatic,

            string autonomousDatabaseBackupOcid,

            string autonomousDatabaseOcid,

            double databaseBackupSizeInTbs,

            string databaseVersion,

            string displayName,

            string id,

            string lifecycleDetails,

            string lifecycleState,

            string location,

            string provisioningState,

            bool restorable,

            int retentionPeriodInDays,

            string timeAvailableTil,

            string timeEnded,

            string timeStarted,

            string type)
        {
            Automatic = automatic;
            AutonomousDatabaseBackupOcid = autonomousDatabaseBackupOcid;
            AutonomousDatabaseOcid = autonomousDatabaseOcid;
            DatabaseBackupSizeInTbs = databaseBackupSizeInTbs;
            DatabaseVersion = databaseVersion;
            DisplayName = displayName;
            Id = id;
            LifecycleDetails = lifecycleDetails;
            LifecycleState = lifecycleState;
            Location = location;
            ProvisioningState = provisioningState;
            Restorable = restorable;
            RetentionPeriodInDays = retentionPeriodInDays;
            TimeAvailableTil = timeAvailableTil;
            TimeEnded = timeEnded;
            TimeStarted = timeStarted;
            Type = type;
        }
    }
}
