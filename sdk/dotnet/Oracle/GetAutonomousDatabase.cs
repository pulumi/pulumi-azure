// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Oracle
{
    public static class GetAutonomousDatabase
    {
        /// <summary>
        /// Use this data source to access information about an existing Autonomous Database.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Azure = Pulumi.Azure;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Azure.Oracle.GetAutonomousDatabase.Invoke(new()
        ///     {
        ///         Name = "existing",
        ///         ResourceGroupName = "existing",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["id"] = example.Apply(getAutonomousDatabaseResult =&gt; getAutonomousDatabaseResult.Id),
        ///     };
        /// });
        /// ```
        /// 
        /// ## API Providers
        /// 
        /// &lt;!-- This section is generated, changes will be overwritten --&gt;
        /// This data source uses the following Azure API Providers:
        /// 
        /// * `Oracle.Database` - 2025-03-01
        /// </summary>
        public static Task<GetAutonomousDatabaseResult> InvokeAsync(GetAutonomousDatabaseArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetAutonomousDatabaseResult>("azure:oracle/getAutonomousDatabase:getAutonomousDatabase", args ?? new GetAutonomousDatabaseArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to access information about an existing Autonomous Database.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Azure = Pulumi.Azure;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Azure.Oracle.GetAutonomousDatabase.Invoke(new()
        ///     {
        ///         Name = "existing",
        ///         ResourceGroupName = "existing",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["id"] = example.Apply(getAutonomousDatabaseResult =&gt; getAutonomousDatabaseResult.Id),
        ///     };
        /// });
        /// ```
        /// 
        /// ## API Providers
        /// 
        /// &lt;!-- This section is generated, changes will be overwritten --&gt;
        /// This data source uses the following Azure API Providers:
        /// 
        /// * `Oracle.Database` - 2025-03-01
        /// </summary>
        public static Output<GetAutonomousDatabaseResult> Invoke(GetAutonomousDatabaseInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetAutonomousDatabaseResult>("azure:oracle/getAutonomousDatabase:getAutonomousDatabase", args ?? new GetAutonomousDatabaseInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to access information about an existing Autonomous Database.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Azure = Pulumi.Azure;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Azure.Oracle.GetAutonomousDatabase.Invoke(new()
        ///     {
        ///         Name = "existing",
        ///         ResourceGroupName = "existing",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["id"] = example.Apply(getAutonomousDatabaseResult =&gt; getAutonomousDatabaseResult.Id),
        ///     };
        /// });
        /// ```
        /// 
        /// ## API Providers
        /// 
        /// &lt;!-- This section is generated, changes will be overwritten --&gt;
        /// This data source uses the following Azure API Providers:
        /// 
        /// * `Oracle.Database` - 2025-03-01
        /// </summary>
        public static Output<GetAutonomousDatabaseResult> Invoke(GetAutonomousDatabaseInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetAutonomousDatabaseResult>("azure:oracle/getAutonomousDatabase:getAutonomousDatabase", args ?? new GetAutonomousDatabaseInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetAutonomousDatabaseArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of this Autonomous Database.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        /// <summary>
        /// The name of the Resource Group where the Autonomous Database exists.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetAutonomousDatabaseArgs()
        {
        }
        public static new GetAutonomousDatabaseArgs Empty => new GetAutonomousDatabaseArgs();
    }

    public sealed class GetAutonomousDatabaseInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of this Autonomous Database.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// The name of the Resource Group where the Autonomous Database exists.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetAutonomousDatabaseInvokeArgs()
        {
        }
        public static new GetAutonomousDatabaseInvokeArgs Empty => new GetAutonomousDatabaseInvokeArgs();
    }


    [OutputType]
    public sealed class GetAutonomousDatabaseResult
    {
        /// <summary>
        /// The current amount of storage in use for user and system data, in terabytes (TB).
        /// </summary>
        public readonly double ActualUsedDataStorageSizeInTbs;
        /// <summary>
        /// The amount of storage currently allocated for the database tables and billed for, rounded up. When auto-scaling is not enabled, this value is equal to the `dataStorageSizeInTBs` value. You can compare this value to the `actualUsedDataStorageSizeInTBs` value to determine if a manual shrink operation is appropriate for your allocated storage.
        /// </summary>
        public readonly double AllocatedStorageSizeInTbs;
        /// <summary>
        /// The client IP access control list (ACL). This feature is available for [Autonomous Database Serverless] (https://docs.oracle.com/en/cloud/paas/autonomous-database/index.html) and on Exadata Cloud@Customer. Only clients connecting from an IP address included in the ACL may access the Autonomous Database instance. If `arePrimaryWhitelistedIpsUsed` is 'TRUE' then Autonomous Database uses this primary's IP access control list (ACL) for the disaster recovery peer called `Standbywhitelistedips`.
        /// </summary>
        public readonly ImmutableArray<int> AllowedIps;
        /// <summary>
        /// Indicates if auto scaling is enabled for the Autonomous Database CPU core count.
        /// </summary>
        public readonly bool AutoScalingEnabled;
        /// <summary>
        /// Indicates if auto scaling is enabled for the Autonomous Database storage.
        /// </summary>
        public readonly bool AutoScalingForStorageEnabled;
        /// <summary>
        /// The database [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
        /// </summary>
        public readonly string AutonomousDatabaseId;
        /// <summary>
        /// List of Oracle Database versions available for a database upgrade. If there are no version upgrades available, this list is empty.
        /// </summary>
        public readonly ImmutableArray<string> AvailableUpgradeVersions;
        /// <summary>
        /// Retention period, in days, for backups.
        /// </summary>
        public readonly int BackupRetentionPeriodInDays;
        /// <summary>
        /// The character set for the autonomous database.
        /// </summary>
        public readonly string CharacterSet;
        /// <summary>
        /// The compute amount (CPUs) available to the database.
        /// </summary>
        public readonly double ComputeCount;
        /// <summary>
        /// The number of CPU cores to be made available to the database. When the ECPU is selected, the value for cpuCoreCount is 0. For Autonomous Database on Dedicated Exadata infrastructure, the maximum number of cores is determined by the infrastructure shape. See [Characteristics of Infrastructure Shapes](https://www.oracle.com/pls/topic/lookup?ctx=en/cloud/paas/autonomous-database&amp;id=ATPFG-GUID-B0F033C1-CC5A-42F0-B2E7-3CECFEDA1FD1) for shape details.
        /// </summary>
        public readonly int CpuCoreCount;
        /// <summary>
        /// The quantity of data in the database, in gigabytes.
        /// </summary>
        public readonly int DataStorageSizeInGbs;
        /// <summary>
        /// The maximum storage that can be allocated for the database, in terabytes.
        /// </summary>
        public readonly int DataStorageSizeInTbs;
        /// <summary>
        /// The DB node storage size in, in gigabytes.
        /// </summary>
        public readonly int DbNodeStorageSizeInGbs;
        /// <summary>
        /// A valid Oracle Database version for Autonomous Database.
        /// </summary>
        public readonly string DbVersion;
        /// <summary>
        /// The user-friendly name for the Autonomous Database. The name does not have to be unique.
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// Indicates the number of seconds of data loss for a Data Guard failover.
        /// </summary>
        public readonly int FailedDataRecoveryInSeconds;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The area assigned to In-Memory tables in Autonomous Database.
        /// </summary>
        public readonly int InMemoryAreaInGbs;
        /// <summary>
        /// Information about the current lifecycle state.
        /// </summary>
        public readonly string LifecycleDetails;
        /// <summary>
        /// Parameter that allows users to select an acceptable maximum data loss limit in seconds, up to which Automatic Failover will be triggered when necessary for a Local Autonomous Data Guard
        /// </summary>
        public readonly int LocalAdgAutoFailoverMaxDataLossLimit;
        /// <summary>
        /// Indicates whether the Autonomous Database has local (in-region) Data Guard enabled. Not applicable to cross-region Autonomous Data Guard associations, or to Autonomous Databases using dedicated Exadata infrastructure or Exadata Cloud@Customer infrastructure.
        /// </summary>
        public readonly bool LocalDataGuardEnabled;
        /// <summary>
        /// The Azure Region where the Autonomous Database exists.
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// A `LongTermBackupSchedule` block as defined below
        /// </summary>
        public readonly ImmutableArray<Outputs.GetAutonomousDatabaseLongTermBackupScheduleResult> LongTermBackupSchedules;
        /// <summary>
        /// The amount of memory (in GBs) enabled per ECPU or OCPU.
        /// </summary>
        public readonly int MemoryPerOracleComputeUnitInGbs;
        /// <summary>
        /// Specifies if the Autonomous Database requires mTLS connections.
        /// </summary>
        public readonly bool MtlsConnectionRequired;
        public readonly string Name;
        /// <summary>
        /// The national character set for the autonomous database.  The default is AL16UTF16. Allowed values are: AL16UTF16 or UTF8.
        /// </summary>
        public readonly string NationalCharacterSet;
        /// <summary>
        /// The date and time when the next long-term backup would be created.
        /// </summary>
        public readonly string NextLongTermBackupTimeStamp;
        /// <summary>
        /// The URL of the resource in the OCI console.
        /// </summary>
        public readonly string OciUrl;
        /// <summary>
        /// The [OCID](https://docs.oracle.com/en-us/iaas/Content/General/Concepts/identifiers.htm) of the autonomous database.
        /// </summary>
        public readonly string Ocid;
        public readonly string PeerDbId;
        /// <summary>
        /// The list of [OCIDs](https://docs.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of standby databases located in Autonomous Data Guard remote regions that are associated with the source database. Note that for Autonomous Database Serverless instances, standby databases located in the same region as the source primary database do not have OCIDs.
        /// </summary>
        public readonly ImmutableArray<string> PeerDbIds;
        /// <summary>
        /// Indicates if the Autonomous Database version is a preview version.
        /// </summary>
        public readonly bool Preview;
        /// <summary>
        /// Indicates if the Autonomous Database version is a preview version with service terms accepted.
        /// </summary>
        public readonly bool PreviewVersionWithServiceTermsAccepted;
        /// <summary>
        /// The private endpoint for the resource.
        /// </summary>
        public readonly string PrivateEndpoint;
        /// <summary>
        /// The private endpoint Ip address for the resource.
        /// </summary>
        public readonly string PrivateEndpointIp;
        /// <summary>
        /// The private endpoint label for the resource.
        /// </summary>
        public readonly string PrivateEndpointLabel;
        /// <summary>
        /// An array of CPU values that an Autonomous Database can be scaled to.
        /// </summary>
        public readonly ImmutableArray<int> ProvisionableCpuses;
        /// <summary>
        /// Indicates whether the Autonomous Database has Cross Region Data Guard enabled. Not applicable to Autonomous Databases using dedicated Exadata infrastructure or Exadata Cloud@Customer infrastructure.
        /// </summary>
        public readonly bool RemoteDataGuardEnabled;
        public readonly string ResourceGroupName;
        /// <summary>
        /// The URL of the Service Console for the Autonomous Database.
        /// </summary>
        public readonly string ServiceConsoleUrl;
        /// <summary>
        /// The URL of the SQL web developer.
        /// </summary>
        public readonly string SqlWebDeveloperUrl;
        /// <summary>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the subnet the resource is associated with.
        /// </summary>
        public readonly string SubnetId;
        /// <summary>
        /// The list of regions that support the creation of an Autonomous Database clone or an Autonomous Data Guard standby database.
        /// </summary>
        public readonly ImmutableArray<string> SupportedRegionsToCloneTos;
        /// <summary>
        /// A mapping of tags assigned to the Autonomous Database.
        /// </summary>
        public readonly ImmutableDictionary<string, string> Tags;
        /// <summary>
        /// The date and time the Autonomous Database was created.
        /// </summary>
        public readonly string TimeCreated;
        /// <summary>
        /// The date and time the Autonomous Data Guard role was switched for the Autonomous Database. For databases that have standbys in both the primary Data Guard region and a remote Data Guard standby region, this is the latest timestamp of either the database using the "primary" role in the primary Data Guard region, or database located in the remote Data Guard standby region.
        /// </summary>
        public readonly string TimeDataGuardRoleChanged;
        /// <summary>
        /// The date and time the Always Free database will be automatically deleted because of inactivity. If the database is in the STOPPED state and without activity until this time, it will be deleted.
        /// </summary>
        public readonly string TimeDeletionOfFreeAutonomousDatabase;
        /// <summary>
        /// The date and time that Autonomous Data Guard was enabled for an Autonomous Database where the standby was provisioned in the same region as the primary database.
        /// </summary>
        public readonly string TimeLocalDataGuardEnabledOn;
        /// <summary>
        /// The date and time when maintenance will begin.
        /// </summary>
        public readonly string TimeMaintenanceBegin;
        /// <summary>
        /// The date and time when maintenance will end.
        /// </summary>
        public readonly string TimeMaintenanceEnd;
        /// <summary>
        /// The timestamp of the last failover operation.
        /// </summary>
        public readonly string TimeOfLastFailover;
        /// <summary>
        /// The date and time when last refresh happened.
        /// </summary>
        public readonly string TimeOfLastRefresh;
        /// <summary>
        /// The refresh point timestamp (UTC). The refresh point is the time to which the database was most recently refreshed. Data created after the refresh point is not included in the refresh.
        /// </summary>
        public readonly string TimeOfLastRefreshPoint;
        /// <summary>
        /// The timestamp of the last switchover operation for the Autonomous Database.
        /// </summary>
        public readonly string TimeOfLastSwitchover;
        /// <summary>
        /// The date and time the Always Free database will be stopped because of inactivity. If this time is reached without any database activity, the database will automatically be put into the STOPPED state.
        /// </summary>
        public readonly string TimeReclamationOfFreeAutonomousDatabase;
        /// <summary>
        /// The storage space consumed by Autonomous Database in GBs.
        /// </summary>
        public readonly int UsedDataStorageSizeInGbs;
        /// <summary>
        /// The amount of storage that has been used, in terabytes.
        /// </summary>
        public readonly int UsedDataStorageSizeInTbs;
        /// <summary>
        /// The ID to an Azure Resource Manager vnet resource.
        /// </summary>
        public readonly string VirtualNetworkId;

        [OutputConstructor]
        private GetAutonomousDatabaseResult(
            double actualUsedDataStorageSizeInTbs,

            double allocatedStorageSizeInTbs,

            ImmutableArray<int> allowedIps,

            bool autoScalingEnabled,

            bool autoScalingForStorageEnabled,

            string autonomousDatabaseId,

            ImmutableArray<string> availableUpgradeVersions,

            int backupRetentionPeriodInDays,

            string characterSet,

            double computeCount,

            int cpuCoreCount,

            int dataStorageSizeInGbs,

            int dataStorageSizeInTbs,

            int dbNodeStorageSizeInGbs,

            string dbVersion,

            string displayName,

            int failedDataRecoveryInSeconds,

            string id,

            int inMemoryAreaInGbs,

            string lifecycleDetails,

            int localAdgAutoFailoverMaxDataLossLimit,

            bool localDataGuardEnabled,

            string location,

            ImmutableArray<Outputs.GetAutonomousDatabaseLongTermBackupScheduleResult> longTermBackupSchedules,

            int memoryPerOracleComputeUnitInGbs,

            bool mtlsConnectionRequired,

            string name,

            string nationalCharacterSet,

            string nextLongTermBackupTimeStamp,

            string ociUrl,

            string ocid,

            string peerDbId,

            ImmutableArray<string> peerDbIds,

            bool preview,

            bool previewVersionWithServiceTermsAccepted,

            string privateEndpoint,

            string privateEndpointIp,

            string privateEndpointLabel,

            ImmutableArray<int> provisionableCpuses,

            bool remoteDataGuardEnabled,

            string resourceGroupName,

            string serviceConsoleUrl,

            string sqlWebDeveloperUrl,

            string subnetId,

            ImmutableArray<string> supportedRegionsToCloneTos,

            ImmutableDictionary<string, string> tags,

            string timeCreated,

            string timeDataGuardRoleChanged,

            string timeDeletionOfFreeAutonomousDatabase,

            string timeLocalDataGuardEnabledOn,

            string timeMaintenanceBegin,

            string timeMaintenanceEnd,

            string timeOfLastFailover,

            string timeOfLastRefresh,

            string timeOfLastRefreshPoint,

            string timeOfLastSwitchover,

            string timeReclamationOfFreeAutonomousDatabase,

            int usedDataStorageSizeInGbs,

            int usedDataStorageSizeInTbs,

            string virtualNetworkId)
        {
            ActualUsedDataStorageSizeInTbs = actualUsedDataStorageSizeInTbs;
            AllocatedStorageSizeInTbs = allocatedStorageSizeInTbs;
            AllowedIps = allowedIps;
            AutoScalingEnabled = autoScalingEnabled;
            AutoScalingForStorageEnabled = autoScalingForStorageEnabled;
            AutonomousDatabaseId = autonomousDatabaseId;
            AvailableUpgradeVersions = availableUpgradeVersions;
            BackupRetentionPeriodInDays = backupRetentionPeriodInDays;
            CharacterSet = characterSet;
            ComputeCount = computeCount;
            CpuCoreCount = cpuCoreCount;
            DataStorageSizeInGbs = dataStorageSizeInGbs;
            DataStorageSizeInTbs = dataStorageSizeInTbs;
            DbNodeStorageSizeInGbs = dbNodeStorageSizeInGbs;
            DbVersion = dbVersion;
            DisplayName = displayName;
            FailedDataRecoveryInSeconds = failedDataRecoveryInSeconds;
            Id = id;
            InMemoryAreaInGbs = inMemoryAreaInGbs;
            LifecycleDetails = lifecycleDetails;
            LocalAdgAutoFailoverMaxDataLossLimit = localAdgAutoFailoverMaxDataLossLimit;
            LocalDataGuardEnabled = localDataGuardEnabled;
            Location = location;
            LongTermBackupSchedules = longTermBackupSchedules;
            MemoryPerOracleComputeUnitInGbs = memoryPerOracleComputeUnitInGbs;
            MtlsConnectionRequired = mtlsConnectionRequired;
            Name = name;
            NationalCharacterSet = nationalCharacterSet;
            NextLongTermBackupTimeStamp = nextLongTermBackupTimeStamp;
            OciUrl = ociUrl;
            Ocid = ocid;
            PeerDbId = peerDbId;
            PeerDbIds = peerDbIds;
            Preview = preview;
            PreviewVersionWithServiceTermsAccepted = previewVersionWithServiceTermsAccepted;
            PrivateEndpoint = privateEndpoint;
            PrivateEndpointIp = privateEndpointIp;
            PrivateEndpointLabel = privateEndpointLabel;
            ProvisionableCpuses = provisionableCpuses;
            RemoteDataGuardEnabled = remoteDataGuardEnabled;
            ResourceGroupName = resourceGroupName;
            ServiceConsoleUrl = serviceConsoleUrl;
            SqlWebDeveloperUrl = sqlWebDeveloperUrl;
            SubnetId = subnetId;
            SupportedRegionsToCloneTos = supportedRegionsToCloneTos;
            Tags = tags;
            TimeCreated = timeCreated;
            TimeDataGuardRoleChanged = timeDataGuardRoleChanged;
            TimeDeletionOfFreeAutonomousDatabase = timeDeletionOfFreeAutonomousDatabase;
            TimeLocalDataGuardEnabledOn = timeLocalDataGuardEnabledOn;
            TimeMaintenanceBegin = timeMaintenanceBegin;
            TimeMaintenanceEnd = timeMaintenanceEnd;
            TimeOfLastFailover = timeOfLastFailover;
            TimeOfLastRefresh = timeOfLastRefresh;
            TimeOfLastRefreshPoint = timeOfLastRefreshPoint;
            TimeOfLastSwitchover = timeOfLastSwitchover;
            TimeReclamationOfFreeAutonomousDatabase = timeReclamationOfFreeAutonomousDatabase;
            UsedDataStorageSizeInGbs = usedDataStorageSizeInGbs;
            UsedDataStorageSizeInTbs = usedDataStorageSizeInTbs;
            VirtualNetworkId = virtualNetworkId;
        }
    }
}
