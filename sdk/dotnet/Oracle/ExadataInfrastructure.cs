// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Oracle
{
    /// <summary>
    /// Manages a Cloud Exadata Infrastructure.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Azure = Pulumi.Azure;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Azure.Core.ResourceGroup("example", new()
    ///     {
    ///         Name = "example-resources",
    ///         Location = "West Europe",
    ///     });
    /// 
    ///     var exampleExadataInfrastructure = new Azure.Oracle.ExadataInfrastructure("example", new()
    ///     {
    ///         Name = "example-exadata-infra",
    ///         ResourceGroupName = example.Name,
    ///         Location = example.Location,
    ///         Zones = new[]
    ///         {
    ///             "1",
    ///         },
    ///         DisplayName = "example-exadata-infra",
    ///         StorageCount = 3,
    ///         ComputeCount = 2,
    ///         Shape = "Exadata.X9M",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## API Providers
    /// 
    /// &lt;!-- This section is generated, changes will be overwritten --&gt;
    /// This resource uses the following Azure API Providers:
    /// 
    /// * `Oracle.Database`: 2024-06-01
    /// 
    /// ## Import
    /// 
    /// Cloud Exadata Infrastructures can be imported using the `resource id`, e.g.
    /// 
    /// ```sh
    /// $ pulumi import azure:oracle/exadataInfrastructure:ExadataInfrastructure example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resourceGroup/providers/Oracle.Database/cloudExadataInfrastructures/cloudExadataInfrastructures1
    /// ```
    /// </summary>
    [AzureResourceType("azure:oracle/exadataInfrastructure:ExadataInfrastructure")]
    public partial class ExadataInfrastructure : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The number of compute servers for the Cloud Exadata Infrastructure. Changing this forces a new Cloud Exadata Infrastructure to be created.
        /// </summary>
        [Output("computeCount")]
        public Output<int> ComputeCount { get; private set; } = null!;

        /// <summary>
        /// The email address used by Oracle to send notifications regarding databases and infrastructure. Changing this forces a new Cloud Exadata Infrastructure to be created.
        /// </summary>
        [Output("customerContacts")]
        public Output<ImmutableArray<string>> CustomerContacts { get; private set; } = null!;

        /// <summary>
        /// The user-friendly name for the Cloud Exadata Infrastructure resource. The name does not need to be unique. Changing this forces a new Cloud Exadata Infrastructure to be created.
        /// </summary>
        [Output("displayName")]
        public Output<string> DisplayName { get; private set; } = null!;

        /// <summary>
        /// The Azure Region where the Cloud Exadata Infrastructure should exist. Changing this forces a new Cloud Exadata Infrastructure to be created.
        /// </summary>
        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// One or more `maintenance_window` blocks as defined below. Changing this forces a new Cloud Exadata Infrastructure to be created.
        /// </summary>
        [Output("maintenanceWindows")]
        public Output<ImmutableArray<Outputs.ExadataInfrastructureMaintenanceWindow>> MaintenanceWindows { get; private set; } = null!;

        /// <summary>
        /// The name which should be used for this Cloud Exadata Infrastructure. Changing this forces a new Cloud Exadata Infrastructure to be created.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The name of the Resource Group where the ODB@A Infrastructure should exist. Changing this forces a new Cloud Exadata Infrastructure to be created.
        /// </summary>
        [Output("resourceGroupName")]
        public Output<string> ResourceGroupName { get; private set; } = null!;

        /// <summary>
        /// The shape of the ODB@A infrastructure resource. Changing this forces a new Cloud Exadata Infrastructure to be created.
        /// </summary>
        [Output("shape")]
        public Output<string> Shape { get; private set; } = null!;

        /// <summary>
        /// The number of storage servers for the Cloud Exadata Infrastructure. Changing this forces a new Cloud Exadata Infrastructure to be created.
        /// </summary>
        [Output("storageCount")]
        public Output<int> StorageCount { get; private set; } = null!;

        /// <summary>
        /// A mapping of tags which should be assigned to the Cloud Exadata Infrastructure.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// Cloud Exadata Infrastructure zones. Changing this forces a new Cloud Exadata Infrastructure to be created.
        /// </summary>
        [Output("zones")]
        public Output<ImmutableArray<string>> Zones { get; private set; } = null!;


        /// <summary>
        /// Create a ExadataInfrastructure resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ExadataInfrastructure(string name, ExadataInfrastructureArgs args, CustomResourceOptions? options = null)
            : base("azure:oracle/exadataInfrastructure:ExadataInfrastructure", name, args ?? new ExadataInfrastructureArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ExadataInfrastructure(string name, Input<string> id, ExadataInfrastructureState? state = null, CustomResourceOptions? options = null)
            : base("azure:oracle/exadataInfrastructure:ExadataInfrastructure", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ExadataInfrastructure resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ExadataInfrastructure Get(string name, Input<string> id, ExadataInfrastructureState? state = null, CustomResourceOptions? options = null)
        {
            return new ExadataInfrastructure(name, id, state, options);
        }
    }

    public sealed class ExadataInfrastructureArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The number of compute servers for the Cloud Exadata Infrastructure. Changing this forces a new Cloud Exadata Infrastructure to be created.
        /// </summary>
        [Input("computeCount", required: true)]
        public Input<int> ComputeCount { get; set; } = null!;

        [Input("customerContacts")]
        private InputList<string>? _customerContacts;

        /// <summary>
        /// The email address used by Oracle to send notifications regarding databases and infrastructure. Changing this forces a new Cloud Exadata Infrastructure to be created.
        /// </summary>
        public InputList<string> CustomerContacts
        {
            get => _customerContacts ?? (_customerContacts = new InputList<string>());
            set => _customerContacts = value;
        }

        /// <summary>
        /// The user-friendly name for the Cloud Exadata Infrastructure resource. The name does not need to be unique. Changing this forces a new Cloud Exadata Infrastructure to be created.
        /// </summary>
        [Input("displayName", required: true)]
        public Input<string> DisplayName { get; set; } = null!;

        /// <summary>
        /// The Azure Region where the Cloud Exadata Infrastructure should exist. Changing this forces a new Cloud Exadata Infrastructure to be created.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        [Input("maintenanceWindows")]
        private InputList<Inputs.ExadataInfrastructureMaintenanceWindowArgs>? _maintenanceWindows;

        /// <summary>
        /// One or more `maintenance_window` blocks as defined below. Changing this forces a new Cloud Exadata Infrastructure to be created.
        /// </summary>
        public InputList<Inputs.ExadataInfrastructureMaintenanceWindowArgs> MaintenanceWindows
        {
            get => _maintenanceWindows ?? (_maintenanceWindows = new InputList<Inputs.ExadataInfrastructureMaintenanceWindowArgs>());
            set => _maintenanceWindows = value;
        }

        /// <summary>
        /// The name which should be used for this Cloud Exadata Infrastructure. Changing this forces a new Cloud Exadata Infrastructure to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The name of the Resource Group where the ODB@A Infrastructure should exist. Changing this forces a new Cloud Exadata Infrastructure to be created.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The shape of the ODB@A infrastructure resource. Changing this forces a new Cloud Exadata Infrastructure to be created.
        /// </summary>
        [Input("shape", required: true)]
        public Input<string> Shape { get; set; } = null!;

        /// <summary>
        /// The number of storage servers for the Cloud Exadata Infrastructure. Changing this forces a new Cloud Exadata Infrastructure to be created.
        /// </summary>
        [Input("storageCount", required: true)]
        public Input<int> StorageCount { get; set; } = null!;

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// A mapping of tags which should be assigned to the Cloud Exadata Infrastructure.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("zones", required: true)]
        private InputList<string>? _zones;

        /// <summary>
        /// Cloud Exadata Infrastructure zones. Changing this forces a new Cloud Exadata Infrastructure to be created.
        /// </summary>
        public InputList<string> Zones
        {
            get => _zones ?? (_zones = new InputList<string>());
            set => _zones = value;
        }

        public ExadataInfrastructureArgs()
        {
        }
        public static new ExadataInfrastructureArgs Empty => new ExadataInfrastructureArgs();
    }

    public sealed class ExadataInfrastructureState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The number of compute servers for the Cloud Exadata Infrastructure. Changing this forces a new Cloud Exadata Infrastructure to be created.
        /// </summary>
        [Input("computeCount")]
        public Input<int>? ComputeCount { get; set; }

        [Input("customerContacts")]
        private InputList<string>? _customerContacts;

        /// <summary>
        /// The email address used by Oracle to send notifications regarding databases and infrastructure. Changing this forces a new Cloud Exadata Infrastructure to be created.
        /// </summary>
        public InputList<string> CustomerContacts
        {
            get => _customerContacts ?? (_customerContacts = new InputList<string>());
            set => _customerContacts = value;
        }

        /// <summary>
        /// The user-friendly name for the Cloud Exadata Infrastructure resource. The name does not need to be unique. Changing this forces a new Cloud Exadata Infrastructure to be created.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        /// <summary>
        /// The Azure Region where the Cloud Exadata Infrastructure should exist. Changing this forces a new Cloud Exadata Infrastructure to be created.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        [Input("maintenanceWindows")]
        private InputList<Inputs.ExadataInfrastructureMaintenanceWindowGetArgs>? _maintenanceWindows;

        /// <summary>
        /// One or more `maintenance_window` blocks as defined below. Changing this forces a new Cloud Exadata Infrastructure to be created.
        /// </summary>
        public InputList<Inputs.ExadataInfrastructureMaintenanceWindowGetArgs> MaintenanceWindows
        {
            get => _maintenanceWindows ?? (_maintenanceWindows = new InputList<Inputs.ExadataInfrastructureMaintenanceWindowGetArgs>());
            set => _maintenanceWindows = value;
        }

        /// <summary>
        /// The name which should be used for this Cloud Exadata Infrastructure. Changing this forces a new Cloud Exadata Infrastructure to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The name of the Resource Group where the ODB@A Infrastructure should exist. Changing this forces a new Cloud Exadata Infrastructure to be created.
        /// </summary>
        [Input("resourceGroupName")]
        public Input<string>? ResourceGroupName { get; set; }

        /// <summary>
        /// The shape of the ODB@A infrastructure resource. Changing this forces a new Cloud Exadata Infrastructure to be created.
        /// </summary>
        [Input("shape")]
        public Input<string>? Shape { get; set; }

        /// <summary>
        /// The number of storage servers for the Cloud Exadata Infrastructure. Changing this forces a new Cloud Exadata Infrastructure to be created.
        /// </summary>
        [Input("storageCount")]
        public Input<int>? StorageCount { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// A mapping of tags which should be assigned to the Cloud Exadata Infrastructure.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("zones")]
        private InputList<string>? _zones;

        /// <summary>
        /// Cloud Exadata Infrastructure zones. Changing this forces a new Cloud Exadata Infrastructure to be created.
        /// </summary>
        public InputList<string> Zones
        {
            get => _zones ?? (_zones = new InputList<string>());
            set => _zones = value;
        }

        public ExadataInfrastructureState()
        {
        }
        public static new ExadataInfrastructureState Empty => new ExadataInfrastructureState();
    }
}
