// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Orbital.Inputs
{

    public sealed class ContactProfileLinkChannelArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Bandwidth in MHz.
        /// </summary>
        [Input("bandwidthMhz", required: true)]
        public Input<double> BandwidthMhz { get; set; } = null!;

        /// <summary>
        /// Center frequency in MHz.
        /// </summary>
        [Input("centerFrequencyMhz", required: true)]
        public Input<double> CenterFrequencyMhz { get; set; } = null!;

        /// <summary>
        /// Copy of the modem configuration file such as Kratos QRadio or Kratos QuantumRx. Only valid for downlink directions. If provided, the modem connects to the customer endpoint and sends demodulated data instead of a VITA.49 stream.
        /// </summary>
        [Input("demodulationConfiguration")]
        public Input<string>? DemodulationConfiguration { get; set; }

        [Input("endPoints", required: true)]
        private InputList<Inputs.ContactProfileLinkChannelEndPointArgs>? _endPoints;

        /// <summary>
        /// Customer End point to store/retrieve data during a contact. An `end_point` block as defined below.
        /// </summary>
        public InputList<Inputs.ContactProfileLinkChannelEndPointArgs> EndPoints
        {
            get => _endPoints ?? (_endPoints = new InputList<Inputs.ContactProfileLinkChannelEndPointArgs>());
            set => _endPoints = value;
        }

        /// <summary>
        /// Copy of the modem configuration file such as Kratos QRadio. Only valid for uplink directions. If provided, the modem connects to the customer endpoint and accepts commands from the customer instead of a VITA.49 stream.
        /// </summary>
        [Input("modulationConfiguration")]
        public Input<string>? ModulationConfiguration { get; set; }

        /// <summary>
        /// Name of the channel.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        public ContactProfileLinkChannelArgs()
        {
        }
        public static new ContactProfileLinkChannelArgs Empty => new ContactProfileLinkChannelArgs();
    }
}
