// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Orbital
{
    /// <summary>
    /// Manages an orbital contact.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Azure = Pulumi.Azure;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Azure.Core.ResourceGroup.ResourceGroup("example", new()
    ///     {
    ///         Name = "rg-example",
    ///         Location = "West Europe",
    ///     });
    /// 
    ///     var exampleSpacecraft = new Azure.Orbital.Spacecraft.Spacecraft("example", new()
    ///     {
    ///         Name = "example-spacecraft",
    ///         ResourceGroupName = example.Name,
    ///         Location = "westeurope",
    ///         NoradId = "12345",
    ///         Links = new[]
    ///         {
    ///             
    ///             {
    ///                 { "bandwidthMhz", 100 },
    ///                 { "centerFrequencyMhz", 101 },
    ///                 { "direction", "Uplink" },
    ///                 { "polarization", "LHCP" },
    ///                 { "name", "examplename" },
    ///             },
    ///         },
    ///         TwoLineElements = new[]
    ///         {
    ///             "1 23455U 94089A   97320.90946019  .00000140  00000-0  10191-3 0  2621",
    ///             "2 23455  99.0090 272.6745 0008546 223.1686 136.8816 14.11711747148495",
    ///         },
    ///         TitleLine = "AQUA",
    ///         Tags = 
    ///         {
    ///             { "aks-managed-cluster-name", "9a57225d-a405-4d40-aa46-f13d2342abef" },
    ///         },
    ///     });
    /// 
    ///     var exampleVirtualNetwork = new Azure.Network.VirtualNetwork.VirtualNetwork("example", new()
    ///     {
    ///         Name = "example-vnet",
    ///         AddressSpaces = new[]
    ///         {
    ///             "10.0.0.0/16",
    ///         },
    ///         Location = example.Location,
    ///         ResourceGroupName = example.Name,
    ///     });
    /// 
    ///     var exampleSubnet = new Azure.Network.Subnet.Subnet("example", new()
    ///     {
    ///         Name = "example-subnet",
    ///         ResourceGroupName = example.Name,
    ///         VirtualNetworkName = exampleVirtualNetwork.Name,
    ///         AddressPrefixes = new[]
    ///         {
    ///             "10.0.1.0/24",
    ///         },
    ///         Delegations = new[]
    ///         {
    ///             
    ///             {
    ///                 { "name", "orbitalgateway" },
    ///                 { "serviceDelegation", 
    ///                 {
    ///                     { "name", "Microsoft.Orbital/orbitalGateways" },
    ///                     { "actions", new[]
    ///                     {
    ///                         "Microsoft.Network/publicIPAddresses/join/action",
    ///                         "Microsoft.Network/virtualNetworks/subnets/join/action",
    ///                         "Microsoft.Network/virtualNetworks/read",
    ///                         "Microsoft.Network/publicIPAddresses/read",
    ///                     } },
    ///                 } },
    ///             },
    ///         },
    ///     });
    /// 
    ///     var exampleContactProfile = new Azure.Orbital.ContactProfile.ContactProfile("example", new()
    ///     {
    ///         Name = "example-contactprofile",
    ///         ResourceGroupName = example.Name,
    ///         Location = example.Location,
    ///         MinimumVariableContactDuration = "PT1M",
    ///         AutoTracking = "disabled",
    ///         Links = new[]
    ///         {
    ///             
    ///             {
    ///                 { "channels", new[]
    ///                 {
    ///                     
    ///                     {
    ///                         { "name", "channelname" },
    ///                         { "bandwidthMhz", 100 },
    ///                         { "centerFrequencyMhz", 101 },
    ///                         { "endPoints", new[]
    ///                         {
    ///                             
    ///                             {
    ///                                 { "endPointName", "AQUA_command" },
    ///                                 { "ipAddress", "10.0.1.0" },
    ///                                 { "port", "49153" },
    ///                                 { "protocol", "TCP" },
    ///                             },
    ///                         } },
    ///                     },
    ///                 } },
    ///                 { "direction", "Uplink" },
    ///                 { "name", "RHCP_UL" },
    ///                 { "polarization", "RHCP" },
    ///             },
    ///         },
    ///         NetworkConfigurationSubnetId = exampleSubnet.Id,
    ///     });
    /// 
    ///     var exampleContact = new Azure.Orbital.Contact.Contact("example", new()
    ///     {
    ///         Name = "example-contact",
    ///         SpacecraftId = exampleSpacecraft.Id,
    ///         ReservationStartTime = "2020-07-16T20:35:00.00Z",
    ///         ReservationEndTime = "2020-07-16T20:55:00.00Z",
    ///         GroundStationName = "WESTUS2_0",
    ///         ContactProfileId = exampleContactProfile.Id,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Spacecraft can be imported using the `resource id`, e.g.
    /// 
    /// ```sh
    /// $ pulumi import azure:orbital/contact:Contact example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Orbital/spacecrafts/spacecraft1/contacts/contact1
    /// ```
    /// </summary>
    [AzureResourceType("azure:orbital/contact:Contact")]
    public partial class Contact : global::Pulumi.CustomResource
    {
        /// <summary>
        /// ID of the orbital contact profile. Changing this forces a new resource to be created.
        /// </summary>
        [Output("contactProfileId")]
        public Output<string> ContactProfileId { get; private set; } = null!;

        /// <summary>
        /// Name of the Azure ground station. Changing this forces a new resource to be created.
        /// </summary>
        [Output("groundStationName")]
        public Output<string> GroundStationName { get; private set; } = null!;

        /// <summary>
        /// The name of the Contact. Changing this forces a new resource to be created.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Reservation end time of the Contact. Changing this forces a new resource to be created.
        /// </summary>
        [Output("reservationEndTime")]
        public Output<string> ReservationEndTime { get; private set; } = null!;

        /// <summary>
        /// Reservation start time of the Contact. Changing this forces a new resource to be created.
        /// </summary>
        [Output("reservationStartTime")]
        public Output<string> ReservationStartTime { get; private set; } = null!;

        /// <summary>
        /// The ID of the spacecraft which the contact will be made to. Changing this forces a new resource to be created.
        /// </summary>
        [Output("spacecraftId")]
        public Output<string> SpacecraftId { get; private set; } = null!;


        /// <summary>
        /// Create a Contact resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Contact(string name, ContactArgs args, CustomResourceOptions? options = null)
            : base("azure:orbital/contact:Contact", name, args ?? new ContactArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Contact(string name, Input<string> id, ContactState? state = null, CustomResourceOptions? options = null)
            : base("azure:orbital/contact:Contact", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Contact resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Contact Get(string name, Input<string> id, ContactState? state = null, CustomResourceOptions? options = null)
        {
            return new Contact(name, id, state, options);
        }
    }

    public sealed class ContactArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// ID of the orbital contact profile. Changing this forces a new resource to be created.
        /// </summary>
        [Input("contactProfileId", required: true)]
        public Input<string> ContactProfileId { get; set; } = null!;

        /// <summary>
        /// Name of the Azure ground station. Changing this forces a new resource to be created.
        /// </summary>
        [Input("groundStationName", required: true)]
        public Input<string> GroundStationName { get; set; } = null!;

        /// <summary>
        /// The name of the Contact. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Reservation end time of the Contact. Changing this forces a new resource to be created.
        /// </summary>
        [Input("reservationEndTime", required: true)]
        public Input<string> ReservationEndTime { get; set; } = null!;

        /// <summary>
        /// Reservation start time of the Contact. Changing this forces a new resource to be created.
        /// </summary>
        [Input("reservationStartTime", required: true)]
        public Input<string> ReservationStartTime { get; set; } = null!;

        /// <summary>
        /// The ID of the spacecraft which the contact will be made to. Changing this forces a new resource to be created.
        /// </summary>
        [Input("spacecraftId", required: true)]
        public Input<string> SpacecraftId { get; set; } = null!;

        public ContactArgs()
        {
        }
        public static new ContactArgs Empty => new ContactArgs();
    }

    public sealed class ContactState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// ID of the orbital contact profile. Changing this forces a new resource to be created.
        /// </summary>
        [Input("contactProfileId")]
        public Input<string>? ContactProfileId { get; set; }

        /// <summary>
        /// Name of the Azure ground station. Changing this forces a new resource to be created.
        /// </summary>
        [Input("groundStationName")]
        public Input<string>? GroundStationName { get; set; }

        /// <summary>
        /// The name of the Contact. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Reservation end time of the Contact. Changing this forces a new resource to be created.
        /// </summary>
        [Input("reservationEndTime")]
        public Input<string>? ReservationEndTime { get; set; }

        /// <summary>
        /// Reservation start time of the Contact. Changing this forces a new resource to be created.
        /// </summary>
        [Input("reservationStartTime")]
        public Input<string>? ReservationStartTime { get; set; }

        /// <summary>
        /// The ID of the spacecraft which the contact will be made to. Changing this forces a new resource to be created.
        /// </summary>
        [Input("spacecraftId")]
        public Input<string>? SpacecraftId { get; set; }

        public ContactState()
        {
        }
        public static new ContactState Empty => new ContactState();
    }
}
