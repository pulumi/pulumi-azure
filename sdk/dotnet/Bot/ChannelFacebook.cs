// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Bot
{
    /// <summary>
    /// Manages a Facebook integration for a Bot Channel
    /// 
    /// &gt; **Note** A bot can only have a single Facebook Channel associated with it.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using Azure = Pulumi.Azure;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var current = Output.Create(Azure.Core.GetClientConfig.InvokeAsync());
    ///         var exampleResourceGroup = new Azure.Core.ResourceGroup("exampleResourceGroup", new Azure.Core.ResourceGroupArgs
    ///         {
    ///             Location = "West Europe",
    ///         });
    ///         var exampleChannelsRegistration = new Azure.Bot.ChannelsRegistration("exampleChannelsRegistration", new Azure.Bot.ChannelsRegistrationArgs
    ///         {
    ///             Location = "global",
    ///             ResourceGroupName = exampleResourceGroup.Name,
    ///             Sku = "F0",
    ///             MicrosoftAppId = current.Apply(current =&gt; current.ClientId),
    ///         });
    ///         var exampleChannelFacebook = new Azure.Bot.ChannelFacebook("exampleChannelFacebook", new Azure.Bot.ChannelFacebookArgs
    ///         {
    ///             BotName = exampleChannelsRegistration.Name,
    ///             Location = exampleChannelsRegistration.Location,
    ///             ResourceGroupName = exampleResourceGroup.Name,
    ///             FacebookApplicationId = "563490254873576",
    ///             FacebookApplicationSecret = "8976d2536445ad5b976dee8437b9beb0",
    ///             Pages = 
    ///             {
    ///                 new Azure.Bot.Inputs.ChannelFacebookPageArgs
    ///                 {
    ///                     Id = "876248795081953",
    ///                     AccessToken = "CGGCec3UAFPMBAKwK3Ft8SEpO8ZCuvpNBI5DClaJCDfqJj2BgEHCKxcY0FDarmUQap6XxpZC9GWCW4nZCzjcKosAZAP7SO44X8Q8gAntbDIXgYUBGp9xtS8wUkwgKPobUePcOOVFkvClxvYZByuiQxoTiK9fQ9jZCPEorbmZCsKDZAx4VLnrNwCTZAPUwXxO61gfq4ZD",
    ///                 },
    ///             },
    ///         });
    ///     }
    /// 
    /// }
    /// ```
    /// 
    /// ## Import
    /// 
    /// The Facebook Integration for a Bot Channel can be imported using the `resource id`, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import azure:bot/channelFacebook:ChannelFacebook example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.BotService/botServices/botService1/channels/FacebookChannel
    /// ```
    /// </summary>
    [AzureResourceType("azure:bot/channelFacebook:ChannelFacebook")]
    public partial class ChannelFacebook : Pulumi.CustomResource
    {
        /// <summary>
        /// The name of the Bot Resource this channel will be associated with. Changing this forces a new resource to be created.
        /// </summary>
        [Output("botName")]
        public Output<string> BotName { get; private set; } = null!;

        /// <summary>
        /// The Facebook Application ID for the Facebook Channel.
        /// </summary>
        [Output("facebookApplicationId")]
        public Output<string> FacebookApplicationId { get; private set; } = null!;

        /// <summary>
        /// The Facebook Application Secret for the Facebook Channel.
        /// </summary>
        [Output("facebookApplicationSecret")]
        public Output<string> FacebookApplicationSecret { get; private set; } = null!;

        /// <summary>
        /// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
        /// </summary>
        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// One or more `page` blocks as defined below.
        /// </summary>
        [Output("pages")]
        public Output<ImmutableArray<Outputs.ChannelFacebookPage>> Pages { get; private set; } = null!;

        /// <summary>
        /// The name of the resource group where the Facebook Channel should be created. Changing this forces a new resource to be created.
        /// </summary>
        [Output("resourceGroupName")]
        public Output<string> ResourceGroupName { get; private set; } = null!;


        /// <summary>
        /// Create a ChannelFacebook resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ChannelFacebook(string name, ChannelFacebookArgs args, CustomResourceOptions? options = null)
            : base("azure:bot/channelFacebook:ChannelFacebook", name, args ?? new ChannelFacebookArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ChannelFacebook(string name, Input<string> id, ChannelFacebookState? state = null, CustomResourceOptions? options = null)
            : base("azure:bot/channelFacebook:ChannelFacebook", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ChannelFacebook resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ChannelFacebook Get(string name, Input<string> id, ChannelFacebookState? state = null, CustomResourceOptions? options = null)
        {
            return new ChannelFacebook(name, id, state, options);
        }
    }

    public sealed class ChannelFacebookArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the Bot Resource this channel will be associated with. Changing this forces a new resource to be created.
        /// </summary>
        [Input("botName", required: true)]
        public Input<string> BotName { get; set; } = null!;

        /// <summary>
        /// The Facebook Application ID for the Facebook Channel.
        /// </summary>
        [Input("facebookApplicationId", required: true)]
        public Input<string> FacebookApplicationId { get; set; } = null!;

        /// <summary>
        /// The Facebook Application Secret for the Facebook Channel.
        /// </summary>
        [Input("facebookApplicationSecret", required: true)]
        public Input<string> FacebookApplicationSecret { get; set; } = null!;

        /// <summary>
        /// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        [Input("pages", required: true)]
        private InputList<Inputs.ChannelFacebookPageArgs>? _pages;

        /// <summary>
        /// One or more `page` blocks as defined below.
        /// </summary>
        public InputList<Inputs.ChannelFacebookPageArgs> Pages
        {
            get => _pages ?? (_pages = new InputList<Inputs.ChannelFacebookPageArgs>());
            set => _pages = value;
        }

        /// <summary>
        /// The name of the resource group where the Facebook Channel should be created. Changing this forces a new resource to be created.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public ChannelFacebookArgs()
        {
        }
    }

    public sealed class ChannelFacebookState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the Bot Resource this channel will be associated with. Changing this forces a new resource to be created.
        /// </summary>
        [Input("botName")]
        public Input<string>? BotName { get; set; }

        /// <summary>
        /// The Facebook Application ID for the Facebook Channel.
        /// </summary>
        [Input("facebookApplicationId")]
        public Input<string>? FacebookApplicationId { get; set; }

        /// <summary>
        /// The Facebook Application Secret for the Facebook Channel.
        /// </summary>
        [Input("facebookApplicationSecret")]
        public Input<string>? FacebookApplicationSecret { get; set; }

        /// <summary>
        /// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        [Input("pages")]
        private InputList<Inputs.ChannelFacebookPageGetArgs>? _pages;

        /// <summary>
        /// One or more `page` blocks as defined below.
        /// </summary>
        public InputList<Inputs.ChannelFacebookPageGetArgs> Pages
        {
            get => _pages ?? (_pages = new InputList<Inputs.ChannelFacebookPageGetArgs>());
            set => _pages = value;
        }

        /// <summary>
        /// The name of the resource group where the Facebook Channel should be created. Changing this forces a new resource to be created.
        /// </summary>
        [Input("resourceGroupName")]
        public Input<string>? ResourceGroupName { get; set; }

        public ChannelFacebookState()
        {
        }
    }
}
