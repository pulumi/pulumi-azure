// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.AppInsights
{
    /// <summary>
    /// Manages an Application Insights API key.
    /// </summary>
    public partial class ApiKey : Pulumi.CustomResource
    {
        /// <summary>
        /// The API Key secret (Sensitive).
        /// </summary>
        [Output("apiKey")]
        public Output<string> Key { get; private set; } = null!;

        /// <summary>
        /// The ID of the Application Insights component on which the API key operates. Changing this forces a new resource to be created.
        /// </summary>
        [Output("applicationInsightsId")]
        public Output<string> ApplicationInsightsId { get; private set; } = null!;

        /// <summary>
        /// Specifies the name of the Application Insights API key. Changing this forces a
        /// new resource to be created.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Specifies the list of read permissions granted to the API key. Valid values are `agentconfig`, `aggregate`, `api`, `draft`, `extendqueries`, `search`. Please note these values are case sensitive. Changing this forces a new resource to be created.
        /// </summary>
        [Output("readPermissions")]
        public Output<ImmutableArray<string>> ReadPermissions { get; private set; } = null!;

        /// <summary>
        /// Specifies the list of write permissions granted to the API key. Valid values are `annotations`. Please note these values are case sensitive. Changing this forces a new resource to be created.
        /// </summary>
        [Output("writePermissions")]
        public Output<ImmutableArray<string>> WritePermissions { get; private set; } = null!;


        /// <summary>
        /// Create a ApiKey resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ApiKey(string name, ApiKeyArgs args, CustomResourceOptions? options = null)
            : base("azure:appinsights/apiKey:ApiKey", name, args ?? new ApiKeyArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ApiKey(string name, Input<string> id, ApiKeyState? state = null, CustomResourceOptions? options = null)
            : base("azure:appinsights/apiKey:ApiKey", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ApiKey resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ApiKey Get(string name, Input<string> id, ApiKeyState? state = null, CustomResourceOptions? options = null)
        {
            return new ApiKey(name, id, state, options);
        }
    }

    public sealed class ApiKeyArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the Application Insights component on which the API key operates. Changing this forces a new resource to be created.
        /// </summary>
        [Input("applicationInsightsId", required: true)]
        public Input<string> ApplicationInsightsId { get; set; } = null!;

        /// <summary>
        /// Specifies the name of the Application Insights API key. Changing this forces a
        /// new resource to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("readPermissions")]
        private InputList<string>? _readPermissions;

        /// <summary>
        /// Specifies the list of read permissions granted to the API key. Valid values are `agentconfig`, `aggregate`, `api`, `draft`, `extendqueries`, `search`. Please note these values are case sensitive. Changing this forces a new resource to be created.
        /// </summary>
        public InputList<string> ReadPermissions
        {
            get => _readPermissions ?? (_readPermissions = new InputList<string>());
            set => _readPermissions = value;
        }

        [Input("writePermissions")]
        private InputList<string>? _writePermissions;

        /// <summary>
        /// Specifies the list of write permissions granted to the API key. Valid values are `annotations`. Please note these values are case sensitive. Changing this forces a new resource to be created.
        /// </summary>
        public InputList<string> WritePermissions
        {
            get => _writePermissions ?? (_writePermissions = new InputList<string>());
            set => _writePermissions = value;
        }

        public ApiKeyArgs()
        {
        }
    }

    public sealed class ApiKeyState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The API Key secret (Sensitive).
        /// </summary>
        [Input("apiKey")]
        public Input<string>? Key { get; set; }

        /// <summary>
        /// The ID of the Application Insights component on which the API key operates. Changing this forces a new resource to be created.
        /// </summary>
        [Input("applicationInsightsId")]
        public Input<string>? ApplicationInsightsId { get; set; }

        /// <summary>
        /// Specifies the name of the Application Insights API key. Changing this forces a
        /// new resource to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("readPermissions")]
        private InputList<string>? _readPermissions;

        /// <summary>
        /// Specifies the list of read permissions granted to the API key. Valid values are `agentconfig`, `aggregate`, `api`, `draft`, `extendqueries`, `search`. Please note these values are case sensitive. Changing this forces a new resource to be created.
        /// </summary>
        public InputList<string> ReadPermissions
        {
            get => _readPermissions ?? (_readPermissions = new InputList<string>());
            set => _readPermissions = value;
        }

        [Input("writePermissions")]
        private InputList<string>? _writePermissions;

        /// <summary>
        /// Specifies the list of write permissions granted to the API key. Valid values are `annotations`. Please note these values are case sensitive. Changing this forces a new resource to be created.
        /// </summary>
        public InputList<string> WritePermissions
        {
            get => _writePermissions ?? (_writePermissions = new InputList<string>());
            set => _writePermissions = value;
        }

        public ApiKeyState()
        {
        }
    }
}
