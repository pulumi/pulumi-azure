// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.DataProtection
{
    /// <summary>
    /// Manages a Backup Policy to back up Kubernetes Cluster.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Azure = Pulumi.Azure;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Azure.Core.ResourceGroup.ResourceGroup("example", new()
    ///     {
    ///         Name = "example-resources",
    ///         Location = "West Europe",
    ///     });
    /// 
    ///     var exampleBackupVault = new Azure.Dataprotection.BackupVault.BackupVault("example", new()
    ///     {
    ///         Name = "example-backup-vault",
    ///         ResourceGroupName = example.Name,
    ///         Location = example.Location,
    ///         DatastoreType = "VaultStore",
    ///         Redundancy = "LocallyRedundant",
    ///     });
    /// 
    ///     var exampleBackupPolicyKubernetesCluster = new Azure.Dataprotection.BackupPolicyKubernetesCluster.BackupPolicyKubernetesCluster("example", new()
    ///     {
    ///         Name = "example-backup-policy",
    ///         ResourceGroupName = example.Name,
    ///         VaultName = exampleBackupVault.Name,
    ///         BackupRepeatingTimeIntervals = new[]
    ///         {
    ///             "R/2021-05-23T02:30:00+00:00/P1W",
    ///         },
    ///         TimeZone = "India Standard Time",
    ///         DefaultRetentionDuration = "P4M",
    ///         RetentionRules = new[]
    ///         {
    ///             
    ///             {
    ///                 { "name", "Daily" },
    ///                 { "priority", 25 },
    ///                 { "lifeCycles", new[]
    ///                 {
    ///                     
    ///                     {
    ///                         { "duration", "P84D" },
    ///                         { "dataStoreType", "OperationalStore" },
    ///                     },
    ///                 } },
    ///                 { "criteria", 
    ///                 {
    ///                     { "absoluteCriteria", "FirstOfDay" },
    ///                 } },
    ///             },
    ///         },
    ///         DefaultRetentionRule = 
    ///         {
    ///             { "lifeCycles", new[]
    ///             {
    ///                 
    ///                 {
    ///                     { "duration", "P7D" },
    ///                     { "dataStoreType", "OperationalStore" },
    ///                 },
    ///             } },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Backup Policy Kubernetes Cluster's can be imported using the `resource id`, e.g.
    /// 
    /// ```sh
    /// $ pulumi import azure:dataprotection/backupPolicyKubernetesCluster:BackupPolicyKubernetesCluster example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.DataProtection/backupVaults/vault1/backupPolicies/backupPolicy1
    /// ```
    /// </summary>
    [AzureResourceType("azure:dataprotection/backupPolicyKubernetesCluster:BackupPolicyKubernetesCluster")]
    public partial class BackupPolicyKubernetesCluster : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Specifies a list of repeating time interval. It supports weekly back. It should follow `ISO 8601` repeating time interval. Changing this forces a new resource to be created.
        /// </summary>
        [Output("backupRepeatingTimeIntervals")]
        public Output<ImmutableArray<string>> BackupRepeatingTimeIntervals { get; private set; } = null!;

        /// <summary>
        /// A `default_retention_rule` block as defined below. Changing this forces a new resource to be created.
        /// </summary>
        [Output("defaultRetentionRule")]
        public Output<Outputs.BackupPolicyKubernetesClusterDefaultRetentionRule> DefaultRetentionRule { get; private set; } = null!;

        /// <summary>
        /// The name which should be used for the Backup Policy Kubernetes Cluster. Changing this forces a new resource to be created.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The name of the Resource Group where the Backup Policy Kubernetes Cluster should exist. Changing this forces a new resource to be created.
        /// </summary>
        [Output("resourceGroupName")]
        public Output<string> ResourceGroupName { get; private set; } = null!;

        /// <summary>
        /// One or more `retention_rule` blocks as defined below. Changing this forces a new resource to be created.
        /// </summary>
        [Output("retentionRules")]
        public Output<ImmutableArray<Outputs.BackupPolicyKubernetesClusterRetentionRule>> RetentionRules { get; private set; } = null!;

        /// <summary>
        /// Specifies the Time Zone which should be used by the backup schedule. Changing this forces a new resource to be created.
        /// </summary>
        [Output("timeZone")]
        public Output<string?> TimeZone { get; private set; } = null!;

        /// <summary>
        /// The name of the Backup Vault where the Backup Policy Kubernetes Cluster should exist. Changing this forces a new resource to be created.
        /// </summary>
        [Output("vaultName")]
        public Output<string> VaultName { get; private set; } = null!;


        /// <summary>
        /// Create a BackupPolicyKubernetesCluster resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public BackupPolicyKubernetesCluster(string name, BackupPolicyKubernetesClusterArgs args, CustomResourceOptions? options = null)
            : base("azure:dataprotection/backupPolicyKubernetesCluster:BackupPolicyKubernetesCluster", name, args ?? new BackupPolicyKubernetesClusterArgs(), MakeResourceOptions(options, ""))
        {
        }

        private BackupPolicyKubernetesCluster(string name, Input<string> id, BackupPolicyKubernetesClusterState? state = null, CustomResourceOptions? options = null)
            : base("azure:dataprotection/backupPolicyKubernetesCluster:BackupPolicyKubernetesCluster", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing BackupPolicyKubernetesCluster resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static BackupPolicyKubernetesCluster Get(string name, Input<string> id, BackupPolicyKubernetesClusterState? state = null, CustomResourceOptions? options = null)
        {
            return new BackupPolicyKubernetesCluster(name, id, state, options);
        }
    }

    public sealed class BackupPolicyKubernetesClusterArgs : global::Pulumi.ResourceArgs
    {
        [Input("backupRepeatingTimeIntervals", required: true)]
        private InputList<string>? _backupRepeatingTimeIntervals;

        /// <summary>
        /// Specifies a list of repeating time interval. It supports weekly back. It should follow `ISO 8601` repeating time interval. Changing this forces a new resource to be created.
        /// </summary>
        public InputList<string> BackupRepeatingTimeIntervals
        {
            get => _backupRepeatingTimeIntervals ?? (_backupRepeatingTimeIntervals = new InputList<string>());
            set => _backupRepeatingTimeIntervals = value;
        }

        /// <summary>
        /// A `default_retention_rule` block as defined below. Changing this forces a new resource to be created.
        /// </summary>
        [Input("defaultRetentionRule", required: true)]
        public Input<Inputs.BackupPolicyKubernetesClusterDefaultRetentionRuleArgs> DefaultRetentionRule { get; set; } = null!;

        /// <summary>
        /// The name which should be used for the Backup Policy Kubernetes Cluster. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The name of the Resource Group where the Backup Policy Kubernetes Cluster should exist. Changing this forces a new resource to be created.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        [Input("retentionRules")]
        private InputList<Inputs.BackupPolicyKubernetesClusterRetentionRuleArgs>? _retentionRules;

        /// <summary>
        /// One or more `retention_rule` blocks as defined below. Changing this forces a new resource to be created.
        /// </summary>
        public InputList<Inputs.BackupPolicyKubernetesClusterRetentionRuleArgs> RetentionRules
        {
            get => _retentionRules ?? (_retentionRules = new InputList<Inputs.BackupPolicyKubernetesClusterRetentionRuleArgs>());
            set => _retentionRules = value;
        }

        /// <summary>
        /// Specifies the Time Zone which should be used by the backup schedule. Changing this forces a new resource to be created.
        /// </summary>
        [Input("timeZone")]
        public Input<string>? TimeZone { get; set; }

        /// <summary>
        /// The name of the Backup Vault where the Backup Policy Kubernetes Cluster should exist. Changing this forces a new resource to be created.
        /// </summary>
        [Input("vaultName", required: true)]
        public Input<string> VaultName { get; set; } = null!;

        public BackupPolicyKubernetesClusterArgs()
        {
        }
        public static new BackupPolicyKubernetesClusterArgs Empty => new BackupPolicyKubernetesClusterArgs();
    }

    public sealed class BackupPolicyKubernetesClusterState : global::Pulumi.ResourceArgs
    {
        [Input("backupRepeatingTimeIntervals")]
        private InputList<string>? _backupRepeatingTimeIntervals;

        /// <summary>
        /// Specifies a list of repeating time interval. It supports weekly back. It should follow `ISO 8601` repeating time interval. Changing this forces a new resource to be created.
        /// </summary>
        public InputList<string> BackupRepeatingTimeIntervals
        {
            get => _backupRepeatingTimeIntervals ?? (_backupRepeatingTimeIntervals = new InputList<string>());
            set => _backupRepeatingTimeIntervals = value;
        }

        /// <summary>
        /// A `default_retention_rule` block as defined below. Changing this forces a new resource to be created.
        /// </summary>
        [Input("defaultRetentionRule")]
        public Input<Inputs.BackupPolicyKubernetesClusterDefaultRetentionRuleGetArgs>? DefaultRetentionRule { get; set; }

        /// <summary>
        /// The name which should be used for the Backup Policy Kubernetes Cluster. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The name of the Resource Group where the Backup Policy Kubernetes Cluster should exist. Changing this forces a new resource to be created.
        /// </summary>
        [Input("resourceGroupName")]
        public Input<string>? ResourceGroupName { get; set; }

        [Input("retentionRules")]
        private InputList<Inputs.BackupPolicyKubernetesClusterRetentionRuleGetArgs>? _retentionRules;

        /// <summary>
        /// One or more `retention_rule` blocks as defined below. Changing this forces a new resource to be created.
        /// </summary>
        public InputList<Inputs.BackupPolicyKubernetesClusterRetentionRuleGetArgs> RetentionRules
        {
            get => _retentionRules ?? (_retentionRules = new InputList<Inputs.BackupPolicyKubernetesClusterRetentionRuleGetArgs>());
            set => _retentionRules = value;
        }

        /// <summary>
        /// Specifies the Time Zone which should be used by the backup schedule. Changing this forces a new resource to be created.
        /// </summary>
        [Input("timeZone")]
        public Input<string>? TimeZone { get; set; }

        /// <summary>
        /// The name of the Backup Vault where the Backup Policy Kubernetes Cluster should exist. Changing this forces a new resource to be created.
        /// </summary>
        [Input("vaultName")]
        public Input<string>? VaultName { get; set; }

        public BackupPolicyKubernetesClusterState()
        {
        }
        public static new BackupPolicyKubernetesClusterState Empty => new BackupPolicyKubernetesClusterState();
    }
}
