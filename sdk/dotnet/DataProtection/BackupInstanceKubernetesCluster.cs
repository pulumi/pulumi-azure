// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.DataProtection
{
    /// <summary>
    /// Manages a Backup Instance to back up a Kubernetes Cluster.
    /// 
    /// ## Import
    /// 
    /// Backup Instance Kubernetes Cluster can be imported using the `resource id`, e.g.
    /// 
    /// ```sh
    /// $ pulumi import azure:dataprotection/backupInstanceKubernetesCluster:BackupInstanceKubernetesCluster example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.DataProtection/backupVaults/vault1/backupInstances/backupInstance1
    /// ```
    /// </summary>
    [AzureResourceType("azure:dataprotection/backupInstanceKubernetesCluster:BackupInstanceKubernetesCluster")]
    public partial class BackupInstanceKubernetesCluster : global::Pulumi.CustomResource
    {
        /// <summary>
        /// A `backup_datasource_parameters` block as defined below.
        /// </summary>
        [Output("backupDatasourceParameters")]
        public Output<Outputs.BackupInstanceKubernetesClusterBackupDatasourceParameters?> BackupDatasourceParameters { get; private set; } = null!;

        /// <summary>
        /// The ID of the Backup Policy. Changing this forces a new resource to be created.
        /// </summary>
        [Output("backupPolicyId")]
        public Output<string> BackupPolicyId { get; private set; } = null!;

        /// <summary>
        /// The ID of the Kubernetes Cluster. Changing this forces a new resource to be created.
        /// </summary>
        [Output("kubernetesClusterId")]
        public Output<string> KubernetesClusterId { get; private set; } = null!;

        /// <summary>
        /// The location of the Backup Instance Kubernetes Cluster. Changing this forces a new resource to be created.
        /// </summary>
        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// The name which should be used for this Backup Instance Kubernetes Cluster. Changing this forces a new resource to be created.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The name of the Resource Group where snapshots are stored. Changing this forces a new resource to be created.
        /// </summary>
        [Output("snapshotResourceGroupName")]
        public Output<string> SnapshotResourceGroupName { get; private set; } = null!;

        /// <summary>
        /// The ID of the Backup Vault within which the Backup Instance Kubernetes Cluster should exist. Changing this forces a new resource to be created.
        /// </summary>
        [Output("vaultId")]
        public Output<string> VaultId { get; private set; } = null!;


        /// <summary>
        /// Create a BackupInstanceKubernetesCluster resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public BackupInstanceKubernetesCluster(string name, BackupInstanceKubernetesClusterArgs args, CustomResourceOptions? options = null)
            : base("azure:dataprotection/backupInstanceKubernetesCluster:BackupInstanceKubernetesCluster", name, args ?? new BackupInstanceKubernetesClusterArgs(), MakeResourceOptions(options, ""))
        {
        }

        private BackupInstanceKubernetesCluster(string name, Input<string> id, BackupInstanceKubernetesClusterState? state = null, CustomResourceOptions? options = null)
            : base("azure:dataprotection/backupInstanceKubernetesCluster:BackupInstanceKubernetesCluster", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing BackupInstanceKubernetesCluster resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static BackupInstanceKubernetesCluster Get(string name, Input<string> id, BackupInstanceKubernetesClusterState? state = null, CustomResourceOptions? options = null)
        {
            return new BackupInstanceKubernetesCluster(name, id, state, options);
        }
    }

    public sealed class BackupInstanceKubernetesClusterArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// A `backup_datasource_parameters` block as defined below.
        /// </summary>
        [Input("backupDatasourceParameters")]
        public Input<Inputs.BackupInstanceKubernetesClusterBackupDatasourceParametersArgs>? BackupDatasourceParameters { get; set; }

        /// <summary>
        /// The ID of the Backup Policy. Changing this forces a new resource to be created.
        /// </summary>
        [Input("backupPolicyId", required: true)]
        public Input<string> BackupPolicyId { get; set; } = null!;

        /// <summary>
        /// The ID of the Kubernetes Cluster. Changing this forces a new resource to be created.
        /// </summary>
        [Input("kubernetesClusterId", required: true)]
        public Input<string> KubernetesClusterId { get; set; } = null!;

        /// <summary>
        /// The location of the Backup Instance Kubernetes Cluster. Changing this forces a new resource to be created.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// The name which should be used for this Backup Instance Kubernetes Cluster. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The name of the Resource Group where snapshots are stored. Changing this forces a new resource to be created.
        /// </summary>
        [Input("snapshotResourceGroupName", required: true)]
        public Input<string> SnapshotResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The ID of the Backup Vault within which the Backup Instance Kubernetes Cluster should exist. Changing this forces a new resource to be created.
        /// </summary>
        [Input("vaultId", required: true)]
        public Input<string> VaultId { get; set; } = null!;

        public BackupInstanceKubernetesClusterArgs()
        {
        }
        public static new BackupInstanceKubernetesClusterArgs Empty => new BackupInstanceKubernetesClusterArgs();
    }

    public sealed class BackupInstanceKubernetesClusterState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// A `backup_datasource_parameters` block as defined below.
        /// </summary>
        [Input("backupDatasourceParameters")]
        public Input<Inputs.BackupInstanceKubernetesClusterBackupDatasourceParametersGetArgs>? BackupDatasourceParameters { get; set; }

        /// <summary>
        /// The ID of the Backup Policy. Changing this forces a new resource to be created.
        /// </summary>
        [Input("backupPolicyId")]
        public Input<string>? BackupPolicyId { get; set; }

        /// <summary>
        /// The ID of the Kubernetes Cluster. Changing this forces a new resource to be created.
        /// </summary>
        [Input("kubernetesClusterId")]
        public Input<string>? KubernetesClusterId { get; set; }

        /// <summary>
        /// The location of the Backup Instance Kubernetes Cluster. Changing this forces a new resource to be created.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// The name which should be used for this Backup Instance Kubernetes Cluster. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The name of the Resource Group where snapshots are stored. Changing this forces a new resource to be created.
        /// </summary>
        [Input("snapshotResourceGroupName")]
        public Input<string>? SnapshotResourceGroupName { get; set; }

        /// <summary>
        /// The ID of the Backup Vault within which the Backup Instance Kubernetes Cluster should exist. Changing this forces a new resource to be created.
        /// </summary>
        [Input("vaultId")]
        public Input<string>? VaultId { get; set; }

        public BackupInstanceKubernetesClusterState()
        {
        }
        public static new BackupInstanceKubernetesClusterState Empty => new BackupInstanceKubernetesClusterState();
    }
}
