// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.DataProtection
{
    /// <summary>
    /// Manages a Backup Instance to back up Disk.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using Azure = Pulumi.Azure;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var rg = new Azure.Core.ResourceGroup("rg", new Azure.Core.ResourceGroupArgs
    ///         {
    ///             Location = "West Europe",
    ///         });
    ///         var exampleManagedDisk = new Azure.Compute.ManagedDisk("exampleManagedDisk", new Azure.Compute.ManagedDiskArgs
    ///         {
    ///             Location = rg.Location,
    ///             ResourceGroupName = rg.Name,
    ///             StorageAccountType = "Standard_LRS",
    ///             CreateOption = "Empty",
    ///             DiskSizeGb = 1,
    ///         });
    ///         var exampleBackupVault = new Azure.DataProtection.BackupVault("exampleBackupVault", new Azure.DataProtection.BackupVaultArgs
    ///         {
    ///             ResourceGroupName = rg.Name,
    ///             Location = rg.Location,
    ///             DatastoreType = "VaultStore",
    ///             Redundancy = "LocallyRedundant",
    ///             Identity = new Azure.DataProtection.Inputs.BackupVaultIdentityArgs
    ///             {
    ///                 Type = "SystemAssigned",
    ///             },
    ///         });
    ///         var example1 = new Azure.Authorization.Assignment("example1", new Azure.Authorization.AssignmentArgs
    ///         {
    ///             Scope = rg.Id,
    ///             RoleDefinitionName = "Disk Snapshot Contributor",
    ///             PrincipalId = exampleBackupVault.Identity.Apply(identity =&gt; identity?.PrincipalId),
    ///         });
    ///         var example2 = new Azure.Authorization.Assignment("example2", new Azure.Authorization.AssignmentArgs
    ///         {
    ///             Scope = exampleManagedDisk.Id,
    ///             RoleDefinitionName = "Disk Backup Reader",
    ///             PrincipalId = exampleBackupVault.Identity.Apply(identity =&gt; identity?.PrincipalId),
    ///         });
    ///         var exampleBackupPolicyDisk = new Azure.DataProtection.BackupPolicyDisk("exampleBackupPolicyDisk", new Azure.DataProtection.BackupPolicyDiskArgs
    ///         {
    ///             VaultId = exampleBackupVault.Id,
    ///             BackupRepeatingTimeIntervals = 
    ///             {
    ///                 "R/2021-05-19T06:33:16+00:00/PT4H",
    ///             },
    ///             DefaultRetentionDuration = "P7D",
    ///         });
    ///         var exampleBackupInstanceDisk = new Azure.DataProtection.BackupInstanceDisk("exampleBackupInstanceDisk", new Azure.DataProtection.BackupInstanceDiskArgs
    ///         {
    ///             Location = exampleBackupVault.Location,
    ///             VaultId = exampleBackupVault.Id,
    ///             DiskId = exampleManagedDisk.Id,
    ///             SnapshotResourceGroupName = rg.Name,
    ///             BackupPolicyId = exampleBackupPolicyDisk.Id,
    ///         });
    ///     }
    /// 
    /// }
    /// ```
    /// 
    /// ## Import
    /// 
    /// Backup Instance Disks can be imported using the `resource id`, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import azure:dataprotection/backupInstanceDisk:BackupInstanceDisk example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.DataProtection/backupVaults/vault1/backupInstances/backupInstance1
    /// ```
    /// </summary>
    [AzureResourceType("azure:dataprotection/backupInstanceDisk:BackupInstanceDisk")]
    public partial class BackupInstanceDisk : Pulumi.CustomResource
    {
        /// <summary>
        /// The ID of the Backup Policy.
        /// </summary>
        [Output("backupPolicyId")]
        public Output<string> BackupPolicyId { get; private set; } = null!;

        /// <summary>
        /// The ID of the source Disk. Changing this forces a new Backup Instance Disk to be created.
        /// </summary>
        [Output("diskId")]
        public Output<string> DiskId { get; private set; } = null!;

        /// <summary>
        /// The Azure Region where the Backup Instance Disk should exist. Changing this forces a new Backup Instance Disk to be created.
        /// </summary>
        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// The name which should be used for this Backup Instance Disk. Changing this forces a new Backup Instance Disk to be created.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The name of the Resource Group where snapshots are stored. Changing this forces a new Backup Instance Disk to be created.
        /// </summary>
        [Output("snapshotResourceGroupName")]
        public Output<string> SnapshotResourceGroupName { get; private set; } = null!;

        /// <summary>
        /// The ID of the Backup Vault within which the Backup Instance Disk should exist. Changing this forces a new Backup Instance Disk to be created.
        /// </summary>
        [Output("vaultId")]
        public Output<string> VaultId { get; private set; } = null!;


        /// <summary>
        /// Create a BackupInstanceDisk resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public BackupInstanceDisk(string name, BackupInstanceDiskArgs args, CustomResourceOptions? options = null)
            : base("azure:dataprotection/backupInstanceDisk:BackupInstanceDisk", name, args ?? new BackupInstanceDiskArgs(), MakeResourceOptions(options, ""))
        {
        }

        private BackupInstanceDisk(string name, Input<string> id, BackupInstanceDiskState? state = null, CustomResourceOptions? options = null)
            : base("azure:dataprotection/backupInstanceDisk:BackupInstanceDisk", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing BackupInstanceDisk resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static BackupInstanceDisk Get(string name, Input<string> id, BackupInstanceDiskState? state = null, CustomResourceOptions? options = null)
        {
            return new BackupInstanceDisk(name, id, state, options);
        }
    }

    public sealed class BackupInstanceDiskArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the Backup Policy.
        /// </summary>
        [Input("backupPolicyId", required: true)]
        public Input<string> BackupPolicyId { get; set; } = null!;

        /// <summary>
        /// The ID of the source Disk. Changing this forces a new Backup Instance Disk to be created.
        /// </summary>
        [Input("diskId", required: true)]
        public Input<string> DiskId { get; set; } = null!;

        /// <summary>
        /// The Azure Region where the Backup Instance Disk should exist. Changing this forces a new Backup Instance Disk to be created.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// The name which should be used for this Backup Instance Disk. Changing this forces a new Backup Instance Disk to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The name of the Resource Group where snapshots are stored. Changing this forces a new Backup Instance Disk to be created.
        /// </summary>
        [Input("snapshotResourceGroupName", required: true)]
        public Input<string> SnapshotResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The ID of the Backup Vault within which the Backup Instance Disk should exist. Changing this forces a new Backup Instance Disk to be created.
        /// </summary>
        [Input("vaultId", required: true)]
        public Input<string> VaultId { get; set; } = null!;

        public BackupInstanceDiskArgs()
        {
        }
    }

    public sealed class BackupInstanceDiskState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the Backup Policy.
        /// </summary>
        [Input("backupPolicyId")]
        public Input<string>? BackupPolicyId { get; set; }

        /// <summary>
        /// The ID of the source Disk. Changing this forces a new Backup Instance Disk to be created.
        /// </summary>
        [Input("diskId")]
        public Input<string>? DiskId { get; set; }

        /// <summary>
        /// The Azure Region where the Backup Instance Disk should exist. Changing this forces a new Backup Instance Disk to be created.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// The name which should be used for this Backup Instance Disk. Changing this forces a new Backup Instance Disk to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The name of the Resource Group where snapshots are stored. Changing this forces a new Backup Instance Disk to be created.
        /// </summary>
        [Input("snapshotResourceGroupName")]
        public Input<string>? SnapshotResourceGroupName { get; set; }

        /// <summary>
        /// The ID of the Backup Vault within which the Backup Instance Disk should exist. Changing this forces a new Backup Instance Disk to be created.
        /// </summary>
        [Input("vaultId")]
        public Input<string>? VaultId { get; set; }

        public BackupInstanceDiskState()
        {
        }
    }
}
