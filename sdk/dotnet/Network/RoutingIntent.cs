// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Network
{
    /// <summary>
    /// Manages a Virtual Hub Routing Intent.
    /// 
    /// ## Import
    /// 
    /// Virtual Hub Routing Intents can be imported using the `resource id`, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import azure:network/routingIntent:RoutingIntent example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resourceGroup1/providers/Microsoft.Network/virtualHubs/virtualHub1/routingIntent/routingIntent1
    /// ```
    /// </summary>
    [AzureResourceType("azure:network/routingIntent:RoutingIntent")]
    public partial class RoutingIntent : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The name which should be used for this Virtual Hub Routing Intent. Changing this forces a new resource to be created.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// One or more `routing_policy` blocks as defined below.
        /// </summary>
        [Output("routingPolicies")]
        public Output<ImmutableArray<Outputs.RoutingIntentRoutingPolicy>> RoutingPolicies { get; private set; } = null!;

        /// <summary>
        /// The resource ID of the Virtual Hub. Changing this forces a new resource to be created.
        /// </summary>
        [Output("virtualHubId")]
        public Output<string> VirtualHubId { get; private set; } = null!;


        /// <summary>
        /// Create a RoutingIntent resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public RoutingIntent(string name, RoutingIntentArgs args, CustomResourceOptions? options = null)
            : base("azure:network/routingIntent:RoutingIntent", name, args ?? new RoutingIntentArgs(), MakeResourceOptions(options, ""))
        {
        }

        private RoutingIntent(string name, Input<string> id, RoutingIntentState? state = null, CustomResourceOptions? options = null)
            : base("azure:network/routingIntent:RoutingIntent", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing RoutingIntent resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static RoutingIntent Get(string name, Input<string> id, RoutingIntentState? state = null, CustomResourceOptions? options = null)
        {
            return new RoutingIntent(name, id, state, options);
        }
    }

    public sealed class RoutingIntentArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name which should be used for this Virtual Hub Routing Intent. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("routingPolicies", required: true)]
        private InputList<Inputs.RoutingIntentRoutingPolicyArgs>? _routingPolicies;

        /// <summary>
        /// One or more `routing_policy` blocks as defined below.
        /// </summary>
        public InputList<Inputs.RoutingIntentRoutingPolicyArgs> RoutingPolicies
        {
            get => _routingPolicies ?? (_routingPolicies = new InputList<Inputs.RoutingIntentRoutingPolicyArgs>());
            set => _routingPolicies = value;
        }

        /// <summary>
        /// The resource ID of the Virtual Hub. Changing this forces a new resource to be created.
        /// </summary>
        [Input("virtualHubId", required: true)]
        public Input<string> VirtualHubId { get; set; } = null!;

        public RoutingIntentArgs()
        {
        }
        public static new RoutingIntentArgs Empty => new RoutingIntentArgs();
    }

    public sealed class RoutingIntentState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name which should be used for this Virtual Hub Routing Intent. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("routingPolicies")]
        private InputList<Inputs.RoutingIntentRoutingPolicyGetArgs>? _routingPolicies;

        /// <summary>
        /// One or more `routing_policy` blocks as defined below.
        /// </summary>
        public InputList<Inputs.RoutingIntentRoutingPolicyGetArgs> RoutingPolicies
        {
            get => _routingPolicies ?? (_routingPolicies = new InputList<Inputs.RoutingIntentRoutingPolicyGetArgs>());
            set => _routingPolicies = value;
        }

        /// <summary>
        /// The resource ID of the Virtual Hub. Changing this forces a new resource to be created.
        /// </summary>
        [Input("virtualHubId")]
        public Input<string>? VirtualHubId { get; set; }

        public RoutingIntentState()
        {
        }
        public static new RoutingIntentState Empty => new RoutingIntentState();
    }
}
