// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Network
{
    /// <summary>
    /// Manages a VPN Server Configuration Policy Group.
    /// 
    /// ## Import
    /// 
    /// VPN Server Configuration Policy Groups can be imported using the `resource id`, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import azure:network/vpnServerConfigurationPolicyGroup:VpnServerConfigurationPolicyGroup example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resGroup1/providers/Microsoft.Network/vpnServerConfigurations/serverConfiguration1/configurationPolicyGroups/configurationPolicyGroup1
    /// ```
    /// </summary>
    [AzureResourceType("azure:network/vpnServerConfigurationPolicyGroup:VpnServerConfigurationPolicyGroup")]
    public partial class VpnServerConfigurationPolicyGroup : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Is this a default VPN Server Configuration Policy Group? Defaults to `false`. Changing this forces a new resource to be created.
        /// </summary>
        [Output("isDefault")]
        public Output<bool?> IsDefault { get; private set; } = null!;

        /// <summary>
        /// The Name which should be used for this VPN Server Configuration Policy Group. Changing this forces a new resource to be created.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// One or more `policy` blocks as documented below.
        /// </summary>
        [Output("policies")]
        public Output<ImmutableArray<Outputs.VpnServerConfigurationPolicyGroupPolicy>> Policies { get; private set; } = null!;

        /// <summary>
        /// The priority of this VPN Server Configuration Policy Group. Defaults to `0`.
        /// </summary>
        [Output("priority")]
        public Output<int?> Priority { get; private set; } = null!;

        /// <summary>
        /// The ID of the VPN Server Configuration that the VPN Server Configuration Policy Group belongs to. Changing this forces a new resource to be created.
        /// </summary>
        [Output("vpnServerConfigurationId")]
        public Output<string> VpnServerConfigurationId { get; private set; } = null!;


        /// <summary>
        /// Create a VpnServerConfigurationPolicyGroup resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public VpnServerConfigurationPolicyGroup(string name, VpnServerConfigurationPolicyGroupArgs args, CustomResourceOptions? options = null)
            : base("azure:network/vpnServerConfigurationPolicyGroup:VpnServerConfigurationPolicyGroup", name, args ?? new VpnServerConfigurationPolicyGroupArgs(), MakeResourceOptions(options, ""))
        {
        }

        private VpnServerConfigurationPolicyGroup(string name, Input<string> id, VpnServerConfigurationPolicyGroupState? state = null, CustomResourceOptions? options = null)
            : base("azure:network/vpnServerConfigurationPolicyGroup:VpnServerConfigurationPolicyGroup", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing VpnServerConfigurationPolicyGroup resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static VpnServerConfigurationPolicyGroup Get(string name, Input<string> id, VpnServerConfigurationPolicyGroupState? state = null, CustomResourceOptions? options = null)
        {
            return new VpnServerConfigurationPolicyGroup(name, id, state, options);
        }
    }

    public sealed class VpnServerConfigurationPolicyGroupArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Is this a default VPN Server Configuration Policy Group? Defaults to `false`. Changing this forces a new resource to be created.
        /// </summary>
        [Input("isDefault")]
        public Input<bool>? IsDefault { get; set; }

        /// <summary>
        /// The Name which should be used for this VPN Server Configuration Policy Group. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("policies", required: true)]
        private InputList<Inputs.VpnServerConfigurationPolicyGroupPolicyArgs>? _policies;

        /// <summary>
        /// One or more `policy` blocks as documented below.
        /// </summary>
        public InputList<Inputs.VpnServerConfigurationPolicyGroupPolicyArgs> Policies
        {
            get => _policies ?? (_policies = new InputList<Inputs.VpnServerConfigurationPolicyGroupPolicyArgs>());
            set => _policies = value;
        }

        /// <summary>
        /// The priority of this VPN Server Configuration Policy Group. Defaults to `0`.
        /// </summary>
        [Input("priority")]
        public Input<int>? Priority { get; set; }

        /// <summary>
        /// The ID of the VPN Server Configuration that the VPN Server Configuration Policy Group belongs to. Changing this forces a new resource to be created.
        /// </summary>
        [Input("vpnServerConfigurationId", required: true)]
        public Input<string> VpnServerConfigurationId { get; set; } = null!;

        public VpnServerConfigurationPolicyGroupArgs()
        {
        }
        public static new VpnServerConfigurationPolicyGroupArgs Empty => new VpnServerConfigurationPolicyGroupArgs();
    }

    public sealed class VpnServerConfigurationPolicyGroupState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Is this a default VPN Server Configuration Policy Group? Defaults to `false`. Changing this forces a new resource to be created.
        /// </summary>
        [Input("isDefault")]
        public Input<bool>? IsDefault { get; set; }

        /// <summary>
        /// The Name which should be used for this VPN Server Configuration Policy Group. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("policies")]
        private InputList<Inputs.VpnServerConfigurationPolicyGroupPolicyGetArgs>? _policies;

        /// <summary>
        /// One or more `policy` blocks as documented below.
        /// </summary>
        public InputList<Inputs.VpnServerConfigurationPolicyGroupPolicyGetArgs> Policies
        {
            get => _policies ?? (_policies = new InputList<Inputs.VpnServerConfigurationPolicyGroupPolicyGetArgs>());
            set => _policies = value;
        }

        /// <summary>
        /// The priority of this VPN Server Configuration Policy Group. Defaults to `0`.
        /// </summary>
        [Input("priority")]
        public Input<int>? Priority { get; set; }

        /// <summary>
        /// The ID of the VPN Server Configuration that the VPN Server Configuration Policy Group belongs to. Changing this forces a new resource to be created.
        /// </summary>
        [Input("vpnServerConfigurationId")]
        public Input<string>? VpnServerConfigurationId { get; set; }

        public VpnServerConfigurationPolicyGroupState()
        {
        }
        public static new VpnServerConfigurationPolicyGroupState Empty => new VpnServerConfigurationPolicyGroupState();
    }
}
