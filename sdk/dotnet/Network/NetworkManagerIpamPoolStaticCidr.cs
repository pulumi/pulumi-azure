// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Network
{
    /// <summary>
    /// Manages a Network Manager IPAM Pool Static CIDR.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Azure = Pulumi.Azure;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Azure.Core.ResourceGroup("example", new()
    ///     {
    ///         Name = "example-resources",
    ///         Location = "West Europe",
    ///     });
    /// 
    ///     var current = Azure.Core.GetSubscription.Invoke();
    /// 
    ///     var exampleNetworkManager = new Azure.Network.NetworkManager("example", new()
    ///     {
    ///         Name = "example-nm",
    ///         ResourceGroupName = example.Name,
    ///         Location = example.Location,
    ///         Scope = new Azure.Network.Inputs.NetworkManagerScopeArgs
    ///         {
    ///             SubscriptionIds = new[]
    ///             {
    ///                 current.Apply(getSubscriptionResult =&gt; getSubscriptionResult.Id),
    ///             },
    ///         },
    ///     });
    /// 
    ///     var exampleNetworkManagerIpamPool = new Azure.Network.NetworkManagerIpamPool("example", new()
    ///     {
    ///         Name = "example-ipampool",
    ///         NetworkManagerId = exampleNetworkManager.Id,
    ///         Location = example.Location,
    ///         DisplayName = "ipampool1",
    ///         AddressPrefixes = new[]
    ///         {
    ///             "10.0.0.0/24",
    ///         },
    ///     });
    /// 
    ///     var exampleNetworkManagerIpamPoolStaticCidr = new Azure.Network.NetworkManagerIpamPoolStaticCidr("example", new()
    ///     {
    ///         Name = "example-ipsc",
    ///         IpamPoolId = exampleNetworkManagerIpamPool.Id,
    ///         AddressPrefixes = new[]
    ///         {
    ///             "10.0.0.0/26",
    ///             "10.0.0.128/27",
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## API Providers
    /// 
    /// &lt;!-- This section is generated, changes will be overwritten --&gt;
    /// This resource uses the following Azure API Providers:
    /// 
    /// * `Microsoft.Network` - 2024-05-01
    /// 
    /// ## Import
    /// 
    /// Network Manager IPAM Pool Static CIDRs can be imported using the `resource id`, e.g.
    /// 
    /// ```sh
    /// $ pulumi import azure:network/networkManagerIpamPoolStaticCidr:NetworkManagerIpamPoolStaticCidr example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg1/providers/Microsoft.Network/networkManagers/manager1/ipamPools/pool1/staticCidrs/cidr1
    /// ```
    /// </summary>
    [AzureResourceType("azure:network/networkManagerIpamPoolStaticCidr:NetworkManagerIpamPoolStaticCidr")]
    public partial class NetworkManagerIpamPoolStaticCidr : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Specifies a list of IPv4 or IPv6 IP address prefixes which will be allocated to the Static CIDR.
        /// 
        /// &gt; **Note:** Exactly one of `AddressPrefixes` or `NumberOfIpAddressesToAllocate` must be specified.
        /// </summary>
        [Output("addressPrefixes")]
        public Output<ImmutableArray<string>> AddressPrefixes { get; private set; } = null!;

        /// <summary>
        /// The ID of the Network Manager IP Address Management (IPAM) Pool. Changing this forces a new Network Manager IPAM Pool Static CIDR to be created.
        /// </summary>
        [Output("ipamPoolId")]
        public Output<string> IpamPoolId { get; private set; } = null!;

        /// <summary>
        /// The name which should be used for this Network Manager IPAM Pool Static CIDR. Changing this forces a new Network Manager IPAM Pool Static CIDR to be created.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The number of IP addresses to allocate to the Static CIDR. The value must be a string representing a positive integer which is a positive power of 2, e.g., `"16"`.
        /// 
        /// &gt; **Note:** Exactly one of `AddressPrefixes` or `NumberOfIpAddressesToAllocate` must be specified.
        /// </summary>
        [Output("numberOfIpAddressesToAllocate")]
        public Output<string?> NumberOfIpAddressesToAllocate { get; private set; } = null!;


        /// <summary>
        /// Create a NetworkManagerIpamPoolStaticCidr resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public NetworkManagerIpamPoolStaticCidr(string name, NetworkManagerIpamPoolStaticCidrArgs args, CustomResourceOptions? options = null)
            : base("azure:network/networkManagerIpamPoolStaticCidr:NetworkManagerIpamPoolStaticCidr", name, args ?? new NetworkManagerIpamPoolStaticCidrArgs(), MakeResourceOptions(options, ""))
        {
        }

        private NetworkManagerIpamPoolStaticCidr(string name, Input<string> id, NetworkManagerIpamPoolStaticCidrState? state = null, CustomResourceOptions? options = null)
            : base("azure:network/networkManagerIpamPoolStaticCidr:NetworkManagerIpamPoolStaticCidr", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing NetworkManagerIpamPoolStaticCidr resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static NetworkManagerIpamPoolStaticCidr Get(string name, Input<string> id, NetworkManagerIpamPoolStaticCidrState? state = null, CustomResourceOptions? options = null)
        {
            return new NetworkManagerIpamPoolStaticCidr(name, id, state, options);
        }
    }

    public sealed class NetworkManagerIpamPoolStaticCidrArgs : global::Pulumi.ResourceArgs
    {
        [Input("addressPrefixes")]
        private InputList<string>? _addressPrefixes;

        /// <summary>
        /// Specifies a list of IPv4 or IPv6 IP address prefixes which will be allocated to the Static CIDR.
        /// 
        /// &gt; **Note:** Exactly one of `AddressPrefixes` or `NumberOfIpAddressesToAllocate` must be specified.
        /// </summary>
        public InputList<string> AddressPrefixes
        {
            get => _addressPrefixes ?? (_addressPrefixes = new InputList<string>());
            set => _addressPrefixes = value;
        }

        /// <summary>
        /// The ID of the Network Manager IP Address Management (IPAM) Pool. Changing this forces a new Network Manager IPAM Pool Static CIDR to be created.
        /// </summary>
        [Input("ipamPoolId", required: true)]
        public Input<string> IpamPoolId { get; set; } = null!;

        /// <summary>
        /// The name which should be used for this Network Manager IPAM Pool Static CIDR. Changing this forces a new Network Manager IPAM Pool Static CIDR to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The number of IP addresses to allocate to the Static CIDR. The value must be a string representing a positive integer which is a positive power of 2, e.g., `"16"`.
        /// 
        /// &gt; **Note:** Exactly one of `AddressPrefixes` or `NumberOfIpAddressesToAllocate` must be specified.
        /// </summary>
        [Input("numberOfIpAddressesToAllocate")]
        public Input<string>? NumberOfIpAddressesToAllocate { get; set; }

        public NetworkManagerIpamPoolStaticCidrArgs()
        {
        }
        public static new NetworkManagerIpamPoolStaticCidrArgs Empty => new NetworkManagerIpamPoolStaticCidrArgs();
    }

    public sealed class NetworkManagerIpamPoolStaticCidrState : global::Pulumi.ResourceArgs
    {
        [Input("addressPrefixes")]
        private InputList<string>? _addressPrefixes;

        /// <summary>
        /// Specifies a list of IPv4 or IPv6 IP address prefixes which will be allocated to the Static CIDR.
        /// 
        /// &gt; **Note:** Exactly one of `AddressPrefixes` or `NumberOfIpAddressesToAllocate` must be specified.
        /// </summary>
        public InputList<string> AddressPrefixes
        {
            get => _addressPrefixes ?? (_addressPrefixes = new InputList<string>());
            set => _addressPrefixes = value;
        }

        /// <summary>
        /// The ID of the Network Manager IP Address Management (IPAM) Pool. Changing this forces a new Network Manager IPAM Pool Static CIDR to be created.
        /// </summary>
        [Input("ipamPoolId")]
        public Input<string>? IpamPoolId { get; set; }

        /// <summary>
        /// The name which should be used for this Network Manager IPAM Pool Static CIDR. Changing this forces a new Network Manager IPAM Pool Static CIDR to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The number of IP addresses to allocate to the Static CIDR. The value must be a string representing a positive integer which is a positive power of 2, e.g., `"16"`.
        /// 
        /// &gt; **Note:** Exactly one of `AddressPrefixes` or `NumberOfIpAddressesToAllocate` must be specified.
        /// </summary>
        [Input("numberOfIpAddressesToAllocate")]
        public Input<string>? NumberOfIpAddressesToAllocate { get; set; }

        public NetworkManagerIpamPoolStaticCidrState()
        {
        }
        public static new NetworkManagerIpamPoolStaticCidrState Empty => new NetworkManagerIpamPoolStaticCidrState();
    }
}
