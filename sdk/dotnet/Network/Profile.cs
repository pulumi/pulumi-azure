// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Network
{
    /// <summary>
    /// Manages an Azure Network Profile.
    /// 
    /// &gt; This content is derived from https://github.com/terraform-providers/terraform-provider-azurerm/blob/master/website/docs/r/network_profile.html.markdown.
    /// </summary>
    public partial class Profile : Pulumi.CustomResource
    {
        /// <summary>
        /// A `container_network_interface` block as documented below.
        /// </summary>
        [Output("containerNetworkInterface")]
        public Output<Outputs.ProfileContainerNetworkInterface> ContainerNetworkInterface { get; private set; } = null!;

        /// <summary>
        /// One or more Resource IDs of Azure Container Network Interfaces.
        /// </summary>
        [Output("containerNetworkInterfaceIds")]
        public Output<ImmutableArray<string>> ContainerNetworkInterfaceIds { get; private set; } = null!;

        /// <summary>
        /// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
        /// </summary>
        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// Specifies the name of the Network Profile. Changing this forces a new resource to be created.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The name of the resource group in which to create the resource. Changing this forces a new resource to be created.
        /// </summary>
        [Output("resourceGroupName")]
        public Output<string> ResourceGroupName { get; private set; } = null!;

        /// <summary>
        /// A mapping of tags to assign to the resource.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, object>> Tags { get; private set; } = null!;


        /// <summary>
        /// Create a Profile resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Profile(string name, ProfileArgs args, CustomResourceOptions? options = null)
            : base("azure:network/profile:Profile", name, args, MakeResourceOptions(options, ""))
        {
        }

        private Profile(string name, Input<string> id, ProfileState? state = null, CustomResourceOptions? options = null)
            : base("azure:network/profile:Profile", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Profile resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Profile Get(string name, Input<string> id, ProfileState? state = null, CustomResourceOptions? options = null)
        {
            return new Profile(name, id, state, options);
        }
    }

    public sealed class ProfileArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// A `container_network_interface` block as documented below.
        /// </summary>
        [Input("containerNetworkInterface", required: true)]
        public Input<Inputs.ProfileContainerNetworkInterfaceArgs> ContainerNetworkInterface { get; set; } = null!;

        /// <summary>
        /// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// Specifies the name of the Network Profile. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The name of the resource group in which to create the resource. Changing this forces a new resource to be created.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        [Input("tags")]
        private InputMap<object>? _tags;

        /// <summary>
        /// A mapping of tags to assign to the resource.
        /// </summary>
        public InputMap<object> Tags
        {
            get => _tags ?? (_tags = new InputMap<object>());
            set => _tags = value;
        }

        public ProfileArgs()
        {
        }
    }

    public sealed class ProfileState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// A `container_network_interface` block as documented below.
        /// </summary>
        [Input("containerNetworkInterface")]
        public Input<Inputs.ProfileContainerNetworkInterfaceGetArgs>? ContainerNetworkInterface { get; set; }

        [Input("containerNetworkInterfaceIds")]
        private InputList<string>? _containerNetworkInterfaceIds;

        /// <summary>
        /// One or more Resource IDs of Azure Container Network Interfaces.
        /// </summary>
        public InputList<string> ContainerNetworkInterfaceIds
        {
            get => _containerNetworkInterfaceIds ?? (_containerNetworkInterfaceIds = new InputList<string>());
            set => _containerNetworkInterfaceIds = value;
        }

        /// <summary>
        /// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// Specifies the name of the Network Profile. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The name of the resource group in which to create the resource. Changing this forces a new resource to be created.
        /// </summary>
        [Input("resourceGroupName")]
        public Input<string>? ResourceGroupName { get; set; }

        [Input("tags")]
        private InputMap<object>? _tags;

        /// <summary>
        /// A mapping of tags to assign to the resource.
        /// </summary>
        public InputMap<object> Tags
        {
            get => _tags ?? (_tags = new InputMap<object>());
            set => _tags = value;
        }

        public ProfileState()
        {
        }
    }

    namespace Inputs
    {

    public sealed class ProfileContainerNetworkInterfaceArgs : Pulumi.ResourceArgs
    {
        [Input("ipConfigurations", required: true)]
        private InputList<ProfileContainerNetworkInterfaceIpConfigurationsArgs>? _ipConfigurations;
        public InputList<ProfileContainerNetworkInterfaceIpConfigurationsArgs> IpConfigurations
        {
            get => _ipConfigurations ?? (_ipConfigurations = new InputList<ProfileContainerNetworkInterfaceIpConfigurationsArgs>());
            set => _ipConfigurations = value;
        }

        /// <summary>
        /// Specifies the name of the Network Profile. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        public ProfileContainerNetworkInterfaceArgs()
        {
        }
    }

    public sealed class ProfileContainerNetworkInterfaceGetArgs : Pulumi.ResourceArgs
    {
        [Input("ipConfigurations", required: true)]
        private InputList<ProfileContainerNetworkInterfaceIpConfigurationsGetArgs>? _ipConfigurations;
        public InputList<ProfileContainerNetworkInterfaceIpConfigurationsGetArgs> IpConfigurations
        {
            get => _ipConfigurations ?? (_ipConfigurations = new InputList<ProfileContainerNetworkInterfaceIpConfigurationsGetArgs>());
            set => _ipConfigurations = value;
        }

        /// <summary>
        /// Specifies the name of the Network Profile. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        public ProfileContainerNetworkInterfaceGetArgs()
        {
        }
    }

    public sealed class ProfileContainerNetworkInterfaceIpConfigurationsArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies the name of the Network Profile. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        [Input("subnetId", required: true)]
        public Input<string> SubnetId { get; set; } = null!;

        public ProfileContainerNetworkInterfaceIpConfigurationsArgs()
        {
        }
    }

    public sealed class ProfileContainerNetworkInterfaceIpConfigurationsGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies the name of the Network Profile. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        [Input("subnetId", required: true)]
        public Input<string> SubnetId { get; set; } = null!;

        public ProfileContainerNetworkInterfaceIpConfigurationsGetArgs()
        {
        }
    }
    }

    namespace Outputs
    {

    [OutputType]
    public sealed class ProfileContainerNetworkInterface
    {
        public readonly ImmutableArray<ProfileContainerNetworkInterfaceIpConfigurations> IpConfigurations;
        /// <summary>
        /// Specifies the name of the Network Profile. Changing this forces a new resource to be created.
        /// </summary>
        public readonly string Name;

        [OutputConstructor]
        private ProfileContainerNetworkInterface(
            ImmutableArray<ProfileContainerNetworkInterfaceIpConfigurations> ipConfigurations,
            string name)
        {
            IpConfigurations = ipConfigurations;
            Name = name;
        }
    }

    [OutputType]
    public sealed class ProfileContainerNetworkInterfaceIpConfigurations
    {
        /// <summary>
        /// Specifies the name of the Network Profile. Changing this forces a new resource to be created.
        /// </summary>
        public readonly string Name;
        public readonly string SubnetId;

        [OutputConstructor]
        private ProfileContainerNetworkInterfaceIpConfigurations(
            string name,
            string subnetId)
        {
            Name = name;
            SubnetId = subnetId;
        }
    }
    }
}
