// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Network
{
    /// <summary>
    /// Manages a Public IP Address.
    /// 
    /// &gt; **Note** If this resource is to be associated with a resource that requires disassociation before destruction (such as `azure.network.NetworkInterface`) it is recommended to set the `lifecycle` argument `create_before_destroy = true`. Otherwise, it can fail to disassociate on destruction.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Azure = Pulumi.Azure;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var exampleResourceGroup = new Azure.Core.ResourceGroup("exampleResourceGroup", new()
    ///     {
    ///         Location = "West Europe",
    ///     });
    /// 
    ///     var examplePublicIp = new Azure.Network.PublicIp("examplePublicIp", new()
    ///     {
    ///         ResourceGroupName = exampleResourceGroup.Name,
    ///         Location = exampleResourceGroup.Location,
    ///         AllocationMethod = "Static",
    ///         Tags = 
    ///         {
    ///             { "environment", "Production" },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Public IPs can be imported using the `resource id`, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import azure:network/publicIp:PublicIp myPublicIp /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.Network/publicIPAddresses/myPublicIpAddress1
    /// ```
    /// </summary>
    [AzureResourceType("azure:network/publicIp:PublicIp")]
    public partial class PublicIp : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Defines the allocation method for this IP address. Possible values are `Static` or `Dynamic`.
        /// 
        /// &gt; **Note** `Dynamic` Public IP Addresses aren't allocated until they're assigned to a resource (such as a Virtual Machine or a Load Balancer) by design within Azure. See `ip_address` argument.
        /// </summary>
        [Output("allocationMethod")]
        public Output<string> AllocationMethod { get; private set; } = null!;

        /// <summary>
        /// The DDoS protection mode of the public IP. Possible values are `Disabled`, `Enabled`, and `VirtualNetworkInherited`. Defaults to `VirtualNetworkInherited`.
        /// </summary>
        [Output("ddosProtectionMode")]
        public Output<string?> DdosProtectionMode { get; private set; } = null!;

        /// <summary>
        /// The ID of DDoS protection plan associated with the public IP. 
        /// 
        /// &gt; **Note:** `ddos_protection_plan_id` can only be set when `ddos_protection_mode` is `Enabled`.
        /// </summary>
        [Output("ddosProtectionPlanId")]
        public Output<string?> DdosProtectionPlanId { get; private set; } = null!;

        /// <summary>
        /// Label for the Domain Name. Will be used to make up the FQDN. If a domain name label is specified, an A DNS record is created for the public IP in the Microsoft Azure DNS system.
        /// </summary>
        [Output("domainNameLabel")]
        public Output<string?> DomainNameLabel { get; private set; } = null!;

        /// <summary>
        /// Specifies the Edge Zone within the Azure Region where this Public IP should exist. Changing this forces a new Public IP to be created.
        /// </summary>
        [Output("edgeZone")]
        public Output<string?> EdgeZone { get; private set; } = null!;

        /// <summary>
        /// Fully qualified domain name of the A DNS record associated with the public IP. `domain_name_label` must be specified to get the `fqdn`. This is the concatenation of the `domain_name_label` and the regionalized DNS zone
        /// </summary>
        [Output("fqdn")]
        public Output<string> Fqdn { get; private set; } = null!;

        /// <summary>
        /// Specifies the timeout for the TCP idle connection. The value can be set between 4 and 30 minutes.
        /// </summary>
        [Output("idleTimeoutInMinutes")]
        public Output<int?> IdleTimeoutInMinutes { get; private set; } = null!;

        /// <summary>
        /// The IP address value that was allocated.
        /// </summary>
        [Output("ipAddress")]
        public Output<string> IpAddress { get; private set; } = null!;

        /// <summary>
        /// A mapping of IP tags to assign to the public IP. Changing this forces a new resource to be created.
        /// 
        /// &gt; **Note** IP Tag `RoutingPreference` requires multiple `zones` and `Standard` SKU to be set.
        /// </summary>
        [Output("ipTags")]
        public Output<ImmutableDictionary<string, string>?> IpTags { get; private set; } = null!;

        /// <summary>
        /// The IP Version to use, IPv6 or IPv4. Changing this forces a new resource to be created. Defaults to `IPv4`.
        /// 
        /// &gt; **Note** Only `static` IP address allocation is supported for IPv6.
        /// </summary>
        [Output("ipVersion")]
        public Output<string?> IpVersion { get; private set; } = null!;

        /// <summary>
        /// Specifies the supported Azure location where the Public IP should exist. Changing this forces a new resource to be created.
        /// </summary>
        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// Specifies the name of the Public IP. Changing this forces a new Public IP to be created.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// If specified then public IP address allocated will be provided from the public IP prefix resource. Changing this forces a new resource to be created.
        /// </summary>
        [Output("publicIpPrefixId")]
        public Output<string?> PublicIpPrefixId { get; private set; } = null!;

        /// <summary>
        /// The name of the Resource Group where this Public IP should exist. Changing this forces a new Public IP to be created.
        /// </summary>
        [Output("resourceGroupName")]
        public Output<string> ResourceGroupName { get; private set; } = null!;

        /// <summary>
        /// A fully qualified domain name that resolves to this public IP address. If the reverseFqdn is specified, then a PTR DNS record is created pointing from the IP address in the in-addr.arpa domain to the reverse FQDN.
        /// </summary>
        [Output("reverseFqdn")]
        public Output<string?> ReverseFqdn { get; private set; } = null!;

        /// <summary>
        /// The SKU of the Public IP. Accepted values are `Basic` and `Standard`. Defaults to `Basic`. Changing this forces a new resource to be created.
        /// 
        /// &gt; **Note** Public IP Standard SKUs require `allocation_method` to be set to `Static`.
        /// </summary>
        [Output("sku")]
        public Output<string?> Sku { get; private set; } = null!;

        /// <summary>
        /// The SKU Tier that should be used for the Public IP. Possible values are `Regional` and `Global`. Defaults to `Regional`. Changing this forces a new resource to be created.
        /// 
        /// &gt; **Note** When `sku_tier` is set to `Global`, `sku` must be set to `Standard`.
        /// </summary>
        [Output("skuTier")]
        public Output<string?> SkuTier { get; private set; } = null!;

        /// <summary>
        /// A mapping of tags to assign to the resource.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// A collection containing the availability zone to allocate the Public IP in. Changing this forces a new resource to be created.
        /// 
        /// &gt; **Note:** Availability Zones are only supported with a [Standard SKU](https://docs.microsoft.com/azure/virtual-network/virtual-network-ip-addresses-overview-arm#standard) and [in select regions](https://docs.microsoft.com/azure/availability-zones/az-overview) at this time. Standard SKU Public IP Addresses that do not specify a zone are **not** zone-redundant by default.
        /// </summary>
        [Output("zones")]
        public Output<ImmutableArray<string>> Zones { get; private set; } = null!;


        /// <summary>
        /// Create a PublicIp resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public PublicIp(string name, PublicIpArgs args, CustomResourceOptions? options = null)
            : base("azure:network/publicIp:PublicIp", name, args ?? new PublicIpArgs(), MakeResourceOptions(options, ""))
        {
        }

        private PublicIp(string name, Input<string> id, PublicIpState? state = null, CustomResourceOptions? options = null)
            : base("azure:network/publicIp:PublicIp", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing PublicIp resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static PublicIp Get(string name, Input<string> id, PublicIpState? state = null, CustomResourceOptions? options = null)
        {
            return new PublicIp(name, id, state, options);
        }
    }

    public sealed class PublicIpArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Defines the allocation method for this IP address. Possible values are `Static` or `Dynamic`.
        /// 
        /// &gt; **Note** `Dynamic` Public IP Addresses aren't allocated until they're assigned to a resource (such as a Virtual Machine or a Load Balancer) by design within Azure. See `ip_address` argument.
        /// </summary>
        [Input("allocationMethod", required: true)]
        public Input<string> AllocationMethod { get; set; } = null!;

        /// <summary>
        /// The DDoS protection mode of the public IP. Possible values are `Disabled`, `Enabled`, and `VirtualNetworkInherited`. Defaults to `VirtualNetworkInherited`.
        /// </summary>
        [Input("ddosProtectionMode")]
        public Input<string>? DdosProtectionMode { get; set; }

        /// <summary>
        /// The ID of DDoS protection plan associated with the public IP. 
        /// 
        /// &gt; **Note:** `ddos_protection_plan_id` can only be set when `ddos_protection_mode` is `Enabled`.
        /// </summary>
        [Input("ddosProtectionPlanId")]
        public Input<string>? DdosProtectionPlanId { get; set; }

        /// <summary>
        /// Label for the Domain Name. Will be used to make up the FQDN. If a domain name label is specified, an A DNS record is created for the public IP in the Microsoft Azure DNS system.
        /// </summary>
        [Input("domainNameLabel")]
        public Input<string>? DomainNameLabel { get; set; }

        /// <summary>
        /// Specifies the Edge Zone within the Azure Region where this Public IP should exist. Changing this forces a new Public IP to be created.
        /// </summary>
        [Input("edgeZone")]
        public Input<string>? EdgeZone { get; set; }

        /// <summary>
        /// Specifies the timeout for the TCP idle connection. The value can be set between 4 and 30 minutes.
        /// </summary>
        [Input("idleTimeoutInMinutes")]
        public Input<int>? IdleTimeoutInMinutes { get; set; }

        [Input("ipTags")]
        private InputMap<string>? _ipTags;

        /// <summary>
        /// A mapping of IP tags to assign to the public IP. Changing this forces a new resource to be created.
        /// 
        /// &gt; **Note** IP Tag `RoutingPreference` requires multiple `zones` and `Standard` SKU to be set.
        /// </summary>
        public InputMap<string> IpTags
        {
            get => _ipTags ?? (_ipTags = new InputMap<string>());
            set => _ipTags = value;
        }

        /// <summary>
        /// The IP Version to use, IPv6 or IPv4. Changing this forces a new resource to be created. Defaults to `IPv4`.
        /// 
        /// &gt; **Note** Only `static` IP address allocation is supported for IPv6.
        /// </summary>
        [Input("ipVersion")]
        public Input<string>? IpVersion { get; set; }

        /// <summary>
        /// Specifies the supported Azure location where the Public IP should exist. Changing this forces a new resource to be created.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// Specifies the name of the Public IP. Changing this forces a new Public IP to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// If specified then public IP address allocated will be provided from the public IP prefix resource. Changing this forces a new resource to be created.
        /// </summary>
        [Input("publicIpPrefixId")]
        public Input<string>? PublicIpPrefixId { get; set; }

        /// <summary>
        /// The name of the Resource Group where this Public IP should exist. Changing this forces a new Public IP to be created.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// A fully qualified domain name that resolves to this public IP address. If the reverseFqdn is specified, then a PTR DNS record is created pointing from the IP address in the in-addr.arpa domain to the reverse FQDN.
        /// </summary>
        [Input("reverseFqdn")]
        public Input<string>? ReverseFqdn { get; set; }

        /// <summary>
        /// The SKU of the Public IP. Accepted values are `Basic` and `Standard`. Defaults to `Basic`. Changing this forces a new resource to be created.
        /// 
        /// &gt; **Note** Public IP Standard SKUs require `allocation_method` to be set to `Static`.
        /// </summary>
        [Input("sku")]
        public Input<string>? Sku { get; set; }

        /// <summary>
        /// The SKU Tier that should be used for the Public IP. Possible values are `Regional` and `Global`. Defaults to `Regional`. Changing this forces a new resource to be created.
        /// 
        /// &gt; **Note** When `sku_tier` is set to `Global`, `sku` must be set to `Standard`.
        /// </summary>
        [Input("skuTier")]
        public Input<string>? SkuTier { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// A mapping of tags to assign to the resource.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("zones")]
        private InputList<string>? _zones;

        /// <summary>
        /// A collection containing the availability zone to allocate the Public IP in. Changing this forces a new resource to be created.
        /// 
        /// &gt; **Note:** Availability Zones are only supported with a [Standard SKU](https://docs.microsoft.com/azure/virtual-network/virtual-network-ip-addresses-overview-arm#standard) and [in select regions](https://docs.microsoft.com/azure/availability-zones/az-overview) at this time. Standard SKU Public IP Addresses that do not specify a zone are **not** zone-redundant by default.
        /// </summary>
        public InputList<string> Zones
        {
            get => _zones ?? (_zones = new InputList<string>());
            set => _zones = value;
        }

        public PublicIpArgs()
        {
        }
        public static new PublicIpArgs Empty => new PublicIpArgs();
    }

    public sealed class PublicIpState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Defines the allocation method for this IP address. Possible values are `Static` or `Dynamic`.
        /// 
        /// &gt; **Note** `Dynamic` Public IP Addresses aren't allocated until they're assigned to a resource (such as a Virtual Machine or a Load Balancer) by design within Azure. See `ip_address` argument.
        /// </summary>
        [Input("allocationMethod")]
        public Input<string>? AllocationMethod { get; set; }

        /// <summary>
        /// The DDoS protection mode of the public IP. Possible values are `Disabled`, `Enabled`, and `VirtualNetworkInherited`. Defaults to `VirtualNetworkInherited`.
        /// </summary>
        [Input("ddosProtectionMode")]
        public Input<string>? DdosProtectionMode { get; set; }

        /// <summary>
        /// The ID of DDoS protection plan associated with the public IP. 
        /// 
        /// &gt; **Note:** `ddos_protection_plan_id` can only be set when `ddos_protection_mode` is `Enabled`.
        /// </summary>
        [Input("ddosProtectionPlanId")]
        public Input<string>? DdosProtectionPlanId { get; set; }

        /// <summary>
        /// Label for the Domain Name. Will be used to make up the FQDN. If a domain name label is specified, an A DNS record is created for the public IP in the Microsoft Azure DNS system.
        /// </summary>
        [Input("domainNameLabel")]
        public Input<string>? DomainNameLabel { get; set; }

        /// <summary>
        /// Specifies the Edge Zone within the Azure Region where this Public IP should exist. Changing this forces a new Public IP to be created.
        /// </summary>
        [Input("edgeZone")]
        public Input<string>? EdgeZone { get; set; }

        /// <summary>
        /// Fully qualified domain name of the A DNS record associated with the public IP. `domain_name_label` must be specified to get the `fqdn`. This is the concatenation of the `domain_name_label` and the regionalized DNS zone
        /// </summary>
        [Input("fqdn")]
        public Input<string>? Fqdn { get; set; }

        /// <summary>
        /// Specifies the timeout for the TCP idle connection. The value can be set between 4 and 30 minutes.
        /// </summary>
        [Input("idleTimeoutInMinutes")]
        public Input<int>? IdleTimeoutInMinutes { get; set; }

        /// <summary>
        /// The IP address value that was allocated.
        /// </summary>
        [Input("ipAddress")]
        public Input<string>? IpAddress { get; set; }

        [Input("ipTags")]
        private InputMap<string>? _ipTags;

        /// <summary>
        /// A mapping of IP tags to assign to the public IP. Changing this forces a new resource to be created.
        /// 
        /// &gt; **Note** IP Tag `RoutingPreference` requires multiple `zones` and `Standard` SKU to be set.
        /// </summary>
        public InputMap<string> IpTags
        {
            get => _ipTags ?? (_ipTags = new InputMap<string>());
            set => _ipTags = value;
        }

        /// <summary>
        /// The IP Version to use, IPv6 or IPv4. Changing this forces a new resource to be created. Defaults to `IPv4`.
        /// 
        /// &gt; **Note** Only `static` IP address allocation is supported for IPv6.
        /// </summary>
        [Input("ipVersion")]
        public Input<string>? IpVersion { get; set; }

        /// <summary>
        /// Specifies the supported Azure location where the Public IP should exist. Changing this forces a new resource to be created.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// Specifies the name of the Public IP. Changing this forces a new Public IP to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// If specified then public IP address allocated will be provided from the public IP prefix resource. Changing this forces a new resource to be created.
        /// </summary>
        [Input("publicIpPrefixId")]
        public Input<string>? PublicIpPrefixId { get; set; }

        /// <summary>
        /// The name of the Resource Group where this Public IP should exist. Changing this forces a new Public IP to be created.
        /// </summary>
        [Input("resourceGroupName")]
        public Input<string>? ResourceGroupName { get; set; }

        /// <summary>
        /// A fully qualified domain name that resolves to this public IP address. If the reverseFqdn is specified, then a PTR DNS record is created pointing from the IP address in the in-addr.arpa domain to the reverse FQDN.
        /// </summary>
        [Input("reverseFqdn")]
        public Input<string>? ReverseFqdn { get; set; }

        /// <summary>
        /// The SKU of the Public IP. Accepted values are `Basic` and `Standard`. Defaults to `Basic`. Changing this forces a new resource to be created.
        /// 
        /// &gt; **Note** Public IP Standard SKUs require `allocation_method` to be set to `Static`.
        /// </summary>
        [Input("sku")]
        public Input<string>? Sku { get; set; }

        /// <summary>
        /// The SKU Tier that should be used for the Public IP. Possible values are `Regional` and `Global`. Defaults to `Regional`. Changing this forces a new resource to be created.
        /// 
        /// &gt; **Note** When `sku_tier` is set to `Global`, `sku` must be set to `Standard`.
        /// </summary>
        [Input("skuTier")]
        public Input<string>? SkuTier { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// A mapping of tags to assign to the resource.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("zones")]
        private InputList<string>? _zones;

        /// <summary>
        /// A collection containing the availability zone to allocate the Public IP in. Changing this forces a new resource to be created.
        /// 
        /// &gt; **Note:** Availability Zones are only supported with a [Standard SKU](https://docs.microsoft.com/azure/virtual-network/virtual-network-ip-addresses-overview-arm#standard) and [in select regions](https://docs.microsoft.com/azure/availability-zones/az-overview) at this time. Standard SKU Public IP Addresses that do not specify a zone are **not** zone-redundant by default.
        /// </summary>
        public InputList<string> Zones
        {
            get => _zones ?? (_zones = new InputList<string>());
            set => _zones = value;
        }

        public PublicIpState()
        {
        }
        public static new PublicIpState Empty => new PublicIpState();
    }
}
