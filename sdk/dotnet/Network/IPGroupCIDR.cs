// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Network
{
    /// <summary>
    /// Manages IP Group CIDR records.
    /// 
    /// &gt; Warning Do not use this resource at the same time as the `cidrs` property of the
    /// `azure.network.IPGroup` resource for the same IP Group. Doing so will cause a conflict and
    /// CIDRS will be removed.
    /// 
    /// ## Import
    /// 
    /// IP Group CIDRs can be imported using the `resource id` of the IP Group and the CIDR value (`/` characters have to be replaced by `_`), e.g.
    /// 
    /// ```sh
    ///  $ pulumi import azure:network/iPGroupCIDR:IPGroupCIDR example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/ipGroups/test-ipgroup/cidrs/10.1.0.0_24
    /// ```
    /// </summary>
    [AzureResourceType("azure:network/iPGroupCIDR:IPGroupCIDR")]
    public partial class IPGroupCIDR : global::Pulumi.CustomResource
    {
        [Output("cidr")]
        public Output<string> Cidr { get; private set; } = null!;

        /// <summary>
        /// The ID of the destination IP Group.
        /// Changing this forces a new IP Group CIDR to be created.
        /// </summary>
        [Output("ipGroupId")]
        public Output<string> IpGroupId { get; private set; } = null!;


        /// <summary>
        /// Create a IPGroupCIDR resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public IPGroupCIDR(string name, IPGroupCIDRArgs args, CustomResourceOptions? options = null)
            : base("azure:network/iPGroupCIDR:IPGroupCIDR", name, args ?? new IPGroupCIDRArgs(), MakeResourceOptions(options, ""))
        {
        }

        private IPGroupCIDR(string name, Input<string> id, IPGroupCIDRState? state = null, CustomResourceOptions? options = null)
            : base("azure:network/iPGroupCIDR:IPGroupCIDR", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing IPGroupCIDR resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static IPGroupCIDR Get(string name, Input<string> id, IPGroupCIDRState? state = null, CustomResourceOptions? options = null)
        {
            return new IPGroupCIDR(name, id, state, options);
        }
    }

    public sealed class IPGroupCIDRArgs : global::Pulumi.ResourceArgs
    {
        [Input("cidr", required: true)]
        public Input<string> Cidr { get; set; } = null!;

        /// <summary>
        /// The ID of the destination IP Group.
        /// Changing this forces a new IP Group CIDR to be created.
        /// </summary>
        [Input("ipGroupId", required: true)]
        public Input<string> IpGroupId { get; set; } = null!;

        public IPGroupCIDRArgs()
        {
        }
        public static new IPGroupCIDRArgs Empty => new IPGroupCIDRArgs();
    }

    public sealed class IPGroupCIDRState : global::Pulumi.ResourceArgs
    {
        [Input("cidr")]
        public Input<string>? Cidr { get; set; }

        /// <summary>
        /// The ID of the destination IP Group.
        /// Changing this forces a new IP Group CIDR to be created.
        /// </summary>
        [Input("ipGroupId")]
        public Input<string>? IpGroupId { get; set; }

        public IPGroupCIDRState()
        {
        }
        public static new IPGroupCIDRState Empty => new IPGroupCIDRState();
    }
}
