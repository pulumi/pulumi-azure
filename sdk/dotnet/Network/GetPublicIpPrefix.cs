// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Network
{
    public static class GetPublicIpPrefix
    {
        /// <summary>
        /// Use this data source to access information about an existing Public IP Prefix.
        /// 
        /// ## Example Usage
        /// 
        /// ### Reference An Existing)
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Azure = Pulumi.Azure;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Azure.Network.GetPublicIpPrefix.Invoke(new()
        ///     {
        ///         Name = "name_of_public_ip",
        ///         ResourceGroupName = "name_of_resource_group",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["publicIpPrefix"] = example.Apply(getPublicIpPrefixResult =&gt; getPublicIpPrefixResult.IpPrefix),
        ///     };
        /// });
        /// ```
        /// 
        /// ## API Providers
        /// 
        /// &lt;!-- This section is generated, changes will be overwritten --&gt;
        /// This data source uses the following Azure API Providers:
        /// 
        /// * `Microsoft.Network`: 2024-05-01
        /// </summary>
        public static Task<GetPublicIpPrefixResult> InvokeAsync(GetPublicIpPrefixArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetPublicIpPrefixResult>("azure:network/getPublicIpPrefix:getPublicIpPrefix", args ?? new GetPublicIpPrefixArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to access information about an existing Public IP Prefix.
        /// 
        /// ## Example Usage
        /// 
        /// ### Reference An Existing)
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Azure = Pulumi.Azure;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Azure.Network.GetPublicIpPrefix.Invoke(new()
        ///     {
        ///         Name = "name_of_public_ip",
        ///         ResourceGroupName = "name_of_resource_group",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["publicIpPrefix"] = example.Apply(getPublicIpPrefixResult =&gt; getPublicIpPrefixResult.IpPrefix),
        ///     };
        /// });
        /// ```
        /// 
        /// ## API Providers
        /// 
        /// &lt;!-- This section is generated, changes will be overwritten --&gt;
        /// This data source uses the following Azure API Providers:
        /// 
        /// * `Microsoft.Network`: 2024-05-01
        /// </summary>
        public static Output<GetPublicIpPrefixResult> Invoke(GetPublicIpPrefixInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetPublicIpPrefixResult>("azure:network/getPublicIpPrefix:getPublicIpPrefix", args ?? new GetPublicIpPrefixInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to access information about an existing Public IP Prefix.
        /// 
        /// ## Example Usage
        /// 
        /// ### Reference An Existing)
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Azure = Pulumi.Azure;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Azure.Network.GetPublicIpPrefix.Invoke(new()
        ///     {
        ///         Name = "name_of_public_ip",
        ///         ResourceGroupName = "name_of_resource_group",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["publicIpPrefix"] = example.Apply(getPublicIpPrefixResult =&gt; getPublicIpPrefixResult.IpPrefix),
        ///     };
        /// });
        /// ```
        /// 
        /// ## API Providers
        /// 
        /// &lt;!-- This section is generated, changes will be overwritten --&gt;
        /// This data source uses the following Azure API Providers:
        /// 
        /// * `Microsoft.Network`: 2024-05-01
        /// </summary>
        public static Output<GetPublicIpPrefixResult> Invoke(GetPublicIpPrefixInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetPublicIpPrefixResult>("azure:network/getPublicIpPrefix:getPublicIpPrefix", args ?? new GetPublicIpPrefixInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetPublicIpPrefixArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Specifies the name of the public IP prefix.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        /// <summary>
        /// Specifies the name of the resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetPublicIpPrefixArgs()
        {
        }
        public static new GetPublicIpPrefixArgs Empty => new GetPublicIpPrefixArgs();
    }

    public sealed class GetPublicIpPrefixInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Specifies the name of the public IP prefix.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// Specifies the name of the resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetPublicIpPrefixInvokeArgs()
        {
        }
        public static new GetPublicIpPrefixInvokeArgs Empty => new GetPublicIpPrefixInvokeArgs();
    }


    [OutputType]
    public sealed class GetPublicIpPrefixResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The Public IP address range, in CIDR notation.
        /// </summary>
        public readonly string IpPrefix;
        /// <summary>
        /// The supported Azure location where the resource exists.
        /// </summary>
        public readonly string Location;
        public readonly string Name;
        /// <summary>
        /// The number of bits of the prefix.
        /// </summary>
        public readonly int PrefixLength;
        public readonly string ResourceGroupName;
        /// <summary>
        /// The SKU of the Public IP Prefix.
        /// </summary>
        public readonly string Sku;
        /// <summary>
        /// The SKU Tier of the Public IP.
        /// </summary>
        public readonly string SkuTier;
        /// <summary>
        /// A mapping of tags to assigned to the resource.
        /// </summary>
        public readonly ImmutableDictionary<string, string> Tags;
        /// <summary>
        /// A list of Availability Zones in which this Public IP Prefix is located.
        /// </summary>
        public readonly ImmutableArray<string> Zones;

        [OutputConstructor]
        private GetPublicIpPrefixResult(
            string id,

            string ipPrefix,

            string location,

            string name,

            int prefixLength,

            string resourceGroupName,

            string sku,

            string skuTier,

            ImmutableDictionary<string, string> tags,

            ImmutableArray<string> zones)
        {
            Id = id;
            IpPrefix = ipPrefix;
            Location = location;
            Name = name;
            PrefixLength = prefixLength;
            ResourceGroupName = resourceGroupName;
            Sku = sku;
            SkuTier = skuTier;
            Tags = tags;
            Zones = zones;
        }
    }
}
