// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Network
{
    public static class GetPublicIpPrefix
    {
        /// <summary>
        /// Use this data source to access information about an existing Public IP Prefix.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// ### Reference An Existing)
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Azure = Pulumi.Azure;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var example = Output.Create(Azure.Network.GetPublicIpPrefix.InvokeAsync(new Azure.Network.GetPublicIpPrefixArgs
        ///         {
        ///             Name = "name_of_public_ip",
        ///             ResourceGroupName = "name_of_resource_group",
        ///         }));
        ///         this.PublicIpPrefix = example.Apply(example =&gt; example.IpPrefix);
        ///     }
        /// 
        ///     [Output("publicIpPrefix")]
        ///     public Output&lt;string&gt; PublicIpPrefix { get; set; }
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetPublicIpPrefixResult> InvokeAsync(GetPublicIpPrefixArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetPublicIpPrefixResult>("azure:network/getPublicIpPrefix:getPublicIpPrefix", args ?? new GetPublicIpPrefixArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to access information about an existing Public IP Prefix.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// ### Reference An Existing)
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Azure = Pulumi.Azure;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var example = Output.Create(Azure.Network.GetPublicIpPrefix.InvokeAsync(new Azure.Network.GetPublicIpPrefixArgs
        ///         {
        ///             Name = "name_of_public_ip",
        ///             ResourceGroupName = "name_of_resource_group",
        ///         }));
        ///         this.PublicIpPrefix = example.Apply(example =&gt; example.IpPrefix);
        ///     }
        /// 
        ///     [Output("publicIpPrefix")]
        ///     public Output&lt;string&gt; PublicIpPrefix { get; set; }
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetPublicIpPrefixResult> Invoke(GetPublicIpPrefixInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetPublicIpPrefixResult>("azure:network/getPublicIpPrefix:getPublicIpPrefix", args ?? new GetPublicIpPrefixInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetPublicIpPrefixArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// Specifies the name of the public IP prefix.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        /// <summary>
        /// Specifies the name of the resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetPublicIpPrefixArgs()
        {
        }
    }

    public sealed class GetPublicIpPrefixInvokeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// Specifies the name of the public IP prefix.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// Specifies the name of the resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetPublicIpPrefixInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetPublicIpPrefixResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string IpPrefix;
        /// <summary>
        /// The supported Azure location where the resource exists.
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// The name of the Public IP prefix resource.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The number of bits of the prefix.
        /// </summary>
        public readonly int PrefixLength;
        /// <summary>
        /// The name of the resource group in which to create the public IP.
        /// </summary>
        public readonly string ResourceGroupName;
        /// <summary>
        /// The SKU of the Public IP Prefix.
        /// </summary>
        public readonly string Sku;
        /// <summary>
        /// A mapping of tags to assigned to the resource.
        /// </summary>
        public readonly ImmutableDictionary<string, string> Tags;
        /// <summary>
        /// A list of Availability Zones in which this Public IP Prefix is located.
        /// </summary>
        public readonly ImmutableArray<string> Zones;

        [OutputConstructor]
        private GetPublicIpPrefixResult(
            string id,

            string ipPrefix,

            string location,

            string name,

            int prefixLength,

            string resourceGroupName,

            string sku,

            ImmutableDictionary<string, string> tags,

            ImmutableArray<string> zones)
        {
            Id = id;
            IpPrefix = ipPrefix;
            Location = location;
            Name = name;
            PrefixLength = prefixLength;
            ResourceGroupName = resourceGroupName;
            Sku = sku;
            Tags = tags;
            Zones = zones;
        }
    }
}
