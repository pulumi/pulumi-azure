// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Network
{
    /// <summary>
    /// Manages an Azure Endpoint within a Traffic Manager Profile.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using Azure = Pulumi.Azure;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var exampleResourceGroup = new Azure.Core.ResourceGroup("exampleResourceGroup", new()
    ///     {
    ///         Location = "West Europe",
    ///     });
    /// 
    ///     var examplePublicIp = new Azure.Network.PublicIp("examplePublicIp", new()
    ///     {
    ///         Location = exampleResourceGroup.Location,
    ///         ResourceGroupName = exampleResourceGroup.Name,
    ///         AllocationMethod = "Static",
    ///         DomainNameLabel = "example-public-ip",
    ///     });
    /// 
    ///     var exampleTrafficManagerProfile = new Azure.Network.TrafficManagerProfile("exampleTrafficManagerProfile", new()
    ///     {
    ///         ResourceGroupName = exampleResourceGroup.Name,
    ///         TrafficRoutingMethod = "Weighted",
    ///         DnsConfig = new Azure.Network.Inputs.TrafficManagerProfileDnsConfigArgs
    ///         {
    ///             RelativeName = "example-profile",
    ///             Ttl = 100,
    ///         },
    ///         MonitorConfig = new Azure.Network.Inputs.TrafficManagerProfileMonitorConfigArgs
    ///         {
    ///             Protocol = "HTTP",
    ///             Port = 80,
    ///             Path = "/",
    ///             IntervalInSeconds = 30,
    ///             TimeoutInSeconds = 9,
    ///             ToleratedNumberOfFailures = 3,
    ///         },
    ///         Tags = 
    ///         {
    ///             { "environment", "Production" },
    ///         },
    ///     });
    /// 
    ///     var exampleTrafficManagerAzureEndpoint = new Azure.Network.TrafficManagerAzureEndpoint("exampleTrafficManagerAzureEndpoint", new()
    ///     {
    ///         ProfileId = exampleTrafficManagerProfile.Id,
    ///         Weight = 100,
    ///         TargetResourceId = examplePublicIp.Id,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Azure Endpoints can be imported using the `resource id`, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import azure:network/trafficManagerAzureEndpoint:TrafficManagerAzureEndpoint example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/example-resources/providers/Microsoft.Network/trafficManagerProfiles/example-profile/AzureEndpoints/example-endpoint
    /// ```
    /// </summary>
    [AzureResourceType("azure:network/trafficManagerAzureEndpoint:TrafficManagerAzureEndpoint")]
    public partial class TrafficManagerAzureEndpoint : global::Pulumi.CustomResource
    {
        /// <summary>
        /// One or more `custom_header` blocks as defined below.
        /// </summary>
        [Output("customHeaders")]
        public Output<ImmutableArray<Outputs.TrafficManagerAzureEndpointCustomHeader>> CustomHeaders { get; private set; } = null!;

        /// <summary>
        /// Is the endpoint enabled? Defaults to `true`.
        /// </summary>
        [Output("enabled")]
        public Output<bool?> Enabled { get; private set; } = null!;

        /// <summary>
        /// A list of Geographic Regions used to distribute traffic, such as `WORLD`, `UK` or `DE`. The same location can't be specified in two endpoints. [See the Geographic Hierarchies documentation for more information](https://docs.microsoft.com/rest/api/trafficmanager/geographichierarchies/getdefault).
        /// </summary>
        [Output("geoMappings")]
        public Output<ImmutableArray<string>> GeoMappings { get; private set; } = null!;

        /// <summary>
        /// The name of the Azure Endpoint. Changing this forces a new resource to be created.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Specifies the priority of this Endpoint, this must be specified for Profiles using the `Priority` traffic routing method. Supports values between 1 and 1000, with no Endpoints sharing the same value. If omitted the value will be computed in order of creation.
        /// </summary>
        [Output("priority")]
        public Output<int> Priority { get; private set; } = null!;

        /// <summary>
        /// The ID of the Traffic Manager Profile that this Azure Endpoint should be created within. Changing this forces a new resource to be created.
        /// </summary>
        [Output("profileId")]
        public Output<string> ProfileId { get; private set; } = null!;

        /// <summary>
        /// One or more `subnet` blocks as defined below. Changing this forces a new resource to be created.
        /// </summary>
        [Output("subnets")]
        public Output<ImmutableArray<Outputs.TrafficManagerAzureEndpointSubnet>> Subnets { get; private set; } = null!;

        /// <summary>
        /// The ID of the Azure Resource which should be used as a target.
        /// </summary>
        [Output("targetResourceId")]
        public Output<string> TargetResourceId { get; private set; } = null!;

        /// <summary>
        /// Specifies how much traffic should be distributed to this endpoint, this must be specified for Profiles using the Weighted traffic routing method. Valid values are between `1` and `1000`.
        /// </summary>
        [Output("weight")]
        public Output<int> Weight { get; private set; } = null!;


        /// <summary>
        /// Create a TrafficManagerAzureEndpoint resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public TrafficManagerAzureEndpoint(string name, TrafficManagerAzureEndpointArgs args, CustomResourceOptions? options = null)
            : base("azure:network/trafficManagerAzureEndpoint:TrafficManagerAzureEndpoint", name, args ?? new TrafficManagerAzureEndpointArgs(), MakeResourceOptions(options, ""))
        {
        }

        private TrafficManagerAzureEndpoint(string name, Input<string> id, TrafficManagerAzureEndpointState? state = null, CustomResourceOptions? options = null)
            : base("azure:network/trafficManagerAzureEndpoint:TrafficManagerAzureEndpoint", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing TrafficManagerAzureEndpoint resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static TrafficManagerAzureEndpoint Get(string name, Input<string> id, TrafficManagerAzureEndpointState? state = null, CustomResourceOptions? options = null)
        {
            return new TrafficManagerAzureEndpoint(name, id, state, options);
        }
    }

    public sealed class TrafficManagerAzureEndpointArgs : global::Pulumi.ResourceArgs
    {
        [Input("customHeaders")]
        private InputList<Inputs.TrafficManagerAzureEndpointCustomHeaderArgs>? _customHeaders;

        /// <summary>
        /// One or more `custom_header` blocks as defined below.
        /// </summary>
        public InputList<Inputs.TrafficManagerAzureEndpointCustomHeaderArgs> CustomHeaders
        {
            get => _customHeaders ?? (_customHeaders = new InputList<Inputs.TrafficManagerAzureEndpointCustomHeaderArgs>());
            set => _customHeaders = value;
        }

        /// <summary>
        /// Is the endpoint enabled? Defaults to `true`.
        /// </summary>
        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        [Input("geoMappings")]
        private InputList<string>? _geoMappings;

        /// <summary>
        /// A list of Geographic Regions used to distribute traffic, such as `WORLD`, `UK` or `DE`. The same location can't be specified in two endpoints. [See the Geographic Hierarchies documentation for more information](https://docs.microsoft.com/rest/api/trafficmanager/geographichierarchies/getdefault).
        /// </summary>
        public InputList<string> GeoMappings
        {
            get => _geoMappings ?? (_geoMappings = new InputList<string>());
            set => _geoMappings = value;
        }

        /// <summary>
        /// The name of the Azure Endpoint. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Specifies the priority of this Endpoint, this must be specified for Profiles using the `Priority` traffic routing method. Supports values between 1 and 1000, with no Endpoints sharing the same value. If omitted the value will be computed in order of creation.
        /// </summary>
        [Input("priority")]
        public Input<int>? Priority { get; set; }

        /// <summary>
        /// The ID of the Traffic Manager Profile that this Azure Endpoint should be created within. Changing this forces a new resource to be created.
        /// </summary>
        [Input("profileId", required: true)]
        public Input<string> ProfileId { get; set; } = null!;

        [Input("subnets")]
        private InputList<Inputs.TrafficManagerAzureEndpointSubnetArgs>? _subnets;

        /// <summary>
        /// One or more `subnet` blocks as defined below. Changing this forces a new resource to be created.
        /// </summary>
        public InputList<Inputs.TrafficManagerAzureEndpointSubnetArgs> Subnets
        {
            get => _subnets ?? (_subnets = new InputList<Inputs.TrafficManagerAzureEndpointSubnetArgs>());
            set => _subnets = value;
        }

        /// <summary>
        /// The ID of the Azure Resource which should be used as a target.
        /// </summary>
        [Input("targetResourceId", required: true)]
        public Input<string> TargetResourceId { get; set; } = null!;

        /// <summary>
        /// Specifies how much traffic should be distributed to this endpoint, this must be specified for Profiles using the Weighted traffic routing method. Valid values are between `1` and `1000`.
        /// </summary>
        [Input("weight")]
        public Input<int>? Weight { get; set; }

        public TrafficManagerAzureEndpointArgs()
        {
        }
        public static new TrafficManagerAzureEndpointArgs Empty => new TrafficManagerAzureEndpointArgs();
    }

    public sealed class TrafficManagerAzureEndpointState : global::Pulumi.ResourceArgs
    {
        [Input("customHeaders")]
        private InputList<Inputs.TrafficManagerAzureEndpointCustomHeaderGetArgs>? _customHeaders;

        /// <summary>
        /// One or more `custom_header` blocks as defined below.
        /// </summary>
        public InputList<Inputs.TrafficManagerAzureEndpointCustomHeaderGetArgs> CustomHeaders
        {
            get => _customHeaders ?? (_customHeaders = new InputList<Inputs.TrafficManagerAzureEndpointCustomHeaderGetArgs>());
            set => _customHeaders = value;
        }

        /// <summary>
        /// Is the endpoint enabled? Defaults to `true`.
        /// </summary>
        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        [Input("geoMappings")]
        private InputList<string>? _geoMappings;

        /// <summary>
        /// A list of Geographic Regions used to distribute traffic, such as `WORLD`, `UK` or `DE`. The same location can't be specified in two endpoints. [See the Geographic Hierarchies documentation for more information](https://docs.microsoft.com/rest/api/trafficmanager/geographichierarchies/getdefault).
        /// </summary>
        public InputList<string> GeoMappings
        {
            get => _geoMappings ?? (_geoMappings = new InputList<string>());
            set => _geoMappings = value;
        }

        /// <summary>
        /// The name of the Azure Endpoint. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Specifies the priority of this Endpoint, this must be specified for Profiles using the `Priority` traffic routing method. Supports values between 1 and 1000, with no Endpoints sharing the same value. If omitted the value will be computed in order of creation.
        /// </summary>
        [Input("priority")]
        public Input<int>? Priority { get; set; }

        /// <summary>
        /// The ID of the Traffic Manager Profile that this Azure Endpoint should be created within. Changing this forces a new resource to be created.
        /// </summary>
        [Input("profileId")]
        public Input<string>? ProfileId { get; set; }

        [Input("subnets")]
        private InputList<Inputs.TrafficManagerAzureEndpointSubnetGetArgs>? _subnets;

        /// <summary>
        /// One or more `subnet` blocks as defined below. Changing this forces a new resource to be created.
        /// </summary>
        public InputList<Inputs.TrafficManagerAzureEndpointSubnetGetArgs> Subnets
        {
            get => _subnets ?? (_subnets = new InputList<Inputs.TrafficManagerAzureEndpointSubnetGetArgs>());
            set => _subnets = value;
        }

        /// <summary>
        /// The ID of the Azure Resource which should be used as a target.
        /// </summary>
        [Input("targetResourceId")]
        public Input<string>? TargetResourceId { get; set; }

        /// <summary>
        /// Specifies how much traffic should be distributed to this endpoint, this must be specified for Profiles using the Weighted traffic routing method. Valid values are between `1` and `1000`.
        /// </summary>
        [Input("weight")]
        public Input<int>? Weight { get; set; }

        public TrafficManagerAzureEndpointState()
        {
        }
        public static new TrafficManagerAzureEndpointState Empty => new TrafficManagerAzureEndpointState();
    }
}
