// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Network
{
    /// <summary>
    /// Manages a Network Manager IP Address Management (IPAM) Pool.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Azure = Pulumi.Azure;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Azure.Core.ResourceGroup("example", new()
    ///     {
    ///         Name = "example-resources",
    ///         Location = "West Europe",
    ///     });
    /// 
    ///     var current = Azure.Core.GetSubscription.Invoke();
    /// 
    ///     var exampleNetworkManager = new Azure.Network.NetworkManager("example", new()
    ///     {
    ///         Name = "example-network-manager",
    ///         Location = example.Location,
    ///         ResourceGroupName = example.Name,
    ///         Scope = new Azure.Network.Inputs.NetworkManagerScopeArgs
    ///         {
    ///             SubscriptionIds = new[]
    ///             {
    ///                 current.Apply(getSubscriptionResult =&gt; getSubscriptionResult.Id),
    ///             },
    ///         },
    ///         ScopeAccesses = new[]
    ///         {
    ///             "Connectivity",
    ///             "SecurityAdmin",
    ///         },
    ///     });
    /// 
    ///     var exampleNetworkManagerIpamPool = new Azure.Network.NetworkManagerIpamPool("example", new()
    ///     {
    ///         Name = "example-ipam-pool",
    ///         Location = "West Europe",
    ///         NetworkManagerId = exampleNetworkManager.Id,
    ///         DisplayName = "example-pool",
    ///         AddressPrefixes = new[]
    ///         {
    ///             "10.0.0.0/24",
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Network Manager IPAM Pools can be imported using the `resource id`, e.g.
    /// 
    /// ```sh
    /// $ pulumi import azure:network/networkManagerIpamPool:NetworkManagerIpamPool example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg1/providers/Microsoft.Network/networkManagers/manager1/ipamPools/pool1
    /// ```
    /// </summary>
    [AzureResourceType("azure:network/networkManagerIpamPool:NetworkManagerIpamPool")]
    public partial class NetworkManagerIpamPool : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Specifies a list of IPv4 or IPv6 IP address prefixes. Changing this forces a new Network Manager IPAM Pool to be created.
        /// </summary>
        [Output("addressPrefixes")]
        public Output<ImmutableArray<string>> AddressPrefixes { get; private set; } = null!;

        /// <summary>
        /// The description of the Network Manager IPAM Pool.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// The display name for the Network Manager IPAM Pool.
        /// </summary>
        [Output("displayName")]
        public Output<string> DisplayName { get; private set; } = null!;

        /// <summary>
        /// The Azure Region where the Network Manager IPAM Pool should exist. Changing this forces a new Network Manager IPAM Pool to be created.
        /// </summary>
        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// The name which should be used for this Network Manager IPAM Pool. Changing this forces a new Network Manager IPAM Pool to be created.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The ID of the parent Network Manager. Changing this forces a new Network Manager IPAM Pool to be created.
        /// </summary>
        [Output("networkManagerId")]
        public Output<string> NetworkManagerId { get; private set; } = null!;

        /// <summary>
        /// The name of the parent IPAM Pool. Changing this forces a new Network Manager IPAM Pool to be created.
        /// </summary>
        [Output("parentPoolName")]
        public Output<string?> ParentPoolName { get; private set; } = null!;

        /// <summary>
        /// A mapping of tags which should be assigned to the Network Manager IPAM Pool.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;


        /// <summary>
        /// Create a NetworkManagerIpamPool resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public NetworkManagerIpamPool(string name, NetworkManagerIpamPoolArgs args, CustomResourceOptions? options = null)
            : base("azure:network/networkManagerIpamPool:NetworkManagerIpamPool", name, args ?? new NetworkManagerIpamPoolArgs(), MakeResourceOptions(options, ""))
        {
        }

        private NetworkManagerIpamPool(string name, Input<string> id, NetworkManagerIpamPoolState? state = null, CustomResourceOptions? options = null)
            : base("azure:network/networkManagerIpamPool:NetworkManagerIpamPool", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing NetworkManagerIpamPool resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static NetworkManagerIpamPool Get(string name, Input<string> id, NetworkManagerIpamPoolState? state = null, CustomResourceOptions? options = null)
        {
            return new NetworkManagerIpamPool(name, id, state, options);
        }
    }

    public sealed class NetworkManagerIpamPoolArgs : global::Pulumi.ResourceArgs
    {
        [Input("addressPrefixes", required: true)]
        private InputList<string>? _addressPrefixes;

        /// <summary>
        /// Specifies a list of IPv4 or IPv6 IP address prefixes. Changing this forces a new Network Manager IPAM Pool to be created.
        /// </summary>
        public InputList<string> AddressPrefixes
        {
            get => _addressPrefixes ?? (_addressPrefixes = new InputList<string>());
            set => _addressPrefixes = value;
        }

        /// <summary>
        /// The description of the Network Manager IPAM Pool.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The display name for the Network Manager IPAM Pool.
        /// </summary>
        [Input("displayName", required: true)]
        public Input<string> DisplayName { get; set; } = null!;

        /// <summary>
        /// The Azure Region where the Network Manager IPAM Pool should exist. Changing this forces a new Network Manager IPAM Pool to be created.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// The name which should be used for this Network Manager IPAM Pool. Changing this forces a new Network Manager IPAM Pool to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The ID of the parent Network Manager. Changing this forces a new Network Manager IPAM Pool to be created.
        /// </summary>
        [Input("networkManagerId", required: true)]
        public Input<string> NetworkManagerId { get; set; } = null!;

        /// <summary>
        /// The name of the parent IPAM Pool. Changing this forces a new Network Manager IPAM Pool to be created.
        /// </summary>
        [Input("parentPoolName")]
        public Input<string>? ParentPoolName { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// A mapping of tags which should be assigned to the Network Manager IPAM Pool.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public NetworkManagerIpamPoolArgs()
        {
        }
        public static new NetworkManagerIpamPoolArgs Empty => new NetworkManagerIpamPoolArgs();
    }

    public sealed class NetworkManagerIpamPoolState : global::Pulumi.ResourceArgs
    {
        [Input("addressPrefixes")]
        private InputList<string>? _addressPrefixes;

        /// <summary>
        /// Specifies a list of IPv4 or IPv6 IP address prefixes. Changing this forces a new Network Manager IPAM Pool to be created.
        /// </summary>
        public InputList<string> AddressPrefixes
        {
            get => _addressPrefixes ?? (_addressPrefixes = new InputList<string>());
            set => _addressPrefixes = value;
        }

        /// <summary>
        /// The description of the Network Manager IPAM Pool.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The display name for the Network Manager IPAM Pool.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        /// <summary>
        /// The Azure Region where the Network Manager IPAM Pool should exist. Changing this forces a new Network Manager IPAM Pool to be created.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// The name which should be used for this Network Manager IPAM Pool. Changing this forces a new Network Manager IPAM Pool to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The ID of the parent Network Manager. Changing this forces a new Network Manager IPAM Pool to be created.
        /// </summary>
        [Input("networkManagerId")]
        public Input<string>? NetworkManagerId { get; set; }

        /// <summary>
        /// The name of the parent IPAM Pool. Changing this forces a new Network Manager IPAM Pool to be created.
        /// </summary>
        [Input("parentPoolName")]
        public Input<string>? ParentPoolName { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// A mapping of tags which should be assigned to the Network Manager IPAM Pool.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public NetworkManagerIpamPoolState()
        {
        }
        public static new NetworkManagerIpamPoolState Empty => new NetworkManagerIpamPoolState();
    }
}
