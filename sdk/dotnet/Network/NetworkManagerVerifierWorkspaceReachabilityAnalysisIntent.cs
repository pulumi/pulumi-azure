// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Network
{
    /// <summary>
    /// Manages a Network Manager Verifier Workspace Reachability Analysis Intent.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Azure = Pulumi.Azure;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Azure.Core.ResourceGroup("example", new()
    ///     {
    ///         Name = "example-resources",
    ///         Location = "West Europe",
    ///     });
    /// 
    ///     var current = Azure.Core.GetSubscription.Invoke();
    /// 
    ///     var exampleNetworkManager = new Azure.Network.NetworkManager("example", new()
    ///     {
    ///         Name = "example-nm",
    ///         ResourceGroupName = example.Name,
    ///         Location = example.Location,
    ///         Scope = new Azure.Network.Inputs.NetworkManagerScopeArgs
    ///         {
    ///             SubscriptionIds = new[]
    ///             {
    ///                 current.Apply(getSubscriptionResult =&gt; getSubscriptionResult.Id),
    ///             },
    ///         },
    ///         ScopeAccesses = new[]
    ///         {
    ///             "Connectivity",
    ///         },
    ///     });
    /// 
    ///     var exampleNetworkManagerVerifierWorkspace = new Azure.Network.NetworkManagerVerifierWorkspace("example", new()
    ///     {
    ///         Name = "example",
    ///         NetworkManagerId = exampleNetworkManager.Id,
    ///         Location = example.Location,
    ///     });
    /// 
    ///     var exampleVirtualNetwork = new Azure.Network.VirtualNetwork("example", new()
    ///     {
    ///         Name = "example-network",
    ///         AddressSpaces = new[]
    ///         {
    ///             "10.0.0.0/16",
    ///         },
    ///         Location = example.Location,
    ///         ResourceGroupName = example.Name,
    ///     });
    /// 
    ///     var exampleSubnet = new Azure.Network.Subnet("example", new()
    ///     {
    ///         Name = "internal",
    ///         ResourceGroupName = example.Name,
    ///         VirtualNetworkName = exampleVirtualNetwork.Name,
    ///         AddressPrefixes = new[]
    ///         {
    ///             "10.0.2.0/24",
    ///         },
    ///     });
    /// 
    ///     var exampleNetworkInterface = new Azure.Network.NetworkInterface("example", new()
    ///     {
    ///         Name = "example-nic",
    ///         Location = example.Location,
    ///         ResourceGroupName = example.Name,
    ///         IpConfigurations = new[]
    ///         {
    ///             new Azure.Network.Inputs.NetworkInterfaceIpConfigurationArgs
    ///             {
    ///                 Name = "internal",
    ///                 SubnetId = exampleSubnet.Id,
    ///                 PrivateIpAddressAllocation = "Dynamic",
    ///             },
    ///         },
    ///     });
    /// 
    ///     var exampleLinuxVirtualMachine = new Azure.Compute.LinuxVirtualMachine("example", new()
    ///     {
    ///         Name = "example-machine",
    ///         ResourceGroupName = example.Name,
    ///         Location = example.Location,
    ///         Size = "Standard_B1ls",
    ///         AdminUsername = "adminuser",
    ///         AdminPassword = "P@ssw0rd1234!",
    ///         DisablePasswordAuthentication = false,
    ///         NetworkInterfaceIds = new[]
    ///         {
    ///             exampleNetworkInterface.Id,
    ///         },
    ///         OsDisk = new Azure.Compute.Inputs.LinuxVirtualMachineOsDiskArgs
    ///         {
    ///             Caching = "ReadWrite",
    ///             StorageAccountType = "Standard_LRS",
    ///         },
    ///         SourceImageReference = new Azure.Compute.Inputs.LinuxVirtualMachineSourceImageReferenceArgs
    ///         {
    ///             Publisher = "Canonical",
    ///             Offer = "0001-com-ubuntu-server-jammy",
    ///             Sku = "22_04-lts",
    ///             Version = "latest",
    ///         },
    ///     });
    /// 
    ///     var exampleNetworkManagerVerifierWorkspaceReachabilityAnalysisIntent = new Azure.Network.NetworkManagerVerifierWorkspaceReachabilityAnalysisIntent("example", new()
    ///     {
    ///         Name = "example-intent",
    ///         VerifierWorkspaceId = exampleNetworkManagerVerifierWorkspace.Id,
    ///         SourceResourceId = exampleLinuxVirtualMachine.Id,
    ///         DestinationResourceId = exampleLinuxVirtualMachine.Id,
    ///         Description = "example",
    ///         IpTraffic = new Azure.Network.Inputs.NetworkManagerVerifierWorkspaceReachabilityAnalysisIntentIpTrafficArgs
    ///         {
    ///             SourceIps = new[]
    ///             {
    ///                 "10.0.2.1",
    ///             },
    ///             SourcePorts = new[]
    ///             {
    ///                 "80",
    ///             },
    ///             DestinationIps = new[]
    ///             {
    ///                 "10.0.2.2",
    ///             },
    ///             DestinationPorts = new[]
    ///             {
    ///                 "*",
    ///             },
    ///             Protocols = new[]
    ///             {
    ///                 "Any",
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## API Providers
    /// 
    /// &lt;!-- This section is generated, changes will be overwritten --&gt;
    /// This resource uses the following Azure API Providers:
    /// 
    /// * `Microsoft.Network` - 2024-05-01
    /// 
    /// ## Import
    /// 
    /// Network Manager Verifier Workspace Reachability Analysis Intents can be imported using the `resource id`, e.g.
    /// 
    /// ```sh
    /// $ pulumi import azure:network/networkManagerVerifierWorkspaceReachabilityAnalysisIntent:NetworkManagerVerifierWorkspaceReachabilityAnalysisIntent example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg1/providers/Microsoft.Network/networkManagers/manager1/verifierWorkspaces/workspace1/reachabilityAnalysisIntents/intent1
    /// ```
    /// </summary>
    [AzureResourceType("azure:network/networkManagerVerifierWorkspaceReachabilityAnalysisIntent:NetworkManagerVerifierWorkspaceReachabilityAnalysisIntent")]
    public partial class NetworkManagerVerifierWorkspaceReachabilityAnalysisIntent : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The description of the resource. Changing this forces a new Network Manager Verifier Workspace Reachability Analysis Intent to be created.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// The ID of the destination resource. The value can be the ID of either Public internet, Cosmos DB, Storage Account, SQL Server, Virtual machines, or Subnet. Changing this forces a new Network Manager Verifier Workspace Reachability Analysis Intent to be created.
        /// </summary>
        [Output("destinationResourceId")]
        public Output<string> DestinationResourceId { get; private set; } = null!;

        /// <summary>
        /// An `IpTraffic` block as defined below. Changing this forces a new Network Manager Verifier Workspace Reachability Analysis Intent to be created.
        /// </summary>
        [Output("ipTraffic")]
        public Output<Outputs.NetworkManagerVerifierWorkspaceReachabilityAnalysisIntentIpTraffic> IpTraffic { get; private set; } = null!;

        /// <summary>
        /// The name which should be used for this Network Manager Verifier Workspace Reachability Analysis Intent. Changing this forces a new Network Manager Verifier Workspace Reachability Analysis Intent to be created.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The ID of the source resource. The value can be the ID of either Public internet, Virtual machines, or Subnet. Changing this forces a new Network Manager Verifier Workspace Reachability Analysis Intent to be created.
        /// </summary>
        [Output("sourceResourceId")]
        public Output<string> SourceResourceId { get; private set; } = null!;

        /// <summary>
        /// The ID of the Network Manager Verifier Workspace. Changing this forces a new Network Manager Verifier Workspace Reachability Analysis Intent to be created.
        /// </summary>
        [Output("verifierWorkspaceId")]
        public Output<string> VerifierWorkspaceId { get; private set; } = null!;


        /// <summary>
        /// Create a NetworkManagerVerifierWorkspaceReachabilityAnalysisIntent resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public NetworkManagerVerifierWorkspaceReachabilityAnalysisIntent(string name, NetworkManagerVerifierWorkspaceReachabilityAnalysisIntentArgs args, CustomResourceOptions? options = null)
            : base("azure:network/networkManagerVerifierWorkspaceReachabilityAnalysisIntent:NetworkManagerVerifierWorkspaceReachabilityAnalysisIntent", name, args ?? new NetworkManagerVerifierWorkspaceReachabilityAnalysisIntentArgs(), MakeResourceOptions(options, ""))
        {
        }

        private NetworkManagerVerifierWorkspaceReachabilityAnalysisIntent(string name, Input<string> id, NetworkManagerVerifierWorkspaceReachabilityAnalysisIntentState? state = null, CustomResourceOptions? options = null)
            : base("azure:network/networkManagerVerifierWorkspaceReachabilityAnalysisIntent:NetworkManagerVerifierWorkspaceReachabilityAnalysisIntent", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing NetworkManagerVerifierWorkspaceReachabilityAnalysisIntent resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static NetworkManagerVerifierWorkspaceReachabilityAnalysisIntent Get(string name, Input<string> id, NetworkManagerVerifierWorkspaceReachabilityAnalysisIntentState? state = null, CustomResourceOptions? options = null)
        {
            return new NetworkManagerVerifierWorkspaceReachabilityAnalysisIntent(name, id, state, options);
        }
    }

    public sealed class NetworkManagerVerifierWorkspaceReachabilityAnalysisIntentArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The description of the resource. Changing this forces a new Network Manager Verifier Workspace Reachability Analysis Intent to be created.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The ID of the destination resource. The value can be the ID of either Public internet, Cosmos DB, Storage Account, SQL Server, Virtual machines, or Subnet. Changing this forces a new Network Manager Verifier Workspace Reachability Analysis Intent to be created.
        /// </summary>
        [Input("destinationResourceId", required: true)]
        public Input<string> DestinationResourceId { get; set; } = null!;

        /// <summary>
        /// An `IpTraffic` block as defined below. Changing this forces a new Network Manager Verifier Workspace Reachability Analysis Intent to be created.
        /// </summary>
        [Input("ipTraffic", required: true)]
        public Input<Inputs.NetworkManagerVerifierWorkspaceReachabilityAnalysisIntentIpTrafficArgs> IpTraffic { get; set; } = null!;

        /// <summary>
        /// The name which should be used for this Network Manager Verifier Workspace Reachability Analysis Intent. Changing this forces a new Network Manager Verifier Workspace Reachability Analysis Intent to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The ID of the source resource. The value can be the ID of either Public internet, Virtual machines, or Subnet. Changing this forces a new Network Manager Verifier Workspace Reachability Analysis Intent to be created.
        /// </summary>
        [Input("sourceResourceId", required: true)]
        public Input<string> SourceResourceId { get; set; } = null!;

        /// <summary>
        /// The ID of the Network Manager Verifier Workspace. Changing this forces a new Network Manager Verifier Workspace Reachability Analysis Intent to be created.
        /// </summary>
        [Input("verifierWorkspaceId", required: true)]
        public Input<string> VerifierWorkspaceId { get; set; } = null!;

        public NetworkManagerVerifierWorkspaceReachabilityAnalysisIntentArgs()
        {
        }
        public static new NetworkManagerVerifierWorkspaceReachabilityAnalysisIntentArgs Empty => new NetworkManagerVerifierWorkspaceReachabilityAnalysisIntentArgs();
    }

    public sealed class NetworkManagerVerifierWorkspaceReachabilityAnalysisIntentState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The description of the resource. Changing this forces a new Network Manager Verifier Workspace Reachability Analysis Intent to be created.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The ID of the destination resource. The value can be the ID of either Public internet, Cosmos DB, Storage Account, SQL Server, Virtual machines, or Subnet. Changing this forces a new Network Manager Verifier Workspace Reachability Analysis Intent to be created.
        /// </summary>
        [Input("destinationResourceId")]
        public Input<string>? DestinationResourceId { get; set; }

        /// <summary>
        /// An `IpTraffic` block as defined below. Changing this forces a new Network Manager Verifier Workspace Reachability Analysis Intent to be created.
        /// </summary>
        [Input("ipTraffic")]
        public Input<Inputs.NetworkManagerVerifierWorkspaceReachabilityAnalysisIntentIpTrafficGetArgs>? IpTraffic { get; set; }

        /// <summary>
        /// The name which should be used for this Network Manager Verifier Workspace Reachability Analysis Intent. Changing this forces a new Network Manager Verifier Workspace Reachability Analysis Intent to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The ID of the source resource. The value can be the ID of either Public internet, Virtual machines, or Subnet. Changing this forces a new Network Manager Verifier Workspace Reachability Analysis Intent to be created.
        /// </summary>
        [Input("sourceResourceId")]
        public Input<string>? SourceResourceId { get; set; }

        /// <summary>
        /// The ID of the Network Manager Verifier Workspace. Changing this forces a new Network Manager Verifier Workspace Reachability Analysis Intent to be created.
        /// </summary>
        [Input("verifierWorkspaceId")]
        public Input<string>? VerifierWorkspaceId { get; set; }

        public NetworkManagerVerifierWorkspaceReachabilityAnalysisIntentState()
        {
        }
        public static new NetworkManagerVerifierWorkspaceReachabilityAnalysisIntentState Empty => new NetworkManagerVerifierWorkspaceReachabilityAnalysisIntentState();
    }
}
