// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Network
{
    public static class GetNetworkManagerIpamPool
    {
        /// <summary>
        /// Use this data source to access information about an existing Network Manager IPAM Pool.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Azure = Pulumi.Azure;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleResourceGroup = new Azure.Core.ResourceGroup("example", new()
        ///     {
        ///         Name = "example-resources",
        ///         Location = "West Europe",
        ///     });
        /// 
        ///     var current = Azure.Core.GetSubscription.Invoke();
        /// 
        ///     var exampleNetworkManager = new Azure.Network.NetworkManager("example", new()
        ///     {
        ///         Name = "example-network-manager",
        ///         Location = exampleResourceGroup.Location,
        ///         ResourceGroupName = exampleResourceGroup.Name,
        ///         Scope = new Azure.Network.Inputs.NetworkManagerScopeArgs
        ///         {
        ///             SubscriptionIds = new[]
        ///             {
        ///                 current.Apply(getSubscriptionResult =&gt; getSubscriptionResult.Id),
        ///             },
        ///         },
        ///     });
        /// 
        ///     var exampleNetworkManagerIpamPool = new Azure.Network.NetworkManagerIpamPool("example", new()
        ///     {
        ///         Name = "example-ipam-pool",
        ///         Location = "West Europe",
        ///         NetworkManagerId = exampleNetworkManager.Id,
        ///         DisplayName = "example-pool",
        ///         AddressPrefixes = new[]
        ///         {
        ///             "10.0.0.0/24",
        ///         },
        ///     });
        /// 
        ///     var example = Azure.Network.GetNetworkManagerIpamPool.Invoke(new()
        ///     {
        ///         Name = exampleNetworkManagerIpamPool.Name,
        ///         NetworkManagerId = exampleNetworkManager.Id,
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["id"] = example.Apply(getNetworkManagerIpamPoolResult =&gt; getNetworkManagerIpamPoolResult.Id),
        ///     };
        /// });
        /// ```
        /// 
        /// ## API Providers
        /// 
        /// &lt;!-- This section is generated, changes will be overwritten --&gt;
        /// This data source uses the following Azure API Providers:
        /// 
        /// * `Microsoft.Network` - 2024-05-01
        /// </summary>
        public static Task<GetNetworkManagerIpamPoolResult> InvokeAsync(GetNetworkManagerIpamPoolArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetNetworkManagerIpamPoolResult>("azure:network/getNetworkManagerIpamPool:getNetworkManagerIpamPool", args ?? new GetNetworkManagerIpamPoolArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to access information about an existing Network Manager IPAM Pool.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Azure = Pulumi.Azure;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleResourceGroup = new Azure.Core.ResourceGroup("example", new()
        ///     {
        ///         Name = "example-resources",
        ///         Location = "West Europe",
        ///     });
        /// 
        ///     var current = Azure.Core.GetSubscription.Invoke();
        /// 
        ///     var exampleNetworkManager = new Azure.Network.NetworkManager("example", new()
        ///     {
        ///         Name = "example-network-manager",
        ///         Location = exampleResourceGroup.Location,
        ///         ResourceGroupName = exampleResourceGroup.Name,
        ///         Scope = new Azure.Network.Inputs.NetworkManagerScopeArgs
        ///         {
        ///             SubscriptionIds = new[]
        ///             {
        ///                 current.Apply(getSubscriptionResult =&gt; getSubscriptionResult.Id),
        ///             },
        ///         },
        ///     });
        /// 
        ///     var exampleNetworkManagerIpamPool = new Azure.Network.NetworkManagerIpamPool("example", new()
        ///     {
        ///         Name = "example-ipam-pool",
        ///         Location = "West Europe",
        ///         NetworkManagerId = exampleNetworkManager.Id,
        ///         DisplayName = "example-pool",
        ///         AddressPrefixes = new[]
        ///         {
        ///             "10.0.0.0/24",
        ///         },
        ///     });
        /// 
        ///     var example = Azure.Network.GetNetworkManagerIpamPool.Invoke(new()
        ///     {
        ///         Name = exampleNetworkManagerIpamPool.Name,
        ///         NetworkManagerId = exampleNetworkManager.Id,
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["id"] = example.Apply(getNetworkManagerIpamPoolResult =&gt; getNetworkManagerIpamPoolResult.Id),
        ///     };
        /// });
        /// ```
        /// 
        /// ## API Providers
        /// 
        /// &lt;!-- This section is generated, changes will be overwritten --&gt;
        /// This data source uses the following Azure API Providers:
        /// 
        /// * `Microsoft.Network` - 2024-05-01
        /// </summary>
        public static Output<GetNetworkManagerIpamPoolResult> Invoke(GetNetworkManagerIpamPoolInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetNetworkManagerIpamPoolResult>("azure:network/getNetworkManagerIpamPool:getNetworkManagerIpamPool", args ?? new GetNetworkManagerIpamPoolInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to access information about an existing Network Manager IPAM Pool.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Azure = Pulumi.Azure;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleResourceGroup = new Azure.Core.ResourceGroup("example", new()
        ///     {
        ///         Name = "example-resources",
        ///         Location = "West Europe",
        ///     });
        /// 
        ///     var current = Azure.Core.GetSubscription.Invoke();
        /// 
        ///     var exampleNetworkManager = new Azure.Network.NetworkManager("example", new()
        ///     {
        ///         Name = "example-network-manager",
        ///         Location = exampleResourceGroup.Location,
        ///         ResourceGroupName = exampleResourceGroup.Name,
        ///         Scope = new Azure.Network.Inputs.NetworkManagerScopeArgs
        ///         {
        ///             SubscriptionIds = new[]
        ///             {
        ///                 current.Apply(getSubscriptionResult =&gt; getSubscriptionResult.Id),
        ///             },
        ///         },
        ///     });
        /// 
        ///     var exampleNetworkManagerIpamPool = new Azure.Network.NetworkManagerIpamPool("example", new()
        ///     {
        ///         Name = "example-ipam-pool",
        ///         Location = "West Europe",
        ///         NetworkManagerId = exampleNetworkManager.Id,
        ///         DisplayName = "example-pool",
        ///         AddressPrefixes = new[]
        ///         {
        ///             "10.0.0.0/24",
        ///         },
        ///     });
        /// 
        ///     var example = Azure.Network.GetNetworkManagerIpamPool.Invoke(new()
        ///     {
        ///         Name = exampleNetworkManagerIpamPool.Name,
        ///         NetworkManagerId = exampleNetworkManager.Id,
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["id"] = example.Apply(getNetworkManagerIpamPoolResult =&gt; getNetworkManagerIpamPoolResult.Id),
        ///     };
        /// });
        /// ```
        /// 
        /// ## API Providers
        /// 
        /// &lt;!-- This section is generated, changes will be overwritten --&gt;
        /// This data source uses the following Azure API Providers:
        /// 
        /// * `Microsoft.Network` - 2024-05-01
        /// </summary>
        public static Output<GetNetworkManagerIpamPoolResult> Invoke(GetNetworkManagerIpamPoolInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetNetworkManagerIpamPoolResult>("azure:network/getNetworkManagerIpamPool:getNetworkManagerIpamPool", args ?? new GetNetworkManagerIpamPoolInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetNetworkManagerIpamPoolArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of this Network Manager IPAM Pool.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        /// <summary>
        /// The ID of the parent Network Manager.
        /// </summary>
        [Input("networkManagerId", required: true)]
        public string NetworkManagerId { get; set; } = null!;

        public GetNetworkManagerIpamPoolArgs()
        {
        }
        public static new GetNetworkManagerIpamPoolArgs Empty => new GetNetworkManagerIpamPoolArgs();
    }

    public sealed class GetNetworkManagerIpamPoolInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of this Network Manager IPAM Pool.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// The ID of the parent Network Manager.
        /// </summary>
        [Input("networkManagerId", required: true)]
        public Input<string> NetworkManagerId { get; set; } = null!;

        public GetNetworkManagerIpamPoolInvokeArgs()
        {
        }
        public static new GetNetworkManagerIpamPoolInvokeArgs Empty => new GetNetworkManagerIpamPoolInvokeArgs();
    }


    [OutputType]
    public sealed class GetNetworkManagerIpamPoolResult
    {
        /// <summary>
        /// A list of IPv4 or IPv6 IP address prefixes assigned to the Network Manager IPAM Pool.
        /// </summary>
        public readonly ImmutableArray<string> AddressPrefixes;
        /// <summary>
        /// The description of the Network Manager IPAM Pool.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// The display name of the Network Manager IPAM Pool.
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The Azure Region where the Network Manager IPAM Pool exists.
        /// </summary>
        public readonly string Location;
        public readonly string Name;
        public readonly string NetworkManagerId;
        /// <summary>
        /// The name of the parent IPAM Pool.
        /// </summary>
        public readonly string ParentPoolName;
        /// <summary>
        /// A mapping of tags assigned to the Network Manager IPAM Pool.
        /// </summary>
        public readonly ImmutableDictionary<string, string> Tags;

        [OutputConstructor]
        private GetNetworkManagerIpamPoolResult(
            ImmutableArray<string> addressPrefixes,

            string description,

            string displayName,

            string id,

            string location,

            string name,

            string networkManagerId,

            string parentPoolName,

            ImmutableDictionary<string, string> tags)
        {
            AddressPrefixes = addressPrefixes;
            Description = description;
            DisplayName = displayName;
            Id = id;
            Location = location;
            Name = name;
            NetworkManagerId = networkManagerId;
            ParentPoolName = parentPoolName;
            Tags = tags;
        }
    }
}
