// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Network.Outputs
{

    [OutputType]
    public sealed class GetApplicationGatewayHttpListenerResult
    {
        /// <summary>
        /// One or more `custom_error_configuration` blocks as defined below.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetApplicationGatewayHttpListenerCustomErrorConfigurationResult> CustomErrorConfigurations;
        /// <summary>
        /// The ID of the Web Application Firewall Policy which is used as an HTTP Listener for this Path Rule.
        /// </summary>
        public readonly string FirewallPolicyId;
        /// <summary>
        /// The ID of the associated Frontend Configuration.
        /// </summary>
        public readonly string FrontendIpConfigurationId;
        /// <summary>
        /// The Name of the Frontend IP Configuration used for this HTTP Listener.
        /// </summary>
        public readonly string FrontendIpConfigurationName;
        /// <summary>
        /// The ID of the associated Frontend Port.
        /// </summary>
        public readonly string FrontendPortId;
        /// <summary>
        /// The Name of the Frontend Port used for this HTTP Listener.
        /// </summary>
        public readonly string FrontendPortName;
        /// <summary>
        /// The Hostname which is used for this HTTP Listener.
        /// </summary>
        public readonly string HostName;
        /// <summary>
        /// A list of Hostname(s) used for this HTTP Listener. It allows special wildcard characters.
        /// </summary>
        public readonly ImmutableArray<string> HostNames;
        /// <summary>
        /// The ID of the Rewrite Rule Set
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The name of this Application Gateway.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The Protocol used for this Probe.
        /// </summary>
        public readonly string Protocol;
        /// <summary>
        /// Is Server Name Indication required?
        /// </summary>
        public readonly bool RequireSni;
        /// <summary>
        /// The ID of the associated SSL Certificate.
        /// </summary>
        public readonly string SslCertificateId;
        /// <summary>
        /// The name of the associated SSL Certificate which is used for this HTTP Listener.
        /// </summary>
        public readonly string SslCertificateName;
        /// <summary>
        /// The ID of the associated SSL Profile.
        /// </summary>
        public readonly string SslProfileId;
        /// <summary>
        /// The name of the associated SSL Profile which is used for this HTTP Listener.
        /// </summary>
        public readonly string SslProfileName;

        [OutputConstructor]
        private GetApplicationGatewayHttpListenerResult(
            ImmutableArray<Outputs.GetApplicationGatewayHttpListenerCustomErrorConfigurationResult> customErrorConfigurations,

            string firewallPolicyId,

            string frontendIpConfigurationId,

            string frontendIpConfigurationName,

            string frontendPortId,

            string frontendPortName,

            string hostName,

            ImmutableArray<string> hostNames,

            string id,

            string name,

            string protocol,

            bool requireSni,

            string sslCertificateId,

            string sslCertificateName,

            string sslProfileId,

            string sslProfileName)
        {
            CustomErrorConfigurations = customErrorConfigurations;
            FirewallPolicyId = firewallPolicyId;
            FrontendIpConfigurationId = frontendIpConfigurationId;
            FrontendIpConfigurationName = frontendIpConfigurationName;
            FrontendPortId = frontendPortId;
            FrontendPortName = frontendPortName;
            HostName = hostName;
            HostNames = hostNames;
            Id = id;
            Name = name;
            Protocol = protocol;
            RequireSni = requireSni;
            SslCertificateId = sslCertificateId;
            SslCertificateName = sslCertificateName;
            SslProfileId = sslProfileId;
            SslProfileName = sslProfileName;
        }
    }
}
