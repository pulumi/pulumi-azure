// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Network.Outputs
{

    [OutputType]
    public sealed class GetVpnServerConfigurationIpsecPolicyResult
    {
        /// <summary>
        /// The DH Group, used in IKE Phase 1.
        /// </summary>
        public readonly string DhGroup;
        /// <summary>
        /// The IKE encryption algorithm, used for IKE Phase 2.
        /// </summary>
        public readonly string IkeEncryption;
        /// <summary>
        /// The IKE encryption integrity algorithm, used for IKE Phase 2.
        /// </summary>
        public readonly string IkeIntegrity;
        /// <summary>
        /// The IPSec encryption algorithm, used for IKE phase 1.
        /// </summary>
        public readonly string IpsecEncryption;
        /// <summary>
        /// The IPSec integrity algorithm, used for IKE phase 1.
        /// </summary>
        public readonly string IpsecIntegrity;
        /// <summary>
        /// The Pfs Group, used in IKE Phase 2.
        /// </summary>
        public readonly string PfsGroup;
        /// <summary>
        /// The IPSec Security Association payload size in KB for a Site-to-Site VPN tunnel.
        /// </summary>
        public readonly int SaDataSizeKilobytes;
        /// <summary>
        /// The IPSec Security Association lifetime in seconds for a Site-to-Site VPN tunnel.
        /// </summary>
        public readonly int SaLifetimeSeconds;

        [OutputConstructor]
        private GetVpnServerConfigurationIpsecPolicyResult(
            string dhGroup,

            string ikeEncryption,

            string ikeIntegrity,

            string ipsecEncryption,

            string ipsecIntegrity,

            string pfsGroup,

            int saDataSizeKilobytes,

            int saLifetimeSeconds)
        {
            DhGroup = dhGroup;
            IkeEncryption = ikeEncryption;
            IkeIntegrity = ikeIntegrity;
            IpsecEncryption = ipsecEncryption;
            IpsecIntegrity = ipsecIntegrity;
            PfsGroup = pfsGroup;
            SaDataSizeKilobytes = saDataSizeKilobytes;
            SaLifetimeSeconds = saLifetimeSeconds;
        }
    }
}
