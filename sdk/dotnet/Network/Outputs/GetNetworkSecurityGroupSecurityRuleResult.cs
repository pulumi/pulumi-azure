// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Network.Outputs
{

    [OutputType]
    public sealed class GetNetworkSecurityGroupSecurityRuleResult
    {
        /// <summary>
        /// Is network traffic is allowed or denied?
        /// </summary>
        public readonly string Access;
        /// <summary>
        /// The description for this rule.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// CIDR or destination IP range or * to match any IP.
        /// </summary>
        public readonly string DestinationAddressPrefix;
        /// <summary>
        /// A list of CIDRs or destination IP ranges.
        /// </summary>
        public readonly ImmutableArray<string> DestinationAddressPrefixes;
        /// <summary>
        /// A List of destination Application Security Group ID's
        /// </summary>
        public readonly ImmutableArray<string> DestinationApplicationSecurityGroupIds;
        /// <summary>
        /// The Destination Port or Range.
        /// </summary>
        public readonly string DestinationPortRange;
        public readonly ImmutableArray<string> DestinationPortRanges;
        /// <summary>
        /// The direction specifies if rule will be evaluated on incoming or outgoing traffic.
        /// </summary>
        public readonly string Direction;
        /// <summary>
        /// Specifies the Name of the Network Security Group.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The priority of the rule
        /// </summary>
        public readonly int Priority;
        /// <summary>
        /// The network protocol this rule applies to.
        /// </summary>
        public readonly string Protocol;
        /// <summary>
        /// CIDR or source IP range or * to match any IP.
        /// </summary>
        public readonly string SourceAddressPrefix;
        /// <summary>
        /// A list of CIDRs or source IP ranges.
        /// </summary>
        public readonly ImmutableArray<string> SourceAddressPrefixes;
        /// <summary>
        /// A List of source Application Security Group ID's
        /// </summary>
        public readonly ImmutableArray<string> SourceApplicationSecurityGroupIds;
        /// <summary>
        /// The Source Port or Range.
        /// </summary>
        public readonly string SourcePortRange;
        public readonly ImmutableArray<string> SourcePortRanges;

        [OutputConstructor]
        private GetNetworkSecurityGroupSecurityRuleResult(
            string access,

            string description,

            string destinationAddressPrefix,

            ImmutableArray<string> destinationAddressPrefixes,

            ImmutableArray<string> destinationApplicationSecurityGroupIds,

            string destinationPortRange,

            ImmutableArray<string> destinationPortRanges,

            string direction,

            string name,

            int priority,

            string protocol,

            string sourceAddressPrefix,

            ImmutableArray<string> sourceAddressPrefixes,

            ImmutableArray<string> sourceApplicationSecurityGroupIds,

            string sourcePortRange,

            ImmutableArray<string> sourcePortRanges)
        {
            Access = access;
            Description = description;
            DestinationAddressPrefix = destinationAddressPrefix;
            DestinationAddressPrefixes = destinationAddressPrefixes;
            DestinationApplicationSecurityGroupIds = destinationApplicationSecurityGroupIds;
            DestinationPortRange = destinationPortRange;
            DestinationPortRanges = destinationPortRanges;
            Direction = direction;
            Name = name;
            Priority = priority;
            Protocol = protocol;
            SourceAddressPrefix = sourceAddressPrefix;
            SourceAddressPrefixes = sourceAddressPrefixes;
            SourceApplicationSecurityGroupIds = sourceApplicationSecurityGroupIds;
            SourcePortRange = sourcePortRange;
            SourcePortRanges = sourcePortRanges;
        }
    }
}
