// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Network.Outputs
{

    [OutputType]
    public sealed class NetworkInterfaceIpConfiguration
    {
        /// <summary>
        /// A name used for this IP Configuration.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Is this the Primary IP Configuration? Must be `true` for the first `ip_configuration` when multiple are specified. Defaults to `false`.
        /// </summary>
        public readonly bool? Primary;
        /// <summary>
        /// The Static IP Address which should be used.
        /// </summary>
        public readonly string? PrivateIpAddress;
        /// <summary>
        /// The allocation method used for the Private IP Address. Possible values are `Dynamic` and `Static`.
        /// </summary>
        public readonly string PrivateIpAddressAllocation;
        /// <summary>
        /// The IP Version to use. Possible values are `IPv4` or `IPv6`. Defaults to `IPv4`.
        /// </summary>
        public readonly string? PrivateIpAddressVersion;
        /// <summary>
        /// Reference to a Public IP Address to associate with this NIC
        /// </summary>
        public readonly string? PublicIpAddressId;
        /// <summary>
        /// The ID of the Subnet where this Network Interface should be located in.
        /// </summary>
        public readonly string? SubnetId;

        [OutputConstructor]
        private NetworkInterfaceIpConfiguration(
            string name,

            bool? primary,

            string? privateIpAddress,

            string privateIpAddressAllocation,

            string? privateIpAddressVersion,

            string? publicIpAddressId,

            string? subnetId)
        {
            Name = name;
            Primary = primary;
            PrivateIpAddress = privateIpAddress;
            PrivateIpAddressAllocation = privateIpAddressAllocation;
            PrivateIpAddressVersion = privateIpAddressVersion;
            PublicIpAddressId = publicIpAddressId;
            SubnetId = subnetId;
        }
    }
}
