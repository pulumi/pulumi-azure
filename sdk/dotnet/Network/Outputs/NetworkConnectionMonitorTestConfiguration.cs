// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Network.Outputs
{

    [OutputType]
    public sealed class NetworkConnectionMonitorTestConfiguration
    {
        /// <summary>
        /// A `http_configuration` block as defined below.
        /// </summary>
        public readonly Outputs.NetworkConnectionMonitorTestConfigurationHttpConfiguration? HttpConfiguration;
        /// <summary>
        /// A `icmp_configuration` block as defined below.
        /// </summary>
        public readonly Outputs.NetworkConnectionMonitorTestConfigurationIcmpConfiguration? IcmpConfiguration;
        /// <summary>
        /// The name of test configuration for the Network Connection Monitor.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The preferred IP version which is used in the test evaluation. Possible values are `IPv4` and `IPv6`.
        /// </summary>
        public readonly string? PreferredIpVersion;
        /// <summary>
        /// The protocol used to evaluate tests. Possible values are `Tcp`, `Http` and `Icmp`.
        /// </summary>
        public readonly string Protocol;
        /// <summary>
        /// A `success_threshold` block as defined below.
        /// </summary>
        public readonly Outputs.NetworkConnectionMonitorTestConfigurationSuccessThreshold? SuccessThreshold;
        /// <summary>
        /// A `tcp_configuration` block as defined below.
        /// </summary>
        public readonly Outputs.NetworkConnectionMonitorTestConfigurationTcpConfiguration? TcpConfiguration;
        /// <summary>
        /// The time interval in seconds at which the test evaluation will happen. Defaults to `60`.
        /// </summary>
        public readonly int? TestFrequencyInSeconds;

        [OutputConstructor]
        private NetworkConnectionMonitorTestConfiguration(
            Outputs.NetworkConnectionMonitorTestConfigurationHttpConfiguration? httpConfiguration,

            Outputs.NetworkConnectionMonitorTestConfigurationIcmpConfiguration? icmpConfiguration,

            string name,

            string? preferredIpVersion,

            string protocol,

            Outputs.NetworkConnectionMonitorTestConfigurationSuccessThreshold? successThreshold,

            Outputs.NetworkConnectionMonitorTestConfigurationTcpConfiguration? tcpConfiguration,

            int? testFrequencyInSeconds)
        {
            HttpConfiguration = httpConfiguration;
            IcmpConfiguration = icmpConfiguration;
            Name = name;
            PreferredIpVersion = preferredIpVersion;
            Protocol = protocol;
            SuccessThreshold = successThreshold;
            TcpConfiguration = tcpConfiguration;
            TestFrequencyInSeconds = testFrequencyInSeconds;
        }
    }
}
