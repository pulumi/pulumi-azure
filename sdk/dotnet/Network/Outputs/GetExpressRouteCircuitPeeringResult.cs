// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Network.Outputs
{

    [OutputType]
    public sealed class GetExpressRouteCircuitPeeringResult
    {
        /// <summary>
        /// The Either a 16-bit or a 32-bit ASN for Azure.
        /// </summary>
        public readonly int AzureAsn;
        /// <summary>
        /// The Either a 16-bit or a 32-bit ASN. Can either be public or private.
        /// </summary>
        public readonly int PeerAsn;
        /// <summary>
        /// The type of the ExpressRoute Circuit Peering. Acceptable values include `AzurePrivatePeering`, `AzurePublicPeering` and `MicrosoftPeering`. Changing this forces a new resource to be created.
        /// </summary>
        public readonly string PeeringType;
        /// <summary>
        /// A `/30` subnet for the primary link.
        /// </summary>
        public readonly string PrimaryPeerAddressPrefix;
        /// <summary>
        /// A `/30` subnet for the secondary link.
        /// </summary>
        public readonly string SecondaryPeerAddressPrefix;
        /// <summary>
        /// The shared key. Can be a maximum of 25 characters.
        /// </summary>
        public readonly string SharedKey;
        /// <summary>
        /// A valid VLAN ID to establish this peering on.
        /// </summary>
        public readonly int VlanId;

        [OutputConstructor]
        private GetExpressRouteCircuitPeeringResult(
            int azureAsn,

            int peerAsn,

            string peeringType,

            string primaryPeerAddressPrefix,

            string secondaryPeerAddressPrefix,

            string sharedKey,

            int vlanId)
        {
            AzureAsn = azureAsn;
            PeerAsn = peerAsn;
            PeeringType = peeringType;
            PrimaryPeerAddressPrefix = primaryPeerAddressPrefix;
            SecondaryPeerAddressPrefix = secondaryPeerAddressPrefix;
            SharedKey = sharedKey;
            VlanId = vlanId;
        }
    }
}
