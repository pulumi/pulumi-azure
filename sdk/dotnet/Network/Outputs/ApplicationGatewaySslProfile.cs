// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Network.Outputs
{

    [OutputType]
    public sealed class ApplicationGatewaySslProfile
    {
        /// <summary>
        /// The ID of the Rewrite Rule Set
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// The name of the SSL Profile that is unique within this Application Gateway.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// a `ssl_policy` block as defined below.
        /// </summary>
        public readonly Outputs.ApplicationGatewaySslProfileSslPolicy? SslPolicy;
        /// <summary>
        /// The name of the Trusted Client Certificate that will be used to authenticate requests from clients.
        /// </summary>
        public readonly ImmutableArray<string> TrustedClientCertificateNames;
        /// <summary>
        /// Should client certificate issuer DN be verified? Defaults to `false`.
        /// </summary>
        public readonly bool? VerifyClientCertIssuerDn;
        /// <summary>
        /// Specify the method to check client certificate revocation status. Possible value is `OCSP`.
        /// </summary>
        public readonly string? VerifyClientCertificateRevocation;

        [OutputConstructor]
        private ApplicationGatewaySslProfile(
            string? id,

            string name,

            Outputs.ApplicationGatewaySslProfileSslPolicy? sslPolicy,

            ImmutableArray<string> trustedClientCertificateNames,

            bool? verifyClientCertIssuerDn,

            string? verifyClientCertificateRevocation)
        {
            Id = id;
            Name = name;
            SslPolicy = sslPolicy;
            TrustedClientCertificateNames = trustedClientCertificateNames;
            VerifyClientCertIssuerDn = verifyClientCertIssuerDn;
            VerifyClientCertificateRevocation = verifyClientCertificateRevocation;
        }
    }
}
