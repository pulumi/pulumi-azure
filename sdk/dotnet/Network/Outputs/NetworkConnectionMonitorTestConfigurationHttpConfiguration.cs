// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Network.Outputs
{

    [OutputType]
    public sealed class NetworkConnectionMonitorTestConfigurationHttpConfiguration
    {
        /// <summary>
        /// The HTTP method for the HTTP request. Possible values are `Get` and `Post`. Defaults to `Get`.
        /// </summary>
        public readonly string? Method;
        /// <summary>
        /// The path component of the URI. It only accepts the absolute path.
        /// </summary>
        public readonly string? Path;
        /// <summary>
        /// The port for the HTTP connection.
        /// </summary>
        public readonly int? Port;
        /// <summary>
        /// Should HTTPS be preferred over HTTP in cases where the choice is not explicit? Defaults to `false`.
        /// </summary>
        public readonly bool? PreferHttps;
        /// <summary>
        /// A `request_header` block as defined below.
        /// </summary>
        public readonly ImmutableArray<Outputs.NetworkConnectionMonitorTestConfigurationHttpConfigurationRequestHeader> RequestHeaders;
        /// <summary>
        /// The HTTP status codes to consider successful. For instance, `2xx`, `301-304` and `418`.
        /// </summary>
        public readonly ImmutableArray<string> ValidStatusCodeRanges;

        [OutputConstructor]
        private NetworkConnectionMonitorTestConfigurationHttpConfiguration(
            string? method,

            string? path,

            int? port,

            bool? preferHttps,

            ImmutableArray<Outputs.NetworkConnectionMonitorTestConfigurationHttpConfigurationRequestHeader> requestHeaders,

            ImmutableArray<string> validStatusCodeRanges)
        {
            Method = method;
            Path = path;
            Port = port;
            PreferHttps = preferHttps;
            RequestHeaders = requestHeaders;
            ValidStatusCodeRanges = validStatusCodeRanges;
        }
    }
}
