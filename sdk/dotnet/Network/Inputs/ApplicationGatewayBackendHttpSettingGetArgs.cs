// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Network.Inputs
{

    public sealed class ApplicationGatewayBackendHttpSettingGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the affinity cookie.
        /// </summary>
        [Input("affinityCookieName")]
        public Input<string>? AffinityCookieName { get; set; }

        [Input("authenticationCertificates")]
        private InputList<Inputs.ApplicationGatewayBackendHttpSettingAuthenticationCertificateGetArgs>? _authenticationCertificates;

        /// <summary>
        /// One or more `authentication_certificate` blocks.
        /// </summary>
        public InputList<Inputs.ApplicationGatewayBackendHttpSettingAuthenticationCertificateGetArgs> AuthenticationCertificates
        {
            get => _authenticationCertificates ?? (_authenticationCertificates = new InputList<Inputs.ApplicationGatewayBackendHttpSettingAuthenticationCertificateGetArgs>());
            set => _authenticationCertificates = value;
        }

        /// <summary>
        /// A `connection_draining` block as defined below.
        /// </summary>
        [Input("connectionDraining")]
        public Input<Inputs.ApplicationGatewayBackendHttpSettingConnectionDrainingGetArgs>? ConnectionDraining { get; set; }

        /// <summary>
        /// Is Cookie-Based Affinity enabled? Possible values are `Enabled` and `Disabled`.
        /// </summary>
        [Input("cookieBasedAffinity", required: true)]
        public Input<string> CookieBasedAffinity { get; set; } = null!;

        /// <summary>
        /// Host header to be sent to the backend servers. Cannot be set if `pick_host_name_from_backend_address` is set to `true`.
        /// </summary>
        [Input("hostName")]
        public Input<string>? HostName { get; set; }

        /// <summary>
        /// The ID of the Rewrite Rule Set
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        /// <summary>
        /// The name of the Backend HTTP Settings Collection.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// The Path which should be used as a prefix for all HTTP requests.
        /// </summary>
        [Input("path")]
        public Input<string>? Path { get; set; }

        /// <summary>
        /// Whether host header should be picked from the host name of the backend server. Defaults to `false`.
        /// </summary>
        [Input("pickHostNameFromBackendAddress")]
        public Input<bool>? PickHostNameFromBackendAddress { get; set; }

        /// <summary>
        /// The port used for this Frontend Port.
        /// </summary>
        [Input("port", required: true)]
        public Input<int> Port { get; set; } = null!;

        /// <summary>
        /// The ID of the associated Probe.
        /// </summary>
        [Input("probeId")]
        public Input<string>? ProbeId { get; set; }

        /// <summary>
        /// The name of an associated HTTP Probe.
        /// </summary>
        [Input("probeName")]
        public Input<string>? ProbeName { get; set; }

        /// <summary>
        /// The Protocol to use for this HTTP Listener. Possible values are `Http` and `Https`.
        /// </summary>
        [Input("protocol", required: true)]
        public Input<string> Protocol { get; set; } = null!;

        /// <summary>
        /// The request timeout in seconds, which must be between 1 and 86400 seconds.
        /// </summary>
        [Input("requestTimeout")]
        public Input<int>? RequestTimeout { get; set; }

        [Input("trustedRootCertificateNames")]
        private InputList<string>? _trustedRootCertificateNames;

        /// <summary>
        /// A list of `trusted_root_certificate` names.
        /// </summary>
        public InputList<string> TrustedRootCertificateNames
        {
            get => _trustedRootCertificateNames ?? (_trustedRootCertificateNames = new InputList<string>());
            set => _trustedRootCertificateNames = value;
        }

        public ApplicationGatewayBackendHttpSettingGetArgs()
        {
        }
    }
}
