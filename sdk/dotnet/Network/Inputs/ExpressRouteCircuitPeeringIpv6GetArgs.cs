// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Network.Inputs
{

    public sealed class ExpressRouteCircuitPeeringIpv6GetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// A boolean value indicating whether the IPv6 peering is enabled. Defaults to `true`.
        /// </summary>
        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        /// <summary>
        /// A `microsoft_peering` block as defined below.
        /// </summary>
        [Input("microsoftPeering")]
        public Input<Inputs.ExpressRouteCircuitPeeringIpv6MicrosoftPeeringGetArgs>? MicrosoftPeering { get; set; }

        /// <summary>
        /// A `/30` subnet for the primary link. Required when config for IPv4.`primary_peer_address_prefix` - (Required) A subnet for the primary link.
        /// </summary>
        [Input("primaryPeerAddressPrefix", required: true)]
        public Input<string> PrimaryPeerAddressPrefix { get; set; } = null!;

        /// <summary>
        /// The ID of the Route Filter. Only available when `peering_type` is set to `MicrosoftPeering`.
        /// 
        /// 
        /// 
        /// 
        /// A `microsoft_peering_config` block contains:`route_filter_id` - (Optional) The ID of the Route Filter. Only available when `peering_type` is set to `MicrosoftPeering`.
        /// 
        /// &gt; **NOTE:** `ipv6` can be specified when `peering_type` is `MicrosoftPeering` or `AzurePrivatePeering`
        /// 
        /// 
        /// 
        /// 
        /// A `microsoft_peering` block contains:
        /// </summary>
        [Input("routeFilterId")]
        public Input<string>? RouteFilterId { get; set; }

        /// <summary>
        /// A `/30` subnet for the secondary link. Required when config for IPv4.`secondary_peer_address_prefix` - (Required) A subnet for the secondary link.
        /// </summary>
        [Input("secondaryPeerAddressPrefix", required: true)]
        public Input<string> SecondaryPeerAddressPrefix { get; set; } = null!;

        public ExpressRouteCircuitPeeringIpv6GetArgs()
        {
        }
        public static new ExpressRouteCircuitPeeringIpv6GetArgs Empty => new ExpressRouteCircuitPeeringIpv6GetArgs();
    }
}
