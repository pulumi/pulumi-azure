// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Network.Inputs
{

    public sealed class RouteMapRuleMatchCriterionArgs : global::Pulumi.ResourceArgs
    {
        [Input("asPaths")]
        private InputList<string>? _asPaths;

        /// <summary>
        /// A list of AS paths which this criterion matches.
        /// </summary>
        public InputList<string> AsPaths
        {
            get => _asPaths ?? (_asPaths = new InputList<string>());
            set => _asPaths = value;
        }

        [Input("communities")]
        private InputList<string>? _communities;

        /// <summary>
        /// A list of BGP communities which this criterion matches.
        /// </summary>
        public InputList<string> Communities
        {
            get => _communities ?? (_communities = new InputList<string>());
            set => _communities = value;
        }

        /// <summary>
        /// The match condition to apply the rule of the Route Map. Possible values are `Contains`, `Equals`, `NotContains`, `NotEquals` and `Unknown`.
        /// </summary>
        [Input("matchCondition", required: true)]
        public Input<string> MatchCondition { get; set; } = null!;

        [Input("routePrefixes")]
        private InputList<string>? _routePrefixes;

        /// <summary>
        /// A list of route prefixes which this criterion matches.
        /// </summary>
        public InputList<string> RoutePrefixes
        {
            get => _routePrefixes ?? (_routePrefixes = new InputList<string>());
            set => _routePrefixes = value;
        }

        public RouteMapRuleMatchCriterionArgs()
        {
        }
        public static new RouteMapRuleMatchCriterionArgs Empty => new RouteMapRuleMatchCriterionArgs();
    }
}
