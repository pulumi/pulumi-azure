// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Network
{
    /// <summary>
    /// Manages an Application Gateway.
    /// </summary>
    public partial class ApplicationGateway : Pulumi.CustomResource
    {
        /// <summary>
        /// One or more `authentication_certificate` blocks as defined below.
        /// </summary>
        [Output("authenticationCertificates")]
        public Output<ImmutableArray<Outputs.ApplicationGatewayAuthenticationCertificate>> AuthenticationCertificates { get; private set; } = null!;

        /// <summary>
        /// A `autoscale_configuration` block as defined below.
        /// </summary>
        [Output("autoscaleConfiguration")]
        public Output<Outputs.ApplicationGatewayAutoscaleConfiguration?> AutoscaleConfiguration { get; private set; } = null!;

        /// <summary>
        /// One or more `backend_address_pool` blocks as defined below.
        /// </summary>
        [Output("backendAddressPools")]
        public Output<ImmutableArray<Outputs.ApplicationGatewayBackendAddressPool>> BackendAddressPools { get; private set; } = null!;

        /// <summary>
        /// One or more `backend_http_settings` blocks as defined below.
        /// </summary>
        [Output("backendHttpSettings")]
        public Output<ImmutableArray<Outputs.ApplicationGatewayBackendHttpSetting>> BackendHttpSettings { get; private set; } = null!;

        /// <summary>
        /// One or more `custom_error_configuration` blocks as defined below.
        /// </summary>
        [Output("customErrorConfigurations")]
        public Output<ImmutableArray<Outputs.ApplicationGatewayCustomErrorConfiguration>> CustomErrorConfigurations { get; private set; } = null!;

        /// <summary>
        /// Is HTTP2 enabled on the application gateway resource? Defaults to `false`.
        /// </summary>
        [Output("enableHttp2")]
        public Output<bool?> EnableHttp2 { get; private set; } = null!;

        /// <summary>
        /// The resource ID of a firewall policy.
        /// </summary>
        [Output("firewallPolicyId")]
        public Output<string?> FirewallPolicyId { get; private set; } = null!;

        /// <summary>
        /// One or more `frontend_ip_configuration` blocks as defined below.
        /// </summary>
        [Output("frontendIpConfigurations")]
        public Output<ImmutableArray<Outputs.ApplicationGatewayFrontendIpConfiguration>> FrontendIpConfigurations { get; private set; } = null!;

        /// <summary>
        /// One or more `frontend_port` blocks as defined below.
        /// </summary>
        [Output("frontendPorts")]
        public Output<ImmutableArray<Outputs.ApplicationGatewayFrontendPort>> FrontendPorts { get; private set; } = null!;

        /// <summary>
        /// One or more `gateway_ip_configuration` blocks as defined below.
        /// </summary>
        [Output("gatewayIpConfigurations")]
        public Output<ImmutableArray<Outputs.ApplicationGatewayGatewayIpConfiguration>> GatewayIpConfigurations { get; private set; } = null!;

        /// <summary>
        /// One or more `http_listener` blocks as defined below.
        /// </summary>
        [Output("httpListeners")]
        public Output<ImmutableArray<Outputs.ApplicationGatewayHttpListener>> HttpListeners { get; private set; } = null!;

        /// <summary>
        /// A `identity` block.
        /// </summary>
        [Output("identity")]
        public Output<Outputs.ApplicationGatewayIdentity> Identity { get; private set; } = null!;

        /// <summary>
        /// The Azure region where the Application Gateway should exist. Changing this forces a new resource to be created.
        /// </summary>
        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// The name of the Application Gateway. Changing this forces a new resource to be created.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// One or more `probe` blocks as defined below.
        /// </summary>
        [Output("probes")]
        public Output<ImmutableArray<Outputs.ApplicationGatewayProbe>> Probes { get; private set; } = null!;

        /// <summary>
        /// A `redirect_configuration` block as defined below.
        /// </summary>
        [Output("redirectConfigurations")]
        public Output<ImmutableArray<Outputs.ApplicationGatewayRedirectConfiguration>> RedirectConfigurations { get; private set; } = null!;

        /// <summary>
        /// One or more `request_routing_rule` blocks as defined below.
        /// </summary>
        [Output("requestRoutingRules")]
        public Output<ImmutableArray<Outputs.ApplicationGatewayRequestRoutingRule>> RequestRoutingRules { get; private set; } = null!;

        /// <summary>
        /// The name of the resource group in which to the Application Gateway should exist. Changing this forces a new resource to be created.
        /// </summary>
        [Output("resourceGroupName")]
        public Output<string> ResourceGroupName { get; private set; } = null!;

        /// <summary>
        /// One or more `rewrite_rule_set` blocks as defined below. Only valid for v2 SKUs.
        /// </summary>
        [Output("rewriteRuleSets")]
        public Output<ImmutableArray<Outputs.ApplicationGatewayRewriteRuleSet>> RewriteRuleSets { get; private set; } = null!;

        /// <summary>
        /// A `sku` block as defined below.
        /// </summary>
        [Output("sku")]
        public Output<Outputs.ApplicationGatewaySku> Sku { get; private set; } = null!;

        /// <summary>
        /// One or more `ssl_certificate` blocks as defined below.
        /// </summary>
        [Output("sslCertificates")]
        public Output<ImmutableArray<Outputs.ApplicationGatewaySslCertificate>> SslCertificates { get; private set; } = null!;

        /// <summary>
        /// a `ssl policy` block as defined below.
        /// </summary>
        [Output("sslPolicies")]
        public Output<ImmutableArray<Outputs.ApplicationGatewaySslPolicy>> SslPolicies { get; private set; } = null!;

        /// <summary>
        /// A mapping of tags to assign to the resource.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// One or more `trusted_root_certificate` blocks as defined below.
        /// </summary>
        [Output("trustedRootCertificates")]
        public Output<ImmutableArray<Outputs.ApplicationGatewayTrustedRootCertificate>> TrustedRootCertificates { get; private set; } = null!;

        /// <summary>
        /// One or more `url_path_map` blocks as defined below.
        /// </summary>
        [Output("urlPathMaps")]
        public Output<ImmutableArray<Outputs.ApplicationGatewayUrlPathMap>> UrlPathMaps { get; private set; } = null!;

        /// <summary>
        /// A `waf_configuration` block as defined below.
        /// </summary>
        [Output("wafConfiguration")]
        public Output<Outputs.ApplicationGatewayWafConfiguration?> WafConfiguration { get; private set; } = null!;

        /// <summary>
        /// A collection of availability zones to spread the Application Gateway over.
        /// </summary>
        [Output("zones")]
        public Output<ImmutableArray<string>> Zones { get; private set; } = null!;


        /// <summary>
        /// Create a ApplicationGateway resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ApplicationGateway(string name, ApplicationGatewayArgs args, CustomResourceOptions? options = null)
            : base("azure:network/applicationGateway:ApplicationGateway", name, args ?? new ApplicationGatewayArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ApplicationGateway(string name, Input<string> id, ApplicationGatewayState? state = null, CustomResourceOptions? options = null)
            : base("azure:network/applicationGateway:ApplicationGateway", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ApplicationGateway resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ApplicationGateway Get(string name, Input<string> id, ApplicationGatewayState? state = null, CustomResourceOptions? options = null)
        {
            return new ApplicationGateway(name, id, state, options);
        }
    }

    public sealed class ApplicationGatewayArgs : Pulumi.ResourceArgs
    {
        [Input("authenticationCertificates")]
        private InputList<Inputs.ApplicationGatewayAuthenticationCertificateArgs>? _authenticationCertificates;

        /// <summary>
        /// One or more `authentication_certificate` blocks as defined below.
        /// </summary>
        public InputList<Inputs.ApplicationGatewayAuthenticationCertificateArgs> AuthenticationCertificates
        {
            get => _authenticationCertificates ?? (_authenticationCertificates = new InputList<Inputs.ApplicationGatewayAuthenticationCertificateArgs>());
            set => _authenticationCertificates = value;
        }

        /// <summary>
        /// A `autoscale_configuration` block as defined below.
        /// </summary>
        [Input("autoscaleConfiguration")]
        public Input<Inputs.ApplicationGatewayAutoscaleConfigurationArgs>? AutoscaleConfiguration { get; set; }

        [Input("backendAddressPools", required: true)]
        private InputList<Inputs.ApplicationGatewayBackendAddressPoolArgs>? _backendAddressPools;

        /// <summary>
        /// One or more `backend_address_pool` blocks as defined below.
        /// </summary>
        public InputList<Inputs.ApplicationGatewayBackendAddressPoolArgs> BackendAddressPools
        {
            get => _backendAddressPools ?? (_backendAddressPools = new InputList<Inputs.ApplicationGatewayBackendAddressPoolArgs>());
            set => _backendAddressPools = value;
        }

        [Input("backendHttpSettings", required: true)]
        private InputList<Inputs.ApplicationGatewayBackendHttpSettingArgs>? _backendHttpSettings;

        /// <summary>
        /// One or more `backend_http_settings` blocks as defined below.
        /// </summary>
        public InputList<Inputs.ApplicationGatewayBackendHttpSettingArgs> BackendHttpSettings
        {
            get => _backendHttpSettings ?? (_backendHttpSettings = new InputList<Inputs.ApplicationGatewayBackendHttpSettingArgs>());
            set => _backendHttpSettings = value;
        }

        [Input("customErrorConfigurations")]
        private InputList<Inputs.ApplicationGatewayCustomErrorConfigurationArgs>? _customErrorConfigurations;

        /// <summary>
        /// One or more `custom_error_configuration` blocks as defined below.
        /// </summary>
        public InputList<Inputs.ApplicationGatewayCustomErrorConfigurationArgs> CustomErrorConfigurations
        {
            get => _customErrorConfigurations ?? (_customErrorConfigurations = new InputList<Inputs.ApplicationGatewayCustomErrorConfigurationArgs>());
            set => _customErrorConfigurations = value;
        }

        /// <summary>
        /// Is HTTP2 enabled on the application gateway resource? Defaults to `false`.
        /// </summary>
        [Input("enableHttp2")]
        public Input<bool>? EnableHttp2 { get; set; }

        /// <summary>
        /// The resource ID of a firewall policy.
        /// </summary>
        [Input("firewallPolicyId")]
        public Input<string>? FirewallPolicyId { get; set; }

        [Input("frontendIpConfigurations", required: true)]
        private InputList<Inputs.ApplicationGatewayFrontendIpConfigurationArgs>? _frontendIpConfigurations;

        /// <summary>
        /// One or more `frontend_ip_configuration` blocks as defined below.
        /// </summary>
        public InputList<Inputs.ApplicationGatewayFrontendIpConfigurationArgs> FrontendIpConfigurations
        {
            get => _frontendIpConfigurations ?? (_frontendIpConfigurations = new InputList<Inputs.ApplicationGatewayFrontendIpConfigurationArgs>());
            set => _frontendIpConfigurations = value;
        }

        [Input("frontendPorts", required: true)]
        private InputList<Inputs.ApplicationGatewayFrontendPortArgs>? _frontendPorts;

        /// <summary>
        /// One or more `frontend_port` blocks as defined below.
        /// </summary>
        public InputList<Inputs.ApplicationGatewayFrontendPortArgs> FrontendPorts
        {
            get => _frontendPorts ?? (_frontendPorts = new InputList<Inputs.ApplicationGatewayFrontendPortArgs>());
            set => _frontendPorts = value;
        }

        [Input("gatewayIpConfigurations", required: true)]
        private InputList<Inputs.ApplicationGatewayGatewayIpConfigurationArgs>? _gatewayIpConfigurations;

        /// <summary>
        /// One or more `gateway_ip_configuration` blocks as defined below.
        /// </summary>
        public InputList<Inputs.ApplicationGatewayGatewayIpConfigurationArgs> GatewayIpConfigurations
        {
            get => _gatewayIpConfigurations ?? (_gatewayIpConfigurations = new InputList<Inputs.ApplicationGatewayGatewayIpConfigurationArgs>());
            set => _gatewayIpConfigurations = value;
        }

        [Input("httpListeners", required: true)]
        private InputList<Inputs.ApplicationGatewayHttpListenerArgs>? _httpListeners;

        /// <summary>
        /// One or more `http_listener` blocks as defined below.
        /// </summary>
        public InputList<Inputs.ApplicationGatewayHttpListenerArgs> HttpListeners
        {
            get => _httpListeners ?? (_httpListeners = new InputList<Inputs.ApplicationGatewayHttpListenerArgs>());
            set => _httpListeners = value;
        }

        /// <summary>
        /// A `identity` block.
        /// </summary>
        [Input("identity")]
        public Input<Inputs.ApplicationGatewayIdentityArgs>? Identity { get; set; }

        /// <summary>
        /// The Azure region where the Application Gateway should exist. Changing this forces a new resource to be created.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// The name of the Application Gateway. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("probes")]
        private InputList<Inputs.ApplicationGatewayProbeArgs>? _probes;

        /// <summary>
        /// One or more `probe` blocks as defined below.
        /// </summary>
        public InputList<Inputs.ApplicationGatewayProbeArgs> Probes
        {
            get => _probes ?? (_probes = new InputList<Inputs.ApplicationGatewayProbeArgs>());
            set => _probes = value;
        }

        [Input("redirectConfigurations")]
        private InputList<Inputs.ApplicationGatewayRedirectConfigurationArgs>? _redirectConfigurations;

        /// <summary>
        /// A `redirect_configuration` block as defined below.
        /// </summary>
        public InputList<Inputs.ApplicationGatewayRedirectConfigurationArgs> RedirectConfigurations
        {
            get => _redirectConfigurations ?? (_redirectConfigurations = new InputList<Inputs.ApplicationGatewayRedirectConfigurationArgs>());
            set => _redirectConfigurations = value;
        }

        [Input("requestRoutingRules", required: true)]
        private InputList<Inputs.ApplicationGatewayRequestRoutingRuleArgs>? _requestRoutingRules;

        /// <summary>
        /// One or more `request_routing_rule` blocks as defined below.
        /// </summary>
        public InputList<Inputs.ApplicationGatewayRequestRoutingRuleArgs> RequestRoutingRules
        {
            get => _requestRoutingRules ?? (_requestRoutingRules = new InputList<Inputs.ApplicationGatewayRequestRoutingRuleArgs>());
            set => _requestRoutingRules = value;
        }

        /// <summary>
        /// The name of the resource group in which to the Application Gateway should exist. Changing this forces a new resource to be created.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        [Input("rewriteRuleSets")]
        private InputList<Inputs.ApplicationGatewayRewriteRuleSetArgs>? _rewriteRuleSets;

        /// <summary>
        /// One or more `rewrite_rule_set` blocks as defined below. Only valid for v2 SKUs.
        /// </summary>
        public InputList<Inputs.ApplicationGatewayRewriteRuleSetArgs> RewriteRuleSets
        {
            get => _rewriteRuleSets ?? (_rewriteRuleSets = new InputList<Inputs.ApplicationGatewayRewriteRuleSetArgs>());
            set => _rewriteRuleSets = value;
        }

        /// <summary>
        /// A `sku` block as defined below.
        /// </summary>
        [Input("sku", required: true)]
        public Input<Inputs.ApplicationGatewaySkuArgs> Sku { get; set; } = null!;

        [Input("sslCertificates")]
        private InputList<Inputs.ApplicationGatewaySslCertificateArgs>? _sslCertificates;

        /// <summary>
        /// One or more `ssl_certificate` blocks as defined below.
        /// </summary>
        public InputList<Inputs.ApplicationGatewaySslCertificateArgs> SslCertificates
        {
            get => _sslCertificates ?? (_sslCertificates = new InputList<Inputs.ApplicationGatewaySslCertificateArgs>());
            set => _sslCertificates = value;
        }

        [Input("sslPolicies")]
        private InputList<Inputs.ApplicationGatewaySslPolicyArgs>? _sslPolicies;

        /// <summary>
        /// a `ssl policy` block as defined below.
        /// </summary>
        public InputList<Inputs.ApplicationGatewaySslPolicyArgs> SslPolicies
        {
            get => _sslPolicies ?? (_sslPolicies = new InputList<Inputs.ApplicationGatewaySslPolicyArgs>());
            set => _sslPolicies = value;
        }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// A mapping of tags to assign to the resource.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("trustedRootCertificates")]
        private InputList<Inputs.ApplicationGatewayTrustedRootCertificateArgs>? _trustedRootCertificates;

        /// <summary>
        /// One or more `trusted_root_certificate` blocks as defined below.
        /// </summary>
        public InputList<Inputs.ApplicationGatewayTrustedRootCertificateArgs> TrustedRootCertificates
        {
            get => _trustedRootCertificates ?? (_trustedRootCertificates = new InputList<Inputs.ApplicationGatewayTrustedRootCertificateArgs>());
            set => _trustedRootCertificates = value;
        }

        [Input("urlPathMaps")]
        private InputList<Inputs.ApplicationGatewayUrlPathMapArgs>? _urlPathMaps;

        /// <summary>
        /// One or more `url_path_map` blocks as defined below.
        /// </summary>
        public InputList<Inputs.ApplicationGatewayUrlPathMapArgs> UrlPathMaps
        {
            get => _urlPathMaps ?? (_urlPathMaps = new InputList<Inputs.ApplicationGatewayUrlPathMapArgs>());
            set => _urlPathMaps = value;
        }

        /// <summary>
        /// A `waf_configuration` block as defined below.
        /// </summary>
        [Input("wafConfiguration")]
        public Input<Inputs.ApplicationGatewayWafConfigurationArgs>? WafConfiguration { get; set; }

        [Input("zones")]
        private InputList<string>? _zones;

        /// <summary>
        /// A collection of availability zones to spread the Application Gateway over.
        /// </summary>
        public InputList<string> Zones
        {
            get => _zones ?? (_zones = new InputList<string>());
            set => _zones = value;
        }

        public ApplicationGatewayArgs()
        {
        }
    }

    public sealed class ApplicationGatewayState : Pulumi.ResourceArgs
    {
        [Input("authenticationCertificates")]
        private InputList<Inputs.ApplicationGatewayAuthenticationCertificateGetArgs>? _authenticationCertificates;

        /// <summary>
        /// One or more `authentication_certificate` blocks as defined below.
        /// </summary>
        public InputList<Inputs.ApplicationGatewayAuthenticationCertificateGetArgs> AuthenticationCertificates
        {
            get => _authenticationCertificates ?? (_authenticationCertificates = new InputList<Inputs.ApplicationGatewayAuthenticationCertificateGetArgs>());
            set => _authenticationCertificates = value;
        }

        /// <summary>
        /// A `autoscale_configuration` block as defined below.
        /// </summary>
        [Input("autoscaleConfiguration")]
        public Input<Inputs.ApplicationGatewayAutoscaleConfigurationGetArgs>? AutoscaleConfiguration { get; set; }

        [Input("backendAddressPools")]
        private InputList<Inputs.ApplicationGatewayBackendAddressPoolGetArgs>? _backendAddressPools;

        /// <summary>
        /// One or more `backend_address_pool` blocks as defined below.
        /// </summary>
        public InputList<Inputs.ApplicationGatewayBackendAddressPoolGetArgs> BackendAddressPools
        {
            get => _backendAddressPools ?? (_backendAddressPools = new InputList<Inputs.ApplicationGatewayBackendAddressPoolGetArgs>());
            set => _backendAddressPools = value;
        }

        [Input("backendHttpSettings")]
        private InputList<Inputs.ApplicationGatewayBackendHttpSettingGetArgs>? _backendHttpSettings;

        /// <summary>
        /// One or more `backend_http_settings` blocks as defined below.
        /// </summary>
        public InputList<Inputs.ApplicationGatewayBackendHttpSettingGetArgs> BackendHttpSettings
        {
            get => _backendHttpSettings ?? (_backendHttpSettings = new InputList<Inputs.ApplicationGatewayBackendHttpSettingGetArgs>());
            set => _backendHttpSettings = value;
        }

        [Input("customErrorConfigurations")]
        private InputList<Inputs.ApplicationGatewayCustomErrorConfigurationGetArgs>? _customErrorConfigurations;

        /// <summary>
        /// One or more `custom_error_configuration` blocks as defined below.
        /// </summary>
        public InputList<Inputs.ApplicationGatewayCustomErrorConfigurationGetArgs> CustomErrorConfigurations
        {
            get => _customErrorConfigurations ?? (_customErrorConfigurations = new InputList<Inputs.ApplicationGatewayCustomErrorConfigurationGetArgs>());
            set => _customErrorConfigurations = value;
        }

        /// <summary>
        /// Is HTTP2 enabled on the application gateway resource? Defaults to `false`.
        /// </summary>
        [Input("enableHttp2")]
        public Input<bool>? EnableHttp2 { get; set; }

        /// <summary>
        /// The resource ID of a firewall policy.
        /// </summary>
        [Input("firewallPolicyId")]
        public Input<string>? FirewallPolicyId { get; set; }

        [Input("frontendIpConfigurations")]
        private InputList<Inputs.ApplicationGatewayFrontendIpConfigurationGetArgs>? _frontendIpConfigurations;

        /// <summary>
        /// One or more `frontend_ip_configuration` blocks as defined below.
        /// </summary>
        public InputList<Inputs.ApplicationGatewayFrontendIpConfigurationGetArgs> FrontendIpConfigurations
        {
            get => _frontendIpConfigurations ?? (_frontendIpConfigurations = new InputList<Inputs.ApplicationGatewayFrontendIpConfigurationGetArgs>());
            set => _frontendIpConfigurations = value;
        }

        [Input("frontendPorts")]
        private InputList<Inputs.ApplicationGatewayFrontendPortGetArgs>? _frontendPorts;

        /// <summary>
        /// One or more `frontend_port` blocks as defined below.
        /// </summary>
        public InputList<Inputs.ApplicationGatewayFrontendPortGetArgs> FrontendPorts
        {
            get => _frontendPorts ?? (_frontendPorts = new InputList<Inputs.ApplicationGatewayFrontendPortGetArgs>());
            set => _frontendPorts = value;
        }

        [Input("gatewayIpConfigurations")]
        private InputList<Inputs.ApplicationGatewayGatewayIpConfigurationGetArgs>? _gatewayIpConfigurations;

        /// <summary>
        /// One or more `gateway_ip_configuration` blocks as defined below.
        /// </summary>
        public InputList<Inputs.ApplicationGatewayGatewayIpConfigurationGetArgs> GatewayIpConfigurations
        {
            get => _gatewayIpConfigurations ?? (_gatewayIpConfigurations = new InputList<Inputs.ApplicationGatewayGatewayIpConfigurationGetArgs>());
            set => _gatewayIpConfigurations = value;
        }

        [Input("httpListeners")]
        private InputList<Inputs.ApplicationGatewayHttpListenerGetArgs>? _httpListeners;

        /// <summary>
        /// One or more `http_listener` blocks as defined below.
        /// </summary>
        public InputList<Inputs.ApplicationGatewayHttpListenerGetArgs> HttpListeners
        {
            get => _httpListeners ?? (_httpListeners = new InputList<Inputs.ApplicationGatewayHttpListenerGetArgs>());
            set => _httpListeners = value;
        }

        /// <summary>
        /// A `identity` block.
        /// </summary>
        [Input("identity")]
        public Input<Inputs.ApplicationGatewayIdentityGetArgs>? Identity { get; set; }

        /// <summary>
        /// The Azure region where the Application Gateway should exist. Changing this forces a new resource to be created.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// The name of the Application Gateway. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("probes")]
        private InputList<Inputs.ApplicationGatewayProbeGetArgs>? _probes;

        /// <summary>
        /// One or more `probe` blocks as defined below.
        /// </summary>
        public InputList<Inputs.ApplicationGatewayProbeGetArgs> Probes
        {
            get => _probes ?? (_probes = new InputList<Inputs.ApplicationGatewayProbeGetArgs>());
            set => _probes = value;
        }

        [Input("redirectConfigurations")]
        private InputList<Inputs.ApplicationGatewayRedirectConfigurationGetArgs>? _redirectConfigurations;

        /// <summary>
        /// A `redirect_configuration` block as defined below.
        /// </summary>
        public InputList<Inputs.ApplicationGatewayRedirectConfigurationGetArgs> RedirectConfigurations
        {
            get => _redirectConfigurations ?? (_redirectConfigurations = new InputList<Inputs.ApplicationGatewayRedirectConfigurationGetArgs>());
            set => _redirectConfigurations = value;
        }

        [Input("requestRoutingRules")]
        private InputList<Inputs.ApplicationGatewayRequestRoutingRuleGetArgs>? _requestRoutingRules;

        /// <summary>
        /// One or more `request_routing_rule` blocks as defined below.
        /// </summary>
        public InputList<Inputs.ApplicationGatewayRequestRoutingRuleGetArgs> RequestRoutingRules
        {
            get => _requestRoutingRules ?? (_requestRoutingRules = new InputList<Inputs.ApplicationGatewayRequestRoutingRuleGetArgs>());
            set => _requestRoutingRules = value;
        }

        /// <summary>
        /// The name of the resource group in which to the Application Gateway should exist. Changing this forces a new resource to be created.
        /// </summary>
        [Input("resourceGroupName")]
        public Input<string>? ResourceGroupName { get; set; }

        [Input("rewriteRuleSets")]
        private InputList<Inputs.ApplicationGatewayRewriteRuleSetGetArgs>? _rewriteRuleSets;

        /// <summary>
        /// One or more `rewrite_rule_set` blocks as defined below. Only valid for v2 SKUs.
        /// </summary>
        public InputList<Inputs.ApplicationGatewayRewriteRuleSetGetArgs> RewriteRuleSets
        {
            get => _rewriteRuleSets ?? (_rewriteRuleSets = new InputList<Inputs.ApplicationGatewayRewriteRuleSetGetArgs>());
            set => _rewriteRuleSets = value;
        }

        /// <summary>
        /// A `sku` block as defined below.
        /// </summary>
        [Input("sku")]
        public Input<Inputs.ApplicationGatewaySkuGetArgs>? Sku { get; set; }

        [Input("sslCertificates")]
        private InputList<Inputs.ApplicationGatewaySslCertificateGetArgs>? _sslCertificates;

        /// <summary>
        /// One or more `ssl_certificate` blocks as defined below.
        /// </summary>
        public InputList<Inputs.ApplicationGatewaySslCertificateGetArgs> SslCertificates
        {
            get => _sslCertificates ?? (_sslCertificates = new InputList<Inputs.ApplicationGatewaySslCertificateGetArgs>());
            set => _sslCertificates = value;
        }

        [Input("sslPolicies")]
        private InputList<Inputs.ApplicationGatewaySslPolicyGetArgs>? _sslPolicies;

        /// <summary>
        /// a `ssl policy` block as defined below.
        /// </summary>
        public InputList<Inputs.ApplicationGatewaySslPolicyGetArgs> SslPolicies
        {
            get => _sslPolicies ?? (_sslPolicies = new InputList<Inputs.ApplicationGatewaySslPolicyGetArgs>());
            set => _sslPolicies = value;
        }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// A mapping of tags to assign to the resource.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("trustedRootCertificates")]
        private InputList<Inputs.ApplicationGatewayTrustedRootCertificateGetArgs>? _trustedRootCertificates;

        /// <summary>
        /// One or more `trusted_root_certificate` blocks as defined below.
        /// </summary>
        public InputList<Inputs.ApplicationGatewayTrustedRootCertificateGetArgs> TrustedRootCertificates
        {
            get => _trustedRootCertificates ?? (_trustedRootCertificates = new InputList<Inputs.ApplicationGatewayTrustedRootCertificateGetArgs>());
            set => _trustedRootCertificates = value;
        }

        [Input("urlPathMaps")]
        private InputList<Inputs.ApplicationGatewayUrlPathMapGetArgs>? _urlPathMaps;

        /// <summary>
        /// One or more `url_path_map` blocks as defined below.
        /// </summary>
        public InputList<Inputs.ApplicationGatewayUrlPathMapGetArgs> UrlPathMaps
        {
            get => _urlPathMaps ?? (_urlPathMaps = new InputList<Inputs.ApplicationGatewayUrlPathMapGetArgs>());
            set => _urlPathMaps = value;
        }

        /// <summary>
        /// A `waf_configuration` block as defined below.
        /// </summary>
        [Input("wafConfiguration")]
        public Input<Inputs.ApplicationGatewayWafConfigurationGetArgs>? WafConfiguration { get; set; }

        [Input("zones")]
        private InputList<string>? _zones;

        /// <summary>
        /// A collection of availability zones to spread the Application Gateway over.
        /// </summary>
        public InputList<string> Zones
        {
            get => _zones ?? (_zones = new InputList<string>());
            set => _zones = value;
        }

        public ApplicationGatewayState()
        {
        }
    }
}
