// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Network
{
    /// <summary>
    /// Manages an Application Gateway.
    /// 
    /// &gt; This content is derived from https://github.com/terraform-providers/terraform-provider-azurerm/blob/master/website/docs/r/application_gateway.html.markdown.
    /// </summary>
    public partial class ApplicationGateway : Pulumi.CustomResource
    {
        /// <summary>
        /// One or more `authentication_certificate` blocks as defined below.
        /// </summary>
        [Output("authenticationCertificates")]
        public Output<ImmutableArray<Outputs.ApplicationGatewayAuthenticationCertificates>> AuthenticationCertificates { get; private set; } = null!;

        /// <summary>
        /// A `autoscale_configuration` block as defined below.
        /// </summary>
        [Output("autoscaleConfiguration")]
        public Output<Outputs.ApplicationGatewayAutoscaleConfiguration?> AutoscaleConfiguration { get; private set; } = null!;

        /// <summary>
        /// One or more `backend_address_pool` blocks as defined below.
        /// </summary>
        [Output("backendAddressPools")]
        public Output<ImmutableArray<Outputs.ApplicationGatewayBackendAddressPools>> BackendAddressPools { get; private set; } = null!;

        /// <summary>
        /// One or more `backend_http_settings` blocks as defined below.
        /// </summary>
        [Output("backendHttpSettings")]
        public Output<ImmutableArray<Outputs.ApplicationGatewayBackendHttpSettings>> BackendHttpSettings { get; private set; } = null!;

        /// <summary>
        /// One or more `custom_error_configuration` blocks as defined below.
        /// </summary>
        [Output("customErrorConfigurations")]
        public Output<ImmutableArray<Outputs.ApplicationGatewayCustomErrorConfigurations>> CustomErrorConfigurations { get; private set; } = null!;

        /// <summary>
        /// Is HTTP2 enabled on the application gateway resource? Defaults to `false`.
        /// </summary>
        [Output("enableHttp2")]
        public Output<bool?> EnableHttp2 { get; private set; } = null!;

        /// <summary>
        /// One or more `frontend_ip_configuration` blocks as defined below.
        /// </summary>
        [Output("frontendIpConfigurations")]
        public Output<ImmutableArray<Outputs.ApplicationGatewayFrontendIpConfigurations>> FrontendIpConfigurations { get; private set; } = null!;

        /// <summary>
        /// One or more `frontend_port` blocks as defined below.
        /// </summary>
        [Output("frontendPorts")]
        public Output<ImmutableArray<Outputs.ApplicationGatewayFrontendPorts>> FrontendPorts { get; private set; } = null!;

        /// <summary>
        /// One or more `gateway_ip_configuration` blocks as defined below.
        /// </summary>
        [Output("gatewayIpConfigurations")]
        public Output<ImmutableArray<Outputs.ApplicationGatewayGatewayIpConfigurations>> GatewayIpConfigurations { get; private set; } = null!;

        /// <summary>
        /// One or more `http_listener` blocks as defined below.
        /// </summary>
        [Output("httpListeners")]
        public Output<ImmutableArray<Outputs.ApplicationGatewayHttpListeners>> HttpListeners { get; private set; } = null!;

        /// <summary>
        /// A `identity` block.
        /// </summary>
        [Output("identity")]
        public Output<Outputs.ApplicationGatewayIdentity> Identity { get; private set; } = null!;

        /// <summary>
        /// The Azure region where the Application Gateway should exist. Changing this forces a new resource to be created.
        /// </summary>
        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// The name of the Application Gateway. Changing this forces a new resource to be created.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// One or more `probe` blocks as defined below.
        /// </summary>
        [Output("probes")]
        public Output<ImmutableArray<Outputs.ApplicationGatewayProbes>> Probes { get; private set; } = null!;

        /// <summary>
        /// A `redirect_configuration` block as defined below.
        /// </summary>
        [Output("redirectConfigurations")]
        public Output<ImmutableArray<Outputs.ApplicationGatewayRedirectConfigurations>> RedirectConfigurations { get; private set; } = null!;

        /// <summary>
        /// One or more `request_routing_rule` blocks as defined below.
        /// </summary>
        [Output("requestRoutingRules")]
        public Output<ImmutableArray<Outputs.ApplicationGatewayRequestRoutingRules>> RequestRoutingRules { get; private set; } = null!;

        /// <summary>
        /// The name of the resource group in which to the Application Gateway should exist. Changing this forces a new resource to be created.
        /// </summary>
        [Output("resourceGroupName")]
        public Output<string> ResourceGroupName { get; private set; } = null!;

        /// <summary>
        /// One or more `rewrite_rule_set` blocks as defined below. Only valid for v2 SKUs.
        /// </summary>
        [Output("rewriteRuleSets")]
        public Output<ImmutableArray<Outputs.ApplicationGatewayRewriteRuleSets>> RewriteRuleSets { get; private set; } = null!;

        /// <summary>
        /// A `sku` block as defined below.
        /// </summary>
        [Output("sku")]
        public Output<Outputs.ApplicationGatewaySku> Sku { get; private set; } = null!;

        /// <summary>
        /// One or more `ssl_certificate` blocks as defined below.
        /// </summary>
        [Output("sslCertificates")]
        public Output<ImmutableArray<Outputs.ApplicationGatewaySslCertificates>> SslCertificates { get; private set; } = null!;

        /// <summary>
        /// a `ssl policy` block as defined below.
        /// </summary>
        [Output("sslPolicies")]
        public Output<ImmutableArray<Outputs.ApplicationGatewaySslPolicies>> SslPolicies { get; private set; } = null!;

        /// <summary>
        /// A mapping of tags to assign to the resource.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// One or more `trusted_root_certificate` blocks as defined below.
        /// </summary>
        [Output("trustedRootCertificates")]
        public Output<ImmutableArray<Outputs.ApplicationGatewayTrustedRootCertificates>> TrustedRootCertificates { get; private set; } = null!;

        /// <summary>
        /// One or more `url_path_map` blocks as defined below.
        /// </summary>
        [Output("urlPathMaps")]
        public Output<ImmutableArray<Outputs.ApplicationGatewayUrlPathMaps>> UrlPathMaps { get; private set; } = null!;

        /// <summary>
        /// A `waf_configuration` block as defined below.
        /// </summary>
        [Output("wafConfiguration")]
        public Output<Outputs.ApplicationGatewayWafConfiguration?> WafConfiguration { get; private set; } = null!;

        /// <summary>
        /// A collection of availability zones to spread the Application Gateway over.
        /// </summary>
        [Output("zones")]
        public Output<ImmutableArray<string>> Zones { get; private set; } = null!;


        /// <summary>
        /// Create a ApplicationGateway resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ApplicationGateway(string name, ApplicationGatewayArgs args, CustomResourceOptions? options = null)
            : base("azure:network/applicationGateway:ApplicationGateway", name, args ?? ResourceArgs.Empty, MakeResourceOptions(options, ""))
        {
        }

        private ApplicationGateway(string name, Input<string> id, ApplicationGatewayState? state = null, CustomResourceOptions? options = null)
            : base("azure:network/applicationGateway:ApplicationGateway", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ApplicationGateway resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ApplicationGateway Get(string name, Input<string> id, ApplicationGatewayState? state = null, CustomResourceOptions? options = null)
        {
            return new ApplicationGateway(name, id, state, options);
        }
    }

    public sealed class ApplicationGatewayArgs : Pulumi.ResourceArgs
    {
        [Input("authenticationCertificates")]
        private InputList<Inputs.ApplicationGatewayAuthenticationCertificatesArgs>? _authenticationCertificates;

        /// <summary>
        /// One or more `authentication_certificate` blocks as defined below.
        /// </summary>
        public InputList<Inputs.ApplicationGatewayAuthenticationCertificatesArgs> AuthenticationCertificates
        {
            get => _authenticationCertificates ?? (_authenticationCertificates = new InputList<Inputs.ApplicationGatewayAuthenticationCertificatesArgs>());
            set => _authenticationCertificates = value;
        }

        /// <summary>
        /// A `autoscale_configuration` block as defined below.
        /// </summary>
        [Input("autoscaleConfiguration")]
        public Input<Inputs.ApplicationGatewayAutoscaleConfigurationArgs>? AutoscaleConfiguration { get; set; }

        [Input("backendAddressPools", required: true)]
        private InputList<Inputs.ApplicationGatewayBackendAddressPoolsArgs>? _backendAddressPools;

        /// <summary>
        /// One or more `backend_address_pool` blocks as defined below.
        /// </summary>
        public InputList<Inputs.ApplicationGatewayBackendAddressPoolsArgs> BackendAddressPools
        {
            get => _backendAddressPools ?? (_backendAddressPools = new InputList<Inputs.ApplicationGatewayBackendAddressPoolsArgs>());
            set => _backendAddressPools = value;
        }

        [Input("backendHttpSettings", required: true)]
        private InputList<Inputs.ApplicationGatewayBackendHttpSettingsArgs>? _backendHttpSettings;

        /// <summary>
        /// One or more `backend_http_settings` blocks as defined below.
        /// </summary>
        public InputList<Inputs.ApplicationGatewayBackendHttpSettingsArgs> BackendHttpSettings
        {
            get => _backendHttpSettings ?? (_backendHttpSettings = new InputList<Inputs.ApplicationGatewayBackendHttpSettingsArgs>());
            set => _backendHttpSettings = value;
        }

        [Input("customErrorConfigurations")]
        private InputList<Inputs.ApplicationGatewayCustomErrorConfigurationsArgs>? _customErrorConfigurations;

        /// <summary>
        /// One or more `custom_error_configuration` blocks as defined below.
        /// </summary>
        public InputList<Inputs.ApplicationGatewayCustomErrorConfigurationsArgs> CustomErrorConfigurations
        {
            get => _customErrorConfigurations ?? (_customErrorConfigurations = new InputList<Inputs.ApplicationGatewayCustomErrorConfigurationsArgs>());
            set => _customErrorConfigurations = value;
        }

        /// <summary>
        /// Is HTTP2 enabled on the application gateway resource? Defaults to `false`.
        /// </summary>
        [Input("enableHttp2")]
        public Input<bool>? EnableHttp2 { get; set; }

        [Input("frontendIpConfigurations", required: true)]
        private InputList<Inputs.ApplicationGatewayFrontendIpConfigurationsArgs>? _frontendIpConfigurations;

        /// <summary>
        /// One or more `frontend_ip_configuration` blocks as defined below.
        /// </summary>
        public InputList<Inputs.ApplicationGatewayFrontendIpConfigurationsArgs> FrontendIpConfigurations
        {
            get => _frontendIpConfigurations ?? (_frontendIpConfigurations = new InputList<Inputs.ApplicationGatewayFrontendIpConfigurationsArgs>());
            set => _frontendIpConfigurations = value;
        }

        [Input("frontendPorts", required: true)]
        private InputList<Inputs.ApplicationGatewayFrontendPortsArgs>? _frontendPorts;

        /// <summary>
        /// One or more `frontend_port` blocks as defined below.
        /// </summary>
        public InputList<Inputs.ApplicationGatewayFrontendPortsArgs> FrontendPorts
        {
            get => _frontendPorts ?? (_frontendPorts = new InputList<Inputs.ApplicationGatewayFrontendPortsArgs>());
            set => _frontendPorts = value;
        }

        [Input("gatewayIpConfigurations", required: true)]
        private InputList<Inputs.ApplicationGatewayGatewayIpConfigurationsArgs>? _gatewayIpConfigurations;

        /// <summary>
        /// One or more `gateway_ip_configuration` blocks as defined below.
        /// </summary>
        public InputList<Inputs.ApplicationGatewayGatewayIpConfigurationsArgs> GatewayIpConfigurations
        {
            get => _gatewayIpConfigurations ?? (_gatewayIpConfigurations = new InputList<Inputs.ApplicationGatewayGatewayIpConfigurationsArgs>());
            set => _gatewayIpConfigurations = value;
        }

        [Input("httpListeners", required: true)]
        private InputList<Inputs.ApplicationGatewayHttpListenersArgs>? _httpListeners;

        /// <summary>
        /// One or more `http_listener` blocks as defined below.
        /// </summary>
        public InputList<Inputs.ApplicationGatewayHttpListenersArgs> HttpListeners
        {
            get => _httpListeners ?? (_httpListeners = new InputList<Inputs.ApplicationGatewayHttpListenersArgs>());
            set => _httpListeners = value;
        }

        /// <summary>
        /// A `identity` block.
        /// </summary>
        [Input("identity")]
        public Input<Inputs.ApplicationGatewayIdentityArgs>? Identity { get; set; }

        /// <summary>
        /// The Azure region where the Application Gateway should exist. Changing this forces a new resource to be created.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// The name of the Application Gateway. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("probes")]
        private InputList<Inputs.ApplicationGatewayProbesArgs>? _probes;

        /// <summary>
        /// One or more `probe` blocks as defined below.
        /// </summary>
        public InputList<Inputs.ApplicationGatewayProbesArgs> Probes
        {
            get => _probes ?? (_probes = new InputList<Inputs.ApplicationGatewayProbesArgs>());
            set => _probes = value;
        }

        [Input("redirectConfigurations")]
        private InputList<Inputs.ApplicationGatewayRedirectConfigurationsArgs>? _redirectConfigurations;

        /// <summary>
        /// A `redirect_configuration` block as defined below.
        /// </summary>
        public InputList<Inputs.ApplicationGatewayRedirectConfigurationsArgs> RedirectConfigurations
        {
            get => _redirectConfigurations ?? (_redirectConfigurations = new InputList<Inputs.ApplicationGatewayRedirectConfigurationsArgs>());
            set => _redirectConfigurations = value;
        }

        [Input("requestRoutingRules", required: true)]
        private InputList<Inputs.ApplicationGatewayRequestRoutingRulesArgs>? _requestRoutingRules;

        /// <summary>
        /// One or more `request_routing_rule` blocks as defined below.
        /// </summary>
        public InputList<Inputs.ApplicationGatewayRequestRoutingRulesArgs> RequestRoutingRules
        {
            get => _requestRoutingRules ?? (_requestRoutingRules = new InputList<Inputs.ApplicationGatewayRequestRoutingRulesArgs>());
            set => _requestRoutingRules = value;
        }

        /// <summary>
        /// The name of the resource group in which to the Application Gateway should exist. Changing this forces a new resource to be created.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        [Input("rewriteRuleSets")]
        private InputList<Inputs.ApplicationGatewayRewriteRuleSetsArgs>? _rewriteRuleSets;

        /// <summary>
        /// One or more `rewrite_rule_set` blocks as defined below. Only valid for v2 SKUs.
        /// </summary>
        public InputList<Inputs.ApplicationGatewayRewriteRuleSetsArgs> RewriteRuleSets
        {
            get => _rewriteRuleSets ?? (_rewriteRuleSets = new InputList<Inputs.ApplicationGatewayRewriteRuleSetsArgs>());
            set => _rewriteRuleSets = value;
        }

        /// <summary>
        /// A `sku` block as defined below.
        /// </summary>
        [Input("sku", required: true)]
        public Input<Inputs.ApplicationGatewaySkuArgs> Sku { get; set; } = null!;

        [Input("sslCertificates")]
        private InputList<Inputs.ApplicationGatewaySslCertificatesArgs>? _sslCertificates;

        /// <summary>
        /// One or more `ssl_certificate` blocks as defined below.
        /// </summary>
        public InputList<Inputs.ApplicationGatewaySslCertificatesArgs> SslCertificates
        {
            get => _sslCertificates ?? (_sslCertificates = new InputList<Inputs.ApplicationGatewaySslCertificatesArgs>());
            set => _sslCertificates = value;
        }

        [Input("sslPolicies")]
        private InputList<Inputs.ApplicationGatewaySslPoliciesArgs>? _sslPolicies;

        /// <summary>
        /// a `ssl policy` block as defined below.
        /// </summary>
        public InputList<Inputs.ApplicationGatewaySslPoliciesArgs> SslPolicies
        {
            get => _sslPolicies ?? (_sslPolicies = new InputList<Inputs.ApplicationGatewaySslPoliciesArgs>());
            set => _sslPolicies = value;
        }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// A mapping of tags to assign to the resource.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("trustedRootCertificates")]
        private InputList<Inputs.ApplicationGatewayTrustedRootCertificatesArgs>? _trustedRootCertificates;

        /// <summary>
        /// One or more `trusted_root_certificate` blocks as defined below.
        /// </summary>
        public InputList<Inputs.ApplicationGatewayTrustedRootCertificatesArgs> TrustedRootCertificates
        {
            get => _trustedRootCertificates ?? (_trustedRootCertificates = new InputList<Inputs.ApplicationGatewayTrustedRootCertificatesArgs>());
            set => _trustedRootCertificates = value;
        }

        [Input("urlPathMaps")]
        private InputList<Inputs.ApplicationGatewayUrlPathMapsArgs>? _urlPathMaps;

        /// <summary>
        /// One or more `url_path_map` blocks as defined below.
        /// </summary>
        public InputList<Inputs.ApplicationGatewayUrlPathMapsArgs> UrlPathMaps
        {
            get => _urlPathMaps ?? (_urlPathMaps = new InputList<Inputs.ApplicationGatewayUrlPathMapsArgs>());
            set => _urlPathMaps = value;
        }

        /// <summary>
        /// A `waf_configuration` block as defined below.
        /// </summary>
        [Input("wafConfiguration")]
        public Input<Inputs.ApplicationGatewayWafConfigurationArgs>? WafConfiguration { get; set; }

        [Input("zones")]
        private InputList<string>? _zones;

        /// <summary>
        /// A collection of availability zones to spread the Application Gateway over.
        /// </summary>
        public InputList<string> Zones
        {
            get => _zones ?? (_zones = new InputList<string>());
            set => _zones = value;
        }

        public ApplicationGatewayArgs()
        {
        }
    }

    public sealed class ApplicationGatewayState : Pulumi.ResourceArgs
    {
        [Input("authenticationCertificates")]
        private InputList<Inputs.ApplicationGatewayAuthenticationCertificatesGetArgs>? _authenticationCertificates;

        /// <summary>
        /// One or more `authentication_certificate` blocks as defined below.
        /// </summary>
        public InputList<Inputs.ApplicationGatewayAuthenticationCertificatesGetArgs> AuthenticationCertificates
        {
            get => _authenticationCertificates ?? (_authenticationCertificates = new InputList<Inputs.ApplicationGatewayAuthenticationCertificatesGetArgs>());
            set => _authenticationCertificates = value;
        }

        /// <summary>
        /// A `autoscale_configuration` block as defined below.
        /// </summary>
        [Input("autoscaleConfiguration")]
        public Input<Inputs.ApplicationGatewayAutoscaleConfigurationGetArgs>? AutoscaleConfiguration { get; set; }

        [Input("backendAddressPools")]
        private InputList<Inputs.ApplicationGatewayBackendAddressPoolsGetArgs>? _backendAddressPools;

        /// <summary>
        /// One or more `backend_address_pool` blocks as defined below.
        /// </summary>
        public InputList<Inputs.ApplicationGatewayBackendAddressPoolsGetArgs> BackendAddressPools
        {
            get => _backendAddressPools ?? (_backendAddressPools = new InputList<Inputs.ApplicationGatewayBackendAddressPoolsGetArgs>());
            set => _backendAddressPools = value;
        }

        [Input("backendHttpSettings")]
        private InputList<Inputs.ApplicationGatewayBackendHttpSettingsGetArgs>? _backendHttpSettings;

        /// <summary>
        /// One or more `backend_http_settings` blocks as defined below.
        /// </summary>
        public InputList<Inputs.ApplicationGatewayBackendHttpSettingsGetArgs> BackendHttpSettings
        {
            get => _backendHttpSettings ?? (_backendHttpSettings = new InputList<Inputs.ApplicationGatewayBackendHttpSettingsGetArgs>());
            set => _backendHttpSettings = value;
        }

        [Input("customErrorConfigurations")]
        private InputList<Inputs.ApplicationGatewayCustomErrorConfigurationsGetArgs>? _customErrorConfigurations;

        /// <summary>
        /// One or more `custom_error_configuration` blocks as defined below.
        /// </summary>
        public InputList<Inputs.ApplicationGatewayCustomErrorConfigurationsGetArgs> CustomErrorConfigurations
        {
            get => _customErrorConfigurations ?? (_customErrorConfigurations = new InputList<Inputs.ApplicationGatewayCustomErrorConfigurationsGetArgs>());
            set => _customErrorConfigurations = value;
        }

        /// <summary>
        /// Is HTTP2 enabled on the application gateway resource? Defaults to `false`.
        /// </summary>
        [Input("enableHttp2")]
        public Input<bool>? EnableHttp2 { get; set; }

        [Input("frontendIpConfigurations")]
        private InputList<Inputs.ApplicationGatewayFrontendIpConfigurationsGetArgs>? _frontendIpConfigurations;

        /// <summary>
        /// One or more `frontend_ip_configuration` blocks as defined below.
        /// </summary>
        public InputList<Inputs.ApplicationGatewayFrontendIpConfigurationsGetArgs> FrontendIpConfigurations
        {
            get => _frontendIpConfigurations ?? (_frontendIpConfigurations = new InputList<Inputs.ApplicationGatewayFrontendIpConfigurationsGetArgs>());
            set => _frontendIpConfigurations = value;
        }

        [Input("frontendPorts")]
        private InputList<Inputs.ApplicationGatewayFrontendPortsGetArgs>? _frontendPorts;

        /// <summary>
        /// One or more `frontend_port` blocks as defined below.
        /// </summary>
        public InputList<Inputs.ApplicationGatewayFrontendPortsGetArgs> FrontendPorts
        {
            get => _frontendPorts ?? (_frontendPorts = new InputList<Inputs.ApplicationGatewayFrontendPortsGetArgs>());
            set => _frontendPorts = value;
        }

        [Input("gatewayIpConfigurations")]
        private InputList<Inputs.ApplicationGatewayGatewayIpConfigurationsGetArgs>? _gatewayIpConfigurations;

        /// <summary>
        /// One or more `gateway_ip_configuration` blocks as defined below.
        /// </summary>
        public InputList<Inputs.ApplicationGatewayGatewayIpConfigurationsGetArgs> GatewayIpConfigurations
        {
            get => _gatewayIpConfigurations ?? (_gatewayIpConfigurations = new InputList<Inputs.ApplicationGatewayGatewayIpConfigurationsGetArgs>());
            set => _gatewayIpConfigurations = value;
        }

        [Input("httpListeners")]
        private InputList<Inputs.ApplicationGatewayHttpListenersGetArgs>? _httpListeners;

        /// <summary>
        /// One or more `http_listener` blocks as defined below.
        /// </summary>
        public InputList<Inputs.ApplicationGatewayHttpListenersGetArgs> HttpListeners
        {
            get => _httpListeners ?? (_httpListeners = new InputList<Inputs.ApplicationGatewayHttpListenersGetArgs>());
            set => _httpListeners = value;
        }

        /// <summary>
        /// A `identity` block.
        /// </summary>
        [Input("identity")]
        public Input<Inputs.ApplicationGatewayIdentityGetArgs>? Identity { get; set; }

        /// <summary>
        /// The Azure region where the Application Gateway should exist. Changing this forces a new resource to be created.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// The name of the Application Gateway. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("probes")]
        private InputList<Inputs.ApplicationGatewayProbesGetArgs>? _probes;

        /// <summary>
        /// One or more `probe` blocks as defined below.
        /// </summary>
        public InputList<Inputs.ApplicationGatewayProbesGetArgs> Probes
        {
            get => _probes ?? (_probes = new InputList<Inputs.ApplicationGatewayProbesGetArgs>());
            set => _probes = value;
        }

        [Input("redirectConfigurations")]
        private InputList<Inputs.ApplicationGatewayRedirectConfigurationsGetArgs>? _redirectConfigurations;

        /// <summary>
        /// A `redirect_configuration` block as defined below.
        /// </summary>
        public InputList<Inputs.ApplicationGatewayRedirectConfigurationsGetArgs> RedirectConfigurations
        {
            get => _redirectConfigurations ?? (_redirectConfigurations = new InputList<Inputs.ApplicationGatewayRedirectConfigurationsGetArgs>());
            set => _redirectConfigurations = value;
        }

        [Input("requestRoutingRules")]
        private InputList<Inputs.ApplicationGatewayRequestRoutingRulesGetArgs>? _requestRoutingRules;

        /// <summary>
        /// One or more `request_routing_rule` blocks as defined below.
        /// </summary>
        public InputList<Inputs.ApplicationGatewayRequestRoutingRulesGetArgs> RequestRoutingRules
        {
            get => _requestRoutingRules ?? (_requestRoutingRules = new InputList<Inputs.ApplicationGatewayRequestRoutingRulesGetArgs>());
            set => _requestRoutingRules = value;
        }

        /// <summary>
        /// The name of the resource group in which to the Application Gateway should exist. Changing this forces a new resource to be created.
        /// </summary>
        [Input("resourceGroupName")]
        public Input<string>? ResourceGroupName { get; set; }

        [Input("rewriteRuleSets")]
        private InputList<Inputs.ApplicationGatewayRewriteRuleSetsGetArgs>? _rewriteRuleSets;

        /// <summary>
        /// One or more `rewrite_rule_set` blocks as defined below. Only valid for v2 SKUs.
        /// </summary>
        public InputList<Inputs.ApplicationGatewayRewriteRuleSetsGetArgs> RewriteRuleSets
        {
            get => _rewriteRuleSets ?? (_rewriteRuleSets = new InputList<Inputs.ApplicationGatewayRewriteRuleSetsGetArgs>());
            set => _rewriteRuleSets = value;
        }

        /// <summary>
        /// A `sku` block as defined below.
        /// </summary>
        [Input("sku")]
        public Input<Inputs.ApplicationGatewaySkuGetArgs>? Sku { get; set; }

        [Input("sslCertificates")]
        private InputList<Inputs.ApplicationGatewaySslCertificatesGetArgs>? _sslCertificates;

        /// <summary>
        /// One or more `ssl_certificate` blocks as defined below.
        /// </summary>
        public InputList<Inputs.ApplicationGatewaySslCertificatesGetArgs> SslCertificates
        {
            get => _sslCertificates ?? (_sslCertificates = new InputList<Inputs.ApplicationGatewaySslCertificatesGetArgs>());
            set => _sslCertificates = value;
        }

        [Input("sslPolicies")]
        private InputList<Inputs.ApplicationGatewaySslPoliciesGetArgs>? _sslPolicies;

        /// <summary>
        /// a `ssl policy` block as defined below.
        /// </summary>
        public InputList<Inputs.ApplicationGatewaySslPoliciesGetArgs> SslPolicies
        {
            get => _sslPolicies ?? (_sslPolicies = new InputList<Inputs.ApplicationGatewaySslPoliciesGetArgs>());
            set => _sslPolicies = value;
        }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// A mapping of tags to assign to the resource.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("trustedRootCertificates")]
        private InputList<Inputs.ApplicationGatewayTrustedRootCertificatesGetArgs>? _trustedRootCertificates;

        /// <summary>
        /// One or more `trusted_root_certificate` blocks as defined below.
        /// </summary>
        public InputList<Inputs.ApplicationGatewayTrustedRootCertificatesGetArgs> TrustedRootCertificates
        {
            get => _trustedRootCertificates ?? (_trustedRootCertificates = new InputList<Inputs.ApplicationGatewayTrustedRootCertificatesGetArgs>());
            set => _trustedRootCertificates = value;
        }

        [Input("urlPathMaps")]
        private InputList<Inputs.ApplicationGatewayUrlPathMapsGetArgs>? _urlPathMaps;

        /// <summary>
        /// One or more `url_path_map` blocks as defined below.
        /// </summary>
        public InputList<Inputs.ApplicationGatewayUrlPathMapsGetArgs> UrlPathMaps
        {
            get => _urlPathMaps ?? (_urlPathMaps = new InputList<Inputs.ApplicationGatewayUrlPathMapsGetArgs>());
            set => _urlPathMaps = value;
        }

        /// <summary>
        /// A `waf_configuration` block as defined below.
        /// </summary>
        [Input("wafConfiguration")]
        public Input<Inputs.ApplicationGatewayWafConfigurationGetArgs>? WafConfiguration { get; set; }

        [Input("zones")]
        private InputList<string>? _zones;

        /// <summary>
        /// A collection of availability zones to spread the Application Gateway over.
        /// </summary>
        public InputList<string> Zones
        {
            get => _zones ?? (_zones = new InputList<string>());
            set => _zones = value;
        }

        public ApplicationGatewayState()
        {
        }
    }

    namespace Inputs
    {

    public sealed class ApplicationGatewayAuthenticationCertificatesArgs : Pulumi.ResourceArgs
    {
        [Input("data", required: true)]
        public Input<string> Data { get; set; } = null!;

        /// <summary>
        /// The ID of the Rewrite Rule Set
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        /// <summary>
        /// The name of the Application Gateway. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        public ApplicationGatewayAuthenticationCertificatesArgs()
        {
        }
    }

    public sealed class ApplicationGatewayAuthenticationCertificatesGetArgs : Pulumi.ResourceArgs
    {
        [Input("data", required: true)]
        public Input<string> Data { get; set; } = null!;

        /// <summary>
        /// The ID of the Rewrite Rule Set
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        /// <summary>
        /// The name of the Application Gateway. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        public ApplicationGatewayAuthenticationCertificatesGetArgs()
        {
        }
    }

    public sealed class ApplicationGatewayAutoscaleConfigurationArgs : Pulumi.ResourceArgs
    {
        [Input("maxCapacity")]
        public Input<int>? MaxCapacity { get; set; }

        [Input("minCapacity", required: true)]
        public Input<int> MinCapacity { get; set; } = null!;

        public ApplicationGatewayAutoscaleConfigurationArgs()
        {
        }
    }

    public sealed class ApplicationGatewayAutoscaleConfigurationGetArgs : Pulumi.ResourceArgs
    {
        [Input("maxCapacity")]
        public Input<int>? MaxCapacity { get; set; }

        [Input("minCapacity", required: true)]
        public Input<int> MinCapacity { get; set; } = null!;

        public ApplicationGatewayAutoscaleConfigurationGetArgs()
        {
        }
    }

    public sealed class ApplicationGatewayBackendAddressPoolsArgs : Pulumi.ResourceArgs
    {
        [Input("fqdns")]
        private InputList<string>? _fqdns;
        public InputList<string> Fqdns
        {
            get => _fqdns ?? (_fqdns = new InputList<string>());
            set => _fqdns = value;
        }

        /// <summary>
        /// The ID of the Rewrite Rule Set
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        [Input("ipAddresses")]
        private InputList<string>? _ipAddresses;
        public InputList<string> IpAddresses
        {
            get => _ipAddresses ?? (_ipAddresses = new InputList<string>());
            set => _ipAddresses = value;
        }

        /// <summary>
        /// The name of the Application Gateway. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        public ApplicationGatewayBackendAddressPoolsArgs()
        {
        }
    }

    public sealed class ApplicationGatewayBackendAddressPoolsGetArgs : Pulumi.ResourceArgs
    {
        [Input("fqdns")]
        private InputList<string>? _fqdns;
        public InputList<string> Fqdns
        {
            get => _fqdns ?? (_fqdns = new InputList<string>());
            set => _fqdns = value;
        }

        /// <summary>
        /// The ID of the Rewrite Rule Set
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        [Input("ipAddresses")]
        private InputList<string>? _ipAddresses;
        public InputList<string> IpAddresses
        {
            get => _ipAddresses ?? (_ipAddresses = new InputList<string>());
            set => _ipAddresses = value;
        }

        /// <summary>
        /// The name of the Application Gateway. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        public ApplicationGatewayBackendAddressPoolsGetArgs()
        {
        }
    }

    public sealed class ApplicationGatewayBackendHttpSettingsArgs : Pulumi.ResourceArgs
    {
        [Input("affinityCookieName")]
        public Input<string>? AffinityCookieName { get; set; }

        [Input("authenticationCertificates")]
        private InputList<ApplicationGatewayBackendHttpSettingsAuthenticationCertificatesArgs>? _authenticationCertificates;

        /// <summary>
        /// One or more `authentication_certificate` blocks as defined below.
        /// </summary>
        public InputList<ApplicationGatewayBackendHttpSettingsAuthenticationCertificatesArgs> AuthenticationCertificates
        {
            get => _authenticationCertificates ?? (_authenticationCertificates = new InputList<ApplicationGatewayBackendHttpSettingsAuthenticationCertificatesArgs>());
            set => _authenticationCertificates = value;
        }

        [Input("connectionDraining")]
        public Input<ApplicationGatewayBackendHttpSettingsConnectionDrainingArgs>? ConnectionDraining { get; set; }

        [Input("cookieBasedAffinity", required: true)]
        public Input<string> CookieBasedAffinity { get; set; } = null!;

        [Input("hostName")]
        public Input<string>? HostName { get; set; }

        /// <summary>
        /// The ID of the Rewrite Rule Set
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        /// <summary>
        /// The name of the Application Gateway. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        [Input("path")]
        public Input<string>? Path { get; set; }

        [Input("pickHostNameFromBackendAddress")]
        public Input<bool>? PickHostNameFromBackendAddress { get; set; }

        [Input("port", required: true)]
        public Input<int> Port { get; set; } = null!;

        /// <summary>
        /// The ID of the associated Probe.
        /// </summary>
        [Input("probeId")]
        public Input<string>? ProbeId { get; set; }

        [Input("probeName")]
        public Input<string>? ProbeName { get; set; }

        [Input("protocol", required: true)]
        public Input<string> Protocol { get; set; } = null!;

        [Input("requestTimeout")]
        public Input<int>? RequestTimeout { get; set; }

        [Input("trustedRootCertificateNames")]
        private InputList<string>? _trustedRootCertificateNames;
        public InputList<string> TrustedRootCertificateNames
        {
            get => _trustedRootCertificateNames ?? (_trustedRootCertificateNames = new InputList<string>());
            set => _trustedRootCertificateNames = value;
        }

        public ApplicationGatewayBackendHttpSettingsArgs()
        {
        }
    }

    public sealed class ApplicationGatewayBackendHttpSettingsAuthenticationCertificatesArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the Rewrite Rule Set
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        /// <summary>
        /// The name of the Application Gateway. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        public ApplicationGatewayBackendHttpSettingsAuthenticationCertificatesArgs()
        {
        }
    }

    public sealed class ApplicationGatewayBackendHttpSettingsAuthenticationCertificatesGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the Rewrite Rule Set
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        /// <summary>
        /// The name of the Application Gateway. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        public ApplicationGatewayBackendHttpSettingsAuthenticationCertificatesGetArgs()
        {
        }
    }

    public sealed class ApplicationGatewayBackendHttpSettingsConnectionDrainingArgs : Pulumi.ResourceArgs
    {
        [Input("drainTimeoutSec", required: true)]
        public Input<int> DrainTimeoutSec { get; set; } = null!;

        [Input("enabled", required: true)]
        public Input<bool> Enabled { get; set; } = null!;

        public ApplicationGatewayBackendHttpSettingsConnectionDrainingArgs()
        {
        }
    }

    public sealed class ApplicationGatewayBackendHttpSettingsConnectionDrainingGetArgs : Pulumi.ResourceArgs
    {
        [Input("drainTimeoutSec", required: true)]
        public Input<int> DrainTimeoutSec { get; set; } = null!;

        [Input("enabled", required: true)]
        public Input<bool> Enabled { get; set; } = null!;

        public ApplicationGatewayBackendHttpSettingsConnectionDrainingGetArgs()
        {
        }
    }

    public sealed class ApplicationGatewayBackendHttpSettingsGetArgs : Pulumi.ResourceArgs
    {
        [Input("affinityCookieName")]
        public Input<string>? AffinityCookieName { get; set; }

        [Input("authenticationCertificates")]
        private InputList<ApplicationGatewayBackendHttpSettingsAuthenticationCertificatesGetArgs>? _authenticationCertificates;

        /// <summary>
        /// One or more `authentication_certificate` blocks as defined below.
        /// </summary>
        public InputList<ApplicationGatewayBackendHttpSettingsAuthenticationCertificatesGetArgs> AuthenticationCertificates
        {
            get => _authenticationCertificates ?? (_authenticationCertificates = new InputList<ApplicationGatewayBackendHttpSettingsAuthenticationCertificatesGetArgs>());
            set => _authenticationCertificates = value;
        }

        [Input("connectionDraining")]
        public Input<ApplicationGatewayBackendHttpSettingsConnectionDrainingGetArgs>? ConnectionDraining { get; set; }

        [Input("cookieBasedAffinity", required: true)]
        public Input<string> CookieBasedAffinity { get; set; } = null!;

        [Input("hostName")]
        public Input<string>? HostName { get; set; }

        /// <summary>
        /// The ID of the Rewrite Rule Set
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        /// <summary>
        /// The name of the Application Gateway. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        [Input("path")]
        public Input<string>? Path { get; set; }

        [Input("pickHostNameFromBackendAddress")]
        public Input<bool>? PickHostNameFromBackendAddress { get; set; }

        [Input("port", required: true)]
        public Input<int> Port { get; set; } = null!;

        /// <summary>
        /// The ID of the associated Probe.
        /// </summary>
        [Input("probeId")]
        public Input<string>? ProbeId { get; set; }

        [Input("probeName")]
        public Input<string>? ProbeName { get; set; }

        [Input("protocol", required: true)]
        public Input<string> Protocol { get; set; } = null!;

        [Input("requestTimeout")]
        public Input<int>? RequestTimeout { get; set; }

        [Input("trustedRootCertificateNames")]
        private InputList<string>? _trustedRootCertificateNames;
        public InputList<string> TrustedRootCertificateNames
        {
            get => _trustedRootCertificateNames ?? (_trustedRootCertificateNames = new InputList<string>());
            set => _trustedRootCertificateNames = value;
        }

        public ApplicationGatewayBackendHttpSettingsGetArgs()
        {
        }
    }

    public sealed class ApplicationGatewayCustomErrorConfigurationsArgs : Pulumi.ResourceArgs
    {
        [Input("customErrorPageUrl", required: true)]
        public Input<string> CustomErrorPageUrl { get; set; } = null!;

        /// <summary>
        /// The ID of the Rewrite Rule Set
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        [Input("statusCode", required: true)]
        public Input<string> StatusCode { get; set; } = null!;

        public ApplicationGatewayCustomErrorConfigurationsArgs()
        {
        }
    }

    public sealed class ApplicationGatewayCustomErrorConfigurationsGetArgs : Pulumi.ResourceArgs
    {
        [Input("customErrorPageUrl", required: true)]
        public Input<string> CustomErrorPageUrl { get; set; } = null!;

        /// <summary>
        /// The ID of the Rewrite Rule Set
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        [Input("statusCode", required: true)]
        public Input<string> StatusCode { get; set; } = null!;

        public ApplicationGatewayCustomErrorConfigurationsGetArgs()
        {
        }
    }

    public sealed class ApplicationGatewayFrontendIpConfigurationsArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the Rewrite Rule Set
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        /// <summary>
        /// The name of the Application Gateway. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        [Input("privateIpAddress")]
        public Input<string>? PrivateIpAddress { get; set; }

        [Input("privateIpAddressAllocation")]
        public Input<string>? PrivateIpAddressAllocation { get; set; }

        [Input("publicIpAddressId")]
        public Input<string>? PublicIpAddressId { get; set; }

        [Input("subnetId")]
        public Input<string>? SubnetId { get; set; }

        public ApplicationGatewayFrontendIpConfigurationsArgs()
        {
        }
    }

    public sealed class ApplicationGatewayFrontendIpConfigurationsGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the Rewrite Rule Set
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        /// <summary>
        /// The name of the Application Gateway. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        [Input("privateIpAddress")]
        public Input<string>? PrivateIpAddress { get; set; }

        [Input("privateIpAddressAllocation")]
        public Input<string>? PrivateIpAddressAllocation { get; set; }

        [Input("publicIpAddressId")]
        public Input<string>? PublicIpAddressId { get; set; }

        [Input("subnetId")]
        public Input<string>? SubnetId { get; set; }

        public ApplicationGatewayFrontendIpConfigurationsGetArgs()
        {
        }
    }

    public sealed class ApplicationGatewayFrontendPortsArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the Rewrite Rule Set
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        /// <summary>
        /// The name of the Application Gateway. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        [Input("port", required: true)]
        public Input<int> Port { get; set; } = null!;

        public ApplicationGatewayFrontendPortsArgs()
        {
        }
    }

    public sealed class ApplicationGatewayFrontendPortsGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the Rewrite Rule Set
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        /// <summary>
        /// The name of the Application Gateway. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        [Input("port", required: true)]
        public Input<int> Port { get; set; } = null!;

        public ApplicationGatewayFrontendPortsGetArgs()
        {
        }
    }

    public sealed class ApplicationGatewayGatewayIpConfigurationsArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the Rewrite Rule Set
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        /// <summary>
        /// The name of the Application Gateway. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        [Input("subnetId", required: true)]
        public Input<string> SubnetId { get; set; } = null!;

        public ApplicationGatewayGatewayIpConfigurationsArgs()
        {
        }
    }

    public sealed class ApplicationGatewayGatewayIpConfigurationsGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the Rewrite Rule Set
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        /// <summary>
        /// The name of the Application Gateway. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        [Input("subnetId", required: true)]
        public Input<string> SubnetId { get; set; } = null!;

        public ApplicationGatewayGatewayIpConfigurationsGetArgs()
        {
        }
    }

    public sealed class ApplicationGatewayHttpListenersArgs : Pulumi.ResourceArgs
    {
        [Input("customErrorConfigurations")]
        private InputList<ApplicationGatewayHttpListenersCustomErrorConfigurationsArgs>? _customErrorConfigurations;

        /// <summary>
        /// One or more `custom_error_configuration` blocks as defined below.
        /// </summary>
        public InputList<ApplicationGatewayHttpListenersCustomErrorConfigurationsArgs> CustomErrorConfigurations
        {
            get => _customErrorConfigurations ?? (_customErrorConfigurations = new InputList<ApplicationGatewayHttpListenersCustomErrorConfigurationsArgs>());
            set => _customErrorConfigurations = value;
        }

        /// <summary>
        /// The ID of the associated Frontend Configuration.
        /// </summary>
        [Input("frontendIpConfigurationId")]
        public Input<string>? FrontendIpConfigurationId { get; set; }

        [Input("frontendIpConfigurationName", required: true)]
        public Input<string> FrontendIpConfigurationName { get; set; } = null!;

        /// <summary>
        /// The ID of the associated Frontend Port.
        /// </summary>
        [Input("frontendPortId")]
        public Input<string>? FrontendPortId { get; set; }

        [Input("frontendPortName", required: true)]
        public Input<string> FrontendPortName { get; set; } = null!;

        [Input("hostName")]
        public Input<string>? HostName { get; set; }

        /// <summary>
        /// The ID of the Rewrite Rule Set
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        /// <summary>
        /// The name of the Application Gateway. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        [Input("protocol", required: true)]
        public Input<string> Protocol { get; set; } = null!;

        [Input("requireSni")]
        public Input<bool>? RequireSni { get; set; }

        /// <summary>
        /// The ID of the associated SSL Certificate.
        /// </summary>
        [Input("sslCertificateId")]
        public Input<string>? SslCertificateId { get; set; }

        [Input("sslCertificateName")]
        public Input<string>? SslCertificateName { get; set; }

        public ApplicationGatewayHttpListenersArgs()
        {
        }
    }

    public sealed class ApplicationGatewayHttpListenersCustomErrorConfigurationsArgs : Pulumi.ResourceArgs
    {
        [Input("customErrorPageUrl", required: true)]
        public Input<string> CustomErrorPageUrl { get; set; } = null!;

        /// <summary>
        /// The ID of the Rewrite Rule Set
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        [Input("statusCode", required: true)]
        public Input<string> StatusCode { get; set; } = null!;

        public ApplicationGatewayHttpListenersCustomErrorConfigurationsArgs()
        {
        }
    }

    public sealed class ApplicationGatewayHttpListenersCustomErrorConfigurationsGetArgs : Pulumi.ResourceArgs
    {
        [Input("customErrorPageUrl", required: true)]
        public Input<string> CustomErrorPageUrl { get; set; } = null!;

        /// <summary>
        /// The ID of the Rewrite Rule Set
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        [Input("statusCode", required: true)]
        public Input<string> StatusCode { get; set; } = null!;

        public ApplicationGatewayHttpListenersCustomErrorConfigurationsGetArgs()
        {
        }
    }

    public sealed class ApplicationGatewayHttpListenersGetArgs : Pulumi.ResourceArgs
    {
        [Input("customErrorConfigurations")]
        private InputList<ApplicationGatewayHttpListenersCustomErrorConfigurationsGetArgs>? _customErrorConfigurations;

        /// <summary>
        /// One or more `custom_error_configuration` blocks as defined below.
        /// </summary>
        public InputList<ApplicationGatewayHttpListenersCustomErrorConfigurationsGetArgs> CustomErrorConfigurations
        {
            get => _customErrorConfigurations ?? (_customErrorConfigurations = new InputList<ApplicationGatewayHttpListenersCustomErrorConfigurationsGetArgs>());
            set => _customErrorConfigurations = value;
        }

        /// <summary>
        /// The ID of the associated Frontend Configuration.
        /// </summary>
        [Input("frontendIpConfigurationId")]
        public Input<string>? FrontendIpConfigurationId { get; set; }

        [Input("frontendIpConfigurationName", required: true)]
        public Input<string> FrontendIpConfigurationName { get; set; } = null!;

        /// <summary>
        /// The ID of the associated Frontend Port.
        /// </summary>
        [Input("frontendPortId")]
        public Input<string>? FrontendPortId { get; set; }

        [Input("frontendPortName", required: true)]
        public Input<string> FrontendPortName { get; set; } = null!;

        [Input("hostName")]
        public Input<string>? HostName { get; set; }

        /// <summary>
        /// The ID of the Rewrite Rule Set
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        /// <summary>
        /// The name of the Application Gateway. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        [Input("protocol", required: true)]
        public Input<string> Protocol { get; set; } = null!;

        [Input("requireSni")]
        public Input<bool>? RequireSni { get; set; }

        /// <summary>
        /// The ID of the associated SSL Certificate.
        /// </summary>
        [Input("sslCertificateId")]
        public Input<string>? SslCertificateId { get; set; }

        [Input("sslCertificateName")]
        public Input<string>? SslCertificateName { get; set; }

        public ApplicationGatewayHttpListenersGetArgs()
        {
        }
    }

    public sealed class ApplicationGatewayIdentityArgs : Pulumi.ResourceArgs
    {
        [Input("identityIds", required: true)]
        public Input<string> IdentityIds { get; set; } = null!;

        [Input("type")]
        public Input<string>? Type { get; set; }

        public ApplicationGatewayIdentityArgs()
        {
        }
    }

    public sealed class ApplicationGatewayIdentityGetArgs : Pulumi.ResourceArgs
    {
        [Input("identityIds", required: true)]
        public Input<string> IdentityIds { get; set; } = null!;

        [Input("type")]
        public Input<string>? Type { get; set; }

        public ApplicationGatewayIdentityGetArgs()
        {
        }
    }

    public sealed class ApplicationGatewayProbesArgs : Pulumi.ResourceArgs
    {
        [Input("host")]
        public Input<string>? Host { get; set; }

        /// <summary>
        /// The ID of the Rewrite Rule Set
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        [Input("interval", required: true)]
        public Input<int> Interval { get; set; } = null!;

        [Input("match")]
        public Input<ApplicationGatewayProbesMatchArgs>? Match { get; set; }

        [Input("minimumServers")]
        public Input<int>? MinimumServers { get; set; }

        /// <summary>
        /// The name of the Application Gateway. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        [Input("path", required: true)]
        public Input<string> Path { get; set; } = null!;

        [Input("pickHostNameFromBackendHttpSettings")]
        public Input<bool>? PickHostNameFromBackendHttpSettings { get; set; }

        [Input("protocol", required: true)]
        public Input<string> Protocol { get; set; } = null!;

        [Input("timeout", required: true)]
        public Input<int> Timeout { get; set; } = null!;

        [Input("unhealthyThreshold", required: true)]
        public Input<int> UnhealthyThreshold { get; set; } = null!;

        public ApplicationGatewayProbesArgs()
        {
        }
    }

    public sealed class ApplicationGatewayProbesGetArgs : Pulumi.ResourceArgs
    {
        [Input("host")]
        public Input<string>? Host { get; set; }

        /// <summary>
        /// The ID of the Rewrite Rule Set
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        [Input("interval", required: true)]
        public Input<int> Interval { get; set; } = null!;

        [Input("match")]
        public Input<ApplicationGatewayProbesMatchGetArgs>? Match { get; set; }

        [Input("minimumServers")]
        public Input<int>? MinimumServers { get; set; }

        /// <summary>
        /// The name of the Application Gateway. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        [Input("path", required: true)]
        public Input<string> Path { get; set; } = null!;

        [Input("pickHostNameFromBackendHttpSettings")]
        public Input<bool>? PickHostNameFromBackendHttpSettings { get; set; }

        [Input("protocol", required: true)]
        public Input<string> Protocol { get; set; } = null!;

        [Input("timeout", required: true)]
        public Input<int> Timeout { get; set; } = null!;

        [Input("unhealthyThreshold", required: true)]
        public Input<int> UnhealthyThreshold { get; set; } = null!;

        public ApplicationGatewayProbesGetArgs()
        {
        }
    }

    public sealed class ApplicationGatewayProbesMatchArgs : Pulumi.ResourceArgs
    {
        [Input("body")]
        public Input<string>? Body { get; set; }

        [Input("statusCodes")]
        private InputList<string>? _statusCodes;
        public InputList<string> StatusCodes
        {
            get => _statusCodes ?? (_statusCodes = new InputList<string>());
            set => _statusCodes = value;
        }

        public ApplicationGatewayProbesMatchArgs()
        {
        }
    }

    public sealed class ApplicationGatewayProbesMatchGetArgs : Pulumi.ResourceArgs
    {
        [Input("body")]
        public Input<string>? Body { get; set; }

        [Input("statusCodes")]
        private InputList<string>? _statusCodes;
        public InputList<string> StatusCodes
        {
            get => _statusCodes ?? (_statusCodes = new InputList<string>());
            set => _statusCodes = value;
        }

        public ApplicationGatewayProbesMatchGetArgs()
        {
        }
    }

    public sealed class ApplicationGatewayRedirectConfigurationsArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the Rewrite Rule Set
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        [Input("includePath")]
        public Input<bool>? IncludePath { get; set; }

        [Input("includeQueryString")]
        public Input<bool>? IncludeQueryString { get; set; }

        /// <summary>
        /// The name of the Application Gateway. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        [Input("redirectType", required: true)]
        public Input<string> RedirectType { get; set; } = null!;

        [Input("targetListenerId")]
        public Input<string>? TargetListenerId { get; set; }

        [Input("targetListenerName")]
        public Input<string>? TargetListenerName { get; set; }

        [Input("targetUrl")]
        public Input<string>? TargetUrl { get; set; }

        public ApplicationGatewayRedirectConfigurationsArgs()
        {
        }
    }

    public sealed class ApplicationGatewayRedirectConfigurationsGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the Rewrite Rule Set
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        [Input("includePath")]
        public Input<bool>? IncludePath { get; set; }

        [Input("includeQueryString")]
        public Input<bool>? IncludeQueryString { get; set; }

        /// <summary>
        /// The name of the Application Gateway. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        [Input("redirectType", required: true)]
        public Input<string> RedirectType { get; set; } = null!;

        [Input("targetListenerId")]
        public Input<string>? TargetListenerId { get; set; }

        [Input("targetListenerName")]
        public Input<string>? TargetListenerName { get; set; }

        [Input("targetUrl")]
        public Input<string>? TargetUrl { get; set; }

        public ApplicationGatewayRedirectConfigurationsGetArgs()
        {
        }
    }

    public sealed class ApplicationGatewayRequestRoutingRulesArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the associated Backend Address Pool.
        /// </summary>
        [Input("backendAddressPoolId")]
        public Input<string>? BackendAddressPoolId { get; set; }

        [Input("backendAddressPoolName")]
        public Input<string>? BackendAddressPoolName { get; set; }

        /// <summary>
        /// The ID of the associated Backend HTTP Settings Configuration.
        /// </summary>
        [Input("backendHttpSettingsId")]
        public Input<string>? BackendHttpSettingsId { get; set; }

        [Input("backendHttpSettingsName")]
        public Input<string>? BackendHttpSettingsName { get; set; }

        /// <summary>
        /// The ID of the associated HTTP Listener.
        /// </summary>
        [Input("httpListenerId")]
        public Input<string>? HttpListenerId { get; set; }

        [Input("httpListenerName", required: true)]
        public Input<string> HttpListenerName { get; set; } = null!;

        /// <summary>
        /// The ID of the Rewrite Rule Set
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        /// <summary>
        /// The name of the Application Gateway. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// The ID of the associated Redirect Configuration.
        /// </summary>
        [Input("redirectConfigurationId")]
        public Input<string>? RedirectConfigurationId { get; set; }

        [Input("redirectConfigurationName")]
        public Input<string>? RedirectConfigurationName { get; set; }

        /// <summary>
        /// The ID of the associated Rewrite Rule Set.
        /// </summary>
        [Input("rewriteRuleSetId")]
        public Input<string>? RewriteRuleSetId { get; set; }

        [Input("rewriteRuleSetName")]
        public Input<string>? RewriteRuleSetName { get; set; }

        [Input("ruleType", required: true)]
        public Input<string> RuleType { get; set; } = null!;

        /// <summary>
        /// The ID of the associated URL Path Map.
        /// </summary>
        [Input("urlPathMapId")]
        public Input<string>? UrlPathMapId { get; set; }

        [Input("urlPathMapName")]
        public Input<string>? UrlPathMapName { get; set; }

        public ApplicationGatewayRequestRoutingRulesArgs()
        {
        }
    }

    public sealed class ApplicationGatewayRequestRoutingRulesGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the associated Backend Address Pool.
        /// </summary>
        [Input("backendAddressPoolId")]
        public Input<string>? BackendAddressPoolId { get; set; }

        [Input("backendAddressPoolName")]
        public Input<string>? BackendAddressPoolName { get; set; }

        /// <summary>
        /// The ID of the associated Backend HTTP Settings Configuration.
        /// </summary>
        [Input("backendHttpSettingsId")]
        public Input<string>? BackendHttpSettingsId { get; set; }

        [Input("backendHttpSettingsName")]
        public Input<string>? BackendHttpSettingsName { get; set; }

        /// <summary>
        /// The ID of the associated HTTP Listener.
        /// </summary>
        [Input("httpListenerId")]
        public Input<string>? HttpListenerId { get; set; }

        [Input("httpListenerName", required: true)]
        public Input<string> HttpListenerName { get; set; } = null!;

        /// <summary>
        /// The ID of the Rewrite Rule Set
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        /// <summary>
        /// The name of the Application Gateway. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// The ID of the associated Redirect Configuration.
        /// </summary>
        [Input("redirectConfigurationId")]
        public Input<string>? RedirectConfigurationId { get; set; }

        [Input("redirectConfigurationName")]
        public Input<string>? RedirectConfigurationName { get; set; }

        /// <summary>
        /// The ID of the associated Rewrite Rule Set.
        /// </summary>
        [Input("rewriteRuleSetId")]
        public Input<string>? RewriteRuleSetId { get; set; }

        [Input("rewriteRuleSetName")]
        public Input<string>? RewriteRuleSetName { get; set; }

        [Input("ruleType", required: true)]
        public Input<string> RuleType { get; set; } = null!;

        /// <summary>
        /// The ID of the associated URL Path Map.
        /// </summary>
        [Input("urlPathMapId")]
        public Input<string>? UrlPathMapId { get; set; }

        [Input("urlPathMapName")]
        public Input<string>? UrlPathMapName { get; set; }

        public ApplicationGatewayRequestRoutingRulesGetArgs()
        {
        }
    }

    public sealed class ApplicationGatewayRewriteRuleSetsArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the Rewrite Rule Set
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        /// <summary>
        /// The name of the Application Gateway. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        [Input("rewriteRules")]
        private InputList<ApplicationGatewayRewriteRuleSetsRewriteRulesArgs>? _rewriteRules;
        public InputList<ApplicationGatewayRewriteRuleSetsRewriteRulesArgs> RewriteRules
        {
            get => _rewriteRules ?? (_rewriteRules = new InputList<ApplicationGatewayRewriteRuleSetsRewriteRulesArgs>());
            set => _rewriteRules = value;
        }

        public ApplicationGatewayRewriteRuleSetsArgs()
        {
        }
    }

    public sealed class ApplicationGatewayRewriteRuleSetsGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the Rewrite Rule Set
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        /// <summary>
        /// The name of the Application Gateway. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        [Input("rewriteRules")]
        private InputList<ApplicationGatewayRewriteRuleSetsRewriteRulesGetArgs>? _rewriteRules;
        public InputList<ApplicationGatewayRewriteRuleSetsRewriteRulesGetArgs> RewriteRules
        {
            get => _rewriteRules ?? (_rewriteRules = new InputList<ApplicationGatewayRewriteRuleSetsRewriteRulesGetArgs>());
            set => _rewriteRules = value;
        }

        public ApplicationGatewayRewriteRuleSetsGetArgs()
        {
        }
    }

    public sealed class ApplicationGatewayRewriteRuleSetsRewriteRulesArgs : Pulumi.ResourceArgs
    {
        [Input("conditions")]
        private InputList<ApplicationGatewayRewriteRuleSetsRewriteRulesConditionsArgs>? _conditions;
        public InputList<ApplicationGatewayRewriteRuleSetsRewriteRulesConditionsArgs> Conditions
        {
            get => _conditions ?? (_conditions = new InputList<ApplicationGatewayRewriteRuleSetsRewriteRulesConditionsArgs>());
            set => _conditions = value;
        }

        /// <summary>
        /// The name of the Application Gateway. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        [Input("requestHeaderConfigurations")]
        private InputList<ApplicationGatewayRewriteRuleSetsRewriteRulesRequestHeaderConfigurationsArgs>? _requestHeaderConfigurations;
        public InputList<ApplicationGatewayRewriteRuleSetsRewriteRulesRequestHeaderConfigurationsArgs> RequestHeaderConfigurations
        {
            get => _requestHeaderConfigurations ?? (_requestHeaderConfigurations = new InputList<ApplicationGatewayRewriteRuleSetsRewriteRulesRequestHeaderConfigurationsArgs>());
            set => _requestHeaderConfigurations = value;
        }

        [Input("responseHeaderConfigurations")]
        private InputList<ApplicationGatewayRewriteRuleSetsRewriteRulesResponseHeaderConfigurationsArgs>? _responseHeaderConfigurations;
        public InputList<ApplicationGatewayRewriteRuleSetsRewriteRulesResponseHeaderConfigurationsArgs> ResponseHeaderConfigurations
        {
            get => _responseHeaderConfigurations ?? (_responseHeaderConfigurations = new InputList<ApplicationGatewayRewriteRuleSetsRewriteRulesResponseHeaderConfigurationsArgs>());
            set => _responseHeaderConfigurations = value;
        }

        [Input("ruleSequence", required: true)]
        public Input<int> RuleSequence { get; set; } = null!;

        public ApplicationGatewayRewriteRuleSetsRewriteRulesArgs()
        {
        }
    }

    public sealed class ApplicationGatewayRewriteRuleSetsRewriteRulesConditionsArgs : Pulumi.ResourceArgs
    {
        [Input("ignoreCase")]
        public Input<bool>? IgnoreCase { get; set; }

        [Input("negate")]
        public Input<bool>? Negate { get; set; }

        [Input("pattern", required: true)]
        public Input<string> Pattern { get; set; } = null!;

        [Input("variable", required: true)]
        public Input<string> Variable { get; set; } = null!;

        public ApplicationGatewayRewriteRuleSetsRewriteRulesConditionsArgs()
        {
        }
    }

    public sealed class ApplicationGatewayRewriteRuleSetsRewriteRulesConditionsGetArgs : Pulumi.ResourceArgs
    {
        [Input("ignoreCase")]
        public Input<bool>? IgnoreCase { get; set; }

        [Input("negate")]
        public Input<bool>? Negate { get; set; }

        [Input("pattern", required: true)]
        public Input<string> Pattern { get; set; } = null!;

        [Input("variable", required: true)]
        public Input<string> Variable { get; set; } = null!;

        public ApplicationGatewayRewriteRuleSetsRewriteRulesConditionsGetArgs()
        {
        }
    }

    public sealed class ApplicationGatewayRewriteRuleSetsRewriteRulesGetArgs : Pulumi.ResourceArgs
    {
        [Input("conditions")]
        private InputList<ApplicationGatewayRewriteRuleSetsRewriteRulesConditionsGetArgs>? _conditions;
        public InputList<ApplicationGatewayRewriteRuleSetsRewriteRulesConditionsGetArgs> Conditions
        {
            get => _conditions ?? (_conditions = new InputList<ApplicationGatewayRewriteRuleSetsRewriteRulesConditionsGetArgs>());
            set => _conditions = value;
        }

        /// <summary>
        /// The name of the Application Gateway. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        [Input("requestHeaderConfigurations")]
        private InputList<ApplicationGatewayRewriteRuleSetsRewriteRulesRequestHeaderConfigurationsGetArgs>? _requestHeaderConfigurations;
        public InputList<ApplicationGatewayRewriteRuleSetsRewriteRulesRequestHeaderConfigurationsGetArgs> RequestHeaderConfigurations
        {
            get => _requestHeaderConfigurations ?? (_requestHeaderConfigurations = new InputList<ApplicationGatewayRewriteRuleSetsRewriteRulesRequestHeaderConfigurationsGetArgs>());
            set => _requestHeaderConfigurations = value;
        }

        [Input("responseHeaderConfigurations")]
        private InputList<ApplicationGatewayRewriteRuleSetsRewriteRulesResponseHeaderConfigurationsGetArgs>? _responseHeaderConfigurations;
        public InputList<ApplicationGatewayRewriteRuleSetsRewriteRulesResponseHeaderConfigurationsGetArgs> ResponseHeaderConfigurations
        {
            get => _responseHeaderConfigurations ?? (_responseHeaderConfigurations = new InputList<ApplicationGatewayRewriteRuleSetsRewriteRulesResponseHeaderConfigurationsGetArgs>());
            set => _responseHeaderConfigurations = value;
        }

        [Input("ruleSequence", required: true)]
        public Input<int> RuleSequence { get; set; } = null!;

        public ApplicationGatewayRewriteRuleSetsRewriteRulesGetArgs()
        {
        }
    }

    public sealed class ApplicationGatewayRewriteRuleSetsRewriteRulesRequestHeaderConfigurationsArgs : Pulumi.ResourceArgs
    {
        [Input("headerName", required: true)]
        public Input<string> HeaderName { get; set; } = null!;

        [Input("headerValue", required: true)]
        public Input<string> HeaderValue { get; set; } = null!;

        public ApplicationGatewayRewriteRuleSetsRewriteRulesRequestHeaderConfigurationsArgs()
        {
        }
    }

    public sealed class ApplicationGatewayRewriteRuleSetsRewriteRulesRequestHeaderConfigurationsGetArgs : Pulumi.ResourceArgs
    {
        [Input("headerName", required: true)]
        public Input<string> HeaderName { get; set; } = null!;

        [Input("headerValue", required: true)]
        public Input<string> HeaderValue { get; set; } = null!;

        public ApplicationGatewayRewriteRuleSetsRewriteRulesRequestHeaderConfigurationsGetArgs()
        {
        }
    }

    public sealed class ApplicationGatewayRewriteRuleSetsRewriteRulesResponseHeaderConfigurationsArgs : Pulumi.ResourceArgs
    {
        [Input("headerName", required: true)]
        public Input<string> HeaderName { get; set; } = null!;

        [Input("headerValue", required: true)]
        public Input<string> HeaderValue { get; set; } = null!;

        public ApplicationGatewayRewriteRuleSetsRewriteRulesResponseHeaderConfigurationsArgs()
        {
        }
    }

    public sealed class ApplicationGatewayRewriteRuleSetsRewriteRulesResponseHeaderConfigurationsGetArgs : Pulumi.ResourceArgs
    {
        [Input("headerName", required: true)]
        public Input<string> HeaderName { get; set; } = null!;

        [Input("headerValue", required: true)]
        public Input<string> HeaderValue { get; set; } = null!;

        public ApplicationGatewayRewriteRuleSetsRewriteRulesResponseHeaderConfigurationsGetArgs()
        {
        }
    }

    public sealed class ApplicationGatewaySkuArgs : Pulumi.ResourceArgs
    {
        [Input("capacity")]
        public Input<int>? Capacity { get; set; }

        /// <summary>
        /// The name of the Application Gateway. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        [Input("tier", required: true)]
        public Input<string> Tier { get; set; } = null!;

        public ApplicationGatewaySkuArgs()
        {
        }
    }

    public sealed class ApplicationGatewaySkuGetArgs : Pulumi.ResourceArgs
    {
        [Input("capacity")]
        public Input<int>? Capacity { get; set; }

        /// <summary>
        /// The name of the Application Gateway. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        [Input("tier", required: true)]
        public Input<string> Tier { get; set; } = null!;

        public ApplicationGatewaySkuGetArgs()
        {
        }
    }

    public sealed class ApplicationGatewaySslCertificatesArgs : Pulumi.ResourceArgs
    {
        [Input("data")]
        public Input<string>? Data { get; set; }

        /// <summary>
        /// The ID of the Rewrite Rule Set
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        [Input("keyVaultSecretId")]
        public Input<string>? KeyVaultSecretId { get; set; }

        /// <summary>
        /// The name of the Application Gateway. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        [Input("password")]
        public Input<string>? Password { get; set; }

        /// <summary>
        /// The Public Certificate Data associated with the SSL Certificate.
        /// </summary>
        [Input("publicCertData")]
        public Input<string>? PublicCertData { get; set; }

        public ApplicationGatewaySslCertificatesArgs()
        {
        }
    }

    public sealed class ApplicationGatewaySslCertificatesGetArgs : Pulumi.ResourceArgs
    {
        [Input("data")]
        public Input<string>? Data { get; set; }

        /// <summary>
        /// The ID of the Rewrite Rule Set
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        [Input("keyVaultSecretId")]
        public Input<string>? KeyVaultSecretId { get; set; }

        /// <summary>
        /// The name of the Application Gateway. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        [Input("password")]
        public Input<string>? Password { get; set; }

        /// <summary>
        /// The Public Certificate Data associated with the SSL Certificate.
        /// </summary>
        [Input("publicCertData")]
        public Input<string>? PublicCertData { get; set; }

        public ApplicationGatewaySslCertificatesGetArgs()
        {
        }
    }

    public sealed class ApplicationGatewaySslPoliciesArgs : Pulumi.ResourceArgs
    {
        [Input("cipherSuites")]
        private InputList<string>? _cipherSuites;
        public InputList<string> CipherSuites
        {
            get => _cipherSuites ?? (_cipherSuites = new InputList<string>());
            set => _cipherSuites = value;
        }

        [Input("disabledProtocols")]
        private InputList<string>? _disabledProtocols;
        public InputList<string> DisabledProtocols
        {
            get => _disabledProtocols ?? (_disabledProtocols = new InputList<string>());
            set => _disabledProtocols = value;
        }

        [Input("minProtocolVersion")]
        public Input<string>? MinProtocolVersion { get; set; }

        [Input("policyName")]
        public Input<string>? PolicyName { get; set; }

        [Input("policyType")]
        public Input<string>? PolicyType { get; set; }

        public ApplicationGatewaySslPoliciesArgs()
        {
        }
    }

    public sealed class ApplicationGatewaySslPoliciesGetArgs : Pulumi.ResourceArgs
    {
        [Input("cipherSuites")]
        private InputList<string>? _cipherSuites;
        public InputList<string> CipherSuites
        {
            get => _cipherSuites ?? (_cipherSuites = new InputList<string>());
            set => _cipherSuites = value;
        }

        [Input("disabledProtocols")]
        private InputList<string>? _disabledProtocols;
        public InputList<string> DisabledProtocols
        {
            get => _disabledProtocols ?? (_disabledProtocols = new InputList<string>());
            set => _disabledProtocols = value;
        }

        [Input("minProtocolVersion")]
        public Input<string>? MinProtocolVersion { get; set; }

        [Input("policyName")]
        public Input<string>? PolicyName { get; set; }

        [Input("policyType")]
        public Input<string>? PolicyType { get; set; }

        public ApplicationGatewaySslPoliciesGetArgs()
        {
        }
    }

    public sealed class ApplicationGatewayTrustedRootCertificatesArgs : Pulumi.ResourceArgs
    {
        [Input("data", required: true)]
        public Input<string> Data { get; set; } = null!;

        /// <summary>
        /// The ID of the Rewrite Rule Set
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        /// <summary>
        /// The name of the Application Gateway. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        public ApplicationGatewayTrustedRootCertificatesArgs()
        {
        }
    }

    public sealed class ApplicationGatewayTrustedRootCertificatesGetArgs : Pulumi.ResourceArgs
    {
        [Input("data", required: true)]
        public Input<string> Data { get; set; } = null!;

        /// <summary>
        /// The ID of the Rewrite Rule Set
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        /// <summary>
        /// The name of the Application Gateway. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        public ApplicationGatewayTrustedRootCertificatesGetArgs()
        {
        }
    }

    public sealed class ApplicationGatewayUrlPathMapsArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the Default Backend Address Pool.
        /// </summary>
        [Input("defaultBackendAddressPoolId")]
        public Input<string>? DefaultBackendAddressPoolId { get; set; }

        [Input("defaultBackendAddressPoolName")]
        public Input<string>? DefaultBackendAddressPoolName { get; set; }

        /// <summary>
        /// The ID of the Default Backend HTTP Settings Collection.
        /// </summary>
        [Input("defaultBackendHttpSettingsId")]
        public Input<string>? DefaultBackendHttpSettingsId { get; set; }

        [Input("defaultBackendHttpSettingsName")]
        public Input<string>? DefaultBackendHttpSettingsName { get; set; }

        /// <summary>
        /// The ID of the Default Redirect Configuration.
        /// </summary>
        [Input("defaultRedirectConfigurationId")]
        public Input<string>? DefaultRedirectConfigurationId { get; set; }

        [Input("defaultRedirectConfigurationName")]
        public Input<string>? DefaultRedirectConfigurationName { get; set; }

        [Input("defaultRewriteRuleSetId")]
        public Input<string>? DefaultRewriteRuleSetId { get; set; }

        [Input("defaultRewriteRuleSetName")]
        public Input<string>? DefaultRewriteRuleSetName { get; set; }

        /// <summary>
        /// The ID of the Rewrite Rule Set
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        /// <summary>
        /// The name of the Application Gateway. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        [Input("pathRules", required: true)]
        private InputList<ApplicationGatewayUrlPathMapsPathRulesArgs>? _pathRules;

        /// <summary>
        /// A list of `path_rule` blocks as defined above.
        /// </summary>
        public InputList<ApplicationGatewayUrlPathMapsPathRulesArgs> PathRules
        {
            get => _pathRules ?? (_pathRules = new InputList<ApplicationGatewayUrlPathMapsPathRulesArgs>());
            set => _pathRules = value;
        }

        public ApplicationGatewayUrlPathMapsArgs()
        {
        }
    }

    public sealed class ApplicationGatewayUrlPathMapsGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the Default Backend Address Pool.
        /// </summary>
        [Input("defaultBackendAddressPoolId")]
        public Input<string>? DefaultBackendAddressPoolId { get; set; }

        [Input("defaultBackendAddressPoolName")]
        public Input<string>? DefaultBackendAddressPoolName { get; set; }

        /// <summary>
        /// The ID of the Default Backend HTTP Settings Collection.
        /// </summary>
        [Input("defaultBackendHttpSettingsId")]
        public Input<string>? DefaultBackendHttpSettingsId { get; set; }

        [Input("defaultBackendHttpSettingsName")]
        public Input<string>? DefaultBackendHttpSettingsName { get; set; }

        /// <summary>
        /// The ID of the Default Redirect Configuration.
        /// </summary>
        [Input("defaultRedirectConfigurationId")]
        public Input<string>? DefaultRedirectConfigurationId { get; set; }

        [Input("defaultRedirectConfigurationName")]
        public Input<string>? DefaultRedirectConfigurationName { get; set; }

        [Input("defaultRewriteRuleSetId")]
        public Input<string>? DefaultRewriteRuleSetId { get; set; }

        [Input("defaultRewriteRuleSetName")]
        public Input<string>? DefaultRewriteRuleSetName { get; set; }

        /// <summary>
        /// The ID of the Rewrite Rule Set
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        /// <summary>
        /// The name of the Application Gateway. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        [Input("pathRules", required: true)]
        private InputList<ApplicationGatewayUrlPathMapsPathRulesGetArgs>? _pathRules;

        /// <summary>
        /// A list of `path_rule` blocks as defined above.
        /// </summary>
        public InputList<ApplicationGatewayUrlPathMapsPathRulesGetArgs> PathRules
        {
            get => _pathRules ?? (_pathRules = new InputList<ApplicationGatewayUrlPathMapsPathRulesGetArgs>());
            set => _pathRules = value;
        }

        public ApplicationGatewayUrlPathMapsGetArgs()
        {
        }
    }

    public sealed class ApplicationGatewayUrlPathMapsPathRulesArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the associated Backend Address Pool.
        /// </summary>
        [Input("backendAddressPoolId")]
        public Input<string>? BackendAddressPoolId { get; set; }

        [Input("backendAddressPoolName")]
        public Input<string>? BackendAddressPoolName { get; set; }

        /// <summary>
        /// The ID of the associated Backend HTTP Settings Configuration.
        /// </summary>
        [Input("backendHttpSettingsId")]
        public Input<string>? BackendHttpSettingsId { get; set; }

        [Input("backendHttpSettingsName")]
        public Input<string>? BackendHttpSettingsName { get; set; }

        /// <summary>
        /// The ID of the Rewrite Rule Set
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        /// <summary>
        /// The name of the Application Gateway. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        [Input("paths", required: true)]
        private InputList<string>? _paths;
        public InputList<string> Paths
        {
            get => _paths ?? (_paths = new InputList<string>());
            set => _paths = value;
        }

        /// <summary>
        /// The ID of the associated Redirect Configuration.
        /// </summary>
        [Input("redirectConfigurationId")]
        public Input<string>? RedirectConfigurationId { get; set; }

        [Input("redirectConfigurationName")]
        public Input<string>? RedirectConfigurationName { get; set; }

        /// <summary>
        /// The ID of the associated Rewrite Rule Set.
        /// </summary>
        [Input("rewriteRuleSetId")]
        public Input<string>? RewriteRuleSetId { get; set; }

        [Input("rewriteRuleSetName")]
        public Input<string>? RewriteRuleSetName { get; set; }

        public ApplicationGatewayUrlPathMapsPathRulesArgs()
        {
        }
    }

    public sealed class ApplicationGatewayUrlPathMapsPathRulesGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the associated Backend Address Pool.
        /// </summary>
        [Input("backendAddressPoolId")]
        public Input<string>? BackendAddressPoolId { get; set; }

        [Input("backendAddressPoolName")]
        public Input<string>? BackendAddressPoolName { get; set; }

        /// <summary>
        /// The ID of the associated Backend HTTP Settings Configuration.
        /// </summary>
        [Input("backendHttpSettingsId")]
        public Input<string>? BackendHttpSettingsId { get; set; }

        [Input("backendHttpSettingsName")]
        public Input<string>? BackendHttpSettingsName { get; set; }

        /// <summary>
        /// The ID of the Rewrite Rule Set
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        /// <summary>
        /// The name of the Application Gateway. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        [Input("paths", required: true)]
        private InputList<string>? _paths;
        public InputList<string> Paths
        {
            get => _paths ?? (_paths = new InputList<string>());
            set => _paths = value;
        }

        /// <summary>
        /// The ID of the associated Redirect Configuration.
        /// </summary>
        [Input("redirectConfigurationId")]
        public Input<string>? RedirectConfigurationId { get; set; }

        [Input("redirectConfigurationName")]
        public Input<string>? RedirectConfigurationName { get; set; }

        /// <summary>
        /// The ID of the associated Rewrite Rule Set.
        /// </summary>
        [Input("rewriteRuleSetId")]
        public Input<string>? RewriteRuleSetId { get; set; }

        [Input("rewriteRuleSetName")]
        public Input<string>? RewriteRuleSetName { get; set; }

        public ApplicationGatewayUrlPathMapsPathRulesGetArgs()
        {
        }
    }

    public sealed class ApplicationGatewayWafConfigurationArgs : Pulumi.ResourceArgs
    {
        [Input("disabledRuleGroups")]
        private InputList<ApplicationGatewayWafConfigurationDisabledRuleGroupsArgs>? _disabledRuleGroups;
        public InputList<ApplicationGatewayWafConfigurationDisabledRuleGroupsArgs> DisabledRuleGroups
        {
            get => _disabledRuleGroups ?? (_disabledRuleGroups = new InputList<ApplicationGatewayWafConfigurationDisabledRuleGroupsArgs>());
            set => _disabledRuleGroups = value;
        }

        [Input("enabled", required: true)]
        public Input<bool> Enabled { get; set; } = null!;

        [Input("exclusions")]
        private InputList<ApplicationGatewayWafConfigurationExclusionsArgs>? _exclusions;
        public InputList<ApplicationGatewayWafConfigurationExclusionsArgs> Exclusions
        {
            get => _exclusions ?? (_exclusions = new InputList<ApplicationGatewayWafConfigurationExclusionsArgs>());
            set => _exclusions = value;
        }

        [Input("fileUploadLimitMb")]
        public Input<int>? FileUploadLimitMb { get; set; }

        [Input("firewallMode", required: true)]
        public Input<string> FirewallMode { get; set; } = null!;

        [Input("maxRequestBodySizeKb")]
        public Input<int>? MaxRequestBodySizeKb { get; set; }

        [Input("requestBodyCheck")]
        public Input<bool>? RequestBodyCheck { get; set; }

        [Input("ruleSetType")]
        public Input<string>? RuleSetType { get; set; }

        [Input("ruleSetVersion", required: true)]
        public Input<string> RuleSetVersion { get; set; } = null!;

        public ApplicationGatewayWafConfigurationArgs()
        {
        }
    }

    public sealed class ApplicationGatewayWafConfigurationDisabledRuleGroupsArgs : Pulumi.ResourceArgs
    {
        [Input("ruleGroupName", required: true)]
        public Input<string> RuleGroupName { get; set; } = null!;

        [Input("rules")]
        private InputList<int>? _rules;
        public InputList<int> Rules
        {
            get => _rules ?? (_rules = new InputList<int>());
            set => _rules = value;
        }

        public ApplicationGatewayWafConfigurationDisabledRuleGroupsArgs()
        {
        }
    }

    public sealed class ApplicationGatewayWafConfigurationDisabledRuleGroupsGetArgs : Pulumi.ResourceArgs
    {
        [Input("ruleGroupName", required: true)]
        public Input<string> RuleGroupName { get; set; } = null!;

        [Input("rules")]
        private InputList<int>? _rules;
        public InputList<int> Rules
        {
            get => _rules ?? (_rules = new InputList<int>());
            set => _rules = value;
        }

        public ApplicationGatewayWafConfigurationDisabledRuleGroupsGetArgs()
        {
        }
    }

    public sealed class ApplicationGatewayWafConfigurationExclusionsArgs : Pulumi.ResourceArgs
    {
        [Input("matchVariable", required: true)]
        public Input<string> MatchVariable { get; set; } = null!;

        [Input("selector")]
        public Input<string>? Selector { get; set; }

        [Input("selectorMatchOperator")]
        public Input<string>? SelectorMatchOperator { get; set; }

        public ApplicationGatewayWafConfigurationExclusionsArgs()
        {
        }
    }

    public sealed class ApplicationGatewayWafConfigurationExclusionsGetArgs : Pulumi.ResourceArgs
    {
        [Input("matchVariable", required: true)]
        public Input<string> MatchVariable { get; set; } = null!;

        [Input("selector")]
        public Input<string>? Selector { get; set; }

        [Input("selectorMatchOperator")]
        public Input<string>? SelectorMatchOperator { get; set; }

        public ApplicationGatewayWafConfigurationExclusionsGetArgs()
        {
        }
    }

    public sealed class ApplicationGatewayWafConfigurationGetArgs : Pulumi.ResourceArgs
    {
        [Input("disabledRuleGroups")]
        private InputList<ApplicationGatewayWafConfigurationDisabledRuleGroupsGetArgs>? _disabledRuleGroups;
        public InputList<ApplicationGatewayWafConfigurationDisabledRuleGroupsGetArgs> DisabledRuleGroups
        {
            get => _disabledRuleGroups ?? (_disabledRuleGroups = new InputList<ApplicationGatewayWafConfigurationDisabledRuleGroupsGetArgs>());
            set => _disabledRuleGroups = value;
        }

        [Input("enabled", required: true)]
        public Input<bool> Enabled { get; set; } = null!;

        [Input("exclusions")]
        private InputList<ApplicationGatewayWafConfigurationExclusionsGetArgs>? _exclusions;
        public InputList<ApplicationGatewayWafConfigurationExclusionsGetArgs> Exclusions
        {
            get => _exclusions ?? (_exclusions = new InputList<ApplicationGatewayWafConfigurationExclusionsGetArgs>());
            set => _exclusions = value;
        }

        [Input("fileUploadLimitMb")]
        public Input<int>? FileUploadLimitMb { get; set; }

        [Input("firewallMode", required: true)]
        public Input<string> FirewallMode { get; set; } = null!;

        [Input("maxRequestBodySizeKb")]
        public Input<int>? MaxRequestBodySizeKb { get; set; }

        [Input("requestBodyCheck")]
        public Input<bool>? RequestBodyCheck { get; set; }

        [Input("ruleSetType")]
        public Input<string>? RuleSetType { get; set; }

        [Input("ruleSetVersion", required: true)]
        public Input<string> RuleSetVersion { get; set; } = null!;

        public ApplicationGatewayWafConfigurationGetArgs()
        {
        }
    }
    }

    namespace Outputs
    {

    [OutputType]
    public sealed class ApplicationGatewayAuthenticationCertificates
    {
        public readonly string Data;
        /// <summary>
        /// The ID of the Rewrite Rule Set
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The name of the Application Gateway. Changing this forces a new resource to be created.
        /// </summary>
        public readonly string Name;

        [OutputConstructor]
        private ApplicationGatewayAuthenticationCertificates(
            string data,
            string id,
            string name)
        {
            Data = data;
            Id = id;
            Name = name;
        }
    }

    [OutputType]
    public sealed class ApplicationGatewayAutoscaleConfiguration
    {
        public readonly int? MaxCapacity;
        public readonly int MinCapacity;

        [OutputConstructor]
        private ApplicationGatewayAutoscaleConfiguration(
            int? maxCapacity,
            int minCapacity)
        {
            MaxCapacity = maxCapacity;
            MinCapacity = minCapacity;
        }
    }

    [OutputType]
    public sealed class ApplicationGatewayBackendAddressPools
    {
        public readonly ImmutableArray<string> Fqdns;
        /// <summary>
        /// The ID of the Rewrite Rule Set
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<string> IpAddresses;
        /// <summary>
        /// The name of the Application Gateway. Changing this forces a new resource to be created.
        /// </summary>
        public readonly string Name;

        [OutputConstructor]
        private ApplicationGatewayBackendAddressPools(
            ImmutableArray<string> fqdns,
            string id,
            ImmutableArray<string> ipAddresses,
            string name)
        {
            Fqdns = fqdns;
            Id = id;
            IpAddresses = ipAddresses;
            Name = name;
        }
    }

    [OutputType]
    public sealed class ApplicationGatewayBackendHttpSettings
    {
        public readonly string? AffinityCookieName;
        /// <summary>
        /// One or more `authentication_certificate` blocks as defined below.
        /// </summary>
        public readonly ImmutableArray<ApplicationGatewayBackendHttpSettingsAuthenticationCertificates> AuthenticationCertificates;
        public readonly ApplicationGatewayBackendHttpSettingsConnectionDraining? ConnectionDraining;
        public readonly string CookieBasedAffinity;
        public readonly string? HostName;
        /// <summary>
        /// The ID of the Rewrite Rule Set
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The name of the Application Gateway. Changing this forces a new resource to be created.
        /// </summary>
        public readonly string Name;
        public readonly string? Path;
        public readonly bool? PickHostNameFromBackendAddress;
        public readonly int Port;
        /// <summary>
        /// The ID of the associated Probe.
        /// </summary>
        public readonly string ProbeId;
        public readonly string? ProbeName;
        public readonly string Protocol;
        public readonly int? RequestTimeout;
        public readonly ImmutableArray<string> TrustedRootCertificateNames;

        [OutputConstructor]
        private ApplicationGatewayBackendHttpSettings(
            string? affinityCookieName,
            ImmutableArray<ApplicationGatewayBackendHttpSettingsAuthenticationCertificates> authenticationCertificates,
            ApplicationGatewayBackendHttpSettingsConnectionDraining? connectionDraining,
            string cookieBasedAffinity,
            string? hostName,
            string id,
            string name,
            string? path,
            bool? pickHostNameFromBackendAddress,
            int port,
            string probeId,
            string? probeName,
            string protocol,
            int? requestTimeout,
            ImmutableArray<string> trustedRootCertificateNames)
        {
            AffinityCookieName = affinityCookieName;
            AuthenticationCertificates = authenticationCertificates;
            ConnectionDraining = connectionDraining;
            CookieBasedAffinity = cookieBasedAffinity;
            HostName = hostName;
            Id = id;
            Name = name;
            Path = path;
            PickHostNameFromBackendAddress = pickHostNameFromBackendAddress;
            Port = port;
            ProbeId = probeId;
            ProbeName = probeName;
            Protocol = protocol;
            RequestTimeout = requestTimeout;
            TrustedRootCertificateNames = trustedRootCertificateNames;
        }
    }

    [OutputType]
    public sealed class ApplicationGatewayBackendHttpSettingsAuthenticationCertificates
    {
        /// <summary>
        /// The ID of the Rewrite Rule Set
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The name of the Application Gateway. Changing this forces a new resource to be created.
        /// </summary>
        public readonly string Name;

        [OutputConstructor]
        private ApplicationGatewayBackendHttpSettingsAuthenticationCertificates(
            string id,
            string name)
        {
            Id = id;
            Name = name;
        }
    }

    [OutputType]
    public sealed class ApplicationGatewayBackendHttpSettingsConnectionDraining
    {
        public readonly int DrainTimeoutSec;
        public readonly bool Enabled;

        [OutputConstructor]
        private ApplicationGatewayBackendHttpSettingsConnectionDraining(
            int drainTimeoutSec,
            bool enabled)
        {
            DrainTimeoutSec = drainTimeoutSec;
            Enabled = enabled;
        }
    }

    [OutputType]
    public sealed class ApplicationGatewayCustomErrorConfigurations
    {
        public readonly string CustomErrorPageUrl;
        /// <summary>
        /// The ID of the Rewrite Rule Set
        /// </summary>
        public readonly string Id;
        public readonly string StatusCode;

        [OutputConstructor]
        private ApplicationGatewayCustomErrorConfigurations(
            string customErrorPageUrl,
            string id,
            string statusCode)
        {
            CustomErrorPageUrl = customErrorPageUrl;
            Id = id;
            StatusCode = statusCode;
        }
    }

    [OutputType]
    public sealed class ApplicationGatewayFrontendIpConfigurations
    {
        /// <summary>
        /// The ID of the Rewrite Rule Set
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The name of the Application Gateway. Changing this forces a new resource to be created.
        /// </summary>
        public readonly string Name;
        public readonly string PrivateIpAddress;
        public readonly string PrivateIpAddressAllocation;
        public readonly string PublicIpAddressId;
        public readonly string SubnetId;

        [OutputConstructor]
        private ApplicationGatewayFrontendIpConfigurations(
            string id,
            string name,
            string privateIpAddress,
            string privateIpAddressAllocation,
            string publicIpAddressId,
            string subnetId)
        {
            Id = id;
            Name = name;
            PrivateIpAddress = privateIpAddress;
            PrivateIpAddressAllocation = privateIpAddressAllocation;
            PublicIpAddressId = publicIpAddressId;
            SubnetId = subnetId;
        }
    }

    [OutputType]
    public sealed class ApplicationGatewayFrontendPorts
    {
        /// <summary>
        /// The ID of the Rewrite Rule Set
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The name of the Application Gateway. Changing this forces a new resource to be created.
        /// </summary>
        public readonly string Name;
        public readonly int Port;

        [OutputConstructor]
        private ApplicationGatewayFrontendPorts(
            string id,
            string name,
            int port)
        {
            Id = id;
            Name = name;
            Port = port;
        }
    }

    [OutputType]
    public sealed class ApplicationGatewayGatewayIpConfigurations
    {
        /// <summary>
        /// The ID of the Rewrite Rule Set
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The name of the Application Gateway. Changing this forces a new resource to be created.
        /// </summary>
        public readonly string Name;
        public readonly string SubnetId;

        [OutputConstructor]
        private ApplicationGatewayGatewayIpConfigurations(
            string id,
            string name,
            string subnetId)
        {
            Id = id;
            Name = name;
            SubnetId = subnetId;
        }
    }

    [OutputType]
    public sealed class ApplicationGatewayHttpListeners
    {
        /// <summary>
        /// One or more `custom_error_configuration` blocks as defined below.
        /// </summary>
        public readonly ImmutableArray<ApplicationGatewayHttpListenersCustomErrorConfigurations> CustomErrorConfigurations;
        /// <summary>
        /// The ID of the associated Frontend Configuration.
        /// </summary>
        public readonly string FrontendIpConfigurationId;
        public readonly string FrontendIpConfigurationName;
        /// <summary>
        /// The ID of the associated Frontend Port.
        /// </summary>
        public readonly string FrontendPortId;
        public readonly string FrontendPortName;
        public readonly string? HostName;
        /// <summary>
        /// The ID of the Rewrite Rule Set
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The name of the Application Gateway. Changing this forces a new resource to be created.
        /// </summary>
        public readonly string Name;
        public readonly string Protocol;
        public readonly bool? RequireSni;
        /// <summary>
        /// The ID of the associated SSL Certificate.
        /// </summary>
        public readonly string SslCertificateId;
        public readonly string? SslCertificateName;

        [OutputConstructor]
        private ApplicationGatewayHttpListeners(
            ImmutableArray<ApplicationGatewayHttpListenersCustomErrorConfigurations> customErrorConfigurations,
            string frontendIpConfigurationId,
            string frontendIpConfigurationName,
            string frontendPortId,
            string frontendPortName,
            string? hostName,
            string id,
            string name,
            string protocol,
            bool? requireSni,
            string sslCertificateId,
            string? sslCertificateName)
        {
            CustomErrorConfigurations = customErrorConfigurations;
            FrontendIpConfigurationId = frontendIpConfigurationId;
            FrontendIpConfigurationName = frontendIpConfigurationName;
            FrontendPortId = frontendPortId;
            FrontendPortName = frontendPortName;
            HostName = hostName;
            Id = id;
            Name = name;
            Protocol = protocol;
            RequireSni = requireSni;
            SslCertificateId = sslCertificateId;
            SslCertificateName = sslCertificateName;
        }
    }

    [OutputType]
    public sealed class ApplicationGatewayHttpListenersCustomErrorConfigurations
    {
        public readonly string CustomErrorPageUrl;
        /// <summary>
        /// The ID of the Rewrite Rule Set
        /// </summary>
        public readonly string Id;
        public readonly string StatusCode;

        [OutputConstructor]
        private ApplicationGatewayHttpListenersCustomErrorConfigurations(
            string customErrorPageUrl,
            string id,
            string statusCode)
        {
            CustomErrorPageUrl = customErrorPageUrl;
            Id = id;
            StatusCode = statusCode;
        }
    }

    [OutputType]
    public sealed class ApplicationGatewayIdentity
    {
        public readonly string IdentityIds;
        public readonly string? Type;

        [OutputConstructor]
        private ApplicationGatewayIdentity(
            string identityIds,
            string? type)
        {
            IdentityIds = identityIds;
            Type = type;
        }
    }

    [OutputType]
    public sealed class ApplicationGatewayProbes
    {
        public readonly string? Host;
        /// <summary>
        /// The ID of the Rewrite Rule Set
        /// </summary>
        public readonly string Id;
        public readonly int Interval;
        public readonly ApplicationGatewayProbesMatch Match;
        public readonly int? MinimumServers;
        /// <summary>
        /// The name of the Application Gateway. Changing this forces a new resource to be created.
        /// </summary>
        public readonly string Name;
        public readonly string Path;
        public readonly bool? PickHostNameFromBackendHttpSettings;
        public readonly string Protocol;
        public readonly int Timeout;
        public readonly int UnhealthyThreshold;

        [OutputConstructor]
        private ApplicationGatewayProbes(
            string? host,
            string id,
            int interval,
            ApplicationGatewayProbesMatch match,
            int? minimumServers,
            string name,
            string path,
            bool? pickHostNameFromBackendHttpSettings,
            string protocol,
            int timeout,
            int unhealthyThreshold)
        {
            Host = host;
            Id = id;
            Interval = interval;
            Match = match;
            MinimumServers = minimumServers;
            Name = name;
            Path = path;
            PickHostNameFromBackendHttpSettings = pickHostNameFromBackendHttpSettings;
            Protocol = protocol;
            Timeout = timeout;
            UnhealthyThreshold = unhealthyThreshold;
        }
    }

    [OutputType]
    public sealed class ApplicationGatewayProbesMatch
    {
        public readonly string? Body;
        public readonly ImmutableArray<string> StatusCodes;

        [OutputConstructor]
        private ApplicationGatewayProbesMatch(
            string? body,
            ImmutableArray<string> statusCodes)
        {
            Body = body;
            StatusCodes = statusCodes;
        }
    }

    [OutputType]
    public sealed class ApplicationGatewayRedirectConfigurations
    {
        /// <summary>
        /// The ID of the Rewrite Rule Set
        /// </summary>
        public readonly string Id;
        public readonly bool? IncludePath;
        public readonly bool? IncludeQueryString;
        /// <summary>
        /// The name of the Application Gateway. Changing this forces a new resource to be created.
        /// </summary>
        public readonly string Name;
        public readonly string RedirectType;
        public readonly string TargetListenerId;
        public readonly string? TargetListenerName;
        public readonly string? TargetUrl;

        [OutputConstructor]
        private ApplicationGatewayRedirectConfigurations(
            string id,
            bool? includePath,
            bool? includeQueryString,
            string name,
            string redirectType,
            string targetListenerId,
            string? targetListenerName,
            string? targetUrl)
        {
            Id = id;
            IncludePath = includePath;
            IncludeQueryString = includeQueryString;
            Name = name;
            RedirectType = redirectType;
            TargetListenerId = targetListenerId;
            TargetListenerName = targetListenerName;
            TargetUrl = targetUrl;
        }
    }

    [OutputType]
    public sealed class ApplicationGatewayRequestRoutingRules
    {
        /// <summary>
        /// The ID of the associated Backend Address Pool.
        /// </summary>
        public readonly string BackendAddressPoolId;
        public readonly string? BackendAddressPoolName;
        /// <summary>
        /// The ID of the associated Backend HTTP Settings Configuration.
        /// </summary>
        public readonly string BackendHttpSettingsId;
        public readonly string? BackendHttpSettingsName;
        /// <summary>
        /// The ID of the associated HTTP Listener.
        /// </summary>
        public readonly string HttpListenerId;
        public readonly string HttpListenerName;
        /// <summary>
        /// The ID of the Rewrite Rule Set
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The name of the Application Gateway. Changing this forces a new resource to be created.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The ID of the associated Redirect Configuration.
        /// </summary>
        public readonly string RedirectConfigurationId;
        public readonly string? RedirectConfigurationName;
        /// <summary>
        /// The ID of the associated Rewrite Rule Set.
        /// </summary>
        public readonly string RewriteRuleSetId;
        public readonly string? RewriteRuleSetName;
        public readonly string RuleType;
        /// <summary>
        /// The ID of the associated URL Path Map.
        /// </summary>
        public readonly string UrlPathMapId;
        public readonly string? UrlPathMapName;

        [OutputConstructor]
        private ApplicationGatewayRequestRoutingRules(
            string backendAddressPoolId,
            string? backendAddressPoolName,
            string backendHttpSettingsId,
            string? backendHttpSettingsName,
            string httpListenerId,
            string httpListenerName,
            string id,
            string name,
            string redirectConfigurationId,
            string? redirectConfigurationName,
            string rewriteRuleSetId,
            string? rewriteRuleSetName,
            string ruleType,
            string urlPathMapId,
            string? urlPathMapName)
        {
            BackendAddressPoolId = backendAddressPoolId;
            BackendAddressPoolName = backendAddressPoolName;
            BackendHttpSettingsId = backendHttpSettingsId;
            BackendHttpSettingsName = backendHttpSettingsName;
            HttpListenerId = httpListenerId;
            HttpListenerName = httpListenerName;
            Id = id;
            Name = name;
            RedirectConfigurationId = redirectConfigurationId;
            RedirectConfigurationName = redirectConfigurationName;
            RewriteRuleSetId = rewriteRuleSetId;
            RewriteRuleSetName = rewriteRuleSetName;
            RuleType = ruleType;
            UrlPathMapId = urlPathMapId;
            UrlPathMapName = urlPathMapName;
        }
    }

    [OutputType]
    public sealed class ApplicationGatewayRewriteRuleSets
    {
        /// <summary>
        /// The ID of the Rewrite Rule Set
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The name of the Application Gateway. Changing this forces a new resource to be created.
        /// </summary>
        public readonly string Name;
        public readonly ImmutableArray<ApplicationGatewayRewriteRuleSetsRewriteRules> RewriteRules;

        [OutputConstructor]
        private ApplicationGatewayRewriteRuleSets(
            string id,
            string name,
            ImmutableArray<ApplicationGatewayRewriteRuleSetsRewriteRules> rewriteRules)
        {
            Id = id;
            Name = name;
            RewriteRules = rewriteRules;
        }
    }

    [OutputType]
    public sealed class ApplicationGatewayRewriteRuleSetsRewriteRules
    {
        public readonly ImmutableArray<ApplicationGatewayRewriteRuleSetsRewriteRulesConditions> Conditions;
        /// <summary>
        /// The name of the Application Gateway. Changing this forces a new resource to be created.
        /// </summary>
        public readonly string Name;
        public readonly ImmutableArray<ApplicationGatewayRewriteRuleSetsRewriteRulesRequestHeaderConfigurations> RequestHeaderConfigurations;
        public readonly ImmutableArray<ApplicationGatewayRewriteRuleSetsRewriteRulesResponseHeaderConfigurations> ResponseHeaderConfigurations;
        public readonly int RuleSequence;

        [OutputConstructor]
        private ApplicationGatewayRewriteRuleSetsRewriteRules(
            ImmutableArray<ApplicationGatewayRewriteRuleSetsRewriteRulesConditions> conditions,
            string name,
            ImmutableArray<ApplicationGatewayRewriteRuleSetsRewriteRulesRequestHeaderConfigurations> requestHeaderConfigurations,
            ImmutableArray<ApplicationGatewayRewriteRuleSetsRewriteRulesResponseHeaderConfigurations> responseHeaderConfigurations,
            int ruleSequence)
        {
            Conditions = conditions;
            Name = name;
            RequestHeaderConfigurations = requestHeaderConfigurations;
            ResponseHeaderConfigurations = responseHeaderConfigurations;
            RuleSequence = ruleSequence;
        }
    }

    [OutputType]
    public sealed class ApplicationGatewayRewriteRuleSetsRewriteRulesConditions
    {
        public readonly bool? IgnoreCase;
        public readonly bool? Negate;
        public readonly string Pattern;
        public readonly string Variable;

        [OutputConstructor]
        private ApplicationGatewayRewriteRuleSetsRewriteRulesConditions(
            bool? ignoreCase,
            bool? negate,
            string pattern,
            string variable)
        {
            IgnoreCase = ignoreCase;
            Negate = negate;
            Pattern = pattern;
            Variable = variable;
        }
    }

    [OutputType]
    public sealed class ApplicationGatewayRewriteRuleSetsRewriteRulesRequestHeaderConfigurations
    {
        public readonly string HeaderName;
        public readonly string HeaderValue;

        [OutputConstructor]
        private ApplicationGatewayRewriteRuleSetsRewriteRulesRequestHeaderConfigurations(
            string headerName,
            string headerValue)
        {
            HeaderName = headerName;
            HeaderValue = headerValue;
        }
    }

    [OutputType]
    public sealed class ApplicationGatewayRewriteRuleSetsRewriteRulesResponseHeaderConfigurations
    {
        public readonly string HeaderName;
        public readonly string HeaderValue;

        [OutputConstructor]
        private ApplicationGatewayRewriteRuleSetsRewriteRulesResponseHeaderConfigurations(
            string headerName,
            string headerValue)
        {
            HeaderName = headerName;
            HeaderValue = headerValue;
        }
    }

    [OutputType]
    public sealed class ApplicationGatewaySku
    {
        public readonly int? Capacity;
        /// <summary>
        /// The name of the Application Gateway. Changing this forces a new resource to be created.
        /// </summary>
        public readonly string Name;
        public readonly string Tier;

        [OutputConstructor]
        private ApplicationGatewaySku(
            int? capacity,
            string name,
            string tier)
        {
            Capacity = capacity;
            Name = name;
            Tier = tier;
        }
    }

    [OutputType]
    public sealed class ApplicationGatewaySslCertificates
    {
        public readonly string? Data;
        /// <summary>
        /// The ID of the Rewrite Rule Set
        /// </summary>
        public readonly string Id;
        public readonly string? KeyVaultSecretId;
        /// <summary>
        /// The name of the Application Gateway. Changing this forces a new resource to be created.
        /// </summary>
        public readonly string Name;
        public readonly string? Password;
        /// <summary>
        /// The Public Certificate Data associated with the SSL Certificate.
        /// </summary>
        public readonly string PublicCertData;

        [OutputConstructor]
        private ApplicationGatewaySslCertificates(
            string? data,
            string id,
            string? keyVaultSecretId,
            string name,
            string? password,
            string publicCertData)
        {
            Data = data;
            Id = id;
            KeyVaultSecretId = keyVaultSecretId;
            Name = name;
            Password = password;
            PublicCertData = publicCertData;
        }
    }

    [OutputType]
    public sealed class ApplicationGatewaySslPolicies
    {
        public readonly ImmutableArray<string> CipherSuites;
        public readonly ImmutableArray<string> DisabledProtocols;
        public readonly string? MinProtocolVersion;
        public readonly string? PolicyName;
        public readonly string? PolicyType;

        [OutputConstructor]
        private ApplicationGatewaySslPolicies(
            ImmutableArray<string> cipherSuites,
            ImmutableArray<string> disabledProtocols,
            string? minProtocolVersion,
            string? policyName,
            string? policyType)
        {
            CipherSuites = cipherSuites;
            DisabledProtocols = disabledProtocols;
            MinProtocolVersion = minProtocolVersion;
            PolicyName = policyName;
            PolicyType = policyType;
        }
    }

    [OutputType]
    public sealed class ApplicationGatewayTrustedRootCertificates
    {
        public readonly string Data;
        /// <summary>
        /// The ID of the Rewrite Rule Set
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The name of the Application Gateway. Changing this forces a new resource to be created.
        /// </summary>
        public readonly string Name;

        [OutputConstructor]
        private ApplicationGatewayTrustedRootCertificates(
            string data,
            string id,
            string name)
        {
            Data = data;
            Id = id;
            Name = name;
        }
    }

    [OutputType]
    public sealed class ApplicationGatewayUrlPathMaps
    {
        /// <summary>
        /// The ID of the Default Backend Address Pool.
        /// </summary>
        public readonly string DefaultBackendAddressPoolId;
        public readonly string? DefaultBackendAddressPoolName;
        /// <summary>
        /// The ID of the Default Backend HTTP Settings Collection.
        /// </summary>
        public readonly string DefaultBackendHttpSettingsId;
        public readonly string? DefaultBackendHttpSettingsName;
        /// <summary>
        /// The ID of the Default Redirect Configuration.
        /// </summary>
        public readonly string DefaultRedirectConfigurationId;
        public readonly string? DefaultRedirectConfigurationName;
        public readonly string DefaultRewriteRuleSetId;
        public readonly string? DefaultRewriteRuleSetName;
        /// <summary>
        /// The ID of the Rewrite Rule Set
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The name of the Application Gateway. Changing this forces a new resource to be created.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// A list of `path_rule` blocks as defined above.
        /// </summary>
        public readonly ImmutableArray<ApplicationGatewayUrlPathMapsPathRules> PathRules;

        [OutputConstructor]
        private ApplicationGatewayUrlPathMaps(
            string defaultBackendAddressPoolId,
            string? defaultBackendAddressPoolName,
            string defaultBackendHttpSettingsId,
            string? defaultBackendHttpSettingsName,
            string defaultRedirectConfigurationId,
            string? defaultRedirectConfigurationName,
            string defaultRewriteRuleSetId,
            string? defaultRewriteRuleSetName,
            string id,
            string name,
            ImmutableArray<ApplicationGatewayUrlPathMapsPathRules> pathRules)
        {
            DefaultBackendAddressPoolId = defaultBackendAddressPoolId;
            DefaultBackendAddressPoolName = defaultBackendAddressPoolName;
            DefaultBackendHttpSettingsId = defaultBackendHttpSettingsId;
            DefaultBackendHttpSettingsName = defaultBackendHttpSettingsName;
            DefaultRedirectConfigurationId = defaultRedirectConfigurationId;
            DefaultRedirectConfigurationName = defaultRedirectConfigurationName;
            DefaultRewriteRuleSetId = defaultRewriteRuleSetId;
            DefaultRewriteRuleSetName = defaultRewriteRuleSetName;
            Id = id;
            Name = name;
            PathRules = pathRules;
        }
    }

    [OutputType]
    public sealed class ApplicationGatewayUrlPathMapsPathRules
    {
        /// <summary>
        /// The ID of the associated Backend Address Pool.
        /// </summary>
        public readonly string BackendAddressPoolId;
        public readonly string? BackendAddressPoolName;
        /// <summary>
        /// The ID of the associated Backend HTTP Settings Configuration.
        /// </summary>
        public readonly string BackendHttpSettingsId;
        public readonly string? BackendHttpSettingsName;
        /// <summary>
        /// The ID of the Rewrite Rule Set
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The name of the Application Gateway. Changing this forces a new resource to be created.
        /// </summary>
        public readonly string Name;
        public readonly ImmutableArray<string> Paths;
        /// <summary>
        /// The ID of the associated Redirect Configuration.
        /// </summary>
        public readonly string RedirectConfigurationId;
        public readonly string? RedirectConfigurationName;
        /// <summary>
        /// The ID of the associated Rewrite Rule Set.
        /// </summary>
        public readonly string RewriteRuleSetId;
        public readonly string? RewriteRuleSetName;

        [OutputConstructor]
        private ApplicationGatewayUrlPathMapsPathRules(
            string backendAddressPoolId,
            string? backendAddressPoolName,
            string backendHttpSettingsId,
            string? backendHttpSettingsName,
            string id,
            string name,
            ImmutableArray<string> paths,
            string redirectConfigurationId,
            string? redirectConfigurationName,
            string rewriteRuleSetId,
            string? rewriteRuleSetName)
        {
            BackendAddressPoolId = backendAddressPoolId;
            BackendAddressPoolName = backendAddressPoolName;
            BackendHttpSettingsId = backendHttpSettingsId;
            BackendHttpSettingsName = backendHttpSettingsName;
            Id = id;
            Name = name;
            Paths = paths;
            RedirectConfigurationId = redirectConfigurationId;
            RedirectConfigurationName = redirectConfigurationName;
            RewriteRuleSetId = rewriteRuleSetId;
            RewriteRuleSetName = rewriteRuleSetName;
        }
    }

    [OutputType]
    public sealed class ApplicationGatewayWafConfiguration
    {
        public readonly ImmutableArray<ApplicationGatewayWafConfigurationDisabledRuleGroups> DisabledRuleGroups;
        public readonly bool Enabled;
        public readonly ImmutableArray<ApplicationGatewayWafConfigurationExclusions> Exclusions;
        public readonly int? FileUploadLimitMb;
        public readonly string FirewallMode;
        public readonly int? MaxRequestBodySizeKb;
        public readonly bool? RequestBodyCheck;
        public readonly string? RuleSetType;
        public readonly string RuleSetVersion;

        [OutputConstructor]
        private ApplicationGatewayWafConfiguration(
            ImmutableArray<ApplicationGatewayWafConfigurationDisabledRuleGroups> disabledRuleGroups,
            bool enabled,
            ImmutableArray<ApplicationGatewayWafConfigurationExclusions> exclusions,
            int? fileUploadLimitMb,
            string firewallMode,
            int? maxRequestBodySizeKb,
            bool? requestBodyCheck,
            string? ruleSetType,
            string ruleSetVersion)
        {
            DisabledRuleGroups = disabledRuleGroups;
            Enabled = enabled;
            Exclusions = exclusions;
            FileUploadLimitMb = fileUploadLimitMb;
            FirewallMode = firewallMode;
            MaxRequestBodySizeKb = maxRequestBodySizeKb;
            RequestBodyCheck = requestBodyCheck;
            RuleSetType = ruleSetType;
            RuleSetVersion = ruleSetVersion;
        }
    }

    [OutputType]
    public sealed class ApplicationGatewayWafConfigurationDisabledRuleGroups
    {
        public readonly string RuleGroupName;
        public readonly ImmutableArray<int> Rules;

        [OutputConstructor]
        private ApplicationGatewayWafConfigurationDisabledRuleGroups(
            string ruleGroupName,
            ImmutableArray<int> rules)
        {
            RuleGroupName = ruleGroupName;
            Rules = rules;
        }
    }

    [OutputType]
    public sealed class ApplicationGatewayWafConfigurationExclusions
    {
        public readonly string MatchVariable;
        public readonly string? Selector;
        public readonly string? SelectorMatchOperator;

        [OutputConstructor]
        private ApplicationGatewayWafConfigurationExclusions(
            string matchVariable,
            string? selector,
            string? selectorMatchOperator)
        {
            MatchVariable = matchVariable;
            Selector = selector;
            SelectorMatchOperator = selectorMatchOperator;
        }
    }
    }
}
