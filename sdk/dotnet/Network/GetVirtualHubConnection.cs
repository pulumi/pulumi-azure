// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Network
{
    public static class GetVirtualHubConnection
    {
        /// <summary>
        /// Uses this data source to access information about an existing Virtual Hub Connection.
        /// </summary>
        public static Task<GetVirtualHubConnectionResult> InvokeAsync(GetVirtualHubConnectionArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetVirtualHubConnectionResult>("azure:network/getVirtualHubConnection:getVirtualHubConnection", args ?? new GetVirtualHubConnectionArgs(), options.WithDefaults());

        /// <summary>
        /// Uses this data source to access information about an existing Virtual Hub Connection.
        /// </summary>
        public static Output<GetVirtualHubConnectionResult> Invoke(GetVirtualHubConnectionInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetVirtualHubConnectionResult>("azure:network/getVirtualHubConnection:getVirtualHubConnection", args ?? new GetVirtualHubConnectionInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetVirtualHubConnectionArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the Connection which should be retrieved.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        /// <summary>
        /// The Name of the Resource Group where the Virtual Hub Connection exists.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the Virtual Hub where this Connection exists.
        /// </summary>
        [Input("virtualHubName", required: true)]
        public string VirtualHubName { get; set; } = null!;

        public GetVirtualHubConnectionArgs()
        {
        }
        public static new GetVirtualHubConnectionArgs Empty => new GetVirtualHubConnectionArgs();
    }

    public sealed class GetVirtualHubConnectionInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the Connection which should be retrieved.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// The Name of the Resource Group where the Virtual Hub Connection exists.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the Virtual Hub where this Connection exists.
        /// </summary>
        [Input("virtualHubName", required: true)]
        public Input<string> VirtualHubName { get; set; } = null!;

        public GetVirtualHubConnectionInvokeArgs()
        {
        }
        public static new GetVirtualHubConnectionInvokeArgs Empty => new GetVirtualHubConnectionInvokeArgs();
    }


    [OutputType]
    public sealed class GetVirtualHubConnectionResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Whether Internet Security is enabled to secure internet traffic on this connection
        /// </summary>
        public readonly bool InternetSecurityEnabled;
        /// <summary>
        /// The name which is used for this Static Route.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The ID of the Virtual Network which the Virtual Hub is connected
        /// </summary>
        public readonly string RemoteVirtualNetworkId;
        public readonly string ResourceGroupName;
        /// <summary>
        /// A `routing` block as defined below.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetVirtualHubConnectionRoutingResult> Routings;
        /// <summary>
        /// The ID of the Virtual Hub within which this connection is created
        /// </summary>
        public readonly string VirtualHubId;
        public readonly string VirtualHubName;

        [OutputConstructor]
        private GetVirtualHubConnectionResult(
            string id,

            bool internetSecurityEnabled,

            string name,

            string remoteVirtualNetworkId,

            string resourceGroupName,

            ImmutableArray<Outputs.GetVirtualHubConnectionRoutingResult> routings,

            string virtualHubId,

            string virtualHubName)
        {
            Id = id;
            InternetSecurityEnabled = internetSecurityEnabled;
            Name = name;
            RemoteVirtualNetworkId = remoteVirtualNetworkId;
            ResourceGroupName = resourceGroupName;
            Routings = routings;
            VirtualHubId = virtualHubId;
            VirtualHubName = virtualHubName;
        }
    }
}
