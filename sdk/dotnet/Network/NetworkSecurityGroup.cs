// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Network
{
    /// <summary>
    /// Manages a network security group that contains a list of network security rules.  Network security groups enable inbound or outbound traffic to be enabled or denied.
    /// 
    /// &gt; **NOTE on Network Security Groups and Network Security Rules:** This provider currently
    /// provides both a standalone Network Security Rule resource, and allows for Network Security Rules to be defined in-line within the Network Security Group resource.
    /// At this time you cannot use a Network Security Group with in-line Network Security Rules in conjunction with any Network Security Rule resources. Doing so will cause a conflict of rule settings and will overwrite rules.
    /// 
    /// &gt; This content is derived from https://github.com/terraform-providers/terraform-provider-azurerm/blob/master/website/docs/r/network_security_group.html.markdown.
    /// </summary>
    public partial class NetworkSecurityGroup : Pulumi.CustomResource
    {
        /// <summary>
        /// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
        /// </summary>
        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// The name of the security rule.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The name of the resource group in which to create the network security group. Changing this forces a new resource to be created.
        /// </summary>
        [Output("resourceGroupName")]
        public Output<string> ResourceGroupName { get; private set; } = null!;

        /// <summary>
        /// A list of objects representing security rules, as defined below.
        /// </summary>
        [Output("securityRules")]
        public Output<ImmutableArray<Outputs.NetworkSecurityGroupSecurityRules>> SecurityRules { get; private set; } = null!;

        /// <summary>
        /// A mapping of tags to assign to the resource.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;


        /// <summary>
        /// Create a NetworkSecurityGroup resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public NetworkSecurityGroup(string name, NetworkSecurityGroupArgs args, CustomResourceOptions? options = null)
            : base("azure:network/networkSecurityGroup:NetworkSecurityGroup", name, args ?? ResourceArgs.Empty, MakeResourceOptions(options, ""))
        {
        }

        private NetworkSecurityGroup(string name, Input<string> id, NetworkSecurityGroupState? state = null, CustomResourceOptions? options = null)
            : base("azure:network/networkSecurityGroup:NetworkSecurityGroup", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing NetworkSecurityGroup resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static NetworkSecurityGroup Get(string name, Input<string> id, NetworkSecurityGroupState? state = null, CustomResourceOptions? options = null)
        {
            return new NetworkSecurityGroup(name, id, state, options);
        }
    }

    public sealed class NetworkSecurityGroupArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// The name of the security rule.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The name of the resource group in which to create the network security group. Changing this forces a new resource to be created.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        [Input("securityRules")]
        private InputList<Inputs.NetworkSecurityGroupSecurityRulesArgs>? _securityRules;

        /// <summary>
        /// A list of objects representing security rules, as defined below.
        /// </summary>
        public InputList<Inputs.NetworkSecurityGroupSecurityRulesArgs> SecurityRules
        {
            get => _securityRules ?? (_securityRules = new InputList<Inputs.NetworkSecurityGroupSecurityRulesArgs>());
            set => _securityRules = value;
        }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// A mapping of tags to assign to the resource.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public NetworkSecurityGroupArgs()
        {
        }
    }

    public sealed class NetworkSecurityGroupState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// The name of the security rule.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The name of the resource group in which to create the network security group. Changing this forces a new resource to be created.
        /// </summary>
        [Input("resourceGroupName")]
        public Input<string>? ResourceGroupName { get; set; }

        [Input("securityRules")]
        private InputList<Inputs.NetworkSecurityGroupSecurityRulesGetArgs>? _securityRules;

        /// <summary>
        /// A list of objects representing security rules, as defined below.
        /// </summary>
        public InputList<Inputs.NetworkSecurityGroupSecurityRulesGetArgs> SecurityRules
        {
            get => _securityRules ?? (_securityRules = new InputList<Inputs.NetworkSecurityGroupSecurityRulesGetArgs>());
            set => _securityRules = value;
        }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// A mapping of tags to assign to the resource.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public NetworkSecurityGroupState()
        {
        }
    }

    namespace Inputs
    {

    public sealed class NetworkSecurityGroupSecurityRulesArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies whether network traffic is allowed or denied. Possible values are `Allow` and `Deny`.
        /// </summary>
        [Input("access", required: true)]
        public Input<string> Access { get; set; } = null!;

        /// <summary>
        /// A description for this rule. Restricted to 140 characters.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// CIDR or destination IP range or * to match any IP. Tags such as ‘VirtualNetwork’, ‘AzureLoadBalancer’ and ‘Internet’ can also be used. This is required if `destination_address_prefixes` is not specified.
        /// </summary>
        [Input("destinationAddressPrefix")]
        public Input<string>? DestinationAddressPrefix { get; set; }

        [Input("destinationAddressPrefixes")]
        private InputList<string>? _destinationAddressPrefixes;

        /// <summary>
        /// List of destination address prefixes. Tags may not be used. This is required if `destination_address_prefix` is not specified.
        /// </summary>
        public InputList<string> DestinationAddressPrefixes
        {
            get => _destinationAddressPrefixes ?? (_destinationAddressPrefixes = new InputList<string>());
            set => _destinationAddressPrefixes = value;
        }

        [Input("destinationApplicationSecurityGroupIds")]
        private InputList<string>? _destinationApplicationSecurityGroupIds;

        /// <summary>
        /// A List of destination Application Security Group ID's
        /// </summary>
        public InputList<string> DestinationApplicationSecurityGroupIds
        {
            get => _destinationApplicationSecurityGroupIds ?? (_destinationApplicationSecurityGroupIds = new InputList<string>());
            set => _destinationApplicationSecurityGroupIds = value;
        }

        /// <summary>
        /// Destination Port or Range. Integer or range between `0` and `65535` or `*` to match any. This is required if `destination_port_ranges` is not specified.
        /// </summary>
        [Input("destinationPortRange")]
        public Input<string>? DestinationPortRange { get; set; }

        [Input("destinationPortRanges")]
        private InputList<string>? _destinationPortRanges;

        /// <summary>
        /// List of destination ports or port ranges. This is required if `destination_port_range` is not specified.
        /// </summary>
        public InputList<string> DestinationPortRanges
        {
            get => _destinationPortRanges ?? (_destinationPortRanges = new InputList<string>());
            set => _destinationPortRanges = value;
        }

        /// <summary>
        /// The direction specifies if rule will be evaluated on incoming or outgoing traffic. Possible values are `Inbound` and `Outbound`.
        /// </summary>
        [Input("direction", required: true)]
        public Input<string> Direction { get; set; } = null!;

        /// <summary>
        /// The name of the security rule.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// Specifies the priority of the rule. The value can be between 100 and 4096. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.
        /// </summary>
        [Input("priority", required: true)]
        public Input<int> Priority { get; set; } = null!;

        /// <summary>
        /// Network protocol this rule applies to. Can be `Tcp`, `Udp`, `Icmp`, or `*` to match all.
        /// </summary>
        [Input("protocol", required: true)]
        public Input<string> Protocol { get; set; } = null!;

        /// <summary>
        /// CIDR or source IP range or * to match any IP. Tags such as ‘VirtualNetwork’, ‘AzureLoadBalancer’ and ‘Internet’ can also be used. This is required if `source_address_prefixes` is not specified.
        /// </summary>
        [Input("sourceAddressPrefix")]
        public Input<string>? SourceAddressPrefix { get; set; }

        [Input("sourceAddressPrefixes")]
        private InputList<string>? _sourceAddressPrefixes;

        /// <summary>
        /// List of source address prefixes. Tags may not be used. This is required if `source_address_prefix` is not specified.
        /// </summary>
        public InputList<string> SourceAddressPrefixes
        {
            get => _sourceAddressPrefixes ?? (_sourceAddressPrefixes = new InputList<string>());
            set => _sourceAddressPrefixes = value;
        }

        [Input("sourceApplicationSecurityGroupIds")]
        private InputList<string>? _sourceApplicationSecurityGroupIds;

        /// <summary>
        /// A List of source Application Security Group ID's
        /// </summary>
        public InputList<string> SourceApplicationSecurityGroupIds
        {
            get => _sourceApplicationSecurityGroupIds ?? (_sourceApplicationSecurityGroupIds = new InputList<string>());
            set => _sourceApplicationSecurityGroupIds = value;
        }

        /// <summary>
        /// Source Port or Range. Integer or range between `0` and `65535` or `*` to match any. This is required if `source_port_ranges` is not specified.
        /// </summary>
        [Input("sourcePortRange")]
        public Input<string>? SourcePortRange { get; set; }

        [Input("sourcePortRanges")]
        private InputList<string>? _sourcePortRanges;

        /// <summary>
        /// List of source ports or port ranges. This is required if `source_port_range` is not specified.
        /// </summary>
        public InputList<string> SourcePortRanges
        {
            get => _sourcePortRanges ?? (_sourcePortRanges = new InputList<string>());
            set => _sourcePortRanges = value;
        }

        public NetworkSecurityGroupSecurityRulesArgs()
        {
        }
    }

    public sealed class NetworkSecurityGroupSecurityRulesGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies whether network traffic is allowed or denied. Possible values are `Allow` and `Deny`.
        /// </summary>
        [Input("access", required: true)]
        public Input<string> Access { get; set; } = null!;

        /// <summary>
        /// A description for this rule. Restricted to 140 characters.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// CIDR or destination IP range or * to match any IP. Tags such as ‘VirtualNetwork’, ‘AzureLoadBalancer’ and ‘Internet’ can also be used. This is required if `destination_address_prefixes` is not specified.
        /// </summary>
        [Input("destinationAddressPrefix")]
        public Input<string>? DestinationAddressPrefix { get; set; }

        [Input("destinationAddressPrefixes")]
        private InputList<string>? _destinationAddressPrefixes;

        /// <summary>
        /// List of destination address prefixes. Tags may not be used. This is required if `destination_address_prefix` is not specified.
        /// </summary>
        public InputList<string> DestinationAddressPrefixes
        {
            get => _destinationAddressPrefixes ?? (_destinationAddressPrefixes = new InputList<string>());
            set => _destinationAddressPrefixes = value;
        }

        [Input("destinationApplicationSecurityGroupIds")]
        private InputList<string>? _destinationApplicationSecurityGroupIds;

        /// <summary>
        /// A List of destination Application Security Group ID's
        /// </summary>
        public InputList<string> DestinationApplicationSecurityGroupIds
        {
            get => _destinationApplicationSecurityGroupIds ?? (_destinationApplicationSecurityGroupIds = new InputList<string>());
            set => _destinationApplicationSecurityGroupIds = value;
        }

        /// <summary>
        /// Destination Port or Range. Integer or range between `0` and `65535` or `*` to match any. This is required if `destination_port_ranges` is not specified.
        /// </summary>
        [Input("destinationPortRange")]
        public Input<string>? DestinationPortRange { get; set; }

        [Input("destinationPortRanges")]
        private InputList<string>? _destinationPortRanges;

        /// <summary>
        /// List of destination ports or port ranges. This is required if `destination_port_range` is not specified.
        /// </summary>
        public InputList<string> DestinationPortRanges
        {
            get => _destinationPortRanges ?? (_destinationPortRanges = new InputList<string>());
            set => _destinationPortRanges = value;
        }

        /// <summary>
        /// The direction specifies if rule will be evaluated on incoming or outgoing traffic. Possible values are `Inbound` and `Outbound`.
        /// </summary>
        [Input("direction", required: true)]
        public Input<string> Direction { get; set; } = null!;

        /// <summary>
        /// The name of the security rule.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// Specifies the priority of the rule. The value can be between 100 and 4096. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.
        /// </summary>
        [Input("priority", required: true)]
        public Input<int> Priority { get; set; } = null!;

        /// <summary>
        /// Network protocol this rule applies to. Can be `Tcp`, `Udp`, `Icmp`, or `*` to match all.
        /// </summary>
        [Input("protocol", required: true)]
        public Input<string> Protocol { get; set; } = null!;

        /// <summary>
        /// CIDR or source IP range or * to match any IP. Tags such as ‘VirtualNetwork’, ‘AzureLoadBalancer’ and ‘Internet’ can also be used. This is required if `source_address_prefixes` is not specified.
        /// </summary>
        [Input("sourceAddressPrefix")]
        public Input<string>? SourceAddressPrefix { get; set; }

        [Input("sourceAddressPrefixes")]
        private InputList<string>? _sourceAddressPrefixes;

        /// <summary>
        /// List of source address prefixes. Tags may not be used. This is required if `source_address_prefix` is not specified.
        /// </summary>
        public InputList<string> SourceAddressPrefixes
        {
            get => _sourceAddressPrefixes ?? (_sourceAddressPrefixes = new InputList<string>());
            set => _sourceAddressPrefixes = value;
        }

        [Input("sourceApplicationSecurityGroupIds")]
        private InputList<string>? _sourceApplicationSecurityGroupIds;

        /// <summary>
        /// A List of source Application Security Group ID's
        /// </summary>
        public InputList<string> SourceApplicationSecurityGroupIds
        {
            get => _sourceApplicationSecurityGroupIds ?? (_sourceApplicationSecurityGroupIds = new InputList<string>());
            set => _sourceApplicationSecurityGroupIds = value;
        }

        /// <summary>
        /// Source Port or Range. Integer or range between `0` and `65535` or `*` to match any. This is required if `source_port_ranges` is not specified.
        /// </summary>
        [Input("sourcePortRange")]
        public Input<string>? SourcePortRange { get; set; }

        [Input("sourcePortRanges")]
        private InputList<string>? _sourcePortRanges;

        /// <summary>
        /// List of source ports or port ranges. This is required if `source_port_range` is not specified.
        /// </summary>
        public InputList<string> SourcePortRanges
        {
            get => _sourcePortRanges ?? (_sourcePortRanges = new InputList<string>());
            set => _sourcePortRanges = value;
        }

        public NetworkSecurityGroupSecurityRulesGetArgs()
        {
        }
    }
    }

    namespace Outputs
    {

    [OutputType]
    public sealed class NetworkSecurityGroupSecurityRules
    {
        /// <summary>
        /// Specifies whether network traffic is allowed or denied. Possible values are `Allow` and `Deny`.
        /// </summary>
        public readonly string Access;
        /// <summary>
        /// A description for this rule. Restricted to 140 characters.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// CIDR or destination IP range or * to match any IP. Tags such as ‘VirtualNetwork’, ‘AzureLoadBalancer’ and ‘Internet’ can also be used. This is required if `destination_address_prefixes` is not specified.
        /// </summary>
        public readonly string? DestinationAddressPrefix;
        /// <summary>
        /// List of destination address prefixes. Tags may not be used. This is required if `destination_address_prefix` is not specified.
        /// </summary>
        public readonly ImmutableArray<string> DestinationAddressPrefixes;
        /// <summary>
        /// A List of destination Application Security Group ID's
        /// </summary>
        public readonly ImmutableArray<string> DestinationApplicationSecurityGroupIds;
        /// <summary>
        /// Destination Port or Range. Integer or range between `0` and `65535` or `*` to match any. This is required if `destination_port_ranges` is not specified.
        /// </summary>
        public readonly string? DestinationPortRange;
        /// <summary>
        /// List of destination ports or port ranges. This is required if `destination_port_range` is not specified.
        /// </summary>
        public readonly ImmutableArray<string> DestinationPortRanges;
        /// <summary>
        /// The direction specifies if rule will be evaluated on incoming or outgoing traffic. Possible values are `Inbound` and `Outbound`.
        /// </summary>
        public readonly string Direction;
        /// <summary>
        /// The name of the security rule.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Specifies the priority of the rule. The value can be between 100 and 4096. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.
        /// </summary>
        public readonly int Priority;
        /// <summary>
        /// Network protocol this rule applies to. Can be `Tcp`, `Udp`, `Icmp`, or `*` to match all.
        /// </summary>
        public readonly string Protocol;
        /// <summary>
        /// CIDR or source IP range or * to match any IP. Tags such as ‘VirtualNetwork’, ‘AzureLoadBalancer’ and ‘Internet’ can also be used. This is required if `source_address_prefixes` is not specified.
        /// </summary>
        public readonly string? SourceAddressPrefix;
        /// <summary>
        /// List of source address prefixes. Tags may not be used. This is required if `source_address_prefix` is not specified.
        /// </summary>
        public readonly ImmutableArray<string> SourceAddressPrefixes;
        /// <summary>
        /// A List of source Application Security Group ID's
        /// </summary>
        public readonly ImmutableArray<string> SourceApplicationSecurityGroupIds;
        /// <summary>
        /// Source Port or Range. Integer or range between `0` and `65535` or `*` to match any. This is required if `source_port_ranges` is not specified.
        /// </summary>
        public readonly string? SourcePortRange;
        /// <summary>
        /// List of source ports or port ranges. This is required if `source_port_range` is not specified.
        /// </summary>
        public readonly ImmutableArray<string> SourcePortRanges;

        [OutputConstructor]
        private NetworkSecurityGroupSecurityRules(
            string access,
            string? description,
            string? destinationAddressPrefix,
            ImmutableArray<string> destinationAddressPrefixes,
            ImmutableArray<string> destinationApplicationSecurityGroupIds,
            string? destinationPortRange,
            ImmutableArray<string> destinationPortRanges,
            string direction,
            string name,
            int priority,
            string protocol,
            string? sourceAddressPrefix,
            ImmutableArray<string> sourceAddressPrefixes,
            ImmutableArray<string> sourceApplicationSecurityGroupIds,
            string? sourcePortRange,
            ImmutableArray<string> sourcePortRanges)
        {
            Access = access;
            Description = description;
            DestinationAddressPrefix = destinationAddressPrefix;
            DestinationAddressPrefixes = destinationAddressPrefixes;
            DestinationApplicationSecurityGroupIds = destinationApplicationSecurityGroupIds;
            DestinationPortRange = destinationPortRange;
            DestinationPortRanges = destinationPortRanges;
            Direction = direction;
            Name = name;
            Priority = priority;
            Protocol = protocol;
            SourceAddressPrefix = sourceAddressPrefix;
            SourceAddressPrefixes = sourceAddressPrefixes;
            SourceApplicationSecurityGroupIds = sourceApplicationSecurityGroupIds;
            SourcePortRange = sourcePortRange;
            SourcePortRanges = sourcePortRanges;
        }
    }
    }
}
