// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Network
{
    /// <summary>
    /// Manages a Virtual Network Gateway Nat Rule.
    /// 
    /// ## Import
    /// 
    /// Virtual Network Gateway Nat Rules can be imported using the `resource id`, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import azure:network/virtualNetworkGatewayNatRule:VirtualNetworkGatewayNatRule example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resGroup1/providers/Microsoft.Network/virtualNetworkGateways/gw1/natRules/rule1
    /// ```
    /// </summary>
    [AzureResourceType("azure:network/virtualNetworkGatewayNatRule:VirtualNetworkGatewayNatRule")]
    public partial class VirtualNetworkGatewayNatRule : global::Pulumi.CustomResource
    {
        /// <summary>
        /// One or more `external_mapping` blocks as documented below.
        /// </summary>
        [Output("externalMappings")]
        public Output<ImmutableArray<Outputs.VirtualNetworkGatewayNatRuleExternalMapping>> ExternalMappings { get; private set; } = null!;

        /// <summary>
        /// One or more `internal_mapping` blocks as documented below.
        /// </summary>
        [Output("internalMappings")]
        public Output<ImmutableArray<Outputs.VirtualNetworkGatewayNatRuleInternalMapping>> InternalMappings { get; private set; } = null!;

        /// <summary>
        /// The ID of the IP Configuration this Virtual Network Gateway Nat Rule applies to.
        /// </summary>
        [Output("ipConfigurationId")]
        public Output<string?> IpConfigurationId { get; private set; } = null!;

        /// <summary>
        /// The source Nat direction of the Virtual Network Gateway Nat. Possible values are `EgressSnat` and `IngressSnat`. Defaults to `EgressSnat`. Changing this forces a new resource to be created.
        /// </summary>
        [Output("mode")]
        public Output<string?> Mode { get; private set; } = null!;

        /// <summary>
        /// The name which should be used for this Virtual Network Gateway Nat Rule. Changing this forces a new resource to be created.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The Name of the Resource Group in which this Virtual Network Gateway Nat Rule should be created. Changing this forces a new resource to be created.
        /// </summary>
        [Output("resourceGroupName")]
        public Output<string> ResourceGroupName { get; private set; } = null!;

        /// <summary>
        /// The type of the Virtual Network Gateway Nat Rule. Possible values are `Dynamic` and `Static`. Defaults to `Static`. Changing this forces a new resource to be created.
        /// </summary>
        [Output("type")]
        public Output<string?> Type { get; private set; } = null!;

        /// <summary>
        /// The ID of the Virtual Network Gateway that this Virtual Network Gateway Nat Rule belongs to. Changing this forces a new resource to be created.
        /// </summary>
        [Output("virtualNetworkGatewayId")]
        public Output<string> VirtualNetworkGatewayId { get; private set; } = null!;


        /// <summary>
        /// Create a VirtualNetworkGatewayNatRule resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public VirtualNetworkGatewayNatRule(string name, VirtualNetworkGatewayNatRuleArgs args, CustomResourceOptions? options = null)
            : base("azure:network/virtualNetworkGatewayNatRule:VirtualNetworkGatewayNatRule", name, args ?? new VirtualNetworkGatewayNatRuleArgs(), MakeResourceOptions(options, ""))
        {
        }

        private VirtualNetworkGatewayNatRule(string name, Input<string> id, VirtualNetworkGatewayNatRuleState? state = null, CustomResourceOptions? options = null)
            : base("azure:network/virtualNetworkGatewayNatRule:VirtualNetworkGatewayNatRule", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing VirtualNetworkGatewayNatRule resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static VirtualNetworkGatewayNatRule Get(string name, Input<string> id, VirtualNetworkGatewayNatRuleState? state = null, CustomResourceOptions? options = null)
        {
            return new VirtualNetworkGatewayNatRule(name, id, state, options);
        }
    }

    public sealed class VirtualNetworkGatewayNatRuleArgs : global::Pulumi.ResourceArgs
    {
        [Input("externalMappings", required: true)]
        private InputList<Inputs.VirtualNetworkGatewayNatRuleExternalMappingArgs>? _externalMappings;

        /// <summary>
        /// One or more `external_mapping` blocks as documented below.
        /// </summary>
        public InputList<Inputs.VirtualNetworkGatewayNatRuleExternalMappingArgs> ExternalMappings
        {
            get => _externalMappings ?? (_externalMappings = new InputList<Inputs.VirtualNetworkGatewayNatRuleExternalMappingArgs>());
            set => _externalMappings = value;
        }

        [Input("internalMappings", required: true)]
        private InputList<Inputs.VirtualNetworkGatewayNatRuleInternalMappingArgs>? _internalMappings;

        /// <summary>
        /// One or more `internal_mapping` blocks as documented below.
        /// </summary>
        public InputList<Inputs.VirtualNetworkGatewayNatRuleInternalMappingArgs> InternalMappings
        {
            get => _internalMappings ?? (_internalMappings = new InputList<Inputs.VirtualNetworkGatewayNatRuleInternalMappingArgs>());
            set => _internalMappings = value;
        }

        /// <summary>
        /// The ID of the IP Configuration this Virtual Network Gateway Nat Rule applies to.
        /// </summary>
        [Input("ipConfigurationId")]
        public Input<string>? IpConfigurationId { get; set; }

        /// <summary>
        /// The source Nat direction of the Virtual Network Gateway Nat. Possible values are `EgressSnat` and `IngressSnat`. Defaults to `EgressSnat`. Changing this forces a new resource to be created.
        /// </summary>
        [Input("mode")]
        public Input<string>? Mode { get; set; }

        /// <summary>
        /// The name which should be used for this Virtual Network Gateway Nat Rule. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The Name of the Resource Group in which this Virtual Network Gateway Nat Rule should be created. Changing this forces a new resource to be created.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The type of the Virtual Network Gateway Nat Rule. Possible values are `Dynamic` and `Static`. Defaults to `Static`. Changing this forces a new resource to be created.
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        /// <summary>
        /// The ID of the Virtual Network Gateway that this Virtual Network Gateway Nat Rule belongs to. Changing this forces a new resource to be created.
        /// </summary>
        [Input("virtualNetworkGatewayId", required: true)]
        public Input<string> VirtualNetworkGatewayId { get; set; } = null!;

        public VirtualNetworkGatewayNatRuleArgs()
        {
        }
        public static new VirtualNetworkGatewayNatRuleArgs Empty => new VirtualNetworkGatewayNatRuleArgs();
    }

    public sealed class VirtualNetworkGatewayNatRuleState : global::Pulumi.ResourceArgs
    {
        [Input("externalMappings")]
        private InputList<Inputs.VirtualNetworkGatewayNatRuleExternalMappingGetArgs>? _externalMappings;

        /// <summary>
        /// One or more `external_mapping` blocks as documented below.
        /// </summary>
        public InputList<Inputs.VirtualNetworkGatewayNatRuleExternalMappingGetArgs> ExternalMappings
        {
            get => _externalMappings ?? (_externalMappings = new InputList<Inputs.VirtualNetworkGatewayNatRuleExternalMappingGetArgs>());
            set => _externalMappings = value;
        }

        [Input("internalMappings")]
        private InputList<Inputs.VirtualNetworkGatewayNatRuleInternalMappingGetArgs>? _internalMappings;

        /// <summary>
        /// One or more `internal_mapping` blocks as documented below.
        /// </summary>
        public InputList<Inputs.VirtualNetworkGatewayNatRuleInternalMappingGetArgs> InternalMappings
        {
            get => _internalMappings ?? (_internalMappings = new InputList<Inputs.VirtualNetworkGatewayNatRuleInternalMappingGetArgs>());
            set => _internalMappings = value;
        }

        /// <summary>
        /// The ID of the IP Configuration this Virtual Network Gateway Nat Rule applies to.
        /// </summary>
        [Input("ipConfigurationId")]
        public Input<string>? IpConfigurationId { get; set; }

        /// <summary>
        /// The source Nat direction of the Virtual Network Gateway Nat. Possible values are `EgressSnat` and `IngressSnat`. Defaults to `EgressSnat`. Changing this forces a new resource to be created.
        /// </summary>
        [Input("mode")]
        public Input<string>? Mode { get; set; }

        /// <summary>
        /// The name which should be used for this Virtual Network Gateway Nat Rule. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The Name of the Resource Group in which this Virtual Network Gateway Nat Rule should be created. Changing this forces a new resource to be created.
        /// </summary>
        [Input("resourceGroupName")]
        public Input<string>? ResourceGroupName { get; set; }

        /// <summary>
        /// The type of the Virtual Network Gateway Nat Rule. Possible values are `Dynamic` and `Static`. Defaults to `Static`. Changing this forces a new resource to be created.
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        /// <summary>
        /// The ID of the Virtual Network Gateway that this Virtual Network Gateway Nat Rule belongs to. Changing this forces a new resource to be created.
        /// </summary>
        [Input("virtualNetworkGatewayId")]
        public Input<string>? VirtualNetworkGatewayId { get; set; }

        public VirtualNetworkGatewayNatRuleState()
        {
        }
        public static new VirtualNetworkGatewayNatRuleState Empty => new VirtualNetworkGatewayNatRuleState();
    }
}
