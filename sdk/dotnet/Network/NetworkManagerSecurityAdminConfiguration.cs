// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Network
{
    /// <summary>
    /// Manages a Network Manager Security Admin Configuration.
    /// 
    /// ## Import
    /// 
    /// Network Manager Security Admin Configuration can be imported using the `resource id`, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import azure:network/networkManagerSecurityAdminConfiguration:NetworkManagerSecurityAdminConfiguration example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resourceGroup1/providers/Microsoft.Network/networkManagers/networkManager1/securityAdminConfigurations/configuration1
    /// ```
    /// </summary>
    [AzureResourceType("azure:network/networkManagerSecurityAdminConfiguration:NetworkManagerSecurityAdminConfiguration")]
    public partial class NetworkManagerSecurityAdminConfiguration : global::Pulumi.CustomResource
    {
        /// <summary>
        /// A list of network intent policy based services. Possible values are `All`, `None` and `AllowRulesOnly`. Exactly one value should be set. The `All` option requires `Microsoft.Network/AllowAdminRulesOnNipBasedServices` feature registration to Subscription. Please see [this document](https://learn.microsoft.com/en-us/azure/virtual-network-manager/concept-security-admins#network-intent-policies-and-security-admin-rules) for more information.
        /// </summary>
        [Output("applyOnNetworkIntentPolicyBasedServices")]
        public Output<string?> ApplyOnNetworkIntentPolicyBasedServices { get; private set; } = null!;

        /// <summary>
        /// A description of the Security Admin Configuration.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// Specifies the name which should be used for this Network Manager Security Admin Configuration. Changing this forces a new Network Manager Security Admin Configuration to be created.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Specifies the ID of the Network Manager Security Admin Configuration. Changing this forces a new Network Manager Security Admin Configuration to be created.
        /// </summary>
        [Output("networkManagerId")]
        public Output<string> NetworkManagerId { get; private set; } = null!;


        /// <summary>
        /// Create a NetworkManagerSecurityAdminConfiguration resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public NetworkManagerSecurityAdminConfiguration(string name, NetworkManagerSecurityAdminConfigurationArgs args, CustomResourceOptions? options = null)
            : base("azure:network/networkManagerSecurityAdminConfiguration:NetworkManagerSecurityAdminConfiguration", name, args ?? new NetworkManagerSecurityAdminConfigurationArgs(), MakeResourceOptions(options, ""))
        {
        }

        private NetworkManagerSecurityAdminConfiguration(string name, Input<string> id, NetworkManagerSecurityAdminConfigurationState? state = null, CustomResourceOptions? options = null)
            : base("azure:network/networkManagerSecurityAdminConfiguration:NetworkManagerSecurityAdminConfiguration", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing NetworkManagerSecurityAdminConfiguration resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static NetworkManagerSecurityAdminConfiguration Get(string name, Input<string> id, NetworkManagerSecurityAdminConfigurationState? state = null, CustomResourceOptions? options = null)
        {
            return new NetworkManagerSecurityAdminConfiguration(name, id, state, options);
        }
    }

    public sealed class NetworkManagerSecurityAdminConfigurationArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// A list of network intent policy based services. Possible values are `All`, `None` and `AllowRulesOnly`. Exactly one value should be set. The `All` option requires `Microsoft.Network/AllowAdminRulesOnNipBasedServices` feature registration to Subscription. Please see [this document](https://learn.microsoft.com/en-us/azure/virtual-network-manager/concept-security-admins#network-intent-policies-and-security-admin-rules) for more information.
        /// </summary>
        [Input("applyOnNetworkIntentPolicyBasedServices")]
        public Input<string>? ApplyOnNetworkIntentPolicyBasedServices { get; set; }

        /// <summary>
        /// A description of the Security Admin Configuration.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Specifies the name which should be used for this Network Manager Security Admin Configuration. Changing this forces a new Network Manager Security Admin Configuration to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Specifies the ID of the Network Manager Security Admin Configuration. Changing this forces a new Network Manager Security Admin Configuration to be created.
        /// </summary>
        [Input("networkManagerId", required: true)]
        public Input<string> NetworkManagerId { get; set; } = null!;

        public NetworkManagerSecurityAdminConfigurationArgs()
        {
        }
        public static new NetworkManagerSecurityAdminConfigurationArgs Empty => new NetworkManagerSecurityAdminConfigurationArgs();
    }

    public sealed class NetworkManagerSecurityAdminConfigurationState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// A list of network intent policy based services. Possible values are `All`, `None` and `AllowRulesOnly`. Exactly one value should be set. The `All` option requires `Microsoft.Network/AllowAdminRulesOnNipBasedServices` feature registration to Subscription. Please see [this document](https://learn.microsoft.com/en-us/azure/virtual-network-manager/concept-security-admins#network-intent-policies-and-security-admin-rules) for more information.
        /// </summary>
        [Input("applyOnNetworkIntentPolicyBasedServices")]
        public Input<string>? ApplyOnNetworkIntentPolicyBasedServices { get; set; }

        /// <summary>
        /// A description of the Security Admin Configuration.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Specifies the name which should be used for this Network Manager Security Admin Configuration. Changing this forces a new Network Manager Security Admin Configuration to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Specifies the ID of the Network Manager Security Admin Configuration. Changing this forces a new Network Manager Security Admin Configuration to be created.
        /// </summary>
        [Input("networkManagerId")]
        public Input<string>? NetworkManagerId { get; set; }

        public NetworkManagerSecurityAdminConfigurationState()
        {
        }
        public static new NetworkManagerSecurityAdminConfigurationState Empty => new NetworkManagerSecurityAdminConfigurationState();
    }
}
