// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Network
{
    /// <summary>
    /// Manages a Network Manager Management Group Connection which may cross tenants.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using Azure = Pulumi.Azure;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var exampleGroup = new Azure.Management.Group("exampleGroup");
    /// 
    ///     var alt = Azure.Core.GetSubscription.Invoke(new()
    ///     {
    ///         SubscriptionId = "00000000-0000-0000-0000-000000000000",
    ///     });
    /// 
    ///     var exampleGroupSubscriptionAssociation = new Azure.Management.GroupSubscriptionAssociation("exampleGroupSubscriptionAssociation", new()
    ///     {
    ///         ManagementGroupId = exampleGroup.Id,
    ///         SubscriptionId = alt.Apply(getSubscriptionResult =&gt; getSubscriptionResult.Id),
    ///     });
    /// 
    ///     var currentSubscription = Azure.Core.GetSubscription.Invoke();
    /// 
    ///     var currentClientConfig = Azure.Core.GetClientConfig.Invoke();
    /// 
    ///     var networkContributor = new Azure.Authorization.Assignment("networkContributor", new()
    ///     {
    ///         Scope = exampleGroup.Id,
    ///         RoleDefinitionName = "Network Contributor",
    ///         PrincipalId = currentClientConfig.Apply(getClientConfigResult =&gt; getClientConfigResult.ObjectId),
    ///     });
    /// 
    ///     var exampleResourceGroup = new Azure.Core.ResourceGroup("exampleResourceGroup", new()
    ///     {
    ///         Location = "West Europe",
    ///     });
    /// 
    ///     var exampleNetworkManager = new Azure.Network.NetworkManager("exampleNetworkManager", new()
    ///     {
    ///         Location = exampleResourceGroup.Location,
    ///         ResourceGroupName = exampleResourceGroup.Name,
    ///         Scope = new Azure.Network.Inputs.NetworkManagerScopeArgs
    ///         {
    ///             SubscriptionIds = new[]
    ///             {
    ///                 currentSubscription.Apply(getSubscriptionResult =&gt; getSubscriptionResult.Id),
    ///             },
    ///         },
    ///         ScopeAccesses = new[]
    ///         {
    ///             "SecurityAdmin",
    ///         },
    ///     });
    /// 
    ///     var exampleNetworkManagerManagementGroupConnection = new Azure.Network.NetworkManagerManagementGroupConnection("exampleNetworkManagerManagementGroupConnection", new()
    ///     {
    ///         ManagementGroupId = exampleGroup.Id,
    ///         NetworkManagerId = exampleNetworkManager.Id,
    ///         Description = "example",
    ///     }, new CustomResourceOptions
    ///     {
    ///         DependsOn = new[]
    ///         {
    ///             networkContributor,
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Network Manager Management Group Connection can be imported using the `resource id`, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import azure:network/networkManagerManagementGroupConnection:NetworkManagerManagementGroupConnection example /providers/Microsoft.Management/managementGroups/00000000-0000-0000-0000-000000000000/providers/Microsoft.Network/networkManagerConnections/networkManagerConnection1
    /// ```
    /// </summary>
    [AzureResourceType("azure:network/networkManagerManagementGroupConnection:NetworkManagerManagementGroupConnection")]
    public partial class NetworkManagerManagementGroupConnection : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The Connection state of the Network Manager Management Group Connection.
        /// *
        /// </summary>
        [Output("connectionState")]
        public Output<string> ConnectionState { get; private set; } = null!;

        /// <summary>
        /// A description of the Network Manager Management Group Connection.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// Specifies the ID of the target Management Group.
        /// </summary>
        [Output("managementGroupId")]
        public Output<string> ManagementGroupId { get; private set; } = null!;

        /// <summary>
        /// Specifies the name which should be used for this Network Manager Management Group Connection. Changing this forces a new Network Manager Management Group Connection to be created.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Specifies the ID of the Network Manager which the Management Group is connected to.
        /// </summary>
        [Output("networkManagerId")]
        public Output<string> NetworkManagerId { get; private set; } = null!;


        /// <summary>
        /// Create a NetworkManagerManagementGroupConnection resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public NetworkManagerManagementGroupConnection(string name, NetworkManagerManagementGroupConnectionArgs args, CustomResourceOptions? options = null)
            : base("azure:network/networkManagerManagementGroupConnection:NetworkManagerManagementGroupConnection", name, args ?? new NetworkManagerManagementGroupConnectionArgs(), MakeResourceOptions(options, ""))
        {
        }

        private NetworkManagerManagementGroupConnection(string name, Input<string> id, NetworkManagerManagementGroupConnectionState? state = null, CustomResourceOptions? options = null)
            : base("azure:network/networkManagerManagementGroupConnection:NetworkManagerManagementGroupConnection", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing NetworkManagerManagementGroupConnection resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static NetworkManagerManagementGroupConnection Get(string name, Input<string> id, NetworkManagerManagementGroupConnectionState? state = null, CustomResourceOptions? options = null)
        {
            return new NetworkManagerManagementGroupConnection(name, id, state, options);
        }
    }

    public sealed class NetworkManagerManagementGroupConnectionArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// A description of the Network Manager Management Group Connection.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Specifies the ID of the target Management Group.
        /// </summary>
        [Input("managementGroupId", required: true)]
        public Input<string> ManagementGroupId { get; set; } = null!;

        /// <summary>
        /// Specifies the name which should be used for this Network Manager Management Group Connection. Changing this forces a new Network Manager Management Group Connection to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Specifies the ID of the Network Manager which the Management Group is connected to.
        /// </summary>
        [Input("networkManagerId", required: true)]
        public Input<string> NetworkManagerId { get; set; } = null!;

        public NetworkManagerManagementGroupConnectionArgs()
        {
        }
        public static new NetworkManagerManagementGroupConnectionArgs Empty => new NetworkManagerManagementGroupConnectionArgs();
    }

    public sealed class NetworkManagerManagementGroupConnectionState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The Connection state of the Network Manager Management Group Connection.
        /// *
        /// </summary>
        [Input("connectionState")]
        public Input<string>? ConnectionState { get; set; }

        /// <summary>
        /// A description of the Network Manager Management Group Connection.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Specifies the ID of the target Management Group.
        /// </summary>
        [Input("managementGroupId")]
        public Input<string>? ManagementGroupId { get; set; }

        /// <summary>
        /// Specifies the name which should be used for this Network Manager Management Group Connection. Changing this forces a new Network Manager Management Group Connection to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Specifies the ID of the Network Manager which the Management Group is connected to.
        /// </summary>
        [Input("networkManagerId")]
        public Input<string>? NetworkManagerId { get; set; }

        public NetworkManagerManagementGroupConnectionState()
        {
        }
        public static new NetworkManagerManagementGroupConnectionState Empty => new NetworkManagerManagementGroupConnectionState();
    }
}
