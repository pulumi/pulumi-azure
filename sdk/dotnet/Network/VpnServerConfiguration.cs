// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Network
{
    /// <summary>
    /// Manages a VPN Server Configuration.
    /// 
    /// &gt; This content is derived from https://github.com/terraform-providers/terraform-provider-azurerm/blob/master/website/docs/r/vpn_server_configuration.html.markdown.
    /// </summary>
    public partial class VpnServerConfiguration : Pulumi.CustomResource
    {
        /// <summary>
        /// A `azure_active_directory_authentication` block as defined below.
        /// </summary>
        [Output("azureActiveDirectoryAuthentications")]
        public Output<ImmutableArray<Outputs.VpnServerConfigurationAzureActiveDirectoryAuthentications>> AzureActiveDirectoryAuthentications { get; private set; } = null!;

        /// <summary>
        /// One or more `client_revoked_certificate` blocks as defined below.
        /// </summary>
        [Output("clientRevokedCertificates")]
        public Output<ImmutableArray<Outputs.VpnServerConfigurationClientRevokedCertificates>> ClientRevokedCertificates { get; private set; } = null!;

        /// <summary>
        /// One or more `client_root_certificate` blocks as defined below.
        /// </summary>
        [Output("clientRootCertificates")]
        public Output<ImmutableArray<Outputs.VpnServerConfigurationClientRootCertificates>> ClientRootCertificates { get; private set; } = null!;

        /// <summary>
        /// A `ipsec_policy` block as defined below.
        /// </summary>
        [Output("ipsecPolicy")]
        public Output<Outputs.VpnServerConfigurationIpsecPolicy?> IpsecPolicy { get; private set; } = null!;

        /// <summary>
        /// The Azure location where this VPN Server Configuration should be created. Changing this forces a new resource to be created.
        /// </summary>
        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// The Name which should be used for this VPN Server Configuration. Changing this forces a new resource to be created.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// A `radius_server` block as defined below.
        /// </summary>
        [Output("radiusServer")]
        public Output<Outputs.VpnServerConfigurationRadiusServer?> RadiusServer { get; private set; } = null!;

        /// <summary>
        /// The Name of the Resource Group in which this VPN Server Configuration should be created. Changing this forces a new resource to be created.
        /// </summary>
        [Output("resourceGroupName")]
        public Output<string> ResourceGroupName { get; private set; } = null!;

        /// <summary>
        /// A mapping of tags to assign to the resource.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, object>> Tags { get; private set; } = null!;

        /// <summary>
        /// A list of one of more Authentication Types applicable for this VPN Server Configuration. Possible values are `AAD` (Azure Active Directory), `Certificate` and `Radius`.
        /// </summary>
        [Output("vpnAuthenticationTypes")]
        public Output<string> VpnAuthenticationTypes { get; private set; } = null!;

        /// <summary>
        /// A list of VPN Protocols to use for this Server Configuration. Possible values are `IkeV2` and `OpenVPN`.
        /// </summary>
        [Output("vpnProtocols")]
        public Output<ImmutableArray<string>> VpnProtocols { get; private set; } = null!;


        /// <summary>
        /// Create a VpnServerConfiguration resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public VpnServerConfiguration(string name, VpnServerConfigurationArgs args, CustomResourceOptions? options = null)
            : base("azure:network/vpnServerConfiguration:VpnServerConfiguration", name, args ?? ResourceArgs.Empty, MakeResourceOptions(options, ""))
        {
        }

        private VpnServerConfiguration(string name, Input<string> id, VpnServerConfigurationState? state = null, CustomResourceOptions? options = null)
            : base("azure:network/vpnServerConfiguration:VpnServerConfiguration", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing VpnServerConfiguration resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static VpnServerConfiguration Get(string name, Input<string> id, VpnServerConfigurationState? state = null, CustomResourceOptions? options = null)
        {
            return new VpnServerConfiguration(name, id, state, options);
        }
    }

    public sealed class VpnServerConfigurationArgs : Pulumi.ResourceArgs
    {
        [Input("azureActiveDirectoryAuthentications")]
        private InputList<Inputs.VpnServerConfigurationAzureActiveDirectoryAuthenticationsArgs>? _azureActiveDirectoryAuthentications;

        /// <summary>
        /// A `azure_active_directory_authentication` block as defined below.
        /// </summary>
        public InputList<Inputs.VpnServerConfigurationAzureActiveDirectoryAuthenticationsArgs> AzureActiveDirectoryAuthentications
        {
            get => _azureActiveDirectoryAuthentications ?? (_azureActiveDirectoryAuthentications = new InputList<Inputs.VpnServerConfigurationAzureActiveDirectoryAuthenticationsArgs>());
            set => _azureActiveDirectoryAuthentications = value;
        }

        [Input("clientRevokedCertificates")]
        private InputList<Inputs.VpnServerConfigurationClientRevokedCertificatesArgs>? _clientRevokedCertificates;

        /// <summary>
        /// One or more `client_revoked_certificate` blocks as defined below.
        /// </summary>
        public InputList<Inputs.VpnServerConfigurationClientRevokedCertificatesArgs> ClientRevokedCertificates
        {
            get => _clientRevokedCertificates ?? (_clientRevokedCertificates = new InputList<Inputs.VpnServerConfigurationClientRevokedCertificatesArgs>());
            set => _clientRevokedCertificates = value;
        }

        [Input("clientRootCertificates")]
        private InputList<Inputs.VpnServerConfigurationClientRootCertificatesArgs>? _clientRootCertificates;

        /// <summary>
        /// One or more `client_root_certificate` blocks as defined below.
        /// </summary>
        public InputList<Inputs.VpnServerConfigurationClientRootCertificatesArgs> ClientRootCertificates
        {
            get => _clientRootCertificates ?? (_clientRootCertificates = new InputList<Inputs.VpnServerConfigurationClientRootCertificatesArgs>());
            set => _clientRootCertificates = value;
        }

        /// <summary>
        /// A `ipsec_policy` block as defined below.
        /// </summary>
        [Input("ipsecPolicy")]
        public Input<Inputs.VpnServerConfigurationIpsecPolicyArgs>? IpsecPolicy { get; set; }

        /// <summary>
        /// The Azure location where this VPN Server Configuration should be created. Changing this forces a new resource to be created.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// The Name which should be used for this VPN Server Configuration. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// A `radius_server` block as defined below.
        /// </summary>
        [Input("radiusServer")]
        public Input<Inputs.VpnServerConfigurationRadiusServerArgs>? RadiusServer { get; set; }

        /// <summary>
        /// The Name of the Resource Group in which this VPN Server Configuration should be created. Changing this forces a new resource to be created.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        [Input("tags")]
        private InputMap<object>? _tags;

        /// <summary>
        /// A mapping of tags to assign to the resource.
        /// </summary>
        public InputMap<object> Tags
        {
            get => _tags ?? (_tags = new InputMap<object>());
            set => _tags = value;
        }

        /// <summary>
        /// A list of one of more Authentication Types applicable for this VPN Server Configuration. Possible values are `AAD` (Azure Active Directory), `Certificate` and `Radius`.
        /// </summary>
        [Input("vpnAuthenticationTypes", required: true)]
        public Input<string> VpnAuthenticationTypes { get; set; } = null!;

        [Input("vpnProtocols")]
        private InputList<string>? _vpnProtocols;

        /// <summary>
        /// A list of VPN Protocols to use for this Server Configuration. Possible values are `IkeV2` and `OpenVPN`.
        /// </summary>
        public InputList<string> VpnProtocols
        {
            get => _vpnProtocols ?? (_vpnProtocols = new InputList<string>());
            set => _vpnProtocols = value;
        }

        public VpnServerConfigurationArgs()
        {
        }
    }

    public sealed class VpnServerConfigurationState : Pulumi.ResourceArgs
    {
        [Input("azureActiveDirectoryAuthentications")]
        private InputList<Inputs.VpnServerConfigurationAzureActiveDirectoryAuthenticationsGetArgs>? _azureActiveDirectoryAuthentications;

        /// <summary>
        /// A `azure_active_directory_authentication` block as defined below.
        /// </summary>
        public InputList<Inputs.VpnServerConfigurationAzureActiveDirectoryAuthenticationsGetArgs> AzureActiveDirectoryAuthentications
        {
            get => _azureActiveDirectoryAuthentications ?? (_azureActiveDirectoryAuthentications = new InputList<Inputs.VpnServerConfigurationAzureActiveDirectoryAuthenticationsGetArgs>());
            set => _azureActiveDirectoryAuthentications = value;
        }

        [Input("clientRevokedCertificates")]
        private InputList<Inputs.VpnServerConfigurationClientRevokedCertificatesGetArgs>? _clientRevokedCertificates;

        /// <summary>
        /// One or more `client_revoked_certificate` blocks as defined below.
        /// </summary>
        public InputList<Inputs.VpnServerConfigurationClientRevokedCertificatesGetArgs> ClientRevokedCertificates
        {
            get => _clientRevokedCertificates ?? (_clientRevokedCertificates = new InputList<Inputs.VpnServerConfigurationClientRevokedCertificatesGetArgs>());
            set => _clientRevokedCertificates = value;
        }

        [Input("clientRootCertificates")]
        private InputList<Inputs.VpnServerConfigurationClientRootCertificatesGetArgs>? _clientRootCertificates;

        /// <summary>
        /// One or more `client_root_certificate` blocks as defined below.
        /// </summary>
        public InputList<Inputs.VpnServerConfigurationClientRootCertificatesGetArgs> ClientRootCertificates
        {
            get => _clientRootCertificates ?? (_clientRootCertificates = new InputList<Inputs.VpnServerConfigurationClientRootCertificatesGetArgs>());
            set => _clientRootCertificates = value;
        }

        /// <summary>
        /// A `ipsec_policy` block as defined below.
        /// </summary>
        [Input("ipsecPolicy")]
        public Input<Inputs.VpnServerConfigurationIpsecPolicyGetArgs>? IpsecPolicy { get; set; }

        /// <summary>
        /// The Azure location where this VPN Server Configuration should be created. Changing this forces a new resource to be created.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// The Name which should be used for this VPN Server Configuration. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// A `radius_server` block as defined below.
        /// </summary>
        [Input("radiusServer")]
        public Input<Inputs.VpnServerConfigurationRadiusServerGetArgs>? RadiusServer { get; set; }

        /// <summary>
        /// The Name of the Resource Group in which this VPN Server Configuration should be created. Changing this forces a new resource to be created.
        /// </summary>
        [Input("resourceGroupName")]
        public Input<string>? ResourceGroupName { get; set; }

        [Input("tags")]
        private InputMap<object>? _tags;

        /// <summary>
        /// A mapping of tags to assign to the resource.
        /// </summary>
        public InputMap<object> Tags
        {
            get => _tags ?? (_tags = new InputMap<object>());
            set => _tags = value;
        }

        /// <summary>
        /// A list of one of more Authentication Types applicable for this VPN Server Configuration. Possible values are `AAD` (Azure Active Directory), `Certificate` and `Radius`.
        /// </summary>
        [Input("vpnAuthenticationTypes")]
        public Input<string>? VpnAuthenticationTypes { get; set; }

        [Input("vpnProtocols")]
        private InputList<string>? _vpnProtocols;

        /// <summary>
        /// A list of VPN Protocols to use for this Server Configuration. Possible values are `IkeV2` and `OpenVPN`.
        /// </summary>
        public InputList<string> VpnProtocols
        {
            get => _vpnProtocols ?? (_vpnProtocols = new InputList<string>());
            set => _vpnProtocols = value;
        }

        public VpnServerConfigurationState()
        {
        }
    }

    namespace Inputs
    {

    public sealed class VpnServerConfigurationAzureActiveDirectoryAuthenticationsArgs : Pulumi.ResourceArgs
    {
        [Input("audience", required: true)]
        public Input<string> Audience { get; set; } = null!;

        [Input("issuer", required: true)]
        public Input<string> Issuer { get; set; } = null!;

        [Input("tenant", required: true)]
        public Input<string> Tenant { get; set; } = null!;

        public VpnServerConfigurationAzureActiveDirectoryAuthenticationsArgs()
        {
        }
    }

    public sealed class VpnServerConfigurationAzureActiveDirectoryAuthenticationsGetArgs : Pulumi.ResourceArgs
    {
        [Input("audience", required: true)]
        public Input<string> Audience { get; set; } = null!;

        [Input("issuer", required: true)]
        public Input<string> Issuer { get; set; } = null!;

        [Input("tenant", required: true)]
        public Input<string> Tenant { get; set; } = null!;

        public VpnServerConfigurationAzureActiveDirectoryAuthenticationsGetArgs()
        {
        }
    }

    public sealed class VpnServerConfigurationClientRevokedCertificatesArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The Name which should be used for this VPN Server Configuration. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        [Input("thumbprint", required: true)]
        public Input<string> Thumbprint { get; set; } = null!;

        public VpnServerConfigurationClientRevokedCertificatesArgs()
        {
        }
    }

    public sealed class VpnServerConfigurationClientRevokedCertificatesGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The Name which should be used for this VPN Server Configuration. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        [Input("thumbprint", required: true)]
        public Input<string> Thumbprint { get; set; } = null!;

        public VpnServerConfigurationClientRevokedCertificatesGetArgs()
        {
        }
    }

    public sealed class VpnServerConfigurationClientRootCertificatesArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The Name which should be used for this VPN Server Configuration. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        [Input("publicCertData", required: true)]
        public Input<string> PublicCertData { get; set; } = null!;

        public VpnServerConfigurationClientRootCertificatesArgs()
        {
        }
    }

    public sealed class VpnServerConfigurationClientRootCertificatesGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The Name which should be used for this VPN Server Configuration. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        [Input("publicCertData", required: true)]
        public Input<string> PublicCertData { get; set; } = null!;

        public VpnServerConfigurationClientRootCertificatesGetArgs()
        {
        }
    }

    public sealed class VpnServerConfigurationIpsecPolicyArgs : Pulumi.ResourceArgs
    {
        [Input("dhGroup", required: true)]
        public Input<string> DhGroup { get; set; } = null!;

        [Input("ikeEncryption", required: true)]
        public Input<string> IkeEncryption { get; set; } = null!;

        [Input("ikeIntegrity", required: true)]
        public Input<string> IkeIntegrity { get; set; } = null!;

        [Input("ipsecEncryption", required: true)]
        public Input<string> IpsecEncryption { get; set; } = null!;

        [Input("ipsecIntegrity", required: true)]
        public Input<string> IpsecIntegrity { get; set; } = null!;

        [Input("pfsGroup", required: true)]
        public Input<string> PfsGroup { get; set; } = null!;

        [Input("saDataSizeKilobytes", required: true)]
        public Input<int> SaDataSizeKilobytes { get; set; } = null!;

        [Input("saLifetimeSeconds", required: true)]
        public Input<int> SaLifetimeSeconds { get; set; } = null!;

        public VpnServerConfigurationIpsecPolicyArgs()
        {
        }
    }

    public sealed class VpnServerConfigurationIpsecPolicyGetArgs : Pulumi.ResourceArgs
    {
        [Input("dhGroup", required: true)]
        public Input<string> DhGroup { get; set; } = null!;

        [Input("ikeEncryption", required: true)]
        public Input<string> IkeEncryption { get; set; } = null!;

        [Input("ikeIntegrity", required: true)]
        public Input<string> IkeIntegrity { get; set; } = null!;

        [Input("ipsecEncryption", required: true)]
        public Input<string> IpsecEncryption { get; set; } = null!;

        [Input("ipsecIntegrity", required: true)]
        public Input<string> IpsecIntegrity { get; set; } = null!;

        [Input("pfsGroup", required: true)]
        public Input<string> PfsGroup { get; set; } = null!;

        [Input("saDataSizeKilobytes", required: true)]
        public Input<int> SaDataSizeKilobytes { get; set; } = null!;

        [Input("saLifetimeSeconds", required: true)]
        public Input<int> SaLifetimeSeconds { get; set; } = null!;

        public VpnServerConfigurationIpsecPolicyGetArgs()
        {
        }
    }

    public sealed class VpnServerConfigurationRadiusServerArgs : Pulumi.ResourceArgs
    {
        [Input("address", required: true)]
        public Input<string> Address { get; set; } = null!;

        [Input("clientRootCertificates")]
        private InputList<VpnServerConfigurationRadiusServerClientRootCertificatesArgs>? _clientRootCertificates;

        /// <summary>
        /// One or more `client_root_certificate` blocks as defined below.
        /// </summary>
        public InputList<VpnServerConfigurationRadiusServerClientRootCertificatesArgs> ClientRootCertificates
        {
            get => _clientRootCertificates ?? (_clientRootCertificates = new InputList<VpnServerConfigurationRadiusServerClientRootCertificatesArgs>());
            set => _clientRootCertificates = value;
        }

        [Input("secret", required: true)]
        public Input<string> Secret { get; set; } = null!;

        [Input("serverRootCertificates", required: true)]
        private InputList<VpnServerConfigurationRadiusServerServerRootCertificatesArgs>? _serverRootCertificates;
        public InputList<VpnServerConfigurationRadiusServerServerRootCertificatesArgs> ServerRootCertificates
        {
            get => _serverRootCertificates ?? (_serverRootCertificates = new InputList<VpnServerConfigurationRadiusServerServerRootCertificatesArgs>());
            set => _serverRootCertificates = value;
        }

        public VpnServerConfigurationRadiusServerArgs()
        {
        }
    }

    public sealed class VpnServerConfigurationRadiusServerClientRootCertificatesArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The Name which should be used for this VPN Server Configuration. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        [Input("thumbprint", required: true)]
        public Input<string> Thumbprint { get; set; } = null!;

        public VpnServerConfigurationRadiusServerClientRootCertificatesArgs()
        {
        }
    }

    public sealed class VpnServerConfigurationRadiusServerClientRootCertificatesGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The Name which should be used for this VPN Server Configuration. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        [Input("thumbprint", required: true)]
        public Input<string> Thumbprint { get; set; } = null!;

        public VpnServerConfigurationRadiusServerClientRootCertificatesGetArgs()
        {
        }
    }

    public sealed class VpnServerConfigurationRadiusServerGetArgs : Pulumi.ResourceArgs
    {
        [Input("address", required: true)]
        public Input<string> Address { get; set; } = null!;

        [Input("clientRootCertificates")]
        private InputList<VpnServerConfigurationRadiusServerClientRootCertificatesGetArgs>? _clientRootCertificates;

        /// <summary>
        /// One or more `client_root_certificate` blocks as defined below.
        /// </summary>
        public InputList<VpnServerConfigurationRadiusServerClientRootCertificatesGetArgs> ClientRootCertificates
        {
            get => _clientRootCertificates ?? (_clientRootCertificates = new InputList<VpnServerConfigurationRadiusServerClientRootCertificatesGetArgs>());
            set => _clientRootCertificates = value;
        }

        [Input("secret", required: true)]
        public Input<string> Secret { get; set; } = null!;

        [Input("serverRootCertificates", required: true)]
        private InputList<VpnServerConfigurationRadiusServerServerRootCertificatesGetArgs>? _serverRootCertificates;
        public InputList<VpnServerConfigurationRadiusServerServerRootCertificatesGetArgs> ServerRootCertificates
        {
            get => _serverRootCertificates ?? (_serverRootCertificates = new InputList<VpnServerConfigurationRadiusServerServerRootCertificatesGetArgs>());
            set => _serverRootCertificates = value;
        }

        public VpnServerConfigurationRadiusServerGetArgs()
        {
        }
    }

    public sealed class VpnServerConfigurationRadiusServerServerRootCertificatesArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The Name which should be used for this VPN Server Configuration. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        [Input("publicCertData", required: true)]
        public Input<string> PublicCertData { get; set; } = null!;

        public VpnServerConfigurationRadiusServerServerRootCertificatesArgs()
        {
        }
    }

    public sealed class VpnServerConfigurationRadiusServerServerRootCertificatesGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The Name which should be used for this VPN Server Configuration. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        [Input("publicCertData", required: true)]
        public Input<string> PublicCertData { get; set; } = null!;

        public VpnServerConfigurationRadiusServerServerRootCertificatesGetArgs()
        {
        }
    }
    }

    namespace Outputs
    {

    [OutputType]
    public sealed class VpnServerConfigurationAzureActiveDirectoryAuthentications
    {
        public readonly string Audience;
        public readonly string Issuer;
        public readonly string Tenant;

        [OutputConstructor]
        private VpnServerConfigurationAzureActiveDirectoryAuthentications(
            string audience,
            string issuer,
            string tenant)
        {
            Audience = audience;
            Issuer = issuer;
            Tenant = tenant;
        }
    }

    [OutputType]
    public sealed class VpnServerConfigurationClientRevokedCertificates
    {
        /// <summary>
        /// The Name which should be used for this VPN Server Configuration. Changing this forces a new resource to be created.
        /// </summary>
        public readonly string Name;
        public readonly string Thumbprint;

        [OutputConstructor]
        private VpnServerConfigurationClientRevokedCertificates(
            string name,
            string thumbprint)
        {
            Name = name;
            Thumbprint = thumbprint;
        }
    }

    [OutputType]
    public sealed class VpnServerConfigurationClientRootCertificates
    {
        /// <summary>
        /// The Name which should be used for this VPN Server Configuration. Changing this forces a new resource to be created.
        /// </summary>
        public readonly string Name;
        public readonly string PublicCertData;

        [OutputConstructor]
        private VpnServerConfigurationClientRootCertificates(
            string name,
            string publicCertData)
        {
            Name = name;
            PublicCertData = publicCertData;
        }
    }

    [OutputType]
    public sealed class VpnServerConfigurationIpsecPolicy
    {
        public readonly string DhGroup;
        public readonly string IkeEncryption;
        public readonly string IkeIntegrity;
        public readonly string IpsecEncryption;
        public readonly string IpsecIntegrity;
        public readonly string PfsGroup;
        public readonly int SaDataSizeKilobytes;
        public readonly int SaLifetimeSeconds;

        [OutputConstructor]
        private VpnServerConfigurationIpsecPolicy(
            string dhGroup,
            string ikeEncryption,
            string ikeIntegrity,
            string ipsecEncryption,
            string ipsecIntegrity,
            string pfsGroup,
            int saDataSizeKilobytes,
            int saLifetimeSeconds)
        {
            DhGroup = dhGroup;
            IkeEncryption = ikeEncryption;
            IkeIntegrity = ikeIntegrity;
            IpsecEncryption = ipsecEncryption;
            IpsecIntegrity = ipsecIntegrity;
            PfsGroup = pfsGroup;
            SaDataSizeKilobytes = saDataSizeKilobytes;
            SaLifetimeSeconds = saLifetimeSeconds;
        }
    }

    [OutputType]
    public sealed class VpnServerConfigurationRadiusServer
    {
        public readonly string Address;
        /// <summary>
        /// One or more `client_root_certificate` blocks as defined below.
        /// </summary>
        public readonly ImmutableArray<VpnServerConfigurationRadiusServerClientRootCertificates> ClientRootCertificates;
        public readonly string Secret;
        public readonly ImmutableArray<VpnServerConfigurationRadiusServerServerRootCertificates> ServerRootCertificates;

        [OutputConstructor]
        private VpnServerConfigurationRadiusServer(
            string address,
            ImmutableArray<VpnServerConfigurationRadiusServerClientRootCertificates> clientRootCertificates,
            string secret,
            ImmutableArray<VpnServerConfigurationRadiusServerServerRootCertificates> serverRootCertificates)
        {
            Address = address;
            ClientRootCertificates = clientRootCertificates;
            Secret = secret;
            ServerRootCertificates = serverRootCertificates;
        }
    }

    [OutputType]
    public sealed class VpnServerConfigurationRadiusServerClientRootCertificates
    {
        /// <summary>
        /// The Name which should be used for this VPN Server Configuration. Changing this forces a new resource to be created.
        /// </summary>
        public readonly string Name;
        public readonly string Thumbprint;

        [OutputConstructor]
        private VpnServerConfigurationRadiusServerClientRootCertificates(
            string name,
            string thumbprint)
        {
            Name = name;
            Thumbprint = thumbprint;
        }
    }

    [OutputType]
    public sealed class VpnServerConfigurationRadiusServerServerRootCertificates
    {
        /// <summary>
        /// The Name which should be used for this VPN Server Configuration. Changing this forces a new resource to be created.
        /// </summary>
        public readonly string Name;
        public readonly string PublicCertData;

        [OutputConstructor]
        private VpnServerConfigurationRadiusServerServerRootCertificates(
            string name,
            string publicCertData)
        {
            Name = name;
            PublicCertData = publicCertData;
        }
    }
    }
}
