// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Network
{
    /// <summary>
    /// Manages a Network Manager Routing Configuration.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Azure = Pulumi.Azure;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Azure.Core.ResourceGroup("example", new()
    ///     {
    ///         Name = "example-resources",
    ///         Location = "West Europe",
    ///     });
    /// 
    ///     var current = Azure.Core.GetSubscription.Invoke();
    /// 
    ///     var exampleNetworkManager = new Azure.Network.NetworkManager("example", new()
    ///     {
    ///         Name = "example-network-manager",
    ///         Location = example.Location,
    ///         ResourceGroupName = example.Name,
    ///         Scope = new Azure.Network.Inputs.NetworkManagerScopeArgs
    ///         {
    ///             SubscriptionIds = new[]
    ///             {
    ///                 current.Apply(getSubscriptionResult =&gt; getSubscriptionResult.Id),
    ///             },
    ///         },
    ///         ScopeAccesses = new[]
    ///         {
    ///             "Routing",
    ///         },
    ///     });
    /// 
    ///     var exampleNetworkManagerRoutingConfiguration = new Azure.Network.NetworkManagerRoutingConfiguration("example", new()
    ///     {
    ///         Name = "example-routing-configuration",
    ///         NetworkManagerId = exampleNetworkManager.Id,
    ///         Description = "example routing configuration",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## API Providers
    /// 
    /// &lt;!-- This section is generated, changes will be overwritten --&gt;
    /// This resource uses the following Azure API Providers:
    /// 
    /// * `Microsoft.Network` - 2024-05-01
    /// 
    /// ## Import
    /// 
    /// Network Manager Routing Configurations can be imported using the `resource id`, e.g.
    /// 
    /// ```sh
    /// $ pulumi import azure:network/networkManagerRoutingConfiguration:NetworkManagerRoutingConfiguration example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg1/providers/Microsoft.Network/networkManagers/manager1/routingConfigurations/conf1
    /// ```
    /// </summary>
    [AzureResourceType("azure:network/networkManagerRoutingConfiguration:NetworkManagerRoutingConfiguration")]
    public partial class NetworkManagerRoutingConfiguration : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The description of the Network Manager.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// The name which should be used for this Network Manager Routing Configuration. Changing this forces a new Network Manager Routing Configuration to be created.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The ID of the Network Manager. Changing this forces a new Network Manager Routing Configuration to be created.
        /// </summary>
        [Output("networkManagerId")]
        public Output<string> NetworkManagerId { get; private set; } = null!;


        /// <summary>
        /// Create a NetworkManagerRoutingConfiguration resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public NetworkManagerRoutingConfiguration(string name, NetworkManagerRoutingConfigurationArgs args, CustomResourceOptions? options = null)
            : base("azure:network/networkManagerRoutingConfiguration:NetworkManagerRoutingConfiguration", name, args ?? new NetworkManagerRoutingConfigurationArgs(), MakeResourceOptions(options, ""))
        {
        }

        private NetworkManagerRoutingConfiguration(string name, Input<string> id, NetworkManagerRoutingConfigurationState? state = null, CustomResourceOptions? options = null)
            : base("azure:network/networkManagerRoutingConfiguration:NetworkManagerRoutingConfiguration", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing NetworkManagerRoutingConfiguration resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static NetworkManagerRoutingConfiguration Get(string name, Input<string> id, NetworkManagerRoutingConfigurationState? state = null, CustomResourceOptions? options = null)
        {
            return new NetworkManagerRoutingConfiguration(name, id, state, options);
        }
    }

    public sealed class NetworkManagerRoutingConfigurationArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The description of the Network Manager.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The name which should be used for this Network Manager Routing Configuration. Changing this forces a new Network Manager Routing Configuration to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The ID of the Network Manager. Changing this forces a new Network Manager Routing Configuration to be created.
        /// </summary>
        [Input("networkManagerId", required: true)]
        public Input<string> NetworkManagerId { get; set; } = null!;

        public NetworkManagerRoutingConfigurationArgs()
        {
        }
        public static new NetworkManagerRoutingConfigurationArgs Empty => new NetworkManagerRoutingConfigurationArgs();
    }

    public sealed class NetworkManagerRoutingConfigurationState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The description of the Network Manager.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The name which should be used for this Network Manager Routing Configuration. Changing this forces a new Network Manager Routing Configuration to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The ID of the Network Manager. Changing this forces a new Network Manager Routing Configuration to be created.
        /// </summary>
        [Input("networkManagerId")]
        public Input<string>? NetworkManagerId { get; set; }

        public NetworkManagerRoutingConfigurationState()
        {
        }
        public static new NetworkManagerRoutingConfigurationState Empty => new NetworkManagerRoutingConfigurationState();
    }
}
