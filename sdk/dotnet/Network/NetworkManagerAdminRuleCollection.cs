// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Network
{
    /// <summary>
    /// Manages a Network Manager Admin Rule Collection.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using Azure = Pulumi.Azure;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var exampleResourceGroup = new Azure.Core.ResourceGroup("exampleResourceGroup", new()
    ///     {
    ///         Location = "West Europe",
    ///     });
    /// 
    ///     var current = Azure.Core.GetSubscription.Invoke();
    /// 
    ///     var exampleNetworkManager = new Azure.Network.NetworkManager("exampleNetworkManager", new()
    ///     {
    ///         Location = exampleResourceGroup.Location,
    ///         ResourceGroupName = exampleResourceGroup.Name,
    ///         Scope = new Azure.Network.Inputs.NetworkManagerScopeArgs
    ///         {
    ///             SubscriptionIds = new[]
    ///             {
    ///                 current.Apply(getSubscriptionResult =&gt; getSubscriptionResult.Id),
    ///             },
    ///         },
    ///         ScopeAccesses = new[]
    ///         {
    ///             "Connectivity",
    ///             "SecurityAdmin",
    ///         },
    ///         Description = "example network manager",
    ///     });
    /// 
    ///     var exampleNetworkManagerNetworkGroup = new Azure.Network.NetworkManagerNetworkGroup("exampleNetworkManagerNetworkGroup", new()
    ///     {
    ///         NetworkManagerId = exampleNetworkManager.Id,
    ///     });
    /// 
    ///     var exampleNetworkManagerSecurityAdminConfiguration = new Azure.Network.NetworkManagerSecurityAdminConfiguration("exampleNetworkManagerSecurityAdminConfiguration", new()
    ///     {
    ///         NetworkManagerId = exampleNetworkManager.Id,
    ///     });
    /// 
    ///     var exampleNetworkManagerAdminRuleCollection = new Azure.Network.NetworkManagerAdminRuleCollection("exampleNetworkManagerAdminRuleCollection", new()
    ///     {
    ///         SecurityAdminConfigurationId = exampleNetworkManagerSecurityAdminConfiguration.Id,
    ///         NetworkGroupIds = new[]
    ///         {
    ///             exampleNetworkManagerNetworkGroup.Id,
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Network Manager Admin Rule Collection can be imported using the `resource id`, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import azure:network/networkManagerAdminRuleCollection:NetworkManagerAdminRuleCollection example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resourceGroup1/providers/Microsoft.Network/networkManagers/networkManager1/securityAdminConfigurations/configuration1/ruleCollections/ruleCollection1
    /// ```
    /// </summary>
    [AzureResourceType("azure:network/networkManagerAdminRuleCollection:NetworkManagerAdminRuleCollection")]
    public partial class NetworkManagerAdminRuleCollection : global::Pulumi.CustomResource
    {
        /// <summary>
        /// A description of the Network Manager Admin Rule Collection.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// Specifies the name which should be used for this Network Manager Admin Rule Collection. Changing this forces a new Network Manager Admin Rule Collection to be created.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// A list of Network Group ID which this Network Manager Admin Rule Collection applies to.
        /// </summary>
        [Output("networkGroupIds")]
        public Output<ImmutableArray<string>> NetworkGroupIds { get; private set; } = null!;

        /// <summary>
        /// Specifies the ID of the Network Manager Security Admin Configuration. Changing this forces a new Network Manager Admin Rule Collection to be created.
        /// </summary>
        [Output("securityAdminConfigurationId")]
        public Output<string> SecurityAdminConfigurationId { get; private set; } = null!;


        /// <summary>
        /// Create a NetworkManagerAdminRuleCollection resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public NetworkManagerAdminRuleCollection(string name, NetworkManagerAdminRuleCollectionArgs args, CustomResourceOptions? options = null)
            : base("azure:network/networkManagerAdminRuleCollection:NetworkManagerAdminRuleCollection", name, args ?? new NetworkManagerAdminRuleCollectionArgs(), MakeResourceOptions(options, ""))
        {
        }

        private NetworkManagerAdminRuleCollection(string name, Input<string> id, NetworkManagerAdminRuleCollectionState? state = null, CustomResourceOptions? options = null)
            : base("azure:network/networkManagerAdminRuleCollection:NetworkManagerAdminRuleCollection", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing NetworkManagerAdminRuleCollection resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static NetworkManagerAdminRuleCollection Get(string name, Input<string> id, NetworkManagerAdminRuleCollectionState? state = null, CustomResourceOptions? options = null)
        {
            return new NetworkManagerAdminRuleCollection(name, id, state, options);
        }
    }

    public sealed class NetworkManagerAdminRuleCollectionArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// A description of the Network Manager Admin Rule Collection.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Specifies the name which should be used for this Network Manager Admin Rule Collection. Changing this forces a new Network Manager Admin Rule Collection to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("networkGroupIds", required: true)]
        private InputList<string>? _networkGroupIds;

        /// <summary>
        /// A list of Network Group ID which this Network Manager Admin Rule Collection applies to.
        /// </summary>
        public InputList<string> NetworkGroupIds
        {
            get => _networkGroupIds ?? (_networkGroupIds = new InputList<string>());
            set => _networkGroupIds = value;
        }

        /// <summary>
        /// Specifies the ID of the Network Manager Security Admin Configuration. Changing this forces a new Network Manager Admin Rule Collection to be created.
        /// </summary>
        [Input("securityAdminConfigurationId", required: true)]
        public Input<string> SecurityAdminConfigurationId { get; set; } = null!;

        public NetworkManagerAdminRuleCollectionArgs()
        {
        }
        public static new NetworkManagerAdminRuleCollectionArgs Empty => new NetworkManagerAdminRuleCollectionArgs();
    }

    public sealed class NetworkManagerAdminRuleCollectionState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// A description of the Network Manager Admin Rule Collection.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Specifies the name which should be used for this Network Manager Admin Rule Collection. Changing this forces a new Network Manager Admin Rule Collection to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("networkGroupIds")]
        private InputList<string>? _networkGroupIds;

        /// <summary>
        /// A list of Network Group ID which this Network Manager Admin Rule Collection applies to.
        /// </summary>
        public InputList<string> NetworkGroupIds
        {
            get => _networkGroupIds ?? (_networkGroupIds = new InputList<string>());
            set => _networkGroupIds = value;
        }

        /// <summary>
        /// Specifies the ID of the Network Manager Security Admin Configuration. Changing this forces a new Network Manager Admin Rule Collection to be created.
        /// </summary>
        [Input("securityAdminConfigurationId")]
        public Input<string>? SecurityAdminConfigurationId { get; set; }

        public NetworkManagerAdminRuleCollectionState()
        {
        }
        public static new NetworkManagerAdminRuleCollectionState Empty => new NetworkManagerAdminRuleCollectionState();
    }
}
