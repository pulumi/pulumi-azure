// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Network
{
    /// <summary>
    /// Manages a Network Manager Admin Rule.
    /// 
    /// ## Import
    /// 
    /// Network Manager Admin Rule can be imported using the `resource id`, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import azure:network/networkManagerAdminRule:NetworkManagerAdminRule example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resourceGroup1/providers/Microsoft.Network/networkManagers/networkManager1/securityAdminConfigurations/configuration1/ruleCollections/ruleCollection1/rules/rule1
    /// ```
    /// </summary>
    [AzureResourceType("azure:network/networkManagerAdminRule:NetworkManagerAdminRule")]
    public partial class NetworkManagerAdminRule : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Specifies the action allowed for this Network Manager Admin Rule. Possible values are `Allow`, `AlwaysAllow`, and `Deny`.
        /// </summary>
        [Output("action")]
        public Output<string> Action { get; private set; } = null!;

        /// <summary>
        /// Specifies the ID of the Network Manager Admin Rule Collection. Changing this forces a new Network Manager Admin Rule to be created.
        /// </summary>
        [Output("adminRuleCollectionId")]
        public Output<string> AdminRuleCollectionId { get; private set; } = null!;

        /// <summary>
        /// A description of the Network Manager Admin Rule.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// A list of string specifies the destination port ranges. Specify one or more single port number or port ranges such as `1024-65535`. Use `*` to specify any port.
        /// </summary>
        [Output("destinationPortRanges")]
        public Output<ImmutableArray<string>> DestinationPortRanges { get; private set; } = null!;

        /// <summary>
        /// One or more `destination` blocks as defined below.
        /// </summary>
        [Output("destinations")]
        public Output<ImmutableArray<Outputs.NetworkManagerAdminRuleDestination>> Destinations { get; private set; } = null!;

        /// <summary>
        /// Indicates if the traffic matched against the rule in inbound or outbound. Possible values are `Inbound` and `Outbound`.
        /// </summary>
        [Output("direction")]
        public Output<string> Direction { get; private set; } = null!;

        /// <summary>
        /// Specifies the name which should be used for this Network Manager Admin Rule. Changing this forces a new Network Manager Admin Rule to be created.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The priority of the rule. Possible values are integers between `1` and `4096`. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.
        /// </summary>
        [Output("priority")]
        public Output<int> Priority { get; private set; } = null!;

        /// <summary>
        /// Specifies which network protocol this Network Manager Admin Rule applies to. Possible values are `Ah`, `Any`, `Esp`, `Icmp`, `Tcp`, and `Udp`.
        /// </summary>
        [Output("protocol")]
        public Output<string> Protocol { get; private set; } = null!;

        /// <summary>
        /// A list of string specifies the source port ranges. Specify one or more single port number or port ranges such as `1024-65535`. Use `*` to specify any port.
        /// </summary>
        [Output("sourcePortRanges")]
        public Output<ImmutableArray<string>> SourcePortRanges { get; private set; } = null!;

        /// <summary>
        /// One or more `source` blocks as defined below.
        /// </summary>
        [Output("sources")]
        public Output<ImmutableArray<Outputs.NetworkManagerAdminRuleSource>> Sources { get; private set; } = null!;


        /// <summary>
        /// Create a NetworkManagerAdminRule resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public NetworkManagerAdminRule(string name, NetworkManagerAdminRuleArgs args, CustomResourceOptions? options = null)
            : base("azure:network/networkManagerAdminRule:NetworkManagerAdminRule", name, args ?? new NetworkManagerAdminRuleArgs(), MakeResourceOptions(options, ""))
        {
        }

        private NetworkManagerAdminRule(string name, Input<string> id, NetworkManagerAdminRuleState? state = null, CustomResourceOptions? options = null)
            : base("azure:network/networkManagerAdminRule:NetworkManagerAdminRule", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing NetworkManagerAdminRule resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static NetworkManagerAdminRule Get(string name, Input<string> id, NetworkManagerAdminRuleState? state = null, CustomResourceOptions? options = null)
        {
            return new NetworkManagerAdminRule(name, id, state, options);
        }
    }

    public sealed class NetworkManagerAdminRuleArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies the action allowed for this Network Manager Admin Rule. Possible values are `Allow`, `AlwaysAllow`, and `Deny`.
        /// </summary>
        [Input("action", required: true)]
        public Input<string> Action { get; set; } = null!;

        /// <summary>
        /// Specifies the ID of the Network Manager Admin Rule Collection. Changing this forces a new Network Manager Admin Rule to be created.
        /// </summary>
        [Input("adminRuleCollectionId", required: true)]
        public Input<string> AdminRuleCollectionId { get; set; } = null!;

        /// <summary>
        /// A description of the Network Manager Admin Rule.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("destinationPortRanges")]
        private InputList<string>? _destinationPortRanges;

        /// <summary>
        /// A list of string specifies the destination port ranges. Specify one or more single port number or port ranges such as `1024-65535`. Use `*` to specify any port.
        /// </summary>
        public InputList<string> DestinationPortRanges
        {
            get => _destinationPortRanges ?? (_destinationPortRanges = new InputList<string>());
            set => _destinationPortRanges = value;
        }

        [Input("destinations")]
        private InputList<Inputs.NetworkManagerAdminRuleDestinationArgs>? _destinations;

        /// <summary>
        /// One or more `destination` blocks as defined below.
        /// </summary>
        public InputList<Inputs.NetworkManagerAdminRuleDestinationArgs> Destinations
        {
            get => _destinations ?? (_destinations = new InputList<Inputs.NetworkManagerAdminRuleDestinationArgs>());
            set => _destinations = value;
        }

        /// <summary>
        /// Indicates if the traffic matched against the rule in inbound or outbound. Possible values are `Inbound` and `Outbound`.
        /// </summary>
        [Input("direction", required: true)]
        public Input<string> Direction { get; set; } = null!;

        /// <summary>
        /// Specifies the name which should be used for this Network Manager Admin Rule. Changing this forces a new Network Manager Admin Rule to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The priority of the rule. Possible values are integers between `1` and `4096`. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.
        /// </summary>
        [Input("priority", required: true)]
        public Input<int> Priority { get; set; } = null!;

        /// <summary>
        /// Specifies which network protocol this Network Manager Admin Rule applies to. Possible values are `Ah`, `Any`, `Esp`, `Icmp`, `Tcp`, and `Udp`.
        /// </summary>
        [Input("protocol", required: true)]
        public Input<string> Protocol { get; set; } = null!;

        [Input("sourcePortRanges")]
        private InputList<string>? _sourcePortRanges;

        /// <summary>
        /// A list of string specifies the source port ranges. Specify one or more single port number or port ranges such as `1024-65535`. Use `*` to specify any port.
        /// </summary>
        public InputList<string> SourcePortRanges
        {
            get => _sourcePortRanges ?? (_sourcePortRanges = new InputList<string>());
            set => _sourcePortRanges = value;
        }

        [Input("sources")]
        private InputList<Inputs.NetworkManagerAdminRuleSourceArgs>? _sources;

        /// <summary>
        /// One or more `source` blocks as defined below.
        /// </summary>
        public InputList<Inputs.NetworkManagerAdminRuleSourceArgs> Sources
        {
            get => _sources ?? (_sources = new InputList<Inputs.NetworkManagerAdminRuleSourceArgs>());
            set => _sources = value;
        }

        public NetworkManagerAdminRuleArgs()
        {
        }
        public static new NetworkManagerAdminRuleArgs Empty => new NetworkManagerAdminRuleArgs();
    }

    public sealed class NetworkManagerAdminRuleState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies the action allowed for this Network Manager Admin Rule. Possible values are `Allow`, `AlwaysAllow`, and `Deny`.
        /// </summary>
        [Input("action")]
        public Input<string>? Action { get; set; }

        /// <summary>
        /// Specifies the ID of the Network Manager Admin Rule Collection. Changing this forces a new Network Manager Admin Rule to be created.
        /// </summary>
        [Input("adminRuleCollectionId")]
        public Input<string>? AdminRuleCollectionId { get; set; }

        /// <summary>
        /// A description of the Network Manager Admin Rule.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("destinationPortRanges")]
        private InputList<string>? _destinationPortRanges;

        /// <summary>
        /// A list of string specifies the destination port ranges. Specify one or more single port number or port ranges such as `1024-65535`. Use `*` to specify any port.
        /// </summary>
        public InputList<string> DestinationPortRanges
        {
            get => _destinationPortRanges ?? (_destinationPortRanges = new InputList<string>());
            set => _destinationPortRanges = value;
        }

        [Input("destinations")]
        private InputList<Inputs.NetworkManagerAdminRuleDestinationGetArgs>? _destinations;

        /// <summary>
        /// One or more `destination` blocks as defined below.
        /// </summary>
        public InputList<Inputs.NetworkManagerAdminRuleDestinationGetArgs> Destinations
        {
            get => _destinations ?? (_destinations = new InputList<Inputs.NetworkManagerAdminRuleDestinationGetArgs>());
            set => _destinations = value;
        }

        /// <summary>
        /// Indicates if the traffic matched against the rule in inbound or outbound. Possible values are `Inbound` and `Outbound`.
        /// </summary>
        [Input("direction")]
        public Input<string>? Direction { get; set; }

        /// <summary>
        /// Specifies the name which should be used for this Network Manager Admin Rule. Changing this forces a new Network Manager Admin Rule to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The priority of the rule. Possible values are integers between `1` and `4096`. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.
        /// </summary>
        [Input("priority")]
        public Input<int>? Priority { get; set; }

        /// <summary>
        /// Specifies which network protocol this Network Manager Admin Rule applies to. Possible values are `Ah`, `Any`, `Esp`, `Icmp`, `Tcp`, and `Udp`.
        /// </summary>
        [Input("protocol")]
        public Input<string>? Protocol { get; set; }

        [Input("sourcePortRanges")]
        private InputList<string>? _sourcePortRanges;

        /// <summary>
        /// A list of string specifies the source port ranges. Specify one or more single port number or port ranges such as `1024-65535`. Use `*` to specify any port.
        /// </summary>
        public InputList<string> SourcePortRanges
        {
            get => _sourcePortRanges ?? (_sourcePortRanges = new InputList<string>());
            set => _sourcePortRanges = value;
        }

        [Input("sources")]
        private InputList<Inputs.NetworkManagerAdminRuleSourceGetArgs>? _sources;

        /// <summary>
        /// One or more `source` blocks as defined below.
        /// </summary>
        public InputList<Inputs.NetworkManagerAdminRuleSourceGetArgs> Sources
        {
            get => _sources ?? (_sources = new InputList<Inputs.NetworkManagerAdminRuleSourceGetArgs>());
            set => _sources = value;
        }

        public NetworkManagerAdminRuleState()
        {
        }
        public static new NetworkManagerAdminRuleState Empty => new NetworkManagerAdminRuleState();
    }
}
