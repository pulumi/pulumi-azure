// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Automation
{
    /// <summary>
    /// Manages an Automation Wacher.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Azure = Pulumi.Azure;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var exampleResourceGroup = new Azure.Core.ResourceGroup("exampleResourceGroup", new()
    ///     {
    ///         Location = "West Europe",
    ///     });
    /// 
    ///     var exampleAccount = new Azure.Automation.Account("exampleAccount", new()
    ///     {
    ///         Location = exampleResourceGroup.Location,
    ///         ResourceGroupName = exampleResourceGroup.Name,
    ///         SkuName = "Basic",
    ///     });
    /// 
    ///     var exampleHybridRunbookWorkerGroup = new Azure.Automation.HybridRunbookWorkerGroup("exampleHybridRunbookWorkerGroup", new()
    ///     {
    ///         ResourceGroupName = exampleResourceGroup.Name,
    ///         AutomationAccountName = exampleAccount.Name,
    ///     });
    /// 
    ///     var exampleRunBook = new Azure.Automation.RunBook("exampleRunBook", new()
    ///     {
    ///         Location = exampleResourceGroup.Location,
    ///         ResourceGroupName = exampleResourceGroup.Name,
    ///         AutomationAccountName = exampleAccount.Name,
    ///         LogVerbose = true,
    ///         LogProgress = true,
    ///         Description = "This is an example runbook",
    ///         RunbookType = "PowerShellWorkflow",
    ///         PublishContentLink = new Azure.Automation.Inputs.RunBookPublishContentLinkArgs
    ///         {
    ///             Uri = "https://raw.githubusercontent.com/Azure/azure-quickstart-templates/c4935ffb69246a6058eb24f54640f53f69d3ac9f/101-automation-runbook-getvms/Runbooks/Get-AzureVMTutorial.ps1",
    ///         },
    ///     });
    /// 
    ///     var exampleWatcher = new Azure.Automation.Watcher("exampleWatcher", new()
    ///     {
    ///         AutomationAccountId = exampleAccount.Id,
    ///         Location = "West Europe",
    ///         ScriptName = exampleRunBook.Name,
    ///         ScriptRunOn = exampleHybridRunbookWorkerGroup.Name,
    ///         Description = "example-watcher desc",
    ///         ExecutionFrequencyInSeconds = 42,
    ///         Tags = 
    ///         {
    ///             { "foo", "bar" },
    ///         },
    ///         ScriptParameters = 
    ///         {
    ///             { "foo", "bar" },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Automation Watchers can be imported using the `resource id`, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import azure:automation/watcher:Watcher example /subscriptions/12345678-1234-9876-4563-123456789012/resourceGroups/group1/providers/Microsoft.Automation/automationAccounts/account1/watchers/watch1
    /// ```
    /// </summary>
    [AzureResourceType("azure:automation/watcher:Watcher")]
    public partial class Watcher : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The ID of Automation Account to manage this Watcher. Changing this forces a new Watcher to be created.
        /// </summary>
        [Output("automationAccountId")]
        public Output<string> AutomationAccountId { get; private set; } = null!;

        /// <summary>
        /// A description of this Automation Watcher.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// A string of etag assigned to this Automation Watcher.
        /// </summary>
        [Output("etag")]
        public Output<string?> Etag { get; private set; } = null!;

        /// <summary>
        /// Specify the frequency at which the watcher is invoked.
        /// </summary>
        [Output("executionFrequencyInSeconds")]
        public Output<int> ExecutionFrequencyInSeconds { get; private set; } = null!;

        /// <summary>
        /// The Azure Region where the Automation Watcher should exist. Changing this forces a new Automation Watcher to be created.
        /// </summary>
        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// The name which should be used for this Automation Watcher. Changing this forces a new Automation Watcher to be created.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Specify the name of an existing runbook this watcher is attached to. Changing this forces a new Automation to be created.
        /// </summary>
        [Output("scriptName")]
        public Output<string> ScriptName { get; private set; } = null!;

        /// <summary>
        /// Specifies a list of key-vaule parameters. Changing this forces a new Automation watcher to be created.
        /// </summary>
        [Output("scriptParameters")]
        public Output<ImmutableDictionary<string, string>?> ScriptParameters { get; private set; } = null!;

        /// <summary>
        /// Specify the name of the Hybrid work group the watcher will run on.
        /// </summary>
        [Output("scriptRunOn")]
        public Output<string> ScriptRunOn { get; private set; } = null!;

        /// <summary>
        /// The current status of the Automation Watcher.
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        /// <summary>
        /// A mapping of tags which should be assigned to the Automation Watcher.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;


        /// <summary>
        /// Create a Watcher resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Watcher(string name, WatcherArgs args, CustomResourceOptions? options = null)
            : base("azure:automation/watcher:Watcher", name, args ?? new WatcherArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Watcher(string name, Input<string> id, WatcherState? state = null, CustomResourceOptions? options = null)
            : base("azure:automation/watcher:Watcher", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Watcher resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Watcher Get(string name, Input<string> id, WatcherState? state = null, CustomResourceOptions? options = null)
        {
            return new Watcher(name, id, state, options);
        }
    }

    public sealed class WatcherArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of Automation Account to manage this Watcher. Changing this forces a new Watcher to be created.
        /// </summary>
        [Input("automationAccountId", required: true)]
        public Input<string> AutomationAccountId { get; set; } = null!;

        /// <summary>
        /// A description of this Automation Watcher.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// A string of etag assigned to this Automation Watcher.
        /// </summary>
        [Input("etag")]
        public Input<string>? Etag { get; set; }

        /// <summary>
        /// Specify the frequency at which the watcher is invoked.
        /// </summary>
        [Input("executionFrequencyInSeconds", required: true)]
        public Input<int> ExecutionFrequencyInSeconds { get; set; } = null!;

        /// <summary>
        /// The Azure Region where the Automation Watcher should exist. Changing this forces a new Automation Watcher to be created.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// The name which should be used for this Automation Watcher. Changing this forces a new Automation Watcher to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Specify the name of an existing runbook this watcher is attached to. Changing this forces a new Automation to be created.
        /// </summary>
        [Input("scriptName", required: true)]
        public Input<string> ScriptName { get; set; } = null!;

        [Input("scriptParameters")]
        private InputMap<string>? _scriptParameters;

        /// <summary>
        /// Specifies a list of key-vaule parameters. Changing this forces a new Automation watcher to be created.
        /// </summary>
        public InputMap<string> ScriptParameters
        {
            get => _scriptParameters ?? (_scriptParameters = new InputMap<string>());
            set => _scriptParameters = value;
        }

        /// <summary>
        /// Specify the name of the Hybrid work group the watcher will run on.
        /// </summary>
        [Input("scriptRunOn", required: true)]
        public Input<string> ScriptRunOn { get; set; } = null!;

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// A mapping of tags which should be assigned to the Automation Watcher.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public WatcherArgs()
        {
        }
        public static new WatcherArgs Empty => new WatcherArgs();
    }

    public sealed class WatcherState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of Automation Account to manage this Watcher. Changing this forces a new Watcher to be created.
        /// </summary>
        [Input("automationAccountId")]
        public Input<string>? AutomationAccountId { get; set; }

        /// <summary>
        /// A description of this Automation Watcher.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// A string of etag assigned to this Automation Watcher.
        /// </summary>
        [Input("etag")]
        public Input<string>? Etag { get; set; }

        /// <summary>
        /// Specify the frequency at which the watcher is invoked.
        /// </summary>
        [Input("executionFrequencyInSeconds")]
        public Input<int>? ExecutionFrequencyInSeconds { get; set; }

        /// <summary>
        /// The Azure Region where the Automation Watcher should exist. Changing this forces a new Automation Watcher to be created.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// The name which should be used for this Automation Watcher. Changing this forces a new Automation Watcher to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Specify the name of an existing runbook this watcher is attached to. Changing this forces a new Automation to be created.
        /// </summary>
        [Input("scriptName")]
        public Input<string>? ScriptName { get; set; }

        [Input("scriptParameters")]
        private InputMap<string>? _scriptParameters;

        /// <summary>
        /// Specifies a list of key-vaule parameters. Changing this forces a new Automation watcher to be created.
        /// </summary>
        public InputMap<string> ScriptParameters
        {
            get => _scriptParameters ?? (_scriptParameters = new InputMap<string>());
            set => _scriptParameters = value;
        }

        /// <summary>
        /// Specify the name of the Hybrid work group the watcher will run on.
        /// </summary>
        [Input("scriptRunOn")]
        public Input<string>? ScriptRunOn { get; set; }

        /// <summary>
        /// The current status of the Automation Watcher.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// A mapping of tags which should be assigned to the Automation Watcher.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public WatcherState()
        {
        }
        public static new WatcherState Empty => new WatcherState();
    }
}
