// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Automation
{
    /// <summary>
    /// Manages a Automation Python3 Package.
    /// 
    /// ## Import
    /// 
    /// Automation Python3 Packages can be imported using the `resource id`, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import azure:automation/python3Package:Python3Package example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Automation/automationAccounts/account1/python3Packages/pkg
    /// ```
    /// </summary>
    [AzureResourceType("azure:automation/python3Package:Python3Package")]
    public partial class Python3Package : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The name of the automation account in which the Python3 Package is created. Changing this forces a new resource to be created.
        /// </summary>
        [Output("automationAccountName")]
        public Output<string> AutomationAccountName { get; private set; } = null!;

        /// <summary>
        /// The URL of the python package. Changing this forces a new Automation Python3 Package to be created.
        /// </summary>
        [Output("contentUri")]
        public Output<string> ContentUri { get; private set; } = null!;

        /// <summary>
        /// Specify the version of the python3 package. The value should meet the system.version class format like `1.1.1`. Changing this forces a new Automation Python3 Package to be created.
        /// </summary>
        [Output("contentVersion")]
        public Output<string?> ContentVersion { get; private set; } = null!;

        /// <summary>
        /// Specify the hash algorithm used to hash the content of the python3 package. Changing this forces a new Automation Python3 Package to be created.
        /// </summary>
        [Output("hashAlgorithm")]
        public Output<string?> HashAlgorithm { get; private set; } = null!;

        /// <summary>
        /// Specity the hash value of the content. Changing this forces a new Automation Python3 Package to be created.
        /// </summary>
        [Output("hashValue")]
        public Output<string?> HashValue { get; private set; } = null!;

        /// <summary>
        /// The name which should be used for this Automation Python3 Package. Changing this forces a new Automation Python3 Package to be created.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The name of the resource group in which the Python3 Package is created. Changing this forces a new resource to be created.
        /// </summary>
        [Output("resourceGroupName")]
        public Output<string> ResourceGroupName { get; private set; } = null!;

        /// <summary>
        /// A mapping of tags which should be assigned to the Automation Python3 Package.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;


        /// <summary>
        /// Create a Python3Package resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Python3Package(string name, Python3PackageArgs args, CustomResourceOptions? options = null)
            : base("azure:automation/python3Package:Python3Package", name, args ?? new Python3PackageArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Python3Package(string name, Input<string> id, Python3PackageState? state = null, CustomResourceOptions? options = null)
            : base("azure:automation/python3Package:Python3Package", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Python3Package resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Python3Package Get(string name, Input<string> id, Python3PackageState? state = null, CustomResourceOptions? options = null)
        {
            return new Python3Package(name, id, state, options);
        }
    }

    public sealed class Python3PackageArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the automation account in which the Python3 Package is created. Changing this forces a new resource to be created.
        /// </summary>
        [Input("automationAccountName", required: true)]
        public Input<string> AutomationAccountName { get; set; } = null!;

        /// <summary>
        /// The URL of the python package. Changing this forces a new Automation Python3 Package to be created.
        /// </summary>
        [Input("contentUri", required: true)]
        public Input<string> ContentUri { get; set; } = null!;

        /// <summary>
        /// Specify the version of the python3 package. The value should meet the system.version class format like `1.1.1`. Changing this forces a new Automation Python3 Package to be created.
        /// </summary>
        [Input("contentVersion")]
        public Input<string>? ContentVersion { get; set; }

        /// <summary>
        /// Specify the hash algorithm used to hash the content of the python3 package. Changing this forces a new Automation Python3 Package to be created.
        /// </summary>
        [Input("hashAlgorithm")]
        public Input<string>? HashAlgorithm { get; set; }

        /// <summary>
        /// Specity the hash value of the content. Changing this forces a new Automation Python3 Package to be created.
        /// </summary>
        [Input("hashValue")]
        public Input<string>? HashValue { get; set; }

        /// <summary>
        /// The name which should be used for this Automation Python3 Package. Changing this forces a new Automation Python3 Package to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The name of the resource group in which the Python3 Package is created. Changing this forces a new resource to be created.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// A mapping of tags which should be assigned to the Automation Python3 Package.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public Python3PackageArgs()
        {
        }
        public static new Python3PackageArgs Empty => new Python3PackageArgs();
    }

    public sealed class Python3PackageState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the automation account in which the Python3 Package is created. Changing this forces a new resource to be created.
        /// </summary>
        [Input("automationAccountName")]
        public Input<string>? AutomationAccountName { get; set; }

        /// <summary>
        /// The URL of the python package. Changing this forces a new Automation Python3 Package to be created.
        /// </summary>
        [Input("contentUri")]
        public Input<string>? ContentUri { get; set; }

        /// <summary>
        /// Specify the version of the python3 package. The value should meet the system.version class format like `1.1.1`. Changing this forces a new Automation Python3 Package to be created.
        /// </summary>
        [Input("contentVersion")]
        public Input<string>? ContentVersion { get; set; }

        /// <summary>
        /// Specify the hash algorithm used to hash the content of the python3 package. Changing this forces a new Automation Python3 Package to be created.
        /// </summary>
        [Input("hashAlgorithm")]
        public Input<string>? HashAlgorithm { get; set; }

        /// <summary>
        /// Specity the hash value of the content. Changing this forces a new Automation Python3 Package to be created.
        /// </summary>
        [Input("hashValue")]
        public Input<string>? HashValue { get; set; }

        /// <summary>
        /// The name which should be used for this Automation Python3 Package. Changing this forces a new Automation Python3 Package to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The name of the resource group in which the Python3 Package is created. Changing this forces a new resource to be created.
        /// </summary>
        [Input("resourceGroupName")]
        public Input<string>? ResourceGroupName { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// A mapping of tags which should be assigned to the Automation Python3 Package.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public Python3PackageState()
        {
        }
        public static new Python3PackageState Empty => new Python3PackageState();
    }
}
