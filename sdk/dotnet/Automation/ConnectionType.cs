// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Automation
{
    /// <summary>
    /// Manages anAutomation Connection Type.
    /// 
    /// ## Import
    /// 
    /// Automations can be imported using the `resource id`, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import azure:automation/connectionType:ConnectionType example /subscriptions/12345678-1234-9876-4563-123456789012/resourceGroups/group1/providers/Microsoft.Automation/automationAccounts/account1/connectionTypes/type1
    /// ```
    /// </summary>
    [AzureResourceType("azure:automation/connectionType:ConnectionType")]
    public partial class ConnectionType : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The name of the automation account in which the Connection is created. Changing this forces a new resource to be created.
        /// </summary>
        [Output("automationAccountName")]
        public Output<string> AutomationAccountName { get; private set; } = null!;

        /// <summary>
        /// One or more `field` blocks as defined below. Changing this forces a new Automation to be created.
        /// </summary>
        [Output("fields")]
        public Output<ImmutableArray<Outputs.ConnectionTypeField>> Fields { get; private set; } = null!;

        /// <summary>
        /// Whether the connection type is global. Changing this forces a new Automation to be created.
        /// </summary>
        [Output("isGlobal")]
        public Output<bool?> IsGlobal { get; private set; } = null!;

        /// <summary>
        /// The name which should be used for this Automation Connection Type. Changing this forces a new Automation to be created.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The name of the Resource Group where the Automation should exist. Changing this forces a new Automation to be created.
        /// </summary>
        [Output("resourceGroupName")]
        public Output<string> ResourceGroupName { get; private set; } = null!;


        /// <summary>
        /// Create a ConnectionType resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ConnectionType(string name, ConnectionTypeArgs args, CustomResourceOptions? options = null)
            : base("azure:automation/connectionType:ConnectionType", name, args ?? new ConnectionTypeArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ConnectionType(string name, Input<string> id, ConnectionTypeState? state = null, CustomResourceOptions? options = null)
            : base("azure:automation/connectionType:ConnectionType", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ConnectionType resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ConnectionType Get(string name, Input<string> id, ConnectionTypeState? state = null, CustomResourceOptions? options = null)
        {
            return new ConnectionType(name, id, state, options);
        }
    }

    public sealed class ConnectionTypeArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the automation account in which the Connection is created. Changing this forces a new resource to be created.
        /// </summary>
        [Input("automationAccountName", required: true)]
        public Input<string> AutomationAccountName { get; set; } = null!;

        [Input("fields", required: true)]
        private InputList<Inputs.ConnectionTypeFieldArgs>? _fields;

        /// <summary>
        /// One or more `field` blocks as defined below. Changing this forces a new Automation to be created.
        /// </summary>
        public InputList<Inputs.ConnectionTypeFieldArgs> Fields
        {
            get => _fields ?? (_fields = new InputList<Inputs.ConnectionTypeFieldArgs>());
            set => _fields = value;
        }

        /// <summary>
        /// Whether the connection type is global. Changing this forces a new Automation to be created.
        /// </summary>
        [Input("isGlobal")]
        public Input<bool>? IsGlobal { get; set; }

        /// <summary>
        /// The name which should be used for this Automation Connection Type. Changing this forces a new Automation to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The name of the Resource Group where the Automation should exist. Changing this forces a new Automation to be created.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public ConnectionTypeArgs()
        {
        }
        public static new ConnectionTypeArgs Empty => new ConnectionTypeArgs();
    }

    public sealed class ConnectionTypeState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the automation account in which the Connection is created. Changing this forces a new resource to be created.
        /// </summary>
        [Input("automationAccountName")]
        public Input<string>? AutomationAccountName { get; set; }

        [Input("fields")]
        private InputList<Inputs.ConnectionTypeFieldGetArgs>? _fields;

        /// <summary>
        /// One or more `field` blocks as defined below. Changing this forces a new Automation to be created.
        /// </summary>
        public InputList<Inputs.ConnectionTypeFieldGetArgs> Fields
        {
            get => _fields ?? (_fields = new InputList<Inputs.ConnectionTypeFieldGetArgs>());
            set => _fields = value;
        }

        /// <summary>
        /// Whether the connection type is global. Changing this forces a new Automation to be created.
        /// </summary>
        [Input("isGlobal")]
        public Input<bool>? IsGlobal { get; set; }

        /// <summary>
        /// The name which should be used for this Automation Connection Type. Changing this forces a new Automation to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The name of the Resource Group where the Automation should exist. Changing this forces a new Automation to be created.
        /// </summary>
        [Input("resourceGroupName")]
        public Input<string>? ResourceGroupName { get; set; }

        public ConnectionTypeState()
        {
        }
        public static new ConnectionTypeState Empty => new ConnectionTypeState();
    }
}
