// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Automation.Inputs
{

    public sealed class SoftwareUpdateConfigurationScheduleArgs : global::Pulumi.ResourceArgs
    {
        [Input("advancedMonthDays")]
        private InputList<int>? _advancedMonthDays;

        /// <summary>
        /// List of days of the month that the job should execute on. Must be between `1` and `31`. `-1` for last day of the month. Only valid when frequency is `Month`.
        /// </summary>
        public InputList<int> AdvancedMonthDays
        {
            get => _advancedMonthDays ?? (_advancedMonthDays = new InputList<int>());
            set => _advancedMonthDays = value;
        }

        [Input("advancedWeekDays")]
        private InputList<string>? _advancedWeekDays;

        /// <summary>
        /// List of days of the week that the job should execute on. Only valid when frequency is `Week`. Possible values include `Monday`, `Tuesday`, `Wednesday`, `Thursday`, `Friday`, `Saturday`, and `Sunday`.
        /// </summary>
        public InputList<string> AdvancedWeekDays
        {
            get => _advancedWeekDays ?? (_advancedWeekDays = new InputList<string>());
            set => _advancedWeekDays = value;
        }

        [Input("creationTime")]
        public Input<string>? CreationTime { get; set; }

        /// <summary>
        /// A description for this Schedule.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The end time of the schedule.
        /// </summary>
        [Input("expiryTime")]
        public Input<string>? ExpiryTime { get; set; }

        [Input("expiryTimeOffsetMinutes")]
        public Input<double>? ExpiryTimeOffsetMinutes { get; set; }

        /// <summary>
        /// The frequency of the schedule. - can be either `OneTime`, `Day`, `Hour`, `Week`, or `Month`.
        /// </summary>
        [Input("frequency", required: true)]
        public Input<string> Frequency { get; set; } = null!;

        /// <summary>
        /// The number of `frequency`s between runs. Only valid when frequency is `Day`, `Hour`, `Week`, or `Month`.
        /// </summary>
        [Input("interval")]
        public Input<int>? Interval { get; set; }

        /// <summary>
        /// Whether the schedule is enabled. Defaults to `true`.
        /// </summary>
        [Input("isEnabled")]
        public Input<bool>? IsEnabled { get; set; }

        [Input("lastModifiedTime")]
        public Input<string>? LastModifiedTime { get; set; }

        [Input("monthlyOccurrences")]
        private InputList<Inputs.SoftwareUpdateConfigurationScheduleMonthlyOccurrenceArgs>? _monthlyOccurrences;

        /// <summary>
        /// List of `monthly_occurrence` blocks as defined below to specifies occurrences of days within a month. Only valid when frequency is `Month`. The `monthly_occurrence` block supports fields as defined below.
        /// </summary>
        public InputList<Inputs.SoftwareUpdateConfigurationScheduleMonthlyOccurrenceArgs> MonthlyOccurrences
        {
            get => _monthlyOccurrences ?? (_monthlyOccurrences = new InputList<Inputs.SoftwareUpdateConfigurationScheduleMonthlyOccurrenceArgs>());
            set => _monthlyOccurrences = value;
        }

        [Input("nextRun")]
        public Input<string>? NextRun { get; set; }

        [Input("nextRunOffsetMinutes")]
        public Input<double>? NextRunOffsetMinutes { get; set; }

        /// <summary>
        /// Start time of the schedule. Must be at least five minutes in the future. Defaults to seven minutes in the future from the time the resource is created.
        /// </summary>
        [Input("startTime")]
        public Input<string>? StartTime { get; set; }

        [Input("startTimeOffsetMinutes")]
        public Input<double>? StartTimeOffsetMinutes { get; set; }

        /// <summary>
        /// The timezone of the start time. Defaults to `Etc/UTC`. For possible values see: &lt;https://docs.microsoft.com/en-us/rest/api/maps/timezone/gettimezoneenumwindows&gt;
        /// </summary>
        [Input("timeZone")]
        public Input<string>? TimeZone { get; set; }

        public SoftwareUpdateConfigurationScheduleArgs()
        {
        }
        public static new SoftwareUpdateConfigurationScheduleArgs Empty => new SoftwareUpdateConfigurationScheduleArgs();
    }
}
