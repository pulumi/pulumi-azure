// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Automation.Inputs
{

    public sealed class SoftwareUpdateConfigurationLinuxArgs : global::Pulumi.ResourceArgs
    {
        [Input("classificationIncluded")]
        public Input<string>? ClassificationIncluded { get; set; }

        [Input("classificationsIncludeds")]
        private InputList<string>? _classificationsIncludeds;

        /// <summary>
        /// Specifies the list of update classifications included in the Software Update Configuration. Possible values are `Unclassified`, `Critical`, `Security` and `Other`.
        /// </summary>
        public InputList<string> ClassificationsIncludeds
        {
            get => _classificationsIncludeds ?? (_classificationsIncludeds = new InputList<string>());
            set => _classificationsIncludeds = value;
        }

        [Input("excludedPackages")]
        private InputList<string>? _excludedPackages;

        /// <summary>
        /// Specifies a list of packages to excluded from the Software Update Configuration.
        /// </summary>
        public InputList<string> ExcludedPackages
        {
            get => _excludedPackages ?? (_excludedPackages = new InputList<string>());
            set => _excludedPackages = value;
        }

        [Input("includedPackages")]
        private InputList<string>? _includedPackages;

        /// <summary>
        /// Specifies a list of packages to included from the Software Update Configuration.
        /// </summary>
        public InputList<string> IncludedPackages
        {
            get => _includedPackages ?? (_includedPackages = new InputList<string>());
            set => _includedPackages = value;
        }

        /// <summary>
        /// Specifies the reboot settings after software update, possible values are `IfRequired`, `Never`, `RebootOnly` and `Always`. Defaults to `IfRequired`.
        /// </summary>
        [Input("reboot")]
        public Input<string>? Reboot { get; set; }

        public SoftwareUpdateConfigurationLinuxArgs()
        {
        }
        public static new SoftwareUpdateConfigurationLinuxArgs Empty => new SoftwareUpdateConfigurationLinuxArgs();
    }
}
