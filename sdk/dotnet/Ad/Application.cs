// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.AD
{
    /// <summary>
    /// &gt; This content is derived from https://github.com/terraform-providers/terraform-provider-azurerm/blob/master/website/docs/r/azuread_application.html.markdown.
    /// </summary>
    public partial class Application : Pulumi.CustomResource
    {
        /// <summary>
        /// The Application ID.
        /// </summary>
        [Output("applicationId")]
        public Output<string> ApplicationId { get; private set; } = null!;

        /// <summary>
        /// Is this Azure AD Application available to other tenants? Defaults to `false`.
        /// </summary>
        [Output("availableToOtherTenants")]
        public Output<bool?> AvailableToOtherTenants { get; private set; } = null!;

        /// <summary>
        /// The URL to the application's home page. If no homepage is specified this defaults to `https://{name}`.
        /// </summary>
        [Output("homepage")]
        public Output<string> Homepage { get; private set; } = null!;

        /// <summary>
        /// A list of user-defined URI(s) that uniquely identify a Web application within it's Azure AD tenant, or within a verified custom domain if the application is multi-tenant.
        /// </summary>
        [Output("identifierUris")]
        public Output<ImmutableArray<string>> IdentifierUris { get; private set; } = null!;

        /// <summary>
        /// The display name for the application.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Does this Azure AD Application allow OAuth2.0 implicit flow tokens? Defaults to `false`.
        /// </summary>
        [Output("oauth2AllowImplicitFlow")]
        public Output<bool?> Oauth2AllowImplicitFlow { get; private set; } = null!;

        /// <summary>
        /// A list of URLs that user tokens are sent to for sign in, or the redirect URIs that OAuth 2.0 authorization codes and access tokens are sent to.
        /// </summary>
        [Output("replyUrls")]
        public Output<ImmutableArray<string>> ReplyUrls { get; private set; } = null!;


        /// <summary>
        /// Create a Application resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Application(string name, ApplicationArgs? args = null, CustomResourceOptions? options = null)
            : base("azure:ad/application:Application", name, args ?? ResourceArgs.Empty, MakeResourceOptions(options, ""))
        {
        }

        private Application(string name, Input<string> id, ApplicationState? state = null, CustomResourceOptions? options = null)
            : base("azure:ad/application:Application", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Application resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Application Get(string name, Input<string> id, ApplicationState? state = null, CustomResourceOptions? options = null)
        {
            return new Application(name, id, state, options);
        }
    }

    public sealed class ApplicationArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Is this Azure AD Application available to other tenants? Defaults to `false`.
        /// </summary>
        [Input("availableToOtherTenants")]
        public Input<bool>? AvailableToOtherTenants { get; set; }

        /// <summary>
        /// The URL to the application's home page. If no homepage is specified this defaults to `https://{name}`.
        /// </summary>
        [Input("homepage")]
        public Input<string>? Homepage { get; set; }

        [Input("identifierUris")]
        private InputList<string>? _identifierUris;

        /// <summary>
        /// A list of user-defined URI(s) that uniquely identify a Web application within it's Azure AD tenant, or within a verified custom domain if the application is multi-tenant.
        /// </summary>
        public InputList<string> IdentifierUris
        {
            get => _identifierUris ?? (_identifierUris = new InputList<string>());
            set => _identifierUris = value;
        }

        /// <summary>
        /// The display name for the application.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Does this Azure AD Application allow OAuth2.0 implicit flow tokens? Defaults to `false`.
        /// </summary>
        [Input("oauth2AllowImplicitFlow")]
        public Input<bool>? Oauth2AllowImplicitFlow { get; set; }

        [Input("replyUrls")]
        private InputList<string>? _replyUrls;

        /// <summary>
        /// A list of URLs that user tokens are sent to for sign in, or the redirect URIs that OAuth 2.0 authorization codes and access tokens are sent to.
        /// </summary>
        public InputList<string> ReplyUrls
        {
            get => _replyUrls ?? (_replyUrls = new InputList<string>());
            set => _replyUrls = value;
        }

        public ApplicationArgs()
        {
        }
    }

    public sealed class ApplicationState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The Application ID.
        /// </summary>
        [Input("applicationId")]
        public Input<string>? ApplicationId { get; set; }

        /// <summary>
        /// Is this Azure AD Application available to other tenants? Defaults to `false`.
        /// </summary>
        [Input("availableToOtherTenants")]
        public Input<bool>? AvailableToOtherTenants { get; set; }

        /// <summary>
        /// The URL to the application's home page. If no homepage is specified this defaults to `https://{name}`.
        /// </summary>
        [Input("homepage")]
        public Input<string>? Homepage { get; set; }

        [Input("identifierUris")]
        private InputList<string>? _identifierUris;

        /// <summary>
        /// A list of user-defined URI(s) that uniquely identify a Web application within it's Azure AD tenant, or within a verified custom domain if the application is multi-tenant.
        /// </summary>
        public InputList<string> IdentifierUris
        {
            get => _identifierUris ?? (_identifierUris = new InputList<string>());
            set => _identifierUris = value;
        }

        /// <summary>
        /// The display name for the application.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Does this Azure AD Application allow OAuth2.0 implicit flow tokens? Defaults to `false`.
        /// </summary>
        [Input("oauth2AllowImplicitFlow")]
        public Input<bool>? Oauth2AllowImplicitFlow { get; set; }

        [Input("replyUrls")]
        private InputList<string>? _replyUrls;

        /// <summary>
        /// A list of URLs that user tokens are sent to for sign in, or the redirect URIs that OAuth 2.0 authorization codes and access tokens are sent to.
        /// </summary>
        public InputList<string> ReplyUrls
        {
            get => _replyUrls ?? (_replyUrls = new InputList<string>());
            set => _replyUrls = value;
        }

        public ApplicationState()
        {
        }
    }
}
