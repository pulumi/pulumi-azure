// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.AD
{
    /// <summary>
    /// &gt; This content is derived from https://github.com/terraform-providers/terraform-provider-azurerm/blob/master/website/docs/r/azuread_service_principal.html.markdown.
    /// </summary>
    public partial class ServicePrincipal : Pulumi.CustomResource
    {
        /// <summary>
        /// The ID of the Azure AD Application for which to create a Service Principal.
        /// </summary>
        [Output("applicationId")]
        public Output<string> ApplicationId { get; private set; } = null!;

        /// <summary>
        /// The Display Name of the Azure Active Directory Application associated with this Service Principal.
        /// </summary>
        [Output("displayName")]
        public Output<string> DisplayName { get; private set; } = null!;


        /// <summary>
        /// Create a ServicePrincipal resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ServicePrincipal(string name, ServicePrincipalArgs args, CustomResourceOptions? options = null)
            : base("azure:ad/servicePrincipal:ServicePrincipal", name, args, MakeResourceOptions(options, ""))
        {
        }

        private ServicePrincipal(string name, Input<string> id, ServicePrincipalState? state = null, CustomResourceOptions? options = null)
            : base("azure:ad/servicePrincipal:ServicePrincipal", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ServicePrincipal resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ServicePrincipal Get(string name, Input<string> id, ServicePrincipalState? state = null, CustomResourceOptions? options = null)
        {
            return new ServicePrincipal(name, id, state, options);
        }
    }

    public sealed class ServicePrincipalArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the Azure AD Application for which to create a Service Principal.
        /// </summary>
        [Input("applicationId", required: true)]
        public Input<string> ApplicationId { get; set; } = null!;

        public ServicePrincipalArgs()
        {
        }
    }

    public sealed class ServicePrincipalState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the Azure AD Application for which to create a Service Principal.
        /// </summary>
        [Input("applicationId")]
        public Input<string>? ApplicationId { get; set; }

        /// <summary>
        /// The Display Name of the Azure Active Directory Application associated with this Service Principal.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        public ServicePrincipalState()
        {
        }
    }
}
