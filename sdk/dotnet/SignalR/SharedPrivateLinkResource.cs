// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.SignalR
{
    /// <summary>
    /// Manages the Shared Private Link Resource for a Signalr service.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using Azure = Pulumi.Azure;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var current = Azure.Core.GetClientConfig.Invoke();
    /// 
    ///     var exampleResourceGroup = new Azure.Core.ResourceGroup("exampleResourceGroup", new()
    ///     {
    ///         Location = "east us",
    ///     });
    /// 
    ///     var exampleKeyVault = new Azure.KeyVault.KeyVault("exampleKeyVault", new()
    ///     {
    ///         Location = exampleResourceGroup.Location,
    ///         ResourceGroupName = exampleResourceGroup.Name,
    ///         TenantId = current.Apply(getClientConfigResult =&gt; getClientConfigResult.TenantId),
    ///         SkuName = "standard",
    ///         SoftDeleteRetentionDays = 7,
    ///         AccessPolicies = new[]
    ///         {
    ///             new Azure.KeyVault.Inputs.KeyVaultAccessPolicyArgs
    ///             {
    ///                 TenantId = current.Apply(getClientConfigResult =&gt; getClientConfigResult.TenantId),
    ///                 ObjectId = current.Apply(getClientConfigResult =&gt; getClientConfigResult.ObjectId),
    ///                 CertificatePermissions = new[]
    ///                 {
    ///                     "ManageContacts",
    ///                 },
    ///                 KeyPermissions = new[]
    ///                 {
    ///                     "Create",
    ///                 },
    ///                 SecretPermissions = new[]
    ///                 {
    ///                     "Set",
    ///                 },
    ///             },
    ///         },
    ///     });
    /// 
    ///     var test = new Azure.SignalR.Service("test", new()
    ///     {
    ///         Location = azurerm_resource_group.Test.Location,
    ///         ResourceGroupName = azurerm_resource_group.Test.Name,
    ///         Sku = new Azure.SignalR.Inputs.ServiceSkuArgs
    ///         {
    ///             Name = "Standard_S1",
    ///             Capacity = 1,
    ///         },
    ///     });
    /// 
    ///     var exampleSharedPrivateLinkResource = new Azure.SignalR.SharedPrivateLinkResource("exampleSharedPrivateLinkResource", new()
    ///     {
    ///         SignalrServiceId = azurerm_signalr_service.Example.Id,
    ///         SubResourceName = "vault",
    ///         TargetResourceId = exampleKeyVault.Id,
    ///     });
    /// 
    /// });
    /// ```
    /// ## Attributes Reference:
    /// 
    /// The following attributes are exported:
    /// 
    /// * `id` - The ID of the Signalr Shared Private Link resource.
    /// 
    /// * `status` - The status of a private endpoint connection. Possible values are `Pending`, `Approved`, `Rejected` or `Disconnected`.
    /// 
    /// ## Import
    /// 
    /// Signalr Shared Private Link Resource can be imported using the `resource id`, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import azure:signalr/sharedPrivateLinkResource:SharedPrivateLinkResource example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.SignalRService/signalR/signalr1/sharedPrivateLinkResources/resource1
    /// ```
    /// </summary>
    [AzureResourceType("azure:signalr/sharedPrivateLinkResource:SharedPrivateLinkResource")]
    public partial class SharedPrivateLinkResource : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The name of the Signalr Shared Private Link Resource. Changing this forces a new resource to be created.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The request message for requesting approval of the Shared Private Link Enabled Remote Resource.
        /// </summary>
        [Output("requestMessage")]
        public Output<string?> RequestMessage { get; private set; } = null!;

        /// <summary>
        /// The id of the Signalr Service. Changing this forces a new resource to be created.
        /// </summary>
        [Output("signalrServiceId")]
        public Output<string> SignalrServiceId { get; private set; } = null!;

        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        /// <summary>
        /// The sub resource name which the Signalr Private Endpoint can connect to. Possible values are `sites`, `vault`. Changing this forces a new resource to be created.
        /// </summary>
        [Output("subResourceName")]
        public Output<string> SubResourceName { get; private set; } = null!;

        /// <summary>
        /// The ID of the Shared Private Link Enabled Remote Resource which this Signalr Private Endpoint should be connected to. Changing this forces a new resource to be created.
        /// </summary>
        [Output("targetResourceId")]
        public Output<string> TargetResourceId { get; private set; } = null!;


        /// <summary>
        /// Create a SharedPrivateLinkResource resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public SharedPrivateLinkResource(string name, SharedPrivateLinkResourceArgs args, CustomResourceOptions? options = null)
            : base("azure:signalr/sharedPrivateLinkResource:SharedPrivateLinkResource", name, args ?? new SharedPrivateLinkResourceArgs(), MakeResourceOptions(options, ""))
        {
        }

        private SharedPrivateLinkResource(string name, Input<string> id, SharedPrivateLinkResourceState? state = null, CustomResourceOptions? options = null)
            : base("azure:signalr/sharedPrivateLinkResource:SharedPrivateLinkResource", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing SharedPrivateLinkResource resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static SharedPrivateLinkResource Get(string name, Input<string> id, SharedPrivateLinkResourceState? state = null, CustomResourceOptions? options = null)
        {
            return new SharedPrivateLinkResource(name, id, state, options);
        }
    }

    public sealed class SharedPrivateLinkResourceArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the Signalr Shared Private Link Resource. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The request message for requesting approval of the Shared Private Link Enabled Remote Resource.
        /// </summary>
        [Input("requestMessage")]
        public Input<string>? RequestMessage { get; set; }

        /// <summary>
        /// The id of the Signalr Service. Changing this forces a new resource to be created.
        /// </summary>
        [Input("signalrServiceId", required: true)]
        public Input<string> SignalrServiceId { get; set; } = null!;

        /// <summary>
        /// The sub resource name which the Signalr Private Endpoint can connect to. Possible values are `sites`, `vault`. Changing this forces a new resource to be created.
        /// </summary>
        [Input("subResourceName", required: true)]
        public Input<string> SubResourceName { get; set; } = null!;

        /// <summary>
        /// The ID of the Shared Private Link Enabled Remote Resource which this Signalr Private Endpoint should be connected to. Changing this forces a new resource to be created.
        /// </summary>
        [Input("targetResourceId", required: true)]
        public Input<string> TargetResourceId { get; set; } = null!;

        public SharedPrivateLinkResourceArgs()
        {
        }
        public static new SharedPrivateLinkResourceArgs Empty => new SharedPrivateLinkResourceArgs();
    }

    public sealed class SharedPrivateLinkResourceState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the Signalr Shared Private Link Resource. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The request message for requesting approval of the Shared Private Link Enabled Remote Resource.
        /// </summary>
        [Input("requestMessage")]
        public Input<string>? RequestMessage { get; set; }

        /// <summary>
        /// The id of the Signalr Service. Changing this forces a new resource to be created.
        /// </summary>
        [Input("signalrServiceId")]
        public Input<string>? SignalrServiceId { get; set; }

        [Input("status")]
        public Input<string>? Status { get; set; }

        /// <summary>
        /// The sub resource name which the Signalr Private Endpoint can connect to. Possible values are `sites`, `vault`. Changing this forces a new resource to be created.
        /// </summary>
        [Input("subResourceName")]
        public Input<string>? SubResourceName { get; set; }

        /// <summary>
        /// The ID of the Shared Private Link Enabled Remote Resource which this Signalr Private Endpoint should be connected to. Changing this forces a new resource to be created.
        /// </summary>
        [Input("targetResourceId")]
        public Input<string>? TargetResourceId { get; set; }

        public SharedPrivateLinkResourceState()
        {
        }
        public static new SharedPrivateLinkResourceState Empty => new SharedPrivateLinkResourceState();
    }
}
