// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.MSSql
{
    /// <summary>
    /// Manages Start Stop Schedules for an MS SQL Managed Instance.
    /// 
    /// ## Import
    /// 
    /// MS SQL Managed Instance Start Stop Schedule can be imported using the `resource id`, e.g.
    /// 
    /// ```sh
    /// $ pulumi import azure:mssql/managedInstanceStartStopSchedule:ManagedInstanceStartStopSchedule example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resourceGroup1/providers/Microsoft.Sql/managedInstances/managedInstance1/startStopSchedules/default
    /// ```
    /// </summary>
    [AzureResourceType("azure:mssql/managedInstanceStartStopSchedule:ManagedInstanceStartStopSchedule")]
    public partial class ManagedInstanceStartStopSchedule : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Specifies the description of the schedule.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// Specifies the ID of the Managed Instance. Changing this forces a new Sql Start Stop Managed Instance Schedule to be created.
        /// </summary>
        [Output("managedInstanceId")]
        public Output<string> ManagedInstanceId { get; private set; } = null!;

        /// <summary>
        /// Timestamp when the next action will be executed in the corresponding schedule time zone.
        /// </summary>
        [Output("nextExecutionTime")]
        public Output<string> NextExecutionTime { get; private set; } = null!;

        /// <summary>
        /// Next action to be executed (Start or Stop).
        /// </summary>
        [Output("nextRunAction")]
        public Output<string> NextRunAction { get; private set; } = null!;

        /// <summary>
        /// A `schedule` block as defined below.
        /// </summary>
        [Output("schedules")]
        public Output<ImmutableArray<Outputs.ManagedInstanceStartStopScheduleSchedule>> Schedules { get; private set; } = null!;

        /// <summary>
        /// Specifies the time zone of the schedule. Defaults to `UTC`.
        /// </summary>
        [Output("timezoneId")]
        public Output<string?> TimezoneId { get; private set; } = null!;


        /// <summary>
        /// Create a ManagedInstanceStartStopSchedule resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ManagedInstanceStartStopSchedule(string name, ManagedInstanceStartStopScheduleArgs args, CustomResourceOptions? options = null)
            : base("azure:mssql/managedInstanceStartStopSchedule:ManagedInstanceStartStopSchedule", name, args ?? new ManagedInstanceStartStopScheduleArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ManagedInstanceStartStopSchedule(string name, Input<string> id, ManagedInstanceStartStopScheduleState? state = null, CustomResourceOptions? options = null)
            : base("azure:mssql/managedInstanceStartStopSchedule:ManagedInstanceStartStopSchedule", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ManagedInstanceStartStopSchedule resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ManagedInstanceStartStopSchedule Get(string name, Input<string> id, ManagedInstanceStartStopScheduleState? state = null, CustomResourceOptions? options = null)
        {
            return new ManagedInstanceStartStopSchedule(name, id, state, options);
        }
    }

    public sealed class ManagedInstanceStartStopScheduleArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies the description of the schedule.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Specifies the ID of the Managed Instance. Changing this forces a new Sql Start Stop Managed Instance Schedule to be created.
        /// </summary>
        [Input("managedInstanceId", required: true)]
        public Input<string> ManagedInstanceId { get; set; } = null!;

        [Input("schedules", required: true)]
        private InputList<Inputs.ManagedInstanceStartStopScheduleScheduleArgs>? _schedules;

        /// <summary>
        /// A `schedule` block as defined below.
        /// </summary>
        public InputList<Inputs.ManagedInstanceStartStopScheduleScheduleArgs> Schedules
        {
            get => _schedules ?? (_schedules = new InputList<Inputs.ManagedInstanceStartStopScheduleScheduleArgs>());
            set => _schedules = value;
        }

        /// <summary>
        /// Specifies the time zone of the schedule. Defaults to `UTC`.
        /// </summary>
        [Input("timezoneId")]
        public Input<string>? TimezoneId { get; set; }

        public ManagedInstanceStartStopScheduleArgs()
        {
        }
        public static new ManagedInstanceStartStopScheduleArgs Empty => new ManagedInstanceStartStopScheduleArgs();
    }

    public sealed class ManagedInstanceStartStopScheduleState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies the description of the schedule.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Specifies the ID of the Managed Instance. Changing this forces a new Sql Start Stop Managed Instance Schedule to be created.
        /// </summary>
        [Input("managedInstanceId")]
        public Input<string>? ManagedInstanceId { get; set; }

        /// <summary>
        /// Timestamp when the next action will be executed in the corresponding schedule time zone.
        /// </summary>
        [Input("nextExecutionTime")]
        public Input<string>? NextExecutionTime { get; set; }

        /// <summary>
        /// Next action to be executed (Start or Stop).
        /// </summary>
        [Input("nextRunAction")]
        public Input<string>? NextRunAction { get; set; }

        [Input("schedules")]
        private InputList<Inputs.ManagedInstanceStartStopScheduleScheduleGetArgs>? _schedules;

        /// <summary>
        /// A `schedule` block as defined below.
        /// </summary>
        public InputList<Inputs.ManagedInstanceStartStopScheduleScheduleGetArgs> Schedules
        {
            get => _schedules ?? (_schedules = new InputList<Inputs.ManagedInstanceStartStopScheduleScheduleGetArgs>());
            set => _schedules = value;
        }

        /// <summary>
        /// Specifies the time zone of the schedule. Defaults to `UTC`.
        /// </summary>
        [Input("timezoneId")]
        public Input<string>? TimezoneId { get; set; }

        public ManagedInstanceStartStopScheduleState()
        {
        }
        public static new ManagedInstanceStartStopScheduleState Empty => new ManagedInstanceStartStopScheduleState();
    }
}
