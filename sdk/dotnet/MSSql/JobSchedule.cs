// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.MSSql
{
    /// <summary>
    /// Manages an Elastic Job Schedule.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Azure = Pulumi.Azure;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Azure.Core.ResourceGroup("example", new()
    ///     {
    ///         Name = "example-resource-group",
    ///         Location = "East US",
    ///     });
    /// 
    ///     var exampleServer = new Azure.MSSql.Server("example", new()
    ///     {
    ///         Name = "example-server",
    ///         ResourceGroupName = example.Name,
    ///         Location = example.Location,
    ///         Version = "12.0",
    ///         AdministratorLogin = "4dm1n157r470r",
    ///         AdministratorLoginPassword = "4-v3ry-53cr37-p455w0rd",
    ///     });
    /// 
    ///     var exampleDatabase = new Azure.MSSql.Database("example", new()
    ///     {
    ///         Name = "example-db",
    ///         ServerId = exampleServer.Id,
    ///         Collation = "SQL_Latin1_General_CP1_CI_AS",
    ///         SkuName = "S1",
    ///     });
    /// 
    ///     var exampleJobAgent = new Azure.MSSql.JobAgent("example", new()
    ///     {
    ///         Name = "example-job-agent",
    ///         Location = example.Location,
    ///         DatabaseId = exampleDatabase.Id,
    ///     });
    /// 
    ///     var exampleJobCredential = new Azure.MSSql.JobCredential("example", new()
    ///     {
    ///         Name = "example-job-credential",
    ///         JobAgentId = exampleJobAgent.Id,
    ///         Username = "my-username",
    ///         Password = "MyP4ssw0rd!!!",
    ///     });
    /// 
    ///     var exampleJob = new Azure.MSSql.Job("example", new()
    ///     {
    ///         Name = "example-job",
    ///         JobAgentId = exampleJobAgent.Id,
    ///     });
    /// 
    ///     var exampleJobSchedule = new Azure.MSSql.JobSchedule("example", new()
    ///     {
    ///         JobId = exampleJob.Id,
    ///         Type = "Recurring",
    ///         Enabled = true,
    ///         EndTime = "2025-12-01T00:00:00Z",
    ///         Interval = "PT5M",
    ///         StartTime = "2025-01-01T00:00:00Z",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## API Providers
    /// 
    /// &lt;!-- This section is generated, changes will be overwritten --&gt;
    /// This resource uses the following Azure API Providers:
    /// 
    /// * `Microsoft.Sql`: 2023-08-01-preview
    /// 
    /// ## Import
    /// 
    /// Elastic Job Schedules can be imported using the `resource id`, e.g.
    /// 
    /// ```sh
    /// $ pulumi import azure:mssql/jobSchedule:JobSchedule example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.Sql/servers/myserver1/jobAgents/myjobagent1/jobs/myjob1
    /// ```
    /// </summary>
    [AzureResourceType("azure:mssql/jobSchedule:JobSchedule")]
    public partial class JobSchedule : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Should the Elastic Job Schedule be enabled? Defaults to `false`.
        /// 
        /// &gt; **Note:** When `type` is set to `Once` and `enabled` is set to `true`, it's recommended to add `enabled` to `ignore_changes`. This is because Azure will set `enabled` to `false` once the job has executed.
        /// </summary>
        [Output("enabled")]
        public Output<bool> Enabled { get; private set; } = null!;

        /// <summary>
        /// The end time of the schedule. Must be in RFC3339 format.
        /// </summary>
        [Output("endTime")]
        public Output<string> EndTime { get; private set; } = null!;

        /// <summary>
        /// The interval between job executions. Must be in ISO8601 duration format.
        /// </summary>
        [Output("interval")]
        public Output<string?> Interval { get; private set; } = null!;

        /// <summary>
        /// The ID of the Elastic Job. Changing this forces a new Elastic Job Schedule to be created.
        /// </summary>
        [Output("jobId")]
        public Output<string> JobId { get; private set; } = null!;

        /// <summary>
        /// The start time of the schedule. Must be in RFC3339 format.
        /// </summary>
        [Output("startTime")]
        public Output<string> StartTime { get; private set; } = null!;

        /// <summary>
        /// The type of schedule. Possible values are `Once` and `Recurring`.
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a JobSchedule resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public JobSchedule(string name, JobScheduleArgs args, CustomResourceOptions? options = null)
            : base("azure:mssql/jobSchedule:JobSchedule", name, args ?? new JobScheduleArgs(), MakeResourceOptions(options, ""))
        {
        }

        private JobSchedule(string name, Input<string> id, JobScheduleState? state = null, CustomResourceOptions? options = null)
            : base("azure:mssql/jobSchedule:JobSchedule", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing JobSchedule resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static JobSchedule Get(string name, Input<string> id, JobScheduleState? state = null, CustomResourceOptions? options = null)
        {
            return new JobSchedule(name, id, state, options);
        }
    }

    public sealed class JobScheduleArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Should the Elastic Job Schedule be enabled? Defaults to `false`.
        /// 
        /// &gt; **Note:** When `type` is set to `Once` and `enabled` is set to `true`, it's recommended to add `enabled` to `ignore_changes`. This is because Azure will set `enabled` to `false` once the job has executed.
        /// </summary>
        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        /// <summary>
        /// The end time of the schedule. Must be in RFC3339 format.
        /// </summary>
        [Input("endTime")]
        public Input<string>? EndTime { get; set; }

        /// <summary>
        /// The interval between job executions. Must be in ISO8601 duration format.
        /// </summary>
        [Input("interval")]
        public Input<string>? Interval { get; set; }

        /// <summary>
        /// The ID of the Elastic Job. Changing this forces a new Elastic Job Schedule to be created.
        /// </summary>
        [Input("jobId", required: true)]
        public Input<string> JobId { get; set; } = null!;

        /// <summary>
        /// The start time of the schedule. Must be in RFC3339 format.
        /// </summary>
        [Input("startTime")]
        public Input<string>? StartTime { get; set; }

        /// <summary>
        /// The type of schedule. Possible values are `Once` and `Recurring`.
        /// </summary>
        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        public JobScheduleArgs()
        {
        }
        public static new JobScheduleArgs Empty => new JobScheduleArgs();
    }

    public sealed class JobScheduleState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Should the Elastic Job Schedule be enabled? Defaults to `false`.
        /// 
        /// &gt; **Note:** When `type` is set to `Once` and `enabled` is set to `true`, it's recommended to add `enabled` to `ignore_changes`. This is because Azure will set `enabled` to `false` once the job has executed.
        /// </summary>
        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        /// <summary>
        /// The end time of the schedule. Must be in RFC3339 format.
        /// </summary>
        [Input("endTime")]
        public Input<string>? EndTime { get; set; }

        /// <summary>
        /// The interval between job executions. Must be in ISO8601 duration format.
        /// </summary>
        [Input("interval")]
        public Input<string>? Interval { get; set; }

        /// <summary>
        /// The ID of the Elastic Job. Changing this forces a new Elastic Job Schedule to be created.
        /// </summary>
        [Input("jobId")]
        public Input<string>? JobId { get; set; }

        /// <summary>
        /// The start time of the schedule. Must be in RFC3339 format.
        /// </summary>
        [Input("startTime")]
        public Input<string>? StartTime { get; set; }

        /// <summary>
        /// The type of schedule. Possible values are `Once` and `Recurring`.
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        public JobScheduleState()
        {
        }
        public static new JobScheduleState Empty => new JobScheduleState();
    }
}
