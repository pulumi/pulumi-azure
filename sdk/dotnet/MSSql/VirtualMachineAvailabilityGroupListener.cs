// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.MSSql
{
    /// <summary>
    /// Manages a Microsoft SQL Virtual Machine Availability Group Listener.
    /// 
    /// ## Import
    /// 
    /// Microsoft SQL Virtual Machine Availability Group Listeners can be imported using the `resource id`, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import azure:mssql/virtualMachineAvailabilityGroupListener:VirtualMachineAvailabilityGroupListener example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.SqlVirtualMachine/sqlVirtualMachineGroups/vmgroup1/availabilityGroupListeners/listener1
    /// ```
    /// </summary>
    [AzureResourceType("azure:mssql/virtualMachineAvailabilityGroupListener:VirtualMachineAvailabilityGroupListener")]
    public partial class VirtualMachineAvailabilityGroupListener : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The name of the Availability Group. Changing this forces a new resource to be created.
        /// </summary>
        [Output("availabilityGroupName")]
        public Output<string?> AvailabilityGroupName { get; private set; } = null!;

        /// <summary>
        /// A `load_balancer_configuration` block as defined below. Changing this forces a new resource to be created.
        /// 
        /// &gt; **NOTE:** Either one of `load_balancer_configuration` or `multi_subnet_ip_configuration` must be specified.
        /// </summary>
        [Output("loadBalancerConfiguration")]
        public Output<Outputs.VirtualMachineAvailabilityGroupListenerLoadBalancerConfiguration?> LoadBalancerConfiguration { get; private set; } = null!;

        /// <summary>
        /// One or more `multi_subnet_ip_configuration` blocks as defined below. Changing this forces a new resource to be created.
        /// </summary>
        [Output("multiSubnetIpConfigurations")]
        public Output<ImmutableArray<Outputs.VirtualMachineAvailabilityGroupListenerMultiSubnetIpConfiguration>> MultiSubnetIpConfigurations { get; private set; } = null!;

        /// <summary>
        /// The name which should be used for the Microsoft SQL Virtual Machine Availability Group Listener. Changing this forces a new resource to be created.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The port of the listener. Changing this forces a new resource to be created.
        /// </summary>
        [Output("port")]
        public Output<int?> Port { get; private set; } = null!;

        /// <summary>
        /// One or more `replica` blocks as defined below. Changing this forces a new resource to be created.
        /// </summary>
        [Output("replicas")]
        public Output<ImmutableArray<Outputs.VirtualMachineAvailabilityGroupListenerReplica>> Replicas { get; private set; } = null!;

        /// <summary>
        /// The ID of the SQL Virtual Machine Group to create the listener. Changing this forces a new resource to be created.
        /// </summary>
        [Output("sqlVirtualMachineGroupId")]
        public Output<string> SqlVirtualMachineGroupId { get; private set; } = null!;


        /// <summary>
        /// Create a VirtualMachineAvailabilityGroupListener resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public VirtualMachineAvailabilityGroupListener(string name, VirtualMachineAvailabilityGroupListenerArgs args, CustomResourceOptions? options = null)
            : base("azure:mssql/virtualMachineAvailabilityGroupListener:VirtualMachineAvailabilityGroupListener", name, args ?? new VirtualMachineAvailabilityGroupListenerArgs(), MakeResourceOptions(options, ""))
        {
        }

        private VirtualMachineAvailabilityGroupListener(string name, Input<string> id, VirtualMachineAvailabilityGroupListenerState? state = null, CustomResourceOptions? options = null)
            : base("azure:mssql/virtualMachineAvailabilityGroupListener:VirtualMachineAvailabilityGroupListener", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing VirtualMachineAvailabilityGroupListener resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static VirtualMachineAvailabilityGroupListener Get(string name, Input<string> id, VirtualMachineAvailabilityGroupListenerState? state = null, CustomResourceOptions? options = null)
        {
            return new VirtualMachineAvailabilityGroupListener(name, id, state, options);
        }
    }

    public sealed class VirtualMachineAvailabilityGroupListenerArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the Availability Group. Changing this forces a new resource to be created.
        /// </summary>
        [Input("availabilityGroupName")]
        public Input<string>? AvailabilityGroupName { get; set; }

        /// <summary>
        /// A `load_balancer_configuration` block as defined below. Changing this forces a new resource to be created.
        /// 
        /// &gt; **NOTE:** Either one of `load_balancer_configuration` or `multi_subnet_ip_configuration` must be specified.
        /// </summary>
        [Input("loadBalancerConfiguration")]
        public Input<Inputs.VirtualMachineAvailabilityGroupListenerLoadBalancerConfigurationArgs>? LoadBalancerConfiguration { get; set; }

        [Input("multiSubnetIpConfigurations")]
        private InputList<Inputs.VirtualMachineAvailabilityGroupListenerMultiSubnetIpConfigurationArgs>? _multiSubnetIpConfigurations;

        /// <summary>
        /// One or more `multi_subnet_ip_configuration` blocks as defined below. Changing this forces a new resource to be created.
        /// </summary>
        public InputList<Inputs.VirtualMachineAvailabilityGroupListenerMultiSubnetIpConfigurationArgs> MultiSubnetIpConfigurations
        {
            get => _multiSubnetIpConfigurations ?? (_multiSubnetIpConfigurations = new InputList<Inputs.VirtualMachineAvailabilityGroupListenerMultiSubnetIpConfigurationArgs>());
            set => _multiSubnetIpConfigurations = value;
        }

        /// <summary>
        /// The name which should be used for the Microsoft SQL Virtual Machine Availability Group Listener. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The port of the listener. Changing this forces a new resource to be created.
        /// </summary>
        [Input("port")]
        public Input<int>? Port { get; set; }

        [Input("replicas", required: true)]
        private InputList<Inputs.VirtualMachineAvailabilityGroupListenerReplicaArgs>? _replicas;

        /// <summary>
        /// One or more `replica` blocks as defined below. Changing this forces a new resource to be created.
        /// </summary>
        public InputList<Inputs.VirtualMachineAvailabilityGroupListenerReplicaArgs> Replicas
        {
            get => _replicas ?? (_replicas = new InputList<Inputs.VirtualMachineAvailabilityGroupListenerReplicaArgs>());
            set => _replicas = value;
        }

        /// <summary>
        /// The ID of the SQL Virtual Machine Group to create the listener. Changing this forces a new resource to be created.
        /// </summary>
        [Input("sqlVirtualMachineGroupId", required: true)]
        public Input<string> SqlVirtualMachineGroupId { get; set; } = null!;

        public VirtualMachineAvailabilityGroupListenerArgs()
        {
        }
        public static new VirtualMachineAvailabilityGroupListenerArgs Empty => new VirtualMachineAvailabilityGroupListenerArgs();
    }

    public sealed class VirtualMachineAvailabilityGroupListenerState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the Availability Group. Changing this forces a new resource to be created.
        /// </summary>
        [Input("availabilityGroupName")]
        public Input<string>? AvailabilityGroupName { get; set; }

        /// <summary>
        /// A `load_balancer_configuration` block as defined below. Changing this forces a new resource to be created.
        /// 
        /// &gt; **NOTE:** Either one of `load_balancer_configuration` or `multi_subnet_ip_configuration` must be specified.
        /// </summary>
        [Input("loadBalancerConfiguration")]
        public Input<Inputs.VirtualMachineAvailabilityGroupListenerLoadBalancerConfigurationGetArgs>? LoadBalancerConfiguration { get; set; }

        [Input("multiSubnetIpConfigurations")]
        private InputList<Inputs.VirtualMachineAvailabilityGroupListenerMultiSubnetIpConfigurationGetArgs>? _multiSubnetIpConfigurations;

        /// <summary>
        /// One or more `multi_subnet_ip_configuration` blocks as defined below. Changing this forces a new resource to be created.
        /// </summary>
        public InputList<Inputs.VirtualMachineAvailabilityGroupListenerMultiSubnetIpConfigurationGetArgs> MultiSubnetIpConfigurations
        {
            get => _multiSubnetIpConfigurations ?? (_multiSubnetIpConfigurations = new InputList<Inputs.VirtualMachineAvailabilityGroupListenerMultiSubnetIpConfigurationGetArgs>());
            set => _multiSubnetIpConfigurations = value;
        }

        /// <summary>
        /// The name which should be used for the Microsoft SQL Virtual Machine Availability Group Listener. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The port of the listener. Changing this forces a new resource to be created.
        /// </summary>
        [Input("port")]
        public Input<int>? Port { get; set; }

        [Input("replicas")]
        private InputList<Inputs.VirtualMachineAvailabilityGroupListenerReplicaGetArgs>? _replicas;

        /// <summary>
        /// One or more `replica` blocks as defined below. Changing this forces a new resource to be created.
        /// </summary>
        public InputList<Inputs.VirtualMachineAvailabilityGroupListenerReplicaGetArgs> Replicas
        {
            get => _replicas ?? (_replicas = new InputList<Inputs.VirtualMachineAvailabilityGroupListenerReplicaGetArgs>());
            set => _replicas = value;
        }

        /// <summary>
        /// The ID of the SQL Virtual Machine Group to create the listener. Changing this forces a new resource to be created.
        /// </summary>
        [Input("sqlVirtualMachineGroupId")]
        public Input<string>? SqlVirtualMachineGroupId { get; set; }

        public VirtualMachineAvailabilityGroupListenerState()
        {
        }
        public static new VirtualMachineAvailabilityGroupListenerState Empty => new VirtualMachineAvailabilityGroupListenerState();
    }
}
