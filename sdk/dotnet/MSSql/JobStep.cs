// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.MSSql
{
    /// <summary>
    /// Manages an Elastic Job Step.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Azure = Pulumi.Azure;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Azure.Core.ResourceGroup("example", new()
    ///     {
    ///         Name = "example",
    ///         Location = "westeurope",
    ///     });
    /// 
    ///     var exampleServer = new Azure.MSSql.Server("example", new()
    ///     {
    ///         Name = "example-server",
    ///         Location = example.Location,
    ///         ResourceGroupName = example.Name,
    ///         Version = "12.0",
    ///         AdministratorLogin = "4dm1n157r470r",
    ///         AdministratorLoginPassword = "4-v3ry-53cr37-p455w0rd",
    ///     });
    /// 
    ///     var exampleDatabase = new Azure.MSSql.Database("example", new()
    ///     {
    ///         Name = "example-db",
    ///         ServerId = exampleServer.Id,
    ///         Collation = "SQL_Latin1_General_CP1_CI_AS",
    ///         SkuName = "S1",
    ///     });
    /// 
    ///     var exampleJobAgent = new Azure.MSSql.JobAgent("example", new()
    ///     {
    ///         Name = "example-job-agent",
    ///         Location = example.Location,
    ///         DatabaseId = exampleDatabase.Id,
    ///     });
    /// 
    ///     var exampleJobCredential = new Azure.MSSql.JobCredential("example", new()
    ///     {
    ///         Name = "example-job-credential",
    ///         JobAgentId = exampleJobAgent.Id,
    ///         Username = "testusername",
    ///         Password = "testpassword",
    ///     });
    /// 
    ///     var exampleJobTargetGroup = new Azure.MSSql.JobTargetGroup("example", new()
    ///     {
    ///         Name = "example-target-group",
    ///         JobAgentId = exampleJobAgent.Id,
    ///         JobTargets = new[]
    ///         {
    ///             new Azure.MSSql.Inputs.JobTargetGroupJobTargetArgs
    ///             {
    ///                 ServerName = exampleServer.Name,
    ///                 DatabaseName = exampleDatabase.Name,
    ///                 JobCredentialId = exampleJobCredential.Id,
    ///             },
    ///         },
    ///     });
    /// 
    ///     var exampleJob = new Azure.MSSql.Job("example", new()
    ///     {
    ///         Name = "example-job",
    ///         JobAgentId = exampleJobAgent.Id,
    ///         Description = "example description",
    ///     });
    /// 
    ///     var test = new Azure.MSSql.JobStep("test", new()
    ///     {
    ///         Name = "example-job-step",
    ///         JobId = exampleJob.Id,
    ///         JobCredentialId = exampleJobCredential.Id,
    ///         JobTargetGroupId = exampleJobTargetGroup.Id,
    ///         JobStepIndex = 1,
    ///         SqlScript = @"IF NOT EXISTS (SELECT * FROM sys.objects WHERE [name] = N'Pets')
    ///   CREATE TABLE Pets (
    ///     Animal NVARCHAR(50),
    ///     Name NVARCHAR(50),
    ///   );
    /// ",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## API Providers
    /// 
    /// &lt;!-- This section is generated, changes will be overwritten --&gt;
    /// This resource uses the following Azure API Providers:
    /// 
    /// * `Microsoft.Sql`: 2023-08-01-preview
    /// 
    /// ## Import
    /// 
    /// Elastic Job Steps can be imported using the `resource id`, e.g.
    /// 
    /// ```sh
    /// $ pulumi import azure:mssql/jobStep:JobStep example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.Sql/servers/myserver1/jobAgents/myjobagent1/jobs/myjob1/steps/myjobstep1
    /// ```
    /// </summary>
    [AzureResourceType("azure:mssql/jobStep:JobStep")]
    public partial class JobStep : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The initial retry interval in seconds. Defaults to `1`.
        /// </summary>
        [Output("initialRetryIntervalSeconds")]
        public Output<int?> InitialRetryIntervalSeconds { get; private set; } = null!;

        /// <summary>
        /// The ID of the Elastic Job Credential to use when executing this Elastic Job Step.
        /// </summary>
        [Output("jobCredentialId")]
        public Output<string> JobCredentialId { get; private set; } = null!;

        /// <summary>
        /// The ID of the Elastic Job. Changing this forces a new Elastic Job Step to be created.
        /// </summary>
        [Output("jobId")]
        public Output<string> JobId { get; private set; } = null!;

        /// <summary>
        /// The index at which to insert this Elastic Job Step into the Elastic Job.
        /// 
        /// &gt; **Note:** This value must be greater than or equal to 1 and less than or equal to the number of job steps in the Elastic Job.
        /// </summary>
        [Output("jobStepIndex")]
        public Output<int> JobStepIndex { get; private set; } = null!;

        /// <summary>
        /// The ID of the Elastic Job Target Group.
        /// </summary>
        [Output("jobTargetGroupId")]
        public Output<string> JobTargetGroupId { get; private set; } = null!;

        /// <summary>
        /// The maximum retry interval in seconds. Defaults to `120`.
        /// 
        /// &gt; **Note:** `maximum_retry_interval_seconds` must be greater than `initial_retry_interval_seconds`.
        /// </summary>
        [Output("maximumRetryIntervalSeconds")]
        public Output<int?> MaximumRetryIntervalSeconds { get; private set; } = null!;

        /// <summary>
        /// The name which should be used for this Elastic Job Step. Changing this forces a new Elastic Job Step to be created.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// An `output_target` block as defined below.
        /// </summary>
        [Output("outputTarget")]
        public Output<Outputs.JobStepOutputTarget?> OutputTarget { get; private set; } = null!;

        /// <summary>
        /// The number of retry attempts. Defaults to `10`.
        /// </summary>
        [Output("retryAttempts")]
        public Output<int?> RetryAttempts { get; private set; } = null!;

        /// <summary>
        /// The multiplier for time between retries. Defaults to `2`.
        /// </summary>
        [Output("retryIntervalBackoffMultiplier")]
        public Output<double?> RetryIntervalBackoffMultiplier { get; private set; } = null!;

        /// <summary>
        /// The T-SQL script to be executed by this Elastic Job Step.
        /// 
        /// &gt; **Note:** While Azure places no restrictions on the script provided here, it is recommended to ensure the script is idempotent.
        /// </summary>
        [Output("sqlScript")]
        public Output<string> SqlScript { get; private set; } = null!;

        /// <summary>
        /// The execution timeout in seconds for this Elastic Job Step. Defaults to `43200`.
        /// </summary>
        [Output("timeoutSeconds")]
        public Output<int?> TimeoutSeconds { get; private set; } = null!;


        /// <summary>
        /// Create a JobStep resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public JobStep(string name, JobStepArgs args, CustomResourceOptions? options = null)
            : base("azure:mssql/jobStep:JobStep", name, args ?? new JobStepArgs(), MakeResourceOptions(options, ""))
        {
        }

        private JobStep(string name, Input<string> id, JobStepState? state = null, CustomResourceOptions? options = null)
            : base("azure:mssql/jobStep:JobStep", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing JobStep resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static JobStep Get(string name, Input<string> id, JobStepState? state = null, CustomResourceOptions? options = null)
        {
            return new JobStep(name, id, state, options);
        }
    }

    public sealed class JobStepArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The initial retry interval in seconds. Defaults to `1`.
        /// </summary>
        [Input("initialRetryIntervalSeconds")]
        public Input<int>? InitialRetryIntervalSeconds { get; set; }

        /// <summary>
        /// The ID of the Elastic Job Credential to use when executing this Elastic Job Step.
        /// </summary>
        [Input("jobCredentialId", required: true)]
        public Input<string> JobCredentialId { get; set; } = null!;

        /// <summary>
        /// The ID of the Elastic Job. Changing this forces a new Elastic Job Step to be created.
        /// </summary>
        [Input("jobId", required: true)]
        public Input<string> JobId { get; set; } = null!;

        /// <summary>
        /// The index at which to insert this Elastic Job Step into the Elastic Job.
        /// 
        /// &gt; **Note:** This value must be greater than or equal to 1 and less than or equal to the number of job steps in the Elastic Job.
        /// </summary>
        [Input("jobStepIndex", required: true)]
        public Input<int> JobStepIndex { get; set; } = null!;

        /// <summary>
        /// The ID of the Elastic Job Target Group.
        /// </summary>
        [Input("jobTargetGroupId", required: true)]
        public Input<string> JobTargetGroupId { get; set; } = null!;

        /// <summary>
        /// The maximum retry interval in seconds. Defaults to `120`.
        /// 
        /// &gt; **Note:** `maximum_retry_interval_seconds` must be greater than `initial_retry_interval_seconds`.
        /// </summary>
        [Input("maximumRetryIntervalSeconds")]
        public Input<int>? MaximumRetryIntervalSeconds { get; set; }

        /// <summary>
        /// The name which should be used for this Elastic Job Step. Changing this forces a new Elastic Job Step to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// An `output_target` block as defined below.
        /// </summary>
        [Input("outputTarget")]
        public Input<Inputs.JobStepOutputTargetArgs>? OutputTarget { get; set; }

        /// <summary>
        /// The number of retry attempts. Defaults to `10`.
        /// </summary>
        [Input("retryAttempts")]
        public Input<int>? RetryAttempts { get; set; }

        /// <summary>
        /// The multiplier for time between retries. Defaults to `2`.
        /// </summary>
        [Input("retryIntervalBackoffMultiplier")]
        public Input<double>? RetryIntervalBackoffMultiplier { get; set; }

        /// <summary>
        /// The T-SQL script to be executed by this Elastic Job Step.
        /// 
        /// &gt; **Note:** While Azure places no restrictions on the script provided here, it is recommended to ensure the script is idempotent.
        /// </summary>
        [Input("sqlScript", required: true)]
        public Input<string> SqlScript { get; set; } = null!;

        /// <summary>
        /// The execution timeout in seconds for this Elastic Job Step. Defaults to `43200`.
        /// </summary>
        [Input("timeoutSeconds")]
        public Input<int>? TimeoutSeconds { get; set; }

        public JobStepArgs()
        {
        }
        public static new JobStepArgs Empty => new JobStepArgs();
    }

    public sealed class JobStepState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The initial retry interval in seconds. Defaults to `1`.
        /// </summary>
        [Input("initialRetryIntervalSeconds")]
        public Input<int>? InitialRetryIntervalSeconds { get; set; }

        /// <summary>
        /// The ID of the Elastic Job Credential to use when executing this Elastic Job Step.
        /// </summary>
        [Input("jobCredentialId")]
        public Input<string>? JobCredentialId { get; set; }

        /// <summary>
        /// The ID of the Elastic Job. Changing this forces a new Elastic Job Step to be created.
        /// </summary>
        [Input("jobId")]
        public Input<string>? JobId { get; set; }

        /// <summary>
        /// The index at which to insert this Elastic Job Step into the Elastic Job.
        /// 
        /// &gt; **Note:** This value must be greater than or equal to 1 and less than or equal to the number of job steps in the Elastic Job.
        /// </summary>
        [Input("jobStepIndex")]
        public Input<int>? JobStepIndex { get; set; }

        /// <summary>
        /// The ID of the Elastic Job Target Group.
        /// </summary>
        [Input("jobTargetGroupId")]
        public Input<string>? JobTargetGroupId { get; set; }

        /// <summary>
        /// The maximum retry interval in seconds. Defaults to `120`.
        /// 
        /// &gt; **Note:** `maximum_retry_interval_seconds` must be greater than `initial_retry_interval_seconds`.
        /// </summary>
        [Input("maximumRetryIntervalSeconds")]
        public Input<int>? MaximumRetryIntervalSeconds { get; set; }

        /// <summary>
        /// The name which should be used for this Elastic Job Step. Changing this forces a new Elastic Job Step to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// An `output_target` block as defined below.
        /// </summary>
        [Input("outputTarget")]
        public Input<Inputs.JobStepOutputTargetGetArgs>? OutputTarget { get; set; }

        /// <summary>
        /// The number of retry attempts. Defaults to `10`.
        /// </summary>
        [Input("retryAttempts")]
        public Input<int>? RetryAttempts { get; set; }

        /// <summary>
        /// The multiplier for time between retries. Defaults to `2`.
        /// </summary>
        [Input("retryIntervalBackoffMultiplier")]
        public Input<double>? RetryIntervalBackoffMultiplier { get; set; }

        /// <summary>
        /// The T-SQL script to be executed by this Elastic Job Step.
        /// 
        /// &gt; **Note:** While Azure places no restrictions on the script provided here, it is recommended to ensure the script is idempotent.
        /// </summary>
        [Input("sqlScript")]
        public Input<string>? SqlScript { get; set; }

        /// <summary>
        /// The execution timeout in seconds for this Elastic Job Step. Defaults to `43200`.
        /// </summary>
        [Input("timeoutSeconds")]
        public Input<int>? TimeoutSeconds { get; set; }

        public JobStepState()
        {
        }
        public static new JobStepState Empty => new JobStepState();
    }
}
