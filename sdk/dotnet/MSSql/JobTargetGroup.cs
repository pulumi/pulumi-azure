// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.MSSql
{
    /// <summary>
    /// Manages a Job Target Group.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Azure = Pulumi.Azure;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Azure.Core.ResourceGroup("example", new()
    ///     {
    ///         Name = "example",
    ///         Location = "westeurope",
    ///     });
    /// 
    ///     var exampleServer = new Azure.MSSql.Server("example", new()
    ///     {
    ///         Name = "example-server",
    ///         Location = example.Location,
    ///         ResourceGroupName = example.Name,
    ///         Version = "12.0",
    ///         AdministratorLogin = "4dm1n157r470r",
    ///         AdministratorLoginPassword = "4-v3ry-53cr37-p455w0rd",
    ///     });
    /// 
    ///     var exampleDatabase = new Azure.MSSql.Database("example", new()
    ///     {
    ///         Name = "example-db",
    ///         ServerId = exampleServer.Id,
    ///         Collation = "SQL_Latin1_General_CP1_CI_AS",
    ///         SkuName = "S1",
    ///     });
    /// 
    ///     var exampleJobAgent = new Azure.MSSql.JobAgent("example", new()
    ///     {
    ///         Name = "example-job-agent",
    ///         Location = example.Location,
    ///         DatabaseId = exampleDatabase.Id,
    ///     });
    /// 
    ///     var exampleJobCredential = new Azure.MSSql.JobCredential("example", new()
    ///     {
    ///         Name = "example-job-credential",
    ///         JobAgentId = exampleJobAgent.Id,
    ///         Username = "testusername",
    ///         Password = "testpassword",
    ///     });
    /// 
    ///     var exampleJobTargetGroup = new Azure.MSSql.JobTargetGroup("example", new()
    ///     {
    ///         Name = "example-target-group",
    ///         JobAgentId = exampleJobAgent.Id,
    ///         JobTargets = new[]
    ///         {
    ///             new Azure.MSSql.Inputs.JobTargetGroupJobTargetArgs
    ///             {
    ///                 ServerName = exampleServer.Name,
    ///                 JobCredentialId = exampleJobCredential.Id,
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## API Providers
    /// 
    /// &lt;!-- This section is generated, changes will be overwritten --&gt;
    /// This resource uses the following Azure API Providers:
    /// 
    /// * `Microsoft.Sql` - 2023-08-01-preview
    /// 
    /// ## Import
    /// 
    /// Job Target Groups can be imported using the `resource id`, e.g.
    /// 
    /// ```sh
    /// $ pulumi import azure:mssql/jobTargetGroup:JobTargetGroup example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.Sql/servers/myserver1/jobAgents/myjobagent1/targetGroups/mytargetgroup1
    /// ```
    /// </summary>
    [AzureResourceType("azure:mssql/jobTargetGroup:JobTargetGroup")]
    public partial class JobTargetGroup : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The ID of the Elastic Job Agent. Changing this forces a new Job Target Group to be created.
        /// </summary>
        [Output("jobAgentId")]
        public Output<string> JobAgentId { get; private set; } = null!;

        /// <summary>
        /// One or more `JobTarget` blocks as defined below.
        /// </summary>
        [Output("jobTargets")]
        public Output<ImmutableArray<Outputs.JobTargetGroupJobTarget>> JobTargets { get; private set; } = null!;

        /// <summary>
        /// The name which should be used for this Job Target Group. Changing this forces a new Job Target Group to be created.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;


        /// <summary>
        /// Create a JobTargetGroup resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public JobTargetGroup(string name, JobTargetGroupArgs args, CustomResourceOptions? options = null)
            : base("azure:mssql/jobTargetGroup:JobTargetGroup", name, args ?? new JobTargetGroupArgs(), MakeResourceOptions(options, ""))
        {
        }

        private JobTargetGroup(string name, Input<string> id, JobTargetGroupState? state = null, CustomResourceOptions? options = null)
            : base("azure:mssql/jobTargetGroup:JobTargetGroup", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing JobTargetGroup resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static JobTargetGroup Get(string name, Input<string> id, JobTargetGroupState? state = null, CustomResourceOptions? options = null)
        {
            return new JobTargetGroup(name, id, state, options);
        }
    }

    public sealed class JobTargetGroupArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the Elastic Job Agent. Changing this forces a new Job Target Group to be created.
        /// </summary>
        [Input("jobAgentId", required: true)]
        public Input<string> JobAgentId { get; set; } = null!;

        [Input("jobTargets")]
        private InputList<Inputs.JobTargetGroupJobTargetArgs>? _jobTargets;

        /// <summary>
        /// One or more `JobTarget` blocks as defined below.
        /// </summary>
        public InputList<Inputs.JobTargetGroupJobTargetArgs> JobTargets
        {
            get => _jobTargets ?? (_jobTargets = new InputList<Inputs.JobTargetGroupJobTargetArgs>());
            set => _jobTargets = value;
        }

        /// <summary>
        /// The name which should be used for this Job Target Group. Changing this forces a new Job Target Group to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        public JobTargetGroupArgs()
        {
        }
        public static new JobTargetGroupArgs Empty => new JobTargetGroupArgs();
    }

    public sealed class JobTargetGroupState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the Elastic Job Agent. Changing this forces a new Job Target Group to be created.
        /// </summary>
        [Input("jobAgentId")]
        public Input<string>? JobAgentId { get; set; }

        [Input("jobTargets")]
        private InputList<Inputs.JobTargetGroupJobTargetGetArgs>? _jobTargets;

        /// <summary>
        /// One or more `JobTarget` blocks as defined below.
        /// </summary>
        public InputList<Inputs.JobTargetGroupJobTargetGetArgs> JobTargets
        {
            get => _jobTargets ?? (_jobTargets = new InputList<Inputs.JobTargetGroupJobTargetGetArgs>());
            set => _jobTargets = value;
        }

        /// <summary>
        /// The name which should be used for this Job Target Group. Changing this forces a new Job Target Group to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        public JobTargetGroupState()
        {
        }
        public static new JobTargetGroupState Empty => new JobTargetGroupState();
    }
}
