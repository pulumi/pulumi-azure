// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.MSSql
{
    /// <summary>
    /// Manages a Microsoft SQL Virtual Machine Group.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Azure = Pulumi.Azure;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var exampleResourceGroup = new Azure.Core.ResourceGroup("exampleResourceGroup", new()
    ///     {
    ///         Location = "West Europe",
    ///     });
    /// 
    ///     var exampleVirtualMachineGroup = new Azure.MSSql.VirtualMachineGroup("exampleVirtualMachineGroup", new()
    ///     {
    ///         ResourceGroupName = exampleResourceGroup.Name,
    ///         Location = exampleResourceGroup.Location,
    ///         SqlImageOffer = "SQL2017-WS2016",
    ///         SqlImageSku = "Developer",
    ///         WsfcDomainProfile = new Azure.MSSql.Inputs.VirtualMachineGroupWsfcDomainProfileArgs
    ///         {
    ///             Fqdn = "testdomain.com",
    ///             ClusterSubnetType = "SingleSubnet",
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Microsoft SQL Virtual Machine Groups can be imported using the `resource id`, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import azure:mssql/virtualMachineGroup:VirtualMachineGroup example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.SqlVirtualMachine/sqlVirtualMachineGroups/vmgroup1
    /// ```
    /// </summary>
    [AzureResourceType("azure:mssql/virtualMachineGroup:VirtualMachineGroup")]
    public partial class VirtualMachineGroup : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The Azure Region where the Microsoft SQL Virtual Machine Group should exist. Changing this forces a new resource to be created.
        /// </summary>
        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// The name which should be used for the Microsoft SQL Virtual Machine Group. Changing this forces a new resource to be created.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The name of the Resource Group where the Microsoft SQL Virtual Machine Group should exist. Changing this forces a new resource to be created.
        /// </summary>
        [Output("resourceGroupName")]
        public Output<string> ResourceGroupName { get; private set; } = null!;

        /// <summary>
        /// The offer type of the marketplace image cluster to be used by the SQL Virtual Machine Group. Changing this forces a new resource to be created.
        /// </summary>
        [Output("sqlImageOffer")]
        public Output<string> SqlImageOffer { get; private set; } = null!;

        /// <summary>
        /// The sku type of the marketplace image cluster to be used by the SQL Virtual Machine Group. Possible values are `Developer` and `Enterprise`.
        /// </summary>
        [Output("sqlImageSku")]
        public Output<string> SqlImageSku { get; private set; } = null!;

        /// <summary>
        /// A mapping of tags which should be assigned to the Microsoft SQL Virtual Machine Group.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// A `wsfc_domain_profile` block as defined below.
        /// </summary>
        [Output("wsfcDomainProfile")]
        public Output<Outputs.VirtualMachineGroupWsfcDomainProfile> WsfcDomainProfile { get; private set; } = null!;


        /// <summary>
        /// Create a VirtualMachineGroup resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public VirtualMachineGroup(string name, VirtualMachineGroupArgs args, CustomResourceOptions? options = null)
            : base("azure:mssql/virtualMachineGroup:VirtualMachineGroup", name, args ?? new VirtualMachineGroupArgs(), MakeResourceOptions(options, ""))
        {
        }

        private VirtualMachineGroup(string name, Input<string> id, VirtualMachineGroupState? state = null, CustomResourceOptions? options = null)
            : base("azure:mssql/virtualMachineGroup:VirtualMachineGroup", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing VirtualMachineGroup resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static VirtualMachineGroup Get(string name, Input<string> id, VirtualMachineGroupState? state = null, CustomResourceOptions? options = null)
        {
            return new VirtualMachineGroup(name, id, state, options);
        }
    }

    public sealed class VirtualMachineGroupArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The Azure Region where the Microsoft SQL Virtual Machine Group should exist. Changing this forces a new resource to be created.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// The name which should be used for the Microsoft SQL Virtual Machine Group. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The name of the Resource Group where the Microsoft SQL Virtual Machine Group should exist. Changing this forces a new resource to be created.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The offer type of the marketplace image cluster to be used by the SQL Virtual Machine Group. Changing this forces a new resource to be created.
        /// </summary>
        [Input("sqlImageOffer", required: true)]
        public Input<string> SqlImageOffer { get; set; } = null!;

        /// <summary>
        /// The sku type of the marketplace image cluster to be used by the SQL Virtual Machine Group. Possible values are `Developer` and `Enterprise`.
        /// </summary>
        [Input("sqlImageSku", required: true)]
        public Input<string> SqlImageSku { get; set; } = null!;

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// A mapping of tags which should be assigned to the Microsoft SQL Virtual Machine Group.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        /// <summary>
        /// A `wsfc_domain_profile` block as defined below.
        /// </summary>
        [Input("wsfcDomainProfile", required: true)]
        public Input<Inputs.VirtualMachineGroupWsfcDomainProfileArgs> WsfcDomainProfile { get; set; } = null!;

        public VirtualMachineGroupArgs()
        {
        }
        public static new VirtualMachineGroupArgs Empty => new VirtualMachineGroupArgs();
    }

    public sealed class VirtualMachineGroupState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The Azure Region where the Microsoft SQL Virtual Machine Group should exist. Changing this forces a new resource to be created.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// The name which should be used for the Microsoft SQL Virtual Machine Group. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The name of the Resource Group where the Microsoft SQL Virtual Machine Group should exist. Changing this forces a new resource to be created.
        /// </summary>
        [Input("resourceGroupName")]
        public Input<string>? ResourceGroupName { get; set; }

        /// <summary>
        /// The offer type of the marketplace image cluster to be used by the SQL Virtual Machine Group. Changing this forces a new resource to be created.
        /// </summary>
        [Input("sqlImageOffer")]
        public Input<string>? SqlImageOffer { get; set; }

        /// <summary>
        /// The sku type of the marketplace image cluster to be used by the SQL Virtual Machine Group. Possible values are `Developer` and `Enterprise`.
        /// </summary>
        [Input("sqlImageSku")]
        public Input<string>? SqlImageSku { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// A mapping of tags which should be assigned to the Microsoft SQL Virtual Machine Group.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        /// <summary>
        /// A `wsfc_domain_profile` block as defined below.
        /// </summary>
        [Input("wsfcDomainProfile")]
        public Input<Inputs.VirtualMachineGroupWsfcDomainProfileGetArgs>? WsfcDomainProfile { get; set; }

        public VirtualMachineGroupState()
        {
        }
        public static new VirtualMachineGroupState Empty => new VirtualMachineGroupState();
    }
}
