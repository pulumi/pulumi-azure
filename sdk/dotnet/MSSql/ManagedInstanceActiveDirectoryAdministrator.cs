// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.MSSql
{
    /// <summary>
    /// Allows you to set a user, group or service principal as the AAD Administrator for an Azure SQL Managed Instance.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Azure = Pulumi.Azure;
    /// using AzureAD = Pulumi.AzureAD;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Azure.Core.ResourceGroup("example", new()
    ///     {
    ///         Name = "rg-example",
    ///         Location = "West Europe",
    ///     });
    /// 
    ///     var current = Azure.Core.GetClientConfig.Invoke();
    /// 
    ///     var exampleVirtualNetwork = new Azure.Network.VirtualNetwork("example", new()
    ///     {
    ///         Name = "example",
    ///         Location = example.Location,
    ///         ResourceGroupName = example.Name,
    ///         AddressSpaces = new[]
    ///         {
    ///             "10.0.0.0/16",
    ///         },
    ///     });
    /// 
    ///     var exampleSubnet = new Azure.Network.Subnet("example", new()
    ///     {
    ///         Name = "example",
    ///         ResourceGroupName = example.Name,
    ///         VirtualNetworkName = exampleVirtualNetwork.Name,
    ///         AddressPrefixes = new[]
    ///         {
    ///             "10.0.2.0/24",
    ///         },
    ///     });
    /// 
    ///     var exampleManagedInstance = new Azure.MSSql.ManagedInstance("example", new()
    ///     {
    ///         Name = "managedsqlinstance",
    ///         ResourceGroupName = example.Name,
    ///         Location = example.Location,
    ///         LicenseType = "BasePrice",
    ///         SkuName = "GP_Gen5",
    ///         StorageSizeInGb = 32,
    ///         SubnetId = exampleSubnet.Id,
    ///         Vcores = 4,
    ///         AdministratorLogin = "msadministrator",
    ///         AdministratorLoginPassword = "thisIsDog11",
    ///         Identity = new Azure.MSSql.Inputs.ManagedInstanceIdentityArgs
    ///         {
    ///             Type = "SystemAssigned",
    ///         },
    ///     });
    /// 
    ///     var reader = new AzureAD.DirectoryRole("reader", new()
    ///     {
    ///         DisplayName = "Directory Readers",
    ///     });
    /// 
    ///     var exampleDirectoryRoleMember = new AzureAD.DirectoryRoleMember("example", new()
    ///     {
    ///         RoleObjectId = reader.ObjectId,
    ///         MemberObjectId = exampleManagedInstance.Identity.Apply(identity =&gt; identity?.PrincipalId),
    ///     });
    /// 
    ///     var admin = new AzureAD.User("admin", new()
    ///     {
    ///         UserPrincipalName = "ms.admin@example.com",
    ///         DisplayName = "Ms Admin",
    ///         MailNickname = "ms.admin",
    ///         Password = "SecretP@sswd99!",
    ///     });
    /// 
    ///     var exampleManagedInstanceActiveDirectoryAdministrator = new Azure.MSSql.ManagedInstanceActiveDirectoryAdministrator("example", new()
    ///     {
    ///         ManagedInstanceId = exampleManagedInstance.Id,
    ///         LoginUsername = "msadmin",
    ///         ObjectId = admin.ObjectId,
    ///         TenantId = current.Apply(getClientConfigResult =&gt; getClientConfigResult.TenantId),
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## API Providers
    /// 
    /// &lt;!-- This section is generated, changes will be overwritten --&gt;
    /// This resource uses the following Azure API Providers:
    /// 
    /// * `Microsoft.Sql` - 2023-08-01-preview
    /// 
    /// ## Import
    /// 
    /// An Azure SQL Active Directory Administrator can be imported using the `resource id`, e.g.
    /// 
    /// ```sh
    /// $ pulumi import azure:mssql/managedInstanceActiveDirectoryAdministrator:ManagedInstanceActiveDirectoryAdministrator administrator /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myresourcegroup/providers/Microsoft.Sql/managedInstances/mymanagedinstance/administrators/activeDirectory
    /// ```
    /// </summary>
    [AzureResourceType("azure:mssql/managedInstanceActiveDirectoryAdministrator:ManagedInstanceActiveDirectoryAdministrator")]
    public partial class ManagedInstanceActiveDirectoryAdministrator : global::Pulumi.CustomResource
    {
        /// <summary>
        /// When `True`, only permit logins from AAD users and administrators. When `False`, also allow local database users.
        /// </summary>
        [Output("azureadAuthenticationOnly")]
        public Output<bool?> AzureadAuthenticationOnly { get; private set; } = null!;

        /// <summary>
        /// The login name of the principal to set as the Managed Instance Administrator.
        /// </summary>
        [Output("loginUsername")]
        public Output<string> LoginUsername { get; private set; } = null!;

        /// <summary>
        /// The ID of the Azure SQL Managed Instance for which to set the administrator. Changing this forces a new resource to be created.
        /// </summary>
        [Output("managedInstanceId")]
        public Output<string> ManagedInstanceId { get; private set; } = null!;

        /// <summary>
        /// The Object ID of the principal to set as the Managed Instance Administrator.
        /// </summary>
        [Output("objectId")]
        public Output<string> ObjectId { get; private set; } = null!;

        /// <summary>
        /// The Azure Active Directory Tenant ID.
        /// </summary>
        [Output("tenantId")]
        public Output<string> TenantId { get; private set; } = null!;


        /// <summary>
        /// Create a ManagedInstanceActiveDirectoryAdministrator resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ManagedInstanceActiveDirectoryAdministrator(string name, ManagedInstanceActiveDirectoryAdministratorArgs args, CustomResourceOptions? options = null)
            : base("azure:mssql/managedInstanceActiveDirectoryAdministrator:ManagedInstanceActiveDirectoryAdministrator", name, args ?? new ManagedInstanceActiveDirectoryAdministratorArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ManagedInstanceActiveDirectoryAdministrator(string name, Input<string> id, ManagedInstanceActiveDirectoryAdministratorState? state = null, CustomResourceOptions? options = null)
            : base("azure:mssql/managedInstanceActiveDirectoryAdministrator:ManagedInstanceActiveDirectoryAdministrator", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure:sql/managedInstanceActiveDirectoryAdministrator:ManagedInstanceActiveDirectoryAdministrator" },
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ManagedInstanceActiveDirectoryAdministrator resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ManagedInstanceActiveDirectoryAdministrator Get(string name, Input<string> id, ManagedInstanceActiveDirectoryAdministratorState? state = null, CustomResourceOptions? options = null)
        {
            return new ManagedInstanceActiveDirectoryAdministrator(name, id, state, options);
        }
    }

    public sealed class ManagedInstanceActiveDirectoryAdministratorArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// When `True`, only permit logins from AAD users and administrators. When `False`, also allow local database users.
        /// </summary>
        [Input("azureadAuthenticationOnly")]
        public Input<bool>? AzureadAuthenticationOnly { get; set; }

        /// <summary>
        /// The login name of the principal to set as the Managed Instance Administrator.
        /// </summary>
        [Input("loginUsername", required: true)]
        public Input<string> LoginUsername { get; set; } = null!;

        /// <summary>
        /// The ID of the Azure SQL Managed Instance for which to set the administrator. Changing this forces a new resource to be created.
        /// </summary>
        [Input("managedInstanceId", required: true)]
        public Input<string> ManagedInstanceId { get; set; } = null!;

        /// <summary>
        /// The Object ID of the principal to set as the Managed Instance Administrator.
        /// </summary>
        [Input("objectId", required: true)]
        public Input<string> ObjectId { get; set; } = null!;

        /// <summary>
        /// The Azure Active Directory Tenant ID.
        /// </summary>
        [Input("tenantId", required: true)]
        public Input<string> TenantId { get; set; } = null!;

        public ManagedInstanceActiveDirectoryAdministratorArgs()
        {
        }
        public static new ManagedInstanceActiveDirectoryAdministratorArgs Empty => new ManagedInstanceActiveDirectoryAdministratorArgs();
    }

    public sealed class ManagedInstanceActiveDirectoryAdministratorState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// When `True`, only permit logins from AAD users and administrators. When `False`, also allow local database users.
        /// </summary>
        [Input("azureadAuthenticationOnly")]
        public Input<bool>? AzureadAuthenticationOnly { get; set; }

        /// <summary>
        /// The login name of the principal to set as the Managed Instance Administrator.
        /// </summary>
        [Input("loginUsername")]
        public Input<string>? LoginUsername { get; set; }

        /// <summary>
        /// The ID of the Azure SQL Managed Instance for which to set the administrator. Changing this forces a new resource to be created.
        /// </summary>
        [Input("managedInstanceId")]
        public Input<string>? ManagedInstanceId { get; set; }

        /// <summary>
        /// The Object ID of the principal to set as the Managed Instance Administrator.
        /// </summary>
        [Input("objectId")]
        public Input<string>? ObjectId { get; set; }

        /// <summary>
        /// The Azure Active Directory Tenant ID.
        /// </summary>
        [Input("tenantId")]
        public Input<string>? TenantId { get; set; }

        public ManagedInstanceActiveDirectoryAdministratorState()
        {
        }
        public static new ManagedInstanceActiveDirectoryAdministratorState Empty => new ManagedInstanceActiveDirectoryAdministratorState();
    }
}
