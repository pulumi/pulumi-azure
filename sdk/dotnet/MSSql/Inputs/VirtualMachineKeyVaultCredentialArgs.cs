// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.MSSql.Inputs
{

    public sealed class VirtualMachineKeyVaultCredentialArgs : global::Pulumi.ResourceArgs
    {
        [Input("keyVaultUrl", required: true)]
        private Input<string>? _keyVaultUrl;

        /// <summary>
        /// The Azure Key Vault url. Changing this forces a new resource to be created.
        /// </summary>
        public Input<string>? KeyVaultUrl
        {
            get => _keyVaultUrl;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _keyVaultUrl = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// The credential name.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        [Input("servicePrincipalName", required: true)]
        private Input<string>? _servicePrincipalName;

        /// <summary>
        /// The service principal name to access key vault. Changing this forces a new resource to be created.
        /// </summary>
        public Input<string>? ServicePrincipalName
        {
            get => _servicePrincipalName;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _servicePrincipalName = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("servicePrincipalSecret", required: true)]
        private Input<string>? _servicePrincipalSecret;

        /// <summary>
        /// The service principal name secret to access key vault. Changing this forces a new resource to be created.
        /// </summary>
        public Input<string>? ServicePrincipalSecret
        {
            get => _servicePrincipalSecret;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _servicePrincipalSecret = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        public VirtualMachineKeyVaultCredentialArgs()
        {
        }
        public static new VirtualMachineKeyVaultCredentialArgs Empty => new VirtualMachineKeyVaultCredentialArgs();
    }
}
