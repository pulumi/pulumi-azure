// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.MSSql.Inputs
{

    public sealed class VirtualMachineGroupWsfcDomainProfileGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The account name used for creating cluster. Changing this forces a new resource to be created.
        /// </summary>
        [Input("clusterBootstrapAccountName")]
        public Input<string>? ClusterBootstrapAccountName { get; set; }

        /// <summary>
        /// The account name used for operating cluster. Changing this forces a new resource to be created.
        /// </summary>
        [Input("clusterOperatorAccountName")]
        public Input<string>? ClusterOperatorAccountName { get; set; }

        /// <summary>
        /// The subnet type of the SQL Virtual Machine cluster. Possible values are `MultiSubnet` and `SingleSubnet`. Changing this forces a new resource to be created.
        /// </summary>
        [Input("clusterSubnetType", required: true)]
        public Input<string> ClusterSubnetType { get; set; } = null!;

        /// <summary>
        /// The fully qualified name of the domain. Changing this forces a new resource to be created.
        /// </summary>
        [Input("fqdn", required: true)]
        public Input<string> Fqdn { get; set; } = null!;

        /// <summary>
        /// The organizational Unit path in which the nodes and cluster will be present. Changing this forces a new resource to be created.
        /// </summary>
        [Input("organizationalUnitPath")]
        public Input<string>? OrganizationalUnitPath { get; set; }

        /// <summary>
        /// The account name under which SQL service will run on all participating SQL virtual machines in the cluster. Changing this forces a new resource to be created.
        /// </summary>
        [Input("sqlServiceAccountName")]
        public Input<string>? SqlServiceAccountName { get; set; }

        [Input("storageAccountPrimaryKey")]
        private Input<string>? _storageAccountPrimaryKey;

        /// <summary>
        /// The primary key of the Storage Account.
        /// </summary>
        public Input<string>? StorageAccountPrimaryKey
        {
            get => _storageAccountPrimaryKey;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _storageAccountPrimaryKey = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// The SAS URL to the Storage Container of the witness storage account. Changing this forces a new resource to be created.
        /// </summary>
        [Input("storageAccountUrl")]
        public Input<string>? StorageAccountUrl { get; set; }

        public VirtualMachineGroupWsfcDomainProfileGetArgs()
        {
        }
        public static new VirtualMachineGroupWsfcDomainProfileGetArgs Empty => new VirtualMachineGroupWsfcDomainProfileGetArgs();
    }
}
