// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.WebPubSub
{
    /// <summary>
    /// Manages the Network ACL for a Web Pubsub.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Azure = Pulumi.Azure;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var exampleResourceGroup = new Azure.Core.ResourceGroup("exampleResourceGroup", new()
    ///     {
    ///         Location = "east us",
    ///     });
    /// 
    ///     var exampleService = new Azure.WebPubSub.Service("exampleService", new()
    ///     {
    ///         Location = exampleResourceGroup.Location,
    ///         ResourceGroupName = exampleResourceGroup.Name,
    ///         Sku = "Standard_S1",
    ///         Capacity = 1,
    ///     });
    /// 
    ///     var exampleVirtualNetwork = new Azure.Network.VirtualNetwork("exampleVirtualNetwork", new()
    ///     {
    ///         ResourceGroupName = exampleResourceGroup.Name,
    ///         Location = exampleResourceGroup.Location,
    ///         AddressSpaces = new[]
    ///         {
    ///             "10.5.0.0/16",
    ///         },
    ///     });
    /// 
    ///     var exampleSubnet = new Azure.Network.Subnet("exampleSubnet", new()
    ///     {
    ///         ResourceGroupName = exampleResourceGroup.Name,
    ///         VirtualNetworkName = exampleVirtualNetwork.Name,
    ///         AddressPrefixes = new[]
    ///         {
    ///             "10.5.2.0/24",
    ///         },
    ///         EnforcePrivateLinkEndpointNetworkPolicies = true,
    ///     });
    /// 
    ///     var exampleEndpoint = new Azure.PrivateLink.Endpoint("exampleEndpoint", new()
    ///     {
    ///         ResourceGroupName = exampleResourceGroup.Name,
    ///         Location = exampleResourceGroup.Location,
    ///         SubnetId = exampleSubnet.Id,
    ///         PrivateServiceConnection = new Azure.PrivateLink.Inputs.EndpointPrivateServiceConnectionArgs
    ///         {
    ///             Name = "psc-sig-test",
    ///             IsManualConnection = false,
    ///             PrivateConnectionResourceId = exampleService.Id,
    ///             SubresourceNames = new[]
    ///             {
    ///                 "webpubsub",
    ///             },
    ///         },
    ///     });
    /// 
    ///     var exampleNetworkAcl = new Azure.WebPubSub.NetworkAcl("exampleNetworkAcl", new()
    ///     {
    ///         WebPubsubId = exampleService.Id,
    ///         DefaultAction = "Allow",
    ///         PublicNetwork = new Azure.WebPubSub.Inputs.NetworkAclPublicNetworkArgs
    ///         {
    ///             DeniedRequestTypes = new[]
    ///             {
    ///                 "ClientConnection",
    ///             },
    ///         },
    ///         PrivateEndpoints = new[]
    ///         {
    ///             new Azure.WebPubSub.Inputs.NetworkAclPrivateEndpointArgs
    ///             {
    ///                 Id = exampleEndpoint.Id,
    ///                 DeniedRequestTypes = new[]
    ///                 {
    ///                     "RESTAPI",
    ///                     "ClientConnection",
    ///                 },
    ///             },
    ///         },
    ///     }, new CustomResourceOptions
    ///     {
    ///         DependsOn = new[]
    ///         {
    ///             exampleEndpoint,
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Network ACLs for a Web Pubsub service can be imported using the `resource id`, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import azure:webpubsub/networkAcl:NetworkAcl example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.SignalRService/webPubSub/webpubsub1
    /// ```
    /// </summary>
    [AzureResourceType("azure:webpubsub/networkAcl:NetworkAcl")]
    public partial class NetworkAcl : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The default action to control the network access when no other rule matches. Possible values are `Allow` and `Deny`. Defaults to `Deny`.
        /// </summary>
        [Output("defaultAction")]
        public Output<string?> DefaultAction { get; private set; } = null!;

        /// <summary>
        /// A `private_endpoint` block as defined below.
        /// </summary>
        [Output("privateEndpoints")]
        public Output<ImmutableArray<Outputs.NetworkAclPrivateEndpoint>> PrivateEndpoints { get; private set; } = null!;

        /// <summary>
        /// A `public_network` block as defined below.
        /// </summary>
        [Output("publicNetwork")]
        public Output<Outputs.NetworkAclPublicNetwork> PublicNetwork { get; private set; } = null!;

        /// <summary>
        /// The ID of the Web Pubsub service. Changing this forces a new resource to be created.
        /// </summary>
        [Output("webPubsubId")]
        public Output<string> WebPubsubId { get; private set; } = null!;


        /// <summary>
        /// Create a NetworkAcl resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public NetworkAcl(string name, NetworkAclArgs args, CustomResourceOptions? options = null)
            : base("azure:webpubsub/networkAcl:NetworkAcl", name, args ?? new NetworkAclArgs(), MakeResourceOptions(options, ""))
        {
        }

        private NetworkAcl(string name, Input<string> id, NetworkAclState? state = null, CustomResourceOptions? options = null)
            : base("azure:webpubsub/networkAcl:NetworkAcl", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing NetworkAcl resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static NetworkAcl Get(string name, Input<string> id, NetworkAclState? state = null, CustomResourceOptions? options = null)
        {
            return new NetworkAcl(name, id, state, options);
        }
    }

    public sealed class NetworkAclArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The default action to control the network access when no other rule matches. Possible values are `Allow` and `Deny`. Defaults to `Deny`.
        /// </summary>
        [Input("defaultAction")]
        public Input<string>? DefaultAction { get; set; }

        [Input("privateEndpoints")]
        private InputList<Inputs.NetworkAclPrivateEndpointArgs>? _privateEndpoints;

        /// <summary>
        /// A `private_endpoint` block as defined below.
        /// </summary>
        public InputList<Inputs.NetworkAclPrivateEndpointArgs> PrivateEndpoints
        {
            get => _privateEndpoints ?? (_privateEndpoints = new InputList<Inputs.NetworkAclPrivateEndpointArgs>());
            set => _privateEndpoints = value;
        }

        /// <summary>
        /// A `public_network` block as defined below.
        /// </summary>
        [Input("publicNetwork", required: true)]
        public Input<Inputs.NetworkAclPublicNetworkArgs> PublicNetwork { get; set; } = null!;

        /// <summary>
        /// The ID of the Web Pubsub service. Changing this forces a new resource to be created.
        /// </summary>
        [Input("webPubsubId", required: true)]
        public Input<string> WebPubsubId { get; set; } = null!;

        public NetworkAclArgs()
        {
        }
        public static new NetworkAclArgs Empty => new NetworkAclArgs();
    }

    public sealed class NetworkAclState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The default action to control the network access when no other rule matches. Possible values are `Allow` and `Deny`. Defaults to `Deny`.
        /// </summary>
        [Input("defaultAction")]
        public Input<string>? DefaultAction { get; set; }

        [Input("privateEndpoints")]
        private InputList<Inputs.NetworkAclPrivateEndpointGetArgs>? _privateEndpoints;

        /// <summary>
        /// A `private_endpoint` block as defined below.
        /// </summary>
        public InputList<Inputs.NetworkAclPrivateEndpointGetArgs> PrivateEndpoints
        {
            get => _privateEndpoints ?? (_privateEndpoints = new InputList<Inputs.NetworkAclPrivateEndpointGetArgs>());
            set => _privateEndpoints = value;
        }

        /// <summary>
        /// A `public_network` block as defined below.
        /// </summary>
        [Input("publicNetwork")]
        public Input<Inputs.NetworkAclPublicNetworkGetArgs>? PublicNetwork { get; set; }

        /// <summary>
        /// The ID of the Web Pubsub service. Changing this forces a new resource to be created.
        /// </summary>
        [Input("webPubsubId")]
        public Input<string>? WebPubsubId { get; set; }

        public NetworkAclState()
        {
        }
        public static new NetworkAclState Empty => new NetworkAclState();
    }
}
