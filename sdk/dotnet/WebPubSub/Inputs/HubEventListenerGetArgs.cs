// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.WebPubSub.Inputs
{

    public sealed class HubEventListenerGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies the event hub name to receive the events.
        /// </summary>
        [Input("eventhubName", required: true)]
        public Input<string> EventhubName { get; set; } = null!;

        /// <summary>
        /// Specifies the event hub namespace name to receive the events.
        /// </summary>
        [Input("eventhubNamespaceName", required: true)]
        public Input<string> EventhubNamespaceName { get; set; } = null!;

        [Input("systemEventNameFilters")]
        private InputList<string>? _systemEventNameFilters;

        /// <summary>
        /// Specifies the list of system events. Supported values are `Connected` and `Disconnected`.
        /// </summary>
        public InputList<string> SystemEventNameFilters
        {
            get => _systemEventNameFilters ?? (_systemEventNameFilters = new InputList<string>());
            set => _systemEventNameFilters = value;
        }

        [Input("userEventNameFilters")]
        private InputList<string>? _userEventNameFilters;

        /// <summary>
        /// Specifies the list of matching user event names. `["*"]` can be used to match all events.
        /// </summary>
        public InputList<string> UserEventNameFilters
        {
            get => _userEventNameFilters ?? (_userEventNameFilters = new InputList<string>());
            set => _userEventNameFilters = value;
        }

        public HubEventListenerGetArgs()
        {
        }
        public static new HubEventListenerGetArgs Empty => new HubEventListenerGetArgs();
    }
}
