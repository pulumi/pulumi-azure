// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.WebPubSub
{
    public static class GetService
    {
        /// <summary>
        /// Use this data source to access information about an existing Azure Web Pubsub service.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Azure = Pulumi.Azure;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var example = Output.Create(Azure.WebPubSub.GetService.InvokeAsync(new Azure.WebPubSub.GetServiceArgs
        ///         {
        ///             Name = "test-webpubsub",
        ///             ResourceGroupName = "wps-resource-group",
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetServiceResult> InvokeAsync(GetServiceArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetServiceResult>("azure:webpubsub/getService:getService", args ?? new GetServiceArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to access information about an existing Azure Web Pubsub service.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Azure = Pulumi.Azure;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var example = Output.Create(Azure.WebPubSub.GetService.InvokeAsync(new Azure.WebPubSub.GetServiceArgs
        ///         {
        ///             Name = "test-webpubsub",
        ///             ResourceGroupName = "wps-resource-group",
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetServiceResult> Invoke(GetServiceInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetServiceResult>("azure:webpubsub/getService:getService", args ?? new GetServiceInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetServiceArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// Specifies the name of the Web Pubsub service.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        /// <summary>
        /// Specifies the name of the resource group the Web Pubsub service is located in.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public string ResourceGroupName { get; set; } = null!;

        public GetServiceArgs()
        {
        }
    }

    public sealed class GetServiceInvokeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// Specifies the name of the Web Pubsub service.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// Specifies the name of the resource group the Web Pubsub service is located in.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public GetServiceInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetServiceResult
    {
        public readonly bool AadAuthEnabled;
        public readonly int Capacity;
        public readonly string ExternalIp;
        /// <summary>
        /// The FQDN of the Web Pubsub service.
        /// </summary>
        public readonly string Hostname;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly bool LocalAuthEnabled;
        /// <summary>
        /// The Azure location where the Web Pubsub service exists.
        /// </summary>
        public readonly string Location;
        public readonly string Name;
        /// <summary>
        /// The primary access key of the Web Pubsub service.
        /// </summary>
        public readonly string PrimaryAccessKey;
        /// <summary>
        /// The primary connection string of the Web Pubsub service.
        /// </summary>
        public readonly string PrimaryConnectionString;
        public readonly bool PublicNetworkAccessEnabled;
        /// <summary>
        /// The publicly accessible port of the Web Pubsub service which is designed for browser/client use.
        /// </summary>
        public readonly int PublicPort;
        public readonly string ResourceGroupName;
        /// <summary>
        /// The secondary access key of the Web Pubsub service.
        /// </summary>
        public readonly string SecondaryAccessKey;
        /// <summary>
        /// The secondary connection string of the Web Pubsub service.
        /// </summary>
        public readonly string SecondaryConnectionString;
        /// <summary>
        /// The publicly accessible port of the Web Pubsub service which is designed for customer server side use.
        /// </summary>
        public readonly int ServerPort;
        public readonly string Sku;
        public readonly ImmutableDictionary<string, string> Tags;
        public readonly bool TlsClientCertEnabled;
        public readonly string Version;

        [OutputConstructor]
        private GetServiceResult(
            bool aadAuthEnabled,

            int capacity,

            string externalIp,

            string hostname,

            string id,

            bool localAuthEnabled,

            string location,

            string name,

            string primaryAccessKey,

            string primaryConnectionString,

            bool publicNetworkAccessEnabled,

            int publicPort,

            string resourceGroupName,

            string secondaryAccessKey,

            string secondaryConnectionString,

            int serverPort,

            string sku,

            ImmutableDictionary<string, string> tags,

            bool tlsClientCertEnabled,

            string version)
        {
            AadAuthEnabled = aadAuthEnabled;
            Capacity = capacity;
            ExternalIp = externalIp;
            Hostname = hostname;
            Id = id;
            LocalAuthEnabled = localAuthEnabled;
            Location = location;
            Name = name;
            PrimaryAccessKey = primaryAccessKey;
            PrimaryConnectionString = primaryConnectionString;
            PublicNetworkAccessEnabled = publicNetworkAccessEnabled;
            PublicPort = publicPort;
            ResourceGroupName = resourceGroupName;
            SecondaryAccessKey = secondaryAccessKey;
            SecondaryConnectionString = secondaryConnectionString;
            ServerPort = serverPort;
            Sku = sku;
            Tags = tags;
            TlsClientCertEnabled = tlsClientCertEnabled;
            Version = version;
        }
    }
}
