{
    "auto-aliasing": {
        "resources": {
            "azurerm_aadb2c_directory": {
                "current": "azure:aadb2c/directory:Directory",
                "majorVersion": 5
            },
            "azurerm_active_directory_domain_service": {
                "current": "azure:domainservices/service:Service",
                "majorVersion": 5,
                "fields": {
                    "initial_replica_set": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "domain_controller_ip_addresses": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "notifications": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "additional_recipients": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "secure_ldap": {
                        "maxItemsOne": true
                    },
                    "security": {
                        "maxItemsOne": true
                    }
                }
            },
            "azurerm_active_directory_domain_service_replica_set": {
                "current": "azure:domainservices/replicaSet:ReplicaSet",
                "majorVersion": 5,
                "fields": {
                    "domain_controller_ip_addresses": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_active_directory_domain_service_trust": {
                "current": "azure:domainservices/serviceTrust:ServiceTrust",
                "majorVersion": 5,
                "fields": {
                    "trusted_domain_dns_ips": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_advanced_threat_protection": {
                "current": "azure:securitycenter/advancedThreatProtection:AdvancedThreatProtection",
                "majorVersion": 5
            },
            "azurerm_analysis_services_server": {
                "current": "azure:analysisservices/server:Server",
                "majorVersion": 5,
                "fields": {
                    "admin_users": {
                        "maxItemsOne": false
                    },
                    "ipv4_firewall_rule": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_api_connection": {
                "current": "azure:connections/apiConnection:ApiConnection",
                "majorVersion": 5
            },
            "azurerm_api_management": {
                "current": "azure:apimanagement/service:Service",
                "majorVersion": 5,
                "fields": {
                    "additional_location": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "private_ip_addresses": {
                                    "maxItemsOne": false
                                },
                                "public_ip_addresses": {
                                    "maxItemsOne": false
                                },
                                "virtual_network_configuration": {
                                    "maxItemsOne": true
                                },
                                "zones": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "certificate": {
                        "maxItemsOne": false
                    },
                    "delegation": {
                        "maxItemsOne": true
                    },
                    "hostname_configuration": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "developer_portal": {
                                    "maxItemsOne": false
                                },
                                "management": {
                                    "maxItemsOne": false
                                },
                                "portal": {
                                    "maxItemsOne": false
                                },
                                "proxy": {
                                    "maxItemsOne": false
                                },
                                "scm": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "identity": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "identity_ids": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "policy": {
                        "maxItemsOne": true
                    },
                    "private_ip_addresses": {
                        "maxItemsOne": false
                    },
                    "protocols": {
                        "maxItemsOne": true
                    },
                    "public_ip_addresses": {
                        "maxItemsOne": false
                    },
                    "security": {
                        "maxItemsOne": true
                    },
                    "sign_in": {
                        "maxItemsOne": true
                    },
                    "sign_up": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "terms_of_service": {
                                    "maxItemsOne": true
                                }
                            }
                        }
                    },
                    "tenant_access": {
                        "maxItemsOne": true
                    },
                    "virtual_network_configuration": {
                        "maxItemsOne": true
                    },
                    "zones": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_api_management_api": {
                "current": "azure:apimanagement/api:Api",
                "majorVersion": 5,
                "fields": {
                    "contact": {
                        "maxItemsOne": true
                    },
                    "import": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "wsdl_selector": {
                                    "maxItemsOne": true
                                }
                            }
                        }
                    },
                    "license": {
                        "maxItemsOne": true
                    },
                    "oauth2_authorization": {
                        "maxItemsOne": true
                    },
                    "openid_authentication": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "bearer_token_sending_methods": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "protocols": {
                        "maxItemsOne": false
                    },
                    "subscription_key_parameter_names": {
                        "maxItemsOne": true
                    }
                }
            },
            "azurerm_api_management_api_diagnostic": {
                "current": "azure:apimanagement/apiDiagnostic:ApiDiagnostic",
                "majorVersion": 5,
                "fields": {
                    "backend_request": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "data_masking": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "headers": {
                                                "maxItemsOne": false
                                            },
                                            "query_params": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "headers_to_log": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "backend_response": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "data_masking": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "headers": {
                                                "maxItemsOne": false
                                            },
                                            "query_params": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "headers_to_log": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "frontend_request": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "data_masking": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "headers": {
                                                "maxItemsOne": false
                                            },
                                            "query_params": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "headers_to_log": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "frontend_response": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "data_masking": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "headers": {
                                                "maxItemsOne": false
                                            },
                                            "query_params": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "headers_to_log": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_api_management_api_operation": {
                "current": "azure:apimanagement/apiOperation:ApiOperation",
                "majorVersion": 5,
                "fields": {
                    "request": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "header": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "example": {
                                                "maxItemsOne": false
                                            },
                                            "values": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "query_parameter": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "example": {
                                                "maxItemsOne": false
                                            },
                                            "values": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "representation": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "example": {
                                                "maxItemsOne": false
                                            },
                                            "form_parameter": {
                                                "maxItemsOne": false,
                                                "elem": {
                                                    "fields": {
                                                        "example": {
                                                            "maxItemsOne": false
                                                        },
                                                        "values": {
                                                            "maxItemsOne": false
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "response": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "header": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "example": {
                                                "maxItemsOne": false
                                            },
                                            "values": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "representation": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "example": {
                                                "maxItemsOne": false
                                            },
                                            "form_parameter": {
                                                "maxItemsOne": false,
                                                "elem": {
                                                    "fields": {
                                                        "example": {
                                                            "maxItemsOne": false
                                                        },
                                                        "values": {
                                                            "maxItemsOne": false
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "template_parameter": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "example": {
                                    "maxItemsOne": false
                                },
                                "values": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_api_management_api_operation_policy": {
                "current": "azure:apimanagement/apiOperationPolicy:ApiOperationPolicy",
                "majorVersion": 5
            },
            "azurerm_api_management_api_operation_tag": {
                "current": "azure:apimanagement/apiOperationTag:ApiOperationTag",
                "majorVersion": 5
            },
            "azurerm_api_management_api_policy": {
                "current": "azure:apimanagement/apiPolicy:ApiPolicy",
                "majorVersion": 5
            },
            "azurerm_api_management_api_release": {
                "current": "azure:apimanagement/apiRelease:ApiRelease",
                "majorVersion": 5
            },
            "azurerm_api_management_api_schema": {
                "current": "azure:apimanagement/apiSchema:ApiSchema",
                "majorVersion": 5
            },
            "azurerm_api_management_api_tag": {
                "current": "azure:apimanagement/apiTag:ApiTag",
                "majorVersion": 5
            },
            "azurerm_api_management_api_tag_description": {
                "current": "azure:apimanagement/apiTagDescription:ApiTagDescription",
                "majorVersion": 5
            },
            "azurerm_api_management_api_version_set": {
                "current": "azure:apimanagement/apiVersionSet:ApiVersionSet",
                "majorVersion": 5
            },
            "azurerm_api_management_authorization_server": {
                "current": "azure:apimanagement/authorizationServer:AuthorizationServer",
                "majorVersion": 5,
                "fields": {
                    "authorization_methods": {
                        "maxItemsOne": false
                    },
                    "bearer_token_sending_methods": {
                        "maxItemsOne": false
                    },
                    "client_authentication_method": {
                        "maxItemsOne": false
                    },
                    "grant_types": {
                        "maxItemsOne": false
                    },
                    "token_body_parameter": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_api_management_backend": {
                "current": "azure:apimanagement/backend:Backend",
                "majorVersion": 5,
                "fields": {
                    "credentials": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "authorization": {
                                    "maxItemsOne": true
                                },
                                "certificate": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "proxy": {
                        "maxItemsOne": true
                    },
                    "service_fabric_cluster": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "management_endpoints": {
                                    "maxItemsOne": false
                                },
                                "server_certificate_thumbprints": {
                                    "maxItemsOne": false
                                },
                                "server_x509_name": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "tls": {
                        "maxItemsOne": true
                    }
                }
            },
            "azurerm_api_management_certificate": {
                "current": "azure:apimanagement/certificate:Certificate",
                "majorVersion": 5
            },
            "azurerm_api_management_custom_domain": {
                "current": "azure:apimanagement/customDomain:CustomDomain",
                "majorVersion": 5,
                "fields": {
                    "developer_portal": {
                        "maxItemsOne": false
                    },
                    "gateway": {
                        "maxItemsOne": false
                    },
                    "management": {
                        "maxItemsOne": false
                    },
                    "portal": {
                        "maxItemsOne": false
                    },
                    "scm": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_api_management_diagnostic": {
                "current": "azure:apimanagement/diagnostic:Diagnostic",
                "majorVersion": 5,
                "fields": {
                    "backend_request": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "data_masking": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "headers": {
                                                "maxItemsOne": false
                                            },
                                            "query_params": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "headers_to_log": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "backend_response": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "data_masking": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "headers": {
                                                "maxItemsOne": false
                                            },
                                            "query_params": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "headers_to_log": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "frontend_request": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "data_masking": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "headers": {
                                                "maxItemsOne": false
                                            },
                                            "query_params": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "headers_to_log": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "frontend_response": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "data_masking": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "headers": {
                                                "maxItemsOne": false
                                            },
                                            "query_params": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "headers_to_log": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_api_management_email_template": {
                "current": "azure:apimanagement/emailTemplate:EmailTemplate",
                "majorVersion": 5
            },
            "azurerm_api_management_gateway": {
                "current": "azure:apimanagement/gateway:Gateway",
                "majorVersion": 5,
                "fields": {
                    "location_data": {
                        "maxItemsOne": true
                    }
                }
            },
            "azurerm_api_management_gateway_api": {
                "current": "azure:apimanagement/gatewayApi:GatewayApi",
                "majorVersion": 5
            },
            "azurerm_api_management_gateway_certificate_authority": {
                "current": "azure:apimanagement/gatewayCertificateAuthority:GatewayCertificateAuthority",
                "majorVersion": 5
            },
            "azurerm_api_management_gateway_host_name_configuration": {
                "current": "azure:apimanagement/gatewayHostNameConfiguration:GatewayHostNameConfiguration",
                "majorVersion": 5
            },
            "azurerm_api_management_global_schema": {
                "current": "azure:apimanagement/globalSchema:GlobalSchema",
                "majorVersion": 5
            },
            "azurerm_api_management_group": {
                "current": "azure:apimanagement/group:Group",
                "majorVersion": 5
            },
            "azurerm_api_management_group_user": {
                "current": "azure:apimanagement/groupUser:GroupUser",
                "majorVersion": 5
            },
            "azurerm_api_management_identity_provider_aad": {
                "current": "azure:apimanagement/identityProviderAad:IdentityProviderAad",
                "majorVersion": 5,
                "fields": {
                    "allowed_tenants": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_api_management_identity_provider_aadb2c": {
                "current": "azure:apimanagement/identityProviderAadb2c:IdentityProviderAadb2c",
                "majorVersion": 5
            },
            "azurerm_api_management_identity_provider_facebook": {
                "current": "azure:apimanagement/identityProviderFacebook:IdentityProviderFacebook",
                "majorVersion": 5
            },
            "azurerm_api_management_identity_provider_google": {
                "current": "azure:apimanagement/identityProviderGoogle:IdentityProviderGoogle",
                "majorVersion": 5
            },
            "azurerm_api_management_identity_provider_microsoft": {
                "current": "azure:apimanagement/identityProviderMicrosoft:IdentityProviderMicrosoft",
                "majorVersion": 5
            },
            "azurerm_api_management_identity_provider_twitter": {
                "current": "azure:apimanagement/identityProviderTwitter:IdentityProviderTwitter",
                "majorVersion": 5
            },
            "azurerm_api_management_logger": {
                "current": "azure:apimanagement/logger:Logger",
                "majorVersion": 5,
                "fields": {
                    "application_insights": {
                        "maxItemsOne": true
                    },
                    "eventhub": {
                        "maxItemsOne": true
                    }
                }
            },
            "azurerm_api_management_named_value": {
                "current": "azure:apimanagement/namedValue:NamedValue",
                "majorVersion": 5,
                "fields": {
                    "tags": {
                        "maxItemsOne": false
                    },
                    "value_from_key_vault": {
                        "maxItemsOne": true
                    }
                }
            },
            "azurerm_api_management_notification_recipient_email": {
                "current": "azure:apimanagement/notificationRecipientEmail:NotificationRecipientEmail",
                "majorVersion": 5
            },
            "azurerm_api_management_notification_recipient_user": {
                "current": "azure:apimanagement/notificationRecipientUser:NotificationRecipientUser",
                "majorVersion": 5
            },
            "azurerm_api_management_openid_connect_provider": {
                "current": "azure:apimanagement/openIdConnectProvider:OpenIdConnectProvider",
                "majorVersion": 5
            },
            "azurerm_api_management_policy": {
                "current": "azure:apimanagement/policy:Policy",
                "majorVersion": 5
            },
            "azurerm_api_management_product": {
                "current": "azure:apimanagement/product:Product",
                "majorVersion": 5
            },
            "azurerm_api_management_product_api": {
                "current": "azure:apimanagement/productApi:ProductApi",
                "majorVersion": 5
            },
            "azurerm_api_management_product_group": {
                "current": "azure:apimanagement/productGroup:ProductGroup",
                "majorVersion": 5
            },
            "azurerm_api_management_product_policy": {
                "current": "azure:apimanagement/productPolicy:ProductPolicy",
                "majorVersion": 5
            },
            "azurerm_api_management_product_tag": {
                "current": "azure:apimanagement/productTag:ProductTag",
                "majorVersion": 5
            },
            "azurerm_api_management_redis_cache": {
                "current": "azure:apimanagement/redisCache:RedisCache",
                "majorVersion": 5
            },
            "azurerm_api_management_subscription": {
                "current": "azure:apimanagement/subscription:Subscription",
                "majorVersion": 5
            },
            "azurerm_api_management_tag": {
                "current": "azure:apimanagement/tag:Tag",
                "majorVersion": 5
            },
            "azurerm_api_management_user": {
                "current": "azure:apimanagement/user:User",
                "majorVersion": 5
            },
            "azurerm_app_configuration": {
                "current": "azure:appconfiguration/configurationStore:ConfigurationStore",
                "majorVersion": 5,
                "fields": {
                    "encryption": {
                        "maxItemsOne": true
                    },
                    "identity": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "identity_ids": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "primary_read_key": {
                        "maxItemsOne": false
                    },
                    "primary_write_key": {
                        "maxItemsOne": false
                    },
                    "replica": {
                        "maxItemsOne": false
                    },
                    "secondary_read_key": {
                        "maxItemsOne": false
                    },
                    "secondary_write_key": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_app_configuration_feature": {
                "current": "azure:appconfiguration/configurationFeature:ConfigurationFeature",
                "majorVersion": 5,
                "fields": {
                    "targeting_filter": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "groups": {
                                    "maxItemsOne": false
                                },
                                "users": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "timewindow_filter": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_app_configuration_key": {
                "current": "azure:appconfiguration/configurationKey:ConfigurationKey",
                "majorVersion": 5
            },
            "azurerm_app_service": {
                "current": "azure:appservice/appService:AppService",
                "majorVersion": 5,
                "fields": {
                    "auth_settings": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "active_directory": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "allowed_audiences": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "allowed_external_redirect_urls": {
                                    "maxItemsOne": false
                                },
                                "facebook": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "oauth_scopes": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "google": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "oauth_scopes": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "microsoft": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "oauth_scopes": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "twitter": {
                                    "maxItemsOne": true
                                }
                            }
                        }
                    },
                    "backup": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "schedule": {
                                    "maxItemsOne": true
                                }
                            }
                        }
                    },
                    "connection_string": {
                        "maxItemsOne": false
                    },
                    "identity": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "identity_ids": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "logs": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "application_logs": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "azure_blob_storage": {
                                                "maxItemsOne": true
                                            }
                                        }
                                    }
                                },
                                "http_logs": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "azure_blob_storage": {
                                                "maxItemsOne": true
                                            },
                                            "file_system": {
                                                "maxItemsOne": true
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "outbound_ip_address_list": {
                        "maxItemsOne": false
                    },
                    "possible_outbound_ip_address_list": {
                        "maxItemsOne": false
                    },
                    "site_config": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "cors": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "allowed_origins": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "default_documents": {
                                    "maxItemsOne": false
                                },
                                "ip_restriction": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "headers": {
                                                "maxItemsOne": true,
                                                "elem": {
                                                    "fields": {
                                                        "x_azure_fdid": {
                                                            "maxItemsOne": false
                                                        },
                                                        "x_fd_health_probe": {
                                                            "maxItemsOne": true
                                                        },
                                                        "x_forwarded_for": {
                                                            "maxItemsOne": false
                                                        },
                                                        "x_forwarded_host": {
                                                            "maxItemsOne": false
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "scm_ip_restriction": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "headers": {
                                                "maxItemsOne": true,
                                                "elem": {
                                                    "fields": {
                                                        "x_azure_fdid": {
                                                            "maxItemsOne": false
                                                        },
                                                        "x_fd_health_probe": {
                                                            "maxItemsOne": true
                                                        },
                                                        "x_forwarded_for": {
                                                            "maxItemsOne": false
                                                        },
                                                        "x_forwarded_host": {
                                                            "maxItemsOne": false
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "site_credential": {
                        "maxItemsOne": false
                    },
                    "source_control": {
                        "maxItemsOne": true
                    },
                    "storage_account": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_app_service_active_slot": {
                "current": "azure:appservice/activeSlot:ActiveSlot",
                "majorVersion": 5
            },
            "azurerm_app_service_certificate": {
                "current": "azure:appservice/certificate:Certificate",
                "majorVersion": 5,
                "fields": {
                    "host_names": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_app_service_certificate_binding": {
                "current": "azure:appservice/certificateBinding:CertificateBinding",
                "majorVersion": 5
            },
            "azurerm_app_service_certificate_order": {
                "current": "azure:appservice/certificateOrder:CertificateOrder",
                "majorVersion": 5,
                "fields": {
                    "app_service_certificate_not_renewable_reasons": {
                        "maxItemsOne": false
                    },
                    "certificates": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_app_service_connection": {
                "current": "azure:appservice/connection:Connection",
                "majorVersion": 5,
                "fields": {
                    "authentication": {
                        "maxItemsOne": true
                    },
                    "secret_store": {
                        "maxItemsOne": true
                    }
                }
            },
            "azurerm_app_service_custom_hostname_binding": {
                "current": "azure:appservice/customHostnameBinding:CustomHostnameBinding",
                "majorVersion": 5
            },
            "azurerm_app_service_environment": {
                "current": "azure:appservice/environment:Environment",
                "majorVersion": 5,
                "fields": {
                    "allowed_user_ip_cidrs": {
                        "maxItemsOne": false
                    },
                    "cluster_setting": {
                        "maxItemsOne": false
                    },
                    "outbound_ip_addresses": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_app_service_environment_v3": {
                "current": "azure:appservice/environmentV3:EnvironmentV3",
                "majorVersion": 5,
                "fields": {
                    "cluster_setting": {
                        "maxItemsOne": false
                    },
                    "external_inbound_ip_addresses": {
                        "maxItemsOne": false
                    },
                    "inbound_network_dependencies": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "ip_addresses": {
                                    "maxItemsOne": false
                                },
                                "ports": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "internal_inbound_ip_addresses": {
                        "maxItemsOne": false
                    },
                    "linux_outbound_ip_addresses": {
                        "maxItemsOne": false
                    },
                    "windows_outbound_ip_addresses": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_app_service_hybrid_connection": {
                "current": "azure:appservice/hybridConnection:HybridConnection",
                "majorVersion": 5
            },
            "azurerm_app_service_managed_certificate": {
                "current": "azure:appservice/managedCertificate:ManagedCertificate",
                "majorVersion": 5,
                "fields": {
                    "host_names": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_app_service_plan": {
                "current": "azure:appservice/plan:Plan",
                "majorVersion": 5,
                "fields": {
                    "sku": {
                        "maxItemsOne": true
                    }
                }
            },
            "azurerm_app_service_public_certificate": {
                "current": "azure:appservice/publicCertificate:PublicCertificate",
                "majorVersion": 5
            },
            "azurerm_app_service_slot": {
                "current": "azure:appservice/slot:Slot",
                "majorVersion": 5,
                "fields": {
                    "auth_settings": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "active_directory": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "allowed_audiences": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "allowed_external_redirect_urls": {
                                    "maxItemsOne": false
                                },
                                "facebook": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "oauth_scopes": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "google": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "oauth_scopes": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "microsoft": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "oauth_scopes": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "twitter": {
                                    "maxItemsOne": true
                                }
                            }
                        }
                    },
                    "connection_string": {
                        "maxItemsOne": false
                    },
                    "identity": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "identity_ids": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "logs": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "application_logs": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "azure_blob_storage": {
                                                "maxItemsOne": true
                                            }
                                        }
                                    }
                                },
                                "http_logs": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "azure_blob_storage": {
                                                "maxItemsOne": true
                                            },
                                            "file_system": {
                                                "maxItemsOne": true
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "site_config": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "cors": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "allowed_origins": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "default_documents": {
                                    "maxItemsOne": false
                                },
                                "ip_restriction": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "headers": {
                                                "maxItemsOne": true,
                                                "elem": {
                                                    "fields": {
                                                        "x_azure_fdid": {
                                                            "maxItemsOne": false
                                                        },
                                                        "x_fd_health_probe": {
                                                            "maxItemsOne": true
                                                        },
                                                        "x_forwarded_for": {
                                                            "maxItemsOne": false
                                                        },
                                                        "x_forwarded_host": {
                                                            "maxItemsOne": false
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "scm_ip_restriction": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "headers": {
                                                "maxItemsOne": true,
                                                "elem": {
                                                    "fields": {
                                                        "x_azure_fdid": {
                                                            "maxItemsOne": false
                                                        },
                                                        "x_fd_health_probe": {
                                                            "maxItemsOne": true
                                                        },
                                                        "x_forwarded_for": {
                                                            "maxItemsOne": false
                                                        },
                                                        "x_forwarded_host": {
                                                            "maxItemsOne": false
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "site_credential": {
                        "maxItemsOne": false
                    },
                    "storage_account": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_app_service_slot_custom_hostname_binding": {
                "current": "azure:appservice/slotCustomHostnameBinding:SlotCustomHostnameBinding",
                "majorVersion": 5
            },
            "azurerm_app_service_slot_virtual_network_swift_connection": {
                "current": "azure:appservice/slotVirtualNetworkSwiftConnection:SlotVirtualNetworkSwiftConnection",
                "majorVersion": 5
            },
            "azurerm_app_service_source_control": {
                "current": "azure:appservice/sourceControl:SourceControl",
                "majorVersion": 5,
                "fields": {
                    "github_action_configuration": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "code_configuration": {
                                    "maxItemsOne": true
                                },
                                "container_configuration": {
                                    "maxItemsOne": true
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_app_service_source_control_slot": {
                "current": "azure:appservice/sourceControlSlot:SourceControlSlot",
                "majorVersion": 5,
                "fields": {
                    "github_action_configuration": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "code_configuration": {
                                    "maxItemsOne": true
                                },
                                "container_configuration": {
                                    "maxItemsOne": true
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_app_service_source_control_token": {
                "current": "azure:appservice/sourceCodeToken:SourceCodeToken",
                "majorVersion": 5
            },
            "azurerm_app_service_virtual_network_swift_connection": {
                "current": "azure:appservice/virtualNetworkSwiftConnection:VirtualNetworkSwiftConnection",
                "majorVersion": 5
            },
            "azurerm_application_gateway": {
                "current": "azure:network/applicationGateway:ApplicationGateway",
                "majorVersion": 5,
                "fields": {
                    "authentication_certificate": {
                        "maxItemsOne": false
                    },
                    "autoscale_configuration": {
                        "maxItemsOne": true
                    },
                    "backend_address_pool": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "fqdns": {
                                    "maxItemsOne": false
                                },
                                "ip_addresses": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "backend_http_settings": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "authentication_certificate": {
                                    "maxItemsOne": false
                                },
                                "connection_draining": {
                                    "maxItemsOne": true
                                },
                                "trusted_root_certificate_names": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "custom_error_configuration": {
                        "maxItemsOne": false
                    },
                    "frontend_ip_configuration": {
                        "maxItemsOne": false
                    },
                    "frontend_port": {
                        "maxItemsOne": false
                    },
                    "gateway_ip_configuration": {
                        "maxItemsOne": false
                    },
                    "global": {
                        "maxItemsOne": true
                    },
                    "http_listener": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "custom_error_configuration": {
                                    "maxItemsOne": false
                                },
                                "host_names": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "identity": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "identity_ids": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "private_endpoint_connection": {
                        "maxItemsOne": false
                    },
                    "private_link_configuration": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "ip_configuration": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "probe": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "match": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "status_code": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "redirect_configuration": {
                        "maxItemsOne": false
                    },
                    "request_routing_rule": {
                        "maxItemsOne": false
                    },
                    "rewrite_rule_set": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "rewrite_rule": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "condition": {
                                                "maxItemsOne": false
                                            },
                                            "request_header_configuration": {
                                                "maxItemsOne": false
                                            },
                                            "response_header_configuration": {
                                                "maxItemsOne": false
                                            },
                                            "url": {
                                                "maxItemsOne": true
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "sku": {
                        "maxItemsOne": true
                    },
                    "ssl_certificate": {
                        "maxItemsOne": false
                    },
                    "ssl_policy": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "cipher_suites": {
                                    "maxItemsOne": false
                                },
                                "disabled_protocols": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "ssl_profile": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "ssl_policy": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "cipher_suites": {
                                                "maxItemsOne": false
                                            },
                                            "disabled_protocols": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "trusted_client_certificate_names": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "trusted_client_certificate": {
                        "maxItemsOne": false
                    },
                    "trusted_root_certificate": {
                        "maxItemsOne": false
                    },
                    "url_path_map": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "path_rule": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "paths": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "waf_configuration": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "disabled_rule_group": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "rules": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "exclusion": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "zones": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_application_insights": {
                "current": "azure:appinsights/insights:Insights",
                "majorVersion": 5
            },
            "azurerm_application_insights_analytics_item": {
                "current": "azure:appinsights/analyticsItem:AnalyticsItem",
                "majorVersion": 5
            },
            "azurerm_application_insights_api_key": {
                "current": "azure:appinsights/apiKey:ApiKey",
                "majorVersion": 5,
                "fields": {
                    "read_permissions": {
                        "maxItemsOne": false
                    },
                    "write_permissions": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_application_insights_smart_detection_rule": {
                "current": "azure:appinsights/smartDetectionRule:SmartDetectionRule",
                "majorVersion": 5,
                "fields": {
                    "additional_email_recipients": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_application_insights_standard_web_test": {
                "current": "azure:appinsights/standardWebTest:StandardWebTest",
                "majorVersion": 5,
                "fields": {
                    "geo_locations": {
                        "maxItemsOne": false
                    },
                    "request": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "header": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "validation_rules": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "content": {
                                    "maxItemsOne": true
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_application_insights_web_test": {
                "current": "azure:appinsights/webTest:WebTest",
                "majorVersion": 5,
                "fields": {
                    "geo_locations": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_application_insights_workbook": {
                "current": "azure:appinsights/workbook:Workbook",
                "majorVersion": 5,
                "fields": {
                    "identity": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "identity_ids": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_application_insights_workbook_template": {
                "current": "azure:appinsights/workbookTemplate:WorkbookTemplate",
                "majorVersion": 5,
                "fields": {
                    "galleries": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_application_load_balancer": {
                "current": "azure:appconfiguration/licationLoadBalancer:LicationLoadBalancer",
                "majorVersion": 5
            },
            "azurerm_application_load_balancer_frontend": {
                "current": "azure:appconfiguration/licationLoadBalancerFrontend:LicationLoadBalancerFrontend",
                "majorVersion": 5
            },
            "azurerm_application_load_balancer_subnet_association": {
                "current": "azure:appconfiguration/licationLoadBalancerSubnetAssociation:LicationLoadBalancerSubnetAssociation",
                "majorVersion": 5
            },
            "azurerm_application_security_group": {
                "current": "azure:network/applicationSecurityGroup:ApplicationSecurityGroup",
                "majorVersion": 5
            },
            "azurerm_arc_kubernetes_cluster": {
                "current": "azure:arckubernetes/cluster:Cluster",
                "majorVersion": 5,
                "fields": {
                    "identity": {
                        "maxItemsOne": true
                    }
                }
            },
            "azurerm_arc_kubernetes_cluster_extension": {
                "current": "azure:arckubernetes/clusterExtension:ClusterExtension",
                "majorVersion": 5,
                "fields": {
                    "identity": {
                        "maxItemsOne": true
                    }
                }
            },
            "azurerm_arc_kubernetes_flux_configuration": {
                "current": "azure:arckubernetes/fluxConfiguration:FluxConfiguration",
                "majorVersion": 5,
                "fields": {
                    "blob_storage": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "service_principal": {
                                    "maxItemsOne": true
                                }
                            }
                        }
                    },
                    "bucket": {
                        "maxItemsOne": true
                    },
                    "git_repository": {
                        "maxItemsOne": true
                    },
                    "kustomizations": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "depends_on": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_arc_machine_extension": {
                "current": "azure:arcmachine/extension:Extension",
                "majorVersion": 5
            },
            "azurerm_arc_private_link_scope": {
                "current": "azure:arc/privateLinkScope:PrivateLinkScope",
                "majorVersion": 5
            },
            "azurerm_arc_resource_bridge_appliance": {
                "current": "azure:arc/resourceBridgeAppliance:ResourceBridgeAppliance",
                "majorVersion": 5,
                "fields": {
                    "identity": {
                        "maxItemsOne": true
                    }
                }
            },
            "azurerm_attestation_provider": {
                "current": "azure:attestation/provider:Provider",
                "majorVersion": 5,
                "fields": {
                    "policy": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_automanage_configuration": {
                "current": "azure:automanage/configuration:Configuration",
                "majorVersion": 5,
                "fields": {
                    "antimalware": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "exclusions": {
                                    "maxItemsOne": true
                                }
                            }
                        }
                    },
                    "azure_security_baseline": {
                        "maxItemsOne": true
                    },
                    "backup": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "retention_policy": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "daily_schedule": {
                                                "maxItemsOne": true,
                                                "elem": {
                                                    "fields": {
                                                        "retention_duration": {
                                                            "maxItemsOne": true
                                                        },
                                                        "retention_times": {
                                                            "maxItemsOne": false
                                                        }
                                                    }
                                                }
                                            },
                                            "weekly_schedule": {
                                                "maxItemsOne": true,
                                                "elem": {
                                                    "fields": {
                                                        "retention_duration": {
                                                            "maxItemsOne": true
                                                        },
                                                        "retention_times": {
                                                            "maxItemsOne": false
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "schedule_policy": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "schedule_run_days": {
                                                "maxItemsOne": false
                                            },
                                            "schedule_run_times": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_automation_account": {
                "current": "azure:automation/account:Account",
                "majorVersion": 5,
                "fields": {
                    "encryption": {
                        "maxItemsOne": false
                    },
                    "identity": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "identity_ids": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "private_endpoint_connection": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_automation_certificate": {
                "current": "azure:automation/certificate:Certificate",
                "majorVersion": 5
            },
            "azurerm_automation_connection": {
                "current": "azure:automation/connection:Connection",
                "majorVersion": 5
            },
            "azurerm_automation_connection_certificate": {
                "current": "azure:automation/connectionCertificate:ConnectionCertificate",
                "majorVersion": 5
            },
            "azurerm_automation_connection_classic_certificate": {
                "current": "azure:automation/connectionClassicCertificate:ConnectionClassicCertificate",
                "majorVersion": 5
            },
            "azurerm_automation_connection_service_principal": {
                "current": "azure:automation/connectionServicePrincipal:ConnectionServicePrincipal",
                "majorVersion": 5
            },
            "azurerm_automation_connection_type": {
                "current": "azure:automation/connectionType:ConnectionType",
                "majorVersion": 5,
                "fields": {
                    "field": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_automation_credential": {
                "current": "azure:automation/credential:Credential",
                "majorVersion": 5
            },
            "azurerm_automation_dsc_configuration": {
                "current": "azure:automation/dscConfiguration:DscConfiguration",
                "majorVersion": 5
            },
            "azurerm_automation_dsc_nodeconfiguration": {
                "current": "azure:automation/dscNodeConfiguration:DscNodeConfiguration",
                "majorVersion": 5
            },
            "azurerm_automation_hybrid_runbook_worker": {
                "current": "azure:automation/hybridRunbookWorker:HybridRunbookWorker",
                "majorVersion": 5
            },
            "azurerm_automation_hybrid_runbook_worker_group": {
                "current": "azure:automation/hybridRunbookWorkerGroup:HybridRunbookWorkerGroup",
                "majorVersion": 5
            },
            "azurerm_automation_job_schedule": {
                "current": "azure:automation/jobSchedule:JobSchedule",
                "majorVersion": 5
            },
            "azurerm_automation_module": {
                "current": "azure:automation/module:Module",
                "majorVersion": 5,
                "fields": {
                    "module_link": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "hash": {
                                    "maxItemsOne": true
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_automation_python3_package": {
                "current": "azure:automation/python3Package:Python3Package",
                "majorVersion": 5
            },
            "azurerm_automation_runbook": {
                "current": "azure:automation/runBook:RunBook",
                "majorVersion": 5,
                "fields": {
                    "draft": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "content_link": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "hash": {
                                                "maxItemsOne": true
                                            }
                                        }
                                    }
                                },
                                "output_types": {
                                    "maxItemsOne": false
                                },
                                "parameters": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "job_schedule": {
                        "maxItemsOne": false
                    },
                    "publish_content_link": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "hash": {
                                    "maxItemsOne": true
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_automation_schedule": {
                "current": "azure:automation/schedule:Schedule",
                "majorVersion": 5,
                "fields": {
                    "month_days": {
                        "maxItemsOne": false
                    },
                    "monthly_occurrence": {
                        "maxItemsOne": false
                    },
                    "week_days": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_automation_software_update_configuration": {
                "current": "azure:automation/softwareUpdateConfiguration:SoftwareUpdateConfiguration",
                "majorVersion": 5,
                "fields": {
                    "linux": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "classifications_included": {
                                    "maxItemsOne": false
                                },
                                "excluded_packages": {
                                    "maxItemsOne": false
                                },
                                "included_packages": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "non_azure_computer_names": {
                        "maxItemsOne": false
                    },
                    "post_task": {
                        "maxItemsOne": false
                    },
                    "pre_task": {
                        "maxItemsOne": false
                    },
                    "schedule": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "advanced_month_days": {
                                    "maxItemsOne": false
                                },
                                "advanced_week_days": {
                                    "maxItemsOne": false
                                },
                                "monthly_occurrence": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "target": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "azure_query": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "locations": {
                                                "maxItemsOne": false
                                            },
                                            "scope": {
                                                "maxItemsOne": false
                                            },
                                            "tags": {
                                                "maxItemsOne": false,
                                                "elem": {
                                                    "fields": {
                                                        "values": {
                                                            "maxItemsOne": false
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "non_azure_query": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "virtual_machine_ids": {
                        "maxItemsOne": false
                    },
                    "windows": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "classifications_included": {
                                    "maxItemsOne": false
                                },
                                "excluded_knowledge_base_numbers": {
                                    "maxItemsOne": false
                                },
                                "included_knowledge_base_numbers": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_automation_source_control": {
                "current": "azure:automation/sourceControl:SourceControl",
                "majorVersion": 5,
                "fields": {
                    "security": {
                        "maxItemsOne": true
                    }
                }
            },
            "azurerm_automation_variable_bool": {
                "current": "azure:automation/boolVariable:BoolVariable",
                "majorVersion": 5
            },
            "azurerm_automation_variable_datetime": {
                "current": "azure:automation/dateTimeVariable:DateTimeVariable",
                "majorVersion": 5
            },
            "azurerm_automation_variable_int": {
                "current": "azure:automation/intVariable:IntVariable",
                "majorVersion": 5
            },
            "azurerm_automation_variable_object": {
                "current": "azure:automation/variableObject:VariableObject",
                "majorVersion": 5
            },
            "azurerm_automation_variable_string": {
                "current": "azure:automation/stringVariable:StringVariable",
                "majorVersion": 5
            },
            "azurerm_automation_watcher": {
                "current": "azure:automation/watcher:Watcher",
                "majorVersion": 5
            },
            "azurerm_automation_webhook": {
                "current": "azure:automation/webhook:Webhook",
                "majorVersion": 5
            },
            "azurerm_availability_set": {
                "current": "azure:compute/availabilitySet:AvailabilitySet",
                "majorVersion": 5
            },
            "azurerm_backup_container_storage_account": {
                "current": "azure:backup/containerStorageAccount:ContainerStorageAccount",
                "majorVersion": 5
            },
            "azurerm_backup_policy_file_share": {
                "current": "azure:backup/policyFileShare:PolicyFileShare",
                "majorVersion": 5,
                "fields": {
                    "backup": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "hourly": {
                                    "maxItemsOne": true
                                }
                            }
                        }
                    },
                    "retention_daily": {
                        "maxItemsOne": true
                    },
                    "retention_monthly": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "days": {
                                    "maxItemsOne": false
                                },
                                "weekdays": {
                                    "maxItemsOne": false
                                },
                                "weeks": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "retention_weekly": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "weekdays": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "retention_yearly": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "days": {
                                    "maxItemsOne": false
                                },
                                "months": {
                                    "maxItemsOne": false
                                },
                                "weekdays": {
                                    "maxItemsOne": false
                                },
                                "weeks": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_backup_policy_vm": {
                "current": "azure:backup/policyVM:PolicyVM",
                "majorVersion": 5,
                "fields": {
                    "backup": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "weekdays": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "instant_restore_resource_group": {
                        "maxItemsOne": true
                    },
                    "retention_daily": {
                        "maxItemsOne": true
                    },
                    "retention_monthly": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "days": {
                                    "maxItemsOne": false
                                },
                                "weekdays": {
                                    "maxItemsOne": false
                                },
                                "weeks": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "retention_weekly": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "weekdays": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "retention_yearly": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "days": {
                                    "maxItemsOne": false
                                },
                                "months": {
                                    "maxItemsOne": false
                                },
                                "weekdays": {
                                    "maxItemsOne": false
                                },
                                "weeks": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_backup_policy_vm_workload": {
                "current": "azure:backup/policyVMWorkload:PolicyVMWorkload",
                "majorVersion": 5,
                "fields": {
                    "protection_policy": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "backup": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "weekdays": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "retention_daily": {
                                    "maxItemsOne": true
                                },
                                "retention_monthly": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "monthdays": {
                                                "maxItemsOne": false
                                            },
                                            "weekdays": {
                                                "maxItemsOne": false
                                            },
                                            "weeks": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "retention_weekly": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "weekdays": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "retention_yearly": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "monthdays": {
                                                "maxItemsOne": false
                                            },
                                            "months": {
                                                "maxItemsOne": false
                                            },
                                            "weekdays": {
                                                "maxItemsOne": false
                                            },
                                            "weeks": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "simple_retention": {
                                    "maxItemsOne": true
                                }
                            }
                        }
                    },
                    "settings": {
                        "maxItemsOne": true
                    }
                }
            },
            "azurerm_backup_protected_file_share": {
                "current": "azure:backup/protectedFileShare:ProtectedFileShare",
                "majorVersion": 5
            },
            "azurerm_backup_protected_vm": {
                "current": "azure:backup/protectedVM:ProtectedVM",
                "majorVersion": 5,
                "fields": {
                    "exclude_disk_luns": {
                        "maxItemsOne": false
                    },
                    "include_disk_luns": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_bastion_host": {
                "current": "azure:compute/bastionHost:BastionHost",
                "majorVersion": 5,
                "fields": {
                    "ip_configuration": {
                        "maxItemsOne": true
                    }
                }
            },
            "azurerm_batch_account": {
                "current": "azure:batch/account:Account",
                "majorVersion": 5,
                "fields": {
                    "allowed_authentication_modes": {
                        "maxItemsOne": false
                    },
                    "encryption": {
                        "maxItemsOne": true
                    },
                    "identity": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "identity_ids": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "key_vault_reference": {
                        "maxItemsOne": true
                    },
                    "network_profile": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "account_access": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "ip_rule": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "node_management_access": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "ip_rule": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_batch_application": {
                "current": "azure:batch/application:Application",
                "majorVersion": 5
            },
            "azurerm_batch_certificate": {
                "current": "azure:batch/certificate:Certificate",
                "majorVersion": 5
            },
            "azurerm_batch_job": {
                "current": "azure:batch/job:Job",
                "majorVersion": 5
            },
            "azurerm_batch_pool": {
                "current": "azure:batch/pool:Pool",
                "majorVersion": 5,
                "fields": {
                    "auto_scale": {
                        "maxItemsOne": true
                    },
                    "certificate": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "visibility": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "container_configuration": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "container_image_names": {
                                    "maxItemsOne": false
                                },
                                "container_registries": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "data_disks": {
                        "maxItemsOne": false
                    },
                    "disk_encryption": {
                        "maxItemsOne": false
                    },
                    "extensions": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "provision_after_extensions": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "fixed_scale": {
                        "maxItemsOne": true
                    },
                    "identity": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "identity_ids": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "mount": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "azure_blob_file_system": {
                                    "maxItemsOne": true
                                },
                                "azure_file_share": {
                                    "maxItemsOne": false
                                },
                                "cifs_mount": {
                                    "maxItemsOne": false
                                },
                                "nfs_mount": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "network_configuration": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "endpoint_configuration": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "network_security_group_rules": {
                                                "maxItemsOne": false,
                                                "elem": {
                                                    "fields": {
                                                        "source_port_ranges": {
                                                            "maxItemsOne": false
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "public_ips": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "node_placement": {
                        "maxItemsOne": false
                    },
                    "start_task": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "container": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "registry": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "resource_file": {
                                    "maxItemsOne": false
                                },
                                "user_identity": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "auto_user": {
                                                "maxItemsOne": true
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "storage_image_reference": {
                        "maxItemsOne": true
                    },
                    "task_scheduling_policy": {
                        "maxItemsOne": false
                    },
                    "user_accounts": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "linux_user_configuration": {
                                    "maxItemsOne": false
                                },
                                "windows_user_configuration": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "windows": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_billing_account_cost_management_export": {
                "current": "azure:billing/accountCostManagementExport:AccountCostManagementExport",
                "majorVersion": 5,
                "fields": {
                    "export_data_options": {
                        "maxItemsOne": true
                    },
                    "export_data_storage_location": {
                        "maxItemsOne": true
                    }
                }
            },
            "azurerm_blueprint_assignment": {
                "current": "azure:blueprint/assignment:Assignment",
                "majorVersion": 5,
                "fields": {
                    "identity": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "identity_ids": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "lock_exclude_actions": {
                        "maxItemsOne": false
                    },
                    "lock_exclude_principals": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_bot_channel_alexa": {
                "current": "azure:bot/channelAlexa:ChannelAlexa",
                "majorVersion": 5
            },
            "azurerm_bot_channel_direct_line_speech": {
                "current": "azure:bot/channelDirectLineSpeech:ChannelDirectLineSpeech",
                "majorVersion": 5
            },
            "azurerm_bot_channel_directline": {
                "current": "azure:bot/channelDirectLine:ChannelDirectLine",
                "majorVersion": 5,
                "fields": {
                    "site": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "trusted_origins": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_bot_channel_email": {
                "current": "azure:bot/channelEmail:ChannelEmail",
                "majorVersion": 5
            },
            "azurerm_bot_channel_facebook": {
                "current": "azure:bot/channelFacebook:ChannelFacebook",
                "majorVersion": 5,
                "fields": {
                    "page": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_bot_channel_line": {
                "current": "azure:bot/channelLine:ChannelLine",
                "majorVersion": 5,
                "fields": {
                    "line_channel": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_bot_channel_ms_teams": {
                "current": "azure:bot/channelTeams:ChannelTeams",
                "majorVersion": 5
            },
            "azurerm_bot_channel_slack": {
                "current": "azure:bot/channelSlack:ChannelSlack",
                "majorVersion": 5
            },
            "azurerm_bot_channel_sms": {
                "current": "azure:bot/channelSms:ChannelSms",
                "majorVersion": 5
            },
            "azurerm_bot_channel_web_chat": {
                "current": "azure:bot/channelWebChat:ChannelWebChat",
                "majorVersion": 5,
                "fields": {
                    "site": {
                        "maxItemsOne": false
                    },
                    "site_names": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_bot_channels_registration": {
                "current": "azure:bot/channelsRegistration:ChannelsRegistration",
                "majorVersion": 5
            },
            "azurerm_bot_connection": {
                "current": "azure:bot/connection:Connection",
                "majorVersion": 5
            },
            "azurerm_bot_service_azure_bot": {
                "current": "azure:bot/serviceAzureBot:ServiceAzureBot",
                "majorVersion": 5,
                "fields": {
                    "luis_app_ids": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_bot_web_app": {
                "current": "azure:bot/webApp:WebApp",
                "majorVersion": 5,
                "fields": {
                    "luis_app_ids": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_capacity_reservation": {
                "current": "azure:compute/capacityReservation:CapacityReservation",
                "majorVersion": 5,
                "fields": {
                    "sku": {
                        "maxItemsOne": true
                    }
                }
            },
            "azurerm_capacity_reservation_group": {
                "current": "azure:compute/capacityReservationGroup:CapacityReservationGroup",
                "majorVersion": 5,
                "fields": {
                    "zones": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_cdn_endpoint": {
                "current": "azure:cdn/endpoint:Endpoint",
                "majorVersion": 5,
                "fields": {
                    "content_types_to_compress": {
                        "maxItemsOne": false
                    },
                    "delivery_rule": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "cache_expiration_action": {
                                    "maxItemsOne": true
                                },
                                "cache_key_query_string_action": {
                                    "maxItemsOne": true
                                },
                                "cookies_condition": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "match_values": {
                                                "maxItemsOne": false
                                            },
                                            "transforms": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "device_condition": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "match_values": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "http_version_condition": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "match_values": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "modify_request_header_action": {
                                    "maxItemsOne": false
                                },
                                "modify_response_header_action": {
                                    "maxItemsOne": false
                                },
                                "post_arg_condition": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "match_values": {
                                                "maxItemsOne": false
                                            },
                                            "transforms": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "query_string_condition": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "match_values": {
                                                "maxItemsOne": false
                                            },
                                            "transforms": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "remote_address_condition": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "match_values": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "request_body_condition": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "match_values": {
                                                "maxItemsOne": false
                                            },
                                            "transforms": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "request_header_condition": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "match_values": {
                                                "maxItemsOne": false
                                            },
                                            "transforms": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "request_method_condition": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "match_values": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "request_scheme_condition": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "match_values": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "request_uri_condition": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "match_values": {
                                                "maxItemsOne": false
                                            },
                                            "transforms": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "url_file_extension_condition": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "match_values": {
                                                "maxItemsOne": false
                                            },
                                            "transforms": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "url_file_name_condition": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "match_values": {
                                                "maxItemsOne": false
                                            },
                                            "transforms": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "url_path_condition": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "match_values": {
                                                "maxItemsOne": false
                                            },
                                            "transforms": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "url_redirect_action": {
                                    "maxItemsOne": true
                                },
                                "url_rewrite_action": {
                                    "maxItemsOne": true
                                }
                            }
                        }
                    },
                    "geo_filter": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "country_codes": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "global_delivery_rule": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "cache_expiration_action": {
                                    "maxItemsOne": true
                                },
                                "cache_key_query_string_action": {
                                    "maxItemsOne": true
                                },
                                "modify_request_header_action": {
                                    "maxItemsOne": false
                                },
                                "modify_response_header_action": {
                                    "maxItemsOne": false
                                },
                                "url_redirect_action": {
                                    "maxItemsOne": true
                                },
                                "url_rewrite_action": {
                                    "maxItemsOne": true
                                }
                            }
                        }
                    },
                    "origin": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_cdn_endpoint_custom_domain": {
                "current": "azure:cdn/endpointCustomDomain:EndpointCustomDomain",
                "majorVersion": 5,
                "fields": {
                    "cdn_managed_https": {
                        "maxItemsOne": true
                    },
                    "user_managed_https": {
                        "maxItemsOne": true
                    }
                }
            },
            "azurerm_cdn_frontdoor_custom_domain": {
                "current": "azure:cdn/frontdoorCustomDomain:FrontdoorCustomDomain",
                "majorVersion": 5,
                "fields": {
                    "tls": {
                        "maxItemsOne": true
                    }
                }
            },
            "azurerm_cdn_frontdoor_custom_domain_association": {
                "current": "azure:cdn/frontdoorCustomDomainAssociation:FrontdoorCustomDomainAssociation",
                "majorVersion": 5,
                "fields": {
                    "cdn_frontdoor_route_ids": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_cdn_frontdoor_endpoint": {
                "current": "azure:cdn/frontdoorEndpoint:FrontdoorEndpoint",
                "majorVersion": 5
            },
            "azurerm_cdn_frontdoor_firewall_policy": {
                "current": "azure:cdn/frontdoorFirewallPolicy:FrontdoorFirewallPolicy",
                "majorVersion": 5,
                "fields": {
                    "custom_rule": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "match_condition": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "match_values": {
                                                "maxItemsOne": false
                                            },
                                            "transforms": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "frontend_endpoint_ids": {
                        "maxItemsOne": false
                    },
                    "managed_rule": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "exclusion": {
                                    "maxItemsOne": false
                                },
                                "override": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "exclusion": {
                                                "maxItemsOne": false
                                            },
                                            "rule": {
                                                "maxItemsOne": false,
                                                "elem": {
                                                    "fields": {
                                                        "exclusion": {
                                                            "maxItemsOne": false
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_cdn_frontdoor_origin": {
                "current": "azure:cdn/frontdoorOrigin:FrontdoorOrigin",
                "majorVersion": 5,
                "fields": {
                    "private_link": {
                        "maxItemsOne": true
                    }
                }
            },
            "azurerm_cdn_frontdoor_origin_group": {
                "current": "azure:cdn/frontdoorOriginGroup:FrontdoorOriginGroup",
                "majorVersion": 5,
                "fields": {
                    "health_probe": {
                        "maxItemsOne": true
                    },
                    "load_balancing": {
                        "maxItemsOne": true
                    }
                }
            },
            "azurerm_cdn_frontdoor_profile": {
                "current": "azure:cdn/frontdoorProfile:FrontdoorProfile",
                "majorVersion": 5
            },
            "azurerm_cdn_frontdoor_route": {
                "current": "azure:cdn/frontdoorRoute:FrontdoorRoute",
                "majorVersion": 5,
                "fields": {
                    "cache": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "content_types_to_compress": {
                                    "maxItemsOne": false
                                },
                                "query_strings": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "cdn_frontdoor_custom_domain_ids": {
                        "maxItemsOne": false
                    },
                    "cdn_frontdoor_origin_ids": {
                        "maxItemsOne": false
                    },
                    "cdn_frontdoor_rule_set_ids": {
                        "maxItemsOne": false
                    },
                    "patterns_to_match": {
                        "maxItemsOne": false
                    },
                    "supported_protocols": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_cdn_frontdoor_route_disable_link_to_default_domain": {
                "current": "azure:cdn/frontdoorRouteDisableLinkToDefaultDomain:FrontdoorRouteDisableLinkToDefaultDomain",
                "majorVersion": 5,
                "fields": {
                    "cdn_frontdoor_custom_domain_ids": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_cdn_frontdoor_rule": {
                "current": "azure:cdn/frontdoorRule:FrontdoorRule",
                "majorVersion": 5,
                "fields": {
                    "actions": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "request_header_action": {
                                    "maxItemsOne": false
                                },
                                "response_header_action": {
                                    "maxItemsOne": false
                                },
                                "route_configuration_override_action": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "query_string_parameters": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "url_redirect_action": {
                                    "maxItemsOne": true
                                },
                                "url_rewrite_action": {
                                    "maxItemsOne": true
                                }
                            }
                        }
                    },
                    "conditions": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "client_port_condition": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "match_values": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "cookies_condition": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "match_values": {
                                                "maxItemsOne": false
                                            },
                                            "transforms": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "host_name_condition": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "match_values": {
                                                "maxItemsOne": false
                                            },
                                            "transforms": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "http_version_condition": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "match_values": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "is_device_condition": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "match_values": {
                                                "maxItemsOne": true
                                            }
                                        }
                                    }
                                },
                                "post_args_condition": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "match_values": {
                                                "maxItemsOne": false
                                            },
                                            "transforms": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "query_string_condition": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "match_values": {
                                                "maxItemsOne": false
                                            },
                                            "transforms": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "remote_address_condition": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "match_values": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "request_body_condition": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "match_values": {
                                                "maxItemsOne": false
                                            },
                                            "transforms": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "request_header_condition": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "match_values": {
                                                "maxItemsOne": false
                                            },
                                            "transforms": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "request_method_condition": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "match_values": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "request_scheme_condition": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "match_values": {
                                                "maxItemsOne": true
                                            }
                                        }
                                    }
                                },
                                "request_uri_condition": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "match_values": {
                                                "maxItemsOne": false
                                            },
                                            "transforms": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "server_port_condition": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "match_values": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "socket_address_condition": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "match_values": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "ssl_protocol_condition": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "match_values": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "url_file_extension_condition": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "match_values": {
                                                "maxItemsOne": false
                                            },
                                            "transforms": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "url_filename_condition": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "match_values": {
                                                "maxItemsOne": false
                                            },
                                            "transforms": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "url_path_condition": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "match_values": {
                                                "maxItemsOne": false
                                            },
                                            "transforms": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_cdn_frontdoor_rule_set": {
                "current": "azure:cdn/frontdoorRuleSet:FrontdoorRuleSet",
                "majorVersion": 5
            },
            "azurerm_cdn_frontdoor_secret": {
                "current": "azure:cdn/frontdoorSecret:FrontdoorSecret",
                "majorVersion": 5,
                "fields": {
                    "secret": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "customer_certificate": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "subject_alternative_names": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_cdn_frontdoor_security_policy": {
                "current": "azure:cdn/frontdoorSecurityPolicy:FrontdoorSecurityPolicy",
                "majorVersion": 5,
                "fields": {
                    "security_policies": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "firewall": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "association": {
                                                "maxItemsOne": true,
                                                "elem": {
                                                    "fields": {
                                                        "domain": {
                                                            "maxItemsOne": false
                                                        },
                                                        "patterns_to_match": {
                                                            "maxItemsOne": true
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_cdn_profile": {
                "current": "azure:cdn/profile:Profile",
                "majorVersion": 5
            },
            "azurerm_cognitive_account": {
                "current": "azure:cognitive/account:Account",
                "majorVersion": 5,
                "fields": {
                    "customer_managed_key": {
                        "maxItemsOne": true
                    },
                    "fqdns": {
                        "maxItemsOne": false
                    },
                    "identity": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "identity_ids": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "network_acls": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "ip_rules": {
                                    "maxItemsOne": false
                                },
                                "virtual_network_rules": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "storage": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_cognitive_account_customer_managed_key": {
                "current": "azure:cognitive/accountCustomerManagedKey:AccountCustomerManagedKey",
                "majorVersion": 5
            },
            "azurerm_cognitive_deployment": {
                "current": "azure:cognitive/deployment:Deployment",
                "majorVersion": 5,
                "fields": {
                    "model": {
                        "maxItemsOne": true
                    },
                    "scale": {
                        "maxItemsOne": true
                    }
                }
            },
            "azurerm_communication_service": {
                "current": "azure:communication/service:Service",
                "majorVersion": 5
            },
            "azurerm_confidential_ledger": {
                "current": "azure:confidentialledger/ledger:Ledger",
                "majorVersion": 5,
                "fields": {
                    "azuread_based_service_principal": {
                        "maxItemsOne": false
                    },
                    "certificate_based_security_principal": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_consumption_budget_management_group": {
                "current": "azure:consumption/budgetManagementGroup:BudgetManagementGroup",
                "majorVersion": 5,
                "fields": {
                    "filter": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "dimension": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "values": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "not": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "dimension": {
                                                "maxItemsOne": true,
                                                "elem": {
                                                    "fields": {
                                                        "values": {
                                                            "maxItemsOne": false
                                                        }
                                                    }
                                                }
                                            },
                                            "tag": {
                                                "maxItemsOne": true,
                                                "elem": {
                                                    "fields": {
                                                        "values": {
                                                            "maxItemsOne": false
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "tag": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "values": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "notification": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "contact_emails": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "time_period": {
                        "maxItemsOne": true
                    }
                }
            },
            "azurerm_consumption_budget_resource_group": {
                "current": "azure:consumption/budgetResourceGroup:BudgetResourceGroup",
                "majorVersion": 5,
                "fields": {
                    "filter": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "dimension": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "values": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "not": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "dimension": {
                                                "maxItemsOne": true,
                                                "elem": {
                                                    "fields": {
                                                        "values": {
                                                            "maxItemsOne": false
                                                        }
                                                    }
                                                }
                                            },
                                            "tag": {
                                                "maxItemsOne": true,
                                                "elem": {
                                                    "fields": {
                                                        "values": {
                                                            "maxItemsOne": false
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "tag": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "values": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "notification": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "contact_emails": {
                                    "maxItemsOne": false
                                },
                                "contact_groups": {
                                    "maxItemsOne": false
                                },
                                "contact_roles": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "time_period": {
                        "maxItemsOne": true
                    }
                }
            },
            "azurerm_consumption_budget_subscription": {
                "current": "azure:consumption/budgetSubscription:BudgetSubscription",
                "majorVersion": 5,
                "fields": {
                    "filter": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "dimension": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "values": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "not": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "dimension": {
                                                "maxItemsOne": true,
                                                "elem": {
                                                    "fields": {
                                                        "values": {
                                                            "maxItemsOne": false
                                                        }
                                                    }
                                                }
                                            },
                                            "tag": {
                                                "maxItemsOne": true,
                                                "elem": {
                                                    "fields": {
                                                        "values": {
                                                            "maxItemsOne": false
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "tag": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "values": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "notification": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "contact_emails": {
                                    "maxItemsOne": false
                                },
                                "contact_groups": {
                                    "maxItemsOne": false
                                },
                                "contact_roles": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "time_period": {
                        "maxItemsOne": true
                    }
                }
            },
            "azurerm_container_app": {
                "current": "azure:containerapp/app:App",
                "majorVersion": 5,
                "fields": {
                    "dapr": {
                        "maxItemsOne": true
                    },
                    "identity": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "identity_ids": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "ingress": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "custom_domain": {
                                    "maxItemsOne": true
                                },
                                "traffic_weight": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "outbound_ip_addresses": {
                        "maxItemsOne": false
                    },
                    "registry": {
                        "maxItemsOne": false
                    },
                    "secret": {
                        "maxItemsOne": false
                    },
                    "template": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "azure_queue_scale_rule": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "authentication": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "container": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "args": {
                                                "maxItemsOne": false
                                            },
                                            "command": {
                                                "maxItemsOne": false
                                            },
                                            "env": {
                                                "maxItemsOne": false
                                            },
                                            "liveness_probe": {
                                                "maxItemsOne": false,
                                                "elem": {
                                                    "fields": {
                                                        "header": {
                                                            "maxItemsOne": false
                                                        }
                                                    }
                                                }
                                            },
                                            "readiness_probe": {
                                                "maxItemsOne": false,
                                                "elem": {
                                                    "fields": {
                                                        "header": {
                                                            "maxItemsOne": false
                                                        }
                                                    }
                                                }
                                            },
                                            "startup_probe": {
                                                "maxItemsOne": false,
                                                "elem": {
                                                    "fields": {
                                                        "header": {
                                                            "maxItemsOne": false
                                                        }
                                                    }
                                                }
                                            },
                                            "volume_mounts": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "custom_scale_rule": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "authentication": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "http_scale_rule": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "authentication": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "tcp_scale_rule": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "authentication": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "volume": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_container_app_environment": {
                "current": "azure:containerapp/environment:Environment",
                "majorVersion": 5,
                "fields": {
                    "workload_profile": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_container_app_environment_certificate": {
                "current": "azure:containerapp/environmentCertificate:EnvironmentCertificate",
                "majorVersion": 5
            },
            "azurerm_container_app_environment_dapr_component": {
                "current": "azure:containerapp/environmentDaprComponent:EnvironmentDaprComponent",
                "majorVersion": 5,
                "fields": {
                    "metadata": {
                        "maxItemsOne": false
                    },
                    "scopes": {
                        "maxItemsOne": false
                    },
                    "secret": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_container_app_environment_storage": {
                "current": "azure:containerapp/environmentStorage:EnvironmentStorage",
                "majorVersion": 5
            },
            "azurerm_container_connected_registry": {
                "current": "azure:containerservice/connectedRegistry:ConnectedRegistry",
                "majorVersion": 5,
                "fields": {
                    "client_token_ids": {
                        "maxItemsOne": false
                    },
                    "notification": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_container_group": {
                "current": "azure:containerservice/group:Group",
                "majorVersion": 5,
                "fields": {
                    "container": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "commands": {
                                    "maxItemsOne": false
                                },
                                "gpu": {
                                    "maxItemsOne": true
                                },
                                "gpu_limit": {
                                    "maxItemsOne": true
                                },
                                "liveness_probe": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "exec": {
                                                "maxItemsOne": false
                                            },
                                            "http_get": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "ports": {
                                    "maxItemsOne": false
                                },
                                "readiness_probe": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "exec": {
                                                "maxItemsOne": false
                                            },
                                            "http_get": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "security": {
                                    "maxItemsOne": false
                                },
                                "volume": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "git_repo": {
                                                "maxItemsOne": true
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "diagnostics": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "log_analytics": {
                                    "maxItemsOne": true
                                }
                            }
                        }
                    },
                    "dns_config": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "nameservers": {
                                    "maxItemsOne": false
                                },
                                "options": {
                                    "maxItemsOne": false
                                },
                                "search_domains": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "exposed_port": {
                        "maxItemsOne": false
                    },
                    "identity": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "identity_ids": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "image_registry_credential": {
                        "maxItemsOne": false
                    },
                    "init_container": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "commands": {
                                    "maxItemsOne": false
                                },
                                "security": {
                                    "maxItemsOne": false
                                },
                                "volume": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "git_repo": {
                                                "maxItemsOne": true
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "subnet_ids": {
                        "maxItemsOne": true
                    },
                    "zones": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_container_registry": {
                "current": "azure:containerservice/registry:Registry",
                "majorVersion": 5,
                "fields": {
                    "encryption": {
                        "maxItemsOne": true
                    },
                    "georeplications": {
                        "maxItemsOne": false
                    },
                    "identity": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "identity_ids": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "network_rule_set": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "ip_rule": {
                                    "maxItemsOne": false
                                },
                                "virtual_network": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "retention_policy": {
                        "maxItemsOne": true
                    },
                    "trust_policy": {
                        "maxItemsOne": true
                    }
                }
            },
            "azurerm_container_registry_agent_pool": {
                "current": "azure:containerservice/registryAgentPool:RegistryAgentPool",
                "majorVersion": 5
            },
            "azurerm_container_registry_scope_map": {
                "current": "azure:containerservice/registryScopeMap:RegistryScopeMap",
                "majorVersion": 5,
                "fields": {
                    "actions": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_container_registry_task": {
                "current": "azure:containerservice/registryTask:RegistryTask",
                "majorVersion": 5,
                "fields": {
                    "agent_setting": {
                        "maxItemsOne": true
                    },
                    "base_image_trigger": {
                        "maxItemsOne": true
                    },
                    "docker_step": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "image_names": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "encoded_step": {
                        "maxItemsOne": true
                    },
                    "file_step": {
                        "maxItemsOne": true
                    },
                    "identity": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "identity_ids": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "platform": {
                        "maxItemsOne": true
                    },
                    "registry_credential": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "custom": {
                                    "maxItemsOne": false
                                },
                                "source": {
                                    "maxItemsOne": true
                                }
                            }
                        }
                    },
                    "source_trigger": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "authentication": {
                                    "maxItemsOne": true
                                },
                                "events": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "timer_trigger": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_container_registry_task_schedule_run_now": {
                "current": "azure:containerservice/registryTaskScheduleRunNow:RegistryTaskScheduleRunNow",
                "majorVersion": 5
            },
            "azurerm_container_registry_token": {
                "current": "azure:containerservice/registryToken:RegistryToken",
                "majorVersion": 5
            },
            "azurerm_container_registry_token_password": {
                "current": "azure:containerservice/tokenPassword:TokenPassword",
                "majorVersion": 5,
                "fields": {
                    "password1": {
                        "maxItemsOne": true
                    },
                    "password2": {
                        "maxItemsOne": true
                    }
                }
            },
            "azurerm_container_registry_webhook": {
                "current": "azure:containerservice/registryWebhook:RegistryWebhook",
                "majorVersion": 5,
                "fields": {
                    "actions": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_container_registry_webhook_legacy": {
                "current": "azure:containerservice/registryWebook:RegistryWebook",
                "majorVersion": 5,
                "fields": {
                    "actions": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_cosmosdb_account": {
                "current": "azure:cosmosdb/account:Account",
                "majorVersion": 5,
                "fields": {
                    "analytical_storage": {
                        "maxItemsOne": true
                    },
                    "backup": {
                        "maxItemsOne": true
                    },
                    "capabilities": {
                        "maxItemsOne": false
                    },
                    "capacity": {
                        "maxItemsOne": true
                    },
                    "connection_strings": {
                        "maxItemsOne": false
                    },
                    "consistency_policy": {
                        "maxItemsOne": true
                    },
                    "cors_rule": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "allowed_headers": {
                                    "maxItemsOne": false
                                },
                                "allowed_methods": {
                                    "maxItemsOne": false
                                },
                                "allowed_origins": {
                                    "maxItemsOne": false
                                },
                                "exposed_headers": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "geo_location": {
                        "maxItemsOne": false
                    },
                    "identity": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "identity_ids": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "network_acl_bypass_ids": {
                        "maxItemsOne": false
                    },
                    "read_endpoints": {
                        "maxItemsOne": false
                    },
                    "restore": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "database": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "collection_names": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "virtual_network_rule": {
                        "maxItemsOne": false
                    },
                    "write_endpoints": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_cosmosdb_cassandra_cluster": {
                "current": "azure:cosmosdb/cassandraCluster:CassandraCluster",
                "majorVersion": 5,
                "fields": {
                    "client_certificate_pems": {
                        "maxItemsOne": false
                    },
                    "external_gossip_certificate_pems": {
                        "maxItemsOne": false
                    },
                    "external_seed_node_ip_addresses": {
                        "maxItemsOne": false
                    },
                    "identity": {
                        "maxItemsOne": true
                    }
                }
            },
            "azurerm_cosmosdb_cassandra_datacenter": {
                "current": "azure:cosmosdb/cassandraDatacenter:CassandraDatacenter",
                "majorVersion": 5,
                "fields": {
                    "seed_node_ip_addresses": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_cosmosdb_cassandra_keyspace": {
                "current": "azure:cosmosdb/cassandraKeyspace:CassandraKeyspace",
                "majorVersion": 5,
                "fields": {
                    "autoscale_settings": {
                        "maxItemsOne": true
                    }
                }
            },
            "azurerm_cosmosdb_cassandra_table": {
                "current": "azure:cosmosdb/cassandraTable:CassandraTable",
                "majorVersion": 5,
                "fields": {
                    "autoscale_settings": {
                        "maxItemsOne": true
                    },
                    "schema": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "cluster_key": {
                                    "maxItemsOne": false
                                },
                                "column": {
                                    "maxItemsOne": false
                                },
                                "partition_key": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_cosmosdb_gremlin_database": {
                "current": "azure:cosmosdb/gremlinDatabase:GremlinDatabase",
                "majorVersion": 5,
                "fields": {
                    "autoscale_settings": {
                        "maxItemsOne": true
                    }
                }
            },
            "azurerm_cosmosdb_gremlin_graph": {
                "current": "azure:cosmosdb/gremlinGraph:GremlinGraph",
                "majorVersion": 5,
                "fields": {
                    "autoscale_settings": {
                        "maxItemsOne": true
                    },
                    "conflict_resolution_policy": {
                        "maxItemsOne": true
                    },
                    "index_policy": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "composite_index": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "index": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "excluded_paths": {
                                    "maxItemsOne": false
                                },
                                "included_paths": {
                                    "maxItemsOne": false
                                },
                                "spatial_index": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "types": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "unique_key": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "paths": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_cosmosdb_mongo_collection": {
                "current": "azure:cosmosdb/mongoCollection:MongoCollection",
                "majorVersion": 5,
                "fields": {
                    "autoscale_settings": {
                        "maxItemsOne": true
                    },
                    "index": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "keys": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "system_indexes": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "keys": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_cosmosdb_mongo_database": {
                "current": "azure:cosmosdb/mongoDatabase:MongoDatabase",
                "majorVersion": 5,
                "fields": {
                    "autoscale_settings": {
                        "maxItemsOne": true
                    }
                }
            },
            "azurerm_cosmosdb_mongo_role_definition": {
                "current": "azure:cosmosdb/mongoRoleDefinition:MongoRoleDefinition",
                "majorVersion": 5,
                "fields": {
                    "inherited_role_names": {
                        "maxItemsOne": false
                    },
                    "privilege": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "actions": {
                                    "maxItemsOne": false
                                },
                                "resource": {
                                    "maxItemsOne": true
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_cosmosdb_mongo_user_definition": {
                "current": "azure:cosmosdb/mongoUserDefinition:MongoUserDefinition",
                "majorVersion": 5,
                "fields": {
                    "inherited_role_names": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_cosmosdb_notebook_workspace": {
                "current": "azure:cosmosdb/notebookWorkspace:NotebookWorkspace",
                "majorVersion": 5
            },
            "azurerm_cosmosdb_postgresql_cluster": {
                "current": "azure:cosmosdb/postgresqlCluster:PostgresqlCluster",
                "majorVersion": 5,
                "fields": {
                    "maintenance_window": {
                        "maxItemsOne": true
                    }
                }
            },
            "azurerm_cosmosdb_postgresql_coordinator_configuration": {
                "current": "azure:cosmosdb/postgresqlCoordinatorConfiguration:PostgresqlCoordinatorConfiguration",
                "majorVersion": 5
            },
            "azurerm_cosmosdb_postgresql_firewall_rule": {
                "current": "azure:cosmosdb/postgresqlFirewallRule:PostgresqlFirewallRule",
                "majorVersion": 5
            },
            "azurerm_cosmosdb_postgresql_node_configuration": {
                "current": "azure:cosmosdb/postgresqlNodeConfiguration:PostgresqlNodeConfiguration",
                "majorVersion": 5
            },
            "azurerm_cosmosdb_postgresql_role": {
                "current": "azure:cosmosdb/postgresqlRole:PostgresqlRole",
                "majorVersion": 5
            },
            "azurerm_cosmosdb_sql_container": {
                "current": "azure:cosmosdb/sqlContainer:SqlContainer",
                "majorVersion": 5,
                "fields": {
                    "autoscale_settings": {
                        "maxItemsOne": true
                    },
                    "conflict_resolution_policy": {
                        "maxItemsOne": true
                    },
                    "indexing_policy": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "composite_index": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "index": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "excluded_path": {
                                    "maxItemsOne": false
                                },
                                "included_path": {
                                    "maxItemsOne": false
                                },
                                "spatial_index": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "types": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "unique_key": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "paths": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_cosmosdb_sql_database": {
                "current": "azure:cosmosdb/sqlDatabase:SqlDatabase",
                "majorVersion": 5,
                "fields": {
                    "autoscale_settings": {
                        "maxItemsOne": true
                    }
                }
            },
            "azurerm_cosmosdb_sql_dedicated_gateway": {
                "current": "azure:cosmosdb/sqlDedicatedGateway:SqlDedicatedGateway",
                "majorVersion": 5
            },
            "azurerm_cosmosdb_sql_function": {
                "current": "azure:cosmosdb/sqlFunction:SqlFunction",
                "majorVersion": 5
            },
            "azurerm_cosmosdb_sql_role_assignment": {
                "current": "azure:cosmosdb/sqlRoleAssignment:SqlRoleAssignment",
                "majorVersion": 5
            },
            "azurerm_cosmosdb_sql_role_definition": {
                "current": "azure:cosmosdb/sqlRoleDefinition:SqlRoleDefinition",
                "majorVersion": 5,
                "fields": {
                    "assignable_scopes": {
                        "maxItemsOne": false
                    },
                    "permissions": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "data_actions": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_cosmosdb_sql_stored_procedure": {
                "current": "azure:cosmosdb/sqlStoredProcedure:SqlStoredProcedure",
                "majorVersion": 5
            },
            "azurerm_cosmosdb_sql_trigger": {
                "current": "azure:cosmosdb/sqlTrigger:SqlTrigger",
                "majorVersion": 5
            },
            "azurerm_cosmosdb_table": {
                "current": "azure:cosmosdb/table:Table",
                "majorVersion": 5,
                "fields": {
                    "autoscale_settings": {
                        "maxItemsOne": true
                    }
                }
            },
            "azurerm_cost_anomaly_alert": {
                "current": "azure:costmanagement/anomalyAlert:AnomalyAlert",
                "majorVersion": 5,
                "fields": {
                    "email_addresses": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_cost_management_scheduled_action": {
                "current": "azure:costmanagement/scheduledAction:ScheduledAction",
                "majorVersion": 5,
                "fields": {
                    "days_of_week": {
                        "maxItemsOne": false
                    },
                    "email_addresses": {
                        "maxItemsOne": false
                    },
                    "weeks_of_month": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_custom_ip_prefix": {
                "current": "azure:customip/prefix:Prefix",
                "majorVersion": 5,
                "fields": {
                    "zones": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_custom_provider": {
                "current": "azure:core/customProvider:CustomProvider",
                "majorVersion": 5,
                "fields": {
                    "action": {
                        "maxItemsOne": false
                    },
                    "resource_type": {
                        "maxItemsOne": false
                    },
                    "validation": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_dashboard": {
                "current": "azure:portal/dashboard:Dashboard",
                "majorVersion": 5
            },
            "azurerm_dashboard_grafana": {
                "current": "azure:dashboard/grafana:Grafana",
                "majorVersion": 5,
                "fields": {
                    "azure_monitor_workspace_integrations": {
                        "maxItemsOne": false
                    },
                    "identity": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "identity_ids": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "outbound_ip": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_dashboard_legacy": {
                "current": "azure:dashboard/dashboard:Dashboard",
                "majorVersion": 5
            },
            "azurerm_data_factory": {
                "current": "azure:datafactory/factory:Factory",
                "majorVersion": 5,
                "fields": {
                    "github_configuration": {
                        "maxItemsOne": true
                    },
                    "global_parameter": {
                        "maxItemsOne": false
                    },
                    "identity": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "identity_ids": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "vsts_configuration": {
                        "maxItemsOne": true
                    }
                }
            },
            "azurerm_data_factory_custom_dataset": {
                "current": "azure:datafactory/customDataset:CustomDataset",
                "majorVersion": 5,
                "fields": {
                    "annotations": {
                        "maxItemsOne": false
                    },
                    "linked_service": {
                        "maxItemsOne": true
                    }
                }
            },
            "azurerm_data_factory_data_flow": {
                "current": "azure:datafactory/dataFlow:DataFlow",
                "majorVersion": 5,
                "fields": {
                    "annotations": {
                        "maxItemsOne": false
                    },
                    "script_lines": {
                        "maxItemsOne": false
                    },
                    "sink": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "dataset": {
                                    "maxItemsOne": true
                                },
                                "flowlet": {
                                    "maxItemsOne": true
                                },
                                "linked_service": {
                                    "maxItemsOne": true
                                },
                                "rejected_linked_service": {
                                    "maxItemsOne": true
                                },
                                "schema_linked_service": {
                                    "maxItemsOne": true
                                }
                            }
                        }
                    },
                    "source": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "dataset": {
                                    "maxItemsOne": true
                                },
                                "flowlet": {
                                    "maxItemsOne": true
                                },
                                "linked_service": {
                                    "maxItemsOne": true
                                },
                                "rejected_linked_service": {
                                    "maxItemsOne": true
                                },
                                "schema_linked_service": {
                                    "maxItemsOne": true
                                }
                            }
                        }
                    },
                    "transformation": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "dataset": {
                                    "maxItemsOne": true
                                },
                                "flowlet": {
                                    "maxItemsOne": true
                                },
                                "linked_service": {
                                    "maxItemsOne": true
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_data_factory_dataset_azure_blob": {
                "current": "azure:datafactory/datasetAzureBlob:DatasetAzureBlob",
                "majorVersion": 5,
                "fields": {
                    "annotations": {
                        "maxItemsOne": false
                    },
                    "schema_column": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_data_factory_dataset_azure_sql_table": {
                "current": "azure:datafactory/datasetAzureSqlTable:DatasetAzureSqlTable",
                "majorVersion": 5,
                "fields": {
                    "annotations": {
                        "maxItemsOne": false
                    },
                    "schema_column": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_data_factory_dataset_binary": {
                "current": "azure:datafactory/datasetBinary:DatasetBinary",
                "majorVersion": 5,
                "fields": {
                    "annotations": {
                        "maxItemsOne": false
                    },
                    "azure_blob_storage_location": {
                        "maxItemsOne": true
                    },
                    "compression": {
                        "maxItemsOne": true
                    },
                    "http_server_location": {
                        "maxItemsOne": true
                    },
                    "sftp_server_location": {
                        "maxItemsOne": true
                    }
                }
            },
            "azurerm_data_factory_dataset_cosmosdb_sqlapi": {
                "current": "azure:datafactory/datasetCosmosDBApi:DatasetCosmosDBApi",
                "majorVersion": 5,
                "fields": {
                    "annotations": {
                        "maxItemsOne": false
                    },
                    "schema_column": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_data_factory_dataset_delimited_text": {
                "current": "azure:datafactory/datasetDelimitedText:DatasetDelimitedText",
                "majorVersion": 5,
                "fields": {
                    "annotations": {
                        "maxItemsOne": false
                    },
                    "azure_blob_fs_location": {
                        "maxItemsOne": true
                    },
                    "azure_blob_storage_location": {
                        "maxItemsOne": true
                    },
                    "http_server_location": {
                        "maxItemsOne": true
                    },
                    "schema_column": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_data_factory_dataset_http": {
                "current": "azure:datafactory/datasetHttp:DatasetHttp",
                "majorVersion": 5,
                "fields": {
                    "annotations": {
                        "maxItemsOne": false
                    },
                    "schema_column": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_data_factory_dataset_json": {
                "current": "azure:datafactory/datasetJson:DatasetJson",
                "majorVersion": 5,
                "fields": {
                    "annotations": {
                        "maxItemsOne": false
                    },
                    "azure_blob_storage_location": {
                        "maxItemsOne": true
                    },
                    "http_server_location": {
                        "maxItemsOne": true
                    },
                    "schema_column": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_data_factory_dataset_mysql": {
                "current": "azure:datafactory/datasetMysql:DatasetMysql",
                "majorVersion": 5,
                "fields": {
                    "annotations": {
                        "maxItemsOne": false
                    },
                    "schema_column": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_data_factory_dataset_parquet": {
                "current": "azure:datafactory/datasetParquet:DatasetParquet",
                "majorVersion": 5,
                "fields": {
                    "annotations": {
                        "maxItemsOne": false
                    },
                    "azure_blob_fs_location": {
                        "maxItemsOne": true
                    },
                    "azure_blob_storage_location": {
                        "maxItemsOne": true
                    },
                    "http_server_location": {
                        "maxItemsOne": true
                    },
                    "schema_column": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_data_factory_dataset_postgresql": {
                "current": "azure:datafactory/datasetPostgresql:DatasetPostgresql",
                "majorVersion": 5,
                "fields": {
                    "annotations": {
                        "maxItemsOne": false
                    },
                    "schema_column": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_data_factory_dataset_snowflake": {
                "current": "azure:datafactory/datasetSnowflake:DatasetSnowflake",
                "majorVersion": 5,
                "fields": {
                    "annotations": {
                        "maxItemsOne": false
                    },
                    "schema_column": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_data_factory_dataset_sql_server_table": {
                "current": "azure:datafactory/datasetSqlServerTable:DatasetSqlServerTable",
                "majorVersion": 5,
                "fields": {
                    "annotations": {
                        "maxItemsOne": false
                    },
                    "schema_column": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_data_factory_flowlet_data_flow": {
                "current": "azure:datafactory/flowletDataFlow:FlowletDataFlow",
                "majorVersion": 5,
                "fields": {
                    "annotations": {
                        "maxItemsOne": false
                    },
                    "script_lines": {
                        "maxItemsOne": false
                    },
                    "sink": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "dataset": {
                                    "maxItemsOne": true
                                },
                                "flowlet": {
                                    "maxItemsOne": true
                                },
                                "linked_service": {
                                    "maxItemsOne": true
                                },
                                "rejected_linked_service": {
                                    "maxItemsOne": true
                                },
                                "schema_linked_service": {
                                    "maxItemsOne": true
                                }
                            }
                        }
                    },
                    "source": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "dataset": {
                                    "maxItemsOne": true
                                },
                                "flowlet": {
                                    "maxItemsOne": true
                                },
                                "linked_service": {
                                    "maxItemsOne": true
                                },
                                "rejected_linked_service": {
                                    "maxItemsOne": true
                                },
                                "schema_linked_service": {
                                    "maxItemsOne": true
                                }
                            }
                        }
                    },
                    "transformation": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "dataset": {
                                    "maxItemsOne": true
                                },
                                "flowlet": {
                                    "maxItemsOne": true
                                },
                                "linked_service": {
                                    "maxItemsOne": true
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_data_factory_integration_runtime_azure": {
                "current": "azure:datafactory/integrationRuntimeRule:IntegrationRuntimeRule",
                "majorVersion": 5
            },
            "azurerm_data_factory_integration_runtime_azure_ssis": {
                "current": "azure:datafactory/integrationRuntimeSsis:IntegrationRuntimeSsis",
                "majorVersion": 5,
                "fields": {
                    "catalog_info": {
                        "maxItemsOne": true
                    },
                    "custom_setup_script": {
                        "maxItemsOne": true
                    },
                    "express_custom_setup": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "command_key": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "key_vault_password": {
                                                "maxItemsOne": true
                                            }
                                        }
                                    }
                                },
                                "component": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "key_vault_license": {
                                                "maxItemsOne": true
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "express_vnet_integration": {
                        "maxItemsOne": true
                    },
                    "package_store": {
                        "maxItemsOne": false
                    },
                    "proxy": {
                        "maxItemsOne": true
                    },
                    "vnet_integration": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "public_ips": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_data_factory_integration_runtime_managed": {
                "current": "azure:datafactory/integrationRuntimeManaged:IntegrationRuntimeManaged",
                "majorVersion": 5,
                "fields": {
                    "catalog_info": {
                        "maxItemsOne": true
                    },
                    "custom_setup_script": {
                        "maxItemsOne": true
                    },
                    "vnet_integration": {
                        "maxItemsOne": true
                    }
                }
            },
            "azurerm_data_factory_integration_runtime_self_hosted": {
                "current": "azure:datafactory/integrationRuntimeSelfHosted:IntegrationRuntimeSelfHosted",
                "majorVersion": 5,
                "fields": {
                    "rbac_authorization": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_data_factory_linked_custom_service": {
                "current": "azure:datafactory/linkedCustomService:LinkedCustomService",
                "majorVersion": 5,
                "fields": {
                    "annotations": {
                        "maxItemsOne": false
                    },
                    "integration_runtime": {
                        "maxItemsOne": true
                    }
                }
            },
            "azurerm_data_factory_linked_service_azure_blob_storage": {
                "current": "azure:datafactory/linkedServiceAzureBlobStorage:LinkedServiceAzureBlobStorage",
                "majorVersion": 5,
                "fields": {
                    "annotations": {
                        "maxItemsOne": false
                    },
                    "key_vault_sas_token": {
                        "maxItemsOne": true
                    },
                    "service_principal_linked_key_vault_key": {
                        "maxItemsOne": true
                    }
                }
            },
            "azurerm_data_factory_linked_service_azure_databricks": {
                "current": "azure:datafactory/linkedServiceAzureDatabricks:LinkedServiceAzureDatabricks",
                "majorVersion": 5,
                "fields": {
                    "annotations": {
                        "maxItemsOne": false
                    },
                    "instance_pool": {
                        "maxItemsOne": true
                    },
                    "key_vault_password": {
                        "maxItemsOne": true
                    },
                    "new_cluster_config": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "init_scripts": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_data_factory_linked_service_azure_file_storage": {
                "current": "azure:datafactory/linkedServiceAzureFileStorage:LinkedServiceAzureFileStorage",
                "majorVersion": 5,
                "fields": {
                    "annotations": {
                        "maxItemsOne": false
                    },
                    "key_vault_password": {
                        "maxItemsOne": true
                    }
                }
            },
            "azurerm_data_factory_linked_service_azure_function": {
                "current": "azure:datafactory/linkedServiceAzureFunction:LinkedServiceAzureFunction",
                "majorVersion": 5,
                "fields": {
                    "annotations": {
                        "maxItemsOne": false
                    },
                    "key_vault_key": {
                        "maxItemsOne": true
                    }
                }
            },
            "azurerm_data_factory_linked_service_azure_search": {
                "current": "azure:datafactory/linkedServiceAzureSearch:LinkedServiceAzureSearch",
                "majorVersion": 5,
                "fields": {
                    "annotations": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_data_factory_linked_service_azure_sql_database": {
                "current": "azure:datafactory/linkedServiceAzureSqlDatabase:LinkedServiceAzureSqlDatabase",
                "majorVersion": 5,
                "fields": {
                    "annotations": {
                        "maxItemsOne": false
                    },
                    "key_vault_connection_string": {
                        "maxItemsOne": true
                    },
                    "key_vault_password": {
                        "maxItemsOne": true
                    }
                }
            },
            "azurerm_data_factory_linked_service_azure_table_storage": {
                "current": "azure:datafactory/linkedServiceAzureTableStorage:LinkedServiceAzureTableStorage",
                "majorVersion": 5,
                "fields": {
                    "annotations": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_data_factory_linked_service_cosmosdb": {
                "current": "azure:datafactory/linkedServiceCosmosDb:LinkedServiceCosmosDb",
                "majorVersion": 5,
                "fields": {
                    "annotations": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_data_factory_linked_service_cosmosdb_mongoapi": {
                "current": "azure:datafactory/linkedServiceCosmosDbMongoApi:LinkedServiceCosmosDbMongoApi",
                "majorVersion": 5,
                "fields": {
                    "annotations": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_data_factory_linked_service_data_lake_storage_gen2": {
                "current": "azure:datafactory/linkedServiceDataLakeStorageGen2:LinkedServiceDataLakeStorageGen2",
                "majorVersion": 5,
                "fields": {
                    "annotations": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_data_factory_linked_service_key_vault": {
                "current": "azure:datafactory/linkedServiceKeyVault:LinkedServiceKeyVault",
                "majorVersion": 5,
                "fields": {
                    "annotations": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_data_factory_linked_service_kusto": {
                "current": "azure:datafactory/linkedServiceKusto:LinkedServiceKusto",
                "majorVersion": 5,
                "fields": {
                    "annotations": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_data_factory_linked_service_mysql": {
                "current": "azure:datafactory/linkedServiceMysql:LinkedServiceMysql",
                "majorVersion": 5,
                "fields": {
                    "annotations": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_data_factory_linked_service_odata": {
                "current": "azure:datafactory/linkedServiceOdata:LinkedServiceOdata",
                "majorVersion": 5,
                "fields": {
                    "annotations": {
                        "maxItemsOne": false
                    },
                    "basic_authentication": {
                        "maxItemsOne": true
                    }
                }
            },
            "azurerm_data_factory_linked_service_odbc": {
                "current": "azure:datafactory/linkedServiceOdbc:LinkedServiceOdbc",
                "majorVersion": 5,
                "fields": {
                    "annotations": {
                        "maxItemsOne": false
                    },
                    "basic_authentication": {
                        "maxItemsOne": true
                    }
                }
            },
            "azurerm_data_factory_linked_service_postgresql": {
                "current": "azure:datafactory/linkedServicePostgresql:LinkedServicePostgresql",
                "majorVersion": 5,
                "fields": {
                    "annotations": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_data_factory_linked_service_sftp": {
                "current": "azure:datafactory/linkedServiceSftp:LinkedServiceSftp",
                "majorVersion": 5,
                "fields": {
                    "annotations": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_data_factory_linked_service_snowflake": {
                "current": "azure:datafactory/linkedServiceSnowflake:LinkedServiceSnowflake",
                "majorVersion": 5,
                "fields": {
                    "annotations": {
                        "maxItemsOne": false
                    },
                    "key_vault_password": {
                        "maxItemsOne": true
                    }
                }
            },
            "azurerm_data_factory_linked_service_sql_server": {
                "current": "azure:datafactory/linkedServiceSqlServer:LinkedServiceSqlServer",
                "majorVersion": 5,
                "fields": {
                    "annotations": {
                        "maxItemsOne": false
                    },
                    "key_vault_connection_string": {
                        "maxItemsOne": true
                    },
                    "key_vault_password": {
                        "maxItemsOne": true
                    }
                }
            },
            "azurerm_data_factory_linked_service_synapse": {
                "current": "azure:datafactory/linkedServiceSynapse:LinkedServiceSynapse",
                "majorVersion": 5,
                "fields": {
                    "annotations": {
                        "maxItemsOne": false
                    },
                    "key_vault_password": {
                        "maxItemsOne": true
                    }
                }
            },
            "azurerm_data_factory_linked_service_web": {
                "current": "azure:datafactory/linkedServiceWeb:LinkedServiceWeb",
                "majorVersion": 5,
                "fields": {
                    "annotations": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_data_factory_managed_private_endpoint": {
                "current": "azure:datafactory/managedPrivateEndpoint:ManagedPrivateEndpoint",
                "majorVersion": 5,
                "fields": {
                    "fqdns": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_data_factory_pipeline": {
                "current": "azure:datafactory/pipeline:Pipeline",
                "majorVersion": 5,
                "fields": {
                    "annotations": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_data_factory_trigger_blob_event": {
                "current": "azure:datafactory/triggerBlobEvent:TriggerBlobEvent",
                "majorVersion": 5,
                "fields": {
                    "annotations": {
                        "maxItemsOne": false
                    },
                    "events": {
                        "maxItemsOne": false
                    },
                    "pipeline": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_data_factory_trigger_custom_event": {
                "current": "azure:datafactory/triggerCustomEvent:TriggerCustomEvent",
                "majorVersion": 5,
                "fields": {
                    "annotations": {
                        "maxItemsOne": false
                    },
                    "events": {
                        "maxItemsOne": false
                    },
                    "pipeline": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_data_factory_trigger_schedule": {
                "current": "azure:datafactory/triggerSchedule:TriggerSchedule",
                "majorVersion": 5,
                "fields": {
                    "annotations": {
                        "maxItemsOne": false
                    },
                    "pipeline": {
                        "maxItemsOne": false
                    },
                    "schedule": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "days_of_month": {
                                    "maxItemsOne": false
                                },
                                "days_of_week": {
                                    "maxItemsOne": false
                                },
                                "hours": {
                                    "maxItemsOne": false
                                },
                                "minutes": {
                                    "maxItemsOne": false
                                },
                                "monthly": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_data_factory_trigger_tumbling_window": {
                "current": "azure:datafactory/triggerTumblingWindow:TriggerTumblingWindow",
                "majorVersion": 5,
                "fields": {
                    "annotations": {
                        "maxItemsOne": false
                    },
                    "pipeline": {
                        "maxItemsOne": true
                    },
                    "retry": {
                        "maxItemsOne": true
                    },
                    "trigger_dependency": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_data_protection_backup_instance_blob_storage": {
                "current": "azure:dataprotection/backupInstanceBlogStorage:BackupInstanceBlogStorage",
                "majorVersion": 5
            },
            "azurerm_data_protection_backup_instance_disk": {
                "current": "azure:dataprotection/backupInstanceDisk:BackupInstanceDisk",
                "majorVersion": 5
            },
            "azurerm_data_protection_backup_instance_postgresql": {
                "current": "azure:dataprotection/backupInstancePostgresql:BackupInstancePostgresql",
                "majorVersion": 5
            },
            "azurerm_data_protection_backup_policy_blob_storage": {
                "current": "azure:dataprotection/backupPolicyBlobStorage:BackupPolicyBlobStorage",
                "majorVersion": 5
            },
            "azurerm_data_protection_backup_policy_disk": {
                "current": "azure:dataprotection/backupPolicyDisk:BackupPolicyDisk",
                "majorVersion": 5,
                "fields": {
                    "backup_repeating_time_intervals": {
                        "maxItemsOne": false
                    },
                    "retention_rule": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "criteria": {
                                    "maxItemsOne": true
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_data_protection_backup_policy_postgresql": {
                "current": "azure:dataprotection/backupPolicyPostgresql:BackupPolicyPostgresql",
                "majorVersion": 5,
                "fields": {
                    "backup_repeating_time_intervals": {
                        "maxItemsOne": false
                    },
                    "retention_rule": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "criteria": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "days_of_week": {
                                                "maxItemsOne": false
                                            },
                                            "months_of_year": {
                                                "maxItemsOne": false
                                            },
                                            "scheduled_backup_times": {
                                                "maxItemsOne": false
                                            },
                                            "weeks_of_month": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_data_protection_backup_vault": {
                "current": "azure:dataprotection/backupVault:BackupVault",
                "majorVersion": 5,
                "fields": {
                    "identity": {
                        "maxItemsOne": true
                    }
                }
            },
            "azurerm_data_protection_resource_guard": {
                "current": "azure:dataprotection/resourceGuard:ResourceGuard",
                "majorVersion": 5,
                "fields": {
                    "vault_critical_operation_exclusion_list": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_data_share": {
                "current": "azure:datashare/share:Share",
                "majorVersion": 5,
                "fields": {
                    "snapshot_schedule": {
                        "maxItemsOne": true
                    }
                }
            },
            "azurerm_data_share_account": {
                "current": "azure:datashare/account:Account",
                "majorVersion": 5,
                "fields": {
                    "identity": {
                        "maxItemsOne": true
                    }
                }
            },
            "azurerm_data_share_dataset_blob_storage": {
                "current": "azure:datashare/datasetBlobStorage:DatasetBlobStorage",
                "majorVersion": 5,
                "fields": {
                    "storage_account": {
                        "maxItemsOne": true
                    }
                }
            },
            "azurerm_data_share_dataset_data_lake_gen2": {
                "current": "azure:datashare/datasetDataLakeGen2:DatasetDataLakeGen2",
                "majorVersion": 5
            },
            "azurerm_data_share_dataset_kusto_cluster": {
                "current": "azure:datashare/datasetKustoCluster:DatasetKustoCluster",
                "majorVersion": 5
            },
            "azurerm_data_share_dataset_kusto_database": {
                "current": "azure:datashare/datasetKustoDatabase:DatasetKustoDatabase",
                "majorVersion": 5
            },
            "azurerm_database_migration_project": {
                "current": "azure:databasemigration/project:Project",
                "majorVersion": 5
            },
            "azurerm_database_migration_service": {
                "current": "azure:databasemigration/service:Service",
                "majorVersion": 5
            },
            "azurerm_databox_edge_device": {
                "current": "azure:databoxedge/device:Device",
                "majorVersion": 5,
                "fields": {
                    "device_properties": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "configured_role_types": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_databox_edge_order": {
                "current": "azure:databoxedge/order:Order",
                "majorVersion": 5,
                "fields": {
                    "contact": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "emails": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "return_tracking": {
                        "maxItemsOne": false
                    },
                    "shipment_address": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "address": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "shipment_history": {
                        "maxItemsOne": false
                    },
                    "shipment_tracking": {
                        "maxItemsOne": false
                    },
                    "status": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_databricks_access_connector": {
                "current": "azure:databricks/accessConnector:AccessConnector",
                "majorVersion": 5,
                "fields": {
                    "identity": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "identity_ids": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_databricks_virtual_network_peering": {
                "current": "azure:databricks/virtualNetworkPeering:VirtualNetworkPeering",
                "majorVersion": 5,
                "fields": {
                    "address_space_prefixes": {
                        "maxItemsOne": false
                    },
                    "remote_address_space_prefixes": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_databricks_workspace": {
                "current": "azure:databricks/workspace:Workspace",
                "majorVersion": 5,
                "fields": {
                    "custom_parameters": {
                        "maxItemsOne": true
                    },
                    "managed_disk_identity": {
                        "maxItemsOne": false
                    },
                    "storage_account_identity": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_databricks_workspace_customer_managed_key": {
                "current": "azure:databricks/workspaceCustomerManagedKey:WorkspaceCustomerManagedKey",
                "majorVersion": 5
            },
            "azurerm_databricks_workspace_root_dbfs_customer_managed_key": {
                "current": "azure:databricks/workspaceRootDbfsCustomerManagedKey:WorkspaceRootDbfsCustomerManagedKey",
                "majorVersion": 5
            },
            "azurerm_datadog_monitor": {
                "current": "azure:datadog/monitor:Monitor",
                "majorVersion": 5,
                "fields": {
                    "datadog_organization": {
                        "maxItemsOne": true
                    },
                    "identity": {
                        "maxItemsOne": true
                    },
                    "user": {
                        "maxItemsOne": true
                    }
                }
            },
            "azurerm_datadog_monitor_sso_configuration": {
                "current": "azure:datadog/monitorSsoConfiguration:MonitorSsoConfiguration",
                "majorVersion": 5
            },
            "azurerm_datadog_monitor_tag_rule": {
                "current": "azure:datadog/monitorTagRule:MonitorTagRule",
                "majorVersion": 5,
                "fields": {
                    "log": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "filter": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "metric": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "filter": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_dedicated_hardware_security_module": {
                "current": "azure:hsm/module:Module",
                "majorVersion": 5,
                "fields": {
                    "management_network_profile": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "network_interface_private_ip_addresses": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "network_profile": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "network_interface_private_ip_addresses": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "zones": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_dedicated_host": {
                "current": "azure:compute/dedicatedHost:DedicatedHost",
                "majorVersion": 5
            },
            "azurerm_dedicated_host_group": {
                "current": "azure:compute/dedicatedHostGroup:DedicatedHostGroup",
                "majorVersion": 5
            },
            "azurerm_dev_center": {
                "current": "azure:devcenter/devCenter:DevCenter",
                "majorVersion": 5,
                "fields": {
                    "identity": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "identity_ids": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_dev_center_project": {
                "current": "azure:devcenter/project:Project",
                "majorVersion": 5
            },
            "azurerm_dev_test_global_vm_shutdown_schedule": {
                "current": "azure:devtest/globalVMShutdownSchedule:GlobalVMShutdownSchedule",
                "majorVersion": 5,
                "fields": {
                    "notification_settings": {
                        "maxItemsOne": true
                    }
                }
            },
            "azurerm_dev_test_lab": {
                "current": "azure:devtest/lab:Lab",
                "majorVersion": 5
            },
            "azurerm_dev_test_linux_virtual_machine": {
                "current": "azure:devtest/linuxVirtualMachine:LinuxVirtualMachine",
                "majorVersion": 5,
                "fields": {
                    "gallery_image_reference": {
                        "maxItemsOne": true
                    },
                    "inbound_nat_rule": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_dev_test_policy": {
                "current": "azure:devtest/policy:Policy",
                "majorVersion": 5
            },
            "azurerm_dev_test_schedule": {
                "current": "azure:devtest/schedule:Schedule",
                "majorVersion": 5,
                "fields": {
                    "daily_recurrence": {
                        "maxItemsOne": true
                    },
                    "hourly_recurrence": {
                        "maxItemsOne": true
                    },
                    "notification_settings": {
                        "maxItemsOne": true
                    },
                    "weekly_recurrence": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "week_days": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_dev_test_virtual_network": {
                "current": "azure:devtest/virtualNetwork:VirtualNetwork",
                "majorVersion": 5,
                "fields": {
                    "subnet": {
                        "maxItemsOne": true
                    }
                }
            },
            "azurerm_dev_test_windows_virtual_machine": {
                "current": "azure:devtest/windowsVirtualMachine:WindowsVirtualMachine",
                "majorVersion": 5,
                "fields": {
                    "gallery_image_reference": {
                        "maxItemsOne": true
                    },
                    "inbound_nat_rule": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_digital_twins_endpoint_eventgrid": {
                "current": "azure:digitaltwins/endpointEventGrid:EndpointEventGrid",
                "majorVersion": 5
            },
            "azurerm_digital_twins_endpoint_eventhub": {
                "current": "azure:digitaltwins/endpointEventHub:EndpointEventHub",
                "majorVersion": 5
            },
            "azurerm_digital_twins_endpoint_servicebus": {
                "current": "azure:digitaltwins/endpointServicebus:EndpointServicebus",
                "majorVersion": 5
            },
            "azurerm_digital_twins_instance": {
                "current": "azure:digitaltwins/instance:Instance",
                "majorVersion": 5,
                "fields": {
                    "identity": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "identity_ids": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_digital_twins_time_series_database_connection": {
                "current": "azure:digitaltwins/timeSeriesDatabaseConnection:TimeSeriesDatabaseConnection",
                "majorVersion": 5
            },
            "azurerm_disk_access": {
                "current": "azure:compute/diskAccess:DiskAccess",
                "majorVersion": 5
            },
            "azurerm_disk_encryption_set": {
                "current": "azure:compute/diskEncryptionSet:DiskEncryptionSet",
                "majorVersion": 5,
                "fields": {
                    "identity": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "identity_ids": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_disk_pool": {
                "current": "azure:compute/diskPool:DiskPool",
                "majorVersion": 5,
                "fields": {
                    "zones": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_disk_pool_iscsi_target": {
                "current": "azure:compute/diskPoolIscsiTarget:DiskPoolIscsiTarget",
                "majorVersion": 5,
                "fields": {
                    "endpoints": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_disk_pool_iscsi_target_lun": {
                "current": "azure:compute/diskPoolIscsiTargetLun:DiskPoolIscsiTargetLun",
                "majorVersion": 5
            },
            "azurerm_disk_pool_managed_disk_attachment": {
                "current": "azure:compute/diskPoolManagedDiskAttachment:DiskPoolManagedDiskAttachment",
                "majorVersion": 5
            },
            "azurerm_dns_a_record": {
                "current": "azure:dns/aRecord:ARecord",
                "majorVersion": 5,
                "fields": {
                    "records": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_dns_aaaa_record": {
                "current": "azure:dns/aaaaRecord:AaaaRecord",
                "majorVersion": 5,
                "fields": {
                    "records": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_dns_caa_record": {
                "current": "azure:dns/caaRecord:CaaRecord",
                "majorVersion": 5,
                "fields": {
                    "record": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_dns_cname_record": {
                "current": "azure:dns/cNameRecord:CNameRecord",
                "majorVersion": 5
            },
            "azurerm_dns_mx_record": {
                "current": "azure:dns/mxRecord:MxRecord",
                "majorVersion": 5,
                "fields": {
                    "record": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_dns_ns_record": {
                "current": "azure:dns/nsRecord:NsRecord",
                "majorVersion": 5,
                "fields": {
                    "records": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_dns_ptr_record": {
                "current": "azure:dns/ptrRecord:PtrRecord",
                "majorVersion": 5,
                "fields": {
                    "records": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_dns_srv_record": {
                "current": "azure:dns/srvRecord:SrvRecord",
                "majorVersion": 5,
                "fields": {
                    "record": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_dns_txt_record": {
                "current": "azure:dns/txtRecord:TxtRecord",
                "majorVersion": 5,
                "fields": {
                    "record": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_dns_zone": {
                "current": "azure:dns/zone:Zone",
                "majorVersion": 5,
                "fields": {
                    "name_servers": {
                        "maxItemsOne": false
                    },
                    "soa_record": {
                        "maxItemsOne": true
                    }
                }
            },
            "azurerm_elastic_cloud_elasticsearch": {
                "current": "azure:elasticcloud/elasticsearch:Elasticsearch",
                "majorVersion": 5,
                "fields": {
                    "logs": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "filtering_tag": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_elastic_san": {
                "current": "azure:elasticsan/elasticSan:ElasticSan",
                "majorVersion": 5,
                "fields": {
                    "sku": {
                        "maxItemsOne": true
                    },
                    "zones": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_email_communication_service": {
                "current": "azure:communication/emailService:EmailService",
                "majorVersion": 5
            },
            "azurerm_eventgrid_domain": {
                "current": "azure:eventgrid/domain:Domain",
                "majorVersion": 5,
                "fields": {
                    "identity": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "identity_ids": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "inbound_ip_rule": {
                        "maxItemsOne": false
                    },
                    "input_mapping_default_values": {
                        "maxItemsOne": true
                    },
                    "input_mapping_fields": {
                        "maxItemsOne": true
                    }
                }
            },
            "azurerm_eventgrid_domain_legacy": {
                "current": "azure:eventhub/domain:Domain",
                "majorVersion": 5,
                "fields": {
                    "identity": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "identity_ids": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "inbound_ip_rule": {
                        "maxItemsOne": false
                    },
                    "input_mapping_default_values": {
                        "maxItemsOne": true
                    },
                    "input_mapping_fields": {
                        "maxItemsOne": true
                    }
                }
            },
            "azurerm_eventgrid_domain_topic": {
                "current": "azure:eventgrid/domainTopic:DomainTopic",
                "majorVersion": 5
            },
            "azurerm_eventgrid_event_subscription": {
                "current": "azure:eventgrid/eventSubscription:EventSubscription",
                "majorVersion": 5,
                "fields": {
                    "advanced_filter": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "bool_equals": {
                                    "maxItemsOne": false
                                },
                                "is_not_null": {
                                    "maxItemsOne": false
                                },
                                "is_null_or_undefined": {
                                    "maxItemsOne": false
                                },
                                "number_greater_than": {
                                    "maxItemsOne": false
                                },
                                "number_greater_than_or_equals": {
                                    "maxItemsOne": false
                                },
                                "number_in": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "values": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "number_in_range": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "values": {
                                                "maxItemsOne": false,
                                                "elem": {
                                                    "maxItemsOne": false
                                                }
                                            }
                                        }
                                    }
                                },
                                "number_less_than": {
                                    "maxItemsOne": false
                                },
                                "number_less_than_or_equals": {
                                    "maxItemsOne": false
                                },
                                "number_not_in": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "values": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "number_not_in_range": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "values": {
                                                "maxItemsOne": false,
                                                "elem": {
                                                    "maxItemsOne": false
                                                }
                                            }
                                        }
                                    }
                                },
                                "string_begins_with": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "values": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "string_contains": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "values": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "string_ends_with": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "values": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "string_in": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "values": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "string_not_begins_with": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "values": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "string_not_contains": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "values": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "string_not_ends_with": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "values": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "string_not_in": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "values": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "azure_function_endpoint": {
                        "maxItemsOne": true
                    },
                    "dead_letter_identity": {
                        "maxItemsOne": true
                    },
                    "delivery_identity": {
                        "maxItemsOne": true
                    },
                    "delivery_property": {
                        "maxItemsOne": false
                    },
                    "included_event_types": {
                        "maxItemsOne": false
                    },
                    "labels": {
                        "maxItemsOne": false
                    },
                    "retry_policy": {
                        "maxItemsOne": true
                    },
                    "storage_blob_dead_letter_destination": {
                        "maxItemsOne": true
                    },
                    "storage_queue_endpoint": {
                        "maxItemsOne": true
                    },
                    "subject_filter": {
                        "maxItemsOne": true
                    },
                    "webhook_endpoint": {
                        "maxItemsOne": true
                    }
                }
            },
            "azurerm_eventgrid_event_subscription_legacy": {
                "current": "azure:eventhub/eventSubscription:EventSubscription",
                "majorVersion": 5,
                "fields": {
                    "advanced_filter": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "bool_equals": {
                                    "maxItemsOne": false
                                },
                                "is_not_null": {
                                    "maxItemsOne": false
                                },
                                "is_null_or_undefined": {
                                    "maxItemsOne": false
                                },
                                "number_greater_than": {
                                    "maxItemsOne": false
                                },
                                "number_greater_than_or_equals": {
                                    "maxItemsOne": false
                                },
                                "number_in": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "values": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "number_in_range": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "values": {
                                                "maxItemsOne": false,
                                                "elem": {
                                                    "maxItemsOne": false
                                                }
                                            }
                                        }
                                    }
                                },
                                "number_less_than": {
                                    "maxItemsOne": false
                                },
                                "number_less_than_or_equals": {
                                    "maxItemsOne": false
                                },
                                "number_not_in": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "values": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "number_not_in_range": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "values": {
                                                "maxItemsOne": false,
                                                "elem": {
                                                    "maxItemsOne": false
                                                }
                                            }
                                        }
                                    }
                                },
                                "string_begins_with": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "values": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "string_contains": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "values": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "string_ends_with": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "values": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "string_in": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "values": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "string_not_begins_with": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "values": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "string_not_contains": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "values": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "string_not_ends_with": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "values": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "string_not_in": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "values": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "azure_function_endpoint": {
                        "maxItemsOne": true
                    },
                    "dead_letter_identity": {
                        "maxItemsOne": true
                    },
                    "delivery_identity": {
                        "maxItemsOne": true
                    },
                    "delivery_property": {
                        "maxItemsOne": false
                    },
                    "included_event_types": {
                        "maxItemsOne": false
                    },
                    "labels": {
                        "maxItemsOne": false
                    },
                    "retry_policy": {
                        "maxItemsOne": true
                    },
                    "storage_blob_dead_letter_destination": {
                        "maxItemsOne": true
                    },
                    "storage_queue_endpoint": {
                        "maxItemsOne": true
                    },
                    "subject_filter": {
                        "maxItemsOne": true
                    },
                    "webhook_endpoint": {
                        "maxItemsOne": true
                    }
                }
            },
            "azurerm_eventgrid_system_topic": {
                "current": "azure:eventgrid/systemTopic:SystemTopic",
                "majorVersion": 5,
                "fields": {
                    "identity": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "identity_ids": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_eventgrid_system_topic_event_subscription": {
                "current": "azure:eventgrid/systemTopicEventSubscription:SystemTopicEventSubscription",
                "majorVersion": 5,
                "fields": {
                    "advanced_filter": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "bool_equals": {
                                    "maxItemsOne": false
                                },
                                "is_not_null": {
                                    "maxItemsOne": false
                                },
                                "is_null_or_undefined": {
                                    "maxItemsOne": false
                                },
                                "number_greater_than": {
                                    "maxItemsOne": false
                                },
                                "number_greater_than_or_equals": {
                                    "maxItemsOne": false
                                },
                                "number_in": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "values": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "number_in_range": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "values": {
                                                "maxItemsOne": false,
                                                "elem": {
                                                    "maxItemsOne": false
                                                }
                                            }
                                        }
                                    }
                                },
                                "number_less_than": {
                                    "maxItemsOne": false
                                },
                                "number_less_than_or_equals": {
                                    "maxItemsOne": false
                                },
                                "number_not_in": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "values": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "number_not_in_range": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "values": {
                                                "maxItemsOne": false,
                                                "elem": {
                                                    "maxItemsOne": false
                                                }
                                            }
                                        }
                                    }
                                },
                                "string_begins_with": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "values": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "string_contains": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "values": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "string_ends_with": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "values": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "string_in": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "values": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "string_not_begins_with": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "values": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "string_not_contains": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "values": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "string_not_ends_with": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "values": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "string_not_in": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "values": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "azure_function_endpoint": {
                        "maxItemsOne": true
                    },
                    "dead_letter_identity": {
                        "maxItemsOne": true
                    },
                    "delivery_identity": {
                        "maxItemsOne": true
                    },
                    "delivery_property": {
                        "maxItemsOne": false
                    },
                    "included_event_types": {
                        "maxItemsOne": false
                    },
                    "labels": {
                        "maxItemsOne": false
                    },
                    "retry_policy": {
                        "maxItemsOne": true
                    },
                    "storage_blob_dead_letter_destination": {
                        "maxItemsOne": true
                    },
                    "storage_queue_endpoint": {
                        "maxItemsOne": true
                    },
                    "subject_filter": {
                        "maxItemsOne": true
                    },
                    "webhook_endpoint": {
                        "maxItemsOne": true
                    }
                }
            },
            "azurerm_eventgrid_topic": {
                "current": "azure:eventgrid/topic:Topic",
                "majorVersion": 5,
                "fields": {
                    "identity": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "identity_ids": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "inbound_ip_rule": {
                        "maxItemsOne": false
                    },
                    "input_mapping_default_values": {
                        "maxItemsOne": true
                    },
                    "input_mapping_fields": {
                        "maxItemsOne": true
                    }
                }
            },
            "azurerm_eventgrid_topic_legacy": {
                "current": "azure:eventhub/eventGridTopic:EventGridTopic",
                "majorVersion": 5,
                "fields": {
                    "identity": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "identity_ids": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "inbound_ip_rule": {
                        "maxItemsOne": false
                    },
                    "input_mapping_default_values": {
                        "maxItemsOne": true
                    },
                    "input_mapping_fields": {
                        "maxItemsOne": true
                    }
                }
            },
            "azurerm_eventhub": {
                "current": "azure:eventhub/eventHub:EventHub",
                "majorVersion": 5,
                "fields": {
                    "capture_description": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "destination": {
                                    "maxItemsOne": true
                                }
                            }
                        }
                    },
                    "partition_ids": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_eventhub_authorization_rule": {
                "current": "azure:eventhub/authorizationRule:AuthorizationRule",
                "majorVersion": 5
            },
            "azurerm_eventhub_authorization_rule_legacy": {
                "current": "azure:eventhub/eventHubAuthorizationRule:EventHubAuthorizationRule",
                "majorVersion": 5
            },
            "azurerm_eventhub_cluster": {
                "current": "azure:eventhub/cluster:Cluster",
                "majorVersion": 5
            },
            "azurerm_eventhub_consumer_group": {
                "current": "azure:eventhub/consumerGroup:ConsumerGroup",
                "majorVersion": 5
            },
            "azurerm_eventhub_consumer_group_legacy": {
                "current": "azure:eventhub/eventHubConsumerGroup:EventHubConsumerGroup",
                "majorVersion": 5
            },
            "azurerm_eventhub_namespace": {
                "current": "azure:eventhub/eventHubNamespace:EventHubNamespace",
                "majorVersion": 5,
                "fields": {
                    "identity": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "identity_ids": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "network_rulesets": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "ip_rule": {
                                    "maxItemsOne": false
                                },
                                "virtual_network_rule": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_eventhub_namespace_authorization_rule": {
                "current": "azure:eventhub/eventHubNamespaceAuthorizationRule:EventHubNamespaceAuthorizationRule",
                "majorVersion": 5
            },
            "azurerm_eventhub_namespace_customer_managed_key": {
                "current": "azure:eventhub/namespaceCustomerManagedKey:NamespaceCustomerManagedKey",
                "majorVersion": 5,
                "fields": {
                    "key_vault_key_ids": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_eventhub_namespace_disaster_recovery_config": {
                "current": "azure:eventhub/eventhubNamespaceDisasterRecoveryConfig:EventhubNamespaceDisasterRecoveryConfig",
                "majorVersion": 5
            },
            "azurerm_eventhub_namespace_schema_group": {
                "current": "azure:eventhub/namespaceSchemaGroup:NamespaceSchemaGroup",
                "majorVersion": 5
            },
            "azurerm_express_route_circuit": {
                "current": "azure:network/expressRouteCircuit:ExpressRouteCircuit",
                "majorVersion": 5,
                "fields": {
                    "sku": {
                        "maxItemsOne": true
                    }
                }
            },
            "azurerm_express_route_circuit_authorization": {
                "current": "azure:network/expressRouteCircuitAuthorization:ExpressRouteCircuitAuthorization",
                "majorVersion": 5
            },
            "azurerm_express_route_circuit_connection": {
                "current": "azure:network/expressRouteCircuitConnection:ExpressRouteCircuitConnection",
                "majorVersion": 5
            },
            "azurerm_express_route_circuit_peering": {
                "current": "azure:network/expressRouteCircuitPeering:ExpressRouteCircuitPeering",
                "majorVersion": 5,
                "fields": {
                    "ipv6": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "microsoft_peering": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "advertised_communities": {
                                                "maxItemsOne": false
                                            },
                                            "advertised_public_prefixes": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "microsoft_peering_config": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "advertised_communities": {
                                    "maxItemsOne": false
                                },
                                "advertised_public_prefixes": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_express_route_connection": {
                "current": "azure:network/expressRouteConnection:ExpressRouteConnection",
                "majorVersion": 5,
                "fields": {
                    "routing": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "propagated_route_table": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "labels": {
                                                "maxItemsOne": false
                                            },
                                            "route_table_ids": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_express_route_gateway": {
                "current": "azure:network/expressRouteGateway:ExpressRouteGateway",
                "majorVersion": 5
            },
            "azurerm_express_route_port": {
                "current": "azure:network/expressRoutePort:ExpressRoutePort",
                "majorVersion": 5,
                "fields": {
                    "identity": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "identity_ids": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "link1": {
                        "maxItemsOne": true
                    },
                    "link2": {
                        "maxItemsOne": true
                    }
                }
            },
            "azurerm_express_route_port_authorization": {
                "current": "azure:network/expressRoutePortAuthorization:ExpressRoutePortAuthorization",
                "majorVersion": 5
            },
            "azurerm_federated_identity_credential": {
                "current": "azure:armmsi/federatedIdentityCredential:FederatedIdentityCredential",
                "majorVersion": 5,
                "fields": {
                    "audience": {
                        "maxItemsOne": true
                    }
                }
            },
            "azurerm_firewall": {
                "current": "azure:network/firewall:Firewall",
                "majorVersion": 5,
                "fields": {
                    "dns_servers": {
                        "maxItemsOne": false
                    },
                    "ip_configuration": {
                        "maxItemsOne": false
                    },
                    "management_ip_configuration": {
                        "maxItemsOne": true
                    },
                    "private_ip_ranges": {
                        "maxItemsOne": false
                    },
                    "virtual_hub": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "public_ip_addresses": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "zones": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_firewall_application_rule_collection": {
                "current": "azure:network/firewallApplicationRuleCollection:FirewallApplicationRuleCollection",
                "majorVersion": 5,
                "fields": {
                    "rule": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "fqdn_tags": {
                                    "maxItemsOne": false
                                },
                                "protocol": {
                                    "maxItemsOne": false
                                },
                                "source_addresses": {
                                    "maxItemsOne": false
                                },
                                "source_ip_groups": {
                                    "maxItemsOne": false
                                },
                                "target_fqdns": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_firewall_nat_rule_collection": {
                "current": "azure:network/firewallNatRuleCollection:FirewallNatRuleCollection",
                "majorVersion": 5,
                "fields": {
                    "rule": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "destination_addresses": {
                                    "maxItemsOne": false
                                },
                                "destination_ports": {
                                    "maxItemsOne": false
                                },
                                "protocols": {
                                    "maxItemsOne": false
                                },
                                "source_addresses": {
                                    "maxItemsOne": false
                                },
                                "source_ip_groups": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_firewall_network_rule_collection": {
                "current": "azure:network/firewallNetworkRuleCollection:FirewallNetworkRuleCollection",
                "majorVersion": 5,
                "fields": {
                    "rule": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "destination_addresses": {
                                    "maxItemsOne": false
                                },
                                "destination_fqdns": {
                                    "maxItemsOne": false
                                },
                                "destination_ip_groups": {
                                    "maxItemsOne": false
                                },
                                "destination_ports": {
                                    "maxItemsOne": false
                                },
                                "protocols": {
                                    "maxItemsOne": false
                                },
                                "source_addresses": {
                                    "maxItemsOne": false
                                },
                                "source_ip_groups": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_firewall_policy": {
                "current": "azure:network/firewallPolicy:FirewallPolicy",
                "majorVersion": 5,
                "fields": {
                    "child_policies": {
                        "maxItemsOne": false
                    },
                    "dns": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "servers": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "explicit_proxy": {
                        "maxItemsOne": true
                    },
                    "firewalls": {
                        "maxItemsOne": false
                    },
                    "identity": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "identity_ids": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "insights": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "log_analytics_workspace": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "intrusion_detection": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "private_ranges": {
                                    "maxItemsOne": false
                                },
                                "signature_overrides": {
                                    "maxItemsOne": false
                                },
                                "traffic_bypass": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "destination_addresses": {
                                                "maxItemsOne": false
                                            },
                                            "destination_ip_groups": {
                                                "maxItemsOne": false
                                            },
                                            "destination_ports": {
                                                "maxItemsOne": false
                                            },
                                            "source_addresses": {
                                                "maxItemsOne": false
                                            },
                                            "source_ip_groups": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "private_ip_ranges": {
                        "maxItemsOne": false
                    },
                    "rule_collection_groups": {
                        "maxItemsOne": false
                    },
                    "threat_intelligence_allowlist": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "fqdns": {
                                    "maxItemsOne": false
                                },
                                "ip_addresses": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "tls_certificate": {
                        "maxItemsOne": true
                    }
                }
            },
            "azurerm_firewall_policy_rule_collection_group": {
                "current": "azure:network/firewallPolicyRuleCollectionGroup:FirewallPolicyRuleCollectionGroup",
                "majorVersion": 5,
                "fields": {
                    "application_rule_collection": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "rule": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "destination_addresses": {
                                                "maxItemsOne": false
                                            },
                                            "destination_fqdn_tags": {
                                                "maxItemsOne": false
                                            },
                                            "destination_fqdns": {
                                                "maxItemsOne": false
                                            },
                                            "destination_urls": {
                                                "maxItemsOne": false
                                            },
                                            "http_headers": {
                                                "maxItemsOne": false
                                            },
                                            "protocols": {
                                                "maxItemsOne": false
                                            },
                                            "source_addresses": {
                                                "maxItemsOne": false
                                            },
                                            "source_ip_groups": {
                                                "maxItemsOne": false
                                            },
                                            "web_categories": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "nat_rule_collection": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "rule": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "destination_ports": {
                                                "maxItemsOne": true
                                            },
                                            "protocols": {
                                                "maxItemsOne": false
                                            },
                                            "source_addresses": {
                                                "maxItemsOne": false
                                            },
                                            "source_ip_groups": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "network_rule_collection": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "rule": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "destination_addresses": {
                                                "maxItemsOne": false
                                            },
                                            "destination_fqdns": {
                                                "maxItemsOne": false
                                            },
                                            "destination_ip_groups": {
                                                "maxItemsOne": false
                                            },
                                            "destination_ports": {
                                                "maxItemsOne": false
                                            },
                                            "protocols": {
                                                "maxItemsOne": false
                                            },
                                            "source_addresses": {
                                                "maxItemsOne": false
                                            },
                                            "source_ip_groups": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_fluid_relay_server": {
                "current": "azure:fluidrelay/server:Server",
                "majorVersion": 5,
                "fields": {
                    "identity": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "identity_ids": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "orderer_endpoints": {
                        "maxItemsOne": false
                    },
                    "service_endpoints": {
                        "maxItemsOne": false
                    },
                    "storage_endpoints": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_frontdoor": {
                "current": "azure:frontdoor/frontdoor:Frontdoor",
                "majorVersion": 5,
                "fields": {
                    "backend_pool": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "backend": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "backend_pool_health_probe": {
                        "maxItemsOne": false
                    },
                    "backend_pool_load_balancing": {
                        "maxItemsOne": false
                    },
                    "backend_pool_settings": {
                        "maxItemsOne": false
                    },
                    "explicit_resource_order": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "backend_pool_health_probe_ids": {
                                    "maxItemsOne": false
                                },
                                "backend_pool_ids": {
                                    "maxItemsOne": false
                                },
                                "backend_pool_load_balancing_ids": {
                                    "maxItemsOne": false
                                },
                                "frontend_endpoint_ids": {
                                    "maxItemsOne": false
                                },
                                "routing_rule_ids": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "frontend_endpoint": {
                        "maxItemsOne": false
                    },
                    "routing_rule": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "accepted_protocols": {
                                    "maxItemsOne": false
                                },
                                "forwarding_configuration": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "cache_query_parameters": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "frontend_endpoints": {
                                    "maxItemsOne": false
                                },
                                "patterns_to_match": {
                                    "maxItemsOne": false
                                },
                                "redirect_configuration": {
                                    "maxItemsOne": true
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_frontdoor_custom_https_configuration": {
                "current": "azure:frontdoor/customHttpsConfiguration:CustomHttpsConfiguration",
                "majorVersion": 5,
                "fields": {
                    "custom_https_configuration": {
                        "maxItemsOne": true
                    }
                }
            },
            "azurerm_frontdoor_firewall_policy": {
                "current": "azure:frontdoor/firewallPolicy:FirewallPolicy",
                "majorVersion": 5,
                "fields": {
                    "custom_rule": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "match_condition": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "match_values": {
                                                "maxItemsOne": false
                                            },
                                            "transforms": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "frontend_endpoint_ids": {
                        "maxItemsOne": false
                    },
                    "managed_rule": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "exclusion": {
                                    "maxItemsOne": false
                                },
                                "override": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "exclusion": {
                                                "maxItemsOne": false
                                            },
                                            "rule": {
                                                "maxItemsOne": false,
                                                "elem": {
                                                    "fields": {
                                                        "exclusion": {
                                                            "maxItemsOne": false
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_frontdoor_rules_engine": {
                "current": "azure:frontdoor/rulesEngine:RulesEngine",
                "majorVersion": 5,
                "fields": {
                    "rule": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "action": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "request_header": {
                                                "maxItemsOne": false
                                            },
                                            "response_header": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "match_condition": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "transform": {
                                                "maxItemsOne": false
                                            },
                                            "value": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_function_app": {
                "current": "azure:appservice/functionApp:FunctionApp",
                "majorVersion": 5,
                "fields": {
                    "auth_settings": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "active_directory": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "allowed_audiences": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "allowed_external_redirect_urls": {
                                    "maxItemsOne": false
                                },
                                "facebook": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "oauth_scopes": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "google": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "oauth_scopes": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "microsoft": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "oauth_scopes": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "twitter": {
                                    "maxItemsOne": true
                                }
                            }
                        }
                    },
                    "connection_string": {
                        "maxItemsOne": false
                    },
                    "identity": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "identity_ids": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "site_config": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "cors": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "allowed_origins": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "ip_restriction": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "headers": {
                                                "maxItemsOne": true,
                                                "elem": {
                                                    "fields": {
                                                        "x_azure_fdid": {
                                                            "maxItemsOne": false
                                                        },
                                                        "x_fd_health_probe": {
                                                            "maxItemsOne": true
                                                        },
                                                        "x_forwarded_for": {
                                                            "maxItemsOne": false
                                                        },
                                                        "x_forwarded_host": {
                                                            "maxItemsOne": false
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "scm_ip_restriction": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "headers": {
                                                "maxItemsOne": true,
                                                "elem": {
                                                    "fields": {
                                                        "x_azure_fdid": {
                                                            "maxItemsOne": false
                                                        },
                                                        "x_fd_health_probe": {
                                                            "maxItemsOne": true
                                                        },
                                                        "x_forwarded_for": {
                                                            "maxItemsOne": false
                                                        },
                                                        "x_forwarded_host": {
                                                            "maxItemsOne": false
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "site_credential": {
                        "maxItemsOne": false
                    },
                    "source_control": {
                        "maxItemsOne": true
                    }
                }
            },
            "azurerm_function_app_active_slot": {
                "current": "azure:appservice/functionAppActiveSlot:FunctionAppActiveSlot",
                "majorVersion": 5
            },
            "azurerm_function_app_connection": {
                "current": "azure:appservice/appConnection:AppConnection",
                "majorVersion": 5,
                "fields": {
                    "authentication": {
                        "maxItemsOne": true
                    },
                    "secret_store": {
                        "maxItemsOne": true
                    }
                }
            },
            "azurerm_function_app_function": {
                "current": "azure:appservice/functionAppFunction:FunctionAppFunction",
                "majorVersion": 5,
                "fields": {
                    "file": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_function_app_hybrid_connection": {
                "current": "azure:appservice/functionAppHybridConnection:FunctionAppHybridConnection",
                "majorVersion": 5
            },
            "azurerm_function_app_slot": {
                "current": "azure:appservice/functionAppSlot:FunctionAppSlot",
                "majorVersion": 5,
                "fields": {
                    "auth_settings": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "active_directory": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "allowed_audiences": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "allowed_external_redirect_urls": {
                                    "maxItemsOne": false
                                },
                                "facebook": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "oauth_scopes": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "google": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "oauth_scopes": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "microsoft": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "oauth_scopes": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "twitter": {
                                    "maxItemsOne": true
                                }
                            }
                        }
                    },
                    "connection_string": {
                        "maxItemsOne": false
                    },
                    "identity": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "identity_ids": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "site_config": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "cors": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "allowed_origins": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "ip_restriction": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "headers": {
                                                "maxItemsOne": true,
                                                "elem": {
                                                    "fields": {
                                                        "x_azure_fdid": {
                                                            "maxItemsOne": false
                                                        },
                                                        "x_fd_health_probe": {
                                                            "maxItemsOne": true
                                                        },
                                                        "x_forwarded_for": {
                                                            "maxItemsOne": false
                                                        },
                                                        "x_forwarded_host": {
                                                            "maxItemsOne": false
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "scm_ip_restriction": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "headers": {
                                                "maxItemsOne": true,
                                                "elem": {
                                                    "fields": {
                                                        "x_azure_fdid": {
                                                            "maxItemsOne": false
                                                        },
                                                        "x_fd_health_probe": {
                                                            "maxItemsOne": true
                                                        },
                                                        "x_forwarded_for": {
                                                            "maxItemsOne": false
                                                        },
                                                        "x_forwarded_host": {
                                                            "maxItemsOne": false
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "site_credential": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_gallery_application": {
                "current": "azure:compute/galleryApplication:GalleryApplication",
                "majorVersion": 5
            },
            "azurerm_gallery_application_version": {
                "current": "azure:compute/galleryApplicationVersion:GalleryApplicationVersion",
                "majorVersion": 5,
                "fields": {
                    "manage_action": {
                        "maxItemsOne": true
                    },
                    "source": {
                        "maxItemsOne": true
                    },
                    "target_region": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_graph_account": {
                "current": "azure:graph/account:Account",
                "majorVersion": 5
            },
            "azurerm_graph_services_account": {
                "current": "azure:graph/servicesAccount:ServicesAccount",
                "majorVersion": 5
            },
            "azurerm_hdinsight_hadoop_cluster": {
                "current": "azure:hdinsight/hadoopCluster:HadoopCluster",
                "majorVersion": 5,
                "fields": {
                    "component_version": {
                        "maxItemsOne": true
                    },
                    "compute_isolation": {
                        "maxItemsOne": true
                    },
                    "disk_encryption": {
                        "maxItemsOne": false
                    },
                    "extension": {
                        "maxItemsOne": true
                    },
                    "gateway": {
                        "maxItemsOne": true
                    },
                    "metastores": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "ambari": {
                                    "maxItemsOne": true
                                },
                                "hive": {
                                    "maxItemsOne": true
                                },
                                "oozie": {
                                    "maxItemsOne": true
                                }
                            }
                        }
                    },
                    "monitor": {
                        "maxItemsOne": true
                    },
                    "network": {
                        "maxItemsOne": true
                    },
                    "roles": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "edge_node": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "https_endpoints": {
                                                "maxItemsOne": false,
                                                "elem": {
                                                    "fields": {
                                                        "access_modes": {
                                                            "maxItemsOne": false
                                                        }
                                                    }
                                                }
                                            },
                                            "install_script_action": {
                                                "maxItemsOne": false
                                            },
                                            "uninstall_script_actions": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "head_node": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "script_actions": {
                                                "maxItemsOne": false
                                            },
                                            "ssh_keys": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "worker_node": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "autoscale": {
                                                "maxItemsOne": true,
                                                "elem": {
                                                    "fields": {
                                                        "capacity": {
                                                            "maxItemsOne": true
                                                        },
                                                        "recurrence": {
                                                            "maxItemsOne": true,
                                                            "elem": {
                                                                "fields": {
                                                                    "schedule": {
                                                                        "maxItemsOne": false,
                                                                        "elem": {
                                                                            "fields": {
                                                                                "days": {
                                                                                    "maxItemsOne": false
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "script_actions": {
                                                "maxItemsOne": false
                                            },
                                            "ssh_keys": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "zookeeper_node": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "script_actions": {
                                                "maxItemsOne": false
                                            },
                                            "ssh_keys": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "security_profile": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "cluster_users_group_dns": {
                                    "maxItemsOne": false
                                },
                                "ldaps_urls": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "storage_account": {
                        "maxItemsOne": false
                    },
                    "storage_account_gen2": {
                        "maxItemsOne": true
                    }
                }
            },
            "azurerm_hdinsight_hbase_cluster": {
                "current": "azure:hdinsight/hBaseCluster:HBaseCluster",
                "majorVersion": 5,
                "fields": {
                    "component_version": {
                        "maxItemsOne": true
                    },
                    "compute_isolation": {
                        "maxItemsOne": true
                    },
                    "disk_encryption": {
                        "maxItemsOne": false
                    },
                    "extension": {
                        "maxItemsOne": true
                    },
                    "gateway": {
                        "maxItemsOne": true
                    },
                    "metastores": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "ambari": {
                                    "maxItemsOne": true
                                },
                                "hive": {
                                    "maxItemsOne": true
                                },
                                "oozie": {
                                    "maxItemsOne": true
                                }
                            }
                        }
                    },
                    "monitor": {
                        "maxItemsOne": true
                    },
                    "network": {
                        "maxItemsOne": true
                    },
                    "roles": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "head_node": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "script_actions": {
                                                "maxItemsOne": false
                                            },
                                            "ssh_keys": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "worker_node": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "autoscale": {
                                                "maxItemsOne": true,
                                                "elem": {
                                                    "fields": {
                                                        "recurrence": {
                                                            "maxItemsOne": true,
                                                            "elem": {
                                                                "fields": {
                                                                    "schedule": {
                                                                        "maxItemsOne": false,
                                                                        "elem": {
                                                                            "fields": {
                                                                                "days": {
                                                                                    "maxItemsOne": false
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "script_actions": {
                                                "maxItemsOne": false
                                            },
                                            "ssh_keys": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "zookeeper_node": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "script_actions": {
                                                "maxItemsOne": false
                                            },
                                            "ssh_keys": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "security_profile": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "cluster_users_group_dns": {
                                    "maxItemsOne": false
                                },
                                "ldaps_urls": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "storage_account": {
                        "maxItemsOne": false
                    },
                    "storage_account_gen2": {
                        "maxItemsOne": true
                    }
                }
            },
            "azurerm_hdinsight_interactive_query_cluster": {
                "current": "azure:hdinsight/interactiveQueryCluster:InteractiveQueryCluster",
                "majorVersion": 5,
                "fields": {
                    "component_version": {
                        "maxItemsOne": true
                    },
                    "compute_isolation": {
                        "maxItemsOne": true
                    },
                    "disk_encryption": {
                        "maxItemsOne": false
                    },
                    "extension": {
                        "maxItemsOne": true
                    },
                    "gateway": {
                        "maxItemsOne": true
                    },
                    "metastores": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "ambari": {
                                    "maxItemsOne": true
                                },
                                "hive": {
                                    "maxItemsOne": true
                                },
                                "oozie": {
                                    "maxItemsOne": true
                                }
                            }
                        }
                    },
                    "monitor": {
                        "maxItemsOne": true
                    },
                    "network": {
                        "maxItemsOne": true
                    },
                    "roles": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "head_node": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "script_actions": {
                                                "maxItemsOne": false
                                            },
                                            "ssh_keys": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "worker_node": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "autoscale": {
                                                "maxItemsOne": true,
                                                "elem": {
                                                    "fields": {
                                                        "capacity": {
                                                            "maxItemsOne": true
                                                        },
                                                        "recurrence": {
                                                            "maxItemsOne": true,
                                                            "elem": {
                                                                "fields": {
                                                                    "schedule": {
                                                                        "maxItemsOne": false,
                                                                        "elem": {
                                                                            "fields": {
                                                                                "days": {
                                                                                    "maxItemsOne": false
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "script_actions": {
                                                "maxItemsOne": false
                                            },
                                            "ssh_keys": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "zookeeper_node": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "script_actions": {
                                                "maxItemsOne": false
                                            },
                                            "ssh_keys": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "security_profile": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "cluster_users_group_dns": {
                                    "maxItemsOne": false
                                },
                                "ldaps_urls": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "storage_account": {
                        "maxItemsOne": false
                    },
                    "storage_account_gen2": {
                        "maxItemsOne": true
                    }
                }
            },
            "azurerm_hdinsight_kafka_cluster": {
                "current": "azure:hdinsight/kafkaCluster:KafkaCluster",
                "majorVersion": 5,
                "fields": {
                    "component_version": {
                        "maxItemsOne": true
                    },
                    "compute_isolation": {
                        "maxItemsOne": true
                    },
                    "disk_encryption": {
                        "maxItemsOne": false
                    },
                    "extension": {
                        "maxItemsOne": true
                    },
                    "gateway": {
                        "maxItemsOne": true
                    },
                    "metastores": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "ambari": {
                                    "maxItemsOne": true
                                },
                                "hive": {
                                    "maxItemsOne": true
                                },
                                "oozie": {
                                    "maxItemsOne": true
                                }
                            }
                        }
                    },
                    "monitor": {
                        "maxItemsOne": true
                    },
                    "network": {
                        "maxItemsOne": true
                    },
                    "rest_proxy": {
                        "maxItemsOne": true
                    },
                    "roles": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "head_node": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "script_actions": {
                                                "maxItemsOne": false
                                            },
                                            "ssh_keys": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "kafka_management_node": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "script_actions": {
                                                "maxItemsOne": false
                                            },
                                            "ssh_keys": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "worker_node": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "script_actions": {
                                                "maxItemsOne": false
                                            },
                                            "ssh_keys": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "zookeeper_node": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "script_actions": {
                                                "maxItemsOne": false
                                            },
                                            "ssh_keys": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "security_profile": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "cluster_users_group_dns": {
                                    "maxItemsOne": false
                                },
                                "ldaps_urls": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "storage_account": {
                        "maxItemsOne": false
                    },
                    "storage_account_gen2": {
                        "maxItemsOne": true
                    }
                }
            },
            "azurerm_hdinsight_spark_cluster": {
                "current": "azure:hdinsight/sparkCluster:SparkCluster",
                "majorVersion": 5,
                "fields": {
                    "component_version": {
                        "maxItemsOne": true
                    },
                    "compute_isolation": {
                        "maxItemsOne": true
                    },
                    "disk_encryption": {
                        "maxItemsOne": false
                    },
                    "extension": {
                        "maxItemsOne": true
                    },
                    "gateway": {
                        "maxItemsOne": true
                    },
                    "metastores": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "ambari": {
                                    "maxItemsOne": true
                                },
                                "hive": {
                                    "maxItemsOne": true
                                },
                                "oozie": {
                                    "maxItemsOne": true
                                }
                            }
                        }
                    },
                    "monitor": {
                        "maxItemsOne": true
                    },
                    "network": {
                        "maxItemsOne": true
                    },
                    "roles": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "head_node": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "script_actions": {
                                                "maxItemsOne": false
                                            },
                                            "ssh_keys": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "worker_node": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "autoscale": {
                                                "maxItemsOne": true,
                                                "elem": {
                                                    "fields": {
                                                        "capacity": {
                                                            "maxItemsOne": true
                                                        },
                                                        "recurrence": {
                                                            "maxItemsOne": true,
                                                            "elem": {
                                                                "fields": {
                                                                    "schedule": {
                                                                        "maxItemsOne": false,
                                                                        "elem": {
                                                                            "fields": {
                                                                                "days": {
                                                                                    "maxItemsOne": false
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "script_actions": {
                                                "maxItemsOne": false
                                            },
                                            "ssh_keys": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "zookeeper_node": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "script_actions": {
                                                "maxItemsOne": false
                                            },
                                            "ssh_keys": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "security_profile": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "cluster_users_group_dns": {
                                    "maxItemsOne": false
                                },
                                "ldaps_urls": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "storage_account": {
                        "maxItemsOne": false
                    },
                    "storage_account_gen2": {
                        "maxItemsOne": true
                    }
                }
            },
            "azurerm_healthbot": {
                "current": "azure:bot/healthbot:Healthbot",
                "majorVersion": 5
            },
            "azurerm_healthcare_dicom_service": {
                "current": "azure:healthcare/dicomService:DicomService",
                "majorVersion": 5,
                "fields": {
                    "authentication": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "audience": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "identity": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "identity_ids": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "private_endpoint": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_healthcare_fhir_service": {
                "current": "azure:healthcare/fhirService:FhirService",
                "majorVersion": 5,
                "fields": {
                    "access_policy_object_ids": {
                        "maxItemsOne": false
                    },
                    "authentication": {
                        "maxItemsOne": true
                    },
                    "container_registry_login_server_url": {
                        "maxItemsOne": false
                    },
                    "cors": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "allowed_headers": {
                                    "maxItemsOne": false
                                },
                                "allowed_methods": {
                                    "maxItemsOne": false
                                },
                                "allowed_origins": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "identity": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "identity_ids": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "oci_artifact": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_healthcare_medtech_service": {
                "current": "azure:healthcare/medtechService:MedtechService",
                "majorVersion": 5,
                "fields": {
                    "identity": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "identity_ids": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_healthcare_medtech_service_fhir_destination": {
                "current": "azure:healthcare/medtechServiceFhirDestination:MedtechServiceFhirDestination",
                "majorVersion": 5
            },
            "azurerm_healthcare_service": {
                "current": "azure:healthcare/service:Service",
                "majorVersion": 5,
                "fields": {
                    "access_policy_object_ids": {
                        "maxItemsOne": false
                    },
                    "authentication_configuration": {
                        "maxItemsOne": true
                    },
                    "cors_configuration": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "allowed_headers": {
                                    "maxItemsOne": false
                                },
                                "allowed_methods": {
                                    "maxItemsOne": false
                                },
                                "allowed_origins": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_healthcare_workspace": {
                "current": "azure:healthcare/workspace:Workspace",
                "majorVersion": 5,
                "fields": {
                    "private_endpoint_connection": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_hpc_cache": {
                "current": "azure:hpc/cache:Cache",
                "majorVersion": 5,
                "fields": {
                    "default_access_policy": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "access_rule": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "directory_active_directory": {
                        "maxItemsOne": true
                    },
                    "directory_flat_file": {
                        "maxItemsOne": true
                    },
                    "directory_ldap": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "bind": {
                                    "maxItemsOne": true
                                }
                            }
                        }
                    },
                    "dns": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "servers": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "identity": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "identity_ids": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "mount_addresses": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_hpc_cache_access_policy": {
                "current": "azure:hpc/cacheAccessPolicy:CacheAccessPolicy",
                "majorVersion": 5,
                "fields": {
                    "access_rule": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_hpc_cache_blob_nfs_target": {
                "current": "azure:hpc/cacheBlobNfsTarget:CacheBlobNfsTarget",
                "majorVersion": 5
            },
            "azurerm_hpc_cache_blob_target": {
                "current": "azure:hpc/cacheBlobTarget:CacheBlobTarget",
                "majorVersion": 5
            },
            "azurerm_hpc_cache_nfs_target": {
                "current": "azure:hpc/cacheNfsTarget:CacheNfsTarget",
                "majorVersion": 5,
                "fields": {
                    "namespace_junction": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_image": {
                "current": "azure:compute/image:Image",
                "majorVersion": 5,
                "fields": {
                    "data_disk": {
                        "maxItemsOne": false
                    },
                    "os_disk": {
                        "maxItemsOne": true
                    }
                }
            },
            "azurerm_integration_service_environment": {
                "current": "azure:logicapps/interationServiceEnvironment:InterationServiceEnvironment",
                "majorVersion": 5,
                "fields": {
                    "connector_endpoint_ip_addresses": {
                        "maxItemsOne": false
                    },
                    "connector_outbound_ip_addresses": {
                        "maxItemsOne": false
                    },
                    "virtual_network_subnet_ids": {
                        "maxItemsOne": false
                    },
                    "workflow_endpoint_ip_addresses": {
                        "maxItemsOne": false
                    },
                    "workflow_outbound_ip_addresses": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_iot_security_device_group": {
                "current": "azure:iot/securityDeviceGroup:SecurityDeviceGroup",
                "majorVersion": 5,
                "fields": {
                    "allow_rule": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "connection_from_ips_not_allowed": {
                                    "maxItemsOne": false
                                },
                                "connection_to_ips_not_allowed": {
                                    "maxItemsOne": false
                                },
                                "local_users_not_allowed": {
                                    "maxItemsOne": false
                                },
                                "processes_not_allowed": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "range_rule": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_iot_security_solution": {
                "current": "azure:iot/securitySolution:SecuritySolution",
                "majorVersion": 5,
                "fields": {
                    "additional_workspace": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "data_types": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "disabled_data_sources": {
                        "maxItemsOne": false
                    },
                    "events_to_export": {
                        "maxItemsOne": false
                    },
                    "iothub_ids": {
                        "maxItemsOne": false
                    },
                    "query_subscription_ids": {
                        "maxItemsOne": false
                    },
                    "recommendations_enabled": {
                        "maxItemsOne": true
                    }
                }
            },
            "azurerm_iot_time_series_insights_access_policy": {
                "current": "azure:iot/timeSeriesInsightsAccessPolicy:TimeSeriesInsightsAccessPolicy",
                "majorVersion": 5,
                "fields": {
                    "roles": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_iot_time_series_insights_event_source_eventhub": {
                "current": "azure:iot/timeSeriesInsightsEventSourceEventhub:TimeSeriesInsightsEventSourceEventhub",
                "majorVersion": 5
            },
            "azurerm_iot_time_series_insights_event_source_iothub": {
                "current": "azure:iot/timeSeriesInsightsEventSourceIothub:TimeSeriesInsightsEventSourceIothub",
                "majorVersion": 5
            },
            "azurerm_iot_time_series_insights_gen2_environment": {
                "current": "azure:iot/timeSeriesInsightsGen2Environment:TimeSeriesInsightsGen2Environment",
                "majorVersion": 5,
                "fields": {
                    "id_properties": {
                        "maxItemsOne": false
                    },
                    "storage": {
                        "maxItemsOne": true
                    }
                }
            },
            "azurerm_iot_time_series_insights_reference_data_set": {
                "current": "azure:iot/timeSeriesInsightsReferenceDataSet:TimeSeriesInsightsReferenceDataSet",
                "majorVersion": 5,
                "fields": {
                    "key_property": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_iot_time_series_insights_standard_environment": {
                "current": "azure:iot/timeSeriesInsightsStandardEnvironment:TimeSeriesInsightsStandardEnvironment",
                "majorVersion": 5
            },
            "azurerm_iotcentral_application": {
                "current": "azure:iotcentral/application:Application",
                "majorVersion": 5,
                "fields": {
                    "identity": {
                        "maxItemsOne": true
                    }
                }
            },
            "azurerm_iotcentral_application_network_rule_set": {
                "current": "azure:iotcentral/applicationNetworkRuleSet:ApplicationNetworkRuleSet",
                "majorVersion": 5,
                "fields": {
                    "ip_rule": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_iothub": {
                "current": "azure:iot/ioTHub:IoTHub",
                "majorVersion": 5,
                "fields": {
                    "cloud_to_device": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "feedback": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "endpoint": {
                        "maxItemsOne": false
                    },
                    "enrichment": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "endpoint_names": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "fallback_route": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "endpoint_names": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "file_upload": {
                        "maxItemsOne": true
                    },
                    "identity": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "identity_ids": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "network_rule_set": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "ip_rule": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "route": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "endpoint_names": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "shared_access_policy": {
                        "maxItemsOne": false
                    },
                    "sku": {
                        "maxItemsOne": true
                    }
                }
            },
            "azurerm_iothub_certificate": {
                "current": "azure:iot/certificate:Certificate",
                "majorVersion": 5
            },
            "azurerm_iothub_consumer_group": {
                "current": "azure:iot/consumerGroup:ConsumerGroup",
                "majorVersion": 5
            },
            "azurerm_iothub_device_update_account": {
                "current": "azure:iot/iotHubDeviceUpdateAccount:IotHubDeviceUpdateAccount",
                "majorVersion": 5,
                "fields": {
                    "identity": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "identity_ids": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_iothub_device_update_instance": {
                "current": "azure:iot/iotHubDeviceUpdateInstance:IotHubDeviceUpdateInstance",
                "majorVersion": 5,
                "fields": {
                    "diagnostic_storage_account": {
                        "maxItemsOne": true
                    }
                }
            },
            "azurerm_iothub_dps": {
                "current": "azure:iot/iotHubDps:IotHubDps",
                "majorVersion": 5,
                "fields": {
                    "ip_filter_rule": {
                        "maxItemsOne": false
                    },
                    "linked_hub": {
                        "maxItemsOne": false
                    },
                    "sku": {
                        "maxItemsOne": true
                    }
                }
            },
            "azurerm_iothub_dps_certificate": {
                "current": "azure:iot/iotHubCertificate:IotHubCertificate",
                "majorVersion": 5
            },
            "azurerm_iothub_dps_shared_access_policy": {
                "current": "azure:iot/dpsSharedAccessPolicy:DpsSharedAccessPolicy",
                "majorVersion": 5
            },
            "azurerm_iothub_endpoint_cosmosdb_account": {
                "current": "azure:iot/endpointCosmosdbAccount:EndpointCosmosdbAccount",
                "majorVersion": 5
            },
            "azurerm_iothub_endpoint_eventhub": {
                "current": "azure:iot/endpointEventhub:EndpointEventhub",
                "majorVersion": 5
            },
            "azurerm_iothub_endpoint_servicebus_queue": {
                "current": "azure:iot/endpointServicebusQueue:EndpointServicebusQueue",
                "majorVersion": 5
            },
            "azurerm_iothub_endpoint_servicebus_topic": {
                "current": "azure:iot/endpointServicebusTopic:EndpointServicebusTopic",
                "majorVersion": 5
            },
            "azurerm_iothub_endpoint_storage_container": {
                "current": "azure:iot/endpointStorageContainer:EndpointStorageContainer",
                "majorVersion": 5
            },
            "azurerm_iothub_enrichment": {
                "current": "azure:iot/enrichment:Enrichment",
                "majorVersion": 5,
                "fields": {
                    "endpoint_names": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_iothub_fallback_route": {
                "current": "azure:iot/fallbackRoute:FallbackRoute",
                "majorVersion": 5,
                "fields": {
                    "endpoint_names": {
                        "maxItemsOne": true
                    }
                }
            },
            "azurerm_iothub_file_upload": {
                "current": "azure:iot/fileUpload:FileUpload",
                "majorVersion": 5
            },
            "azurerm_iothub_route": {
                "current": "azure:iot/route:Route",
                "majorVersion": 5,
                "fields": {
                    "endpoint_names": {
                        "maxItemsOne": true
                    }
                }
            },
            "azurerm_iothub_shared_access_policy": {
                "current": "azure:iot/sharedAccessPolicy:SharedAccessPolicy",
                "majorVersion": 5
            },
            "azurerm_ip_group": {
                "current": "azure:network/iPGroup:IPGroup",
                "majorVersion": 5,
                "fields": {
                    "cidrs": {
                        "maxItemsOne": false
                    },
                    "firewall_ids": {
                        "maxItemsOne": false
                    },
                    "firewall_policy_ids": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_ip_group_cidr": {
                "current": "azure:network/iPGroupCIDR:IPGroupCIDR",
                "majorVersion": 5
            },
            "azurerm_key_vault": {
                "current": "azure:keyvault/keyVault:KeyVault",
                "majorVersion": 5,
                "fields": {
                    "access_policy": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "certificate_permissions": {
                                    "maxItemsOne": false
                                },
                                "key_permissions": {
                                    "maxItemsOne": false
                                },
                                "secret_permissions": {
                                    "maxItemsOne": false
                                },
                                "storage_permissions": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "contact": {
                        "maxItemsOne": false
                    },
                    "network_acls": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "ip_rules": {
                                    "maxItemsOne": false
                                },
                                "virtual_network_subnet_ids": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_key_vault_access_policy": {
                "current": "azure:keyvault/accessPolicy:AccessPolicy",
                "majorVersion": 5,
                "fields": {
                    "certificate_permissions": {
                        "maxItemsOne": false
                    },
                    "key_permissions": {
                        "maxItemsOne": false
                    },
                    "secret_permissions": {
                        "maxItemsOne": false
                    },
                    "storage_permissions": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_key_vault_certificate": {
                "current": "azure:keyvault/certificate:Certificate",
                "majorVersion": 5,
                "fields": {
                    "certificate": {
                        "maxItemsOne": true
                    },
                    "certificate_attribute": {
                        "maxItemsOne": false
                    },
                    "certificate_policy": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "issuer_parameters": {
                                    "maxItemsOne": true
                                },
                                "key_properties": {
                                    "maxItemsOne": true
                                },
                                "lifetime_action": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "action": {
                                                "maxItemsOne": true
                                            },
                                            "trigger": {
                                                "maxItemsOne": true
                                            }
                                        }
                                    }
                                },
                                "secret_properties": {
                                    "maxItemsOne": true
                                },
                                "x509_certificate_properties": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "extended_key_usage": {
                                                "maxItemsOne": false
                                            },
                                            "key_usage": {
                                                "maxItemsOne": false
                                            },
                                            "subject_alternative_names": {
                                                "maxItemsOne": true,
                                                "elem": {
                                                    "fields": {
                                                        "dns_names": {
                                                            "maxItemsOne": false
                                                        },
                                                        "emails": {
                                                            "maxItemsOne": false
                                                        },
                                                        "upns": {
                                                            "maxItemsOne": false
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_key_vault_certificate_contacts": {
                "current": "azure:keyvault/certificateContacts:CertificateContacts",
                "majorVersion": 5,
                "fields": {
                    "contact": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_key_vault_certificate_issuer": {
                "current": "azure:keyvault/certificateIssuer:CertificateIssuer",
                "majorVersion": 5,
                "fields": {
                    "admin": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_key_vault_certificate_legacy": {
                "current": "azure:keyvault/certifiate:Certifiate",
                "majorVersion": 5,
                "fields": {
                    "certificate": {
                        "maxItemsOne": true
                    },
                    "certificate_attribute": {
                        "maxItemsOne": false
                    },
                    "certificate_policy": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "issuer_parameters": {
                                    "maxItemsOne": true
                                },
                                "key_properties": {
                                    "maxItemsOne": true
                                },
                                "lifetime_action": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "action": {
                                                "maxItemsOne": true
                                            },
                                            "trigger": {
                                                "maxItemsOne": true
                                            }
                                        }
                                    }
                                },
                                "secret_properties": {
                                    "maxItemsOne": true
                                },
                                "x509_certificate_properties": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "extended_key_usage": {
                                                "maxItemsOne": false
                                            },
                                            "key_usage": {
                                                "maxItemsOne": false
                                            },
                                            "subject_alternative_names": {
                                                "maxItemsOne": true,
                                                "elem": {
                                                    "fields": {
                                                        "dns_names": {
                                                            "maxItemsOne": false
                                                        },
                                                        "emails": {
                                                            "maxItemsOne": false
                                                        },
                                                        "upns": {
                                                            "maxItemsOne": false
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_key_vault_key": {
                "current": "azure:keyvault/key:Key",
                "majorVersion": 5,
                "fields": {
                    "key_opts": {
                        "maxItemsOne": false
                    },
                    "rotation_policy": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "automatic": {
                                    "maxItemsOne": true
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_key_vault_managed_hardware_security_module": {
                "current": "azure:keyvault/managedHardwareSecurityModule:ManagedHardwareSecurityModule",
                "majorVersion": 5,
                "fields": {
                    "admin_object_ids": {
                        "maxItemsOne": false
                    },
                    "network_acls": {
                        "maxItemsOne": true
                    },
                    "security_domain_key_vault_certificate_ids": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_key_vault_managed_hardware_security_module_role_assignment": {
                "current": "azure:keyvault/managedHardwareSecurityModuleRoleAssignment:ManagedHardwareSecurityModuleRoleAssignment",
                "majorVersion": 5
            },
            "azurerm_key_vault_managed_hardware_security_module_role_definition": {
                "current": "azure:keyvault/managedHardwareSecurityModuleRoleDefinition:ManagedHardwareSecurityModuleRoleDefinition",
                "majorVersion": 5,
                "fields": {
                    "permission": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "actions": {
                                    "maxItemsOne": false
                                },
                                "data_actions": {
                                    "maxItemsOne": false
                                },
                                "not_actions": {
                                    "maxItemsOne": false
                                },
                                "not_data_actions": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_key_vault_managed_storage_account": {
                "current": "azure:keyvault/managedStorageAccount:ManagedStorageAccount",
                "majorVersion": 5
            },
            "azurerm_key_vault_managed_storage_account_sas_token_definition": {
                "current": "azure:keyvault/managedStorageAccountSasTokenDefinition:ManagedStorageAccountSasTokenDefinition",
                "majorVersion": 5
            },
            "azurerm_key_vault_secret": {
                "current": "azure:keyvault/secret:Secret",
                "majorVersion": 5
            },
            "azurerm_kubernetes_cluster": {
                "current": "azure:containerservice/kubernetesCluster:KubernetesCluster",
                "majorVersion": 5,
                "fields": {
                    "aci_connector_linux": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "connector_identity": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "api_server_access_profile": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "authorized_ip_ranges": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "api_server_authorized_ip_ranges": {
                        "maxItemsOne": false
                    },
                    "auto_scaler_profile": {
                        "maxItemsOne": true
                    },
                    "azure_active_directory_role_based_access_control": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "admin_group_object_ids": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "confidential_computing": {
                        "maxItemsOne": true
                    },
                    "custom_ca_trust_certificates_base64": {
                        "maxItemsOne": false
                    },
                    "default_node_pool": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "kubelet_config": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "allowed_unsafe_sysctls": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "linux_os_config": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "sysctl_config": {
                                                "maxItemsOne": true
                                            }
                                        }
                                    }
                                },
                                "node_network_profile": {
                                    "maxItemsOne": true
                                },
                                "node_taints": {
                                    "maxItemsOne": false
                                },
                                "upgrade_settings": {
                                    "maxItemsOne": true
                                },
                                "zones": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "http_proxy_config": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "no_proxy": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "identity": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "identity_ids": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "ingress_application_gateway": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "ingress_application_gateway_identity": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "key_management_service": {
                        "maxItemsOne": true
                    },
                    "key_vault_secrets_provider": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "secret_identity": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "kube_admin_config": {
                        "maxItemsOne": false
                    },
                    "kube_config": {
                        "maxItemsOne": false
                    },
                    "kubelet_identity": {
                        "maxItemsOne": true
                    },
                    "linux_profile": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "ssh_key": {
                                    "maxItemsOne": true
                                }
                            }
                        }
                    },
                    "maintenance_window": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "allowed": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "hours": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "not_allowed": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "maintenance_window_auto_upgrade": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "not_allowed": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "maintenance_window_node_os": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "not_allowed": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "microsoft_defender": {
                        "maxItemsOne": true
                    },
                    "monitor_metrics": {
                        "maxItemsOne": true
                    },
                    "network_profile": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "ip_versions": {
                                    "maxItemsOne": false
                                },
                                "load_balancer_profile": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "effective_outbound_ips": {
                                                "maxItemsOne": false
                                            },
                                            "outbound_ip_address_ids": {
                                                "maxItemsOne": false
                                            },
                                            "outbound_ip_prefix_ids": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "nat_gateway_profile": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "effective_outbound_ips": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "pod_cidrs": {
                                    "maxItemsOne": false
                                },
                                "service_cidrs": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "oms_agent": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "oms_agent_identity": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "service_mesh_profile": {
                        "maxItemsOne": true
                    },
                    "service_principal": {
                        "maxItemsOne": true
                    },
                    "storage_profile": {
                        "maxItemsOne": true
                    },
                    "web_app_routing": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "web_app_routing_identity": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "windows_profile": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "gmsa": {
                                    "maxItemsOne": true
                                }
                            }
                        }
                    },
                    "workload_autoscaler_profile": {
                        "maxItemsOne": true
                    }
                }
            },
            "azurerm_kubernetes_cluster_extension": {
                "current": "azure:containerservice/kubernetesClusterExtension:KubernetesClusterExtension",
                "majorVersion": 5,
                "fields": {
                    "aks_assigned_identity": {
                        "maxItemsOne": false
                    },
                    "plan": {
                        "maxItemsOne": true
                    }
                }
            },
            "azurerm_kubernetes_cluster_node_pool": {
                "current": "azure:containerservice/kubernetesClusterNodePool:KubernetesClusterNodePool",
                "majorVersion": 5,
                "fields": {
                    "kubelet_config": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "allowed_unsafe_sysctls": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "linux_os_config": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "sysctl_config": {
                                    "maxItemsOne": true
                                }
                            }
                        }
                    },
                    "node_network_profile": {
                        "maxItemsOne": true
                    },
                    "node_taints": {
                        "maxItemsOne": false
                    },
                    "upgrade_settings": {
                        "maxItemsOne": true
                    },
                    "windows_profile": {
                        "maxItemsOne": true
                    },
                    "zones": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_kubernetes_cluster_trusted_access_role_binding": {
                "current": "azure:containerservice/clusterTrustedAccessRoleBinding:ClusterTrustedAccessRoleBinding",
                "majorVersion": 5,
                "fields": {
                    "roles": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_kubernetes_fleet_manager": {
                "current": "azure:containerservice/kubernetesFleetManager:KubernetesFleetManager",
                "majorVersion": 5,
                "fields": {
                    "hub_profile": {
                        "maxItemsOne": true
                    }
                }
            },
            "azurerm_kubernetes_flux_configuration": {
                "current": "azure:containerservice/fluxConfiguration:FluxConfiguration",
                "majorVersion": 5,
                "fields": {
                    "blob_storage": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "managed_identity": {
                                    "maxItemsOne": true
                                },
                                "service_principal": {
                                    "maxItemsOne": true
                                }
                            }
                        }
                    },
                    "bucket": {
                        "maxItemsOne": true
                    },
                    "git_repository": {
                        "maxItemsOne": true
                    },
                    "kustomizations": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "depends_on": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_kusto_attached_database_configuration": {
                "current": "azure:kusto/attachedDatabaseConfiguration:AttachedDatabaseConfiguration",
                "majorVersion": 5,
                "fields": {
                    "attached_database_names": {
                        "maxItemsOne": false
                    },
                    "sharing": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "external_tables_to_exclude": {
                                    "maxItemsOne": false
                                },
                                "external_tables_to_include": {
                                    "maxItemsOne": false
                                },
                                "materialized_views_to_exclude": {
                                    "maxItemsOne": false
                                },
                                "materialized_views_to_include": {
                                    "maxItemsOne": false
                                },
                                "tables_to_exclude": {
                                    "maxItemsOne": false
                                },
                                "tables_to_include": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_kusto_cluster": {
                "current": "azure:kusto/cluster:Cluster",
                "majorVersion": 5,
                "fields": {
                    "allowed_fqdns": {
                        "maxItemsOne": false
                    },
                    "allowed_ip_ranges": {
                        "maxItemsOne": false
                    },
                    "identity": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "identity_ids": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "language_extensions": {
                        "maxItemsOne": false
                    },
                    "optimized_auto_scale": {
                        "maxItemsOne": true
                    },
                    "sku": {
                        "maxItemsOne": true
                    },
                    "trusted_external_tenants": {
                        "maxItemsOne": false
                    },
                    "virtual_network_configuration": {
                        "maxItemsOne": true
                    },
                    "zones": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_kusto_cluster_customer_managed_key": {
                "current": "azure:kusto/clusterCustomerManagedKey:ClusterCustomerManagedKey",
                "majorVersion": 5
            },
            "azurerm_kusto_cluster_managed_private_endpoint": {
                "current": "azure:kusto/clusterManagedPrivateEndpoint:ClusterManagedPrivateEndpoint",
                "majorVersion": 5
            },
            "azurerm_kusto_cluster_principal_assignment": {
                "current": "azure:kusto/clusterPrincipalAssignment:ClusterPrincipalAssignment",
                "majorVersion": 5
            },
            "azurerm_kusto_cosmosdb_data_connection": {
                "current": "azure:kusto/cosmosdbDataConnection:CosmosdbDataConnection",
                "majorVersion": 5
            },
            "azurerm_kusto_database": {
                "current": "azure:kusto/database:Database",
                "majorVersion": 5
            },
            "azurerm_kusto_database_principal_assignment": {
                "current": "azure:kusto/databasePrincipalAssignment:DatabasePrincipalAssignment",
                "majorVersion": 5
            },
            "azurerm_kusto_eventgrid_data_connection": {
                "current": "azure:kusto/eventGridDataConnection:EventGridDataConnection",
                "majorVersion": 5
            },
            "azurerm_kusto_eventhub_data_connection": {
                "current": "azure:kusto/eventhubDataConnection:EventhubDataConnection",
                "majorVersion": 5,
                "fields": {
                    "event_system_properties": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_kusto_iothub_data_connection": {
                "current": "azure:kusto/iotHubDataConnection:IotHubDataConnection",
                "majorVersion": 5,
                "fields": {
                    "event_system_properties": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_kusto_script": {
                "current": "azure:kusto/script:Script",
                "majorVersion": 5
            },
            "azurerm_lab_service_lab": {
                "current": "azure:lab/lab:Lab",
                "majorVersion": 5,
                "fields": {
                    "auto_shutdown": {
                        "maxItemsOne": true
                    },
                    "connection_setting": {
                        "maxItemsOne": true
                    },
                    "network": {
                        "maxItemsOne": true
                    },
                    "roster": {
                        "maxItemsOne": true
                    },
                    "security": {
                        "maxItemsOne": true
                    },
                    "virtual_machine": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "admin_user": {
                                    "maxItemsOne": true
                                },
                                "image_reference": {
                                    "maxItemsOne": true
                                },
                                "non_admin_user": {
                                    "maxItemsOne": true
                                },
                                "sku": {
                                    "maxItemsOne": true
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_lab_service_plan": {
                "current": "azure:lab/servicePlan:ServicePlan",
                "majorVersion": 5,
                "fields": {
                    "allowed_regions": {
                        "maxItemsOne": false
                    },
                    "default_auto_shutdown": {
                        "maxItemsOne": true
                    },
                    "default_connection": {
                        "maxItemsOne": true
                    },
                    "support": {
                        "maxItemsOne": true
                    }
                }
            },
            "azurerm_lab_service_schedule": {
                "current": "azure:lab/schedule:Schedule",
                "majorVersion": 5,
                "fields": {
                    "recurrence": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "week_days": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_lab_service_user": {
                "current": "azure:lab/user:User",
                "majorVersion": 5
            },
            "azurerm_lb": {
                "current": "azure:lb/loadBalancer:LoadBalancer",
                "majorVersion": 5,
                "fields": {
                    "frontend_ip_configuration": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "inbound_nat_rules": {
                                    "maxItemsOne": false
                                },
                                "load_balancer_rules": {
                                    "maxItemsOne": false
                                },
                                "outbound_rules": {
                                    "maxItemsOne": false
                                },
                                "zones": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "private_ip_addresses": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_lb_backend_address_pool": {
                "current": "azure:lb/backendAddressPool:BackendAddressPool",
                "majorVersion": 5,
                "fields": {
                    "backend_ip_configurations": {
                        "maxItemsOne": false
                    },
                    "inbound_nat_rules": {
                        "maxItemsOne": false
                    },
                    "load_balancing_rules": {
                        "maxItemsOne": false
                    },
                    "outbound_rules": {
                        "maxItemsOne": false
                    },
                    "tunnel_interface": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_lb_backend_address_pool_address": {
                "current": "azure:lb/backendAddressPoolAddress:BackendAddressPoolAddress",
                "majorVersion": 5,
                "fields": {
                    "inbound_nat_rule_port_mapping": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_lb_nat_pool": {
                "current": "azure:lb/natPool:NatPool",
                "majorVersion": 5
            },
            "azurerm_lb_nat_rule": {
                "current": "azure:lb/natRule:NatRule",
                "majorVersion": 5
            },
            "azurerm_lb_outbound_rule": {
                "current": "azure:lb/outboundRule:OutboundRule",
                "majorVersion": 5,
                "fields": {
                    "frontend_ip_configuration": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_lb_probe": {
                "current": "azure:lb/probe:Probe",
                "majorVersion": 5,
                "fields": {
                    "load_balancer_rules": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_lb_rule": {
                "current": "azure:lb/rule:Rule",
                "majorVersion": 5,
                "fields": {
                    "backend_address_pool_ids": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_lighthouse_assignment": {
                "current": "azure:lighthouse/assignment:Assignment",
                "majorVersion": 5
            },
            "azurerm_lighthouse_definition": {
                "current": "azure:lighthouse/definition:Definition",
                "majorVersion": 5,
                "fields": {
                    "authorization": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "delegated_role_definition_ids": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "eligible_authorization": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "just_in_time_access_policy": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "approver": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "plan": {
                        "maxItemsOne": true
                    }
                }
            },
            "azurerm_linux_function_app": {
                "current": "azure:appservice/linuxFunctionApp:LinuxFunctionApp",
                "majorVersion": 5,
                "fields": {
                    "auth_settings": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "active_directory": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "allowed_audiences": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "allowed_external_redirect_urls": {
                                    "maxItemsOne": false
                                },
                                "facebook": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "oauth_scopes": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "github": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "oauth_scopes": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "google": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "oauth_scopes": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "microsoft": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "oauth_scopes": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "twitter": {
                                    "maxItemsOne": true
                                }
                            }
                        }
                    },
                    "auth_settings_v2": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "active_directory_v2": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "allowed_applications": {
                                                "maxItemsOne": false
                                            },
                                            "allowed_audiences": {
                                                "maxItemsOne": false
                                            },
                                            "allowed_groups": {
                                                "maxItemsOne": false
                                            },
                                            "allowed_identities": {
                                                "maxItemsOne": false
                                            },
                                            "jwt_allowed_client_applications": {
                                                "maxItemsOne": false
                                            },
                                            "jwt_allowed_groups": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "apple_v2": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "login_scopes": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "azure_static_web_app_v2": {
                                    "maxItemsOne": true
                                },
                                "custom_oidc_v2": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "scopes": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "excluded_paths": {
                                    "maxItemsOne": false
                                },
                                "facebook_v2": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "login_scopes": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "github_v2": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "login_scopes": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "google_v2": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "allowed_audiences": {
                                                "maxItemsOne": false
                                            },
                                            "login_scopes": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "login": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "allowed_external_redirect_urls": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "microsoft_v2": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "allowed_audiences": {
                                                "maxItemsOne": false
                                            },
                                            "login_scopes": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "twitter_v2": {
                                    "maxItemsOne": true
                                }
                            }
                        }
                    },
                    "backup": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "schedule": {
                                    "maxItemsOne": true
                                }
                            }
                        }
                    },
                    "connection_string": {
                        "maxItemsOne": false
                    },
                    "identity": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "identity_ids": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "outbound_ip_address_list": {
                        "maxItemsOne": false
                    },
                    "possible_outbound_ip_address_list": {
                        "maxItemsOne": false
                    },
                    "site_config": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "app_service_logs": {
                                    "maxItemsOne": true
                                },
                                "application_stack": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "docker": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "cors": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "allowed_origins": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "default_documents": {
                                    "maxItemsOne": false
                                },
                                "ip_restriction": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "headers": {
                                                "maxItemsOne": true,
                                                "elem": {
                                                    "fields": {
                                                        "x_azure_fdid": {
                                                            "maxItemsOne": false
                                                        },
                                                        "x_fd_health_probe": {
                                                            "maxItemsOne": true
                                                        },
                                                        "x_forwarded_for": {
                                                            "maxItemsOne": false
                                                        },
                                                        "x_forwarded_host": {
                                                            "maxItemsOne": false
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "scm_ip_restriction": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "headers": {
                                                "maxItemsOne": true,
                                                "elem": {
                                                    "fields": {
                                                        "x_azure_fdid": {
                                                            "maxItemsOne": false
                                                        },
                                                        "x_fd_health_probe": {
                                                            "maxItemsOne": true
                                                        },
                                                        "x_forwarded_for": {
                                                            "maxItemsOne": false
                                                        },
                                                        "x_forwarded_host": {
                                                            "maxItemsOne": false
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "site_credential": {
                        "maxItemsOne": false
                    },
                    "sticky_settings": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "app_setting_names": {
                                    "maxItemsOne": false
                                },
                                "connection_string_names": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "storage_account": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_linux_function_app_slot": {
                "current": "azure:appservice/linuxFunctionAppSlot:LinuxFunctionAppSlot",
                "majorVersion": 5,
                "fields": {
                    "auth_settings": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "active_directory": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "allowed_audiences": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "allowed_external_redirect_urls": {
                                    "maxItemsOne": false
                                },
                                "facebook": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "oauth_scopes": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "github": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "oauth_scopes": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "google": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "oauth_scopes": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "microsoft": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "oauth_scopes": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "twitter": {
                                    "maxItemsOne": true
                                }
                            }
                        }
                    },
                    "auth_settings_v2": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "active_directory_v2": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "allowed_applications": {
                                                "maxItemsOne": false
                                            },
                                            "allowed_audiences": {
                                                "maxItemsOne": false
                                            },
                                            "allowed_groups": {
                                                "maxItemsOne": false
                                            },
                                            "allowed_identities": {
                                                "maxItemsOne": false
                                            },
                                            "jwt_allowed_client_applications": {
                                                "maxItemsOne": false
                                            },
                                            "jwt_allowed_groups": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "apple_v2": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "login_scopes": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "azure_static_web_app_v2": {
                                    "maxItemsOne": true
                                },
                                "custom_oidc_v2": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "scopes": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "excluded_paths": {
                                    "maxItemsOne": false
                                },
                                "facebook_v2": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "login_scopes": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "github_v2": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "login_scopes": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "google_v2": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "allowed_audiences": {
                                                "maxItemsOne": false
                                            },
                                            "login_scopes": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "login": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "allowed_external_redirect_urls": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "microsoft_v2": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "allowed_audiences": {
                                                "maxItemsOne": false
                                            },
                                            "login_scopes": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "twitter_v2": {
                                    "maxItemsOne": true
                                }
                            }
                        }
                    },
                    "backup": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "schedule": {
                                    "maxItemsOne": true
                                }
                            }
                        }
                    },
                    "connection_string": {
                        "maxItemsOne": false
                    },
                    "identity": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "identity_ids": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "outbound_ip_address_list": {
                        "maxItemsOne": false
                    },
                    "possible_outbound_ip_address_list": {
                        "maxItemsOne": false
                    },
                    "site_config": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "app_service_logs": {
                                    "maxItemsOne": true
                                },
                                "application_stack": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "docker": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "cors": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "allowed_origins": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "default_documents": {
                                    "maxItemsOne": false
                                },
                                "ip_restriction": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "headers": {
                                                "maxItemsOne": true,
                                                "elem": {
                                                    "fields": {
                                                        "x_azure_fdid": {
                                                            "maxItemsOne": false
                                                        },
                                                        "x_fd_health_probe": {
                                                            "maxItemsOne": true
                                                        },
                                                        "x_forwarded_for": {
                                                            "maxItemsOne": false
                                                        },
                                                        "x_forwarded_host": {
                                                            "maxItemsOne": false
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "scm_ip_restriction": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "headers": {
                                                "maxItemsOne": true,
                                                "elem": {
                                                    "fields": {
                                                        "x_azure_fdid": {
                                                            "maxItemsOne": false
                                                        },
                                                        "x_fd_health_probe": {
                                                            "maxItemsOne": true
                                                        },
                                                        "x_forwarded_for": {
                                                            "maxItemsOne": false
                                                        },
                                                        "x_forwarded_host": {
                                                            "maxItemsOne": false
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "site_credential": {
                        "maxItemsOne": false
                    },
                    "storage_account": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_linux_virtual_machine": {
                "current": "azure:compute/linuxVirtualMachine:LinuxVirtualMachine",
                "majorVersion": 5,
                "fields": {
                    "additional_capabilities": {
                        "maxItemsOne": true
                    },
                    "admin_ssh_key": {
                        "maxItemsOne": false
                    },
                    "boot_diagnostics": {
                        "maxItemsOne": true
                    },
                    "gallery_application": {
                        "maxItemsOne": false
                    },
                    "identity": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "identity_ids": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "network_interface_ids": {
                        "maxItemsOne": false
                    },
                    "os_disk": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "diff_disk_settings": {
                                    "maxItemsOne": true
                                }
                            }
                        }
                    },
                    "plan": {
                        "maxItemsOne": true
                    },
                    "private_ip_addresses": {
                        "maxItemsOne": false
                    },
                    "public_ip_addresses": {
                        "maxItemsOne": false
                    },
                    "secret": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "certificate": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "source_image_reference": {
                        "maxItemsOne": true
                    },
                    "termination_notification": {
                        "maxItemsOne": true
                    }
                }
            },
            "azurerm_linux_virtual_machine_scale_set": {
                "current": "azure:compute/linuxVirtualMachineScaleSet:LinuxVirtualMachineScaleSet",
                "majorVersion": 5,
                "fields": {
                    "additional_capabilities": {
                        "maxItemsOne": true
                    },
                    "admin_ssh_key": {
                        "maxItemsOne": false
                    },
                    "automatic_instance_repair": {
                        "maxItemsOne": true
                    },
                    "automatic_os_upgrade_policy": {
                        "maxItemsOne": true
                    },
                    "boot_diagnostics": {
                        "maxItemsOne": true
                    },
                    "data_disk": {
                        "maxItemsOne": false
                    },
                    "extension": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "protected_settings_from_key_vault": {
                                    "maxItemsOne": true
                                },
                                "provision_after_extensions": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "gallery_application": {
                        "maxItemsOne": false
                    },
                    "gallery_applications": {
                        "maxItemsOne": false
                    },
                    "identity": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "identity_ids": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "network_interface": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "dns_servers": {
                                    "maxItemsOne": false
                                },
                                "ip_configuration": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "application_gateway_backend_address_pool_ids": {
                                                "maxItemsOne": false
                                            },
                                            "application_security_group_ids": {
                                                "maxItemsOne": false
                                            },
                                            "load_balancer_backend_address_pool_ids": {
                                                "maxItemsOne": false
                                            },
                                            "load_balancer_inbound_nat_rules_ids": {
                                                "maxItemsOne": false
                                            },
                                            "public_ip_address": {
                                                "maxItemsOne": false,
                                                "elem": {
                                                    "fields": {
                                                        "ip_tag": {
                                                            "maxItemsOne": false
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "os_disk": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "diff_disk_settings": {
                                    "maxItemsOne": true
                                }
                            }
                        }
                    },
                    "plan": {
                        "maxItemsOne": true
                    },
                    "rolling_upgrade_policy": {
                        "maxItemsOne": true
                    },
                    "scale_in": {
                        "maxItemsOne": true
                    },
                    "secret": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "certificate": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "source_image_reference": {
                        "maxItemsOne": true
                    },
                    "spot_restore": {
                        "maxItemsOne": true
                    },
                    "terminate_notification": {
                        "maxItemsOne": true
                    },
                    "termination_notification": {
                        "maxItemsOne": true
                    },
                    "zones": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_linux_web_app": {
                "current": "azure:appservice/linuxWebApp:LinuxWebApp",
                "majorVersion": 5,
                "fields": {
                    "auth_settings": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "active_directory": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "allowed_audiences": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "allowed_external_redirect_urls": {
                                    "maxItemsOne": false
                                },
                                "facebook": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "oauth_scopes": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "github": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "oauth_scopes": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "google": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "oauth_scopes": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "microsoft": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "oauth_scopes": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "twitter": {
                                    "maxItemsOne": true
                                }
                            }
                        }
                    },
                    "auth_settings_v2": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "active_directory_v2": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "allowed_applications": {
                                                "maxItemsOne": false
                                            },
                                            "allowed_audiences": {
                                                "maxItemsOne": false
                                            },
                                            "allowed_groups": {
                                                "maxItemsOne": false
                                            },
                                            "allowed_identities": {
                                                "maxItemsOne": false
                                            },
                                            "jwt_allowed_client_applications": {
                                                "maxItemsOne": false
                                            },
                                            "jwt_allowed_groups": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "apple_v2": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "login_scopes": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "azure_static_web_app_v2": {
                                    "maxItemsOne": true
                                },
                                "custom_oidc_v2": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "scopes": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "excluded_paths": {
                                    "maxItemsOne": false
                                },
                                "facebook_v2": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "login_scopes": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "github_v2": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "login_scopes": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "google_v2": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "allowed_audiences": {
                                                "maxItemsOne": false
                                            },
                                            "login_scopes": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "login": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "allowed_external_redirect_urls": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "microsoft_v2": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "allowed_audiences": {
                                                "maxItemsOne": false
                                            },
                                            "login_scopes": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "twitter_v2": {
                                    "maxItemsOne": true
                                }
                            }
                        }
                    },
                    "backup": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "schedule": {
                                    "maxItemsOne": true
                                }
                            }
                        }
                    },
                    "connection_string": {
                        "maxItemsOne": false
                    },
                    "identity": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "identity_ids": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "logs": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "application_logs": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "azure_blob_storage": {
                                                "maxItemsOne": true
                                            }
                                        }
                                    }
                                },
                                "http_logs": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "azure_blob_storage": {
                                                "maxItemsOne": true
                                            },
                                            "file_system": {
                                                "maxItemsOne": true
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "outbound_ip_address_list": {
                        "maxItemsOne": false
                    },
                    "possible_outbound_ip_address_list": {
                        "maxItemsOne": false
                    },
                    "site_config": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "application_stack": {
                                    "maxItemsOne": true
                                },
                                "auto_heal_setting": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "action": {
                                                "maxItemsOne": true
                                            },
                                            "trigger": {
                                                "maxItemsOne": true,
                                                "elem": {
                                                    "fields": {
                                                        "requests": {
                                                            "maxItemsOne": true
                                                        },
                                                        "slow_request": {
                                                            "maxItemsOne": false
                                                        },
                                                        "status_code": {
                                                            "maxItemsOne": false
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "cors": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "allowed_origins": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "default_documents": {
                                    "maxItemsOne": false
                                },
                                "ip_restriction": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "headers": {
                                                "maxItemsOne": true,
                                                "elem": {
                                                    "fields": {
                                                        "x_azure_fdid": {
                                                            "maxItemsOne": false
                                                        },
                                                        "x_fd_health_probe": {
                                                            "maxItemsOne": true
                                                        },
                                                        "x_forwarded_for": {
                                                            "maxItemsOne": false
                                                        },
                                                        "x_forwarded_host": {
                                                            "maxItemsOne": false
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "scm_ip_restriction": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "headers": {
                                                "maxItemsOne": true,
                                                "elem": {
                                                    "fields": {
                                                        "x_azure_fdid": {
                                                            "maxItemsOne": false
                                                        },
                                                        "x_fd_health_probe": {
                                                            "maxItemsOne": true
                                                        },
                                                        "x_forwarded_for": {
                                                            "maxItemsOne": false
                                                        },
                                                        "x_forwarded_host": {
                                                            "maxItemsOne": false
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "site_credential": {
                        "maxItemsOne": false
                    },
                    "sticky_settings": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "app_setting_names": {
                                    "maxItemsOne": false
                                },
                                "connection_string_names": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "storage_account": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_linux_web_app_slot": {
                "current": "azure:appservice/linuxWebAppSlot:LinuxWebAppSlot",
                "majorVersion": 5,
                "fields": {
                    "auth_settings": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "active_directory": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "allowed_audiences": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "allowed_external_redirect_urls": {
                                    "maxItemsOne": false
                                },
                                "facebook": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "oauth_scopes": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "github": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "oauth_scopes": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "google": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "oauth_scopes": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "microsoft": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "oauth_scopes": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "twitter": {
                                    "maxItemsOne": true
                                }
                            }
                        }
                    },
                    "auth_settings_v2": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "active_directory_v2": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "allowed_applications": {
                                                "maxItemsOne": false
                                            },
                                            "allowed_audiences": {
                                                "maxItemsOne": false
                                            },
                                            "allowed_groups": {
                                                "maxItemsOne": false
                                            },
                                            "allowed_identities": {
                                                "maxItemsOne": false
                                            },
                                            "jwt_allowed_client_applications": {
                                                "maxItemsOne": false
                                            },
                                            "jwt_allowed_groups": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "apple_v2": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "login_scopes": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "azure_static_web_app_v2": {
                                    "maxItemsOne": true
                                },
                                "custom_oidc_v2": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "scopes": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "excluded_paths": {
                                    "maxItemsOne": false
                                },
                                "facebook_v2": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "login_scopes": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "github_v2": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "login_scopes": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "google_v2": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "allowed_audiences": {
                                                "maxItemsOne": false
                                            },
                                            "login_scopes": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "login": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "allowed_external_redirect_urls": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "microsoft_v2": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "allowed_audiences": {
                                                "maxItemsOne": false
                                            },
                                            "login_scopes": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "twitter_v2": {
                                    "maxItemsOne": true
                                }
                            }
                        }
                    },
                    "backup": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "schedule": {
                                    "maxItemsOne": true
                                }
                            }
                        }
                    },
                    "connection_string": {
                        "maxItemsOne": false
                    },
                    "identity": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "identity_ids": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "logs": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "application_logs": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "azure_blob_storage": {
                                                "maxItemsOne": true
                                            }
                                        }
                                    }
                                },
                                "http_logs": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "azure_blob_storage": {
                                                "maxItemsOne": true
                                            },
                                            "file_system": {
                                                "maxItemsOne": true
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "outbound_ip_address_list": {
                        "maxItemsOne": false
                    },
                    "possible_outbound_ip_address_list": {
                        "maxItemsOne": false
                    },
                    "site_config": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "application_stack": {
                                    "maxItemsOne": true
                                },
                                "auto_heal_setting": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "action": {
                                                "maxItemsOne": true
                                            },
                                            "trigger": {
                                                "maxItemsOne": true,
                                                "elem": {
                                                    "fields": {
                                                        "requests": {
                                                            "maxItemsOne": true
                                                        },
                                                        "slow_request": {
                                                            "maxItemsOne": false
                                                        },
                                                        "status_code": {
                                                            "maxItemsOne": false
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "cors": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "allowed_origins": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "default_documents": {
                                    "maxItemsOne": false
                                },
                                "ip_restriction": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "headers": {
                                                "maxItemsOne": true,
                                                "elem": {
                                                    "fields": {
                                                        "x_azure_fdid": {
                                                            "maxItemsOne": false
                                                        },
                                                        "x_fd_health_probe": {
                                                            "maxItemsOne": true
                                                        },
                                                        "x_forwarded_for": {
                                                            "maxItemsOne": false
                                                        },
                                                        "x_forwarded_host": {
                                                            "maxItemsOne": false
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "scm_ip_restriction": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "headers": {
                                                "maxItemsOne": true,
                                                "elem": {
                                                    "fields": {
                                                        "x_azure_fdid": {
                                                            "maxItemsOne": false
                                                        },
                                                        "x_fd_health_probe": {
                                                            "maxItemsOne": true
                                                        },
                                                        "x_forwarded_for": {
                                                            "maxItemsOne": false
                                                        },
                                                        "x_forwarded_host": {
                                                            "maxItemsOne": false
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "site_credential": {
                        "maxItemsOne": false
                    },
                    "storage_account": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_load_test": {
                "current": "azure:loadtest/loadTest:LoadTest",
                "majorVersion": 5,
                "fields": {
                    "identity": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "identity_ids": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_local_network_gateway": {
                "current": "azure:network/localNetworkGateway:LocalNetworkGateway",
                "majorVersion": 5,
                "fields": {
                    "address_space": {
                        "maxItemsOne": false
                    },
                    "bgp_settings": {
                        "maxItemsOne": true
                    }
                }
            },
            "azurerm_log_analytics_cluster": {
                "current": "azure:loganalytics/cluster:Cluster",
                "majorVersion": 5,
                "fields": {
                    "identity": {
                        "maxItemsOne": true
                    }
                }
            },
            "azurerm_log_analytics_cluster_customer_managed_key": {
                "current": "azure:loganalytics/clusterCustomerManagedKey:ClusterCustomerManagedKey",
                "majorVersion": 5
            },
            "azurerm_log_analytics_data_export_rule": {
                "current": "azure:loganalytics/dataExportRule:DataExportRule",
                "majorVersion": 5,
                "fields": {
                    "table_names": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_log_analytics_datasource_windows_event": {
                "current": "azure:loganalytics/dataSourceWindowsEvent:DataSourceWindowsEvent",
                "majorVersion": 5,
                "fields": {
                    "event_types": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_log_analytics_datasource_windows_performance_counter": {
                "current": "azure:loganalytics/dataSourceWindowsPerformanceCounter:DataSourceWindowsPerformanceCounter",
                "majorVersion": 5
            },
            "azurerm_log_analytics_linked_service": {
                "current": "azure:loganalytics/linkedService:LinkedService",
                "majorVersion": 5
            },
            "azurerm_log_analytics_linked_storage_account": {
                "current": "azure:loganalytics/linkedStorageAccount:LinkedStorageAccount",
                "majorVersion": 5,
                "fields": {
                    "storage_account_ids": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_log_analytics_query_pack": {
                "current": "azure:loganalytics/queryPack:QueryPack",
                "majorVersion": 5
            },
            "azurerm_log_analytics_query_pack_query": {
                "current": "azure:operationalinsights/queryPackQuery:QueryPackQuery",
                "majorVersion": 5,
                "fields": {
                    "categories": {
                        "maxItemsOne": false
                    },
                    "resource_types": {
                        "maxItemsOne": false
                    },
                    "solutions": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_log_analytics_saved_search": {
                "current": "azure:loganalytics/savedSearch:SavedSearch",
                "majorVersion": 5,
                "fields": {
                    "function_parameters": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_log_analytics_solution": {
                "current": "azure:operationalinsights/analyticsSolution:AnalyticsSolution",
                "majorVersion": 5,
                "fields": {
                    "plan": {
                        "maxItemsOne": true
                    }
                }
            },
            "azurerm_log_analytics_storage_insights": {
                "current": "azure:loganalytics/storageInsights:StorageInsights",
                "majorVersion": 5,
                "fields": {
                    "blob_container_names": {
                        "maxItemsOne": false
                    },
                    "table_names": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_log_analytics_workspace": {
                "current": "azure:operationalinsights/analyticsWorkspace:AnalyticsWorkspace",
                "majorVersion": 5,
                "fields": {
                    "identity": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "identity_ids": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_logic_app_action_custom": {
                "current": "azure:logicapps/actionCustom:ActionCustom",
                "majorVersion": 5
            },
            "azurerm_logic_app_action_http": {
                "current": "azure:logicapps/actionHttp:ActionHttp",
                "majorVersion": 5,
                "fields": {
                    "run_after": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_logic_app_integration_account": {
                "current": "azure:logicapps/integrationAccount:IntegrationAccount",
                "majorVersion": 5
            },
            "azurerm_logic_app_integration_account_agreement": {
                "current": "azure:logicapps/integrationAccountAgreement:IntegrationAccountAgreement",
                "majorVersion": 5,
                "fields": {
                    "guest_identity": {
                        "maxItemsOne": true
                    },
                    "host_identity": {
                        "maxItemsOne": true
                    }
                }
            },
            "azurerm_logic_app_integration_account_assembly": {
                "current": "azure:logicapps/integrationAccountAssembly:IntegrationAccountAssembly",
                "majorVersion": 5
            },
            "azurerm_logic_app_integration_account_batch_configuration": {
                "current": "azure:logicapps/integrationAccountBatchConfiguration:IntegrationAccountBatchConfiguration",
                "majorVersion": 5,
                "fields": {
                    "release_criteria": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "recurrence": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "schedule": {
                                                "maxItemsOne": true,
                                                "elem": {
                                                    "fields": {
                                                        "hours": {
                                                            "maxItemsOne": false
                                                        },
                                                        "minutes": {
                                                            "maxItemsOne": false
                                                        },
                                                        "month_days": {
                                                            "maxItemsOne": false
                                                        },
                                                        "monthly": {
                                                            "maxItemsOne": false
                                                        },
                                                        "week_days": {
                                                            "maxItemsOne": false
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_logic_app_integration_account_certificate": {
                "current": "azure:logicapps/integrationAccountCertificate:IntegrationAccountCertificate",
                "majorVersion": 5,
                "fields": {
                    "key_vault_key": {
                        "maxItemsOne": true
                    }
                }
            },
            "azurerm_logic_app_integration_account_map": {
                "current": "azure:logicapps/integrationAccountMap:IntegrationAccountMap",
                "majorVersion": 5
            },
            "azurerm_logic_app_integration_account_partner": {
                "current": "azure:logicapps/integrationAccountPartner:IntegrationAccountPartner",
                "majorVersion": 5,
                "fields": {
                    "business_identity": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_logic_app_integration_account_schema": {
                "current": "azure:logicapps/integrationAccountSchema:IntegrationAccountSchema",
                "majorVersion": 5
            },
            "azurerm_logic_app_integration_account_session": {
                "current": "azure:logicapps/integrationAccountSession:IntegrationAccountSession",
                "majorVersion": 5
            },
            "azurerm_logic_app_standard": {
                "current": "azure:logicapps/standard:Standard",
                "majorVersion": 5,
                "fields": {
                    "connection_string": {
                        "maxItemsOne": false
                    },
                    "identity": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "identity_ids": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "site_config": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "cors": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "allowed_origins": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "ip_restriction": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "headers": {
                                                "maxItemsOne": true,
                                                "elem": {
                                                    "fields": {
                                                        "x_azure_fdid": {
                                                            "maxItemsOne": false
                                                        },
                                                        "x_fd_health_probe": {
                                                            "maxItemsOne": true
                                                        },
                                                        "x_forwarded_for": {
                                                            "maxItemsOne": false
                                                        },
                                                        "x_forwarded_host": {
                                                            "maxItemsOne": false
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "scm_ip_restriction": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "headers": {
                                                "maxItemsOne": true,
                                                "elem": {
                                                    "fields": {
                                                        "x_azure_fdid": {
                                                            "maxItemsOne": false
                                                        },
                                                        "x_fd_health_probe": {
                                                            "maxItemsOne": true
                                                        },
                                                        "x_forwarded_for": {
                                                            "maxItemsOne": false
                                                        },
                                                        "x_forwarded_host": {
                                                            "maxItemsOne": false
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "site_credential": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_logic_app_trigger_custom": {
                "current": "azure:logicapps/triggerCustom:TriggerCustom",
                "majorVersion": 5
            },
            "azurerm_logic_app_trigger_http_request": {
                "current": "azure:logicapps/triggerHttpRequest:TriggerHttpRequest",
                "majorVersion": 5
            },
            "azurerm_logic_app_trigger_recurrence": {
                "current": "azure:logicapps/triggerRecurrence:TriggerRecurrence",
                "majorVersion": 5,
                "fields": {
                    "schedule": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "at_these_hours": {
                                    "maxItemsOne": false
                                },
                                "at_these_minutes": {
                                    "maxItemsOne": false
                                },
                                "on_these_days": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_logic_app_workflow": {
                "current": "azure:logicapps/workflow:Workflow",
                "majorVersion": 5,
                "fields": {
                    "access_control": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "action": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "allowed_caller_ip_address_range": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "content": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "allowed_caller_ip_address_range": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "trigger": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "allowed_caller_ip_address_range": {
                                                "maxItemsOne": false
                                            },
                                            "open_authentication_policy": {
                                                "maxItemsOne": false,
                                                "elem": {
                                                    "fields": {
                                                        "claim": {
                                                            "maxItemsOne": false
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "workflow_management": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "allowed_caller_ip_address_range": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "connector_endpoint_ip_addresses": {
                        "maxItemsOne": false
                    },
                    "connector_outbound_ip_addresses": {
                        "maxItemsOne": false
                    },
                    "identity": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "identity_ids": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "workflow_endpoint_ip_addresses": {
                        "maxItemsOne": false
                    },
                    "workflow_outbound_ip_addresses": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_logz_monitor": {
                "current": "azure:monitoring/logzMonitor:LogzMonitor",
                "majorVersion": 5,
                "fields": {
                    "plan": {
                        "maxItemsOne": true
                    },
                    "user": {
                        "maxItemsOne": true
                    }
                }
            },
            "azurerm_logz_sub_account": {
                "current": "azure:monitoring/logzSubAccount:LogzSubAccount",
                "majorVersion": 5,
                "fields": {
                    "user": {
                        "maxItemsOne": true
                    }
                }
            },
            "azurerm_logz_sub_account_tag_rule": {
                "current": "azure:monitoring/logzSubAccountTagRule:LogzSubAccountTagRule",
                "majorVersion": 5,
                "fields": {
                    "tag_filter": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_logz_tag_rule": {
                "current": "azure:monitoring/logzTagRule:LogzTagRule",
                "majorVersion": 5,
                "fields": {
                    "tag_filter": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_machine_learning_compute_cluster": {
                "current": "azure:machinelearning/computeCluster:ComputeCluster",
                "majorVersion": 5,
                "fields": {
                    "identity": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "identity_ids": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "scale_settings": {
                        "maxItemsOne": true
                    },
                    "ssh": {
                        "maxItemsOne": true
                    }
                }
            },
            "azurerm_machine_learning_compute_instance": {
                "current": "azure:machinelearning/computeInstance:ComputeInstance",
                "majorVersion": 5,
                "fields": {
                    "assign_to_user": {
                        "maxItemsOne": true
                    },
                    "identity": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "identity_ids": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "ssh": {
                        "maxItemsOne": true
                    }
                }
            },
            "azurerm_machine_learning_datastore_blobstorage": {
                "current": "azure:machinelearning/datastoreBlobstorage:DatastoreBlobstorage",
                "majorVersion": 5
            },
            "azurerm_machine_learning_datastore_datalake_gen2": {
                "current": "azure:machinelearning/datastoreDatalakeGen2:DatastoreDatalakeGen2",
                "majorVersion": 5
            },
            "azurerm_machine_learning_datastore_fileshare": {
                "current": "azure:machinelearning/datastoreFileshare:DatastoreFileshare",
                "majorVersion": 5
            },
            "azurerm_machine_learning_inference_cluster": {
                "current": "azure:machinelearning/inferenceCluster:InferenceCluster",
                "majorVersion": 5,
                "fields": {
                    "identity": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "identity_ids": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "ssl": {
                        "maxItemsOne": true
                    }
                }
            },
            "azurerm_machine_learning_synapse_spark": {
                "current": "azure:machinelearning/synapseSpark:SynapseSpark",
                "majorVersion": 5,
                "fields": {
                    "identity": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "identity_ids": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_machine_learning_workspace": {
                "current": "azure:machinelearning/workspace:Workspace",
                "majorVersion": 5,
                "fields": {
                    "encryption": {
                        "maxItemsOne": true
                    },
                    "identity": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "identity_ids": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_maintenance_assignment_dedicated_host": {
                "current": "azure:maintenance/assignmentDedicatedHost:AssignmentDedicatedHost",
                "majorVersion": 5
            },
            "azurerm_maintenance_assignment_virtual_machine": {
                "current": "azure:maintenance/assignmentVirtualMachine:AssignmentVirtualMachine",
                "majorVersion": 5
            },
            "azurerm_maintenance_assignment_virtual_machine_scale_set": {
                "current": "azure:maintenance/assignmentVirtualMachineScaleSet:AssignmentVirtualMachineScaleSet",
                "majorVersion": 5
            },
            "azurerm_maintenance_configuration": {
                "current": "azure:maintenance/configuration:Configuration",
                "majorVersion": 5,
                "fields": {
                    "install_patches": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "linux": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "classifications_to_include": {
                                                "maxItemsOne": false
                                            },
                                            "package_names_mask_to_exclude": {
                                                "maxItemsOne": false
                                            },
                                            "package_names_mask_to_include": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "windows": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "classifications_to_include": {
                                                "maxItemsOne": false
                                            },
                                            "kb_numbers_to_exclude": {
                                                "maxItemsOne": false
                                            },
                                            "kb_numbers_to_include": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "window": {
                        "maxItemsOne": true
                    }
                }
            },
            "azurerm_managed_application": {
                "current": "azure:managedapplication/application:Application",
                "majorVersion": 5,
                "fields": {
                    "plan": {
                        "maxItemsOne": true
                    }
                }
            },
            "azurerm_managed_application_definition": {
                "current": "azure:managedapplication/definition:Definition",
                "majorVersion": 5,
                "fields": {
                    "authorization": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_managed_disk": {
                "current": "azure:compute/managedDisk:ManagedDisk",
                "majorVersion": 5,
                "fields": {
                    "encryption_settings": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "disk_encryption_key": {
                                    "maxItemsOne": true
                                },
                                "key_encryption_key": {
                                    "maxItemsOne": true
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_managed_disk_sas_token": {
                "current": "azure:compute/managedDiskSasToken:ManagedDiskSasToken",
                "majorVersion": 5
            },
            "azurerm_managed_lustre_file_system": {
                "current": "azure:managedlustre/fileSystem:FileSystem",
                "majorVersion": 5,
                "fields": {
                    "encryption_key": {
                        "maxItemsOne": true
                    },
                    "hsm_setting": {
                        "maxItemsOne": true
                    },
                    "identity": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "identity_ids": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "maintenance_window": {
                        "maxItemsOne": true
                    },
                    "zones": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_management_group": {
                "current": "azure:management/group:Group",
                "majorVersion": 5,
                "fields": {
                    "subscription_ids": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_management_group_legacy": {
                "current": "azure:managementgroups/managementGroup:ManagementGroup",
                "majorVersion": 5,
                "fields": {
                    "subscription_ids": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_management_group_policy_assignment": {
                "current": "azure:management/groupPolicyAssignment:GroupPolicyAssignment",
                "majorVersion": 5,
                "fields": {
                    "identity": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "identity_ids": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "non_compliance_message": {
                        "maxItemsOne": false
                    },
                    "not_scopes": {
                        "maxItemsOne": false
                    },
                    "overrides": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "selectors": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "in": {
                                                "maxItemsOne": false
                                            },
                                            "not_in": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "resource_selectors": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "selectors": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "in": {
                                                "maxItemsOne": false
                                            },
                                            "not_in": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_management_group_policy_exemption": {
                "current": "azure:management/groupPolicyExemption:GroupPolicyExemption",
                "majorVersion": 5,
                "fields": {
                    "policy_definition_reference_ids": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_management_group_policy_remediation": {
                "current": "azure:management/groupPolicyRemediation:GroupPolicyRemediation",
                "majorVersion": 5,
                "fields": {
                    "location_filters": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_management_group_subscription_association": {
                "current": "azure:management/groupSubscriptionAssociation:GroupSubscriptionAssociation",
                "majorVersion": 5
            },
            "azurerm_management_group_template_deployment": {
                "current": "azure:management/groupTemplateDeployment:GroupTemplateDeployment",
                "majorVersion": 5
            },
            "azurerm_management_lock": {
                "current": "azure:management/lock:Lock",
                "majorVersion": 5
            },
            "azurerm_management_lock_legacy": {
                "current": "azure:managementresource/manangementLock:ManangementLock",
                "majorVersion": 5
            },
            "azurerm_maps_account": {
                "current": "azure:maps/account:Account",
                "majorVersion": 5
            },
            "azurerm_maps_creator": {
                "current": "azure:maps/creator:Creator",
                "majorVersion": 5
            },
            "azurerm_mariadb_configuration": {
                "current": "azure:mariadb/configuration:Configuration",
                "majorVersion": 5
            },
            "azurerm_mariadb_database": {
                "current": "azure:mariadb/database:Database",
                "majorVersion": 5
            },
            "azurerm_mariadb_firewall_rule": {
                "current": "azure:mariadb/firewallRule:FirewallRule",
                "majorVersion": 5
            },
            "azurerm_mariadb_server": {
                "current": "azure:mariadb/server:Server",
                "majorVersion": 5
            },
            "azurerm_mariadb_virtual_network_rule": {
                "current": "azure:mariadb/virtualNetworkRule:VirtualNetworkRule",
                "majorVersion": 5
            },
            "azurerm_marketplace_agreement": {
                "current": "azure:marketplace/agreement:Agreement",
                "majorVersion": 5
            },
            "azurerm_marketplace_role_assignment": {
                "current": "azure:marketplace/roleAssignment:RoleAssignment",
                "majorVersion": 5
            },
            "azurerm_media_asset": {
                "current": "azure:media/asset:Asset",
                "majorVersion": 5
            },
            "azurerm_media_asset_filter": {
                "current": "azure:media/assetFilter:AssetFilter",
                "majorVersion": 5,
                "fields": {
                    "presentation_time_range": {
                        "maxItemsOne": true
                    },
                    "track_selection": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "condition": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_media_content_key_policy": {
                "current": "azure:media/contentKeyPolicy:ContentKeyPolicy",
                "majorVersion": 5,
                "fields": {
                    "policy_option": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "fairplay_configuration": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "offline_rental_configuration": {
                                                "maxItemsOne": true
                                            }
                                        }
                                    }
                                },
                                "playready_configuration_license": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "play_right": {
                                                "maxItemsOne": true,
                                                "elem": {
                                                    "fields": {
                                                        "explicit_analog_television_output_restriction": {
                                                            "maxItemsOne": true
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "token_restriction": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "alternate_key": {
                                                "maxItemsOne": false
                                            },
                                            "required_claim": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_media_job": {
                "current": "azure:media/job:Job",
                "majorVersion": 5,
                "fields": {
                    "input_asset": {
                        "maxItemsOne": true
                    },
                    "output_asset": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_media_live_event": {
                "current": "azure:media/liveEvent:LiveEvent",
                "majorVersion": 5,
                "fields": {
                    "cross_site_access_policy": {
                        "maxItemsOne": true
                    },
                    "encoding": {
                        "maxItemsOne": true
                    },
                    "input": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "endpoint": {
                                    "maxItemsOne": false
                                },
                                "ip_access_control_allow": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "preview": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "endpoint": {
                                    "maxItemsOne": false
                                },
                                "ip_access_control_allow": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "stream_options": {
                        "maxItemsOne": false
                    },
                    "transcription_languages": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_media_live_event_output": {
                "current": "azure:media/liveEventOutput:LiveEventOutput",
                "majorVersion": 5
            },
            "azurerm_media_services_account": {
                "current": "azure:media/serviceAccount:ServiceAccount",
                "majorVersion": 5,
                "fields": {
                    "encryption": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "managed_identity": {
                                    "maxItemsOne": true
                                }
                            }
                        }
                    },
                    "identity": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "identity_ids": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "key_delivery_access_control": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "ip_allow_list": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "storage_account": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "managed_identity": {
                                    "maxItemsOne": true
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_media_services_account_filter": {
                "current": "azure:media/accountFilter:AccountFilter",
                "majorVersion": 5,
                "fields": {
                    "presentation_time_range": {
                        "maxItemsOne": true
                    },
                    "track_selection": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "condition": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_media_services_account_legacy": {
                "current": "azure:mediaservices/account:Account",
                "majorVersion": 5,
                "fields": {
                    "encryption": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "managed_identity": {
                                    "maxItemsOne": true
                                }
                            }
                        }
                    },
                    "identity": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "identity_ids": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "key_delivery_access_control": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "ip_allow_list": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "storage_account": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "managed_identity": {
                                    "maxItemsOne": true
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_media_streaming_endpoint": {
                "current": "azure:media/streamingEndpoint:StreamingEndpoint",
                "majorVersion": 5,
                "fields": {
                    "access_control": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "akamai_signature_header_authentication_key": {
                                    "maxItemsOne": false
                                },
                                "ip_allow": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "cross_site_access_policy": {
                        "maxItemsOne": true
                    },
                    "custom_host_names": {
                        "maxItemsOne": false
                    },
                    "sku": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_media_streaming_locator": {
                "current": "azure:media/streamingLocator:StreamingLocator",
                "majorVersion": 5,
                "fields": {
                    "content_key": {
                        "maxItemsOne": false
                    },
                    "filter_names": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_media_streaming_policy": {
                "current": "azure:media/streamingPolicy:StreamingPolicy",
                "majorVersion": 5,
                "fields": {
                    "common_encryption_cbcs": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "clear_key_encryption": {
                                    "maxItemsOne": true
                                },
                                "default_content_key": {
                                    "maxItemsOne": true
                                },
                                "drm_fairplay": {
                                    "maxItemsOne": true
                                },
                                "enabled_protocols": {
                                    "maxItemsOne": true
                                }
                            }
                        }
                    },
                    "common_encryption_cenc": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "clear_key_encryption": {
                                    "maxItemsOne": true
                                },
                                "clear_track": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "condition": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "content_key_to_track_mapping": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "track": {
                                                "maxItemsOne": false,
                                                "elem": {
                                                    "fields": {
                                                        "condition": {
                                                            "maxItemsOne": false
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "default_content_key": {
                                    "maxItemsOne": true
                                },
                                "drm_playready": {
                                    "maxItemsOne": true
                                },
                                "enabled_protocols": {
                                    "maxItemsOne": true
                                }
                            }
                        }
                    },
                    "envelope_encryption": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "default_content_key": {
                                    "maxItemsOne": true
                                },
                                "enabled_protocols": {
                                    "maxItemsOne": true
                                }
                            }
                        }
                    },
                    "no_encryption_enabled_protocols": {
                        "maxItemsOne": true
                    }
                }
            },
            "azurerm_media_transform": {
                "current": "azure:media/transform:Transform",
                "majorVersion": 5,
                "fields": {
                    "output": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "audio_analyzer_preset": {
                                    "maxItemsOne": true
                                },
                                "builtin_preset": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "preset_configuration": {
                                                "maxItemsOne": true
                                            }
                                        }
                                    }
                                },
                                "custom_preset": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "codec": {
                                                "maxItemsOne": false,
                                                "elem": {
                                                    "fields": {
                                                        "aac_audio": {
                                                            "maxItemsOne": true
                                                        },
                                                        "copy_audio": {
                                                            "maxItemsOne": true
                                                        },
                                                        "copy_video": {
                                                            "maxItemsOne": true
                                                        },
                                                        "dd_audio": {
                                                            "maxItemsOne": true
                                                        },
                                                        "h264_video": {
                                                            "maxItemsOne": true,
                                                            "elem": {
                                                                "fields": {
                                                                    "layer": {
                                                                        "maxItemsOne": false
                                                                    }
                                                                }
                                                            }
                                                        },
                                                        "h265_video": {
                                                            "maxItemsOne": true,
                                                            "elem": {
                                                                "fields": {
                                                                    "layer": {
                                                                        "maxItemsOne": false
                                                                    }
                                                                }
                                                            }
                                                        },
                                                        "jpg_image": {
                                                            "maxItemsOne": true,
                                                            "elem": {
                                                                "fields": {
                                                                    "layer": {
                                                                        "maxItemsOne": false
                                                                    }
                                                                }
                                                            }
                                                        },
                                                        "png_image": {
                                                            "maxItemsOne": true,
                                                            "elem": {
                                                                "fields": {
                                                                    "layer": {
                                                                        "maxItemsOne": false
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "filter": {
                                                "maxItemsOne": true,
                                                "elem": {
                                                    "fields": {
                                                        "crop_rectangle": {
                                                            "maxItemsOne": true
                                                        },
                                                        "deinterlace": {
                                                            "maxItemsOne": true
                                                        },
                                                        "fade_in": {
                                                            "maxItemsOne": true
                                                        },
                                                        "fade_out": {
                                                            "maxItemsOne": true
                                                        },
                                                        "overlay": {
                                                            "maxItemsOne": false,
                                                            "elem": {
                                                                "fields": {
                                                                    "audio": {
                                                                        "maxItemsOne": true
                                                                    },
                                                                    "video": {
                                                                        "maxItemsOne": true,
                                                                        "elem": {
                                                                            "fields": {
                                                                                "crop_rectangle": {
                                                                                    "maxItemsOne": true
                                                                                },
                                                                                "position": {
                                                                                    "maxItemsOne": true
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "format": {
                                                "maxItemsOne": false,
                                                "elem": {
                                                    "fields": {
                                                        "jpg": {
                                                            "maxItemsOne": true
                                                        },
                                                        "mp4": {
                                                            "maxItemsOne": true,
                                                            "elem": {
                                                                "fields": {
                                                                    "output_file": {
                                                                        "maxItemsOne": false,
                                                                        "elem": {
                                                                            "fields": {
                                                                                "labels": {
                                                                                    "maxItemsOne": false
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        },
                                                        "png": {
                                                            "maxItemsOne": true
                                                        },
                                                        "transport_stream": {
                                                            "maxItemsOne": true,
                                                            "elem": {
                                                                "fields": {
                                                                    "output_file": {
                                                                        "maxItemsOne": false,
                                                                        "elem": {
                                                                            "fields": {
                                                                                "labels": {
                                                                                    "maxItemsOne": false
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "face_detector_preset": {
                                    "maxItemsOne": true
                                },
                                "video_analyzer_preset": {
                                    "maxItemsOne": true
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_mobile_network": {
                "current": "azure:mobile/network:Network",
                "majorVersion": 5
            },
            "azurerm_mobile_network_attached_data_network": {
                "current": "azure:mobile/networkAttachedDataNetwork:NetworkAttachedDataNetwork",
                "majorVersion": 5,
                "fields": {
                    "dns_addresses": {
                        "maxItemsOne": false
                    },
                    "network_address_port_translation": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "port_range": {
                                    "maxItemsOne": true
                                }
                            }
                        }
                    },
                    "user_equipment_address_pool_prefixes": {
                        "maxItemsOne": false
                    },
                    "user_equipment_static_address_pool_prefixes": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_mobile_network_data_network": {
                "current": "azure:mobile/networkDataNetwork:NetworkDataNetwork",
                "majorVersion": 5
            },
            "azurerm_mobile_network_packet_core_control_plane": {
                "current": "azure:mobile/networkPacketCoreControlPlane:NetworkPacketCoreControlPlane",
                "majorVersion": 5,
                "fields": {
                    "identity": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "identity_ids": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "local_diagnostics_access": {
                        "maxItemsOne": true
                    },
                    "platform": {
                        "maxItemsOne": true
                    },
                    "site_ids": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_mobile_network_packet_core_data_plane": {
                "current": "azure:mobile/networkPacketCoreDataPlane:NetworkPacketCoreDataPlane",
                "majorVersion": 5
            },
            "azurerm_mobile_network_service": {
                "current": "azure:mobile/networkService:NetworkService",
                "majorVersion": 5,
                "fields": {
                    "pcc_rule": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "qos_policy": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "guaranteed_bit_rate": {
                                                "maxItemsOne": true
                                            },
                                            "maximum_bit_rate": {
                                                "maxItemsOne": true
                                            }
                                        }
                                    }
                                },
                                "service_data_flow_template": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "ports": {
                                                "maxItemsOne": false
                                            },
                                            "protocol": {
                                                "maxItemsOne": false
                                            },
                                            "remote_ip_list": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "service_qos_policy": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "maximum_bit_rate": {
                                    "maxItemsOne": true
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_mobile_network_sim": {
                "current": "azure:mobile/networkSim:NetworkSim",
                "majorVersion": 5,
                "fields": {
                    "static_ip_configuration": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_mobile_network_sim_group": {
                "current": "azure:mobile/networkSimGroup:NetworkSimGroup",
                "majorVersion": 5,
                "fields": {
                    "identity": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "identity_ids": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_mobile_network_sim_policy": {
                "current": "azure:mobile/networkSimPolicy:NetworkSimPolicy",
                "majorVersion": 5,
                "fields": {
                    "slice": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "data_network": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "additional_allowed_session_types": {
                                                "maxItemsOne": false
                                            },
                                            "allowed_services_ids": {
                                                "maxItemsOne": false
                                            },
                                            "session_aggregate_maximum_bit_rate": {
                                                "maxItemsOne": true
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "user_equipment_aggregate_maximum_bit_rate": {
                        "maxItemsOne": true
                    }
                }
            },
            "azurerm_mobile_network_site": {
                "current": "azure:mobile/networkSite:NetworkSite",
                "majorVersion": 5,
                "fields": {
                    "network_function_ids": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_mobile_network_slice": {
                "current": "azure:mobile/networkSlice:NetworkSlice",
                "majorVersion": 5,
                "fields": {
                    "single_network_slice_selection_assistance_information": {
                        "maxItemsOne": true
                    }
                }
            },
            "azurerm_monitor_aad_diagnostic_setting": {
                "current": "azure:monitoring/aadDiagnosticSetting:AadDiagnosticSetting",
                "majorVersion": 5,
                "fields": {
                    "enabled_log": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "retention_policy": {
                                    "maxItemsOne": true
                                }
                            }
                        }
                    },
                    "log": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "retention_policy": {
                                    "maxItemsOne": true
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_monitor_action_group": {
                "current": "azure:monitoring/actionGroup:ActionGroup",
                "majorVersion": 5,
                "fields": {
                    "arm_role_receiver": {
                        "maxItemsOne": false
                    },
                    "automation_runbook_receiver": {
                        "maxItemsOne": false
                    },
                    "azure_app_push_receiver": {
                        "maxItemsOne": false
                    },
                    "azure_function_receiver": {
                        "maxItemsOne": false
                    },
                    "email_receiver": {
                        "maxItemsOne": false
                    },
                    "event_hub_receiver": {
                        "maxItemsOne": false
                    },
                    "itsm_receiver": {
                        "maxItemsOne": false
                    },
                    "logic_app_receiver": {
                        "maxItemsOne": false
                    },
                    "sms_receiver": {
                        "maxItemsOne": false
                    },
                    "voice_receiver": {
                        "maxItemsOne": false
                    },
                    "webhook_receiver": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "aad_auth": {
                                    "maxItemsOne": true
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_monitor_action_rule_action_group": {
                "current": "azure:monitoring/actionRuleActionGroup:ActionRuleActionGroup",
                "majorVersion": 5,
                "fields": {
                    "condition": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "alert_context": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "values": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "alert_rule_id": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "values": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "description": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "values": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "monitor": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "values": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "monitor_service": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "values": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "severity": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "values": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "target_resource_type": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "values": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "scope": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "resource_ids": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_monitor_action_rule_suppression": {
                "current": "azure:monitoring/actionRuleSuppression:ActionRuleSuppression",
                "majorVersion": 5,
                "fields": {
                    "condition": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "alert_context": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "values": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "alert_rule_id": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "values": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "description": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "values": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "monitor": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "values": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "monitor_service": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "values": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "severity": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "values": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "target_resource_type": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "values": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "scope": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "resource_ids": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "suppression": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "schedule": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "recurrence_monthly": {
                                                "maxItemsOne": false
                                            },
                                            "recurrence_weekly": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_monitor_activity_log_alert": {
                "current": "azure:monitoring/activityLogAlert:ActivityLogAlert",
                "majorVersion": 5,
                "fields": {
                    "action": {
                        "maxItemsOne": false
                    },
                    "criteria": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "levels": {
                                    "maxItemsOne": false
                                },
                                "resource_groups": {
                                    "maxItemsOne": false
                                },
                                "resource_health": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "current": {
                                                "maxItemsOne": false
                                            },
                                            "previous": {
                                                "maxItemsOne": false
                                            },
                                            "reason": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "resource_ids": {
                                    "maxItemsOne": false
                                },
                                "resource_providers": {
                                    "maxItemsOne": false
                                },
                                "resource_types": {
                                    "maxItemsOne": false
                                },
                                "service_health": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "events": {
                                                "maxItemsOne": false
                                            },
                                            "locations": {
                                                "maxItemsOne": false
                                            },
                                            "services": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "statuses": {
                                    "maxItemsOne": false
                                },
                                "sub_statuses": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "scopes": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_monitor_alert_processing_rule_action_group": {
                "current": "azure:monitoring/alertProcessingRuleActionGroup:AlertProcessingRuleActionGroup",
                "majorVersion": 5,
                "fields": {
                    "add_action_group_ids": {
                        "maxItemsOne": false
                    },
                    "condition": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "alert_context": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "values": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "alert_rule_id": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "values": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "alert_rule_name": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "values": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "description": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "values": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "monitor_condition": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "values": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "monitor_service": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "values": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "severity": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "values": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "signal_type": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "values": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "target_resource": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "values": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "target_resource_group": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "values": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "target_resource_type": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "values": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "schedule": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "recurrence": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "daily": {
                                                "maxItemsOne": false
                                            },
                                            "monthly": {
                                                "maxItemsOne": false,
                                                "elem": {
                                                    "fields": {
                                                        "days_of_month": {
                                                            "maxItemsOne": false
                                                        }
                                                    }
                                                }
                                            },
                                            "weekly": {
                                                "maxItemsOne": false,
                                                "elem": {
                                                    "fields": {
                                                        "days_of_week": {
                                                            "maxItemsOne": false
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "scopes": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_monitor_alert_processing_rule_suppression": {
                "current": "azure:monitoring/alertProcessingRuleSuppression:AlertProcessingRuleSuppression",
                "majorVersion": 5,
                "fields": {
                    "condition": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "alert_context": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "values": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "alert_rule_id": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "values": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "alert_rule_name": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "values": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "description": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "values": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "monitor_condition": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "values": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "monitor_service": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "values": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "severity": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "values": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "signal_type": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "values": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "target_resource": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "values": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "target_resource_group": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "values": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "target_resource_type": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "values": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "schedule": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "recurrence": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "daily": {
                                                "maxItemsOne": false
                                            },
                                            "monthly": {
                                                "maxItemsOne": false,
                                                "elem": {
                                                    "fields": {
                                                        "days_of_month": {
                                                            "maxItemsOne": false
                                                        }
                                                    }
                                                }
                                            },
                                            "weekly": {
                                                "maxItemsOne": false,
                                                "elem": {
                                                    "fields": {
                                                        "days_of_week": {
                                                            "maxItemsOne": false
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "scopes": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_monitor_alert_prometheus_rule_group": {
                "current": "azure:monitoring/alertPrometheusRuleGroup:AlertPrometheusRuleGroup",
                "majorVersion": 5,
                "fields": {
                    "rule": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "action": {
                                    "maxItemsOne": false
                                },
                                "alert_resolution": {
                                    "maxItemsOne": true
                                }
                            }
                        }
                    },
                    "scopes": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_monitor_autoscale_setting": {
                "current": "azure:monitoring/autoscaleSetting:AutoscaleSetting",
                "majorVersion": 5,
                "fields": {
                    "notification": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "email": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "custom_emails": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "webhook": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "predictive": {
                        "maxItemsOne": true
                    },
                    "profile": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "capacity": {
                                    "maxItemsOne": true
                                },
                                "fixed_date": {
                                    "maxItemsOne": true
                                },
                                "recurrence": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "days": {
                                                "maxItemsOne": false
                                            },
                                            "hours": {
                                                "maxItemsOne": true
                                            },
                                            "minutes": {
                                                "maxItemsOne": true
                                            }
                                        }
                                    }
                                },
                                "rule": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "metric_trigger": {
                                                "maxItemsOne": true,
                                                "elem": {
                                                    "fields": {
                                                        "dimensions": {
                                                            "maxItemsOne": false,
                                                            "elem": {
                                                                "fields": {
                                                                    "values": {
                                                                        "maxItemsOne": false
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "scale_action": {
                                                "maxItemsOne": true
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_monitor_data_collection_endpoint": {
                "current": "azure:monitoring/dataCollectionEndpoint:DataCollectionEndpoint",
                "majorVersion": 5
            },
            "azurerm_monitor_data_collection_rule": {
                "current": "azure:monitoring/dataCollectionRule:DataCollectionRule",
                "majorVersion": 5,
                "fields": {
                    "data_flow": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "destinations": {
                                    "maxItemsOne": false
                                },
                                "streams": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "data_sources": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "data_import": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "event_hub_data_source": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "extension": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "input_data_sources": {
                                                "maxItemsOne": false
                                            },
                                            "streams": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "iis_log": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "log_directories": {
                                                "maxItemsOne": false
                                            },
                                            "streams": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "log_file": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "file_patterns": {
                                                "maxItemsOne": false
                                            },
                                            "settings": {
                                                "maxItemsOne": true,
                                                "elem": {
                                                    "fields": {
                                                        "text": {
                                                            "maxItemsOne": true
                                                        }
                                                    }
                                                }
                                            },
                                            "streams": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "performance_counter": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "counter_specifiers": {
                                                "maxItemsOne": false
                                            },
                                            "streams": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "platform_telemetry": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "streams": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "prometheus_forwarder": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "label_include_filter": {
                                                "maxItemsOne": false
                                            },
                                            "streams": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "syslog": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "facility_names": {
                                                "maxItemsOne": false
                                            },
                                            "log_levels": {
                                                "maxItemsOne": false
                                            },
                                            "streams": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "windows_event_log": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "streams": {
                                                "maxItemsOne": false
                                            },
                                            "x_path_queries": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "windows_firewall_log": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "streams": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "destinations": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "azure_monitor_metrics": {
                                    "maxItemsOne": true
                                },
                                "event_hub": {
                                    "maxItemsOne": true
                                },
                                "event_hub_direct": {
                                    "maxItemsOne": true
                                },
                                "log_analytics": {
                                    "maxItemsOne": false
                                },
                                "monitor_account": {
                                    "maxItemsOne": false
                                },
                                "storage_blob": {
                                    "maxItemsOne": false
                                },
                                "storage_blob_direct": {
                                    "maxItemsOne": false
                                },
                                "storage_table_direct": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "identity": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "identity_ids": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "stream_declaration": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "column": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_monitor_data_collection_rule_association": {
                "current": "azure:monitoring/dataCollectionRuleAssociation:DataCollectionRuleAssociation",
                "majorVersion": 5
            },
            "azurerm_monitor_diagnostic_setting": {
                "current": "azure:monitoring/diagnosticSetting:DiagnosticSetting",
                "majorVersion": 5,
                "fields": {
                    "enabled_log": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "retention_policy": {
                                    "maxItemsOne": true
                                }
                            }
                        }
                    },
                    "log": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "retention_policy": {
                                    "maxItemsOne": true
                                }
                            }
                        }
                    },
                    "metric": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "retention_policy": {
                                    "maxItemsOne": true
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_monitor_log_profile": {
                "current": "azure:monitoring/logProfile:LogProfile",
                "majorVersion": 5,
                "fields": {
                    "categories": {
                        "maxItemsOne": false
                    },
                    "locations": {
                        "maxItemsOne": false
                    },
                    "retention_policy": {
                        "maxItemsOne": true
                    }
                }
            },
            "azurerm_monitor_metric_alert": {
                "current": "azure:monitoring/metricAlert:MetricAlert",
                "majorVersion": 5,
                "fields": {
                    "action": {
                        "maxItemsOne": false
                    },
                    "application_insights_web_test_location_availability_criteria": {
                        "maxItemsOne": true
                    },
                    "criteria": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "dimension": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "values": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "dynamic_criteria": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "dimension": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "values": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "scopes": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_monitor_private_link_scope": {
                "current": "azure:monitoring/privateLinkScope:PrivateLinkScope",
                "majorVersion": 5
            },
            "azurerm_monitor_private_link_scoped_service": {
                "current": "azure:monitoring/privateLinkScopedService:PrivateLinkScopedService",
                "majorVersion": 5
            },
            "azurerm_monitor_scheduled_query_rules_alert": {
                "current": "azure:monitoring/scheduledQueryRulesAlert:ScheduledQueryRulesAlert",
                "majorVersion": 5,
                "fields": {
                    "action": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "action_group": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "authorized_resource_ids": {
                        "maxItemsOne": false
                    },
                    "trigger": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "metric_trigger": {
                                    "maxItemsOne": true
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_monitor_scheduled_query_rules_alert_v2": {
                "current": "azure:monitoring/scheduledQueryRulesAlertV2:ScheduledQueryRulesAlertV2",
                "majorVersion": 5,
                "fields": {
                    "action": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "action_groups": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "criteria": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "dimension": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "values": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "failing_periods": {
                                    "maxItemsOne": true
                                }
                            }
                        }
                    },
                    "scopes": {
                        "maxItemsOne": true
                    },
                    "target_resource_types": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_monitor_scheduled_query_rules_log": {
                "current": "azure:monitoring/scheduledQueryRulesLog:ScheduledQueryRulesLog",
                "majorVersion": 5,
                "fields": {
                    "authorized_resource_ids": {
                        "maxItemsOne": false
                    },
                    "criteria": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "dimension": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "values": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_monitor_smart_detector_alert_rule": {
                "current": "azure:monitoring/smartDetectorAlertRule:SmartDetectorAlertRule",
                "majorVersion": 5,
                "fields": {
                    "action_group": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "ids": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "scope_resource_ids": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_monitor_workspace": {
                "current": "azure:monitoring/workspace:Workspace",
                "majorVersion": 5
            },
            "azurerm_mssql_database": {
                "current": "azure:mssql/database:Database",
                "majorVersion": 5,
                "fields": {
                    "import": {
                        "maxItemsOne": true
                    },
                    "long_term_retention_policy": {
                        "maxItemsOne": true
                    },
                    "short_term_retention_policy": {
                        "maxItemsOne": true
                    },
                    "threat_detection_policy": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "disabled_alerts": {
                                    "maxItemsOne": false
                                },
                                "email_addresses": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_mssql_database_extended_auditing_policy": {
                "current": "azure:mssql/databaseExtendedAuditingPolicy:DatabaseExtendedAuditingPolicy",
                "majorVersion": 5
            },
            "azurerm_mssql_database_vulnerability_assessment_rule_baseline": {
                "current": "azure:mssql/databaseVulnerabilityAssessmentRuleBaseline:DatabaseVulnerabilityAssessmentRuleBaseline",
                "majorVersion": 5,
                "fields": {
                    "baseline_result": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "result": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_mssql_elasticpool": {
                "current": "azure:mssql/elasticPool:ElasticPool",
                "majorVersion": 5,
                "fields": {
                    "per_database_settings": {
                        "maxItemsOne": true
                    },
                    "sku": {
                        "maxItemsOne": true
                    }
                }
            },
            "azurerm_mssql_failover_group": {
                "current": "azure:mssql/failoverGroup:FailoverGroup",
                "majorVersion": 5,
                "fields": {
                    "databases": {
                        "maxItemsOne": false
                    },
                    "partner_server": {
                        "maxItemsOne": false
                    },
                    "read_write_endpoint_failover_policy": {
                        "maxItemsOne": true
                    }
                }
            },
            "azurerm_mssql_firewall_rule": {
                "current": "azure:mssql/firewallRule:FirewallRule",
                "majorVersion": 5
            },
            "azurerm_mssql_job_agent": {
                "current": "azure:mssql/jobAgent:JobAgent",
                "majorVersion": 5
            },
            "azurerm_mssql_job_credential": {
                "current": "azure:mssql/jobCredential:JobCredential",
                "majorVersion": 5
            },
            "azurerm_mssql_managed_database": {
                "current": "azure:mssql/managedDatabase:ManagedDatabase",
                "majorVersion": 5,
                "fields": {
                    "long_term_retention_policy": {
                        "maxItemsOne": true
                    }
                }
            },
            "azurerm_mssql_managed_instance": {
                "current": "azure:mssql/managedInstance:ManagedInstance",
                "majorVersion": 5,
                "fields": {
                    "identity": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "identity_ids": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_mssql_managed_instance_active_directory_administrator": {
                "current": "azure:mssql/managedInstanceActiveDirectoryAdministrator:ManagedInstanceActiveDirectoryAdministrator",
                "majorVersion": 5
            },
            "azurerm_mssql_managed_instance_failover_group": {
                "current": "azure:mssql/managedInstanceFailoverGroup:ManagedInstanceFailoverGroup",
                "majorVersion": 5,
                "fields": {
                    "partner_region": {
                        "maxItemsOne": false
                    },
                    "read_write_endpoint_failover_policy": {
                        "maxItemsOne": true
                    }
                }
            },
            "azurerm_mssql_managed_instance_security_alert_policy": {
                "current": "azure:mssql/managedInstanceSecurityAlertPolicy:ManagedInstanceSecurityAlertPolicy",
                "majorVersion": 5,
                "fields": {
                    "disabled_alerts": {
                        "maxItemsOne": false
                    },
                    "email_addresses": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_mssql_managed_instance_transparent_data_encryption": {
                "current": "azure:mssql/managedInstanceTransparentDataEncryption:ManagedInstanceTransparentDataEncryption",
                "majorVersion": 5
            },
            "azurerm_mssql_managed_instance_vulnerability_assessment": {
                "current": "azure:mssql/managedInstanceVulnerabilityAssessment:ManagedInstanceVulnerabilityAssessment",
                "majorVersion": 5,
                "fields": {
                    "recurring_scans": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "emails": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_mssql_outbound_firewall_rule": {
                "current": "azure:mssql/outboundFirewallRule:OutboundFirewallRule",
                "majorVersion": 5
            },
            "azurerm_mssql_server": {
                "current": "azure:mssql/server:Server",
                "majorVersion": 5,
                "fields": {
                    "azuread_administrator": {
                        "maxItemsOne": true
                    },
                    "identity": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "identity_ids": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "restorable_dropped_database_ids": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_mssql_server_dns_alias": {
                "current": "azure:mssql/serverDnsAlias:ServerDnsAlias",
                "majorVersion": 5
            },
            "azurerm_mssql_server_extended_auditing_policy": {
                "current": "azure:mssql/serverExtendedAuditingPolicy:ServerExtendedAuditingPolicy",
                "majorVersion": 5
            },
            "azurerm_mssql_server_microsoft_support_auditing_policy": {
                "current": "azure:mssql/serverMicrosoftSupportAuditingPolicy:ServerMicrosoftSupportAuditingPolicy",
                "majorVersion": 5
            },
            "azurerm_mssql_server_security_alert_policy": {
                "current": "azure:mssql/serverSecurityAlertPolicy:ServerSecurityAlertPolicy",
                "majorVersion": 5,
                "fields": {
                    "disabled_alerts": {
                        "maxItemsOne": false
                    },
                    "email_addresses": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_mssql_server_transparent_data_encryption": {
                "current": "azure:mssql/serverTransparentDataEncryption:ServerTransparentDataEncryption",
                "majorVersion": 5
            },
            "azurerm_mssql_server_vulnerability_assessment": {
                "current": "azure:mssql/serverVulnerabilityAssessment:ServerVulnerabilityAssessment",
                "majorVersion": 5,
                "fields": {
                    "recurring_scans": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "emails": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_mssql_virtual_machine": {
                "current": "azure:mssql/virtualMachine:VirtualMachine",
                "majorVersion": 5,
                "fields": {
                    "assessment": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "schedule": {
                                    "maxItemsOne": true
                                }
                            }
                        }
                    },
                    "auto_backup": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "manual_schedule": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "days_of_week": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "auto_patching": {
                        "maxItemsOne": true
                    },
                    "key_vault_credential": {
                        "maxItemsOne": true
                    },
                    "sql_instance": {
                        "maxItemsOne": true
                    },
                    "storage_configuration": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "data_settings": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "luns": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "log_settings": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "luns": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "temp_db_settings": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "luns": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "wsfc_domain_credential": {
                        "maxItemsOne": true
                    }
                }
            },
            "azurerm_mssql_virtual_machine_availability_group_listener": {
                "current": "azure:mssql/virtualMachineAvailabilityGroupListener:VirtualMachineAvailabilityGroupListener",
                "majorVersion": 5,
                "fields": {
                    "load_balancer_configuration": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "sql_virtual_machine_ids": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "multi_subnet_ip_configuration": {
                        "maxItemsOne": false
                    },
                    "replica": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_mssql_virtual_machine_group": {
                "current": "azure:mssql/virtualMachineGroup:VirtualMachineGroup",
                "majorVersion": 5,
                "fields": {
                    "wsfc_domain_profile": {
                        "maxItemsOne": true
                    }
                }
            },
            "azurerm_mssql_virtual_network_rule": {
                "current": "azure:mssql/virtualNetworkRule:VirtualNetworkRule",
                "majorVersion": 5
            },
            "azurerm_mysql_active_directory_administrator": {
                "current": "azure:mysql/activeDirectoryAdministrator:ActiveDirectoryAdministrator",
                "majorVersion": 5
            },
            "azurerm_mysql_configuration": {
                "current": "azure:mysql/configuration:Configuration",
                "majorVersion": 5
            },
            "azurerm_mysql_database": {
                "current": "azure:mysql/database:Database",
                "majorVersion": 5
            },
            "azurerm_mysql_firewall_rule": {
                "current": "azure:mysql/firewallRule:FirewallRule",
                "majorVersion": 5
            },
            "azurerm_mysql_flexible_database": {
                "current": "azure:mysql/flexibleDatabase:FlexibleDatabase",
                "majorVersion": 5
            },
            "azurerm_mysql_flexible_server": {
                "current": "azure:mysql/flexibleServer:FlexibleServer",
                "majorVersion": 5,
                "fields": {
                    "customer_managed_key": {
                        "maxItemsOne": true
                    },
                    "high_availability": {
                        "maxItemsOne": true
                    },
                    "identity": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "identity_ids": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "maintenance_window": {
                        "maxItemsOne": true
                    },
                    "storage": {
                        "maxItemsOne": true
                    }
                }
            },
            "azurerm_mysql_flexible_server_active_directory_administrator": {
                "current": "azure:mysql/flexibleServerActiveDirectoryAdministrator:FlexibleServerActiveDirectoryAdministrator",
                "past": [
                    {
                        "name": "azure:mysql/flexibleServerActiveDirectoryAdministrator:FlexibleServerActiveDirectoryAdministrator",
                        "inCodegen": true,
                        "majorVersion": 5
                    }
                ],
                "majorVersion": 5
            },
            "azurerm_mysql_flexible_server_configuration": {
                "current": "azure:mysql/flexibleServerConfiguration:FlexibleServerConfiguration",
                "majorVersion": 5
            },
            "azurerm_mysql_flexible_server_firewall_rule": {
                "current": "azure:mysql/flexibleServerFirewallRule:FlexibleServerFirewallRule",
                "majorVersion": 5
            },
            "azurerm_mysql_server": {
                "current": "azure:mysql/server:Server",
                "majorVersion": 5,
                "fields": {
                    "identity": {
                        "maxItemsOne": true
                    },
                    "threat_detection_policy": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "disabled_alerts": {
                                    "maxItemsOne": false
                                },
                                "email_addresses": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_mysql_server_key": {
                "current": "azure:mysql/serverKey:ServerKey",
                "majorVersion": 5
            },
            "azurerm_mysql_virtual_network_rule": {
                "current": "azure:mysql/virtualNetworkRule:VirtualNetworkRule",
                "majorVersion": 5
            },
            "azurerm_nat_gateway": {
                "current": "azure:network/natGateway:NatGateway",
                "majorVersion": 5,
                "fields": {
                    "zones": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_nat_gateway_public_ip_association": {
                "current": "azure:network/natGatewayPublicIpAssociation:NatGatewayPublicIpAssociation",
                "majorVersion": 5
            },
            "azurerm_nat_gateway_public_ip_prefix_association": {
                "current": "azure:network/natGatewayPublicIpPrefixAssociation:NatGatewayPublicIpPrefixAssociation",
                "majorVersion": 5
            },
            "azurerm_netapp_account": {
                "current": "azure:netapp/account:Account",
                "majorVersion": 5,
                "fields": {
                    "active_directory": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "dns_servers": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_netapp_pool": {
                "current": "azure:netapp/pool:Pool",
                "majorVersion": 5
            },
            "azurerm_netapp_snapshot": {
                "current": "azure:netapp/snapshot:Snapshot",
                "majorVersion": 5
            },
            "azurerm_netapp_snapshot_policy": {
                "current": "azure:netapp/snapshotPolicy:SnapshotPolicy",
                "majorVersion": 5,
                "fields": {
                    "daily_schedule": {
                        "maxItemsOne": true
                    },
                    "hourly_schedule": {
                        "maxItemsOne": true
                    },
                    "monthly_schedule": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "days_of_month": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "weekly_schedule": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "days_of_week": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_netapp_volume": {
                "current": "azure:netapp/volume:Volume",
                "majorVersion": 5,
                "fields": {
                    "data_protection_replication": {
                        "maxItemsOne": true
                    },
                    "data_protection_snapshot_policy": {
                        "maxItemsOne": true
                    },
                    "export_policy_rule": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "allowed_clients": {
                                    "maxItemsOne": false
                                },
                                "protocols_enabled": {
                                    "maxItemsOne": true
                                }
                            }
                        }
                    },
                    "mount_ip_addresses": {
                        "maxItemsOne": false
                    },
                    "protocols": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_netapp_volume_group_sap_hana": {
                "current": "azure:netapp/volumeGroupSapHana:VolumeGroupSapHana",
                "majorVersion": 5,
                "fields": {
                    "volume": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "data_protection_replication": {
                                    "maxItemsOne": true
                                },
                                "data_protection_snapshot_policy": {
                                    "maxItemsOne": true
                                },
                                "export_policy_rule": {
                                    "maxItemsOne": false
                                },
                                "mount_ip_addresses": {
                                    "maxItemsOne": false
                                },
                                "protocols": {
                                    "maxItemsOne": true
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_netapp_volume_quota_rule": {
                "current": "azure:netapp/volumeQuotaRule:VolumeQuotaRule",
                "majorVersion": 5
            },
            "azurerm_network_connection_monitor": {
                "current": "azure:network/networkConnectionMonitor:NetworkConnectionMonitor",
                "majorVersion": 5,
                "fields": {
                    "endpoint": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "excluded_ip_addresses": {
                                    "maxItemsOne": false
                                },
                                "filter": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "item": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "included_ip_addresses": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "output_workspace_resource_ids": {
                        "maxItemsOne": false
                    },
                    "test_configuration": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "http_configuration": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "request_header": {
                                                "maxItemsOne": false
                                            },
                                            "valid_status_code_ranges": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "icmp_configuration": {
                                    "maxItemsOne": true
                                },
                                "success_threshold": {
                                    "maxItemsOne": true
                                },
                                "tcp_configuration": {
                                    "maxItemsOne": true
                                }
                            }
                        }
                    },
                    "test_group": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "destination_endpoints": {
                                    "maxItemsOne": false
                                },
                                "source_endpoints": {
                                    "maxItemsOne": false
                                },
                                "test_configuration_names": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_network_ddos_protection_plan": {
                "current": "azure:network/ddosProtectionPlan:DdosProtectionPlan",
                "majorVersion": 5,
                "fields": {
                    "virtual_network_ids": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_network_function_azure_traffic_collector": {
                "current": "azure:networkfunction/azureTrafficCollector:AzureTrafficCollector",
                "majorVersion": 5,
                "fields": {
                    "collector_policy_ids": {
                        "maxItemsOne": false
                    },
                    "virtual_hub_id": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_network_function_collector_policy": {
                "current": "azure:networkfunction/collectorPolicy:CollectorPolicy",
                "majorVersion": 5,
                "fields": {
                    "ipfx_emission": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "destination_types": {
                                    "maxItemsOne": true
                                }
                            }
                        }
                    },
                    "ipfx_ingestion": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "source_resource_ids": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_network_interface": {
                "current": "azure:network/networkInterface:NetworkInterface",
                "majorVersion": 5,
                "fields": {
                    "applied_dns_servers": {
                        "maxItemsOne": false
                    },
                    "dns_servers": {
                        "maxItemsOne": false
                    },
                    "ip_configuration": {
                        "maxItemsOne": false
                    },
                    "private_ip_addresses": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_network_interface_application_gateway_backend_address_pool_association": {
                "current": "azure:network/networkInterfaceApplicationGatewayBackendAddressPoolAssociation:NetworkInterfaceApplicationGatewayBackendAddressPoolAssociation",
                "majorVersion": 5
            },
            "azurerm_network_interface_application_security_group_association": {
                "current": "azure:network/networkInterfaceApplicationSecurityGroupAssociation:NetworkInterfaceApplicationSecurityGroupAssociation",
                "majorVersion": 5
            },
            "azurerm_network_interface_backend_address_pool_association": {
                "current": "azure:network/networkInterfaceBackendAddressPoolAssociation:NetworkInterfaceBackendAddressPoolAssociation",
                "majorVersion": 5
            },
            "azurerm_network_interface_nat_rule_association": {
                "current": "azure:network/networkInterfaceNatRuleAssociation:NetworkInterfaceNatRuleAssociation",
                "majorVersion": 5
            },
            "azurerm_network_interface_security_group_association": {
                "current": "azure:network/networkInterfaceSecurityGroupAssociation:NetworkInterfaceSecurityGroupAssociation",
                "majorVersion": 5
            },
            "azurerm_network_manager": {
                "current": "azure:network/networkManager:NetworkManager",
                "majorVersion": 5,
                "fields": {
                    "cross_tenant_scopes": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "management_groups": {
                                    "maxItemsOne": false
                                },
                                "subscriptions": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "scope": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "management_group_ids": {
                                    "maxItemsOne": false
                                },
                                "subscription_ids": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "scope_accesses": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_network_manager_admin_rule": {
                "current": "azure:network/networkManagerAdminRule:NetworkManagerAdminRule",
                "majorVersion": 5,
                "fields": {
                    "destination": {
                        "maxItemsOne": false
                    },
                    "destination_port_ranges": {
                        "maxItemsOne": false
                    },
                    "source": {
                        "maxItemsOne": false
                    },
                    "source_port_ranges": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_network_manager_admin_rule_collection": {
                "current": "azure:network/networkManagerAdminRuleCollection:NetworkManagerAdminRuleCollection",
                "majorVersion": 5,
                "fields": {
                    "network_group_ids": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_network_manager_connectivity_configuration": {
                "current": "azure:network/networkManagerConnectivityConfiguration:NetworkManagerConnectivityConfiguration",
                "majorVersion": 5,
                "fields": {
                    "applies_to_group": {
                        "maxItemsOne": false
                    },
                    "hub": {
                        "maxItemsOne": true
                    }
                }
            },
            "azurerm_network_manager_deployment": {
                "current": "azure:network/networkManagerDeployment:NetworkManagerDeployment",
                "majorVersion": 5,
                "fields": {
                    "configuration_ids": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_network_manager_management_group_connection": {
                "current": "azure:network/networkManagerManagementGroupConnection:NetworkManagerManagementGroupConnection",
                "majorVersion": 5
            },
            "azurerm_network_manager_network_group": {
                "current": "azure:network/networkManagerNetworkGroup:NetworkManagerNetworkGroup",
                "majorVersion": 5
            },
            "azurerm_network_manager_scope_connection": {
                "current": "azure:network/networkManagerScopeConnection:NetworkManagerScopeConnection",
                "majorVersion": 5
            },
            "azurerm_network_manager_security_admin_configuration": {
                "current": "azure:network/networkManagerSecurityAdminConfiguration:NetworkManagerSecurityAdminConfiguration",
                "majorVersion": 5,
                "fields": {
                    "apply_on_network_intent_policy_based_services": {
                        "maxItemsOne": true
                    }
                }
            },
            "azurerm_network_manager_static_member": {
                "current": "azure:network/networkManagerStaticMember:NetworkManagerStaticMember",
                "majorVersion": 5
            },
            "azurerm_network_manager_subscription_connection": {
                "current": "azure:network/networkManagerSubscriptionConnection:NetworkManagerSubscriptionConnection",
                "majorVersion": 5
            },
            "azurerm_network_packet_capture": {
                "current": "azure:network/networkPacketCapture:NetworkPacketCapture",
                "majorVersion": 5,
                "fields": {
                    "filter": {
                        "maxItemsOne": false
                    },
                    "storage_location": {
                        "maxItemsOne": true
                    }
                }
            },
            "azurerm_network_profile": {
                "current": "azure:network/profile:Profile",
                "majorVersion": 5,
                "fields": {
                    "container_network_interface": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "ip_configuration": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "container_network_interface_ids": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_network_security_group": {
                "current": "azure:network/networkSecurityGroup:NetworkSecurityGroup",
                "majorVersion": 5,
                "fields": {
                    "security_rule": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "destination_address_prefixes": {
                                    "maxItemsOne": false
                                },
                                "destination_application_security_group_ids": {
                                    "maxItemsOne": false
                                },
                                "destination_port_ranges": {
                                    "maxItemsOne": false
                                },
                                "source_address_prefixes": {
                                    "maxItemsOne": false
                                },
                                "source_application_security_group_ids": {
                                    "maxItemsOne": false
                                },
                                "source_port_ranges": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_network_security_rule": {
                "current": "azure:network/networkSecurityRule:NetworkSecurityRule",
                "majorVersion": 5,
                "fields": {
                    "destination_address_prefixes": {
                        "maxItemsOne": false
                    },
                    "destination_application_security_group_ids": {
                        "maxItemsOne": true
                    },
                    "destination_port_ranges": {
                        "maxItemsOne": false
                    },
                    "source_address_prefixes": {
                        "maxItemsOne": false
                    },
                    "source_application_security_group_ids": {
                        "maxItemsOne": true
                    },
                    "source_port_ranges": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_network_watcher": {
                "current": "azure:network/networkWatcher:NetworkWatcher",
                "majorVersion": 5
            },
            "azurerm_network_watcher_flow_log": {
                "current": "azure:network/networkWatcherFlowLog:NetworkWatcherFlowLog",
                "majorVersion": 5,
                "fields": {
                    "retention_policy": {
                        "maxItemsOne": true
                    },
                    "traffic_analytics": {
                        "maxItemsOne": true
                    }
                }
            },
            "azurerm_new_relic_monitor": {
                "current": "azure:newrelic/monitor:Monitor",
                "majorVersion": 5,
                "fields": {
                    "plan": {
                        "maxItemsOne": true
                    },
                    "user": {
                        "maxItemsOne": true
                    }
                }
            },
            "azurerm_new_relic_tag_rule": {
                "current": "azure:newrelic/tagRule:TagRule",
                "majorVersion": 5,
                "fields": {
                    "log_tag_filter": {
                        "maxItemsOne": false
                    },
                    "metric_tag_filter": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_nginx_certificate": {
                "current": "azure:nginx/certificate:Certificate",
                "majorVersion": 5
            },
            "azurerm_nginx_configuration": {
                "current": "azure:nginx/configuration:Configuration",
                "majorVersion": 5,
                "fields": {
                    "config_file": {
                        "maxItemsOne": false
                    },
                    "protected_file": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_nginx_deployment": {
                "current": "azure:nginx/deployment:Deployment",
                "majorVersion": 5,
                "fields": {
                    "frontend_private": {
                        "maxItemsOne": false
                    },
                    "frontend_public": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "ip_address": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "identity": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "identity_ids": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "logging_storage_account": {
                        "maxItemsOne": false
                    },
                    "network_interface": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_notification_hub": {
                "current": "azure:notificationhub/hub:Hub",
                "majorVersion": 5,
                "fields": {
                    "apns_credential": {
                        "maxItemsOne": true
                    },
                    "gcm_credential": {
                        "maxItemsOne": true
                    }
                }
            },
            "azurerm_notification_hub_authorization_rule": {
                "current": "azure:notificationhub/authorizationRule:AuthorizationRule",
                "majorVersion": 5
            },
            "azurerm_notification_hub_namespace": {
                "current": "azure:notificationhub/namespace:Namespace",
                "majorVersion": 5
            },
            "azurerm_orbital_contact": {
                "current": "azure:orbital/contact:Contact",
                "majorVersion": 5
            },
            "azurerm_orbital_contact_profile": {
                "current": "azure:orbital/contactProfile:ContactProfile",
                "majorVersion": 5,
                "fields": {
                    "links": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "channels": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "end_point": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_orbital_spacecraft": {
                "current": "azure:orbital/spacecraft:Spacecraft",
                "majorVersion": 5,
                "fields": {
                    "links": {
                        "maxItemsOne": false
                    },
                    "two_line_elements": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_orchestrated_virtual_machine_scale_set": {
                "current": "azure:compute/orchestratedVirtualMachineScaleSet:OrchestratedVirtualMachineScaleSet",
                "majorVersion": 5,
                "fields": {
                    "additional_capabilities": {
                        "maxItemsOne": true
                    },
                    "automatic_instance_repair": {
                        "maxItemsOne": true
                    },
                    "boot_diagnostics": {
                        "maxItemsOne": true
                    },
                    "data_disk": {
                        "maxItemsOne": false
                    },
                    "extension": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "extensions_to_provision_after_vm_creation": {
                                    "maxItemsOne": false
                                },
                                "protected_settings_from_key_vault": {
                                    "maxItemsOne": true
                                }
                            }
                        }
                    },
                    "identity": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "identity_ids": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "network_interface": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "dns_servers": {
                                    "maxItemsOne": false
                                },
                                "ip_configuration": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "application_gateway_backend_address_pool_ids": {
                                                "maxItemsOne": false
                                            },
                                            "application_security_group_ids": {
                                                "maxItemsOne": false
                                            },
                                            "load_balancer_backend_address_pool_ids": {
                                                "maxItemsOne": false
                                            },
                                            "public_ip_address": {
                                                "maxItemsOne": false,
                                                "elem": {
                                                    "fields": {
                                                        "ip_tag": {
                                                            "maxItemsOne": false
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "os_disk": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "diff_disk_settings": {
                                    "maxItemsOne": true
                                }
                            }
                        }
                    },
                    "os_profile": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "linux_configuration": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "admin_ssh_key": {
                                                "maxItemsOne": false
                                            },
                                            "secret": {
                                                "maxItemsOne": false,
                                                "elem": {
                                                    "fields": {
                                                        "certificate": {
                                                            "maxItemsOne": false
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "windows_configuration": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "secret": {
                                                "maxItemsOne": false,
                                                "elem": {
                                                    "fields": {
                                                        "certificate": {
                                                            "maxItemsOne": false
                                                        }
                                                    }
                                                }
                                            },
                                            "winrm_listener": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "plan": {
                        "maxItemsOne": true
                    },
                    "priority_mix": {
                        "maxItemsOne": true
                    },
                    "source_image_reference": {
                        "maxItemsOne": true
                    },
                    "termination_notification": {
                        "maxItemsOne": true
                    },
                    "zones": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_palo_alto_local_rulestack": {
                "current": "azure:paloalto/localRulestack:LocalRulestack",
                "majorVersion": 5
            },
            "azurerm_palo_alto_local_rulestack_certificate": {
                "current": "azure:paloalto/localRulestackCertificate:LocalRulestackCertificate",
                "majorVersion": 5
            },
            "azurerm_palo_alto_local_rulestack_fqdn_list": {
                "current": "azure:paloalto/localRulestackFqdnList:LocalRulestackFqdnList",
                "majorVersion": 5,
                "fields": {
                    "fully_qualified_domain_names": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_palo_alto_local_rulestack_outbound_trust_certificate_association": {
                "current": "azure:paloalto/localRulestackOutboundTrustCertificateAssociation:LocalRulestackOutboundTrustCertificateAssociation",
                "majorVersion": 5
            },
            "azurerm_palo_alto_local_rulestack_outbound_untrust_certificate_association": {
                "current": "azure:paloalto/localRulestackOutboundUntrustCertificateAssociation:LocalRulestackOutboundUntrustCertificateAssociation",
                "majorVersion": 5
            },
            "azurerm_palo_alto_local_rulestack_prefix_list": {
                "current": "azure:paloalto/localRulestackPrefixList:LocalRulestackPrefixList",
                "majorVersion": 5,
                "fields": {
                    "prefix_list": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_palo_alto_local_rulestack_rule": {
                "current": "azure:paloalto/localRulestackRule:LocalRulestackRule",
                "majorVersion": 5,
                "fields": {
                    "applications": {
                        "maxItemsOne": false
                    },
                    "category": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "custom_urls": {
                                    "maxItemsOne": false
                                },
                                "feeds": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "destination": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "cidrs": {
                                    "maxItemsOne": false
                                },
                                "countries": {
                                    "maxItemsOne": false
                                },
                                "feeds": {
                                    "maxItemsOne": false
                                },
                                "local_rulestack_fqdn_list_ids": {
                                    "maxItemsOne": false
                                },
                                "local_rulestack_prefix_list_ids": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "protocol_ports": {
                        "maxItemsOne": false
                    },
                    "source": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "cidrs": {
                                    "maxItemsOne": false
                                },
                                "countries": {
                                    "maxItemsOne": false
                                },
                                "feeds": {
                                    "maxItemsOne": false
                                },
                                "local_rulestack_prefix_list_ids": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_palo_alto_next_generation_firewall_virtual_hub_local_rulestack": {
                "current": "azure:paloalto/nextGenerationFirewallVirtualHubLocalRulestack:NextGenerationFirewallVirtualHubLocalRulestack",
                "majorVersion": 5,
                "fields": {
                    "destination_nat": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "backend_config": {
                                    "maxItemsOne": true
                                },
                                "frontend_config": {
                                    "maxItemsOne": true
                                }
                            }
                        }
                    },
                    "dns_settings": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "azure_dns_servers": {
                                    "maxItemsOne": false
                                },
                                "dns_servers": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "network_profile": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "egress_nat_ip_address_ids": {
                                    "maxItemsOne": false
                                },
                                "egress_nat_ip_addresses": {
                                    "maxItemsOne": false
                                },
                                "public_ip_address_ids": {
                                    "maxItemsOne": false
                                },
                                "public_ip_addresses": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_palo_alto_next_generation_firewall_virtual_hub_panorama": {
                "current": "azure:paloalto/nextGenerationFirewallVirtualHubPanorama:NextGenerationFirewallVirtualHubPanorama",
                "majorVersion": 5,
                "fields": {
                    "destination_nat": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "backend_config": {
                                    "maxItemsOne": true
                                },
                                "frontend_config": {
                                    "maxItemsOne": true
                                }
                            }
                        }
                    },
                    "dns_settings": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "azure_dns_servers": {
                                    "maxItemsOne": false
                                },
                                "dns_servers": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "network_profile": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "egress_nat_ip_address_ids": {
                                    "maxItemsOne": false
                                },
                                "egress_nat_ip_addresses": {
                                    "maxItemsOne": false
                                },
                                "public_ip_address_ids": {
                                    "maxItemsOne": false
                                },
                                "public_ip_addresses": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "panorama": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_palo_alto_next_generation_firewall_virtual_network_local_rulestack": {
                "current": "azure:paloalto/nextGenerationFirewallVirtualNetworkLocalRulestack:NextGenerationFirewallVirtualNetworkLocalRulestack",
                "majorVersion": 5,
                "fields": {
                    "destination_nat": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "backend_config": {
                                    "maxItemsOne": true
                                },
                                "frontend_config": {
                                    "maxItemsOne": true
                                }
                            }
                        }
                    },
                    "dns_settings": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "azure_dns_servers": {
                                    "maxItemsOne": false
                                },
                                "dns_servers": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "network_profile": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "egress_nat_ip_address_ids": {
                                    "maxItemsOne": false
                                },
                                "egress_nat_ip_addresses": {
                                    "maxItemsOne": false
                                },
                                "public_ip_address_ids": {
                                    "maxItemsOne": false
                                },
                                "public_ip_addresses": {
                                    "maxItemsOne": false
                                },
                                "vnet_configuration": {
                                    "maxItemsOne": true
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_palo_alto_next_generation_firewall_virtual_network_panorama": {
                "current": "azure:paloalto/nextGenerationFirewallVirtualNetworkPanorama:NextGenerationFirewallVirtualNetworkPanorama",
                "majorVersion": 5,
                "fields": {
                    "destination_nat": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "backend_config": {
                                    "maxItemsOne": true
                                },
                                "frontend_config": {
                                    "maxItemsOne": true
                                }
                            }
                        }
                    },
                    "dns_settings": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "azure_dns_servers": {
                                    "maxItemsOne": false
                                },
                                "dns_servers": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "network_profile": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "egress_nat_ip_address_ids": {
                                    "maxItemsOne": false
                                },
                                "egress_nat_ip_addresses": {
                                    "maxItemsOne": false
                                },
                                "public_ip_address_ids": {
                                    "maxItemsOne": false
                                },
                                "public_ip_addresses": {
                                    "maxItemsOne": false
                                },
                                "vnet_configuration": {
                                    "maxItemsOne": true
                                }
                            }
                        }
                    },
                    "panorama": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_palo_alto_virtual_network_appliance": {
                "current": "azure:paloalto/virtualNetworkAppliance:VirtualNetworkAppliance",
                "majorVersion": 5
            },
            "azurerm_pim_active_role_assignment": {
                "current": "azure:pim/activeRoleAssignment:ActiveRoleAssignment",
                "majorVersion": 5,
                "fields": {
                    "schedule": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "expiration": {
                                    "maxItemsOne": true
                                }
                            }
                        }
                    },
                    "ticket": {
                        "maxItemsOne": true
                    }
                }
            },
            "azurerm_pim_eligible_role_assignment": {
                "current": "azure:pim/eligibleRoleAssignment:EligibleRoleAssignment",
                "majorVersion": 5,
                "fields": {
                    "schedule": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "expiration": {
                                    "maxItemsOne": true
                                }
                            }
                        }
                    },
                    "ticket": {
                        "maxItemsOne": true
                    }
                }
            },
            "azurerm_point_to_site_vpn_gateway": {
                "current": "azure:network/pointToPointVpnGateway:PointToPointVpnGateway",
                "majorVersion": 5,
                "fields": {
                    "connection_configuration": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "route": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "propagated_route_table": {
                                                "maxItemsOne": true,
                                                "elem": {
                                                    "fields": {
                                                        "ids": {
                                                            "maxItemsOne": false
                                                        },
                                                        "labels": {
                                                            "maxItemsOne": false
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "vpn_client_address_pool": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "address_prefixes": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "dns_servers": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_policy_definition": {
                "current": "azure:policy/definition:Definition",
                "majorVersion": 5,
                "fields": {
                    "role_definition_ids": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_policy_set_definition": {
                "current": "azure:policy/policySetDefinition:PolicySetDefinition",
                "majorVersion": 5,
                "fields": {
                    "policy_definition_group": {
                        "maxItemsOne": false
                    },
                    "policy_definition_reference": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "policy_group_names": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_policy_virtual_machine_configuration_assignment": {
                "current": "azure:policy/virtualMachineConfigurationAssignment:VirtualMachineConfigurationAssignment",
                "majorVersion": 5,
                "fields": {
                    "configuration": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "parameter": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_portal_dashboard": {
                "current": "azure:portal/portalDashboard:PortalDashboard",
                "majorVersion": 5
            },
            "azurerm_portal_tenant_configuration": {
                "current": "azure:core/portalTenantConfiguration:PortalTenantConfiguration",
                "majorVersion": 5
            },
            "azurerm_postgresql_active_directory_administrator": {
                "current": "azure:postgresql/activeDirectoryAdministrator:ActiveDirectoryAdministrator",
                "majorVersion": 5
            },
            "azurerm_postgresql_configuration": {
                "current": "azure:postgresql/configuration:Configuration",
                "majorVersion": 5
            },
            "azurerm_postgresql_database": {
                "current": "azure:postgresql/database:Database",
                "majorVersion": 5
            },
            "azurerm_postgresql_firewall_rule": {
                "current": "azure:postgresql/firewallRule:FirewallRule",
                "majorVersion": 5
            },
            "azurerm_postgresql_flexible_server": {
                "current": "azure:postgresql/flexibleServer:FlexibleServer",
                "majorVersion": 5,
                "fields": {
                    "authentication": {
                        "maxItemsOne": true
                    },
                    "customer_managed_key": {
                        "maxItemsOne": true
                    },
                    "high_availability": {
                        "maxItemsOne": true
                    },
                    "identity": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "identity_ids": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "maintenance_window": {
                        "maxItemsOne": true
                    }
                }
            },
            "azurerm_postgresql_flexible_server_active_directory_administrator": {
                "current": "azure:postgresql/flexibleServerActiveDirectoryAdministrator:FlexibleServerActiveDirectoryAdministrator",
                "majorVersion": 5
            },
            "azurerm_postgresql_flexible_server_configuration": {
                "current": "azure:postgresql/flexibleServerConfiguration:FlexibleServerConfiguration",
                "majorVersion": 5
            },
            "azurerm_postgresql_flexible_server_database": {
                "current": "azure:postgresql/flexibleServerDatabase:FlexibleServerDatabase",
                "majorVersion": 5
            },
            "azurerm_postgresql_flexible_server_firewall_rule": {
                "current": "azure:postgresql/flexibleServerFirewallRule:FlexibleServerFirewallRule",
                "majorVersion": 5
            },
            "azurerm_postgresql_server": {
                "current": "azure:postgresql/server:Server",
                "majorVersion": 5,
                "fields": {
                    "identity": {
                        "maxItemsOne": true
                    },
                    "threat_detection_policy": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "disabled_alerts": {
                                    "maxItemsOne": false
                                },
                                "email_addresses": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_postgresql_server_key": {
                "current": "azure:postgresql/serverKey:ServerKey",
                "majorVersion": 5
            },
            "azurerm_postgresql_virtual_network_rule": {
                "current": "azure:postgresql/virtualNetworkRule:VirtualNetworkRule",
                "majorVersion": 5
            },
            "azurerm_powerbi_embedded": {
                "current": "azure:powerbi/embedded:Embedded",
                "majorVersion": 5,
                "fields": {
                    "administrators": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_private_dns_a_record": {
                "current": "azure:privatedns/aRecord:ARecord",
                "majorVersion": 5,
                "fields": {
                    "records": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_private_dns_aaaa_record": {
                "current": "azure:privatedns/aAAARecord:AAAARecord",
                "majorVersion": 5,
                "fields": {
                    "records": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_private_dns_cname_record": {
                "current": "azure:privatedns/cnameRecord:CnameRecord",
                "majorVersion": 5
            },
            "azurerm_private_dns_mx_record": {
                "current": "azure:privatedns/mxRecord:MxRecord",
                "majorVersion": 5,
                "fields": {
                    "record": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_private_dns_ptr_record": {
                "current": "azure:privatedns/pTRRecord:PTRRecord",
                "majorVersion": 5,
                "fields": {
                    "records": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_private_dns_resolver": {
                "current": "azure:privatedns/resolver:Resolver",
                "majorVersion": 5
            },
            "azurerm_private_dns_resolver_dns_forwarding_ruleset": {
                "current": "azure:privatedns/resolverDnsForwardingRuleset:ResolverDnsForwardingRuleset",
                "majorVersion": 5,
                "fields": {
                    "private_dns_resolver_outbound_endpoint_ids": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_private_dns_resolver_forwarding_rule": {
                "current": "azure:privatedns/resolverForwardingRule:ResolverForwardingRule",
                "majorVersion": 5,
                "fields": {
                    "target_dns_servers": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_private_dns_resolver_inbound_endpoint": {
                "current": "azure:privatedns/resolverInboundEndpoint:ResolverInboundEndpoint",
                "majorVersion": 5,
                "fields": {
                    "ip_configurations": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_private_dns_resolver_outbound_endpoint": {
                "current": "azure:privatedns/resolverOutboundEndpoint:ResolverOutboundEndpoint",
                "majorVersion": 5
            },
            "azurerm_private_dns_resolver_virtual_network_link": {
                "current": "azure:privatedns/resolverVirtualNetworkLink:ResolverVirtualNetworkLink",
                "majorVersion": 5
            },
            "azurerm_private_dns_srv_record": {
                "current": "azure:privatedns/sRVRecord:SRVRecord",
                "majorVersion": 5,
                "fields": {
                    "record": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_private_dns_txt_record": {
                "current": "azure:privatedns/txtRecord:TxtRecord",
                "majorVersion": 5,
                "fields": {
                    "record": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_private_dns_zone": {
                "current": "azure:privatedns/zone:Zone",
                "majorVersion": 5,
                "fields": {
                    "soa_record": {
                        "maxItemsOne": true
                    }
                }
            },
            "azurerm_private_dns_zone_virtual_network_link": {
                "current": "azure:privatedns/zoneVirtualNetworkLink:ZoneVirtualNetworkLink",
                "majorVersion": 5
            },
            "azurerm_private_endpoint": {
                "current": "azure:privatelink/endpoint:Endpoint",
                "majorVersion": 5,
                "fields": {
                    "custom_dns_configs": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "ip_addresses": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "ip_configuration": {
                        "maxItemsOne": false
                    },
                    "network_interface": {
                        "maxItemsOne": false
                    },
                    "private_dns_zone_configs": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "record_sets": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "ip_addresses": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "private_dns_zone_group": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "private_dns_zone_ids": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "private_service_connection": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "subresource_names": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_private_endpoint_application_security_group_association": {
                "current": "azure:privatelink/applicationSecurityGroupAssociation:ApplicationSecurityGroupAssociation",
                "majorVersion": 5
            },
            "azurerm_private_link_service": {
                "current": "azure:privatedns/linkService:LinkService",
                "majorVersion": 5,
                "fields": {
                    "auto_approval_subscription_ids": {
                        "maxItemsOne": false
                    },
                    "fqdns": {
                        "maxItemsOne": false
                    },
                    "load_balancer_frontend_ip_configuration_ids": {
                        "maxItemsOne": false
                    },
                    "nat_ip_configuration": {
                        "maxItemsOne": false
                    },
                    "visibility_subscription_ids": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_proximity_placement_group": {
                "current": "azure:proximity/placementGroup:PlacementGroup",
                "majorVersion": 5,
                "fields": {
                    "allowed_vm_sizes": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_public_ip": {
                "current": "azure:network/publicIp:PublicIp",
                "majorVersion": 5,
                "fields": {
                    "zones": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_public_ip_prefix": {
                "current": "azure:network/publicIpPrefix:PublicIpPrefix",
                "majorVersion": 5,
                "fields": {
                    "zones": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_purview_account": {
                "current": "azure:purview/account:Account",
                "majorVersion": 5,
                "fields": {
                    "identity": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "identity_ids": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "managed_resources": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_recovery_services_vault": {
                "current": "azure:recoveryservices/vault:Vault",
                "majorVersion": 5,
                "fields": {
                    "encryption": {
                        "maxItemsOne": true
                    },
                    "identity": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "identity_ids": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "monitoring": {
                        "maxItemsOne": true
                    }
                }
            },
            "azurerm_recovery_services_vault_resource_guard_association": {
                "current": "azure:recoveryservices/vaultResourceGuardAssociation:VaultResourceGuardAssociation",
                "majorVersion": 5
            },
            "azurerm_redis_cache": {
                "current": "azure:redis/cache:Cache",
                "majorVersion": 5,
                "fields": {
                    "identity": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "identity_ids": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "patch_schedule": {
                        "maxItemsOne": false
                    },
                    "redis_configuration": {
                        "maxItemsOne": true
                    },
                    "zones": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_redis_enterprise_cluster": {
                "current": "azure:redis/enterpriseCluster:EnterpriseCluster",
                "majorVersion": 5,
                "fields": {
                    "zones": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_redis_enterprise_database": {
                "current": "azure:redis/enterpriseDatabase:EnterpriseDatabase",
                "majorVersion": 5,
                "fields": {
                    "linked_database_id": {
                        "maxItemsOne": false
                    },
                    "module": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_redis_firewall_rule": {
                "current": "azure:redis/firewallRule:FirewallRule",
                "majorVersion": 5
            },
            "azurerm_redis_linked_server": {
                "current": "azure:redis/linkedServer:LinkedServer",
                "majorVersion": 5
            },
            "azurerm_relay_hybrid_connection": {
                "current": "azure:relay/hybridConnection:HybridConnection",
                "majorVersion": 5
            },
            "azurerm_relay_hybrid_connection_authorization_rule": {
                "current": "azure:relay/hybridConnectionAuthorizationRule:HybridConnectionAuthorizationRule",
                "majorVersion": 5
            },
            "azurerm_relay_namespace": {
                "current": "azure:relay/namespace:Namespace",
                "majorVersion": 5
            },
            "azurerm_relay_namespace_authorization_rule": {
                "current": "azure:relay/namespaceAuthorizationRule:NamespaceAuthorizationRule",
                "majorVersion": 5
            },
            "azurerm_resource_deployment_script_azure_cli": {
                "current": "azure:core/resourceDeploymentScriptAzureCli:ResourceDeploymentScriptAzureCli",
                "majorVersion": 5,
                "fields": {
                    "container": {
                        "maxItemsOne": true
                    },
                    "environment_variable": {
                        "maxItemsOne": false
                    },
                    "identity": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "identity_ids": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "storage_account": {
                        "maxItemsOne": true
                    },
                    "supporting_script_uris": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_resource_deployment_script_azure_power_shell": {
                "current": "azure:core/resourceDeploymentScriptPowerShell:ResourceDeploymentScriptPowerShell",
                "majorVersion": 5,
                "fields": {
                    "container": {
                        "maxItemsOne": true
                    },
                    "environment_variable": {
                        "maxItemsOne": false
                    },
                    "identity": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "identity_ids": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "storage_account": {
                        "maxItemsOne": true
                    },
                    "supporting_script_uris": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_resource_group": {
                "current": "azure:core/resourceGroup:ResourceGroup",
                "majorVersion": 5
            },
            "azurerm_resource_group_cost_management_export": {
                "current": "azure:core/resourceGroupCostManagementExport:ResourceGroupCostManagementExport",
                "majorVersion": 5,
                "fields": {
                    "export_data_options": {
                        "maxItemsOne": true
                    },
                    "export_data_storage_location": {
                        "maxItemsOne": true
                    }
                }
            },
            "azurerm_resource_group_cost_management_view": {
                "current": "azure:core/resourceGroupCostManagementView:ResourceGroupCostManagementView",
                "majorVersion": 5,
                "fields": {
                    "dataset": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "aggregation": {
                                    "maxItemsOne": false
                                },
                                "grouping": {
                                    "maxItemsOne": false
                                },
                                "sorting": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "kpi": {
                        "maxItemsOne": false
                    },
                    "pivot": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_resource_group_policy_assignment": {
                "current": "azure:core/resourceGroupPolicyAssignment:ResourceGroupPolicyAssignment",
                "majorVersion": 5,
                "fields": {
                    "identity": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "identity_ids": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "non_compliance_message": {
                        "maxItemsOne": false
                    },
                    "not_scopes": {
                        "maxItemsOne": false
                    },
                    "overrides": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "selectors": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "in": {
                                                "maxItemsOne": false
                                            },
                                            "not_in": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "resource_selectors": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "selectors": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "in": {
                                                "maxItemsOne": false
                                            },
                                            "not_in": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_resource_group_policy_exemption": {
                "current": "azure:core/resourceGroupPolicyExemption:ResourceGroupPolicyExemption",
                "majorVersion": 5,
                "fields": {
                    "policy_definition_reference_ids": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_resource_group_policy_remediation": {
                "current": "azure:core/resourceGroupPolicyRemediation:ResourceGroupPolicyRemediation",
                "majorVersion": 5,
                "fields": {
                    "location_filters": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_resource_group_template_deployment": {
                "current": "azure:core/resourceGroupTemplateDeployment:ResourceGroupTemplateDeployment",
                "majorVersion": 5
            },
            "azurerm_resource_management_private_link": {
                "current": "azure:management/privateLink:PrivateLink",
                "majorVersion": 5
            },
            "azurerm_resource_management_private_link_association": {
                "current": "azure:management/privateLinkAssociation:PrivateLinkAssociation",
                "majorVersion": 5
            },
            "azurerm_resource_policy_assignment": {
                "current": "azure:core/resourcePolicyAssignment:ResourcePolicyAssignment",
                "majorVersion": 5,
                "fields": {
                    "identity": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "identity_ids": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "non_compliance_message": {
                        "maxItemsOne": false
                    },
                    "not_scopes": {
                        "maxItemsOne": false
                    },
                    "overrides": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "selectors": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "in": {
                                                "maxItemsOne": false
                                            },
                                            "not_in": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "resource_selectors": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "selectors": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "in": {
                                                "maxItemsOne": false
                                            },
                                            "not_in": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_resource_policy_exemption": {
                "current": "azure:core/resourcePolicyExemption:ResourcePolicyExemption",
                "majorVersion": 5,
                "fields": {
                    "policy_definition_reference_ids": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_resource_policy_remediation": {
                "current": "azure:core/resourcePolicyRemediation:ResourcePolicyRemediation",
                "majorVersion": 5,
                "fields": {
                    "location_filters": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_resource_provider_registration": {
                "current": "azure:core/resourceProviderRegistration:ResourceProviderRegistration",
                "majorVersion": 5,
                "fields": {
                    "feature": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_role_assignment": {
                "current": "azure:authorization/assignment:Assignment",
                "majorVersion": 5
            },
            "azurerm_role_assignment_legacy": {
                "current": "azure:role/assignment:Assignment",
                "majorVersion": 5
            },
            "azurerm_role_definition": {
                "current": "azure:authorization/roleDefinition:RoleDefinition",
                "majorVersion": 5,
                "fields": {
                    "assignable_scopes": {
                        "maxItemsOne": false
                    },
                    "permissions": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "actions": {
                                    "maxItemsOne": false
                                },
                                "data_actions": {
                                    "maxItemsOne": false
                                },
                                "not_actions": {
                                    "maxItemsOne": false
                                },
                                "not_data_actions": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_role_definition_legacy": {
                "current": "azure:role/definition:Definition",
                "majorVersion": 5,
                "fields": {
                    "assignable_scopes": {
                        "maxItemsOne": false
                    },
                    "permissions": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "actions": {
                                    "maxItemsOne": false
                                },
                                "data_actions": {
                                    "maxItemsOne": false
                                },
                                "not_actions": {
                                    "maxItemsOne": false
                                },
                                "not_data_actions": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_route": {
                "current": "azure:network/route:Route",
                "majorVersion": 5
            },
            "azurerm_route_filter": {
                "current": "azure:network/routeFilter:RouteFilter",
                "majorVersion": 5,
                "fields": {
                    "rule": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "communities": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_route_map": {
                "current": "azure:network/routeMap:RouteMap",
                "majorVersion": 5,
                "fields": {
                    "rule": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "action": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "parameter": {
                                                "maxItemsOne": false,
                                                "elem": {
                                                    "fields": {
                                                        "as_path": {
                                                            "maxItemsOne": false
                                                        },
                                                        "community": {
                                                            "maxItemsOne": false
                                                        },
                                                        "route_prefix": {
                                                            "maxItemsOne": false
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "match_criterion": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "as_path": {
                                                "maxItemsOne": false
                                            },
                                            "community": {
                                                "maxItemsOne": false
                                            },
                                            "route_prefix": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_route_server": {
                "current": "azure:network/routeServer:RouteServer",
                "majorVersion": 5,
                "fields": {
                    "virtual_router_ips": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_route_server_bgp_connection": {
                "current": "azure:network/routeServerBgpConnection:RouteServerBgpConnection",
                "majorVersion": 5
            },
            "azurerm_route_table": {
                "current": "azure:network/routeTable:RouteTable",
                "majorVersion": 5,
                "fields": {
                    "route": {
                        "maxItemsOne": false
                    },
                    "subnets": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_search_service": {
                "current": "azure:search/service:Service",
                "majorVersion": 5,
                "fields": {
                    "allowed_ips": {
                        "maxItemsOne": false
                    },
                    "identity": {
                        "maxItemsOne": true
                    },
                    "query_keys": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_search_shared_private_link_service": {
                "current": "azure:search/sharedPrivateLinkService:SharedPrivateLinkService",
                "majorVersion": 5
            },
            "azurerm_security_center_assessment": {
                "current": "azure:securitycenter/assessment:Assessment",
                "majorVersion": 5,
                "fields": {
                    "status": {
                        "maxItemsOne": true
                    }
                }
            },
            "azurerm_security_center_assessment_policy": {
                "current": "azure:securitycenter/assessmentPolicy:AssessmentPolicy",
                "majorVersion": 5,
                "fields": {
                    "categories": {
                        "maxItemsOne": false
                    },
                    "threats": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_security_center_auto_provisioning": {
                "current": "azure:securitycenter/autoProvisioning:AutoProvisioning",
                "majorVersion": 5
            },
            "azurerm_security_center_automation": {
                "current": "azure:securitycenter/automation:Automation",
                "majorVersion": 5,
                "fields": {
                    "action": {
                        "maxItemsOne": false
                    },
                    "scopes": {
                        "maxItemsOne": false
                    },
                    "source": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "rule_set": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "rule": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_security_center_contact": {
                "current": "azure:securitycenter/contact:Contact",
                "majorVersion": 5
            },
            "azurerm_security_center_server_vulnerability_assessment": {
                "current": "azure:securitycenter/serverVulnerabilityAssessment:ServerVulnerabilityAssessment",
                "majorVersion": 5
            },
            "azurerm_security_center_server_vulnerability_assessment_virtual_machine": {
                "current": "azure:securitycenter/serverVulnerabilityAssessmentVirtualMachine:ServerVulnerabilityAssessmentVirtualMachine",
                "majorVersion": 5
            },
            "azurerm_security_center_setting": {
                "current": "azure:securitycenter/setting:Setting",
                "majorVersion": 5
            },
            "azurerm_security_center_storage_defender": {
                "current": "azure:securitycenter/storageDefender:StorageDefender",
                "majorVersion": 5
            },
            "azurerm_security_center_subscription_pricing": {
                "current": "azure:securitycenter/subscriptionPricing:SubscriptionPricing",
                "majorVersion": 5,
                "fields": {
                    "extension": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_security_center_workspace": {
                "current": "azure:securitycenter/workspace:Workspace",
                "majorVersion": 5
            },
            "azurerm_sentinel_alert_rule_anomaly_built_in": {
                "current": "azure:sentinel/alertRuleAnomalyBuiltIn:AlertRuleAnomalyBuiltIn",
                "majorVersion": 5,
                "fields": {
                    "multi_select_observation": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "supported_values": {
                                    "maxItemsOne": false
                                },
                                "values": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "prioritized_exclude_observation": {
                        "maxItemsOne": false
                    },
                    "required_data_connector": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "data_types": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "single_select_observation": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "supported_values": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "tactics": {
                        "maxItemsOne": false
                    },
                    "techniques": {
                        "maxItemsOne": false
                    },
                    "threshold_observation": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_sentinel_alert_rule_anomaly_duplicate": {
                "current": "azure:sentinel/alertRuleAnomalyDuplicate:AlertRuleAnomalyDuplicate",
                "majorVersion": 5,
                "fields": {
                    "multi_select_observation": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "supported_values": {
                                    "maxItemsOne": false
                                },
                                "values": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "prioritized_exclude_observation": {
                        "maxItemsOne": false
                    },
                    "required_data_connector": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "data_types": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "single_select_observation": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "supported_values": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "tactics": {
                        "maxItemsOne": false
                    },
                    "techniques": {
                        "maxItemsOne": false
                    },
                    "threshold_observation": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_sentinel_alert_rule_fusion": {
                "current": "azure:sentinel/alertRuleFusion:AlertRuleFusion",
                "majorVersion": 5,
                "fields": {
                    "source": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "sub_type": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "severities_allowed": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_sentinel_alert_rule_machine_learning_behavior_analytics": {
                "current": "azure:sentinel/alertRuleMachineLearningBehaviorAnalytics:AlertRuleMachineLearningBehaviorAnalytics",
                "majorVersion": 5
            },
            "azurerm_sentinel_alert_rule_ms_security_incident": {
                "current": "azure:sentinel/alertRuleMsSecurityIncident:AlertRuleMsSecurityIncident",
                "majorVersion": 5,
                "fields": {
                    "display_name_exclude_filter": {
                        "maxItemsOne": false
                    },
                    "display_name_filter": {
                        "maxItemsOne": false
                    },
                    "severity_filter": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_sentinel_alert_rule_nrt": {
                "current": "azure:sentinel/alertRuleNrt:AlertRuleNrt",
                "majorVersion": 5,
                "fields": {
                    "alert_details_override": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "dynamic_property": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "entity_mapping": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "field_mapping": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "event_grouping": {
                        "maxItemsOne": true
                    },
                    "incident": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "grouping": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "by_alert_details": {
                                                "maxItemsOne": false
                                            },
                                            "by_custom_details": {
                                                "maxItemsOne": false
                                            },
                                            "by_entities": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "sentinel_entity_mapping": {
                        "maxItemsOne": false
                    },
                    "tactics": {
                        "maxItemsOne": false
                    },
                    "techniques": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_sentinel_alert_rule_scheduled": {
                "current": "azure:sentinel/alertRuleScheduled:AlertRuleScheduled",
                "majorVersion": 5,
                "fields": {
                    "alert_details_override": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "dynamic_property": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "entity_mapping": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "field_mapping": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "event_grouping": {
                        "maxItemsOne": true
                    },
                    "incident_configuration": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "grouping": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "group_by_alert_details": {
                                                "maxItemsOne": false
                                            },
                                            "group_by_custom_details": {
                                                "maxItemsOne": false
                                            },
                                            "group_by_entities": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "sentinel_entity_mapping": {
                        "maxItemsOne": false
                    },
                    "tactics": {
                        "maxItemsOne": false
                    },
                    "techniques": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_sentinel_alert_rule_threat_intelligence": {
                "current": "azure:sentinel/alertRuleThreatIntelligence:AlertRuleThreatIntelligence",
                "majorVersion": 5
            },
            "azurerm_sentinel_automation_rule": {
                "current": "azure:sentinel/automationRule:AutomationRule",
                "majorVersion": 5,
                "fields": {
                    "action_incident": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "labels": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "action_playbook": {
                        "maxItemsOne": false
                    },
                    "condition": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "values": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_sentinel_automation_rule_legacy": {
                "current": "azure:sentinel/authomationRule:AuthomationRule",
                "majorVersion": 5,
                "fields": {
                    "action_incident": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "labels": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "action_playbook": {
                        "maxItemsOne": false
                    },
                    "condition": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "values": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_sentinel_data_connector_aws_cloud_trail": {
                "current": "azure:sentinel/dataConnectorAwsCloudTrail:DataConnectorAwsCloudTrail",
                "majorVersion": 5
            },
            "azurerm_sentinel_data_connector_aws_s3": {
                "current": "azure:sentinel/dataConnectorAwsS3:DataConnectorAwsS3",
                "majorVersion": 5,
                "fields": {
                    "sqs_urls": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_sentinel_data_connector_azure_active_directory": {
                "current": "azure:sentinel/dataConnectorAzureActiveDirectory:DataConnectorAzureActiveDirectory",
                "majorVersion": 5
            },
            "azurerm_sentinel_data_connector_azure_advanced_threat_protection": {
                "current": "azure:sentinel/dataConnectorAzureAdvancedThreadProtection:DataConnectorAzureAdvancedThreadProtection",
                "majorVersion": 5
            },
            "azurerm_sentinel_data_connector_azure_security_center": {
                "current": "azure:sentinel/dataConnectorAzureSecurityCenter:DataConnectorAzureSecurityCenter",
                "majorVersion": 5
            },
            "azurerm_sentinel_data_connector_dynamics_365": {
                "current": "azure:sentinel/dataConnectorDynamics365:DataConnectorDynamics365",
                "majorVersion": 5
            },
            "azurerm_sentinel_data_connector_iot": {
                "current": "azure:sentinel/dataConnectorIot:DataConnectorIot",
                "majorVersion": 5
            },
            "azurerm_sentinel_data_connector_microsoft_cloud_app_security": {
                "current": "azure:sentinel/dataConnectorMicrosoftCloudAppSecurity:DataConnectorMicrosoftCloudAppSecurity",
                "majorVersion": 5
            },
            "azurerm_sentinel_data_connector_microsoft_defender_advanced_threat_protection": {
                "current": "azure:sentinel/dataConnectorMicrosoftDefenderAdvancedThreatProtection:DataConnectorMicrosoftDefenderAdvancedThreatProtection",
                "majorVersion": 5
            },
            "azurerm_sentinel_data_connector_microsoft_threat_intelligence": {
                "current": "azure:sentinel/dataConnectorMicrosoftThreatIntelligence:DataConnectorMicrosoftThreatIntelligence",
                "majorVersion": 5
            },
            "azurerm_sentinel_data_connector_microsoft_threat_protection": {
                "current": "azure:sentinel/dataConnectorMicrosoftThreatProtection:DataConnectorMicrosoftThreatProtection",
                "majorVersion": 5
            },
            "azurerm_sentinel_data_connector_office_365": {
                "current": "azure:sentinel/dataConnectorOffice365:DataConnectorOffice365",
                "majorVersion": 5
            },
            "azurerm_sentinel_data_connector_office_365_project": {
                "current": "azure:sentinel/dataConnectorOffice365Project:DataConnectorOffice365Project",
                "majorVersion": 5
            },
            "azurerm_sentinel_data_connector_office_atp": {
                "current": "azure:sentinel/dataConnectorOfficeAtp:DataConnectorOfficeAtp",
                "majorVersion": 5
            },
            "azurerm_sentinel_data_connector_office_irm": {
                "current": "azure:sentinel/dataConnectorOfficeIrm:DataConnectorOfficeIrm",
                "majorVersion": 5
            },
            "azurerm_sentinel_data_connector_office_power_bi": {
                "current": "azure:sentinel/dataConnectorOfficePowerBi:DataConnectorOfficePowerBi",
                "majorVersion": 5
            },
            "azurerm_sentinel_data_connector_threat_intelligence": {
                "current": "azure:sentinel/dataConnectorThreatIntelligence:DataConnectorThreatIntelligence",
                "majorVersion": 5
            },
            "azurerm_sentinel_data_connector_threat_intelligence_taxii": {
                "current": "azure:sentinel/dataConnectorThreatIntelligenceTaxii:DataConnectorThreatIntelligenceTaxii",
                "majorVersion": 5
            },
            "azurerm_sentinel_log_analytics_workspace_onboarding": {
                "current": "azure:sentinel/logAnalyticsWorkspaceOnboarding:LogAnalyticsWorkspaceOnboarding",
                "majorVersion": 5
            },
            "azurerm_sentinel_metadata": {
                "current": "azure:sentinel/metadata:Metadata",
                "majorVersion": 5,
                "fields": {
                    "author": {
                        "maxItemsOne": true
                    },
                    "category": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "domains": {
                                    "maxItemsOne": false
                                },
                                "verticals": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "preview_images": {
                        "maxItemsOne": false
                    },
                    "preview_images_dark": {
                        "maxItemsOne": false
                    },
                    "providers": {
                        "maxItemsOne": false
                    },
                    "source": {
                        "maxItemsOne": true
                    },
                    "support": {
                        "maxItemsOne": true
                    },
                    "threat_analysis_tactics": {
                        "maxItemsOne": false
                    },
                    "threat_analysis_techniques": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_sentinel_threat_intelligence_indicator": {
                "current": "azure:sentinel/threatIntelligenceIndicator:ThreatIntelligenceIndicator",
                "majorVersion": 5,
                "fields": {
                    "external_reference": {
                        "maxItemsOne": false
                    },
                    "granular_marking": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "selectors": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "indicator_type": {
                        "maxItemsOne": false
                    },
                    "kill_chain_phase": {
                        "maxItemsOne": false
                    },
                    "object_marking_refs": {
                        "maxItemsOne": false
                    },
                    "parsed_pattern": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "pattern_type_values": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "tags": {
                        "maxItemsOne": false
                    },
                    "threat_types": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_sentinel_watchlist": {
                "current": "azure:sentinel/watchlist:Watchlist",
                "majorVersion": 5,
                "fields": {
                    "labels": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_sentinel_watchlist_item": {
                "current": "azure:sentinel/watchlistItem:WatchlistItem",
                "majorVersion": 5
            },
            "azurerm_service_fabric_cluster": {
                "current": "azure:servicefabric/cluster:Cluster",
                "majorVersion": 5,
                "fields": {
                    "add_on_features": {
                        "maxItemsOne": false
                    },
                    "azure_active_directory": {
                        "maxItemsOne": true
                    },
                    "certificate": {
                        "maxItemsOne": true
                    },
                    "certificate_common_names": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "common_names": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "client_certificate_common_name": {
                        "maxItemsOne": false
                    },
                    "client_certificate_thumbprint": {
                        "maxItemsOne": false
                    },
                    "diagnostics_config": {
                        "maxItemsOne": true
                    },
                    "fabric_settings": {
                        "maxItemsOne": false
                    },
                    "node_type": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "application_ports": {
                                    "maxItemsOne": true
                                },
                                "ephemeral_ports": {
                                    "maxItemsOne": true
                                }
                            }
                        }
                    },
                    "reverse_proxy_certificate": {
                        "maxItemsOne": true
                    },
                    "reverse_proxy_certificate_common_names": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "common_names": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "upgrade_policy": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "delta_health_policy": {
                                    "maxItemsOne": true
                                },
                                "health_policy": {
                                    "maxItemsOne": true
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_service_fabric_managed_cluster": {
                "current": "azure:servicefabric/managedCluster:ManagedCluster",
                "majorVersion": 5,
                "fields": {
                    "authentication": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "active_directory": {
                                    "maxItemsOne": true
                                },
                                "certificate": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "custom_fabric_setting": {
                        "maxItemsOne": false
                    },
                    "lb_rule": {
                        "maxItemsOne": false
                    },
                    "node_type": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "vm_secrets": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "certificates": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_service_plan": {
                "current": "azure:appservice/servicePlan:ServicePlan",
                "majorVersion": 5
            },
            "azurerm_servicebus_namespace": {
                "current": "azure:servicebus/namespace:Namespace",
                "majorVersion": 5,
                "fields": {
                    "customer_managed_key": {
                        "maxItemsOne": true
                    },
                    "identity": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "identity_ids": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "network_rule_set": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "ip_rules": {
                                    "maxItemsOne": false
                                },
                                "network_rules": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_servicebus_namespace_authorization_rule": {
                "current": "azure:servicebus/namespaceAuthorizationRule:NamespaceAuthorizationRule",
                "majorVersion": 5
            },
            "azurerm_servicebus_namespace_authorization_rule_legacy": {
                "current": "azure:eventhub/namespaceAuthorizationRule:NamespaceAuthorizationRule",
                "majorVersion": 5
            },
            "azurerm_servicebus_namespace_disaster_recovery_config": {
                "current": "azure:servicebus/namespaceDisasterRecoveryConfig:NamespaceDisasterRecoveryConfig",
                "majorVersion": 5
            },
            "azurerm_servicebus_namespace_legacy": {
                "current": "azure:eventhub/namespace:Namespace",
                "majorVersion": 5,
                "fields": {
                    "customer_managed_key": {
                        "maxItemsOne": true
                    },
                    "identity": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "identity_ids": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "network_rule_set": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "ip_rules": {
                                    "maxItemsOne": false
                                },
                                "network_rules": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_servicebus_namespace_network_rule_set": {
                "current": "azure:servicebus/namespaceNetworkRuleSet:NamespaceNetworkRuleSet",
                "majorVersion": 5,
                "fields": {
                    "ip_rules": {
                        "maxItemsOne": false
                    },
                    "network_rules": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_servicebus_queue": {
                "current": "azure:servicebus/queue:Queue",
                "majorVersion": 5
            },
            "azurerm_servicebus_queue_authorization_rule": {
                "current": "azure:servicebus/queueAuthorizationRule:QueueAuthorizationRule",
                "majorVersion": 5
            },
            "azurerm_servicebus_queue_authorization_rule_legacy": {
                "current": "azure:eventhub/queueAuthorizationRule:QueueAuthorizationRule",
                "majorVersion": 5
            },
            "azurerm_servicebus_queue_legacy": {
                "current": "azure:eventhub/queue:Queue",
                "majorVersion": 5
            },
            "azurerm_servicebus_subscription": {
                "current": "azure:servicebus/subscription:Subscription",
                "majorVersion": 5,
                "fields": {
                    "client_scoped_subscription": {
                        "maxItemsOne": true
                    }
                }
            },
            "azurerm_servicebus_subscription_legacy": {
                "current": "azure:eventhub/subscription:Subscription",
                "majorVersion": 5,
                "fields": {
                    "client_scoped_subscription": {
                        "maxItemsOne": true
                    }
                }
            },
            "azurerm_servicebus_subscription_rule": {
                "current": "azure:servicebus/subscriptionRule:SubscriptionRule",
                "majorVersion": 5,
                "fields": {
                    "correlation_filter": {
                        "maxItemsOne": true
                    }
                }
            },
            "azurerm_servicebus_subscription_rule_legacy": {
                "current": "azure:eventhub/subscriptionRule:SubscriptionRule",
                "majorVersion": 5,
                "fields": {
                    "correlation_filter": {
                        "maxItemsOne": true
                    }
                }
            },
            "azurerm_servicebus_topic": {
                "current": "azure:servicebus/topic:Topic",
                "majorVersion": 5
            },
            "azurerm_servicebus_topic_authorization_rule": {
                "current": "azure:servicebus/topicAuthorizationRule:TopicAuthorizationRule",
                "majorVersion": 5
            },
            "azurerm_servicebus_topic_authorization_rule_legacy": {
                "current": "azure:eventhub/topicAuthorizationRule:TopicAuthorizationRule",
                "majorVersion": 5
            },
            "azurerm_servicebus_topic_legacy": {
                "current": "azure:eventhub/topic:Topic",
                "majorVersion": 5
            },
            "azurerm_shared_image": {
                "current": "azure:compute/sharedImage:SharedImage",
                "majorVersion": 5,
                "fields": {
                    "disk_types_not_allowed": {
                        "maxItemsOne": false
                    },
                    "identifier": {
                        "maxItemsOne": true
                    },
                    "purchase_plan": {
                        "maxItemsOne": true
                    }
                }
            },
            "azurerm_shared_image_gallery": {
                "current": "azure:compute/sharedImageGallery:SharedImageGallery",
                "majorVersion": 5,
                "fields": {
                    "sharing": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "community_gallery": {
                                    "maxItemsOne": true
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_shared_image_version": {
                "current": "azure:compute/sharedImageVersion:SharedImageVersion",
                "majorVersion": 5,
                "fields": {
                    "target_region": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_signalr_service": {
                "current": "azure:signalr/service:Service",
                "majorVersion": 5,
                "fields": {
                    "cors": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "allowed_origins": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "identity": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "identity_ids": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "live_trace": {
                        "maxItemsOne": true
                    },
                    "sku": {
                        "maxItemsOne": true
                    },
                    "upstream_endpoint": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "category_pattern": {
                                    "maxItemsOne": false
                                },
                                "event_pattern": {
                                    "maxItemsOne": false
                                },
                                "hub_pattern": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_signalr_service_custom_certificate": {
                "current": "azure:signalr/serviceCustomCertificate:ServiceCustomCertificate",
                "majorVersion": 5
            },
            "azurerm_signalr_service_custom_domain": {
                "current": "azure:signalr/serviceCustomDomain:ServiceCustomDomain",
                "majorVersion": 5
            },
            "azurerm_signalr_service_network_acl": {
                "current": "azure:signalr/serviceNetworkAcl:ServiceNetworkAcl",
                "majorVersion": 5,
                "fields": {
                    "private_endpoint": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "allowed_request_types": {
                                    "maxItemsOne": false
                                },
                                "denied_request_types": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "public_network": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "allowed_request_types": {
                                    "maxItemsOne": false
                                },
                                "denied_request_types": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_signalr_shared_private_link_resource": {
                "current": "azure:signalr/sharedPrivateLinkResource:SharedPrivateLinkResource",
                "majorVersion": 5
            },
            "azurerm_site_recovery_fabric": {
                "current": "azure:siterecovery/fabric:Fabric",
                "majorVersion": 5
            },
            "azurerm_site_recovery_hyperv_network_mapping": {
                "current": "azure:siterecovery/hypervNetworkMapping:HypervNetworkMapping",
                "majorVersion": 5
            },
            "azurerm_site_recovery_hyperv_replication_policy": {
                "current": "azure:siterecovery/hyperVReplicationPolicy:HyperVReplicationPolicy",
                "majorVersion": 5
            },
            "azurerm_site_recovery_hyperv_replication_policy_association": {
                "current": "azure:siterecovery/hyperVReplicationPolicyAssociation:HyperVReplicationPolicyAssociation",
                "majorVersion": 5
            },
            "azurerm_site_recovery_network_mapping": {
                "current": "azure:siterecovery/networkMapping:NetworkMapping",
                "majorVersion": 5
            },
            "azurerm_site_recovery_protection_container": {
                "current": "azure:siterecovery/protectionContainer:ProtectionContainer",
                "majorVersion": 5
            },
            "azurerm_site_recovery_protection_container_mapping": {
                "current": "azure:siterecovery/protectionContainerMapping:ProtectionContainerMapping",
                "majorVersion": 5,
                "fields": {
                    "automatic_update": {
                        "maxItemsOne": true
                    }
                }
            },
            "azurerm_site_recovery_replicated_vm": {
                "current": "azure:siterecovery/replicatedVM:ReplicatedVM",
                "majorVersion": 5,
                "fields": {
                    "managed_disk": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "target_disk_encryption": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "disk_encryption_key": {
                                                "maxItemsOne": true
                                            },
                                            "key_encryption_key": {
                                                "maxItemsOne": true
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "network_interface": {
                        "maxItemsOne": false
                    },
                    "unmanaged_disk": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_site_recovery_replication_policy": {
                "current": "azure:siterecovery/replicationPolicy:ReplicationPolicy",
                "majorVersion": 5
            },
            "azurerm_site_recovery_replication_recovery_plan": {
                "current": "azure:siterecovery/replicationRecoveryPlan:ReplicationRecoveryPlan",
                "majorVersion": 5,
                "fields": {
                    "azure_to_azure_settings": {
                        "maxItemsOne": true
                    },
                    "boot_recovery_group": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "post_action": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "fail_over_directions": {
                                                "maxItemsOne": false
                                            },
                                            "fail_over_types": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "pre_action": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "fail_over_directions": {
                                                "maxItemsOne": false
                                            },
                                            "fail_over_types": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "replicated_protected_items": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "failover_recovery_group": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "post_action": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "fail_over_directions": {
                                                "maxItemsOne": false
                                            },
                                            "fail_over_types": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "pre_action": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "fail_over_directions": {
                                                "maxItemsOne": false
                                            },
                                            "fail_over_types": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "recovery_group": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "post_action": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "fail_over_directions": {
                                                "maxItemsOne": false
                                            },
                                            "fail_over_types": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "pre_action": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "fail_over_directions": {
                                                "maxItemsOne": false
                                            },
                                            "fail_over_types": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "replicated_protected_items": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "shutdown_recovery_group": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "post_action": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "fail_over_directions": {
                                                "maxItemsOne": false
                                            },
                                            "fail_over_types": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "pre_action": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "fail_over_directions": {
                                                "maxItemsOne": false
                                            },
                                            "fail_over_types": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_site_recovery_services_vault_hyperv_site": {
                "current": "azure:siterecovery/hyperVSite:HyperVSite",
                "majorVersion": 5
            },
            "azurerm_site_recovery_vmware_replication_policy": {
                "current": "azure:siterecovery/vMWareReplicationPolicy:VMWareReplicationPolicy",
                "majorVersion": 5
            },
            "azurerm_site_recovery_vmware_replication_policy_association": {
                "current": "azure:siterecovery/vmwareReplicationPolicyAssociation:VmwareReplicationPolicyAssociation",
                "majorVersion": 5
            },
            "azurerm_snapshot": {
                "current": "azure:compute/snapshot:Snapshot",
                "majorVersion": 5,
                "fields": {
                    "encryption_settings": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "disk_encryption_key": {
                                    "maxItemsOne": true
                                },
                                "key_encryption_key": {
                                    "maxItemsOne": true
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_source_control_token": {
                "current": "azure:appservice/sourceControlToken:SourceControlToken",
                "majorVersion": 5
            },
            "azurerm_spatial_anchors_account": {
                "current": "azure:mixedreality/spatialAnchorsAccount:SpatialAnchorsAccount",
                "majorVersion": 5
            },
            "azurerm_spring_cloud_accelerator": {
                "current": "azure:appplatform/springCloudAccelerator:SpringCloudAccelerator",
                "majorVersion": 5
            },
            "azurerm_spring_cloud_active_deployment": {
                "current": "azure:appplatform/springCloudActiveDeployment:SpringCloudActiveDeployment",
                "majorVersion": 5
            },
            "azurerm_spring_cloud_api_portal": {
                "current": "azure:appplatform/springCloudApiPortal:SpringCloudApiPortal",
                "majorVersion": 5,
                "fields": {
                    "gateway_ids": {
                        "maxItemsOne": false
                    },
                    "sso": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "scope": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_spring_cloud_api_portal_custom_domain": {
                "current": "azure:appplatform/springCloudApiPortalCustomDomain:SpringCloudApiPortalCustomDomain",
                "majorVersion": 5
            },
            "azurerm_spring_cloud_app": {
                "current": "azure:appplatform/springCloudApp:SpringCloudApp",
                "majorVersion": 5,
                "fields": {
                    "custom_persistent_disk": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "mount_options": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "identity": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "identity_ids": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "ingress_settings": {
                        "maxItemsOne": true
                    },
                    "persistent_disk": {
                        "maxItemsOne": true
                    }
                }
            },
            "azurerm_spring_cloud_app_cosmosdb_association": {
                "current": "azure:appplatform/springCloudAppCosmosDBAssociation:SpringCloudAppCosmosDBAssociation",
                "majorVersion": 5
            },
            "azurerm_spring_cloud_app_mysql_association": {
                "current": "azure:appplatform/springCloudAppMysqlAssociation:SpringCloudAppMysqlAssociation",
                "majorVersion": 5
            },
            "azurerm_spring_cloud_app_redis_association": {
                "current": "azure:appplatform/springCloudAppRedisAssociation:SpringCloudAppRedisAssociation",
                "majorVersion": 5
            },
            "azurerm_spring_cloud_application_insights_application_performance_monitoring": {
                "current": "azure:appplatform/springCloudApplicationInsightsApplicationPerformanceMonitoring:SpringCloudApplicationInsightsApplicationPerformanceMonitoring",
                "majorVersion": 5
            },
            "azurerm_spring_cloud_application_live_view": {
                "current": "azure:appplatform/springCloudApplicationLiveView:SpringCloudApplicationLiveView",
                "majorVersion": 5
            },
            "azurerm_spring_cloud_build_deployment": {
                "current": "azure:appplatform/springCloudBuildDeployment:SpringCloudBuildDeployment",
                "majorVersion": 5,
                "fields": {
                    "application_performance_monitoring_ids": {
                        "maxItemsOne": false
                    },
                    "quota": {
                        "maxItemsOne": true
                    }
                }
            },
            "azurerm_spring_cloud_build_pack_binding": {
                "current": "azure:appplatform/springCloudBuildPackBinding:SpringCloudBuildPackBinding",
                "majorVersion": 5,
                "fields": {
                    "launch": {
                        "maxItemsOne": true
                    }
                }
            },
            "azurerm_spring_cloud_builder": {
                "current": "azure:appplatform/springCloudBuilder:SpringCloudBuilder",
                "majorVersion": 5,
                "fields": {
                    "build_pack_group": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "build_pack_ids": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "stack": {
                        "maxItemsOne": true
                    }
                }
            },
            "azurerm_spring_cloud_certificate": {
                "current": "azure:appplatform/springCloudCertificate:SpringCloudCertificate",
                "majorVersion": 5
            },
            "azurerm_spring_cloud_configuration_service": {
                "current": "azure:appplatform/springCloudConfigurationService:SpringCloudConfigurationService",
                "majorVersion": 5,
                "fields": {
                    "repository": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "patterns": {
                                    "maxItemsOne": false
                                },
                                "search_paths": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_spring_cloud_connection": {
                "current": "azure:appplatform/springCloudConnection:SpringCloudConnection",
                "majorVersion": 5,
                "fields": {
                    "authentication": {
                        "maxItemsOne": true
                    },
                    "secret_store": {
                        "maxItemsOne": true
                    }
                }
            },
            "azurerm_spring_cloud_container_deployment": {
                "current": "azure:appplatform/springCloudContainerDeployment:SpringCloudContainerDeployment",
                "majorVersion": 5,
                "fields": {
                    "application_performance_monitoring_ids": {
                        "maxItemsOne": false
                    },
                    "arguments": {
                        "maxItemsOne": false
                    },
                    "commands": {
                        "maxItemsOne": false
                    },
                    "quota": {
                        "maxItemsOne": true
                    }
                }
            },
            "azurerm_spring_cloud_custom_domain": {
                "current": "azure:appplatform/springCloudCustomDomain:SpringCloudCustomDomain",
                "majorVersion": 5
            },
            "azurerm_spring_cloud_customized_accelerator": {
                "current": "azure:appplatform/springCloudCustomizedAccelerator:SpringCloudCustomizedAccelerator",
                "majorVersion": 5,
                "fields": {
                    "accelerator_tags": {
                        "maxItemsOne": false
                    },
                    "git_repository": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "basic_auth": {
                                    "maxItemsOne": true
                                },
                                "ssh_auth": {
                                    "maxItemsOne": true
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_spring_cloud_dev_tool_portal": {
                "current": "azure:appplatform/springCloudDevToolPortal:SpringCloudDevToolPortal",
                "majorVersion": 5,
                "fields": {
                    "sso": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "scope": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_spring_cloud_gateway": {
                "current": "azure:appplatform/springCloudGateway:SpringCloudGateway",
                "majorVersion": 5,
                "fields": {
                    "api_metadata": {
                        "maxItemsOne": true
                    },
                    "application_performance_monitoring_types": {
                        "maxItemsOne": false
                    },
                    "client_authorization": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "certificate_ids": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "cors": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "allowed_headers": {
                                    "maxItemsOne": false
                                },
                                "allowed_methods": {
                                    "maxItemsOne": false
                                },
                                "allowed_origin_patterns": {
                                    "maxItemsOne": false
                                },
                                "allowed_origins": {
                                    "maxItemsOne": false
                                },
                                "exposed_headers": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "quota": {
                        "maxItemsOne": true
                    },
                    "sso": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "scope": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_spring_cloud_gateway_custom_domain": {
                "current": "azure:appplatform/springCloudGatewayCustomDomain:SpringCloudGatewayCustomDomain",
                "majorVersion": 5
            },
            "azurerm_spring_cloud_gateway_route_config": {
                "current": "azure:appplatform/springCloudGatewayRouteConfig:SpringCloudGatewayRouteConfig",
                "majorVersion": 5,
                "fields": {
                    "filters": {
                        "maxItemsOne": false
                    },
                    "open_api": {
                        "maxItemsOne": true
                    },
                    "predicates": {
                        "maxItemsOne": false
                    },
                    "route": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "classification_tags": {
                                    "maxItemsOne": false
                                },
                                "filters": {
                                    "maxItemsOne": false
                                },
                                "predicates": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_spring_cloud_java_deployment": {
                "current": "azure:appplatform/springCloudJavaDeployment:SpringCloudJavaDeployment",
                "majorVersion": 5,
                "fields": {
                    "quota": {
                        "maxItemsOne": true
                    }
                }
            },
            "azurerm_spring_cloud_service": {
                "current": "azure:appplatform/springCloudService:SpringCloudService",
                "majorVersion": 5,
                "fields": {
                    "config_server_git_setting": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "http_basic_auth": {
                                    "maxItemsOne": true
                                },
                                "repository": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "http_basic_auth": {
                                                "maxItemsOne": true
                                            },
                                            "pattern": {
                                                "maxItemsOne": false
                                            },
                                            "search_paths": {
                                                "maxItemsOne": false
                                            },
                                            "ssh_auth": {
                                                "maxItemsOne": true
                                            }
                                        }
                                    }
                                },
                                "search_paths": {
                                    "maxItemsOne": false
                                },
                                "ssh_auth": {
                                    "maxItemsOne": true
                                }
                            }
                        }
                    },
                    "container_registry": {
                        "maxItemsOne": false
                    },
                    "default_build_service": {
                        "maxItemsOne": true
                    },
                    "marketplace": {
                        "maxItemsOne": true
                    },
                    "network": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "cidr_ranges": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "outbound_public_ip_addresses": {
                        "maxItemsOne": false
                    },
                    "required_network_traffic_rules": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "fqdns": {
                                    "maxItemsOne": false
                                },
                                "ip_addresses": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "trace": {
                        "maxItemsOne": true
                    }
                }
            },
            "azurerm_spring_cloud_storage": {
                "current": "azure:appplatform/springCloudStorage:SpringCloudStorage",
                "majorVersion": 5
            },
            "azurerm_sql_active_directory_administrator": {
                "current": "azure:sql/activeDirectoryAdministrator:ActiveDirectoryAdministrator",
                "majorVersion": 5
            },
            "azurerm_sql_database": {
                "current": "azure:sql/database:Database",
                "majorVersion": 5,
                "fields": {
                    "import": {
                        "maxItemsOne": true
                    },
                    "threat_detection_policy": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "disabled_alerts": {
                                    "maxItemsOne": false
                                },
                                "email_addresses": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_sql_elasticpool": {
                "current": "azure:sql/elasticPool:ElasticPool",
                "majorVersion": 5
            },
            "azurerm_sql_failover_group": {
                "current": "azure:sql/failoverGroup:FailoverGroup",
                "majorVersion": 5,
                "fields": {
                    "databases": {
                        "maxItemsOne": false
                    },
                    "partner_servers": {
                        "maxItemsOne": false
                    },
                    "read_write_endpoint_failover_policy": {
                        "maxItemsOne": true
                    },
                    "readonly_endpoint_failover_policy": {
                        "maxItemsOne": true
                    }
                }
            },
            "azurerm_sql_firewall_rule": {
                "current": "azure:sql/firewallRule:FirewallRule",
                "majorVersion": 5
            },
            "azurerm_sql_managed_database": {
                "current": "azure:sql/managedDatabase:ManagedDatabase",
                "majorVersion": 5
            },
            "azurerm_sql_managed_instance": {
                "current": "azure:sql/managedInstance:ManagedInstance",
                "majorVersion": 5,
                "fields": {
                    "identity": {
                        "maxItemsOne": true
                    }
                }
            },
            "azurerm_sql_managed_instance_active_directory_administrator": {
                "current": "azure:sql/managedInstanceActiveDirectoryAdministrator:ManagedInstanceActiveDirectoryAdministrator",
                "majorVersion": 5
            },
            "azurerm_sql_managed_instance_failover_group": {
                "current": "azure:sql/managedInstanceFailoverGroup:ManagedInstanceFailoverGroup",
                "majorVersion": 5,
                "fields": {
                    "partner_region": {
                        "maxItemsOne": false
                    },
                    "read_write_endpoint_failover_policy": {
                        "maxItemsOne": true
                    }
                }
            },
            "azurerm_sql_server": {
                "current": "azure:sql/sqlServer:SqlServer",
                "majorVersion": 5,
                "fields": {
                    "identity": {
                        "maxItemsOne": true
                    },
                    "threat_detection_policy": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "disabled_alerts": {
                                    "maxItemsOne": false
                                },
                                "email_addresses": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_sql_virtual_network_rule": {
                "current": "azure:sql/virtualNetworkRule:VirtualNetworkRule",
                "majorVersion": 5
            },
            "azurerm_ssh_public_key": {
                "current": "azure:compute/sshPublicKey:SshPublicKey",
                "majorVersion": 5
            },
            "azurerm_stack_hci_cluster": {
                "current": "azure:stack/hciCluster:HciCluster",
                "majorVersion": 5
            },
            "azurerm_static_site": {
                "current": "azure:appservice/staticSite:StaticSite",
                "majorVersion": 5,
                "fields": {
                    "identity": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "identity_ids": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_static_site_custom_domain": {
                "current": "azure:appservice/staticSiteCustomDomain:StaticSiteCustomDomain",
                "majorVersion": 5
            },
            "azurerm_storage_account": {
                "current": "azure:storage/account:Account",
                "majorVersion": 5,
                "fields": {
                    "azure_files_authentication": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "active_directory": {
                                    "maxItemsOne": true
                                }
                            }
                        }
                    },
                    "blob_properties": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "container_delete_retention_policy": {
                                    "maxItemsOne": true
                                },
                                "cors_rule": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "allowed_headers": {
                                                "maxItemsOne": false
                                            },
                                            "allowed_methods": {
                                                "maxItemsOne": false
                                            },
                                            "allowed_origins": {
                                                "maxItemsOne": false
                                            },
                                            "exposed_headers": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "delete_retention_policy": {
                                    "maxItemsOne": true
                                },
                                "restore_policy": {
                                    "maxItemsOne": true
                                }
                            }
                        }
                    },
                    "custom_domain": {
                        "maxItemsOne": true
                    },
                    "customer_managed_key": {
                        "maxItemsOne": true
                    },
                    "identity": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "identity_ids": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "immutability_policy": {
                        "maxItemsOne": true
                    },
                    "network_rules": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "bypass": {
                                    "maxItemsOne": false
                                },
                                "ip_rules": {
                                    "maxItemsOne": false
                                },
                                "private_link_access": {
                                    "maxItemsOne": false
                                },
                                "virtual_network_subnet_ids": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "queue_properties": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "cors_rule": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "allowed_headers": {
                                                "maxItemsOne": false
                                            },
                                            "allowed_methods": {
                                                "maxItemsOne": false
                                            },
                                            "allowed_origins": {
                                                "maxItemsOne": false
                                            },
                                            "exposed_headers": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "hour_metrics": {
                                    "maxItemsOne": true
                                },
                                "logging": {
                                    "maxItemsOne": true
                                },
                                "minute_metrics": {
                                    "maxItemsOne": true
                                }
                            }
                        }
                    },
                    "routing": {
                        "maxItemsOne": true
                    },
                    "sas_policy": {
                        "maxItemsOne": true
                    },
                    "share_properties": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "cors_rule": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "allowed_headers": {
                                                "maxItemsOne": false
                                            },
                                            "allowed_methods": {
                                                "maxItemsOne": false
                                            },
                                            "allowed_origins": {
                                                "maxItemsOne": false
                                            },
                                            "exposed_headers": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "retention_policy": {
                                    "maxItemsOne": true
                                },
                                "smb": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "authentication_types": {
                                                "maxItemsOne": false
                                            },
                                            "channel_encryption_type": {
                                                "maxItemsOne": false
                                            },
                                            "kerberos_ticket_encryption_type": {
                                                "maxItemsOne": false
                                            },
                                            "versions": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "static_website": {
                        "maxItemsOne": true
                    }
                }
            },
            "azurerm_storage_account_customer_managed_key": {
                "current": "azure:storage/customerManagedKey:CustomerManagedKey",
                "majorVersion": 5
            },
            "azurerm_storage_account_local_user": {
                "current": "azure:storage/localUser:LocalUser",
                "majorVersion": 5,
                "fields": {
                    "permission_scope": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "permissions": {
                                    "maxItemsOne": true
                                }
                            }
                        }
                    },
                    "ssh_authorized_key": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_storage_account_network_rules": {
                "current": "azure:storage/accountNetworkRules:AccountNetworkRules",
                "majorVersion": 5,
                "fields": {
                    "bypass": {
                        "maxItemsOne": false
                    },
                    "ip_rules": {
                        "maxItemsOne": false
                    },
                    "private_link_access": {
                        "maxItemsOne": false
                    },
                    "virtual_network_subnet_ids": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_storage_blob": {
                "current": "azure:storage/blob:Blob",
                "majorVersion": 5
            },
            "azurerm_storage_blob_inventory_policy": {
                "current": "azure:storage/blobInventoryPolicy:BlobInventoryPolicy",
                "majorVersion": 5,
                "fields": {
                    "rules": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "filter": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "blob_types": {
                                                "maxItemsOne": false
                                            },
                                            "exclude_prefixes": {
                                                "maxItemsOne": false
                                            },
                                            "prefix_match": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "schema_fields": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_storage_container": {
                "current": "azure:storage/container:Container",
                "majorVersion": 5
            },
            "azurerm_storage_data_lake_gen2_filesystem": {
                "current": "azure:storage/dataLakeGen2Filesystem:DataLakeGen2Filesystem",
                "majorVersion": 5,
                "fields": {
                    "ace": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_storage_data_lake_gen2_path": {
                "current": "azure:storage/dataLakeGen2Path:DataLakeGen2Path",
                "majorVersion": 5,
                "fields": {
                    "ace": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_storage_encryption_scope": {
                "current": "azure:storage/encryptionScope:EncryptionScope",
                "majorVersion": 5
            },
            "azurerm_storage_management_policy": {
                "current": "azure:storage/managementPolicy:ManagementPolicy",
                "majorVersion": 5,
                "fields": {
                    "rule": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "actions": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "base_blob": {
                                                "maxItemsOne": true
                                            },
                                            "snapshot": {
                                                "maxItemsOne": true
                                            },
                                            "version": {
                                                "maxItemsOne": true
                                            }
                                        }
                                    }
                                },
                                "filters": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "blob_types": {
                                                "maxItemsOne": false
                                            },
                                            "match_blob_index_tag": {
                                                "maxItemsOne": false
                                            },
                                            "prefix_match": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_storage_mover": {
                "current": "azure:storage/mover:Mover",
                "majorVersion": 5
            },
            "azurerm_storage_mover_agent": {
                "current": "azure:storage/moverAgent:MoverAgent",
                "majorVersion": 5
            },
            "azurerm_storage_mover_job_definition": {
                "current": "azure:storage/moverJobDefinition:MoverJobDefinition",
                "majorVersion": 5
            },
            "azurerm_storage_mover_project": {
                "current": "azure:storage/moverProject:MoverProject",
                "majorVersion": 5
            },
            "azurerm_storage_mover_source_endpoint": {
                "current": "azure:storage/moverSourceEndpoint:MoverSourceEndpoint",
                "majorVersion": 5
            },
            "azurerm_storage_mover_target_endpoint": {
                "current": "azure:storage/moverTargetEndpoint:MoverTargetEndpoint",
                "majorVersion": 5
            },
            "azurerm_storage_object_replication": {
                "current": "azure:storage/objectReplication:ObjectReplication",
                "majorVersion": 5,
                "fields": {
                    "rules": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "filter_out_blobs_with_prefix": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_storage_queue": {
                "current": "azure:storage/queue:Queue",
                "majorVersion": 5
            },
            "azurerm_storage_share": {
                "current": "azure:storage/share:Share",
                "majorVersion": 5,
                "fields": {
                    "acl": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "access_policy": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_storage_share_directory": {
                "current": "azure:storage/shareDirectory:ShareDirectory",
                "majorVersion": 5
            },
            "azurerm_storage_share_file": {
                "current": "azure:storage/shareFile:ShareFile",
                "majorVersion": 5
            },
            "azurerm_storage_sync": {
                "current": "azure:storage/sync:Sync",
                "majorVersion": 5
            },
            "azurerm_storage_sync_cloud_endpoint": {
                "current": "azure:storage/syncCloudEndpoint:SyncCloudEndpoint",
                "majorVersion": 5
            },
            "azurerm_storage_sync_group": {
                "current": "azure:storage/syncGroup:SyncGroup",
                "majorVersion": 5
            },
            "azurerm_storage_table": {
                "current": "azure:storage/table:Table",
                "majorVersion": 5,
                "fields": {
                    "acl": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "access_policy": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_storage_table_entity": {
                "current": "azure:storage/tableEntity:TableEntity",
                "majorVersion": 5
            },
            "azurerm_storage_zipblob": {
                "current": "azure:storage/zipBlob:ZipBlob",
                "majorVersion": 5
            },
            "azurerm_stream_analytics_cluster": {
                "current": "azure:streamanalytics/cluster:Cluster",
                "majorVersion": 5
            },
            "azurerm_stream_analytics_function_javascript_uda": {
                "current": "azure:streamanalytics/functionJavascriptUda:FunctionJavascriptUda",
                "majorVersion": 5,
                "fields": {
                    "input": {
                        "maxItemsOne": false
                    },
                    "output": {
                        "maxItemsOne": true
                    }
                }
            },
            "azurerm_stream_analytics_function_javascript_udf": {
                "current": "azure:streamanalytics/functionJavaScriptUDF:FunctionJavaScriptUDF",
                "majorVersion": 5,
                "fields": {
                    "input": {
                        "maxItemsOne": false
                    },
                    "output": {
                        "maxItemsOne": true
                    }
                }
            },
            "azurerm_stream_analytics_job": {
                "current": "azure:streamanalytics/job:Job",
                "majorVersion": 5,
                "fields": {
                    "identity": {
                        "maxItemsOne": true
                    },
                    "job_storage_account": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_stream_analytics_job_schedule": {
                "current": "azure:streamanalytics/jobSchedule:JobSchedule",
                "majorVersion": 5
            },
            "azurerm_stream_analytics_managed_private_endpoint": {
                "current": "azure:streamanalytics/managedPrivateEndpoint:ManagedPrivateEndpoint",
                "majorVersion": 5
            },
            "azurerm_stream_analytics_output_blob": {
                "current": "azure:streamanalytics/outputBlob:OutputBlob",
                "majorVersion": 5,
                "fields": {
                    "serialization": {
                        "maxItemsOne": true
                    }
                }
            },
            "azurerm_stream_analytics_output_cosmosdb": {
                "current": "azure:streamanalytics/outputCosmosdb:OutputCosmosdb",
                "majorVersion": 5
            },
            "azurerm_stream_analytics_output_eventhub": {
                "current": "azure:streamanalytics/outputEventHub:OutputEventHub",
                "majorVersion": 5,
                "fields": {
                    "property_columns": {
                        "maxItemsOne": false
                    },
                    "serialization": {
                        "maxItemsOne": true
                    }
                }
            },
            "azurerm_stream_analytics_output_function": {
                "current": "azure:streamanalytics/outputFunction:OutputFunction",
                "majorVersion": 5
            },
            "azurerm_stream_analytics_output_mssql": {
                "current": "azure:streamanalytics/outputMssql:OutputMssql",
                "majorVersion": 5
            },
            "azurerm_stream_analytics_output_powerbi": {
                "current": "azure:streamanalytics/outputPowerbi:OutputPowerbi",
                "majorVersion": 5
            },
            "azurerm_stream_analytics_output_servicebus_queue": {
                "current": "azure:streamanalytics/outputServiceBusQueue:OutputServiceBusQueue",
                "majorVersion": 5,
                "fields": {
                    "property_columns": {
                        "maxItemsOne": false
                    },
                    "serialization": {
                        "maxItemsOne": true
                    }
                }
            },
            "azurerm_stream_analytics_output_servicebus_topic": {
                "current": "azure:streamanalytics/outputServicebusTopic:OutputServicebusTopic",
                "majorVersion": 5,
                "fields": {
                    "property_columns": {
                        "maxItemsOne": false
                    },
                    "serialization": {
                        "maxItemsOne": true
                    }
                }
            },
            "azurerm_stream_analytics_output_synapse": {
                "current": "azure:streamanalytics/outputSynapse:OutputSynapse",
                "majorVersion": 5
            },
            "azurerm_stream_analytics_output_table": {
                "current": "azure:streamanalytics/outputTable:OutputTable",
                "majorVersion": 5,
                "fields": {
                    "columns_to_remove": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_stream_analytics_reference_input_blob": {
                "current": "azure:streamanalytics/referenceInputBlob:ReferenceInputBlob",
                "majorVersion": 5,
                "fields": {
                    "serialization": {
                        "maxItemsOne": true
                    }
                }
            },
            "azurerm_stream_analytics_reference_input_mssql": {
                "current": "azure:streamanalytics/referenceInputMssql:ReferenceInputMssql",
                "majorVersion": 5
            },
            "azurerm_stream_analytics_stream_input_blob": {
                "current": "azure:streamanalytics/streamInputBlob:StreamInputBlob",
                "majorVersion": 5,
                "fields": {
                    "serialization": {
                        "maxItemsOne": true
                    }
                }
            },
            "azurerm_stream_analytics_stream_input_eventhub": {
                "current": "azure:streamanalytics/streamInputEventHub:StreamInputEventHub",
                "majorVersion": 5,
                "fields": {
                    "serialization": {
                        "maxItemsOne": true
                    }
                }
            },
            "azurerm_stream_analytics_stream_input_eventhub_v2": {
                "current": "azure:streamanalytics/streamInputEventHubV2:StreamInputEventHubV2",
                "majorVersion": 5,
                "fields": {
                    "serialization": {
                        "maxItemsOne": true
                    }
                }
            },
            "azurerm_stream_analytics_stream_input_iothub": {
                "current": "azure:streamanalytics/streamInputIotHub:StreamInputIotHub",
                "majorVersion": 5,
                "fields": {
                    "serialization": {
                        "maxItemsOne": true
                    }
                }
            },
            "azurerm_subnet": {
                "current": "azure:network/subnet:Subnet",
                "majorVersion": 5,
                "fields": {
                    "address_prefixes": {
                        "maxItemsOne": false
                    },
                    "delegation": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "service_delegation": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "actions": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "service_endpoint_policy_ids": {
                        "maxItemsOne": false
                    },
                    "service_endpoints": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_subnet_nat_gateway_association": {
                "current": "azure:network/subnetNatGatewayAssociation:SubnetNatGatewayAssociation",
                "majorVersion": 5
            },
            "azurerm_subnet_network_security_group_association": {
                "current": "azure:network/subnetNetworkSecurityGroupAssociation:SubnetNetworkSecurityGroupAssociation",
                "majorVersion": 5
            },
            "azurerm_subnet_route_table_association": {
                "current": "azure:network/subnetRouteTableAssociation:SubnetRouteTableAssociation",
                "majorVersion": 5
            },
            "azurerm_subnet_service_endpoint_storage_policy": {
                "current": "azure:network/subnetServiceEndpointStoragePolicy:SubnetServiceEndpointStoragePolicy",
                "majorVersion": 5,
                "fields": {
                    "definition": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "service_resources": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_subscription": {
                "current": "azure:core/subscription:Subscription",
                "majorVersion": 5
            },
            "azurerm_subscription_cost_management_export": {
                "current": "azure:core/subscriptionCostManagementExport:SubscriptionCostManagementExport",
                "majorVersion": 5,
                "fields": {
                    "export_data_options": {
                        "maxItemsOne": true
                    },
                    "export_data_storage_location": {
                        "maxItemsOne": true
                    }
                }
            },
            "azurerm_subscription_cost_management_view": {
                "current": "azure:core/subscriptionCostManagementView:SubscriptionCostManagementView",
                "majorVersion": 5,
                "fields": {
                    "dataset": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "aggregation": {
                                    "maxItemsOne": false
                                },
                                "grouping": {
                                    "maxItemsOne": false
                                },
                                "sorting": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "kpi": {
                        "maxItemsOne": false
                    },
                    "pivot": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_subscription_policy_assignment": {
                "current": "azure:core/subscriptionPolicyAssignment:SubscriptionPolicyAssignment",
                "majorVersion": 5,
                "fields": {
                    "identity": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "identity_ids": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "non_compliance_message": {
                        "maxItemsOne": false
                    },
                    "not_scopes": {
                        "maxItemsOne": false
                    },
                    "overrides": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "selectors": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "in": {
                                                "maxItemsOne": false
                                            },
                                            "not_in": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "resource_selectors": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "selectors": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "in": {
                                                "maxItemsOne": false
                                            },
                                            "not_in": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_subscription_policy_exemption": {
                "current": "azure:core/subscriptionPolicyExemption:SubscriptionPolicyExemption",
                "majorVersion": 5,
                "fields": {
                    "policy_definition_reference_ids": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_subscription_policy_remediation": {
                "current": "azure:core/subscriptionPolicyRemediation:SubscriptionPolicyRemediation",
                "majorVersion": 5,
                "fields": {
                    "location_filters": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_subscription_template_deployment": {
                "current": "azure:core/subscriptionTemplateDeployment:SubscriptionTemplateDeployment",
                "majorVersion": 5
            },
            "azurerm_synapse_firewall_rule": {
                "current": "azure:synapse/firewallRule:FirewallRule",
                "majorVersion": 5
            },
            "azurerm_synapse_integration_runtime_azure": {
                "current": "azure:synapse/integrationRuntimeAzure:IntegrationRuntimeAzure",
                "majorVersion": 5
            },
            "azurerm_synapse_integration_runtime_self_hosted": {
                "current": "azure:synapse/integrationRuntimeSelfHosted:IntegrationRuntimeSelfHosted",
                "majorVersion": 5
            },
            "azurerm_synapse_linked_service": {
                "current": "azure:synapse/linkedService:LinkedService",
                "majorVersion": 5,
                "fields": {
                    "annotations": {
                        "maxItemsOne": false
                    },
                    "integration_runtime": {
                        "maxItemsOne": true
                    }
                }
            },
            "azurerm_synapse_managed_private_endpoint": {
                "current": "azure:synapse/managedPrivateEndpoint:ManagedPrivateEndpoint",
                "majorVersion": 5
            },
            "azurerm_synapse_private_link_hub": {
                "current": "azure:synapse/privateLinkHub:PrivateLinkHub",
                "majorVersion": 5
            },
            "azurerm_synapse_role_assignment": {
                "current": "azure:synapse/roleAssignment:RoleAssignment",
                "majorVersion": 5
            },
            "azurerm_synapse_spark_pool": {
                "current": "azure:synapse/sparkPool:SparkPool",
                "majorVersion": 5,
                "fields": {
                    "auto_pause": {
                        "maxItemsOne": true
                    },
                    "auto_scale": {
                        "maxItemsOne": true
                    },
                    "library_requirement": {
                        "maxItemsOne": true
                    },
                    "spark_config": {
                        "maxItemsOne": true
                    }
                }
            },
            "azurerm_synapse_sql_pool": {
                "current": "azure:synapse/sqlPool:SqlPool",
                "majorVersion": 5,
                "fields": {
                    "restore": {
                        "maxItemsOne": true
                    }
                }
            },
            "azurerm_synapse_sql_pool_extended_auditing_policy": {
                "current": "azure:synapse/sqlPoolExtendedAuditingPolicy:SqlPoolExtendedAuditingPolicy",
                "majorVersion": 5
            },
            "azurerm_synapse_sql_pool_security_alert_policy": {
                "current": "azure:synapse/sqlPoolSecurityAlertPolicy:SqlPoolSecurityAlertPolicy",
                "majorVersion": 5,
                "fields": {
                    "disabled_alerts": {
                        "maxItemsOne": false
                    },
                    "email_addresses": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_synapse_sql_pool_vulnerability_assessment": {
                "current": "azure:synapse/sqlPoolVulnerabilityAssessment:SqlPoolVulnerabilityAssessment",
                "majorVersion": 5,
                "fields": {
                    "recurring_scans": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "emails": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_synapse_sql_pool_vulnerability_assessment_baseline": {
                "current": "azure:synapse/sqlPoolVulnerabilityAssessmentBaseline:SqlPoolVulnerabilityAssessmentBaseline",
                "majorVersion": 5,
                "fields": {
                    "baseline": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "result": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_synapse_sql_pool_workload_classifier": {
                "current": "azure:synapse/sqlPoolWorkloadClassifier:SqlPoolWorkloadClassifier",
                "majorVersion": 5
            },
            "azurerm_synapse_sql_pool_workload_group": {
                "current": "azure:synapse/sqlPoolWorkloadGroup:SqlPoolWorkloadGroup",
                "majorVersion": 5
            },
            "azurerm_synapse_workspace": {
                "current": "azure:synapse/workspace:Workspace",
                "majorVersion": 5,
                "fields": {
                    "aad_admin": {
                        "maxItemsOne": true
                    },
                    "azure_devops_repo": {
                        "maxItemsOne": true
                    },
                    "customer_managed_key": {
                        "maxItemsOne": true
                    },
                    "github_repo": {
                        "maxItemsOne": true
                    },
                    "identity": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "identity_ids": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "linking_allowed_for_aad_tenant_ids": {
                        "maxItemsOne": false
                    },
                    "sql_aad_admin": {
                        "maxItemsOne": true
                    }
                }
            },
            "azurerm_synapse_workspace_aad_admin": {
                "current": "azure:synapse/workspaceAadAdmin:WorkspaceAadAdmin",
                "majorVersion": 5
            },
            "azurerm_synapse_workspace_extended_auditing_policy": {
                "current": "azure:synapse/workspaceExtendedAuditingPolicy:WorkspaceExtendedAuditingPolicy",
                "majorVersion": 5
            },
            "azurerm_synapse_workspace_key": {
                "current": "azure:synapse/workspaceKey:WorkspaceKey",
                "majorVersion": 5
            },
            "azurerm_synapse_workspace_security_alert_policy": {
                "current": "azure:synapse/workspaceSecurityAlertPolicy:WorkspaceSecurityAlertPolicy",
                "majorVersion": 5,
                "fields": {
                    "disabled_alerts": {
                        "maxItemsOne": false
                    },
                    "email_addresses": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_synapse_workspace_sql_aad_admin": {
                "current": "azure:synapse/workspaceSqlAadAdmin:WorkspaceSqlAadAdmin",
                "majorVersion": 5
            },
            "azurerm_synapse_workspace_vulnerability_assessment": {
                "current": "azure:synapse/workspaceVulnerabilityAssessment:WorkspaceVulnerabilityAssessment",
                "majorVersion": 5,
                "fields": {
                    "recurring_scans": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "emails": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_template_deployment": {
                "current": "azure:core/templateDeployment:TemplateDeployment",
                "majorVersion": 5
            },
            "azurerm_tenant_template_deployment": {
                "current": "azure:core/tenantTemplateDeployment:TenantTemplateDeployment",
                "majorVersion": 5
            },
            "azurerm_traffic_manager_azure_endpoint": {
                "current": "azure:network/trafficManagerAzureEndpoint:TrafficManagerAzureEndpoint",
                "majorVersion": 5,
                "fields": {
                    "custom_header": {
                        "maxItemsOne": false
                    },
                    "geo_mappings": {
                        "maxItemsOne": false
                    },
                    "subnet": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_traffic_manager_external_endpoint": {
                "current": "azure:network/trafficManagerExternalEndpoint:TrafficManagerExternalEndpoint",
                "majorVersion": 5,
                "fields": {
                    "custom_header": {
                        "maxItemsOne": false
                    },
                    "geo_mappings": {
                        "maxItemsOne": false
                    },
                    "subnet": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_traffic_manager_nested_endpoint": {
                "current": "azure:network/trafficManagerNestedEndpoint:TrafficManagerNestedEndpoint",
                "majorVersion": 5,
                "fields": {
                    "custom_header": {
                        "maxItemsOne": false
                    },
                    "geo_mappings": {
                        "maxItemsOne": false
                    },
                    "subnet": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_traffic_manager_profile": {
                "current": "azure:network/trafficManagerProfile:TrafficManagerProfile",
                "majorVersion": 5,
                "fields": {
                    "dns_config": {
                        "maxItemsOne": true
                    },
                    "monitor_config": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "custom_header": {
                                    "maxItemsOne": false
                                },
                                "expected_status_code_ranges": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_traffic_manager_profile_legacy": {
                "current": "azure:trafficmanager/profile:Profile",
                "majorVersion": 5,
                "fields": {
                    "dns_config": {
                        "maxItemsOne": true
                    },
                    "monitor_config": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "custom_header": {
                                    "maxItemsOne": false
                                },
                                "expected_status_code_ranges": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_user_assigned_identity": {
                "current": "azure:authorization/userAssignedIdentity:UserAssignedIdentity",
                "majorVersion": 5
            },
            "azurerm_user_assigned_identity_legacy": {
                "current": "azure:msi/userAssignedIdentity:UserAssignedIdentity",
                "majorVersion": 5
            },
            "azurerm_video_analyzer": {
                "current": "azure:videoanalyzer/analyzer:Analyzer",
                "majorVersion": 5,
                "fields": {
                    "identity": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "identity_ids": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "storage_account": {
                        "maxItemsOne": true
                    }
                }
            },
            "azurerm_video_analyzer_edge_module": {
                "current": "azure:videoanalyzer/edgeModule:EdgeModule",
                "majorVersion": 5
            },
            "azurerm_virtual_desktop_application": {
                "current": "azure:desktopvirtualization/application:Application",
                "majorVersion": 5
            },
            "azurerm_virtual_desktop_application_group": {
                "current": "azure:desktopvirtualization/applicationGroup:ApplicationGroup",
                "majorVersion": 5
            },
            "azurerm_virtual_desktop_host_pool": {
                "current": "azure:desktopvirtualization/hostPool:HostPool",
                "majorVersion": 5,
                "fields": {
                    "scheduled_agent_updates": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "schedule": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_virtual_desktop_host_pool_registration_info": {
                "current": "azure:desktopvirtualization/getHostPoolRegistrationInfo:getHostPoolRegistrationInfo",
                "majorVersion": 5
            },
            "azurerm_virtual_desktop_scaling_plan": {
                "current": "azure:desktopvirtualization/scalingPlan:ScalingPlan",
                "majorVersion": 5,
                "fields": {
                    "host_pool": {
                        "maxItemsOne": false
                    },
                    "schedule": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "days_of_week": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_virtual_desktop_workspace": {
                "current": "azure:desktopvirtualization/workspace:Workspace",
                "majorVersion": 5
            },
            "azurerm_virtual_desktop_workspace_application_group_association": {
                "current": "azure:desktopvirtualization/workspaceApplicationGroupAssociation:WorkspaceApplicationGroupAssociation",
                "majorVersion": 5
            },
            "azurerm_virtual_hub": {
                "current": "azure:network/virtualHub:VirtualHub",
                "majorVersion": 5,
                "fields": {
                    "route": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "address_prefixes": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "virtual_router_ips": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_virtual_hub_bgp_connection": {
                "current": "azure:network/bgpConnection:BgpConnection",
                "majorVersion": 5
            },
            "azurerm_virtual_hub_connection": {
                "current": "azure:network/virtualHubConnection:VirtualHubConnection",
                "majorVersion": 5,
                "fields": {
                    "routing": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "propagated_route_table": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "labels": {
                                                "maxItemsOne": false
                                            },
                                            "route_table_ids": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "static_vnet_route": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "address_prefixes": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_virtual_hub_ip": {
                "current": "azure:network/virtualHubIp:VirtualHubIp",
                "majorVersion": 5
            },
            "azurerm_virtual_hub_route_table": {
                "current": "azure:network/virtualHubRouteTable:VirtualHubRouteTable",
                "majorVersion": 5,
                "fields": {
                    "labels": {
                        "maxItemsOne": false
                    },
                    "route": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "destinations": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_virtual_hub_route_table_route": {
                "current": "azure:network/virtualHubRouteTableRoute:VirtualHubRouteTableRoute",
                "majorVersion": 5,
                "fields": {
                    "destinations": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_virtual_hub_routing_intent": {
                "current": "azure:network/routingIntent:RoutingIntent",
                "majorVersion": 5,
                "fields": {
                    "routing_policy": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "destinations": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_virtual_hub_security_partner_provider": {
                "current": "azure:network/securityPartnerProvider:SecurityPartnerProvider",
                "majorVersion": 5
            },
            "azurerm_virtual_machine": {
                "current": "azure:compute/virtualMachine:VirtualMachine",
                "majorVersion": 5,
                "fields": {
                    "additional_capabilities": {
                        "maxItemsOne": true
                    },
                    "boot_diagnostics": {
                        "maxItemsOne": true
                    },
                    "identity": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "identity_ids": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "network_interface_ids": {
                        "maxItemsOne": false
                    },
                    "os_profile": {
                        "maxItemsOne": true
                    },
                    "os_profile_linux_config": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "ssh_keys": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "os_profile_secrets": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "vault_certificates": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "os_profile_windows_config": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "additional_unattend_config": {
                                    "maxItemsOne": false
                                },
                                "winrm": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "plan": {
                        "maxItemsOne": true
                    },
                    "storage_data_disk": {
                        "maxItemsOne": false
                    },
                    "storage_image_reference": {
                        "maxItemsOne": true
                    },
                    "storage_os_disk": {
                        "maxItemsOne": true
                    },
                    "zones": {
                        "maxItemsOne": true
                    }
                }
            },
            "azurerm_virtual_machine_data_disk_attachment": {
                "current": "azure:compute/dataDiskAttachment:DataDiskAttachment",
                "majorVersion": 5
            },
            "azurerm_virtual_machine_extension": {
                "current": "azure:compute/extension:Extension",
                "majorVersion": 5,
                "fields": {
                    "protected_settings_from_key_vault": {
                        "maxItemsOne": true
                    },
                    "provision_after_extensions": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_virtual_machine_packet_capture": {
                "current": "azure:compute/packetCapture:PacketCapture",
                "majorVersion": 5,
                "fields": {
                    "filter": {
                        "maxItemsOne": false
                    },
                    "storage_location": {
                        "maxItemsOne": true
                    }
                }
            },
            "azurerm_virtual_machine_scale_set": {
                "current": "azure:compute/scaleSet:ScaleSet",
                "majorVersion": 5,
                "fields": {
                    "boot_diagnostics": {
                        "maxItemsOne": true
                    },
                    "extension": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "provision_after_extensions": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "identity": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "identity_ids": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "network_profile": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "dns_settings": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "dns_servers": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "ip_configuration": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "application_gateway_backend_address_pool_ids": {
                                                "maxItemsOne": false
                                            },
                                            "application_security_group_ids": {
                                                "maxItemsOne": false
                                            },
                                            "load_balancer_backend_address_pool_ids": {
                                                "maxItemsOne": false
                                            },
                                            "load_balancer_inbound_nat_rules_ids": {
                                                "maxItemsOne": false
                                            },
                                            "public_ip_address_configuration": {
                                                "maxItemsOne": true
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "os_profile": {
                        "maxItemsOne": true
                    },
                    "os_profile_linux_config": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "ssh_keys": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "os_profile_secrets": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "vault_certificates": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "os_profile_windows_config": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "additional_unattend_config": {
                                    "maxItemsOne": false
                                },
                                "winrm": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "plan": {
                        "maxItemsOne": true
                    },
                    "rolling_upgrade_policy": {
                        "maxItemsOne": true
                    },
                    "sku": {
                        "maxItemsOne": true
                    },
                    "storage_profile_data_disk": {
                        "maxItemsOne": false
                    },
                    "storage_profile_image_reference": {
                        "maxItemsOne": true
                    },
                    "storage_profile_os_disk": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "vhd_containers": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "zones": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_virtual_machine_scale_set_extension": {
                "current": "azure:compute/virtualMachineScaleSetExtension:VirtualMachineScaleSetExtension",
                "majorVersion": 5,
                "fields": {
                    "protected_settings_from_key_vault": {
                        "maxItemsOne": true
                    },
                    "provision_after_extensions": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_virtual_machine_scale_set_packet_capture": {
                "current": "azure:compute/scaleSetPacketCapture:ScaleSetPacketCapture",
                "majorVersion": 5,
                "fields": {
                    "filter": {
                        "maxItemsOne": false
                    },
                    "machine_scope": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "exclude_instance_ids": {
                                    "maxItemsOne": false
                                },
                                "include_instance_ids": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "storage_location": {
                        "maxItemsOne": true
                    }
                }
            },
            "azurerm_virtual_network": {
                "current": "azure:network/virtualNetwork:VirtualNetwork",
                "majorVersion": 5,
                "fields": {
                    "address_space": {
                        "maxItemsOne": false
                    },
                    "ddos_protection_plan": {
                        "maxItemsOne": true
                    },
                    "dns_servers": {
                        "maxItemsOne": false
                    },
                    "encryption": {
                        "maxItemsOne": true
                    },
                    "subnet": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_virtual_network_dns_servers": {
                "current": "azure:network/virtualNetworkDnsServers:VirtualNetworkDnsServers",
                "majorVersion": 5,
                "fields": {
                    "dns_servers": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_virtual_network_gateway": {
                "current": "azure:network/virtualNetworkGateway:VirtualNetworkGateway",
                "majorVersion": 5,
                "fields": {
                    "bgp_settings": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "peering_addresses": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "apipa_addresses": {
                                                "maxItemsOne": false
                                            },
                                            "default_addresses": {
                                                "maxItemsOne": false
                                            },
                                            "tunnel_ip_addresses": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "custom_route": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "address_prefixes": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "ip_configuration": {
                        "maxItemsOne": false
                    },
                    "policy_group": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "policy_member": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "vpn_client_configuration": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "address_space": {
                                    "maxItemsOne": false
                                },
                                "ipsec_policy": {
                                    "maxItemsOne": true
                                },
                                "radius_server": {
                                    "maxItemsOne": false
                                },
                                "revoked_certificate": {
                                    "maxItemsOne": false
                                },
                                "root_certificate": {
                                    "maxItemsOne": false
                                },
                                "virtual_network_gateway_client_connection": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "address_prefixes": {
                                                "maxItemsOne": false
                                            },
                                            "policy_group_names": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "vpn_auth_types": {
                                    "maxItemsOne": false
                                },
                                "vpn_client_protocols": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_virtual_network_gateway_connection": {
                "current": "azure:network/virtualNetworkGatewayConnection:VirtualNetworkGatewayConnection",
                "majorVersion": 5,
                "fields": {
                    "custom_bgp_addresses": {
                        "maxItemsOne": true
                    },
                    "egress_nat_rule_ids": {
                        "maxItemsOne": false
                    },
                    "ingress_nat_rule_ids": {
                        "maxItemsOne": false
                    },
                    "ipsec_policy": {
                        "maxItemsOne": true
                    },
                    "traffic_selector_policy": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "local_address_cidrs": {
                                    "maxItemsOne": false
                                },
                                "remote_address_cidrs": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_virtual_network_gateway_nat_rule": {
                "current": "azure:network/virtualNetworkGatewayNatRule:VirtualNetworkGatewayNatRule",
                "majorVersion": 5,
                "fields": {
                    "external_mapping": {
                        "maxItemsOne": false
                    },
                    "internal_mapping": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_virtual_network_peering": {
                "current": "azure:network/virtualNetworkPeering:VirtualNetworkPeering",
                "majorVersion": 5
            },
            "azurerm_virtual_wan": {
                "current": "azure:network/virtualWan:VirtualWan",
                "majorVersion": 5
            },
            "azurerm_vmware_cluster": {
                "current": "azure:avs/cluster:Cluster",
                "majorVersion": 5,
                "fields": {
                    "hosts": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_vmware_express_route_authorization": {
                "current": "azure:avs/expressRouteAuthorization:ExpressRouteAuthorization",
                "majorVersion": 5
            },
            "azurerm_vmware_netapp_volume_attachment": {
                "current": "azure:avs/netappVolumeAttachment:NetappVolumeAttachment",
                "majorVersion": 5
            },
            "azurerm_vmware_private_cloud": {
                "current": "azure:avs/privateCloud:PrivateCloud",
                "majorVersion": 5,
                "fields": {
                    "circuit": {
                        "maxItemsOne": false
                    },
                    "management_cluster": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "hosts": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_voice_services_communications_gateway": {
                "current": "azure:voice/servicesCommunicationsGateway:ServicesCommunicationsGateway",
                "majorVersion": 5,
                "fields": {
                    "emergency_dial_strings": {
                        "maxItemsOne": false
                    },
                    "platforms": {
                        "maxItemsOne": false
                    },
                    "service_location": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "allowed_media_source_address_prefixes": {
                                    "maxItemsOne": false
                                },
                                "allowed_signaling_source_address_prefixes": {
                                    "maxItemsOne": false
                                },
                                "esrp_addresses": {
                                    "maxItemsOne": false
                                },
                                "operator_addresses": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_voice_services_communications_gateway_test_line": {
                "current": "azure:voice/servicesCommunicationsGatewayTestLine:ServicesCommunicationsGatewayTestLine",
                "majorVersion": 5
            },
            "azurerm_vpn_gateway": {
                "current": "azure:network/vpnGateway:VpnGateway",
                "majorVersion": 5,
                "fields": {
                    "bgp_settings": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "instance_0_bgp_peering_address": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "custom_ips": {
                                                "maxItemsOne": false
                                            },
                                            "default_ips": {
                                                "maxItemsOne": false
                                            },
                                            "tunnel_ips": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "instance_1_bgp_peering_address": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "custom_ips": {
                                                "maxItemsOne": false
                                            },
                                            "default_ips": {
                                                "maxItemsOne": false
                                            },
                                            "tunnel_ips": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_vpn_gateway_connection": {
                "current": "azure:network/vpnGatewayConnection:VpnGatewayConnection",
                "majorVersion": 5,
                "fields": {
                    "routing": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "propagated_route_table": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "labels": {
                                                "maxItemsOne": false
                                            },
                                            "route_table_ids": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "traffic_selector_policy": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "local_address_ranges": {
                                    "maxItemsOne": false
                                },
                                "remote_address_ranges": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "vpn_link": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "custom_bgp_address": {
                                    "maxItemsOne": false
                                },
                                "egress_nat_rule_ids": {
                                    "maxItemsOne": false
                                },
                                "ingress_nat_rule_ids": {
                                    "maxItemsOne": false
                                },
                                "ipsec_policy": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_vpn_gateway_nat_rule": {
                "current": "azure:network/vnpGatewayNatRule:VnpGatewayNatRule",
                "majorVersion": 5,
                "fields": {
                    "external_address_space_mappings": {
                        "maxItemsOne": false
                    },
                    "external_mapping": {
                        "maxItemsOne": false
                    },
                    "internal_address_space_mappings": {
                        "maxItemsOne": false
                    },
                    "internal_mapping": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_vpn_server_configuration": {
                "current": "azure:network/vpnServerConfiguration:VpnServerConfiguration",
                "majorVersion": 5,
                "fields": {
                    "azure_active_directory_authentication": {
                        "maxItemsOne": false
                    },
                    "client_revoked_certificate": {
                        "maxItemsOne": false
                    },
                    "client_root_certificate": {
                        "maxItemsOne": false
                    },
                    "ipsec_policy": {
                        "maxItemsOne": true
                    },
                    "radius": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "client_root_certificate": {
                                    "maxItemsOne": false
                                },
                                "server": {
                                    "maxItemsOne": false
                                },
                                "server_root_certificate": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "vpn_authentication_types": {
                        "maxItemsOne": false
                    },
                    "vpn_protocols": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_vpn_server_configuration_policy_group": {
                "current": "azure:network/vpnServerConfigurationPolicyGroup:VpnServerConfigurationPolicyGroup",
                "majorVersion": 5,
                "fields": {
                    "policy": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_vpn_site": {
                "current": "azure:network/vpnSite:VpnSite",
                "majorVersion": 5,
                "fields": {
                    "address_cidrs": {
                        "maxItemsOne": false
                    },
                    "link": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "bgp": {
                                    "maxItemsOne": true
                                }
                            }
                        }
                    },
                    "o365_policy": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "traffic_category": {
                                    "maxItemsOne": true
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_web_app_active_slot": {
                "current": "azure:appservice/webAppActiveSlot:WebAppActiveSlot",
                "majorVersion": 5
            },
            "azurerm_web_app_hybrid_connection": {
                "current": "azure:appservice/webAppHybridConnection:WebAppHybridConnection",
                "majorVersion": 5
            },
            "azurerm_web_application_firewall_policy": {
                "current": "azure:waf/policy:Policy",
                "majorVersion": 5,
                "fields": {
                    "custom_rules": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "match_conditions": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "match_values": {
                                                "maxItemsOne": false
                                            },
                                            "match_variables": {
                                                "maxItemsOne": false
                                            },
                                            "transforms": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "http_listener_ids": {
                        "maxItemsOne": false
                    },
                    "managed_rules": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "exclusion": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "excluded_rule_set": {
                                                "maxItemsOne": true,
                                                "elem": {
                                                    "fields": {
                                                        "rule_group": {
                                                            "maxItemsOne": false,
                                                            "elem": {
                                                                "fields": {
                                                                    "excluded_rules": {
                                                                        "maxItemsOne": false
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "managed_rule_set": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "rule_group_override": {
                                                "maxItemsOne": false,
                                                "elem": {
                                                    "fields": {
                                                        "disabled_rules": {
                                                            "maxItemsOne": false
                                                        },
                                                        "rule": {
                                                            "maxItemsOne": false
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "path_based_rule_ids": {
                        "maxItemsOne": false
                    },
                    "policy_settings": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "log_scrubbing": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "rule": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_web_pubsub": {
                "current": "azure:webpubsub/service:Service",
                "majorVersion": 5,
                "fields": {
                    "identity": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "identity_ids": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "live_trace": {
                        "maxItemsOne": true
                    }
                }
            },
            "azurerm_web_pubsub_custom_certificate": {
                "current": "azure:webpubsub/customCertificate:CustomCertificate",
                "majorVersion": 5
            },
            "azurerm_web_pubsub_custom_domain": {
                "current": "azure:webpubsub/customDomain:CustomDomain",
                "majorVersion": 5
            },
            "azurerm_web_pubsub_hub": {
                "current": "azure:webpubsub/hub:Hub",
                "majorVersion": 5,
                "fields": {
                    "event_handler": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "auth": {
                                    "maxItemsOne": true
                                },
                                "system_events": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "event_listener": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "system_event_name_filter": {
                                    "maxItemsOne": false
                                },
                                "user_event_name_filter": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_web_pubsub_network_acl": {
                "current": "azure:webpubsub/networkAcl:NetworkAcl",
                "majorVersion": 5,
                "fields": {
                    "private_endpoint": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "allowed_request_types": {
                                    "maxItemsOne": false
                                },
                                "denied_request_types": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "public_network": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "allowed_request_types": {
                                    "maxItemsOne": false
                                },
                                "denied_request_types": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_web_pubsub_shared_private_link_resource": {
                "current": "azure:webpubsub/sharedPrivateLinkResource:SharedPrivateLinkResource",
                "majorVersion": 5
            },
            "azurerm_windows_function_app": {
                "current": "azure:appservice/windowsFunctionApp:WindowsFunctionApp",
                "majorVersion": 5,
                "fields": {
                    "auth_settings": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "active_directory": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "allowed_audiences": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "allowed_external_redirect_urls": {
                                    "maxItemsOne": false
                                },
                                "facebook": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "oauth_scopes": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "github": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "oauth_scopes": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "google": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "oauth_scopes": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "microsoft": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "oauth_scopes": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "twitter": {
                                    "maxItemsOne": true
                                }
                            }
                        }
                    },
                    "auth_settings_v2": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "active_directory_v2": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "allowed_applications": {
                                                "maxItemsOne": false
                                            },
                                            "allowed_audiences": {
                                                "maxItemsOne": false
                                            },
                                            "allowed_groups": {
                                                "maxItemsOne": false
                                            },
                                            "allowed_identities": {
                                                "maxItemsOne": false
                                            },
                                            "jwt_allowed_client_applications": {
                                                "maxItemsOne": false
                                            },
                                            "jwt_allowed_groups": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "apple_v2": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "login_scopes": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "azure_static_web_app_v2": {
                                    "maxItemsOne": true
                                },
                                "custom_oidc_v2": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "scopes": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "excluded_paths": {
                                    "maxItemsOne": false
                                },
                                "facebook_v2": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "login_scopes": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "github_v2": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "login_scopes": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "google_v2": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "allowed_audiences": {
                                                "maxItemsOne": false
                                            },
                                            "login_scopes": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "login": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "allowed_external_redirect_urls": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "microsoft_v2": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "allowed_audiences": {
                                                "maxItemsOne": false
                                            },
                                            "login_scopes": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "twitter_v2": {
                                    "maxItemsOne": true
                                }
                            }
                        }
                    },
                    "backup": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "schedule": {
                                    "maxItemsOne": true
                                }
                            }
                        }
                    },
                    "connection_string": {
                        "maxItemsOne": false
                    },
                    "identity": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "identity_ids": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "outbound_ip_address_list": {
                        "maxItemsOne": false
                    },
                    "possible_outbound_ip_address_list": {
                        "maxItemsOne": false
                    },
                    "site_config": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "app_service_logs": {
                                    "maxItemsOne": true
                                },
                                "application_stack": {
                                    "maxItemsOne": true
                                },
                                "cors": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "allowed_origins": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "default_documents": {
                                    "maxItemsOne": false
                                },
                                "ip_restriction": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "headers": {
                                                "maxItemsOne": true,
                                                "elem": {
                                                    "fields": {
                                                        "x_azure_fdid": {
                                                            "maxItemsOne": false
                                                        },
                                                        "x_fd_health_probe": {
                                                            "maxItemsOne": true
                                                        },
                                                        "x_forwarded_for": {
                                                            "maxItemsOne": false
                                                        },
                                                        "x_forwarded_host": {
                                                            "maxItemsOne": false
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "scm_ip_restriction": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "headers": {
                                                "maxItemsOne": true,
                                                "elem": {
                                                    "fields": {
                                                        "x_azure_fdid": {
                                                            "maxItemsOne": false
                                                        },
                                                        "x_fd_health_probe": {
                                                            "maxItemsOne": true
                                                        },
                                                        "x_forwarded_for": {
                                                            "maxItemsOne": false
                                                        },
                                                        "x_forwarded_host": {
                                                            "maxItemsOne": false
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "site_credential": {
                        "maxItemsOne": false
                    },
                    "sticky_settings": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "app_setting_names": {
                                    "maxItemsOne": false
                                },
                                "connection_string_names": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "storage_account": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_windows_function_app_slot": {
                "current": "azure:appservice/windowsFunctionAppSlot:WindowsFunctionAppSlot",
                "majorVersion": 5,
                "fields": {
                    "auth_settings": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "active_directory": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "allowed_audiences": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "allowed_external_redirect_urls": {
                                    "maxItemsOne": false
                                },
                                "facebook": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "oauth_scopes": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "github": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "oauth_scopes": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "google": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "oauth_scopes": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "microsoft": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "oauth_scopes": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "twitter": {
                                    "maxItemsOne": true
                                }
                            }
                        }
                    },
                    "auth_settings_v2": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "active_directory_v2": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "allowed_applications": {
                                                "maxItemsOne": false
                                            },
                                            "allowed_audiences": {
                                                "maxItemsOne": false
                                            },
                                            "allowed_groups": {
                                                "maxItemsOne": false
                                            },
                                            "allowed_identities": {
                                                "maxItemsOne": false
                                            },
                                            "jwt_allowed_client_applications": {
                                                "maxItemsOne": false
                                            },
                                            "jwt_allowed_groups": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "apple_v2": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "login_scopes": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "azure_static_web_app_v2": {
                                    "maxItemsOne": true
                                },
                                "custom_oidc_v2": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "scopes": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "excluded_paths": {
                                    "maxItemsOne": false
                                },
                                "facebook_v2": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "login_scopes": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "github_v2": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "login_scopes": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "google_v2": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "allowed_audiences": {
                                                "maxItemsOne": false
                                            },
                                            "login_scopes": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "login": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "allowed_external_redirect_urls": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "microsoft_v2": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "allowed_audiences": {
                                                "maxItemsOne": false
                                            },
                                            "login_scopes": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "twitter_v2": {
                                    "maxItemsOne": true
                                }
                            }
                        }
                    },
                    "backup": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "schedule": {
                                    "maxItemsOne": true
                                }
                            }
                        }
                    },
                    "connection_string": {
                        "maxItemsOne": false
                    },
                    "identity": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "identity_ids": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "outbound_ip_address_list": {
                        "maxItemsOne": false
                    },
                    "possible_outbound_ip_address_list": {
                        "maxItemsOne": false
                    },
                    "site_config": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "app_service_logs": {
                                    "maxItemsOne": true
                                },
                                "application_stack": {
                                    "maxItemsOne": true
                                },
                                "cors": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "allowed_origins": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "default_documents": {
                                    "maxItemsOne": false
                                },
                                "ip_restriction": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "headers": {
                                                "maxItemsOne": true,
                                                "elem": {
                                                    "fields": {
                                                        "x_azure_fdid": {
                                                            "maxItemsOne": false
                                                        },
                                                        "x_fd_health_probe": {
                                                            "maxItemsOne": true
                                                        },
                                                        "x_forwarded_for": {
                                                            "maxItemsOne": false
                                                        },
                                                        "x_forwarded_host": {
                                                            "maxItemsOne": false
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "scm_ip_restriction": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "headers": {
                                                "maxItemsOne": true,
                                                "elem": {
                                                    "fields": {
                                                        "x_azure_fdid": {
                                                            "maxItemsOne": false
                                                        },
                                                        "x_fd_health_probe": {
                                                            "maxItemsOne": true
                                                        },
                                                        "x_forwarded_for": {
                                                            "maxItemsOne": false
                                                        },
                                                        "x_forwarded_host": {
                                                            "maxItemsOne": false
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "site_credential": {
                        "maxItemsOne": false
                    },
                    "storage_account": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_windows_virtual_machine": {
                "current": "azure:compute/windowsVirtualMachine:WindowsVirtualMachine",
                "majorVersion": 5,
                "fields": {
                    "additional_capabilities": {
                        "maxItemsOne": true
                    },
                    "additional_unattend_content": {
                        "maxItemsOne": false
                    },
                    "boot_diagnostics": {
                        "maxItemsOne": true
                    },
                    "gallery_application": {
                        "maxItemsOne": false
                    },
                    "identity": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "identity_ids": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "network_interface_ids": {
                        "maxItemsOne": false
                    },
                    "os_disk": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "diff_disk_settings": {
                                    "maxItemsOne": true
                                }
                            }
                        }
                    },
                    "plan": {
                        "maxItemsOne": true
                    },
                    "private_ip_addresses": {
                        "maxItemsOne": false
                    },
                    "public_ip_addresses": {
                        "maxItemsOne": false
                    },
                    "secret": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "certificate": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "source_image_reference": {
                        "maxItemsOne": true
                    },
                    "termination_notification": {
                        "maxItemsOne": true
                    },
                    "winrm_listener": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_windows_virtual_machine_scale_set": {
                "current": "azure:compute/windowsVirtualMachineScaleSet:WindowsVirtualMachineScaleSet",
                "majorVersion": 5,
                "fields": {
                    "additional_capabilities": {
                        "maxItemsOne": true
                    },
                    "additional_unattend_content": {
                        "maxItemsOne": false
                    },
                    "automatic_instance_repair": {
                        "maxItemsOne": true
                    },
                    "automatic_os_upgrade_policy": {
                        "maxItemsOne": true
                    },
                    "boot_diagnostics": {
                        "maxItemsOne": true
                    },
                    "data_disk": {
                        "maxItemsOne": false
                    },
                    "extension": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "protected_settings_from_key_vault": {
                                    "maxItemsOne": true
                                },
                                "provision_after_extensions": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "gallery_application": {
                        "maxItemsOne": false
                    },
                    "gallery_applications": {
                        "maxItemsOne": false
                    },
                    "identity": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "identity_ids": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "network_interface": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "dns_servers": {
                                    "maxItemsOne": false
                                },
                                "ip_configuration": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "application_gateway_backend_address_pool_ids": {
                                                "maxItemsOne": false
                                            },
                                            "application_security_group_ids": {
                                                "maxItemsOne": false
                                            },
                                            "load_balancer_backend_address_pool_ids": {
                                                "maxItemsOne": false
                                            },
                                            "load_balancer_inbound_nat_rules_ids": {
                                                "maxItemsOne": false
                                            },
                                            "public_ip_address": {
                                                "maxItemsOne": false,
                                                "elem": {
                                                    "fields": {
                                                        "ip_tag": {
                                                            "maxItemsOne": false
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "os_disk": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "diff_disk_settings": {
                                    "maxItemsOne": true
                                }
                            }
                        }
                    },
                    "plan": {
                        "maxItemsOne": true
                    },
                    "rolling_upgrade_policy": {
                        "maxItemsOne": true
                    },
                    "scale_in": {
                        "maxItemsOne": true
                    },
                    "secret": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "certificate": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "source_image_reference": {
                        "maxItemsOne": true
                    },
                    "spot_restore": {
                        "maxItemsOne": true
                    },
                    "terminate_notification": {
                        "maxItemsOne": true
                    },
                    "termination_notification": {
                        "maxItemsOne": true
                    },
                    "winrm_listener": {
                        "maxItemsOne": false
                    },
                    "zones": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_windows_web_app": {
                "current": "azure:appservice/windowsWebApp:WindowsWebApp",
                "majorVersion": 5,
                "fields": {
                    "auth_settings": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "active_directory": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "allowed_audiences": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "allowed_external_redirect_urls": {
                                    "maxItemsOne": false
                                },
                                "facebook": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "oauth_scopes": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "github": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "oauth_scopes": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "google": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "oauth_scopes": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "microsoft": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "oauth_scopes": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "twitter": {
                                    "maxItemsOne": true
                                }
                            }
                        }
                    },
                    "auth_settings_v2": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "active_directory_v2": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "allowed_applications": {
                                                "maxItemsOne": false
                                            },
                                            "allowed_audiences": {
                                                "maxItemsOne": false
                                            },
                                            "allowed_groups": {
                                                "maxItemsOne": false
                                            },
                                            "allowed_identities": {
                                                "maxItemsOne": false
                                            },
                                            "jwt_allowed_client_applications": {
                                                "maxItemsOne": false
                                            },
                                            "jwt_allowed_groups": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "apple_v2": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "login_scopes": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "azure_static_web_app_v2": {
                                    "maxItemsOne": true
                                },
                                "custom_oidc_v2": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "scopes": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "excluded_paths": {
                                    "maxItemsOne": false
                                },
                                "facebook_v2": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "login_scopes": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "github_v2": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "login_scopes": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "google_v2": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "allowed_audiences": {
                                                "maxItemsOne": false
                                            },
                                            "login_scopes": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "login": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "allowed_external_redirect_urls": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "microsoft_v2": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "allowed_audiences": {
                                                "maxItemsOne": false
                                            },
                                            "login_scopes": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "twitter_v2": {
                                    "maxItemsOne": true
                                }
                            }
                        }
                    },
                    "backup": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "schedule": {
                                    "maxItemsOne": true
                                }
                            }
                        }
                    },
                    "connection_string": {
                        "maxItemsOne": false
                    },
                    "identity": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "identity_ids": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "logs": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "application_logs": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "azure_blob_storage": {
                                                "maxItemsOne": true
                                            }
                                        }
                                    }
                                },
                                "http_logs": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "azure_blob_storage": {
                                                "maxItemsOne": true
                                            },
                                            "file_system": {
                                                "maxItemsOne": true
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "outbound_ip_address_list": {
                        "maxItemsOne": false
                    },
                    "possible_outbound_ip_address_list": {
                        "maxItemsOne": false
                    },
                    "site_config": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "application_stack": {
                                    "maxItemsOne": true
                                },
                                "auto_heal_setting": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "action": {
                                                "maxItemsOne": true,
                                                "elem": {
                                                    "fields": {
                                                        "custom_action": {
                                                            "maxItemsOne": true
                                                        }
                                                    }
                                                }
                                            },
                                            "trigger": {
                                                "maxItemsOne": true,
                                                "elem": {
                                                    "fields": {
                                                        "requests": {
                                                            "maxItemsOne": true
                                                        },
                                                        "slow_request": {
                                                            "maxItemsOne": false
                                                        },
                                                        "status_code": {
                                                            "maxItemsOne": false
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "cors": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "allowed_origins": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "default_documents": {
                                    "maxItemsOne": false
                                },
                                "ip_restriction": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "headers": {
                                                "maxItemsOne": true,
                                                "elem": {
                                                    "fields": {
                                                        "x_azure_fdid": {
                                                            "maxItemsOne": false
                                                        },
                                                        "x_fd_health_probe": {
                                                            "maxItemsOne": true
                                                        },
                                                        "x_forwarded_for": {
                                                            "maxItemsOne": false
                                                        },
                                                        "x_forwarded_host": {
                                                            "maxItemsOne": false
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "scm_ip_restriction": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "headers": {
                                                "maxItemsOne": true,
                                                "elem": {
                                                    "fields": {
                                                        "x_azure_fdid": {
                                                            "maxItemsOne": false
                                                        },
                                                        "x_fd_health_probe": {
                                                            "maxItemsOne": true
                                                        },
                                                        "x_forwarded_for": {
                                                            "maxItemsOne": false
                                                        },
                                                        "x_forwarded_host": {
                                                            "maxItemsOne": false
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "virtual_application": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "virtual_directory": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "site_credential": {
                        "maxItemsOne": false
                    },
                    "sticky_settings": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "app_setting_names": {
                                    "maxItemsOne": false
                                },
                                "connection_string_names": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "storage_account": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_windows_web_app_slot": {
                "current": "azure:appservice/windowsWebAppSlot:WindowsWebAppSlot",
                "majorVersion": 5,
                "fields": {
                    "auth_settings": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "active_directory": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "allowed_audiences": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "allowed_external_redirect_urls": {
                                    "maxItemsOne": false
                                },
                                "facebook": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "oauth_scopes": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "github": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "oauth_scopes": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "google": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "oauth_scopes": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "microsoft": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "oauth_scopes": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "twitter": {
                                    "maxItemsOne": true
                                }
                            }
                        }
                    },
                    "auth_settings_v2": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "active_directory_v2": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "allowed_applications": {
                                                "maxItemsOne": false
                                            },
                                            "allowed_audiences": {
                                                "maxItemsOne": false
                                            },
                                            "allowed_groups": {
                                                "maxItemsOne": false
                                            },
                                            "allowed_identities": {
                                                "maxItemsOne": false
                                            },
                                            "jwt_allowed_client_applications": {
                                                "maxItemsOne": false
                                            },
                                            "jwt_allowed_groups": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "apple_v2": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "login_scopes": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "azure_static_web_app_v2": {
                                    "maxItemsOne": true
                                },
                                "custom_oidc_v2": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "scopes": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "excluded_paths": {
                                    "maxItemsOne": false
                                },
                                "facebook_v2": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "login_scopes": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "github_v2": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "login_scopes": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "google_v2": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "allowed_audiences": {
                                                "maxItemsOne": false
                                            },
                                            "login_scopes": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "login": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "allowed_external_redirect_urls": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "microsoft_v2": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "allowed_audiences": {
                                                "maxItemsOne": false
                                            },
                                            "login_scopes": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "twitter_v2": {
                                    "maxItemsOne": true
                                }
                            }
                        }
                    },
                    "backup": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "schedule": {
                                    "maxItemsOne": true
                                }
                            }
                        }
                    },
                    "connection_string": {
                        "maxItemsOne": false
                    },
                    "identity": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "identity_ids": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "logs": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "application_logs": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "azure_blob_storage": {
                                                "maxItemsOne": true
                                            }
                                        }
                                    }
                                },
                                "http_logs": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "azure_blob_storage": {
                                                "maxItemsOne": true
                                            },
                                            "file_system": {
                                                "maxItemsOne": true
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "outbound_ip_address_list": {
                        "maxItemsOne": false
                    },
                    "possible_outbound_ip_address_list": {
                        "maxItemsOne": false
                    },
                    "site_config": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "application_stack": {
                                    "maxItemsOne": true
                                },
                                "auto_heal_setting": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "action": {
                                                "maxItemsOne": true,
                                                "elem": {
                                                    "fields": {
                                                        "custom_action": {
                                                            "maxItemsOne": true
                                                        }
                                                    }
                                                }
                                            },
                                            "trigger": {
                                                "maxItemsOne": true,
                                                "elem": {
                                                    "fields": {
                                                        "requests": {
                                                            "maxItemsOne": true
                                                        },
                                                        "slow_request": {
                                                            "maxItemsOne": false
                                                        },
                                                        "status_code": {
                                                            "maxItemsOne": false
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "cors": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "allowed_origins": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "default_documents": {
                                    "maxItemsOne": false
                                },
                                "ip_restriction": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "headers": {
                                                "maxItemsOne": true,
                                                "elem": {
                                                    "fields": {
                                                        "x_azure_fdid": {
                                                            "maxItemsOne": false
                                                        },
                                                        "x_fd_health_probe": {
                                                            "maxItemsOne": true
                                                        },
                                                        "x_forwarded_for": {
                                                            "maxItemsOne": false
                                                        },
                                                        "x_forwarded_host": {
                                                            "maxItemsOne": false
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "scm_ip_restriction": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "headers": {
                                                "maxItemsOne": true,
                                                "elem": {
                                                    "fields": {
                                                        "x_azure_fdid": {
                                                            "maxItemsOne": false
                                                        },
                                                        "x_fd_health_probe": {
                                                            "maxItemsOne": true
                                                        },
                                                        "x_forwarded_for": {
                                                            "maxItemsOne": false
                                                        },
                                                        "x_forwarded_host": {
                                                            "maxItemsOne": false
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "virtual_application": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "virtual_directory": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "site_credential": {
                        "maxItemsOne": false
                    },
                    "storage_account": {
                        "maxItemsOne": false
                    }
                }
            }
        },
        "datasources": {
            "azurerm_aadb2c_directory": {
                "current": "azure:aadb2c/getDirectory:getDirectory",
                "majorVersion": 5
            },
            "azurerm_active_directory_domain_service": {
                "current": "azure:domainservices/getService:getService",
                "majorVersion": 5,
                "fields": {
                    "notifications": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "additional_recipients": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "replica_sets": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "domain_controller_ip_addresses": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "secure_ldap": {
                        "maxItemsOne": false
                    },
                    "security": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_advisor_recommendations": {
                "current": "azure:advisor/getRecommendations:getRecommendations",
                "majorVersion": 5,
                "fields": {
                    "filter_by_category": {
                        "maxItemsOne": false
                    },
                    "filter_by_resource_groups": {
                        "maxItemsOne": false
                    },
                    "recommendations": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "suppression_names": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_api_management": {
                "current": "azure:apimanagement/getService:getService",
                "majorVersion": 5,
                "fields": {
                    "additional_location": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "private_ip_addresses": {
                                    "maxItemsOne": false
                                },
                                "public_ip_addresses": {
                                    "maxItemsOne": false
                                },
                                "zones": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "hostname_configuration": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "developer_portal": {
                                    "maxItemsOne": false
                                },
                                "management": {
                                    "maxItemsOne": false
                                },
                                "portal": {
                                    "maxItemsOne": false
                                },
                                "proxy": {
                                    "maxItemsOne": false
                                },
                                "scm": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "identity": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "identity_ids": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "private_ip_addresses": {
                        "maxItemsOne": false
                    },
                    "public_ip_addresses": {
                        "maxItemsOne": false
                    },
                    "tenant_access": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_api_management_api": {
                "current": "azure:apimanagement/getApi:getApi",
                "majorVersion": 5,
                "fields": {
                    "protocols": {
                        "maxItemsOne": false
                    },
                    "subscription_key_parameter_names": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_api_management_api_version_set": {
                "current": "azure:apimanagement/getApiVersionSet:getApiVersionSet",
                "majorVersion": 5
            },
            "azurerm_api_management_gateway": {
                "current": "azure:apimanagement/getGateway:getGateway",
                "majorVersion": 5,
                "fields": {
                    "location_data": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_api_management_gateway_host_name_configuration": {
                "current": "azure:apimanagement/getGatewayHostNameConfiguration:getGatewayHostNameConfiguration",
                "majorVersion": 5
            },
            "azurerm_api_management_group": {
                "current": "azure:apimanagement/getGroup:getGroup",
                "majorVersion": 5
            },
            "azurerm_api_management_product": {
                "current": "azure:apimanagement/getProduct:getProduct",
                "majorVersion": 5
            },
            "azurerm_api_management_user": {
                "current": "azure:apimanagement/getUser:getUser",
                "majorVersion": 5
            },
            "azurerm_app_configuration": {
                "current": "azure:appconfiguration/getConfigurationStore:getConfigurationStore",
                "majorVersion": 5,
                "fields": {
                    "encryption": {
                        "maxItemsOne": false
                    },
                    "identity": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "identity_ids": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "primary_read_key": {
                        "maxItemsOne": false
                    },
                    "primary_write_key": {
                        "maxItemsOne": false
                    },
                    "replica": {
                        "maxItemsOne": false
                    },
                    "secondary_read_key": {
                        "maxItemsOne": false
                    },
                    "secondary_write_key": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_app_configuration_key": {
                "current": "azure:appconfiguration/getConfigurationKey:getConfigurationKey",
                "majorVersion": 5
            },
            "azurerm_app_configuration_keys": {
                "current": "azure:appconfiguration/getConfigurationKeys:getConfigurationKeys",
                "majorVersion": 5,
                "fields": {
                    "items": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_app_service": {
                "current": "azure:appservice/getAppService:getAppService",
                "majorVersion": 5,
                "fields": {
                    "connection_string": {
                        "maxItemsOne": false
                    },
                    "outbound_ip_address_list": {
                        "maxItemsOne": false
                    },
                    "possible_outbound_ip_address_list": {
                        "maxItemsOne": false
                    },
                    "site_config": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "cors": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "allowed_origins": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "default_documents": {
                                    "maxItemsOne": false
                                },
                                "ip_restriction": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "headers": {
                                                "maxItemsOne": true,
                                                "elem": {
                                                    "fields": {
                                                        "x_azure_fdid": {
                                                            "maxItemsOne": false
                                                        },
                                                        "x_fd_health_probe": {
                                                            "maxItemsOne": false
                                                        },
                                                        "x_forwarded_for": {
                                                            "maxItemsOne": false
                                                        },
                                                        "x_forwarded_host": {
                                                            "maxItemsOne": false
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "scm_ip_restriction": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "headers": {
                                                "maxItemsOne": true,
                                                "elem": {
                                                    "fields": {
                                                        "x_azure_fdid": {
                                                            "maxItemsOne": false
                                                        },
                                                        "x_fd_health_probe": {
                                                            "maxItemsOne": false
                                                        },
                                                        "x_forwarded_for": {
                                                            "maxItemsOne": false
                                                        },
                                                        "x_forwarded_host": {
                                                            "maxItemsOne": false
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "site_credential": {
                        "maxItemsOne": false
                    },
                    "source_control": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_app_service_certificate": {
                "current": "azure:appservice/getCertificate:getCertificate",
                "majorVersion": 5,
                "fields": {
                    "host_names": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_app_service_certificate_order": {
                "current": "azure:appservice/getCertificateOrder:getCertificateOrder",
                "majorVersion": 5,
                "fields": {
                    "app_service_certificate_not_renewable_reasons": {
                        "maxItemsOne": false
                    },
                    "certificates": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_app_service_environment": {
                "current": "azure:appservice/getAppServiceEnvironment:getAppServiceEnvironment",
                "majorVersion": 5,
                "fields": {
                    "cluster_setting": {
                        "maxItemsOne": false
                    },
                    "outbound_ip_addresses": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_app_service_environment_v3": {
                "current": "azure:appservice/getEnvironmentV3:getEnvironmentV3",
                "majorVersion": 5,
                "fields": {
                    "cluster_setting": {
                        "maxItemsOne": false
                    },
                    "external_inbound_ip_addresses": {
                        "maxItemsOne": false
                    },
                    "inbound_network_dependencies": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "ip_addresses": {
                                    "maxItemsOne": false
                                },
                                "ports": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "internal_inbound_ip_addresses": {
                        "maxItemsOne": false
                    },
                    "linux_outbound_ip_addresses": {
                        "maxItemsOne": false
                    },
                    "windows_outbound_ip_addresses": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_app_service_plan": {
                "current": "azure:appservice/getAppServicePlan:getAppServicePlan",
                "majorVersion": 5,
                "fields": {
                    "sku": {
                        "maxItemsOne": true
                    }
                }
            },
            "azurerm_application_gateway": {
                "current": "azure:network/getApplicationGateway:getApplicationGateway",
                "majorVersion": 5,
                "fields": {
                    "authentication_certificate": {
                        "maxItemsOne": false
                    },
                    "autoscale_configuration": {
                        "maxItemsOne": false
                    },
                    "backend_address_pool": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "fqdns": {
                                    "maxItemsOne": false
                                },
                                "ip_addresses": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "backend_http_settings": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "authentication_certificate": {
                                    "maxItemsOne": false
                                },
                                "connection_draining": {
                                    "maxItemsOne": false
                                },
                                "trusted_root_certificate_names": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "custom_error_configuration": {
                        "maxItemsOne": false
                    },
                    "frontend_ip_configuration": {
                        "maxItemsOne": false
                    },
                    "frontend_port": {
                        "maxItemsOne": false
                    },
                    "gateway_ip_configuration": {
                        "maxItemsOne": false
                    },
                    "global": {
                        "maxItemsOne": false
                    },
                    "http_listener": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "custom_error_configuration": {
                                    "maxItemsOne": false
                                },
                                "host_names": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "identity": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "identity_ids": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "private_endpoint_connection": {
                        "maxItemsOne": false
                    },
                    "private_link_configuration": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "ip_configuration": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "probe": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "match": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "status_code": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "redirect_configuration": {
                        "maxItemsOne": false
                    },
                    "request_routing_rule": {
                        "maxItemsOne": false
                    },
                    "rewrite_rule_set": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "rewrite_rule": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "condition": {
                                                "maxItemsOne": false
                                            },
                                            "request_header_configuration": {
                                                "maxItemsOne": false
                                            },
                                            "response_header_configuration": {
                                                "maxItemsOne": false
                                            },
                                            "url": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "sku": {
                        "maxItemsOne": false
                    },
                    "ssl_certificate": {
                        "maxItemsOne": false
                    },
                    "ssl_policy": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "cipher_suites": {
                                    "maxItemsOne": false
                                },
                                "disabled_protocols": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "ssl_profile": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "ssl_policy": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "cipher_suites": {
                                                "maxItemsOne": false
                                            },
                                            "disabled_protocols": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "trusted_client_certificate_names": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "trusted_client_certificate": {
                        "maxItemsOne": false
                    },
                    "trusted_root_certificate": {
                        "maxItemsOne": false
                    },
                    "url_path_map": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "path_rule": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "paths": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "waf_configuration": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "disabled_rule_group": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "rules": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "exclusion": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "zones": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_application_insights": {
                "current": "azure:appinsights/getInsights:getInsights",
                "majorVersion": 5
            },
            "azurerm_application_security_group": {
                "current": "azure:network/getApplicationSecurityGroup:getApplicationSecurityGroup",
                "majorVersion": 5
            },
            "azurerm_arc_machine": {
                "current": "azure:arcmachine/get:get",
                "majorVersion": 5,
                "fields": {
                    "agent": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "extensions_allow_list": {
                                    "maxItemsOne": false
                                },
                                "extensions_block_list": {
                                    "maxItemsOne": false
                                },
                                "incoming_connections_ports": {
                                    "maxItemsOne": false
                                },
                                "proxy_bypass": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "cloud_metadata": {
                        "maxItemsOne": false
                    },
                    "identity": {
                        "maxItemsOne": false
                    },
                    "location_data": {
                        "maxItemsOne": false
                    },
                    "os_profile": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "linux": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "patch": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "windows": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "patch": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "service_status": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "extension_service": {
                                    "maxItemsOne": false
                                },
                                "guest_configuration_service": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_attestation_provider": {
                "current": "azure:attestation/getProvider:getProvider",
                "majorVersion": 5
            },
            "azurerm_automation_account": {
                "current": "azure:automation/getAccount:getAccount",
                "majorVersion": 5,
                "fields": {
                    "identity": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "identity_ids": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "private_endpoint_connection": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_automation_variable_bool": {
                "current": "azure:automation/getBoolVariable:getBoolVariable",
                "majorVersion": 5
            },
            "azurerm_automation_variable_datetime": {
                "current": "azure:automation/getDateTimeVariable:getDateTimeVariable",
                "majorVersion": 5
            },
            "azurerm_automation_variable_int": {
                "current": "azure:automation/getIntVariable:getIntVariable",
                "majorVersion": 5
            },
            "azurerm_automation_variable_object": {
                "current": "azure:automation/getVariableObject:getVariableObject",
                "majorVersion": 5
            },
            "azurerm_automation_variable_string": {
                "current": "azure:automation/getStringVariable:getStringVariable",
                "majorVersion": 5
            },
            "azurerm_automation_variables": {
                "current": "azure:automation/getVariables:getVariables",
                "majorVersion": 5,
                "fields": {
                    "bool": {
                        "maxItemsOne": false
                    },
                    "datetime": {
                        "maxItemsOne": false
                    },
                    "encrypted": {
                        "maxItemsOne": false
                    },
                    "int": {
                        "maxItemsOne": false
                    },
                    "null": {
                        "maxItemsOne": false
                    },
                    "object": {
                        "maxItemsOne": false
                    },
                    "string": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_availability_set": {
                "current": "azure:compute/getAvailabilitySet:getAvailabilitySet",
                "majorVersion": 5
            },
            "azurerm_backup_policy_file_share": {
                "current": "azure:backup/getPolicyFileshare:getPolicyFileshare",
                "majorVersion": 5
            },
            "azurerm_backup_policy_vm": {
                "current": "azure:backup/getPolicyVM:getPolicyVM",
                "majorVersion": 5
            },
            "azurerm_bastion_host": {
                "current": "azure:compute/getBastionHost:getBastionHost",
                "majorVersion": 5,
                "fields": {
                    "ip_configuration": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_batch_account": {
                "current": "azure:batch/getAccount:getAccount",
                "majorVersion": 5,
                "fields": {
                    "encryption": {
                        "maxItemsOne": true
                    },
                    "key_vault_reference": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_batch_application": {
                "current": "azure:batch/getApplication:getApplication",
                "majorVersion": 5
            },
            "azurerm_batch_certificate": {
                "current": "azure:batch/getCertificate:getCertificate",
                "majorVersion": 5
            },
            "azurerm_batch_pool": {
                "current": "azure:batch/getPool:getPool",
                "majorVersion": 5,
                "fields": {
                    "auto_scale": {
                        "maxItemsOne": false
                    },
                    "certificate": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "visibility": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "container_configuration": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "container_image_names": {
                                    "maxItemsOne": false
                                },
                                "container_registries": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "data_disks": {
                        "maxItemsOne": false
                    },
                    "disk_encryption": {
                        "maxItemsOne": false
                    },
                    "extensions": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "provision_after_extensions": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "fixed_scale": {
                        "maxItemsOne": false
                    },
                    "mount": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "azure_blob_file_system": {
                                    "maxItemsOne": false
                                },
                                "azure_file_share": {
                                    "maxItemsOne": false
                                },
                                "cifs_mount": {
                                    "maxItemsOne": false
                                },
                                "nfs_mount": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "network_configuration": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "endpoint_configuration": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "network_security_group_rules": {
                                                "maxItemsOne": false,
                                                "elem": {
                                                    "fields": {
                                                        "source_port_ranges": {
                                                            "maxItemsOne": false
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "public_ips": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "node_placement": {
                        "maxItemsOne": false
                    },
                    "start_task": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "container": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "registry": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "resource_file": {
                                    "maxItemsOne": false
                                },
                                "user_identity": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "auto_user": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "storage_image_reference": {
                        "maxItemsOne": false
                    },
                    "task_scheduling_policy": {
                        "maxItemsOne": false
                    },
                    "user_accounts": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "linux_user_configuration": {
                                    "maxItemsOne": false
                                },
                                "windows_user_configuration": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "windows": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_billing_enrollment_account_scope": {
                "current": "azure:billing/getEnrollmentAccountScope:getEnrollmentAccountScope",
                "majorVersion": 5
            },
            "azurerm_billing_mca_account_scope": {
                "current": "azure:billing/getMcaAccountScope:getMcaAccountScope",
                "majorVersion": 5
            },
            "azurerm_billing_mpa_account_scope": {
                "current": "azure:billing/getMpaAccountScope:getMpaAccountScope",
                "majorVersion": 5
            },
            "azurerm_blueprint_definition": {
                "current": "azure:blueprint/getDefinition:getDefinition",
                "majorVersion": 5,
                "fields": {
                    "versions": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_blueprint_published_version": {
                "current": "azure:blueprint/getPublishedVersion:getPublishedVersion",
                "majorVersion": 5
            },
            "azurerm_cdn_frontdoor_custom_domain": {
                "current": "azure:cdn/getFrontdoorCustomDomain:getFrontdoorCustomDomain",
                "majorVersion": 5,
                "fields": {
                    "tls": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_cdn_frontdoor_endpoint": {
                "current": "azure:cdn/getFrontdoorEndpoint:getFrontdoorEndpoint",
                "majorVersion": 5
            },
            "azurerm_cdn_frontdoor_firewall_policy": {
                "current": "azure:cdn/getFrontdoorFirewallPolicy:getFrontdoorFirewallPolicy",
                "majorVersion": 5,
                "fields": {
                    "frontend_endpoint_ids": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_cdn_frontdoor_origin_group": {
                "current": "azure:cdn/getFrontdoorOriginGroup:getFrontdoorOriginGroup",
                "majorVersion": 5,
                "fields": {
                    "health_probe": {
                        "maxItemsOne": false
                    },
                    "load_balancing": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_cdn_frontdoor_profile": {
                "current": "azure:cdn/getFrontdoorProfile:getFrontdoorProfile",
                "majorVersion": 5
            },
            "azurerm_cdn_frontdoor_rule_set": {
                "current": "azure:cdn/getFrontdoorRuleSet:getFrontdoorRuleSet",
                "majorVersion": 5
            },
            "azurerm_cdn_frontdoor_secret": {
                "current": "azure:cdn/getFrontdoorSecret:getFrontdoorSecret",
                "majorVersion": 5,
                "fields": {
                    "secret": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "customer_certificate": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "subject_alternative_names": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_cdn_profile": {
                "current": "azure:cdn/getProfile:getProfile",
                "majorVersion": 5
            },
            "azurerm_client_config": {
                "current": "azure:core/getClientConfig:getClientConfig",
                "majorVersion": 5
            },
            "azurerm_cognitive_account": {
                "current": "azure:cognitive/getAccount:getAccount",
                "majorVersion": 5
            },
            "azurerm_communication_service": {
                "current": "azure:communication/getService:getService",
                "majorVersion": 5
            },
            "azurerm_confidential_ledger": {
                "current": "azure:compute/getConfidentialLedger:getConfidentialLedger",
                "majorVersion": 5,
                "fields": {
                    "azuread_based_service_principal": {
                        "maxItemsOne": false
                    },
                    "certificate_based_security_principal": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_consumption_budget_resource_group": {
                "current": "azure:consumption/getBudgetResourceGroup:getBudgetResourceGroup",
                "majorVersion": 5,
                "fields": {
                    "filter": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "dimension": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "values": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "not": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "dimension": {
                                                "maxItemsOne": false,
                                                "elem": {
                                                    "fields": {
                                                        "values": {
                                                            "maxItemsOne": false
                                                        }
                                                    }
                                                }
                                            },
                                            "tag": {
                                                "maxItemsOne": false,
                                                "elem": {
                                                    "fields": {
                                                        "values": {
                                                            "maxItemsOne": false
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "tag": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "values": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "notification": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "contact_emails": {
                                    "maxItemsOne": false
                                },
                                "contact_groups": {
                                    "maxItemsOne": false
                                },
                                "contact_roles": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "time_period": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_consumption_budget_subscription": {
                "current": "azure:consumption/getBudgetSubscription:getBudgetSubscription",
                "majorVersion": 5,
                "fields": {
                    "filter": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "dimension": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "values": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "not": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "dimension": {
                                                "maxItemsOne": false,
                                                "elem": {
                                                    "fields": {
                                                        "values": {
                                                            "maxItemsOne": false
                                                        }
                                                    }
                                                }
                                            },
                                            "tag": {
                                                "maxItemsOne": false,
                                                "elem": {
                                                    "fields": {
                                                        "values": {
                                                            "maxItemsOne": false
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "tag": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "values": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "notification": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "contact_emails": {
                                    "maxItemsOne": false
                                },
                                "contact_groups": {
                                    "maxItemsOne": false
                                },
                                "contact_roles": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "time_period": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_container_app": {
                "current": "azure:containerapp/getApp:getApp",
                "majorVersion": 5,
                "fields": {
                    "dapr": {
                        "maxItemsOne": false
                    },
                    "identity": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "identity_ids": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "ingress": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "custom_domain": {
                                    "maxItemsOne": false
                                },
                                "traffic_weight": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "outbound_ip_addresses": {
                        "maxItemsOne": false
                    },
                    "registry": {
                        "maxItemsOne": false
                    },
                    "secret": {
                        "maxItemsOne": false
                    },
                    "template": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "azure_queue_scale_rule": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "authentication": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "container": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "args": {
                                                "maxItemsOne": false
                                            },
                                            "command": {
                                                "maxItemsOne": false
                                            },
                                            "env": {
                                                "maxItemsOne": false
                                            },
                                            "liveness_probe": {
                                                "maxItemsOne": false,
                                                "elem": {
                                                    "fields": {
                                                        "header": {
                                                            "maxItemsOne": false
                                                        }
                                                    }
                                                }
                                            },
                                            "readiness_probe": {
                                                "maxItemsOne": false,
                                                "elem": {
                                                    "fields": {
                                                        "header": {
                                                            "maxItemsOne": false
                                                        }
                                                    }
                                                }
                                            },
                                            "startup_probe": {
                                                "maxItemsOne": false,
                                                "elem": {
                                                    "fields": {
                                                        "header": {
                                                            "maxItemsOne": false
                                                        }
                                                    }
                                                }
                                            },
                                            "volume_mounts": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "custom_scale_rule": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "authentication": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "http_scale_rule": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "authentication": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "tcp_scale_rule": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "authentication": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "volume": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_container_app_environment": {
                "current": "azure:containerapp/getEnvironment:getEnvironment",
                "majorVersion": 5
            },
            "azurerm_container_app_environment_certificate": {
                "current": "azure:containerapp/getEnvironmentCertificate:getEnvironmentCertificate",
                "majorVersion": 5
            },
            "azurerm_container_group": {
                "current": "azure:containerservice/getGroup:getGroup",
                "majorVersion": 5,
                "fields": {
                    "identity": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "identity_ids": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "subnet_ids": {
                        "maxItemsOne": false
                    },
                    "zones": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_container_registry": {
                "current": "azure:containerservice/getRegistry:getRegistry",
                "majorVersion": 5
            },
            "azurerm_container_registry_scope_map": {
                "current": "azure:containerservice/getRegistryScopeMap:getRegistryScopeMap",
                "majorVersion": 5,
                "fields": {
                    "actions": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_container_registry_token": {
                "current": "azure:containerservice/getRegistryToken:getRegistryToken",
                "majorVersion": 5
            },
            "azurerm_cosmosdb_account": {
                "current": "azure:cosmosdb/getAccount:getAccount",
                "majorVersion": 5,
                "fields": {
                    "capabilities": {
                        "maxItemsOne": false
                    },
                    "connection_strings": {
                        "maxItemsOne": false
                    },
                    "consistency_policy": {
                        "maxItemsOne": false
                    },
                    "geo_location": {
                        "maxItemsOne": false
                    },
                    "read_endpoints": {
                        "maxItemsOne": false
                    },
                    "virtual_network_rule": {
                        "maxItemsOne": false
                    },
                    "write_endpoints": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_cosmosdb_mongo_database": {
                "current": "azure:cosmosdb/getMongoDatabase:getMongoDatabase",
                "majorVersion": 5
            },
            "azurerm_cosmosdb_restorable_database_accounts": {
                "current": "azure:cosmosdb/getRestorableDatabaseAccounts:getRestorableDatabaseAccounts",
                "majorVersion": 5,
                "fields": {
                    "accounts": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "restorable_locations": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_cosmosdb_sql_database": {
                "current": "azure:cosmosdb/getSqlDatabase:getSqlDatabase",
                "majorVersion": 5,
                "fields": {
                    "autoscale_settings": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_cosmosdb_sql_role_definition": {
                "current": "azure:cosmosdb/getSqlRoleDefinition:getSqlRoleDefinition",
                "majorVersion": 5,
                "fields": {
                    "assignable_scopes": {
                        "maxItemsOne": false
                    },
                    "permissions": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "data_actions": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_data_factory": {
                "current": "azure:datafactory/getFactory:getFactory",
                "majorVersion": 5,
                "fields": {
                    "github_configuration": {
                        "maxItemsOne": false
                    },
                    "identity": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "identity_ids": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "vsts_configuration": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_data_protection_backup_vault": {
                "current": "azure:dataprotection/getBackupVault:getBackupVault",
                "majorVersion": 5,
                "fields": {
                    "identity": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_data_share": {
                "current": "azure:datashare/getShare:getShare",
                "majorVersion": 5,
                "fields": {
                    "snapshot_schedule": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_data_share_account": {
                "current": "azure:datashare/getAccount:getAccount",
                "majorVersion": 5,
                "fields": {
                    "identity": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_data_share_dataset_blob_storage": {
                "current": "azure:datashare/getDatasetBlobStorage:getDatasetBlobStorage",
                "majorVersion": 5,
                "fields": {
                    "storage_account": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_data_share_dataset_data_lake_gen2": {
                "current": "azure:datashare/getDatasetDataLakeGen2:getDatasetDataLakeGen2",
                "majorVersion": 5
            },
            "azurerm_data_share_dataset_kusto_cluster": {
                "current": "azure:datashare/getDatasetKustoCluster:getDatasetKustoCluster",
                "majorVersion": 5
            },
            "azurerm_data_share_dataset_kusto_database": {
                "current": "azure:datashare/getDatasetKustoDatabase:getDatasetKustoDatabase",
                "majorVersion": 5
            },
            "azurerm_database_migration_project": {
                "current": "azure:databasemigration/getProject:getProject",
                "majorVersion": 5
            },
            "azurerm_database_migration_service": {
                "current": "azure:databasemigration/getService:getService",
                "majorVersion": 5
            },
            "azurerm_databox_edge_device": {
                "current": "azure:databoxedge/getDevice:getDevice",
                "majorVersion": 5,
                "fields": {
                    "device_properties": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "configured_role_types": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_databricks_workspace": {
                "current": "azure:databricks/getWorkspace:getWorkspace",
                "majorVersion": 5,
                "fields": {
                    "managed_disk_identity": {
                        "maxItemsOne": false
                    },
                    "storage_account_identity": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_databricks_workspace_private_endpoint_connection": {
                "current": "azure:databricks/getWorkspacePrivateEndpointConnection:getWorkspacePrivateEndpointConnection",
                "majorVersion": 5,
                "fields": {
                    "connections": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_dedicated_host": {
                "current": "azure:compute/getDedicatedHost:getDedicatedHost",
                "majorVersion": 5
            },
            "azurerm_dedicated_host_group": {
                "current": "azure:compute/getDedicatedHostGroup:getDedicatedHostGroup",
                "majorVersion": 5,
                "fields": {
                    "zones": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_dev_test_lab": {
                "current": "azure:devtest/getLab:getLab",
                "majorVersion": 5
            },
            "azurerm_dev_test_virtual_network": {
                "current": "azure:devtest/getVirtualNetwork:getVirtualNetwork",
                "majorVersion": 5,
                "fields": {
                    "allowed_subnets": {
                        "maxItemsOne": false
                    },
                    "subnet_overrides": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_digital_twins_instance": {
                "current": "azure:digitaltwins/getInstance:getInstance",
                "majorVersion": 5
            },
            "azurerm_disk_access": {
                "current": "azure:compute/getDiskAccess:getDiskAccess",
                "majorVersion": 5
            },
            "azurerm_disk_encryption_set": {
                "current": "azure:compute/getDiskEncryptionSet:getDiskEncryptionSet",
                "majorVersion": 5,
                "fields": {
                    "identity": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "identity_ids": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_dns_a_record": {
                "current": "azure:dns/getARecord:getARecord",
                "majorVersion": 5,
                "fields": {
                    "records": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_dns_aaaa_record": {
                "current": "azure:dns/getAAAARecord:getAAAARecord",
                "majorVersion": 5,
                "fields": {
                    "records": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_dns_caa_record": {
                "current": "azure:dns/getCAARecord:getCAARecord",
                "majorVersion": 5,
                "fields": {
                    "record": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_dns_cname_record": {
                "current": "azure:dns/getCnameRecord:getCnameRecord",
                "majorVersion": 5
            },
            "azurerm_dns_mx_record": {
                "current": "azure:dns/getMxRecord:getMxRecord",
                "majorVersion": 5,
                "fields": {
                    "record": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_dns_ns_record": {
                "current": "azure:dns/getNsRecord:getNsRecord",
                "majorVersion": 5,
                "fields": {
                    "records": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_dns_ptr_record": {
                "current": "azure:dns/getPtrRecord:getPtrRecord",
                "majorVersion": 5,
                "fields": {
                    "records": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_dns_soa_record": {
                "current": "azure:dns/getSoaRecord:getSoaRecord",
                "majorVersion": 5
            },
            "azurerm_dns_srv_record": {
                "current": "azure:dns/getSrvRecord:getSrvRecord",
                "majorVersion": 5,
                "fields": {
                    "record": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_dns_txt_record": {
                "current": "azure:dns/getTxtRecord:getTxtRecord",
                "majorVersion": 5,
                "fields": {
                    "record": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_dns_zone": {
                "current": "azure:dns/getZone:getZone",
                "majorVersion": 5,
                "fields": {
                    "name_servers": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_elastic_cloud_elasticsearch": {
                "current": "azure:elasticcloud/getElasticsearch:getElasticsearch",
                "majorVersion": 5,
                "fields": {
                    "logs": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "filtering_tag": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_eventgrid_domain": {
                "current": "azure:eventgrid/getDomain:getDomain",
                "majorVersion": 5,
                "fields": {
                    "identity": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "identity_ids": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "inbound_ip_rule": {
                        "maxItemsOne": false
                    },
                    "input_mapping_default_values": {
                        "maxItemsOne": false
                    },
                    "input_mapping_fields": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_eventgrid_domain_topic": {
                "current": "azure:eventgrid/getDomainTopic:getDomainTopic",
                "majorVersion": 5
            },
            "azurerm_eventgrid_system_topic": {
                "current": "azure:eventgrid/getSystemTopic:getSystemTopic",
                "majorVersion": 5,
                "fields": {
                    "identity": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "identity_ids": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_eventgrid_topic": {
                "current": "azure:eventgrid/getTopic:getTopic",
                "majorVersion": 5
            },
            "azurerm_eventhub": {
                "current": "azure:eventhub/getEventHub:getEventHub",
                "majorVersion": 5,
                "fields": {
                    "partition_ids": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_eventhub_authorization_rule": {
                "current": "azure:eventhub/getAuthorizationRule:getAuthorizationRule",
                "majorVersion": 5
            },
            "azurerm_eventhub_cluster": {
                "current": "azure:eventhub/getCluster:getCluster",
                "majorVersion": 5
            },
            "azurerm_eventhub_consumer_group": {
                "current": "azure:eventhub/getConsumeGroup:getConsumeGroup",
                "majorVersion": 5
            },
            "azurerm_eventhub_namespace": {
                "current": "azure:eventhub/getNamespace:getNamespace",
                "majorVersion": 5
            },
            "azurerm_eventhub_namespace_authorization_rule": {
                "current": "azure:eventhub/getNamespaceAuthorizationRule:getNamespaceAuthorizationRule",
                "majorVersion": 5
            },
            "azurerm_eventhub_namespace_legacy": {
                "current": "azure:eventhub/getEventhubNamespace:getEventhubNamespace",
                "majorVersion": 5
            },
            "azurerm_eventhub_sas": {
                "current": "azure:eventhub/getSas:getSas",
                "majorVersion": 5
            },
            "azurerm_express_route_circuit": {
                "current": "azure:network/getExpressRouteCircuit:getExpressRouteCircuit",
                "majorVersion": 5,
                "fields": {
                    "peerings": {
                        "maxItemsOne": false
                    },
                    "service_provider_properties": {
                        "maxItemsOne": false
                    },
                    "sku": {
                        "maxItemsOne": true
                    }
                }
            },
            "azurerm_extended_locations": {
                "current": "azure:core/getExtendedLocations:getExtendedLocations",
                "majorVersion": 5,
                "fields": {
                    "extended_locations": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_firewall": {
                "current": "azure:network/getFirewall:getFirewall",
                "majorVersion": 5,
                "fields": {
                    "dns_servers": {
                        "maxItemsOne": false
                    },
                    "ip_configuration": {
                        "maxItemsOne": false
                    },
                    "management_ip_configuration": {
                        "maxItemsOne": false
                    },
                    "virtual_hub": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "public_ip_addresses": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "zones": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_firewall_policy": {
                "current": "azure:network/getFirewallPolicy:getFirewallPolicy",
                "majorVersion": 5,
                "fields": {
                    "child_policies": {
                        "maxItemsOne": false
                    },
                    "dns": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "servers": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "firewalls": {
                        "maxItemsOne": false
                    },
                    "rule_collection_groups": {
                        "maxItemsOne": false
                    },
                    "threat_intelligence_allowlist": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "fqdns": {
                                    "maxItemsOne": false
                                },
                                "ip_addresses": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_function_app": {
                "current": "azure:appservice/getFunctionApp:getFunctionApp",
                "majorVersion": 5,
                "fields": {
                    "connection_string": {
                        "maxItemsOne": false
                    },
                    "identity": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "identity_ids": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "site_config": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "cors": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "allowed_origins": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "ip_restriction": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "headers": {
                                                "maxItemsOne": true,
                                                "elem": {
                                                    "fields": {
                                                        "x_azure_fdid": {
                                                            "maxItemsOne": false
                                                        },
                                                        "x_fd_health_probe": {
                                                            "maxItemsOne": false
                                                        },
                                                        "x_forwarded_for": {
                                                            "maxItemsOne": false
                                                        },
                                                        "x_forwarded_host": {
                                                            "maxItemsOne": false
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "scm_ip_restriction": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "headers": {
                                                "maxItemsOne": true,
                                                "elem": {
                                                    "fields": {
                                                        "x_azure_fdid": {
                                                            "maxItemsOne": false
                                                        },
                                                        "x_fd_health_probe": {
                                                            "maxItemsOne": false
                                                        },
                                                        "x_forwarded_for": {
                                                            "maxItemsOne": false
                                                        },
                                                        "x_forwarded_host": {
                                                            "maxItemsOne": false
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "site_credential": {
                        "maxItemsOne": false
                    },
                    "source_control": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_function_app_host_keys": {
                "current": "azure:appservice/getFunctionAppHostKeys:getFunctionAppHostKeys",
                "majorVersion": 5
            },
            "azurerm_hdinsight_cluster": {
                "current": "azure:hdinsight/getCluster:getCluster",
                "majorVersion": 5,
                "fields": {
                    "gateway": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_healthcare_dicom_service": {
                "current": "azure:healthcare/getDicomService:getDicomService",
                "majorVersion": 5,
                "fields": {
                    "authentication": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "audience": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "identity": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "identity_ids": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "private_endpoint": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_healthcare_fhir_service": {
                "current": "azure:healthcare/getFhirService:getFhirService",
                "majorVersion": 5,
                "fields": {
                    "access_policy_object_ids": {
                        "maxItemsOne": false
                    },
                    "authentication": {
                        "maxItemsOne": false
                    },
                    "container_registry_login_server_url": {
                        "maxItemsOne": false
                    },
                    "cors": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "allowed_headers": {
                                    "maxItemsOne": false
                                },
                                "allowed_methods": {
                                    "maxItemsOne": false
                                },
                                "allowed_origins": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "identity": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "identity_ids": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_healthcare_medtech_service": {
                "current": "azure:healthcare/getMedtechService:getMedtechService",
                "majorVersion": 5,
                "fields": {
                    "identity": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "identity_ids": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_healthcare_service": {
                "current": "azure:healthcare/getService:getService",
                "majorVersion": 5,
                "fields": {
                    "access_policy_object_ids": {
                        "maxItemsOne": false
                    },
                    "authentication_configuration": {
                        "maxItemsOne": false
                    },
                    "cors_configuration": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "allowed_headers": {
                                    "maxItemsOne": false
                                },
                                "allowed_methods": {
                                    "maxItemsOne": false
                                },
                                "allowed_origins": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_healthcare_workspace": {
                "current": "azure:healthcare/getWorkspace:getWorkspace",
                "majorVersion": 5
            },
            "azurerm_hybrid_compute_machine": {
                "current": "azure:hybrid/getComputeMachine:getComputeMachine",
                "majorVersion": 5,
                "fields": {
                    "agent_configuration": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "extensions_allow_list": {
                                    "maxItemsOne": false
                                },
                                "extensions_block_list": {
                                    "maxItemsOne": false
                                },
                                "incoming_connections_ports": {
                                    "maxItemsOne": false
                                },
                                "proxy_bypass": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "cloud_metadata": {
                        "maxItemsOne": false
                    },
                    "error_details": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "additional_info": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "identity": {
                        "maxItemsOne": false
                    },
                    "location_data": {
                        "maxItemsOne": false
                    },
                    "os_profile": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "linux_configuration": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "patch_settings": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "windows_configuration": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "patch_settings": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "service_status": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "extension_service": {
                                    "maxItemsOne": false
                                },
                                "guest_configuration_service": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_image": {
                "current": "azure:compute/getImage:getImage",
                "majorVersion": 5,
                "fields": {
                    "data_disk": {
                        "maxItemsOne": false
                    },
                    "os_disk": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_images": {
                "current": "azure:compute/getImages:getImages",
                "majorVersion": 5,
                "fields": {
                    "images": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "data_disk": {
                                    "maxItemsOne": false
                                },
                                "os_disk": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_iothub": {
                "current": "azure:iot/getIotHub:getIotHub",
                "majorVersion": 5,
                "fields": {
                    "identity": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "identity_ids": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_iothub_dps": {
                "current": "azure:iot/getDps:getDps",
                "majorVersion": 5
            },
            "azurerm_iothub_dps_shared_access_policy": {
                "current": "azure:iot/getDpsSharedAccessPolicy:getDpsSharedAccessPolicy",
                "majorVersion": 5
            },
            "azurerm_iothub_shared_access_policy": {
                "current": "azure:iot/getSharedAccessPolicy:getSharedAccessPolicy",
                "majorVersion": 5
            },
            "azurerm_ip_group": {
                "current": "azure:network/getIpGroup:getIpGroup",
                "majorVersion": 5,
                "fields": {
                    "cidrs": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_key_vault": {
                "current": "azure:keyvault/getKeyVault:getKeyVault",
                "majorVersion": 5,
                "fields": {
                    "access_policy": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "certificate_permissions": {
                                    "maxItemsOne": false
                                },
                                "key_permissions": {
                                    "maxItemsOne": false
                                },
                                "secret_permissions": {
                                    "maxItemsOne": false
                                },
                                "storage_permissions": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "network_acls": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "ip_rules": {
                                    "maxItemsOne": false
                                },
                                "virtual_network_subnet_ids": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_key_vault_access_policy": {
                "current": "azure:keyvault/getAccessPolicy:getAccessPolicy",
                "majorVersion": 5,
                "fields": {
                    "certificate_permissions": {
                        "maxItemsOne": false
                    },
                    "key_permissions": {
                        "maxItemsOne": false
                    },
                    "secret_permissions": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_key_vault_certificate": {
                "current": "azure:keyvault/getCertificate:getCertificate",
                "majorVersion": 5,
                "fields": {
                    "certificate_policy": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "issuer_parameters": {
                                    "maxItemsOne": false
                                },
                                "key_properties": {
                                    "maxItemsOne": false
                                },
                                "lifetime_action": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "action": {
                                                "maxItemsOne": false
                                            },
                                            "trigger": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "secret_properties": {
                                    "maxItemsOne": false
                                },
                                "x509_certificate_properties": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "extended_key_usage": {
                                                "maxItemsOne": false
                                            },
                                            "key_usage": {
                                                "maxItemsOne": false
                                            },
                                            "subject_alternative_names": {
                                                "maxItemsOne": false,
                                                "elem": {
                                                    "fields": {
                                                        "dns_names": {
                                                            "maxItemsOne": false
                                                        },
                                                        "emails": {
                                                            "maxItemsOne": false
                                                        },
                                                        "upns": {
                                                            "maxItemsOne": false
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_key_vault_certificate_data": {
                "current": "azure:keyvault/getCertificateData:getCertificateData",
                "majorVersion": 5
            },
            "azurerm_key_vault_certificate_issuer": {
                "current": "azure:keyvault/getCertificateIssuer:getCertificateIssuer",
                "majorVersion": 5,
                "fields": {
                    "admin": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_key_vault_certificates": {
                "current": "azure:keyvault/getCertificates:getCertificates",
                "majorVersion": 5,
                "fields": {
                    "certificates": {
                        "maxItemsOne": false
                    },
                    "names": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_key_vault_encrypted_value": {
                "current": "azure:keyvault/getEncryptedValue:getEncryptedValue",
                "majorVersion": 5
            },
            "azurerm_key_vault_key": {
                "current": "azure:keyvault/getKey:getKey",
                "majorVersion": 5,
                "fields": {
                    "key_opts": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_key_vault_managed_hardware_security_module": {
                "current": "azure:keyvault/getManagedHardwareSecurityModule:getManagedHardwareSecurityModule",
                "majorVersion": 5,
                "fields": {
                    "admin_object_ids": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_key_vault_managed_hardware_security_module_role_definition": {
                "current": "azure:keyvault/getManagedHardwareSecurityModuleRoleDefinition:getManagedHardwareSecurityModuleRoleDefinition",
                "majorVersion": 5,
                "fields": {
                    "assignable_scopes": {
                        "maxItemsOne": false
                    },
                    "permission": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "actions": {
                                    "maxItemsOne": false
                                },
                                "data_actions": {
                                    "maxItemsOne": false
                                },
                                "not_actions": {
                                    "maxItemsOne": false
                                },
                                "not_data_actions": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_key_vault_secret": {
                "current": "azure:keyvault/getSecret:getSecret",
                "majorVersion": 5
            },
            "azurerm_key_vault_secrets": {
                "current": "azure:keyvault/getSecrets:getSecrets",
                "majorVersion": 5,
                "fields": {
                    "names": {
                        "maxItemsOne": false
                    },
                    "secrets": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_kubernetes_cluster": {
                "current": "azure:containerservice/getKubernetesCluster:getKubernetesCluster",
                "majorVersion": 5,
                "fields": {
                    "aci_connector_linux": {
                        "maxItemsOne": false
                    },
                    "agent_pool_profile": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "node_taints": {
                                    "maxItemsOne": false
                                },
                                "upgrade_settings": {
                                    "maxItemsOne": false
                                },
                                "zones": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "api_server_authorized_ip_ranges": {
                        "maxItemsOne": false
                    },
                    "azure_active_directory_role_based_access_control": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "admin_group_object_ids": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "custom_ca_trust_certificates_base64": {
                        "maxItemsOne": false
                    },
                    "identity": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "identity_ids": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "ingress_application_gateway": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "ingress_application_gateway_identity": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "key_management_service": {
                        "maxItemsOne": false
                    },
                    "key_vault_secrets_provider": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "secret_identity": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "kube_admin_config": {
                        "maxItemsOne": false
                    },
                    "kube_config": {
                        "maxItemsOne": false
                    },
                    "kubelet_identity": {
                        "maxItemsOne": false
                    },
                    "linux_profile": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "ssh_key": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "microsoft_defender": {
                        "maxItemsOne": false
                    },
                    "network_profile": {
                        "maxItemsOne": false
                    },
                    "oms_agent": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "oms_agent_identity": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "service_mesh_profile": {
                        "maxItemsOne": false
                    },
                    "service_principal": {
                        "maxItemsOne": false
                    },
                    "storage_profile": {
                        "maxItemsOne": false
                    },
                    "windows_profile": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_kubernetes_cluster_node_pool": {
                "current": "azure:containerservice/getClusterNodePool:getClusterNodePool",
                "majorVersion": 5,
                "fields": {
                    "node_taints": {
                        "maxItemsOne": false
                    },
                    "upgrade_settings": {
                        "maxItemsOne": false
                    },
                    "zones": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_kubernetes_node_pool_snapshot": {
                "current": "azure:containerservice/getKubernetesNodePoolSnapshot:getKubernetesNodePoolSnapshot",
                "majorVersion": 5
            },
            "azurerm_kubernetes_service_versions": {
                "current": "azure:containerservice/getKubernetesServiceVersions:getKubernetesServiceVersions",
                "majorVersion": 5,
                "fields": {
                    "versions": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_kusto_cluster": {
                "current": "azure:kusto/getCluster:getCluster",
                "majorVersion": 5
            },
            "azurerm_kusto_database": {
                "current": "azure:kusto/getDatabase:getDatabase",
                "majorVersion": 5
            },
            "azurerm_lb": {
                "current": "azure:lb/getLB:getLB",
                "majorVersion": 5,
                "fields": {
                    "frontend_ip_configuration": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "zones": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "private_ip_addresses": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_lb_backend_address_pool": {
                "current": "azure:lb/getBackendAddressPool:getBackendAddressPool",
                "majorVersion": 5,
                "fields": {
                    "backend_address": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "inbound_nat_rule_port_mapping": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "backend_ip_configurations": {
                        "maxItemsOne": false
                    },
                    "inbound_nat_rules": {
                        "maxItemsOne": false
                    },
                    "load_balancing_rules": {
                        "maxItemsOne": false
                    },
                    "outbound_rules": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_lb_outbound_rule": {
                "current": "azure:lb/getLBOutboundRule:getLBOutboundRule",
                "majorVersion": 5,
                "fields": {
                    "frontend_ip_configuration": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_lb_rule": {
                "current": "azure:lb/getLBRule:getLBRule",
                "majorVersion": 5
            },
            "azurerm_linux_function_app": {
                "current": "azure:appservice/getLinuxFunctionApp:getLinuxFunctionApp",
                "majorVersion": 5,
                "fields": {
                    "auth_settings": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "active_directory": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "allowed_audiences": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "allowed_external_redirect_urls": {
                                    "maxItemsOne": false
                                },
                                "facebook": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "oauth_scopes": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "github": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "oauth_scopes": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "google": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "oauth_scopes": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "microsoft": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "oauth_scopes": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "twitter": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "auth_settings_v2": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "active_directory_v2": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "allowed_applications": {
                                                "maxItemsOne": false
                                            },
                                            "allowed_audiences": {
                                                "maxItemsOne": false
                                            },
                                            "allowed_groups": {
                                                "maxItemsOne": false
                                            },
                                            "allowed_identities": {
                                                "maxItemsOne": false
                                            },
                                            "jwt_allowed_client_applications": {
                                                "maxItemsOne": false
                                            },
                                            "jwt_allowed_groups": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "apple_v2": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "login_scopes": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "azure_static_web_app_v2": {
                                    "maxItemsOne": false
                                },
                                "custom_oidc_v2": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "scopes": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "excluded_paths": {
                                    "maxItemsOne": false
                                },
                                "facebook_v2": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "login_scopes": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "github_v2": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "login_scopes": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "google_v2": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "allowed_audiences": {
                                                "maxItemsOne": false
                                            },
                                            "login_scopes": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "login": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "allowed_external_redirect_urls": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "microsoft_v2": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "allowed_audiences": {
                                                "maxItemsOne": false
                                            },
                                            "login_scopes": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "twitter_v2": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "backup": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "schedule": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "connection_string": {
                        "maxItemsOne": false
                    },
                    "identity": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "identity_ids": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "outbound_ip_address_list": {
                        "maxItemsOne": false
                    },
                    "possible_outbound_ip_address_list": {
                        "maxItemsOne": false
                    },
                    "site_config": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "app_service_logs": {
                                    "maxItemsOne": false
                                },
                                "application_stack": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "docker": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "cors": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "allowed_origins": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "default_documents": {
                                    "maxItemsOne": false
                                },
                                "ip_restriction": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "headers": {
                                                "maxItemsOne": false,
                                                "elem": {
                                                    "fields": {
                                                        "x_azure_fdid": {
                                                            "maxItemsOne": false
                                                        },
                                                        "x_fd_health_probe": {
                                                            "maxItemsOne": false
                                                        },
                                                        "x_forwarded_for": {
                                                            "maxItemsOne": false
                                                        },
                                                        "x_forwarded_host": {
                                                            "maxItemsOne": false
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "scm_ip_restriction": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "headers": {
                                                "maxItemsOne": false,
                                                "elem": {
                                                    "fields": {
                                                        "x_azure_fdid": {
                                                            "maxItemsOne": false
                                                        },
                                                        "x_fd_health_probe": {
                                                            "maxItemsOne": false
                                                        },
                                                        "x_forwarded_for": {
                                                            "maxItemsOne": false
                                                        },
                                                        "x_forwarded_host": {
                                                            "maxItemsOne": false
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "site_credential": {
                        "maxItemsOne": false
                    },
                    "sticky_settings": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "app_setting_names": {
                                    "maxItemsOne": false
                                },
                                "connection_string_names": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_linux_web_app": {
                "current": "azure:appservice/getLinuxWebApp:getLinuxWebApp",
                "majorVersion": 5,
                "fields": {
                    "auth_settings": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "active_directory": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "allowed_audiences": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "allowed_external_redirect_urls": {
                                    "maxItemsOne": false
                                },
                                "facebook": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "oauth_scopes": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "github": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "oauth_scopes": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "google": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "oauth_scopes": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "microsoft": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "oauth_scopes": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "twitter": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "auth_settings_v2": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "active_directory_v2": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "allowed_applications": {
                                                "maxItemsOne": false
                                            },
                                            "allowed_audiences": {
                                                "maxItemsOne": false
                                            },
                                            "allowed_groups": {
                                                "maxItemsOne": false
                                            },
                                            "allowed_identities": {
                                                "maxItemsOne": false
                                            },
                                            "jwt_allowed_client_applications": {
                                                "maxItemsOne": false
                                            },
                                            "jwt_allowed_groups": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "apple_v2": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "login_scopes": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "azure_static_web_app_v2": {
                                    "maxItemsOne": false
                                },
                                "custom_oidc_v2": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "scopes": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "excluded_paths": {
                                    "maxItemsOne": false
                                },
                                "facebook_v2": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "login_scopes": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "github_v2": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "login_scopes": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "google_v2": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "allowed_audiences": {
                                                "maxItemsOne": false
                                            },
                                            "login_scopes": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "login": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "allowed_external_redirect_urls": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "microsoft_v2": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "allowed_audiences": {
                                                "maxItemsOne": false
                                            },
                                            "login_scopes": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "twitter_v2": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "backup": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "schedule": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "connection_string": {
                        "maxItemsOne": false
                    },
                    "identity": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "identity_ids": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "logs": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "application_logs": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "azure_blob_storage": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "http_logs": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "azure_blob_storage": {
                                                "maxItemsOne": false
                                            },
                                            "file_system": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "outbound_ip_address_list": {
                        "maxItemsOne": false
                    },
                    "possible_outbound_ip_address_list": {
                        "maxItemsOne": false
                    },
                    "site_config": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "application_stack": {
                                    "maxItemsOne": false
                                },
                                "auto_heal_setting": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "action": {
                                                "maxItemsOne": false
                                            },
                                            "trigger": {
                                                "maxItemsOne": false,
                                                "elem": {
                                                    "fields": {
                                                        "requests": {
                                                            "maxItemsOne": false
                                                        },
                                                        "slow_request": {
                                                            "maxItemsOne": false
                                                        },
                                                        "status_code": {
                                                            "maxItemsOne": false
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "cors": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "allowed_origins": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "default_documents": {
                                    "maxItemsOne": false
                                },
                                "ip_restriction": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "headers": {
                                                "maxItemsOne": false,
                                                "elem": {
                                                    "fields": {
                                                        "x_azure_fdid": {
                                                            "maxItemsOne": false
                                                        },
                                                        "x_fd_health_probe": {
                                                            "maxItemsOne": false
                                                        },
                                                        "x_forwarded_for": {
                                                            "maxItemsOne": false
                                                        },
                                                        "x_forwarded_host": {
                                                            "maxItemsOne": false
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "scm_ip_restriction": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "headers": {
                                                "maxItemsOne": false,
                                                "elem": {
                                                    "fields": {
                                                        "x_azure_fdid": {
                                                            "maxItemsOne": false
                                                        },
                                                        "x_fd_health_probe": {
                                                            "maxItemsOne": false
                                                        },
                                                        "x_forwarded_for": {
                                                            "maxItemsOne": false
                                                        },
                                                        "x_forwarded_host": {
                                                            "maxItemsOne": false
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "site_credential": {
                        "maxItemsOne": false
                    },
                    "sticky_settings": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "app_setting_names": {
                                    "maxItemsOne": false
                                },
                                "connection_string_names": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "storage_account": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_local_network_gateway": {
                "current": "azure:network/getLocalNetworkGateway:getLocalNetworkGateway",
                "majorVersion": 5,
                "fields": {
                    "address_space": {
                        "maxItemsOne": false
                    },
                    "bgp_settings": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_log_analytics_workspace": {
                "current": "azure:operationalinsights/getAnalyticsWorkspace:getAnalyticsWorkspace",
                "majorVersion": 5
            },
            "azurerm_logic_app_integration_account": {
                "current": "azure:logicapps/getIntegrationAccount:getIntegrationAccount",
                "majorVersion": 5
            },
            "azurerm_logic_app_standard": {
                "current": "azure:logicapps/getStandard:getStandard",
                "majorVersion": 5,
                "fields": {
                    "connection_string": {
                        "maxItemsOne": false
                    },
                    "identity": {
                        "maxItemsOne": false
                    },
                    "site_config": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "cors": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "allowed_origins": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "ip_restriction": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "headers": {
                                                "maxItemsOne": true,
                                                "elem": {
                                                    "fields": {
                                                        "x_azure_fdid": {
                                                            "maxItemsOne": false
                                                        },
                                                        "x_fd_health_probe": {
                                                            "maxItemsOne": true
                                                        },
                                                        "x_forwarded_for": {
                                                            "maxItemsOne": false
                                                        },
                                                        "x_forwarded_host": {
                                                            "maxItemsOne": false
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "scm_ip_restriction": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "headers": {
                                                "maxItemsOne": true,
                                                "elem": {
                                                    "fields": {
                                                        "x_azure_fdid": {
                                                            "maxItemsOne": false
                                                        },
                                                        "x_fd_health_probe": {
                                                            "maxItemsOne": true
                                                        },
                                                        "x_forwarded_for": {
                                                            "maxItemsOne": false
                                                        },
                                                        "x_forwarded_host": {
                                                            "maxItemsOne": false
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "site_credential": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_logic_app_workflow": {
                "current": "azure:logicapps/getWorkflow:getWorkflow",
                "majorVersion": 5,
                "fields": {
                    "connector_endpoint_ip_addresses": {
                        "maxItemsOne": false
                    },
                    "connector_outbound_ip_addresses": {
                        "maxItemsOne": false
                    },
                    "identity": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "identity_ids": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "workflow_endpoint_ip_addresses": {
                        "maxItemsOne": false
                    },
                    "workflow_outbound_ip_addresses": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_machine_learning_workspace": {
                "current": "azure:machinelearning/getWorkspace:getWorkspace",
                "majorVersion": 5,
                "fields": {
                    "identity": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "identity_ids": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_maintenance_configuration": {
                "current": "azure:maintenance/getConfiguration:getConfiguration",
                "majorVersion": 5,
                "fields": {
                    "install_patches": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "linux": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "classifications_to_include": {
                                                "maxItemsOne": false
                                            },
                                            "package_names_mask_to_exclude": {
                                                "maxItemsOne": false
                                            },
                                            "package_names_mask_to_include": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "windows": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "classifications_to_include": {
                                                "maxItemsOne": false
                                            },
                                            "kb_numbers_to_exclude": {
                                                "maxItemsOne": false
                                            },
                                            "kb_numbers_to_include": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "window": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_managed_api": {
                "current": "azure:connections/getManagedApi:getManagedApi",
                "majorVersion": 5
            },
            "azurerm_managed_application_definition": {
                "current": "azure:managedapplication/getDefinition:getDefinition",
                "majorVersion": 5
            },
            "azurerm_managed_disk": {
                "current": "azure:compute/getManagedDisk:getManagedDisk",
                "majorVersion": 5,
                "fields": {
                    "encryption_settings": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "disk_encryption_key": {
                                    "maxItemsOne": false
                                },
                                "key_encryption_key": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "zones": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_management_group": {
                "current": "azure:management/getGroup:getGroup",
                "majorVersion": 5,
                "fields": {
                    "all_management_group_ids": {
                        "maxItemsOne": false
                    },
                    "all_subscription_ids": {
                        "maxItemsOne": false
                    },
                    "management_group_ids": {
                        "maxItemsOne": false
                    },
                    "subscription_ids": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_management_group_legacy": {
                "current": "azure:managementgroups/getManagementGroup:getManagementGroup",
                "majorVersion": 5,
                "fields": {
                    "all_management_group_ids": {
                        "maxItemsOne": false
                    },
                    "all_subscription_ids": {
                        "maxItemsOne": false
                    },
                    "management_group_ids": {
                        "maxItemsOne": false
                    },
                    "subscription_ids": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_management_group_template_deployment": {
                "current": "azure:management/getGroupTemplateDeployment:getGroupTemplateDeployment",
                "majorVersion": 5
            },
            "azurerm_maps_account": {
                "current": "azure:maps/getAccount:getAccount",
                "majorVersion": 5
            },
            "azurerm_mariadb_server": {
                "current": "azure:mariadb/getMariaDbServer:getMariaDbServer",
                "majorVersion": 5,
                "fields": {
                    "storage_profile": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_marketplace_agreement": {
                "current": "azure:marketplace/getAgreement:getAgreement",
                "majorVersion": 5
            },
            "azurerm_mobile_network": {
                "current": "azure:mobile/getNetwork:getNetwork",
                "majorVersion": 5
            },
            "azurerm_mobile_network_attached_data_network": {
                "current": "azure:mobile/getNetworkAttachedDataNetwork:getNetworkAttachedDataNetwork",
                "majorVersion": 5,
                "fields": {
                    "dns_addresses": {
                        "maxItemsOne": false
                    },
                    "network_address_port_translation": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "port_range": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "user_equipment_address_pool_prefixes": {
                        "maxItemsOne": false
                    },
                    "user_equipment_static_address_pool_prefixes": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_mobile_network_data_network": {
                "current": "azure:mobile/getNetworkDataNetwork:getNetworkDataNetwork",
                "majorVersion": 5
            },
            "azurerm_mobile_network_packet_core_control_plane": {
                "current": "azure:mobile/getNetworkPacketCoreControlPlane:getNetworkPacketCoreControlPlane",
                "majorVersion": 5,
                "fields": {
                    "identity": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "identity_ids": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "local_diagnostics_access": {
                        "maxItemsOne": false
                    },
                    "platform": {
                        "maxItemsOne": false
                    },
                    "site_ids": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_mobile_network_packet_core_data_plane": {
                "current": "azure:mobile/getNetworkPacketCoreDataPlane:getNetworkPacketCoreDataPlane",
                "majorVersion": 5
            },
            "azurerm_mobile_network_service": {
                "current": "azure:mobile/getNetworkService:getNetworkService",
                "majorVersion": 5,
                "fields": {
                    "pcc_rule": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "qos_policy": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "guaranteed_bit_rate": {
                                                "maxItemsOne": false
                                            },
                                            "maximum_bit_rate": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "service_data_flow_template": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "ports": {
                                                "maxItemsOne": false
                                            },
                                            "protocol": {
                                                "maxItemsOne": false
                                            },
                                            "remote_ip_list": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "service_qos_policy": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "maximum_bit_rate": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_mobile_network_sim": {
                "current": "azure:mobile/getNetworkSim:getNetworkSim",
                "majorVersion": 5,
                "fields": {
                    "static_ip_configuration": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_mobile_network_sim_group": {
                "current": "azure:mobile/getNetworkSimGroup:getNetworkSimGroup",
                "majorVersion": 5,
                "fields": {
                    "identity": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "identity_ids": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_mobile_network_sim_policy": {
                "current": "azure:mobile/getNetworkSimPolicy:getNetworkSimPolicy",
                "majorVersion": 5,
                "fields": {
                    "slice": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "data_network": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "additional_allowed_session_types": {
                                                "maxItemsOne": false
                                            },
                                            "allowed_services_ids": {
                                                "maxItemsOne": false
                                            },
                                            "session_aggregate_maximum_bit_rate": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "user_equipment_aggregate_maximum_bit_rate": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_mobile_network_site": {
                "current": "azure:mobile/getNetworkSite:getNetworkSite",
                "majorVersion": 5,
                "fields": {
                    "network_function_ids": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_mobile_network_slice": {
                "current": "azure:mobile/getNetworkSlice:getNetworkSlice",
                "majorVersion": 5,
                "fields": {
                    "single_network_slice_selection_assistance_information": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_monitor_action_group": {
                "current": "azure:monitoring/getActionGroup:getActionGroup",
                "majorVersion": 5,
                "fields": {
                    "arm_role_receiver": {
                        "maxItemsOne": false
                    },
                    "automation_runbook_receiver": {
                        "maxItemsOne": false
                    },
                    "azure_app_push_receiver": {
                        "maxItemsOne": false
                    },
                    "azure_function_receiver": {
                        "maxItemsOne": false
                    },
                    "email_receiver": {
                        "maxItemsOne": false
                    },
                    "event_hub_receiver": {
                        "maxItemsOne": false
                    },
                    "itsm_receiver": {
                        "maxItemsOne": false
                    },
                    "logic_app_receiver": {
                        "maxItemsOne": false
                    },
                    "sms_receiver": {
                        "maxItemsOne": false
                    },
                    "voice_receiver": {
                        "maxItemsOne": false
                    },
                    "webhook_receiver": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "aad_auth": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_monitor_data_collection_endpoint": {
                "current": "azure:monitoring/getDataCollectionEndpoint:getDataCollectionEndpoint",
                "majorVersion": 5
            },
            "azurerm_monitor_data_collection_rule": {
                "current": "azure:monitoring/getDataCollectionRule:getDataCollectionRule",
                "majorVersion": 5,
                "fields": {
                    "data_flow": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "destinations": {
                                    "maxItemsOne": false
                                },
                                "streams": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "data_sources": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "data_import": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "event_hub_data_source": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "extension": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "input_data_sources": {
                                                "maxItemsOne": false
                                            },
                                            "streams": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "iis_log": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "log_directories": {
                                                "maxItemsOne": false
                                            },
                                            "streams": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "log_file": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "file_patterns": {
                                                "maxItemsOne": false
                                            },
                                            "settings": {
                                                "maxItemsOne": false,
                                                "elem": {
                                                    "fields": {
                                                        "text": {
                                                            "maxItemsOne": false
                                                        }
                                                    }
                                                }
                                            },
                                            "streams": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "performance_counter": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "counter_specifiers": {
                                                "maxItemsOne": false
                                            },
                                            "streams": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "platform_telemetry": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "streams": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "prometheus_forwarder": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "label_include_filter": {
                                                "maxItemsOne": false
                                            },
                                            "streams": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "syslog": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "facility_names": {
                                                "maxItemsOne": false
                                            },
                                            "log_levels": {
                                                "maxItemsOne": false
                                            },
                                            "streams": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "windows_event_log": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "streams": {
                                                "maxItemsOne": false
                                            },
                                            "x_path_queries": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "windows_firewall_log": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "streams": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "destinations": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "azure_monitor_metrics": {
                                    "maxItemsOne": false
                                },
                                "event_hub": {
                                    "maxItemsOne": true
                                },
                                "event_hub_direct": {
                                    "maxItemsOne": true
                                },
                                "log_analytics": {
                                    "maxItemsOne": false
                                },
                                "monitor_account": {
                                    "maxItemsOne": false
                                },
                                "storage_blob": {
                                    "maxItemsOne": false
                                },
                                "storage_blob_direct": {
                                    "maxItemsOne": false
                                },
                                "storage_table_direct": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "identity": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "identity_ids": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "stream_declaration": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "column": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_monitor_diagnostic_categories": {
                "current": "azure:monitoring/getDiagnosticCategories:getDiagnosticCategories",
                "majorVersion": 5,
                "fields": {
                    "log_category_groups": {
                        "maxItemsOne": false
                    },
                    "log_category_types": {
                        "maxItemsOne": false
                    },
                    "logs": {
                        "maxItemsOne": false
                    },
                    "metrics": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_monitor_log_profile": {
                "current": "azure:monitoring/getLogProfile:getLogProfile",
                "majorVersion": 5,
                "fields": {
                    "categories": {
                        "maxItemsOne": false
                    },
                    "locations": {
                        "maxItemsOne": false
                    },
                    "retention_policy": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_monitor_scheduled_query_rules_alert": {
                "current": "azure:monitoring/getScheduledQueryRulesAlert:getScheduledQueryRulesAlert",
                "majorVersion": 5,
                "fields": {
                    "action": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "action_group": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "authorized_resource_ids": {
                        "maxItemsOne": false
                    },
                    "trigger": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "metric_trigger": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_monitor_scheduled_query_rules_log": {
                "current": "azure:monitoring/getScheduledQueryRulesLog:getScheduledQueryRulesLog",
                "majorVersion": 5,
                "fields": {
                    "authorized_resource_ids": {
                        "maxItemsOne": false
                    },
                    "criteria": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "dimension": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "values": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_monitor_workspace": {
                "current": "azure:monitoring/getWorkspace:getWorkspace",
                "majorVersion": 5
            },
            "azurerm_mssql_database": {
                "current": "azure:mssql/getDatabase:getDatabase",
                "majorVersion": 5
            },
            "azurerm_mssql_elasticpool": {
                "current": "azure:mssql/getElasticPool:getElasticPool",
                "majorVersion": 5,
                "fields": {
                    "sku": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_mssql_managed_instance": {
                "current": "azure:mssql/getManagedInstance:getManagedInstance",
                "majorVersion": 5,
                "fields": {
                    "identity": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "identity_ids": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_mssql_server": {
                "current": "azure:mssql/getServer:getServer",
                "majorVersion": 5,
                "fields": {
                    "identity": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "identity_ids": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "restorable_dropped_database_ids": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_mysql_flexible_server": {
                "current": "azure:mysql/getFlexibleServer:getFlexibleServer",
                "majorVersion": 5,
                "fields": {
                    "high_availability": {
                        "maxItemsOne": false
                    },
                    "maintenance_window": {
                        "maxItemsOne": false
                    },
                    "storage": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_mysql_server": {
                "current": "azure:mysql/getServer:getServer",
                "majorVersion": 5,
                "fields": {
                    "identity": {
                        "maxItemsOne": false
                    },
                    "threat_detection_policy": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "disabled_alerts": {
                                    "maxItemsOne": false
                                },
                                "email_addresses": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_nat_gateway": {
                "current": "azure:network/getNatGateway:getNatGateway",
                "majorVersion": 5,
                "fields": {
                    "public_ip_address_ids": {
                        "maxItemsOne": false
                    },
                    "public_ip_prefix_ids": {
                        "maxItemsOne": false
                    },
                    "zones": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_netapp_account": {
                "current": "azure:netapp/getAccount:getAccount",
                "majorVersion": 5
            },
            "azurerm_netapp_pool": {
                "current": "azure:netapp/getPool:getPool",
                "majorVersion": 5
            },
            "azurerm_netapp_snapshot": {
                "current": "azure:netapp/getSnapshot:getSnapshot",
                "majorVersion": 5
            },
            "azurerm_netapp_snapshot_policy": {
                "current": "azure:netapp/getSnapshotPolicy:getSnapshotPolicy",
                "majorVersion": 5,
                "fields": {
                    "daily_schedule": {
                        "maxItemsOne": false
                    },
                    "hourly_schedule": {
                        "maxItemsOne": false
                    },
                    "monthly_schedule": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "days_of_month": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "weekly_schedule": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "days_of_week": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_netapp_volume": {
                "current": "azure:netapp/getVolume:getVolume",
                "majorVersion": 5,
                "fields": {
                    "data_protection_replication": {
                        "maxItemsOne": false
                    },
                    "mount_ip_addresses": {
                        "maxItemsOne": false
                    },
                    "protocols": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_netapp_volume_group_sap_hana": {
                "current": "azure:netapp/getVolumeGroupSapHana:getVolumeGroupSapHana",
                "majorVersion": 5,
                "fields": {
                    "volume": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "data_protection_replication": {
                                    "maxItemsOne": false
                                },
                                "data_protection_snapshot_policy": {
                                    "maxItemsOne": false
                                },
                                "export_policy_rule": {
                                    "maxItemsOne": false
                                },
                                "mount_ip_addresses": {
                                    "maxItemsOne": false
                                },
                                "protocols": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_netapp_volume_quota_rule": {
                "current": "azure:netapp/getVolumeQuotaRule:getVolumeQuotaRule",
                "majorVersion": 5
            },
            "azurerm_network_ddos_protection_plan": {
                "current": "azure:network/getNetworkDdosProtectionPlan:getNetworkDdosProtectionPlan",
                "majorVersion": 5,
                "fields": {
                    "virtual_network_ids": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_network_interface": {
                "current": "azure:network/getNetworkInterface:getNetworkInterface",
                "majorVersion": 5,
                "fields": {
                    "applied_dns_servers": {
                        "maxItemsOne": false
                    },
                    "dns_servers": {
                        "maxItemsOne": false
                    },
                    "ip_configuration": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "application_gateway_backend_address_pools_ids": {
                                    "maxItemsOne": false
                                },
                                "application_security_group_ids": {
                                    "maxItemsOne": false
                                },
                                "load_balancer_backend_address_pools_ids": {
                                    "maxItemsOne": false
                                },
                                "load_balancer_inbound_nat_rules_ids": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "private_ip_addresses": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_network_manager_network_group": {
                "current": "azure:network/getNetworkManagerNetworkGroup:getNetworkManagerNetworkGroup",
                "majorVersion": 5
            },
            "azurerm_network_security_group": {
                "current": "azure:network/getNetworkSecurityGroup:getNetworkSecurityGroup",
                "majorVersion": 5,
                "fields": {
                    "security_rule": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "destination_address_prefixes": {
                                    "maxItemsOne": false
                                },
                                "destination_application_security_group_ids": {
                                    "maxItemsOne": false
                                },
                                "destination_port_ranges": {
                                    "maxItemsOne": false
                                },
                                "source_address_prefixes": {
                                    "maxItemsOne": false
                                },
                                "source_application_security_group_ids": {
                                    "maxItemsOne": false
                                },
                                "source_port_ranges": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_network_service_tags": {
                "current": "azure:network/getServiceTags:getServiceTags",
                "majorVersion": 5,
                "fields": {
                    "address_prefixes": {
                        "maxItemsOne": false
                    },
                    "ipv4_cidrs": {
                        "maxItemsOne": false
                    },
                    "ipv6_cidrs": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_network_watcher": {
                "current": "azure:network/getNetworkWatcher:getNetworkWatcher",
                "majorVersion": 5
            },
            "azurerm_notification_hub": {
                "current": "azure:notificationhub/getHub:getHub",
                "majorVersion": 5,
                "fields": {
                    "apns_credential": {
                        "maxItemsOne": false
                    },
                    "gcm_credential": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_notification_hub_namespace": {
                "current": "azure:notificationhub/getNamespace:getNamespace",
                "majorVersion": 5,
                "fields": {
                    "sku": {
                        "maxItemsOne": true
                    }
                }
            },
            "azurerm_orchestrated_virtual_machine_scale_set": {
                "current": "azure:compute/getOrchestratedVirtualMachineScaleSet:getOrchestratedVirtualMachineScaleSet",
                "majorVersion": 5,
                "fields": {
                    "identity": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "identity_ids": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "network_interface": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "dns_servers": {
                                    "maxItemsOne": false
                                },
                                "ip_configuration": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "application_gateway_backend_address_pool_ids": {
                                                "maxItemsOne": false
                                            },
                                            "application_security_group_ids": {
                                                "maxItemsOne": false
                                            },
                                            "load_balancer_backend_address_pool_ids": {
                                                "maxItemsOne": false
                                            },
                                            "load_balancer_inbound_nat_rules_ids": {
                                                "maxItemsOne": false
                                            },
                                            "public_ip_address": {
                                                "maxItemsOne": false,
                                                "elem": {
                                                    "fields": {
                                                        "ip_tag": {
                                                            "maxItemsOne": false
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_palo_alto_local_rulestack": {
                "current": "azure:paloalto/getLocalRulestack:getLocalRulestack",
                "majorVersion": 5
            },
            "azurerm_platform_image": {
                "current": "azure:compute/getPlatformImage:getPlatformImage",
                "majorVersion": 5
            },
            "azurerm_policy_assignment": {
                "current": "azure:policy/getPolicyAssignment:getPolicyAssignment",
                "majorVersion": 5,
                "fields": {
                    "identity": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "identity_ids": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "non_compliance_message": {
                        "maxItemsOne": false
                    },
                    "not_scopes": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_policy_definition": {
                "current": "azure:policy/getPolicyDefintion:getPolicyDefintion",
                "majorVersion": 5,
                "fields": {
                    "role_definition_ids": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_policy_definition_built_in": {
                "current": "azure:policy/getPolicyDefintionBuiltIn:getPolicyDefintionBuiltIn",
                "majorVersion": 5,
                "fields": {
                    "role_definition_ids": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_policy_set_definition": {
                "current": "azure:policy/getPolicySetDefinition:getPolicySetDefinition",
                "majorVersion": 5,
                "fields": {
                    "policy_definition_group": {
                        "maxItemsOne": false
                    },
                    "policy_definition_reference": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "policy_group_names": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_policy_virtual_machine_configuration_assignment": {
                "current": "azure:policy/getVirtualMachineConfigurationAssignment:getVirtualMachineConfigurationAssignment",
                "majorVersion": 5
            },
            "azurerm_portal_dashboard": {
                "current": "azure:portal/getDashboard:getDashboard",
                "majorVersion": 5
            },
            "azurerm_portal_dashboard_legacy": {
                "current": "azure:dashboard/azurerm_portal_dashboard:azurerm_portal_dashboard",
                "majorVersion": 5
            },
            "azurerm_postgresql_flexible_server": {
                "current": "azure:postgresql/getFlexibleServer:getFlexibleServer",
                "majorVersion": 5
            },
            "azurerm_postgresql_server": {
                "current": "azure:postgresql/getServer:getServer",
                "majorVersion": 5,
                "fields": {
                    "identity": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_private_dns_a_record": {
                "current": "azure:privatedns/getARecord:getARecord",
                "majorVersion": 5,
                "fields": {
                    "records": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_private_dns_aaaa_record": {
                "current": "azure:privatedns/getAAAARecord:getAAAARecord",
                "majorVersion": 5,
                "fields": {
                    "records": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_private_dns_cname_record": {
                "current": "azure:privatedns/getCnameRecord:getCnameRecord",
                "majorVersion": 5
            },
            "azurerm_private_dns_mx_record": {
                "current": "azure:privatedns/getMxRecord:getMxRecord",
                "majorVersion": 5,
                "fields": {
                    "record": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_private_dns_ptr_record": {
                "current": "azure:privatedns/getPtrRecord:getPtrRecord",
                "majorVersion": 5,
                "fields": {
                    "records": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_private_dns_resolver": {
                "current": "azure:privatedns/getResolver:getResolver",
                "majorVersion": 5
            },
            "azurerm_private_dns_resolver_dns_forwarding_ruleset": {
                "current": "azure:privatedns/getResolverDnsForwardingRuleset:getResolverDnsForwardingRuleset",
                "majorVersion": 5,
                "fields": {
                    "private_dns_resolver_outbound_endpoint_ids": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_private_dns_resolver_forwarding_rule": {
                "current": "azure:privatedns/getResolverForwardingRule:getResolverForwardingRule",
                "majorVersion": 5,
                "fields": {
                    "target_dns_servers": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_private_dns_resolver_inbound_endpoint": {
                "current": "azure:privatedns/getResolverInboundEndpoint:getResolverInboundEndpoint",
                "majorVersion": 5,
                "fields": {
                    "ip_configurations": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_private_dns_resolver_outbound_endpoint": {
                "current": "azure:privatedns/getResolverOutboundEndpoint:getResolverOutboundEndpoint",
                "majorVersion": 5
            },
            "azurerm_private_dns_resolver_virtual_network_link": {
                "current": "azure:privatedns/getResolverVirtualNetworkLink:getResolverVirtualNetworkLink",
                "majorVersion": 5
            },
            "azurerm_private_dns_soa_record": {
                "current": "azure:privatedns/getSoaRecord:getSoaRecord",
                "majorVersion": 5
            },
            "azurerm_private_dns_srv_record": {
                "current": "azure:privatedns/getSrvRecord:getSrvRecord",
                "majorVersion": 5,
                "fields": {
                    "record": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_private_dns_txt_record": {
                "current": "azure:privatedns/getTxtRecord:getTxtRecord",
                "majorVersion": 5,
                "fields": {
                    "record": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_private_dns_zone": {
                "current": "azure:privatedns/getDnsZone:getDnsZone",
                "majorVersion": 5
            },
            "azurerm_private_dns_zone_virtual_network_link": {
                "current": "azure:privatedns/getZoneVirtualNetworkLink:getZoneVirtualNetworkLink",
                "majorVersion": 5
            },
            "azurerm_private_endpoint_connection": {
                "current": "azure:privatelink/getEndpointConnection:getEndpointConnection",
                "majorVersion": 5,
                "fields": {
                    "network_interface": {
                        "maxItemsOne": false
                    },
                    "private_service_connection": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_private_link_service": {
                "current": "azure:privatelink/getService:getService",
                "majorVersion": 5,
                "fields": {
                    "auto_approval_subscription_ids": {
                        "maxItemsOne": false
                    },
                    "load_balancer_frontend_ip_configuration_ids": {
                        "maxItemsOne": false
                    },
                    "nat_ip_configuration": {
                        "maxItemsOne": false
                    },
                    "visibility_subscription_ids": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_private_link_service_endpoint_connections": {
                "current": "azure:privatelink/getServiceEndpointConnections:getServiceEndpointConnections",
                "majorVersion": 5,
                "fields": {
                    "private_endpoint_connections": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_proximity_placement_group": {
                "current": "azure:proximity/getPlacementGroup:getPlacementGroup",
                "majorVersion": 5
            },
            "azurerm_public_ip": {
                "current": "azure:network/getPublicIP:getPublicIP",
                "majorVersion": 5,
                "fields": {
                    "zones": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_public_ip_prefix": {
                "current": "azure:network/getPublicIpPrefix:getPublicIpPrefix",
                "majorVersion": 5,
                "fields": {
                    "zones": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_public_ips": {
                "current": "azure:network/getPublicIPs:getPublicIPs",
                "majorVersion": 5,
                "fields": {
                    "public_ips": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_public_maintenance_configurations": {
                "current": "azure:maintenance/getPublicConfigurations:getPublicConfigurations",
                "majorVersion": 5,
                "fields": {
                    "configs": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_recovery_services_vault": {
                "current": "azure:recoveryservices/getVault:getVault",
                "majorVersion": 5
            },
            "azurerm_redis_cache": {
                "current": "azure:redis/getCache:getCache",
                "majorVersion": 5,
                "fields": {
                    "patch_schedule": {
                        "maxItemsOne": false
                    },
                    "redis_configuration": {
                        "maxItemsOne": false
                    },
                    "zones": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_redis_enterprise_database": {
                "current": "azure:redis/getEnterpriseDatabase:getEnterpriseDatabase",
                "majorVersion": 5,
                "fields": {
                    "linked_database_id": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_resource_group": {
                "current": "azure:core/getResourceGroup:getResourceGroup",
                "majorVersion": 5
            },
            "azurerm_resource_group_template_deployment": {
                "current": "azure:core/getResourceGroupTemplateDeployment:getResourceGroupTemplateDeployment",
                "majorVersion": 5
            },
            "azurerm_resources": {
                "current": "azure:core/getResources:getResources",
                "majorVersion": 5,
                "fields": {
                    "resources": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_role_definition": {
                "current": "azure:authorization/getRoleDefinition:getRoleDefinition",
                "majorVersion": 5,
                "fields": {
                    "assignable_scopes": {
                        "maxItemsOne": false
                    },
                    "permissions": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "actions": {
                                    "maxItemsOne": false
                                },
                                "data_actions": {
                                    "maxItemsOne": false
                                },
                                "not_actions": {
                                    "maxItemsOne": false
                                },
                                "not_data_actions": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_role_definition_legacy": {
                "current": "azure:role/getRoleDefinition:getRoleDefinition",
                "majorVersion": 5,
                "fields": {
                    "assignable_scopes": {
                        "maxItemsOne": false
                    },
                    "permissions": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "actions": {
                                    "maxItemsOne": false
                                },
                                "data_actions": {
                                    "maxItemsOne": false
                                },
                                "not_actions": {
                                    "maxItemsOne": false
                                },
                                "not_data_actions": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_route_filter": {
                "current": "azure:network/getRouteFilter:getRouteFilter",
                "majorVersion": 5,
                "fields": {
                    "rule": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "communities": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_route_table": {
                "current": "azure:network/getRouteTable:getRouteTable",
                "majorVersion": 5,
                "fields": {
                    "route": {
                        "maxItemsOne": false
                    },
                    "subnets": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_search_service": {
                "current": "azure:search/getService:getService",
                "majorVersion": 5,
                "fields": {
                    "identity": {
                        "maxItemsOne": false
                    },
                    "query_keys": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_sentinel_alert_rule": {
                "current": "azure:sentinel/getAlertRule:getAlertRule",
                "majorVersion": 5
            },
            "azurerm_sentinel_alert_rule_anomaly": {
                "current": "azure:sentinel/getAlertRuleAnomaly:getAlertRuleAnomaly",
                "majorVersion": 5,
                "fields": {
                    "multi_select_observation": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "supported_values": {
                                    "maxItemsOne": false
                                },
                                "values": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "prioritized_exclude_observation": {
                        "maxItemsOne": false
                    },
                    "required_data_connector": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "data_types": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "single_select_observation": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "supported_values": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "tactics": {
                        "maxItemsOne": false
                    },
                    "techniques": {
                        "maxItemsOne": false
                    },
                    "threshold_observation": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_sentinel_alert_rule_template": {
                "current": "azure:sentinel/getAlertRuleTemplate:getAlertRuleTemplate",
                "majorVersion": 5,
                "fields": {
                    "nrt_template": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "tactics": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "scheduled_template": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "tactics": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "security_incident_template": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_service_plan": {
                "current": "azure:appservice/getServicePlan:getServicePlan",
                "majorVersion": 5
            },
            "azurerm_servicebus_namespace": {
                "current": "azure:servicebus/getNamespace:getNamespace",
                "majorVersion": 5
            },
            "azurerm_servicebus_namespace_authorization_rule": {
                "current": "azure:servicebus/getNamespaceAuthorizationRule:getNamespaceAuthorizationRule",
                "majorVersion": 5
            },
            "azurerm_servicebus_namespace_disaster_recovery_config": {
                "current": "azure:servicebus/getNamespaceDisasterRecoveryConfig:getNamespaceDisasterRecoveryConfig",
                "majorVersion": 5
            },
            "azurerm_servicebus_namespace_legacy": {
                "current": "azure:eventhub/getServiceBusNamespace:getServiceBusNamespace",
                "majorVersion": 5
            },
            "azurerm_servicebus_queue": {
                "current": "azure:servicebus/getQueue:getQueue",
                "majorVersion": 5
            },
            "azurerm_servicebus_queue_authorization_rule": {
                "current": "azure:servicebus/getQueueAuthorizationRule:getQueueAuthorizationRule",
                "majorVersion": 5
            },
            "azurerm_servicebus_subscription": {
                "current": "azure:servicebus/getSubscription:getSubscription",
                "majorVersion": 5
            },
            "azurerm_servicebus_topic": {
                "current": "azure:servicebus/getTopic:getTopic",
                "majorVersion": 5
            },
            "azurerm_servicebus_topic_authorization_rule": {
                "current": "azure:servicebus/getTopicAuthorizationRule:getTopicAuthorizationRule",
                "majorVersion": 5
            },
            "azurerm_shared_image": {
                "current": "azure:compute/getSharedImage:getSharedImage",
                "majorVersion": 5,
                "fields": {
                    "identifier": {
                        "maxItemsOne": false
                    },
                    "purchase_plan": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_shared_image_gallery": {
                "current": "azure:compute/getSharedImageGallery:getSharedImageGallery",
                "majorVersion": 5
            },
            "azurerm_shared_image_version": {
                "current": "azure:compute/getSharedImageVersion:getSharedImageVersion",
                "majorVersion": 5,
                "fields": {
                    "target_region": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_shared_image_versions": {
                "current": "azure:compute/getSharedImageVersions:getSharedImageVersions",
                "majorVersion": 5,
                "fields": {
                    "images": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "target_region": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_signalr_service": {
                "current": "azure:signalr/getService:getService",
                "majorVersion": 5
            },
            "azurerm_site_recovery_fabric": {
                "current": "azure:siterecovery/getFabric:getFabric",
                "majorVersion": 5
            },
            "azurerm_site_recovery_protection_container": {
                "current": "azure:siterecovery/getProtectionContainer:getProtectionContainer",
                "majorVersion": 5
            },
            "azurerm_site_recovery_replication_policy": {
                "current": "azure:siterecovery/getReplicationPolicy:getReplicationPolicy",
                "majorVersion": 5
            },
            "azurerm_site_recovery_replication_recovery_plan": {
                "current": "azure:siterecovery/getReplicationRecoveryPlan:getReplicationRecoveryPlan",
                "majorVersion": 5,
                "fields": {
                    "azure_to_azure_settings": {
                        "maxItemsOne": false
                    },
                    "recovery_group": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "post_action": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "maxItemsOne": false,
                                        "elem": {
                                            "fields": {
                                                "fail_over_directions": {
                                                    "maxItemsOne": false
                                                },
                                                "fail_over_types": {
                                                    "maxItemsOne": false
                                                }
                                            }
                                        }
                                    }
                                },
                                "pre_action": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "maxItemsOne": false,
                                        "elem": {
                                            "fields": {
                                                "fail_over_directions": {
                                                    "maxItemsOne": false
                                                },
                                                "fail_over_types": {
                                                    "maxItemsOne": false
                                                }
                                            }
                                        }
                                    }
                                },
                                "replicated_protected_items": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_snapshot": {
                "current": "azure:compute/getSnapshot:getSnapshot",
                "majorVersion": 5,
                "fields": {
                    "encryption_settings": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "disk_encryption_key": {
                                    "maxItemsOne": false
                                },
                                "key_encryption_key": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_source_control_token": {
                "current": "azure:appservice/getSourceControlToken:getSourceControlToken",
                "majorVersion": 5
            },
            "azurerm_spatial_anchors_account": {
                "current": "azure:mixedreality/getSpatialAnchorsAccount:getSpatialAnchorsAccount",
                "majorVersion": 5
            },
            "azurerm_spring_cloud_app": {
                "current": "azure:appplatform/getSpringCloudApp:getSpringCloudApp",
                "majorVersion": 5,
                "fields": {
                    "identity": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "identity_ids": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "persistent_disk": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_spring_cloud_service": {
                "current": "azure:appplatform/getSpringCloudService:getSpringCloudService",
                "majorVersion": 5,
                "fields": {
                    "config_server_git_setting": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "http_basic_auth": {
                                    "maxItemsOne": false
                                },
                                "repository": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "http_basic_auth": {
                                                "maxItemsOne": false
                                            },
                                            "pattern": {
                                                "maxItemsOne": false
                                            },
                                            "search_paths": {
                                                "maxItemsOne": false
                                            },
                                            "ssh_auth": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "search_paths": {
                                    "maxItemsOne": false
                                },
                                "ssh_auth": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "outbound_public_ip_addresses": {
                        "maxItemsOne": false
                    },
                    "required_network_traffic_rules": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "fqdns": {
                                    "maxItemsOne": false
                                },
                                "ip_addresses": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_sql_database": {
                "current": "azure:sql/getDatabase:getDatabase",
                "majorVersion": 5
            },
            "azurerm_sql_managed_instance": {
                "current": "azure:sql/getSqlManagedInstance:getSqlManagedInstance",
                "majorVersion": 5,
                "fields": {
                    "identity": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_sql_server": {
                "current": "azure:sql/getServer:getServer",
                "majorVersion": 5,
                "fields": {
                    "identity": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_ssh_public_key": {
                "current": "azure:compute/getSshPublicKey:getSshPublicKey",
                "majorVersion": 5
            },
            "azurerm_stack_hci_cluster": {
                "current": "azure:stack/getHciCluster:getHciCluster",
                "majorVersion": 5
            },
            "azurerm_storage_account": {
                "current": "azure:storage/getAccount:getAccount",
                "majorVersion": 5,
                "fields": {
                    "azure_files_authentication": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "active_directory": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "custom_domain": {
                        "maxItemsOne": false
                    },
                    "identity": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "identity_ids": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_storage_account_blob_container_sas": {
                "current": "azure:storage/getAccountBlobContainerSAS:getAccountBlobContainerSAS",
                "majorVersion": 5,
                "fields": {
                    "permissions": {
                        "maxItemsOne": true
                    }
                }
            },
            "azurerm_storage_account_sas": {
                "current": "azure:storage/getAccountSAS:getAccountSAS",
                "majorVersion": 5,
                "fields": {
                    "permissions": {
                        "maxItemsOne": true
                    },
                    "resource_types": {
                        "maxItemsOne": true
                    },
                    "services": {
                        "maxItemsOne": true
                    }
                }
            },
            "azurerm_storage_blob": {
                "current": "azure:storage/getBlob:getBlob",
                "majorVersion": 5
            },
            "azurerm_storage_container": {
                "current": "azure:storage/getStorageContainer:getStorageContainer",
                "majorVersion": 5
            },
            "azurerm_storage_containers": {
                "current": "azure:storage/getContainers:getContainers",
                "majorVersion": 5,
                "fields": {
                    "containers": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_storage_encryption_scope": {
                "current": "azure:storage/getEncryptionScope:getEncryptionScope",
                "majorVersion": 5
            },
            "azurerm_storage_management_policy": {
                "current": "azure:storage/getPolicy:getPolicy",
                "majorVersion": 5,
                "fields": {
                    "rule": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "actions": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "base_blob": {
                                                "maxItemsOne": false
                                            },
                                            "snapshot": {
                                                "maxItemsOne": false
                                            },
                                            "version": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "filters": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "blob_types": {
                                                "maxItemsOne": false
                                            },
                                            "match_blob_index_tag": {
                                                "maxItemsOne": false
                                            },
                                            "prefix_match": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_storage_share": {
                "current": "azure:storage/getShare:getShare",
                "majorVersion": 5,
                "fields": {
                    "acl": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "access_policy": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_storage_sync": {
                "current": "azure:storage/getSync:getSync",
                "majorVersion": 5
            },
            "azurerm_storage_sync_group": {
                "current": "azure:storage/getSyncGroup:getSyncGroup",
                "majorVersion": 5
            },
            "azurerm_storage_table_entity": {
                "current": "azure:storage/getTableEntity:getTableEntity",
                "majorVersion": 5
            },
            "azurerm_stream_analytics_job": {
                "current": "azure:streamanalytics/getJob:getJob",
                "majorVersion": 5,
                "fields": {
                    "identity": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_subnet": {
                "current": "azure:network/getSubnet:getSubnet",
                "majorVersion": 5,
                "fields": {
                    "address_prefixes": {
                        "maxItemsOne": false
                    },
                    "service_endpoints": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_subscription": {
                "current": "azure:core/getSubscription:getSubscription",
                "majorVersion": 5
            },
            "azurerm_subscription_template_deployment": {
                "current": "azure:core/getSubscriptionTemplateDeployment:getSubscriptionTemplateDeployment",
                "majorVersion": 5
            },
            "azurerm_subscriptions": {
                "current": "azure:core/getSubscriptions:getSubscriptions",
                "majorVersion": 5,
                "fields": {
                    "subscriptions": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_synapse_workspace": {
                "current": "azure:synapse/getWorkspace:getWorkspace",
                "majorVersion": 5,
                "fields": {
                    "identity": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "identity_ids": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_template_spec_version": {
                "current": "azure:core/getTemplateSpecVersion:getTemplateSpecVersion",
                "majorVersion": 5
            },
            "azurerm_tenant_template_deployment": {
                "current": "azure:core/getTenantTemplateDeployment:getTenantTemplateDeployment",
                "majorVersion": 5
            },
            "azurerm_traffic_manager_geographical_location": {
                "current": "azure:network/getTrafficManager:getTrafficManager",
                "majorVersion": 5
            },
            "azurerm_traffic_manager_geographical_location_legacy": {
                "current": "azure:trafficmanager/getGeographicalLocation:getGeographicalLocation",
                "majorVersion": 5
            },
            "azurerm_traffic_manager_profile": {
                "current": "azure:network/getTrafficManagerProfile:getTrafficManagerProfile",
                "majorVersion": 5,
                "fields": {
                    "dns_config": {
                        "maxItemsOne": false
                    },
                    "monitor_config": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "custom_header": {
                                    "maxItemsOne": false
                                },
                                "expected_status_code_ranges": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_user_assigned_identity": {
                "current": "azure:authorization/getUserAssignedIdentity:getUserAssignedIdentity",
                "majorVersion": 5
            },
            "azurerm_user_assigned_identity_legacy": {
                "current": "azure:core/getUserAssignedIdentity:getUserAssignedIdentity",
                "majorVersion": 5
            },
            "azurerm_virtual_desktop_host_pool": {
                "current": "azure:desktopvirtualization/getHostPool:getHostPool",
                "majorVersion": 5,
                "fields": {
                    "scheduled_agent_updates": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "schedule": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_virtual_hub": {
                "current": "azure:network/getVirtualHub:getVirtualHub",
                "majorVersion": 5,
                "fields": {
                    "virtual_router_ips": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_virtual_hub_connection": {
                "current": "azure:network/getVirtualHubConnection:getVirtualHubConnection",
                "majorVersion": 5,
                "fields": {
                    "routing": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "propagated_route_table": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "labels": {
                                                "maxItemsOne": false
                                            },
                                            "route_table_ids": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "static_vnet_route": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "address_prefixes": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_virtual_hub_route_table": {
                "current": "azure:network/getVirtualHubRouteTable:getVirtualHubRouteTable",
                "majorVersion": 5,
                "fields": {
                    "labels": {
                        "maxItemsOne": false
                    },
                    "route": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "destinations": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_virtual_machine": {
                "current": "azure:compute/getVirtualMachine:getVirtualMachine",
                "majorVersion": 5,
                "fields": {
                    "identity": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "identity_ids": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "private_ip_addresses": {
                        "maxItemsOne": false
                    },
                    "public_ip_addresses": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_virtual_machine_scale_set": {
                "current": "azure:compute/getVirtualMachineScaleSet:getVirtualMachineScaleSet",
                "majorVersion": 5,
                "fields": {
                    "identity": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "identity_ids": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "instances": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "private_ip_addresses": {
                                    "maxItemsOne": false
                                },
                                "public_ip_addresses": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "network_interface": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "dns_servers": {
                                    "maxItemsOne": false
                                },
                                "ip_configuration": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "application_gateway_backend_address_pool_ids": {
                                                "maxItemsOne": false
                                            },
                                            "application_security_group_ids": {
                                                "maxItemsOne": false
                                            },
                                            "load_balancer_backend_address_pool_ids": {
                                                "maxItemsOne": false
                                            },
                                            "load_balancer_inbound_nat_rules_ids": {
                                                "maxItemsOne": false
                                            },
                                            "public_ip_address": {
                                                "maxItemsOne": false,
                                                "elem": {
                                                    "fields": {
                                                        "ip_tag": {
                                                            "maxItemsOne": false
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_virtual_network": {
                "current": "azure:network/getVirtualNetwork:getVirtualNetwork",
                "majorVersion": 5,
                "fields": {
                    "address_space": {
                        "maxItemsOne": false
                    },
                    "dns_servers": {
                        "maxItemsOne": false
                    },
                    "subnets": {
                        "maxItemsOne": false
                    },
                    "vnet_peerings_addresses": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_virtual_network_gateway": {
                "current": "azure:network/getVirtualNetworkGateway:getVirtualNetworkGateway",
                "majorVersion": 5,
                "fields": {
                    "bgp_settings": {
                        "maxItemsOne": false
                    },
                    "custom_route": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "address_prefixes": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "ip_configuration": {
                        "maxItemsOne": false
                    },
                    "vpn_client_configuration": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "address_space": {
                                    "maxItemsOne": false
                                },
                                "revoked_certificate": {
                                    "maxItemsOne": false
                                },
                                "root_certificate": {
                                    "maxItemsOne": false
                                },
                                "vpn_client_protocols": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_virtual_network_gateway_connection": {
                "current": "azure:network/getGatewayConnection:getGatewayConnection",
                "majorVersion": 5,
                "fields": {
                    "ipsec_policy": {
                        "maxItemsOne": false
                    },
                    "traffic_selector_policy": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "local_address_cidrs": {
                                    "maxItemsOne": false
                                },
                                "remote_address_cidrs": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_virtual_wan": {
                "current": "azure:network/getVirtualWan:getVirtualWan",
                "majorVersion": 5,
                "fields": {
                    "virtual_hub_ids": {
                        "maxItemsOne": false
                    },
                    "vpn_site_ids": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_vmware_private_cloud": {
                "current": "azure:avs/getPrivateCloud:getPrivateCloud",
                "majorVersion": 5,
                "fields": {
                    "circuit": {
                        "maxItemsOne": false
                    },
                    "management_cluster": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "hosts": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_vpn_gateway": {
                "current": "azure:network/getVpnGateway:getVpnGateway",
                "majorVersion": 5,
                "fields": {
                    "bgp_settings": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "instance_0_bgp_peering_address": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "custom_ips": {
                                                "maxItemsOne": false
                                            },
                                            "default_ips": {
                                                "maxItemsOne": false
                                            },
                                            "tunnel_ips": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "instance_1_bgp_peering_address": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "custom_ips": {
                                                "maxItemsOne": false
                                            },
                                            "default_ips": {
                                                "maxItemsOne": false
                                            },
                                            "tunnel_ips": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_web_application_firewall_policy": {
                "current": "azure:waf/getFirewallPolicy:getFirewallPolicy",
                "majorVersion": 5
            },
            "azurerm_web_pubsub": {
                "current": "azure:webpubsub/getService:getService",
                "majorVersion": 5
            },
            "azurerm_web_pubsub_private_link_resource": {
                "current": "azure:webpubsub/getPrivateLinkResource:getPrivateLinkResource",
                "majorVersion": 5,
                "fields": {
                    "shared_private_link_resource_types": {
                        "maxItemsOne": false
                    }
                }
            },
            "azurerm_windows_function_app": {
                "current": "azure:appservice/getWindowsFunctionApp:getWindowsFunctionApp",
                "majorVersion": 5,
                "fields": {
                    "auth_settings": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "active_directory": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "allowed_audiences": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "allowed_external_redirect_urls": {
                                    "maxItemsOne": false
                                },
                                "facebook": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "oauth_scopes": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "github": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "oauth_scopes": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "google": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "oauth_scopes": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "microsoft": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "oauth_scopes": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "twitter": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "auth_settings_v2": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "active_directory_v2": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "allowed_applications": {
                                                "maxItemsOne": false
                                            },
                                            "allowed_audiences": {
                                                "maxItemsOne": false
                                            },
                                            "allowed_groups": {
                                                "maxItemsOne": false
                                            },
                                            "allowed_identities": {
                                                "maxItemsOne": false
                                            },
                                            "jwt_allowed_client_applications": {
                                                "maxItemsOne": false
                                            },
                                            "jwt_allowed_groups": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "apple_v2": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "login_scopes": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "azure_static_web_app_v2": {
                                    "maxItemsOne": false
                                },
                                "custom_oidc_v2": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "scopes": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "excluded_paths": {
                                    "maxItemsOne": false
                                },
                                "facebook_v2": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "login_scopes": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "github_v2": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "login_scopes": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "google_v2": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "allowed_audiences": {
                                                "maxItemsOne": false
                                            },
                                            "login_scopes": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "login": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "allowed_external_redirect_urls": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "microsoft_v2": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "allowed_audiences": {
                                                "maxItemsOne": false
                                            },
                                            "login_scopes": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "twitter_v2": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "backup": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "schedule": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "connection_string": {
                        "maxItemsOne": false
                    },
                    "identity": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "identity_ids": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "outbound_ip_address_list": {
                        "maxItemsOne": false
                    },
                    "possible_outbound_ip_address_list": {
                        "maxItemsOne": false
                    },
                    "site_config": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "app_service_logs": {
                                    "maxItemsOne": false
                                },
                                "application_stack": {
                                    "maxItemsOne": false
                                },
                                "cors": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "allowed_origins": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "default_documents": {
                                    "maxItemsOne": false
                                },
                                "ip_restriction": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "headers": {
                                                "maxItemsOne": false,
                                                "elem": {
                                                    "fields": {
                                                        "x_azure_fdid": {
                                                            "maxItemsOne": false
                                                        },
                                                        "x_fd_health_probe": {
                                                            "maxItemsOne": false
                                                        },
                                                        "x_forwarded_for": {
                                                            "maxItemsOne": false
                                                        },
                                                        "x_forwarded_host": {
                                                            "maxItemsOne": false
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "scm_ip_restriction": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "headers": {
                                                "maxItemsOne": false,
                                                "elem": {
                                                    "fields": {
                                                        "x_azure_fdid": {
                                                            "maxItemsOne": false
                                                        },
                                                        "x_fd_health_probe": {
                                                            "maxItemsOne": false
                                                        },
                                                        "x_forwarded_for": {
                                                            "maxItemsOne": false
                                                        },
                                                        "x_forwarded_host": {
                                                            "maxItemsOne": false
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "site_credential": {
                        "maxItemsOne": false
                    },
                    "sticky_settings": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "app_setting_names": {
                                    "maxItemsOne": false
                                },
                                "connection_string_names": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    }
                }
            },
            "azurerm_windows_web_app": {
                "current": "azure:appservice/getWindowsWebApp:getWindowsWebApp",
                "majorVersion": 5,
                "fields": {
                    "auth_settings": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "active_directory": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "allowed_audiences": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "allowed_external_redirect_urls": {
                                    "maxItemsOne": false
                                },
                                "facebook": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "oauth_scopes": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "github": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "oauth_scopes": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "google": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "oauth_scopes": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "microsoft": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "oauth_scopes": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "twitter": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "auth_settings_v2": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "active_directory_v2": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "allowed_applications": {
                                                "maxItemsOne": false
                                            },
                                            "allowed_audiences": {
                                                "maxItemsOne": false
                                            },
                                            "allowed_groups": {
                                                "maxItemsOne": false
                                            },
                                            "allowed_identities": {
                                                "maxItemsOne": false
                                            },
                                            "jwt_allowed_client_applications": {
                                                "maxItemsOne": false
                                            },
                                            "jwt_allowed_groups": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "apple_v2": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "login_scopes": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "azure_static_web_app_v2": {
                                    "maxItemsOne": false
                                },
                                "custom_oidc_v2": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "scopes": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "excluded_paths": {
                                    "maxItemsOne": false
                                },
                                "facebook_v2": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "login_scopes": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "github_v2": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "login_scopes": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "google_v2": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "allowed_audiences": {
                                                "maxItemsOne": false
                                            },
                                            "login_scopes": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "login": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "allowed_external_redirect_urls": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "microsoft_v2": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "allowed_audiences": {
                                                "maxItemsOne": false
                                            },
                                            "login_scopes": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "twitter_v2": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "backup": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "schedule": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "connection_string": {
                        "maxItemsOne": false
                    },
                    "identity": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "identity_ids": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "logs": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "application_logs": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "azure_blob_storage": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "http_logs": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "azure_blob_storage": {
                                                "maxItemsOne": false
                                            },
                                            "file_system": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "outbound_ip_address_list": {
                        "maxItemsOne": false
                    },
                    "possible_outbound_ip_address_list": {
                        "maxItemsOne": false
                    },
                    "site_config": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "application_stack": {
                                    "maxItemsOne": false
                                },
                                "auto_heal_setting": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "action": {
                                                "maxItemsOne": false,
                                                "elem": {
                                                    "fields": {
                                                        "custom_action": {
                                                            "maxItemsOne": false
                                                        }
                                                    }
                                                }
                                            },
                                            "trigger": {
                                                "maxItemsOne": false,
                                                "elem": {
                                                    "fields": {
                                                        "requests": {
                                                            "maxItemsOne": false
                                                        },
                                                        "slow_request": {
                                                            "maxItemsOne": false
                                                        },
                                                        "status_code": {
                                                            "maxItemsOne": false
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "cors": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "allowed_origins": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "default_documents": {
                                    "maxItemsOne": false
                                },
                                "ip_restriction": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "headers": {
                                                "maxItemsOne": false,
                                                "elem": {
                                                    "fields": {
                                                        "x_azure_fdid": {
                                                            "maxItemsOne": false
                                                        },
                                                        "x_fd_health_probe": {
                                                            "maxItemsOne": false
                                                        },
                                                        "x_forwarded_for": {
                                                            "maxItemsOne": false
                                                        },
                                                        "x_forwarded_host": {
                                                            "maxItemsOne": false
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "scm_ip_restriction": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "headers": {
                                                "maxItemsOne": false,
                                                "elem": {
                                                    "fields": {
                                                        "x_azure_fdid": {
                                                            "maxItemsOne": false
                                                        },
                                                        "x_fd_health_probe": {
                                                            "maxItemsOne": false
                                                        },
                                                        "x_forwarded_for": {
                                                            "maxItemsOne": false
                                                        },
                                                        "x_forwarded_host": {
                                                            "maxItemsOne": false
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "virtual_application": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "virtual_directory": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "site_credential": {
                        "maxItemsOne": false
                    },
                    "sticky_settings": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "app_setting_names": {
                                    "maxItemsOne": false
                                },
                                "connection_string_names": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "storage_account": {
                        "maxItemsOne": false
                    }
                }
            }
        }
    },
    "renames": {
        "resources": {
            "azure:aadb2c/directory:Directory": "azurerm_aadb2c_directory",
            "azure:analysisservices/server:Server": "azurerm_analysis_services_server",
            "azure:apimanagement/api:Api": "azurerm_api_management_api",
            "azure:apimanagement/apiDiagnostic:ApiDiagnostic": "azurerm_api_management_api_diagnostic",
            "azure:apimanagement/apiOperation:ApiOperation": "azurerm_api_management_api_operation",
            "azure:apimanagement/apiOperationPolicy:ApiOperationPolicy": "azurerm_api_management_api_operation_policy",
            "azure:apimanagement/apiOperationTag:ApiOperationTag": "azurerm_api_management_api_operation_tag",
            "azure:apimanagement/apiPolicy:ApiPolicy": "azurerm_api_management_api_policy",
            "azure:apimanagement/apiRelease:ApiRelease": "azurerm_api_management_api_release",
            "azure:apimanagement/apiSchema:ApiSchema": "azurerm_api_management_api_schema",
            "azure:apimanagement/apiTag:ApiTag": "azurerm_api_management_api_tag",
            "azure:apimanagement/apiTagDescription:ApiTagDescription": "azurerm_api_management_api_tag_description",
            "azure:apimanagement/apiVersionSet:ApiVersionSet": "azurerm_api_management_api_version_set",
            "azure:apimanagement/authorizationServer:AuthorizationServer": "azurerm_api_management_authorization_server",
            "azure:apimanagement/backend:Backend": "azurerm_api_management_backend",
            "azure:apimanagement/certificate:Certificate": "azurerm_api_management_certificate",
            "azure:apimanagement/customDomain:CustomDomain": "azurerm_api_management_custom_domain",
            "azure:apimanagement/diagnostic:Diagnostic": "azurerm_api_management_diagnostic",
            "azure:apimanagement/emailTemplate:EmailTemplate": "azurerm_api_management_email_template",
            "azure:apimanagement/gateway:Gateway": "azurerm_api_management_gateway",
            "azure:apimanagement/gatewayApi:GatewayApi": "azurerm_api_management_gateway_api",
            "azure:apimanagement/gatewayCertificateAuthority:GatewayCertificateAuthority": "azurerm_api_management_gateway_certificate_authority",
            "azure:apimanagement/gatewayHostNameConfiguration:GatewayHostNameConfiguration": "azurerm_api_management_gateway_host_name_configuration",
            "azure:apimanagement/globalSchema:GlobalSchema": "azurerm_api_management_global_schema",
            "azure:apimanagement/group:Group": "azurerm_api_management_group",
            "azure:apimanagement/groupUser:GroupUser": "azurerm_api_management_group_user",
            "azure:apimanagement/identityProviderAad:IdentityProviderAad": "azurerm_api_management_identity_provider_aad",
            "azure:apimanagement/identityProviderAadb2c:IdentityProviderAadb2c": "azurerm_api_management_identity_provider_aadb2c",
            "azure:apimanagement/identityProviderFacebook:IdentityProviderFacebook": "azurerm_api_management_identity_provider_facebook",
            "azure:apimanagement/identityProviderGoogle:IdentityProviderGoogle": "azurerm_api_management_identity_provider_google",
            "azure:apimanagement/identityProviderMicrosoft:IdentityProviderMicrosoft": "azurerm_api_management_identity_provider_microsoft",
            "azure:apimanagement/identityProviderTwitter:IdentityProviderTwitter": "azurerm_api_management_identity_provider_twitter",
            "azure:apimanagement/logger:Logger": "azurerm_api_management_logger",
            "azure:apimanagement/namedValue:NamedValue": "azurerm_api_management_named_value",
            "azure:apimanagement/notificationRecipientEmail:NotificationRecipientEmail": "azurerm_api_management_notification_recipient_email",
            "azure:apimanagement/notificationRecipientUser:NotificationRecipientUser": "azurerm_api_management_notification_recipient_user",
            "azure:apimanagement/openIdConnectProvider:OpenIdConnectProvider": "azurerm_api_management_openid_connect_provider",
            "azure:apimanagement/policy:Policy": "azurerm_api_management_policy",
            "azure:apimanagement/product:Product": "azurerm_api_management_product",
            "azure:apimanagement/productApi:ProductApi": "azurerm_api_management_product_api",
            "azure:apimanagement/productGroup:ProductGroup": "azurerm_api_management_product_group",
            "azure:apimanagement/productPolicy:ProductPolicy": "azurerm_api_management_product_policy",
            "azure:apimanagement/productTag:ProductTag": "azurerm_api_management_product_tag",
            "azure:apimanagement/redisCache:RedisCache": "azurerm_api_management_redis_cache",
            "azure:apimanagement/service:Service": "azurerm_api_management",
            "azure:apimanagement/subscription:Subscription": "azurerm_api_management_subscription",
            "azure:apimanagement/tag:Tag": "azurerm_api_management_tag",
            "azure:apimanagement/user:User": "azurerm_api_management_user",
            "azure:appconfiguration/configurationFeature:ConfigurationFeature": "azurerm_app_configuration_feature",
            "azure:appconfiguration/configurationKey:ConfigurationKey": "azurerm_app_configuration_key",
            "azure:appconfiguration/configurationStore:ConfigurationStore": "azurerm_app_configuration",
            "azure:appconfiguration/licationLoadBalancer:LicationLoadBalancer": "azurerm_application_load_balancer",
            "azure:appconfiguration/licationLoadBalancerFrontend:LicationLoadBalancerFrontend": "azurerm_application_load_balancer_frontend",
            "azure:appconfiguration/licationLoadBalancerSubnetAssociation:LicationLoadBalancerSubnetAssociation": "azurerm_application_load_balancer_subnet_association",
            "azure:appinsights/analyticsItem:AnalyticsItem": "azurerm_application_insights_analytics_item",
            "azure:appinsights/apiKey:ApiKey": "azurerm_application_insights_api_key",
            "azure:appinsights/insights:Insights": "azurerm_application_insights",
            "azure:appinsights/smartDetectionRule:SmartDetectionRule": "azurerm_application_insights_smart_detection_rule",
            "azure:appinsights/standardWebTest:StandardWebTest": "azurerm_application_insights_standard_web_test",
            "azure:appinsights/webTest:WebTest": "azurerm_application_insights_web_test",
            "azure:appinsights/workbook:Workbook": "azurerm_application_insights_workbook",
            "azure:appinsights/workbookTemplate:WorkbookTemplate": "azurerm_application_insights_workbook_template",
            "azure:appplatform/springCloudAccelerator:SpringCloudAccelerator": "azurerm_spring_cloud_accelerator",
            "azure:appplatform/springCloudActiveDeployment:SpringCloudActiveDeployment": "azurerm_spring_cloud_active_deployment",
            "azure:appplatform/springCloudApiPortal:SpringCloudApiPortal": "azurerm_spring_cloud_api_portal",
            "azure:appplatform/springCloudApiPortalCustomDomain:SpringCloudApiPortalCustomDomain": "azurerm_spring_cloud_api_portal_custom_domain",
            "azure:appplatform/springCloudApp:SpringCloudApp": "azurerm_spring_cloud_app",
            "azure:appplatform/springCloudAppCosmosDBAssociation:SpringCloudAppCosmosDBAssociation": "azurerm_spring_cloud_app_cosmosdb_association",
            "azure:appplatform/springCloudAppMysqlAssociation:SpringCloudAppMysqlAssociation": "azurerm_spring_cloud_app_mysql_association",
            "azure:appplatform/springCloudAppRedisAssociation:SpringCloudAppRedisAssociation": "azurerm_spring_cloud_app_redis_association",
            "azure:appplatform/springCloudApplicationInsightsApplicationPerformanceMonitoring:SpringCloudApplicationInsightsApplicationPerformanceMonitoring": "azurerm_spring_cloud_application_insights_application_performance_monitoring",
            "azure:appplatform/springCloudApplicationLiveView:SpringCloudApplicationLiveView": "azurerm_spring_cloud_application_live_view",
            "azure:appplatform/springCloudBuildDeployment:SpringCloudBuildDeployment": "azurerm_spring_cloud_build_deployment",
            "azure:appplatform/springCloudBuildPackBinding:SpringCloudBuildPackBinding": "azurerm_spring_cloud_build_pack_binding",
            "azure:appplatform/springCloudBuilder:SpringCloudBuilder": "azurerm_spring_cloud_builder",
            "azure:appplatform/springCloudCertificate:SpringCloudCertificate": "azurerm_spring_cloud_certificate",
            "azure:appplatform/springCloudConfigurationService:SpringCloudConfigurationService": "azurerm_spring_cloud_configuration_service",
            "azure:appplatform/springCloudConnection:SpringCloudConnection": "azurerm_spring_cloud_connection",
            "azure:appplatform/springCloudContainerDeployment:SpringCloudContainerDeployment": "azurerm_spring_cloud_container_deployment",
            "azure:appplatform/springCloudCustomDomain:SpringCloudCustomDomain": "azurerm_spring_cloud_custom_domain",
            "azure:appplatform/springCloudCustomizedAccelerator:SpringCloudCustomizedAccelerator": "azurerm_spring_cloud_customized_accelerator",
            "azure:appplatform/springCloudDevToolPortal:SpringCloudDevToolPortal": "azurerm_spring_cloud_dev_tool_portal",
            "azure:appplatform/springCloudGateway:SpringCloudGateway": "azurerm_spring_cloud_gateway",
            "azure:appplatform/springCloudGatewayCustomDomain:SpringCloudGatewayCustomDomain": "azurerm_spring_cloud_gateway_custom_domain",
            "azure:appplatform/springCloudGatewayRouteConfig:SpringCloudGatewayRouteConfig": "azurerm_spring_cloud_gateway_route_config",
            "azure:appplatform/springCloudJavaDeployment:SpringCloudJavaDeployment": "azurerm_spring_cloud_java_deployment",
            "azure:appplatform/springCloudService:SpringCloudService": "azurerm_spring_cloud_service",
            "azure:appplatform/springCloudStorage:SpringCloudStorage": "azurerm_spring_cloud_storage",
            "azure:appservice/activeSlot:ActiveSlot": "azurerm_app_service_active_slot",
            "azure:appservice/appConnection:AppConnection": "azurerm_function_app_connection",
            "azure:appservice/appService:AppService": "azurerm_app_service",
            "azure:appservice/certificate:Certificate": "azurerm_app_service_certificate",
            "azure:appservice/certificateBinding:CertificateBinding": "azurerm_app_service_certificate_binding",
            "azure:appservice/certificateOrder:CertificateOrder": "azurerm_app_service_certificate_order",
            "azure:appservice/connection:Connection": "azurerm_app_service_connection",
            "azure:appservice/customHostnameBinding:CustomHostnameBinding": "azurerm_app_service_custom_hostname_binding",
            "azure:appservice/environment:Environment": "azurerm_app_service_environment",
            "azure:appservice/environmentV3:EnvironmentV3": "azurerm_app_service_environment_v3",
            "azure:appservice/functionApp:FunctionApp": "azurerm_function_app",
            "azure:appservice/functionAppActiveSlot:FunctionAppActiveSlot": "azurerm_function_app_active_slot",
            "azure:appservice/functionAppFunction:FunctionAppFunction": "azurerm_function_app_function",
            "azure:appservice/functionAppHybridConnection:FunctionAppHybridConnection": "azurerm_function_app_hybrid_connection",
            "azure:appservice/functionAppSlot:FunctionAppSlot": "azurerm_function_app_slot",
            "azure:appservice/hybridConnection:HybridConnection": "azurerm_app_service_hybrid_connection",
            "azure:appservice/linuxFunctionApp:LinuxFunctionApp": "azurerm_linux_function_app",
            "azure:appservice/linuxFunctionAppSlot:LinuxFunctionAppSlot": "azurerm_linux_function_app_slot",
            "azure:appservice/linuxWebApp:LinuxWebApp": "azurerm_linux_web_app",
            "azure:appservice/linuxWebAppSlot:LinuxWebAppSlot": "azurerm_linux_web_app_slot",
            "azure:appservice/managedCertificate:ManagedCertificate": "azurerm_app_service_managed_certificate",
            "azure:appservice/plan:Plan": "azurerm_app_service_plan",
            "azure:appservice/publicCertificate:PublicCertificate": "azurerm_app_service_public_certificate",
            "azure:appservice/servicePlan:ServicePlan": "azurerm_service_plan",
            "azure:appservice/slot:Slot": "azurerm_app_service_slot",
            "azure:appservice/slotCustomHostnameBinding:SlotCustomHostnameBinding": "azurerm_app_service_slot_custom_hostname_binding",
            "azure:appservice/slotVirtualNetworkSwiftConnection:SlotVirtualNetworkSwiftConnection": "azurerm_app_service_slot_virtual_network_swift_connection",
            "azure:appservice/sourceCodeToken:SourceCodeToken": "azurerm_app_service_source_control_token",
            "azure:appservice/sourceControl:SourceControl": "azurerm_app_service_source_control",
            "azure:appservice/sourceControlSlot:SourceControlSlot": "azurerm_app_service_source_control_slot",
            "azure:appservice/sourceControlToken:SourceControlToken": "azurerm_source_control_token",
            "azure:appservice/staticSite:StaticSite": "azurerm_static_site",
            "azure:appservice/staticSiteCustomDomain:StaticSiteCustomDomain": "azurerm_static_site_custom_domain",
            "azure:appservice/virtualNetworkSwiftConnection:VirtualNetworkSwiftConnection": "azurerm_app_service_virtual_network_swift_connection",
            "azure:appservice/webAppActiveSlot:WebAppActiveSlot": "azurerm_web_app_active_slot",
            "azure:appservice/webAppHybridConnection:WebAppHybridConnection": "azurerm_web_app_hybrid_connection",
            "azure:appservice/windowsFunctionApp:WindowsFunctionApp": "azurerm_windows_function_app",
            "azure:appservice/windowsFunctionAppSlot:WindowsFunctionAppSlot": "azurerm_windows_function_app_slot",
            "azure:appservice/windowsWebApp:WindowsWebApp": "azurerm_windows_web_app",
            "azure:appservice/windowsWebAppSlot:WindowsWebAppSlot": "azurerm_windows_web_app_slot",
            "azure:arc/privateLinkScope:PrivateLinkScope": "azurerm_arc_private_link_scope",
            "azure:arc/resourceBridgeAppliance:ResourceBridgeAppliance": "azurerm_arc_resource_bridge_appliance",
            "azure:arckubernetes/cluster:Cluster": "azurerm_arc_kubernetes_cluster",
            "azure:arckubernetes/clusterExtension:ClusterExtension": "azurerm_arc_kubernetes_cluster_extension",
            "azure:arckubernetes/fluxConfiguration:FluxConfiguration": "azurerm_arc_kubernetes_flux_configuration",
            "azure:arcmachine/extension:Extension": "azurerm_arc_machine_extension",
            "azure:armmsi/federatedIdentityCredential:FederatedIdentityCredential": "azurerm_federated_identity_credential",
            "azure:attestation/provider:Provider": "azurerm_attestation_provider",
            "azure:authorization/assignment:Assignment": "azurerm_role_assignment",
            "azure:authorization/roleDefinition:RoleDefinition": "azurerm_role_definition",
            "azure:authorization/userAssignedIdentity:UserAssignedIdentity": "azurerm_user_assigned_identity",
            "azure:automanage/configuration:Configuration": "azurerm_automanage_configuration",
            "azure:automation/account:Account": "azurerm_automation_account",
            "azure:automation/boolVariable:BoolVariable": "azurerm_automation_variable_bool",
            "azure:automation/certificate:Certificate": "azurerm_automation_certificate",
            "azure:automation/connection:Connection": "azurerm_automation_connection",
            "azure:automation/connectionCertificate:ConnectionCertificate": "azurerm_automation_connection_certificate",
            "azure:automation/connectionClassicCertificate:ConnectionClassicCertificate": "azurerm_automation_connection_classic_certificate",
            "azure:automation/connectionServicePrincipal:ConnectionServicePrincipal": "azurerm_automation_connection_service_principal",
            "azure:automation/connectionType:ConnectionType": "azurerm_automation_connection_type",
            "azure:automation/credential:Credential": "azurerm_automation_credential",
            "azure:automation/dateTimeVariable:DateTimeVariable": "azurerm_automation_variable_datetime",
            "azure:automation/dscConfiguration:DscConfiguration": "azurerm_automation_dsc_configuration",
            "azure:automation/dscNodeConfiguration:DscNodeConfiguration": "azurerm_automation_dsc_nodeconfiguration",
            "azure:automation/hybridRunbookWorker:HybridRunbookWorker": "azurerm_automation_hybrid_runbook_worker",
            "azure:automation/hybridRunbookWorkerGroup:HybridRunbookWorkerGroup": "azurerm_automation_hybrid_runbook_worker_group",
            "azure:automation/intVariable:IntVariable": "azurerm_automation_variable_int",
            "azure:automation/jobSchedule:JobSchedule": "azurerm_automation_job_schedule",
            "azure:automation/module:Module": "azurerm_automation_module",
            "azure:automation/python3Package:Python3Package": "azurerm_automation_python3_package",
            "azure:automation/runBook:RunBook": "azurerm_automation_runbook",
            "azure:automation/schedule:Schedule": "azurerm_automation_schedule",
            "azure:automation/softwareUpdateConfiguration:SoftwareUpdateConfiguration": "azurerm_automation_software_update_configuration",
            "azure:automation/sourceControl:SourceControl": "azurerm_automation_source_control",
            "azure:automation/stringVariable:StringVariable": "azurerm_automation_variable_string",
            "azure:automation/variableObject:VariableObject": "azurerm_automation_variable_object",
            "azure:automation/watcher:Watcher": "azurerm_automation_watcher",
            "azure:automation/webhook:Webhook": "azurerm_automation_webhook",
            "azure:avs/cluster:Cluster": "azurerm_vmware_cluster",
            "azure:avs/expressRouteAuthorization:ExpressRouteAuthorization": "azurerm_vmware_express_route_authorization",
            "azure:avs/netappVolumeAttachment:NetappVolumeAttachment": "azurerm_vmware_netapp_volume_attachment",
            "azure:avs/privateCloud:PrivateCloud": "azurerm_vmware_private_cloud",
            "azure:backup/containerStorageAccount:ContainerStorageAccount": "azurerm_backup_container_storage_account",
            "azure:backup/policyFileShare:PolicyFileShare": "azurerm_backup_policy_file_share",
            "azure:backup/policyVM:PolicyVM": "azurerm_backup_policy_vm",
            "azure:backup/policyVMWorkload:PolicyVMWorkload": "azurerm_backup_policy_vm_workload",
            "azure:backup/protectedFileShare:ProtectedFileShare": "azurerm_backup_protected_file_share",
            "azure:backup/protectedVM:ProtectedVM": "azurerm_backup_protected_vm",
            "azure:batch/account:Account": "azurerm_batch_account",
            "azure:batch/application:Application": "azurerm_batch_application",
            "azure:batch/certificate:Certificate": "azurerm_batch_certificate",
            "azure:batch/job:Job": "azurerm_batch_job",
            "azure:batch/pool:Pool": "azurerm_batch_pool",
            "azure:billing/accountCostManagementExport:AccountCostManagementExport": "azurerm_billing_account_cost_management_export",
            "azure:blueprint/assignment:Assignment": "azurerm_blueprint_assignment",
            "azure:bot/channelAlexa:ChannelAlexa": "azurerm_bot_channel_alexa",
            "azure:bot/channelDirectLine:ChannelDirectLine": "azurerm_bot_channel_directline",
            "azure:bot/channelDirectLineSpeech:ChannelDirectLineSpeech": "azurerm_bot_channel_direct_line_speech",
            "azure:bot/channelEmail:ChannelEmail": "azurerm_bot_channel_email",
            "azure:bot/channelFacebook:ChannelFacebook": "azurerm_bot_channel_facebook",
            "azure:bot/channelLine:ChannelLine": "azurerm_bot_channel_line",
            "azure:bot/channelSlack:ChannelSlack": "azurerm_bot_channel_slack",
            "azure:bot/channelSms:ChannelSms": "azurerm_bot_channel_sms",
            "azure:bot/channelTeams:ChannelTeams": "azurerm_bot_channel_ms_teams",
            "azure:bot/channelWebChat:ChannelWebChat": "azurerm_bot_channel_web_chat",
            "azure:bot/channelsRegistration:ChannelsRegistration": "azurerm_bot_channels_registration",
            "azure:bot/connection:Connection": "azurerm_bot_connection",
            "azure:bot/healthbot:Healthbot": "azurerm_healthbot",
            "azure:bot/serviceAzureBot:ServiceAzureBot": "azurerm_bot_service_azure_bot",
            "azure:bot/webApp:WebApp": "azurerm_bot_web_app",
            "azure:cdn/endpoint:Endpoint": "azurerm_cdn_endpoint",
            "azure:cdn/endpointCustomDomain:EndpointCustomDomain": "azurerm_cdn_endpoint_custom_domain",
            "azure:cdn/frontdoorCustomDomain:FrontdoorCustomDomain": "azurerm_cdn_frontdoor_custom_domain",
            "azure:cdn/frontdoorCustomDomainAssociation:FrontdoorCustomDomainAssociation": "azurerm_cdn_frontdoor_custom_domain_association",
            "azure:cdn/frontdoorEndpoint:FrontdoorEndpoint": "azurerm_cdn_frontdoor_endpoint",
            "azure:cdn/frontdoorFirewallPolicy:FrontdoorFirewallPolicy": "azurerm_cdn_frontdoor_firewall_policy",
            "azure:cdn/frontdoorOrigin:FrontdoorOrigin": "azurerm_cdn_frontdoor_origin",
            "azure:cdn/frontdoorOriginGroup:FrontdoorOriginGroup": "azurerm_cdn_frontdoor_origin_group",
            "azure:cdn/frontdoorProfile:FrontdoorProfile": "azurerm_cdn_frontdoor_profile",
            "azure:cdn/frontdoorRoute:FrontdoorRoute": "azurerm_cdn_frontdoor_route",
            "azure:cdn/frontdoorRouteDisableLinkToDefaultDomain:FrontdoorRouteDisableLinkToDefaultDomain": "azurerm_cdn_frontdoor_route_disable_link_to_default_domain",
            "azure:cdn/frontdoorRule:FrontdoorRule": "azurerm_cdn_frontdoor_rule",
            "azure:cdn/frontdoorRuleSet:FrontdoorRuleSet": "azurerm_cdn_frontdoor_rule_set",
            "azure:cdn/frontdoorSecret:FrontdoorSecret": "azurerm_cdn_frontdoor_secret",
            "azure:cdn/frontdoorSecurityPolicy:FrontdoorSecurityPolicy": "azurerm_cdn_frontdoor_security_policy",
            "azure:cdn/profile:Profile": "azurerm_cdn_profile",
            "azure:cognitive/account:Account": "azurerm_cognitive_account",
            "azure:cognitive/accountCustomerManagedKey:AccountCustomerManagedKey": "azurerm_cognitive_account_customer_managed_key",
            "azure:cognitive/deployment:Deployment": "azurerm_cognitive_deployment",
            "azure:communication/emailService:EmailService": "azurerm_email_communication_service",
            "azure:communication/service:Service": "azurerm_communication_service",
            "azure:compute/availabilitySet:AvailabilitySet": "azurerm_availability_set",
            "azure:compute/bastionHost:BastionHost": "azurerm_bastion_host",
            "azure:compute/capacityReservation:CapacityReservation": "azurerm_capacity_reservation",
            "azure:compute/capacityReservationGroup:CapacityReservationGroup": "azurerm_capacity_reservation_group",
            "azure:compute/dataDiskAttachment:DataDiskAttachment": "azurerm_virtual_machine_data_disk_attachment",
            "azure:compute/dedicatedHost:DedicatedHost": "azurerm_dedicated_host",
            "azure:compute/dedicatedHostGroup:DedicatedHostGroup": "azurerm_dedicated_host_group",
            "azure:compute/diskAccess:DiskAccess": "azurerm_disk_access",
            "azure:compute/diskEncryptionSet:DiskEncryptionSet": "azurerm_disk_encryption_set",
            "azure:compute/diskPool:DiskPool": "azurerm_disk_pool",
            "azure:compute/diskPoolIscsiTarget:DiskPoolIscsiTarget": "azurerm_disk_pool_iscsi_target",
            "azure:compute/diskPoolIscsiTargetLun:DiskPoolIscsiTargetLun": "azurerm_disk_pool_iscsi_target_lun",
            "azure:compute/diskPoolManagedDiskAttachment:DiskPoolManagedDiskAttachment": "azurerm_disk_pool_managed_disk_attachment",
            "azure:compute/extension:Extension": "azurerm_virtual_machine_extension",
            "azure:compute/galleryApplication:GalleryApplication": "azurerm_gallery_application",
            "azure:compute/galleryApplicationVersion:GalleryApplicationVersion": "azurerm_gallery_application_version",
            "azure:compute/image:Image": "azurerm_image",
            "azure:compute/linuxVirtualMachine:LinuxVirtualMachine": "azurerm_linux_virtual_machine",
            "azure:compute/linuxVirtualMachineScaleSet:LinuxVirtualMachineScaleSet": "azurerm_linux_virtual_machine_scale_set",
            "azure:compute/managedDisk:ManagedDisk": "azurerm_managed_disk",
            "azure:compute/managedDiskSasToken:ManagedDiskSasToken": "azurerm_managed_disk_sas_token",
            "azure:compute/orchestratedVirtualMachineScaleSet:OrchestratedVirtualMachineScaleSet": "azurerm_orchestrated_virtual_machine_scale_set",
            "azure:compute/packetCapture:PacketCapture": "azurerm_virtual_machine_packet_capture",
            "azure:compute/scaleSet:ScaleSet": "azurerm_virtual_machine_scale_set",
            "azure:compute/scaleSetPacketCapture:ScaleSetPacketCapture": "azurerm_virtual_machine_scale_set_packet_capture",
            "azure:compute/sharedImage:SharedImage": "azurerm_shared_image",
            "azure:compute/sharedImageGallery:SharedImageGallery": "azurerm_shared_image_gallery",
            "azure:compute/sharedImageVersion:SharedImageVersion": "azurerm_shared_image_version",
            "azure:compute/snapshot:Snapshot": "azurerm_snapshot",
            "azure:compute/sshPublicKey:SshPublicKey": "azurerm_ssh_public_key",
            "azure:compute/virtualMachine:VirtualMachine": "azurerm_virtual_machine",
            "azure:compute/virtualMachineScaleSetExtension:VirtualMachineScaleSetExtension": "azurerm_virtual_machine_scale_set_extension",
            "azure:compute/windowsVirtualMachine:WindowsVirtualMachine": "azurerm_windows_virtual_machine",
            "azure:compute/windowsVirtualMachineScaleSet:WindowsVirtualMachineScaleSet": "azurerm_windows_virtual_machine_scale_set",
            "azure:confidentialledger/ledger:Ledger": "azurerm_confidential_ledger",
            "azure:connections/apiConnection:ApiConnection": "azurerm_api_connection",
            "azure:consumption/budgetManagementGroup:BudgetManagementGroup": "azurerm_consumption_budget_management_group",
            "azure:consumption/budgetResourceGroup:BudgetResourceGroup": "azurerm_consumption_budget_resource_group",
            "azure:consumption/budgetSubscription:BudgetSubscription": "azurerm_consumption_budget_subscription",
            "azure:containerapp/app:App": "azurerm_container_app",
            "azure:containerapp/environment:Environment": "azurerm_container_app_environment",
            "azure:containerapp/environmentCertificate:EnvironmentCertificate": "azurerm_container_app_environment_certificate",
            "azure:containerapp/environmentDaprComponent:EnvironmentDaprComponent": "azurerm_container_app_environment_dapr_component",
            "azure:containerapp/environmentStorage:EnvironmentStorage": "azurerm_container_app_environment_storage",
            "azure:containerservice/clusterTrustedAccessRoleBinding:ClusterTrustedAccessRoleBinding": "azurerm_kubernetes_cluster_trusted_access_role_binding",
            "azure:containerservice/connectedRegistry:ConnectedRegistry": "azurerm_container_connected_registry",
            "azure:containerservice/fluxConfiguration:FluxConfiguration": "azurerm_kubernetes_flux_configuration",
            "azure:containerservice/group:Group": "azurerm_container_group",
            "azure:containerservice/kubernetesCluster:KubernetesCluster": "azurerm_kubernetes_cluster",
            "azure:containerservice/kubernetesClusterExtension:KubernetesClusterExtension": "azurerm_kubernetes_cluster_extension",
            "azure:containerservice/kubernetesClusterNodePool:KubernetesClusterNodePool": "azurerm_kubernetes_cluster_node_pool",
            "azure:containerservice/kubernetesFleetManager:KubernetesFleetManager": "azurerm_kubernetes_fleet_manager",
            "azure:containerservice/registry:Registry": "azurerm_container_registry",
            "azure:containerservice/registryAgentPool:RegistryAgentPool": "azurerm_container_registry_agent_pool",
            "azure:containerservice/registryScopeMap:RegistryScopeMap": "azurerm_container_registry_scope_map",
            "azure:containerservice/registryTask:RegistryTask": "azurerm_container_registry_task",
            "azure:containerservice/registryTaskScheduleRunNow:RegistryTaskScheduleRunNow": "azurerm_container_registry_task_schedule_run_now",
            "azure:containerservice/registryToken:RegistryToken": "azurerm_container_registry_token",
            "azure:containerservice/registryWebhook:RegistryWebhook": "azurerm_container_registry_webhook",
            "azure:containerservice/registryWebook:RegistryWebook": "azurerm_container_registry_webhook_legacy",
            "azure:containerservice/tokenPassword:TokenPassword": "azurerm_container_registry_token_password",
            "azure:core/customProvider:CustomProvider": "azurerm_custom_provider",
            "azure:core/portalTenantConfiguration:PortalTenantConfiguration": "azurerm_portal_tenant_configuration",
            "azure:core/resourceDeploymentScriptAzureCli:ResourceDeploymentScriptAzureCli": "azurerm_resource_deployment_script_azure_cli",
            "azure:core/resourceDeploymentScriptPowerShell:ResourceDeploymentScriptPowerShell": "azurerm_resource_deployment_script_azure_power_shell",
            "azure:core/resourceGroup:ResourceGroup": "azurerm_resource_group",
            "azure:core/resourceGroupCostManagementExport:ResourceGroupCostManagementExport": "azurerm_resource_group_cost_management_export",
            "azure:core/resourceGroupCostManagementView:ResourceGroupCostManagementView": "azurerm_resource_group_cost_management_view",
            "azure:core/resourceGroupPolicyAssignment:ResourceGroupPolicyAssignment": "azurerm_resource_group_policy_assignment",
            "azure:core/resourceGroupPolicyExemption:ResourceGroupPolicyExemption": "azurerm_resource_group_policy_exemption",
            "azure:core/resourceGroupPolicyRemediation:ResourceGroupPolicyRemediation": "azurerm_resource_group_policy_remediation",
            "azure:core/resourceGroupTemplateDeployment:ResourceGroupTemplateDeployment": "azurerm_resource_group_template_deployment",
            "azure:core/resourcePolicyAssignment:ResourcePolicyAssignment": "azurerm_resource_policy_assignment",
            "azure:core/resourcePolicyExemption:ResourcePolicyExemption": "azurerm_resource_policy_exemption",
            "azure:core/resourcePolicyRemediation:ResourcePolicyRemediation": "azurerm_resource_policy_remediation",
            "azure:core/resourceProviderRegistration:ResourceProviderRegistration": "azurerm_resource_provider_registration",
            "azure:core/subscription:Subscription": "azurerm_subscription",
            "azure:core/subscriptionCostManagementExport:SubscriptionCostManagementExport": "azurerm_subscription_cost_management_export",
            "azure:core/subscriptionCostManagementView:SubscriptionCostManagementView": "azurerm_subscription_cost_management_view",
            "azure:core/subscriptionPolicyAssignment:SubscriptionPolicyAssignment": "azurerm_subscription_policy_assignment",
            "azure:core/subscriptionPolicyExemption:SubscriptionPolicyExemption": "azurerm_subscription_policy_exemption",
            "azure:core/subscriptionPolicyRemediation:SubscriptionPolicyRemediation": "azurerm_subscription_policy_remediation",
            "azure:core/subscriptionTemplateDeployment:SubscriptionTemplateDeployment": "azurerm_subscription_template_deployment",
            "azure:core/templateDeployment:TemplateDeployment": "azurerm_template_deployment",
            "azure:core/tenantTemplateDeployment:TenantTemplateDeployment": "azurerm_tenant_template_deployment",
            "azure:cosmosdb/account:Account": "azurerm_cosmosdb_account",
            "azure:cosmosdb/cassandraCluster:CassandraCluster": "azurerm_cosmosdb_cassandra_cluster",
            "azure:cosmosdb/cassandraDatacenter:CassandraDatacenter": "azurerm_cosmosdb_cassandra_datacenter",
            "azure:cosmosdb/cassandraKeyspace:CassandraKeyspace": "azurerm_cosmosdb_cassandra_keyspace",
            "azure:cosmosdb/cassandraTable:CassandraTable": "azurerm_cosmosdb_cassandra_table",
            "azure:cosmosdb/gremlinDatabase:GremlinDatabase": "azurerm_cosmosdb_gremlin_database",
            "azure:cosmosdb/gremlinGraph:GremlinGraph": "azurerm_cosmosdb_gremlin_graph",
            "azure:cosmosdb/mongoCollection:MongoCollection": "azurerm_cosmosdb_mongo_collection",
            "azure:cosmosdb/mongoDatabase:MongoDatabase": "azurerm_cosmosdb_mongo_database",
            "azure:cosmosdb/mongoRoleDefinition:MongoRoleDefinition": "azurerm_cosmosdb_mongo_role_definition",
            "azure:cosmosdb/mongoUserDefinition:MongoUserDefinition": "azurerm_cosmosdb_mongo_user_definition",
            "azure:cosmosdb/notebookWorkspace:NotebookWorkspace": "azurerm_cosmosdb_notebook_workspace",
            "azure:cosmosdb/postgresqlCluster:PostgresqlCluster": "azurerm_cosmosdb_postgresql_cluster",
            "azure:cosmosdb/postgresqlCoordinatorConfiguration:PostgresqlCoordinatorConfiguration": "azurerm_cosmosdb_postgresql_coordinator_configuration",
            "azure:cosmosdb/postgresqlFirewallRule:PostgresqlFirewallRule": "azurerm_cosmosdb_postgresql_firewall_rule",
            "azure:cosmosdb/postgresqlNodeConfiguration:PostgresqlNodeConfiguration": "azurerm_cosmosdb_postgresql_node_configuration",
            "azure:cosmosdb/postgresqlRole:PostgresqlRole": "azurerm_cosmosdb_postgresql_role",
            "azure:cosmosdb/sqlContainer:SqlContainer": "azurerm_cosmosdb_sql_container",
            "azure:cosmosdb/sqlDatabase:SqlDatabase": "azurerm_cosmosdb_sql_database",
            "azure:cosmosdb/sqlDedicatedGateway:SqlDedicatedGateway": "azurerm_cosmosdb_sql_dedicated_gateway",
            "azure:cosmosdb/sqlFunction:SqlFunction": "azurerm_cosmosdb_sql_function",
            "azure:cosmosdb/sqlRoleAssignment:SqlRoleAssignment": "azurerm_cosmosdb_sql_role_assignment",
            "azure:cosmosdb/sqlRoleDefinition:SqlRoleDefinition": "azurerm_cosmosdb_sql_role_definition",
            "azure:cosmosdb/sqlStoredProcedure:SqlStoredProcedure": "azurerm_cosmosdb_sql_stored_procedure",
            "azure:cosmosdb/sqlTrigger:SqlTrigger": "azurerm_cosmosdb_sql_trigger",
            "azure:cosmosdb/table:Table": "azurerm_cosmosdb_table",
            "azure:costmanagement/anomalyAlert:AnomalyAlert": "azurerm_cost_anomaly_alert",
            "azure:costmanagement/scheduledAction:ScheduledAction": "azurerm_cost_management_scheduled_action",
            "azure:customip/prefix:Prefix": "azurerm_custom_ip_prefix",
            "azure:dashboard/dashboard:Dashboard": "azurerm_dashboard_legacy",
            "azure:dashboard/grafana:Grafana": "azurerm_dashboard_grafana",
            "azure:databasemigration/project:Project": "azurerm_database_migration_project",
            "azure:databasemigration/service:Service": "azurerm_database_migration_service",
            "azure:databoxedge/device:Device": "azurerm_databox_edge_device",
            "azure:databoxedge/order:Order": "azurerm_databox_edge_order",
            "azure:databricks/accessConnector:AccessConnector": "azurerm_databricks_access_connector",
            "azure:databricks/virtualNetworkPeering:VirtualNetworkPeering": "azurerm_databricks_virtual_network_peering",
            "azure:databricks/workspace:Workspace": "azurerm_databricks_workspace",
            "azure:databricks/workspaceCustomerManagedKey:WorkspaceCustomerManagedKey": "azurerm_databricks_workspace_customer_managed_key",
            "azure:databricks/workspaceRootDbfsCustomerManagedKey:WorkspaceRootDbfsCustomerManagedKey": "azurerm_databricks_workspace_root_dbfs_customer_managed_key",
            "azure:datadog/monitor:Monitor": "azurerm_datadog_monitor",
            "azure:datadog/monitorSsoConfiguration:MonitorSsoConfiguration": "azurerm_datadog_monitor_sso_configuration",
            "azure:datadog/monitorTagRule:MonitorTagRule": "azurerm_datadog_monitor_tag_rule",
            "azure:datafactory/customDataset:CustomDataset": "azurerm_data_factory_custom_dataset",
            "azure:datafactory/dataFlow:DataFlow": "azurerm_data_factory_data_flow",
            "azure:datafactory/datasetAzureBlob:DatasetAzureBlob": "azurerm_data_factory_dataset_azure_blob",
            "azure:datafactory/datasetAzureSqlTable:DatasetAzureSqlTable": "azurerm_data_factory_dataset_azure_sql_table",
            "azure:datafactory/datasetBinary:DatasetBinary": "azurerm_data_factory_dataset_binary",
            "azure:datafactory/datasetCosmosDBApi:DatasetCosmosDBApi": "azurerm_data_factory_dataset_cosmosdb_sqlapi",
            "azure:datafactory/datasetDelimitedText:DatasetDelimitedText": "azurerm_data_factory_dataset_delimited_text",
            "azure:datafactory/datasetHttp:DatasetHttp": "azurerm_data_factory_dataset_http",
            "azure:datafactory/datasetJson:DatasetJson": "azurerm_data_factory_dataset_json",
            "azure:datafactory/datasetMysql:DatasetMysql": "azurerm_data_factory_dataset_mysql",
            "azure:datafactory/datasetParquet:DatasetParquet": "azurerm_data_factory_dataset_parquet",
            "azure:datafactory/datasetPostgresql:DatasetPostgresql": "azurerm_data_factory_dataset_postgresql",
            "azure:datafactory/datasetSnowflake:DatasetSnowflake": "azurerm_data_factory_dataset_snowflake",
            "azure:datafactory/datasetSqlServerTable:DatasetSqlServerTable": "azurerm_data_factory_dataset_sql_server_table",
            "azure:datafactory/factory:Factory": "azurerm_data_factory",
            "azure:datafactory/flowletDataFlow:FlowletDataFlow": "azurerm_data_factory_flowlet_data_flow",
            "azure:datafactory/integrationRuntimeManaged:IntegrationRuntimeManaged": "azurerm_data_factory_integration_runtime_managed",
            "azure:datafactory/integrationRuntimeRule:IntegrationRuntimeRule": "azurerm_data_factory_integration_runtime_azure",
            "azure:datafactory/integrationRuntimeSelfHosted:IntegrationRuntimeSelfHosted": "azurerm_data_factory_integration_runtime_self_hosted",
            "azure:datafactory/integrationRuntimeSsis:IntegrationRuntimeSsis": "azurerm_data_factory_integration_runtime_azure_ssis",
            "azure:datafactory/linkedCustomService:LinkedCustomService": "azurerm_data_factory_linked_custom_service",
            "azure:datafactory/linkedServiceAzureBlobStorage:LinkedServiceAzureBlobStorage": "azurerm_data_factory_linked_service_azure_blob_storage",
            "azure:datafactory/linkedServiceAzureDatabricks:LinkedServiceAzureDatabricks": "azurerm_data_factory_linked_service_azure_databricks",
            "azure:datafactory/linkedServiceAzureFileStorage:LinkedServiceAzureFileStorage": "azurerm_data_factory_linked_service_azure_file_storage",
            "azure:datafactory/linkedServiceAzureFunction:LinkedServiceAzureFunction": "azurerm_data_factory_linked_service_azure_function",
            "azure:datafactory/linkedServiceAzureSearch:LinkedServiceAzureSearch": "azurerm_data_factory_linked_service_azure_search",
            "azure:datafactory/linkedServiceAzureSqlDatabase:LinkedServiceAzureSqlDatabase": "azurerm_data_factory_linked_service_azure_sql_database",
            "azure:datafactory/linkedServiceAzureTableStorage:LinkedServiceAzureTableStorage": "azurerm_data_factory_linked_service_azure_table_storage",
            "azure:datafactory/linkedServiceCosmosDb:LinkedServiceCosmosDb": "azurerm_data_factory_linked_service_cosmosdb",
            "azure:datafactory/linkedServiceCosmosDbMongoApi:LinkedServiceCosmosDbMongoApi": "azurerm_data_factory_linked_service_cosmosdb_mongoapi",
            "azure:datafactory/linkedServiceDataLakeStorageGen2:LinkedServiceDataLakeStorageGen2": "azurerm_data_factory_linked_service_data_lake_storage_gen2",
            "azure:datafactory/linkedServiceKeyVault:LinkedServiceKeyVault": "azurerm_data_factory_linked_service_key_vault",
            "azure:datafactory/linkedServiceKusto:LinkedServiceKusto": "azurerm_data_factory_linked_service_kusto",
            "azure:datafactory/linkedServiceMysql:LinkedServiceMysql": "azurerm_data_factory_linked_service_mysql",
            "azure:datafactory/linkedServiceOdata:LinkedServiceOdata": "azurerm_data_factory_linked_service_odata",
            "azure:datafactory/linkedServiceOdbc:LinkedServiceOdbc": "azurerm_data_factory_linked_service_odbc",
            "azure:datafactory/linkedServicePostgresql:LinkedServicePostgresql": "azurerm_data_factory_linked_service_postgresql",
            "azure:datafactory/linkedServiceSftp:LinkedServiceSftp": "azurerm_data_factory_linked_service_sftp",
            "azure:datafactory/linkedServiceSnowflake:LinkedServiceSnowflake": "azurerm_data_factory_linked_service_snowflake",
            "azure:datafactory/linkedServiceSqlServer:LinkedServiceSqlServer": "azurerm_data_factory_linked_service_sql_server",
            "azure:datafactory/linkedServiceSynapse:LinkedServiceSynapse": "azurerm_data_factory_linked_service_synapse",
            "azure:datafactory/linkedServiceWeb:LinkedServiceWeb": "azurerm_data_factory_linked_service_web",
            "azure:datafactory/managedPrivateEndpoint:ManagedPrivateEndpoint": "azurerm_data_factory_managed_private_endpoint",
            "azure:datafactory/pipeline:Pipeline": "azurerm_data_factory_pipeline",
            "azure:datafactory/triggerBlobEvent:TriggerBlobEvent": "azurerm_data_factory_trigger_blob_event",
            "azure:datafactory/triggerCustomEvent:TriggerCustomEvent": "azurerm_data_factory_trigger_custom_event",
            "azure:datafactory/triggerSchedule:TriggerSchedule": "azurerm_data_factory_trigger_schedule",
            "azure:datafactory/triggerTumblingWindow:TriggerTumblingWindow": "azurerm_data_factory_trigger_tumbling_window",
            "azure:dataprotection/backupInstanceBlogStorage:BackupInstanceBlogStorage": "azurerm_data_protection_backup_instance_blob_storage",
            "azure:dataprotection/backupInstanceDisk:BackupInstanceDisk": "azurerm_data_protection_backup_instance_disk",
            "azure:dataprotection/backupInstancePostgresql:BackupInstancePostgresql": "azurerm_data_protection_backup_instance_postgresql",
            "azure:dataprotection/backupPolicyBlobStorage:BackupPolicyBlobStorage": "azurerm_data_protection_backup_policy_blob_storage",
            "azure:dataprotection/backupPolicyDisk:BackupPolicyDisk": "azurerm_data_protection_backup_policy_disk",
            "azure:dataprotection/backupPolicyPostgresql:BackupPolicyPostgresql": "azurerm_data_protection_backup_policy_postgresql",
            "azure:dataprotection/backupVault:BackupVault": "azurerm_data_protection_backup_vault",
            "azure:dataprotection/resourceGuard:ResourceGuard": "azurerm_data_protection_resource_guard",
            "azure:datashare/account:Account": "azurerm_data_share_account",
            "azure:datashare/datasetBlobStorage:DatasetBlobStorage": "azurerm_data_share_dataset_blob_storage",
            "azure:datashare/datasetDataLakeGen2:DatasetDataLakeGen2": "azurerm_data_share_dataset_data_lake_gen2",
            "azure:datashare/datasetKustoCluster:DatasetKustoCluster": "azurerm_data_share_dataset_kusto_cluster",
            "azure:datashare/datasetKustoDatabase:DatasetKustoDatabase": "azurerm_data_share_dataset_kusto_database",
            "azure:datashare/share:Share": "azurerm_data_share",
            "azure:desktopvirtualization/application:Application": "azurerm_virtual_desktop_application",
            "azure:desktopvirtualization/applicationGroup:ApplicationGroup": "azurerm_virtual_desktop_application_group",
            "azure:desktopvirtualization/getHostPoolRegistrationInfo:getHostPoolRegistrationInfo": "azurerm_virtual_desktop_host_pool_registration_info",
            "azure:desktopvirtualization/hostPool:HostPool": "azurerm_virtual_desktop_host_pool",
            "azure:desktopvirtualization/scalingPlan:ScalingPlan": "azurerm_virtual_desktop_scaling_plan",
            "azure:desktopvirtualization/workspace:Workspace": "azurerm_virtual_desktop_workspace",
            "azure:desktopvirtualization/workspaceApplicationGroupAssociation:WorkspaceApplicationGroupAssociation": "azurerm_virtual_desktop_workspace_application_group_association",
            "azure:devcenter/devCenter:DevCenter": "azurerm_dev_center",
            "azure:devcenter/project:Project": "azurerm_dev_center_project",
            "azure:devtest/globalVMShutdownSchedule:GlobalVMShutdownSchedule": "azurerm_dev_test_global_vm_shutdown_schedule",
            "azure:devtest/lab:Lab": "azurerm_dev_test_lab",
            "azure:devtest/linuxVirtualMachine:LinuxVirtualMachine": "azurerm_dev_test_linux_virtual_machine",
            "azure:devtest/policy:Policy": "azurerm_dev_test_policy",
            "azure:devtest/schedule:Schedule": "azurerm_dev_test_schedule",
            "azure:devtest/virtualNetwork:VirtualNetwork": "azurerm_dev_test_virtual_network",
            "azure:devtest/windowsVirtualMachine:WindowsVirtualMachine": "azurerm_dev_test_windows_virtual_machine",
            "azure:digitaltwins/endpointEventGrid:EndpointEventGrid": "azurerm_digital_twins_endpoint_eventgrid",
            "azure:digitaltwins/endpointEventHub:EndpointEventHub": "azurerm_digital_twins_endpoint_eventhub",
            "azure:digitaltwins/endpointServicebus:EndpointServicebus": "azurerm_digital_twins_endpoint_servicebus",
            "azure:digitaltwins/instance:Instance": "azurerm_digital_twins_instance",
            "azure:digitaltwins/timeSeriesDatabaseConnection:TimeSeriesDatabaseConnection": "azurerm_digital_twins_time_series_database_connection",
            "azure:dns/aRecord:ARecord": "azurerm_dns_a_record",
            "azure:dns/aaaaRecord:AaaaRecord": "azurerm_dns_aaaa_record",
            "azure:dns/cNameRecord:CNameRecord": "azurerm_dns_cname_record",
            "azure:dns/caaRecord:CaaRecord": "azurerm_dns_caa_record",
            "azure:dns/mxRecord:MxRecord": "azurerm_dns_mx_record",
            "azure:dns/nsRecord:NsRecord": "azurerm_dns_ns_record",
            "azure:dns/ptrRecord:PtrRecord": "azurerm_dns_ptr_record",
            "azure:dns/srvRecord:SrvRecord": "azurerm_dns_srv_record",
            "azure:dns/txtRecord:TxtRecord": "azurerm_dns_txt_record",
            "azure:dns/zone:Zone": "azurerm_dns_zone",
            "azure:domainservices/replicaSet:ReplicaSet": "azurerm_active_directory_domain_service_replica_set",
            "azure:domainservices/service:Service": "azurerm_active_directory_domain_service",
            "azure:domainservices/serviceTrust:ServiceTrust": "azurerm_active_directory_domain_service_trust",
            "azure:elasticcloud/elasticsearch:Elasticsearch": "azurerm_elastic_cloud_elasticsearch",
            "azure:elasticsan/elasticSan:ElasticSan": "azurerm_elastic_san",
            "azure:eventgrid/domain:Domain": "azurerm_eventgrid_domain",
            "azure:eventgrid/domainTopic:DomainTopic": "azurerm_eventgrid_domain_topic",
            "azure:eventgrid/eventSubscription:EventSubscription": "azurerm_eventgrid_event_subscription",
            "azure:eventgrid/systemTopic:SystemTopic": "azurerm_eventgrid_system_topic",
            "azure:eventgrid/systemTopicEventSubscription:SystemTopicEventSubscription": "azurerm_eventgrid_system_topic_event_subscription",
            "azure:eventgrid/topic:Topic": "azurerm_eventgrid_topic",
            "azure:eventhub/authorizationRule:AuthorizationRule": "azurerm_eventhub_authorization_rule",
            "azure:eventhub/cluster:Cluster": "azurerm_eventhub_cluster",
            "azure:eventhub/consumerGroup:ConsumerGroup": "azurerm_eventhub_consumer_group",
            "azure:eventhub/domain:Domain": "azurerm_eventgrid_domain_legacy",
            "azure:eventhub/eventGridTopic:EventGridTopic": "azurerm_eventgrid_topic_legacy",
            "azure:eventhub/eventHub:EventHub": "azurerm_eventhub",
            "azure:eventhub/eventHubAuthorizationRule:EventHubAuthorizationRule": "azurerm_eventhub_authorization_rule_legacy",
            "azure:eventhub/eventHubConsumerGroup:EventHubConsumerGroup": "azurerm_eventhub_consumer_group_legacy",
            "azure:eventhub/eventHubNamespace:EventHubNamespace": "azurerm_eventhub_namespace",
            "azure:eventhub/eventHubNamespaceAuthorizationRule:EventHubNamespaceAuthorizationRule": "azurerm_eventhub_namespace_authorization_rule",
            "azure:eventhub/eventSubscription:EventSubscription": "azurerm_eventgrid_event_subscription_legacy",
            "azure:eventhub/eventhubNamespaceDisasterRecoveryConfig:EventhubNamespaceDisasterRecoveryConfig": "azurerm_eventhub_namespace_disaster_recovery_config",
            "azure:eventhub/namespace:Namespace": "azurerm_servicebus_namespace_legacy",
            "azure:eventhub/namespaceAuthorizationRule:NamespaceAuthorizationRule": "azurerm_servicebus_namespace_authorization_rule_legacy",
            "azure:eventhub/namespaceCustomerManagedKey:NamespaceCustomerManagedKey": "azurerm_eventhub_namespace_customer_managed_key",
            "azure:eventhub/namespaceSchemaGroup:NamespaceSchemaGroup": "azurerm_eventhub_namespace_schema_group",
            "azure:eventhub/queue:Queue": "azurerm_servicebus_queue_legacy",
            "azure:eventhub/queueAuthorizationRule:QueueAuthorizationRule": "azurerm_servicebus_queue_authorization_rule_legacy",
            "azure:eventhub/subscription:Subscription": "azurerm_servicebus_subscription_legacy",
            "azure:eventhub/subscriptionRule:SubscriptionRule": "azurerm_servicebus_subscription_rule_legacy",
            "azure:eventhub/topic:Topic": "azurerm_servicebus_topic_legacy",
            "azure:eventhub/topicAuthorizationRule:TopicAuthorizationRule": "azurerm_servicebus_topic_authorization_rule_legacy",
            "azure:fluidrelay/server:Server": "azurerm_fluid_relay_server",
            "azure:frontdoor/customHttpsConfiguration:CustomHttpsConfiguration": "azurerm_frontdoor_custom_https_configuration",
            "azure:frontdoor/firewallPolicy:FirewallPolicy": "azurerm_frontdoor_firewall_policy",
            "azure:frontdoor/frontdoor:Frontdoor": "azurerm_frontdoor",
            "azure:frontdoor/rulesEngine:RulesEngine": "azurerm_frontdoor_rules_engine",
            "azure:graph/account:Account": "azurerm_graph_account",
            "azure:graph/servicesAccount:ServicesAccount": "azurerm_graph_services_account",
            "azure:hdinsight/hBaseCluster:HBaseCluster": "azurerm_hdinsight_hbase_cluster",
            "azure:hdinsight/hadoopCluster:HadoopCluster": "azurerm_hdinsight_hadoop_cluster",
            "azure:hdinsight/interactiveQueryCluster:InteractiveQueryCluster": "azurerm_hdinsight_interactive_query_cluster",
            "azure:hdinsight/kafkaCluster:KafkaCluster": "azurerm_hdinsight_kafka_cluster",
            "azure:hdinsight/sparkCluster:SparkCluster": "azurerm_hdinsight_spark_cluster",
            "azure:healthcare/dicomService:DicomService": "azurerm_healthcare_dicom_service",
            "azure:healthcare/fhirService:FhirService": "azurerm_healthcare_fhir_service",
            "azure:healthcare/medtechService:MedtechService": "azurerm_healthcare_medtech_service",
            "azure:healthcare/medtechServiceFhirDestination:MedtechServiceFhirDestination": "azurerm_healthcare_medtech_service_fhir_destination",
            "azure:healthcare/service:Service": "azurerm_healthcare_service",
            "azure:healthcare/workspace:Workspace": "azurerm_healthcare_workspace",
            "azure:hpc/cache:Cache": "azurerm_hpc_cache",
            "azure:hpc/cacheAccessPolicy:CacheAccessPolicy": "azurerm_hpc_cache_access_policy",
            "azure:hpc/cacheBlobNfsTarget:CacheBlobNfsTarget": "azurerm_hpc_cache_blob_nfs_target",
            "azure:hpc/cacheBlobTarget:CacheBlobTarget": "azurerm_hpc_cache_blob_target",
            "azure:hpc/cacheNfsTarget:CacheNfsTarget": "azurerm_hpc_cache_nfs_target",
            "azure:hsm/module:Module": "azurerm_dedicated_hardware_security_module",
            "azure:iot/certificate:Certificate": "azurerm_iothub_certificate",
            "azure:iot/consumerGroup:ConsumerGroup": "azurerm_iothub_consumer_group",
            "azure:iot/dpsSharedAccessPolicy:DpsSharedAccessPolicy": "azurerm_iothub_dps_shared_access_policy",
            "azure:iot/endpointCosmosdbAccount:EndpointCosmosdbAccount": "azurerm_iothub_endpoint_cosmosdb_account",
            "azure:iot/endpointEventhub:EndpointEventhub": "azurerm_iothub_endpoint_eventhub",
            "azure:iot/endpointServicebusQueue:EndpointServicebusQueue": "azurerm_iothub_endpoint_servicebus_queue",
            "azure:iot/endpointServicebusTopic:EndpointServicebusTopic": "azurerm_iothub_endpoint_servicebus_topic",
            "azure:iot/endpointStorageContainer:EndpointStorageContainer": "azurerm_iothub_endpoint_storage_container",
            "azure:iot/enrichment:Enrichment": "azurerm_iothub_enrichment",
            "azure:iot/fallbackRoute:FallbackRoute": "azurerm_iothub_fallback_route",
            "azure:iot/fileUpload:FileUpload": "azurerm_iothub_file_upload",
            "azure:iot/ioTHub:IoTHub": "azurerm_iothub",
            "azure:iot/iotHubCertificate:IotHubCertificate": "azurerm_iothub_dps_certificate",
            "azure:iot/iotHubDeviceUpdateAccount:IotHubDeviceUpdateAccount": "azurerm_iothub_device_update_account",
            "azure:iot/iotHubDeviceUpdateInstance:IotHubDeviceUpdateInstance": "azurerm_iothub_device_update_instance",
            "azure:iot/iotHubDps:IotHubDps": "azurerm_iothub_dps",
            "azure:iot/route:Route": "azurerm_iothub_route",
            "azure:iot/securityDeviceGroup:SecurityDeviceGroup": "azurerm_iot_security_device_group",
            "azure:iot/securitySolution:SecuritySolution": "azurerm_iot_security_solution",
            "azure:iot/sharedAccessPolicy:SharedAccessPolicy": "azurerm_iothub_shared_access_policy",
            "azure:iot/timeSeriesInsightsAccessPolicy:TimeSeriesInsightsAccessPolicy": "azurerm_iot_time_series_insights_access_policy",
            "azure:iot/timeSeriesInsightsEventSourceEventhub:TimeSeriesInsightsEventSourceEventhub": "azurerm_iot_time_series_insights_event_source_eventhub",
            "azure:iot/timeSeriesInsightsEventSourceIothub:TimeSeriesInsightsEventSourceIothub": "azurerm_iot_time_series_insights_event_source_iothub",
            "azure:iot/timeSeriesInsightsGen2Environment:TimeSeriesInsightsGen2Environment": "azurerm_iot_time_series_insights_gen2_environment",
            "azure:iot/timeSeriesInsightsReferenceDataSet:TimeSeriesInsightsReferenceDataSet": "azurerm_iot_time_series_insights_reference_data_set",
            "azure:iot/timeSeriesInsightsStandardEnvironment:TimeSeriesInsightsStandardEnvironment": "azurerm_iot_time_series_insights_standard_environment",
            "azure:iotcentral/application:Application": "azurerm_iotcentral_application",
            "azure:iotcentral/applicationNetworkRuleSet:ApplicationNetworkRuleSet": "azurerm_iotcentral_application_network_rule_set",
            "azure:keyvault/accessPolicy:AccessPolicy": "azurerm_key_vault_access_policy",
            "azure:keyvault/certifiate:Certifiate": "azurerm_key_vault_certificate_legacy",
            "azure:keyvault/certificate:Certificate": "azurerm_key_vault_certificate",
            "azure:keyvault/certificateContacts:CertificateContacts": "azurerm_key_vault_certificate_contacts",
            "azure:keyvault/certificateIssuer:CertificateIssuer": "azurerm_key_vault_certificate_issuer",
            "azure:keyvault/key:Key": "azurerm_key_vault_key",
            "azure:keyvault/keyVault:KeyVault": "azurerm_key_vault",
            "azure:keyvault/managedHardwareSecurityModule:ManagedHardwareSecurityModule": "azurerm_key_vault_managed_hardware_security_module",
            "azure:keyvault/managedHardwareSecurityModuleRoleAssignment:ManagedHardwareSecurityModuleRoleAssignment": "azurerm_key_vault_managed_hardware_security_module_role_assignment",
            "azure:keyvault/managedHardwareSecurityModuleRoleDefinition:ManagedHardwareSecurityModuleRoleDefinition": "azurerm_key_vault_managed_hardware_security_module_role_definition",
            "azure:keyvault/managedStorageAccount:ManagedStorageAccount": "azurerm_key_vault_managed_storage_account",
            "azure:keyvault/managedStorageAccountSasTokenDefinition:ManagedStorageAccountSasTokenDefinition": "azurerm_key_vault_managed_storage_account_sas_token_definition",
            "azure:keyvault/secret:Secret": "azurerm_key_vault_secret",
            "azure:kusto/attachedDatabaseConfiguration:AttachedDatabaseConfiguration": "azurerm_kusto_attached_database_configuration",
            "azure:kusto/cluster:Cluster": "azurerm_kusto_cluster",
            "azure:kusto/clusterCustomerManagedKey:ClusterCustomerManagedKey": "azurerm_kusto_cluster_customer_managed_key",
            "azure:kusto/clusterManagedPrivateEndpoint:ClusterManagedPrivateEndpoint": "azurerm_kusto_cluster_managed_private_endpoint",
            "azure:kusto/clusterPrincipalAssignment:ClusterPrincipalAssignment": "azurerm_kusto_cluster_principal_assignment",
            "azure:kusto/cosmosdbDataConnection:CosmosdbDataConnection": "azurerm_kusto_cosmosdb_data_connection",
            "azure:kusto/database:Database": "azurerm_kusto_database",
            "azure:kusto/databasePrincipalAssignment:DatabasePrincipalAssignment": "azurerm_kusto_database_principal_assignment",
            "azure:kusto/eventGridDataConnection:EventGridDataConnection": "azurerm_kusto_eventgrid_data_connection",
            "azure:kusto/eventhubDataConnection:EventhubDataConnection": "azurerm_kusto_eventhub_data_connection",
            "azure:kusto/iotHubDataConnection:IotHubDataConnection": "azurerm_kusto_iothub_data_connection",
            "azure:kusto/script:Script": "azurerm_kusto_script",
            "azure:lab/lab:Lab": "azurerm_lab_service_lab",
            "azure:lab/schedule:Schedule": "azurerm_lab_service_schedule",
            "azure:lab/servicePlan:ServicePlan": "azurerm_lab_service_plan",
            "azure:lab/user:User": "azurerm_lab_service_user",
            "azure:lb/backendAddressPool:BackendAddressPool": "azurerm_lb_backend_address_pool",
            "azure:lb/backendAddressPoolAddress:BackendAddressPoolAddress": "azurerm_lb_backend_address_pool_address",
            "azure:lb/loadBalancer:LoadBalancer": "azurerm_lb",
            "azure:lb/natPool:NatPool": "azurerm_lb_nat_pool",
            "azure:lb/natRule:NatRule": "azurerm_lb_nat_rule",
            "azure:lb/outboundRule:OutboundRule": "azurerm_lb_outbound_rule",
            "azure:lb/probe:Probe": "azurerm_lb_probe",
            "azure:lb/rule:Rule": "azurerm_lb_rule",
            "azure:lighthouse/assignment:Assignment": "azurerm_lighthouse_assignment",
            "azure:lighthouse/definition:Definition": "azurerm_lighthouse_definition",
            "azure:loadtest/loadTest:LoadTest": "azurerm_load_test",
            "azure:loganalytics/cluster:Cluster": "azurerm_log_analytics_cluster",
            "azure:loganalytics/clusterCustomerManagedKey:ClusterCustomerManagedKey": "azurerm_log_analytics_cluster_customer_managed_key",
            "azure:loganalytics/dataExportRule:DataExportRule": "azurerm_log_analytics_data_export_rule",
            "azure:loganalytics/dataSourceWindowsEvent:DataSourceWindowsEvent": "azurerm_log_analytics_datasource_windows_event",
            "azure:loganalytics/dataSourceWindowsPerformanceCounter:DataSourceWindowsPerformanceCounter": "azurerm_log_analytics_datasource_windows_performance_counter",
            "azure:loganalytics/linkedService:LinkedService": "azurerm_log_analytics_linked_service",
            "azure:loganalytics/linkedStorageAccount:LinkedStorageAccount": "azurerm_log_analytics_linked_storage_account",
            "azure:loganalytics/queryPack:QueryPack": "azurerm_log_analytics_query_pack",
            "azure:loganalytics/savedSearch:SavedSearch": "azurerm_log_analytics_saved_search",
            "azure:loganalytics/storageInsights:StorageInsights": "azurerm_log_analytics_storage_insights",
            "azure:logicapps/actionCustom:ActionCustom": "azurerm_logic_app_action_custom",
            "azure:logicapps/actionHttp:ActionHttp": "azurerm_logic_app_action_http",
            "azure:logicapps/integrationAccount:IntegrationAccount": "azurerm_logic_app_integration_account",
            "azure:logicapps/integrationAccountAgreement:IntegrationAccountAgreement": "azurerm_logic_app_integration_account_agreement",
            "azure:logicapps/integrationAccountAssembly:IntegrationAccountAssembly": "azurerm_logic_app_integration_account_assembly",
            "azure:logicapps/integrationAccountBatchConfiguration:IntegrationAccountBatchConfiguration": "azurerm_logic_app_integration_account_batch_configuration",
            "azure:logicapps/integrationAccountCertificate:IntegrationAccountCertificate": "azurerm_logic_app_integration_account_certificate",
            "azure:logicapps/integrationAccountMap:IntegrationAccountMap": "azurerm_logic_app_integration_account_map",
            "azure:logicapps/integrationAccountPartner:IntegrationAccountPartner": "azurerm_logic_app_integration_account_partner",
            "azure:logicapps/integrationAccountSchema:IntegrationAccountSchema": "azurerm_logic_app_integration_account_schema",
            "azure:logicapps/integrationAccountSession:IntegrationAccountSession": "azurerm_logic_app_integration_account_session",
            "azure:logicapps/interationServiceEnvironment:InterationServiceEnvironment": "azurerm_integration_service_environment",
            "azure:logicapps/standard:Standard": "azurerm_logic_app_standard",
            "azure:logicapps/triggerCustom:TriggerCustom": "azurerm_logic_app_trigger_custom",
            "azure:logicapps/triggerHttpRequest:TriggerHttpRequest": "azurerm_logic_app_trigger_http_request",
            "azure:logicapps/triggerRecurrence:TriggerRecurrence": "azurerm_logic_app_trigger_recurrence",
            "azure:logicapps/workflow:Workflow": "azurerm_logic_app_workflow",
            "azure:machinelearning/computeCluster:ComputeCluster": "azurerm_machine_learning_compute_cluster",
            "azure:machinelearning/computeInstance:ComputeInstance": "azurerm_machine_learning_compute_instance",
            "azure:machinelearning/datastoreBlobstorage:DatastoreBlobstorage": "azurerm_machine_learning_datastore_blobstorage",
            "azure:machinelearning/datastoreDatalakeGen2:DatastoreDatalakeGen2": "azurerm_machine_learning_datastore_datalake_gen2",
            "azure:machinelearning/datastoreFileshare:DatastoreFileshare": "azurerm_machine_learning_datastore_fileshare",
            "azure:machinelearning/inferenceCluster:InferenceCluster": "azurerm_machine_learning_inference_cluster",
            "azure:machinelearning/synapseSpark:SynapseSpark": "azurerm_machine_learning_synapse_spark",
            "azure:machinelearning/workspace:Workspace": "azurerm_machine_learning_workspace",
            "azure:maintenance/assignmentDedicatedHost:AssignmentDedicatedHost": "azurerm_maintenance_assignment_dedicated_host",
            "azure:maintenance/assignmentVirtualMachine:AssignmentVirtualMachine": "azurerm_maintenance_assignment_virtual_machine",
            "azure:maintenance/assignmentVirtualMachineScaleSet:AssignmentVirtualMachineScaleSet": "azurerm_maintenance_assignment_virtual_machine_scale_set",
            "azure:maintenance/configuration:Configuration": "azurerm_maintenance_configuration",
            "azure:managedapplication/application:Application": "azurerm_managed_application",
            "azure:managedapplication/definition:Definition": "azurerm_managed_application_definition",
            "azure:managedlustre/fileSystem:FileSystem": "azurerm_managed_lustre_file_system",
            "azure:management/group:Group": "azurerm_management_group",
            "azure:management/groupPolicyAssignment:GroupPolicyAssignment": "azurerm_management_group_policy_assignment",
            "azure:management/groupPolicyExemption:GroupPolicyExemption": "azurerm_management_group_policy_exemption",
            "azure:management/groupPolicyRemediation:GroupPolicyRemediation": "azurerm_management_group_policy_remediation",
            "azure:management/groupSubscriptionAssociation:GroupSubscriptionAssociation": "azurerm_management_group_subscription_association",
            "azure:management/groupTemplateDeployment:GroupTemplateDeployment": "azurerm_management_group_template_deployment",
            "azure:management/lock:Lock": "azurerm_management_lock",
            "azure:management/privateLink:PrivateLink": "azurerm_resource_management_private_link",
            "azure:management/privateLinkAssociation:PrivateLinkAssociation": "azurerm_resource_management_private_link_association",
            "azure:managementgroups/managementGroup:ManagementGroup": "azurerm_management_group_legacy",
            "azure:managementresource/manangementLock:ManangementLock": "azurerm_management_lock_legacy",
            "azure:maps/account:Account": "azurerm_maps_account",
            "azure:maps/creator:Creator": "azurerm_maps_creator",
            "azure:mariadb/configuration:Configuration": "azurerm_mariadb_configuration",
            "azure:mariadb/database:Database": "azurerm_mariadb_database",
            "azure:mariadb/firewallRule:FirewallRule": "azurerm_mariadb_firewall_rule",
            "azure:mariadb/server:Server": "azurerm_mariadb_server",
            "azure:mariadb/virtualNetworkRule:VirtualNetworkRule": "azurerm_mariadb_virtual_network_rule",
            "azure:marketplace/agreement:Agreement": "azurerm_marketplace_agreement",
            "azure:marketplace/roleAssignment:RoleAssignment": "azurerm_marketplace_role_assignment",
            "azure:media/accountFilter:AccountFilter": "azurerm_media_services_account_filter",
            "azure:media/asset:Asset": "azurerm_media_asset",
            "azure:media/assetFilter:AssetFilter": "azurerm_media_asset_filter",
            "azure:media/contentKeyPolicy:ContentKeyPolicy": "azurerm_media_content_key_policy",
            "azure:media/job:Job": "azurerm_media_job",
            "azure:media/liveEvent:LiveEvent": "azurerm_media_live_event",
            "azure:media/liveEventOutput:LiveEventOutput": "azurerm_media_live_event_output",
            "azure:media/serviceAccount:ServiceAccount": "azurerm_media_services_account",
            "azure:media/streamingEndpoint:StreamingEndpoint": "azurerm_media_streaming_endpoint",
            "azure:media/streamingLocator:StreamingLocator": "azurerm_media_streaming_locator",
            "azure:media/streamingPolicy:StreamingPolicy": "azurerm_media_streaming_policy",
            "azure:media/transform:Transform": "azurerm_media_transform",
            "azure:mediaservices/account:Account": "azurerm_media_services_account_legacy",
            "azure:mixedreality/spatialAnchorsAccount:SpatialAnchorsAccount": "azurerm_spatial_anchors_account",
            "azure:mobile/network:Network": "azurerm_mobile_network",
            "azure:mobile/networkAttachedDataNetwork:NetworkAttachedDataNetwork": "azurerm_mobile_network_attached_data_network",
            "azure:mobile/networkDataNetwork:NetworkDataNetwork": "azurerm_mobile_network_data_network",
            "azure:mobile/networkPacketCoreControlPlane:NetworkPacketCoreControlPlane": "azurerm_mobile_network_packet_core_control_plane",
            "azure:mobile/networkPacketCoreDataPlane:NetworkPacketCoreDataPlane": "azurerm_mobile_network_packet_core_data_plane",
            "azure:mobile/networkService:NetworkService": "azurerm_mobile_network_service",
            "azure:mobile/networkSim:NetworkSim": "azurerm_mobile_network_sim",
            "azure:mobile/networkSimGroup:NetworkSimGroup": "azurerm_mobile_network_sim_group",
            "azure:mobile/networkSimPolicy:NetworkSimPolicy": "azurerm_mobile_network_sim_policy",
            "azure:mobile/networkSite:NetworkSite": "azurerm_mobile_network_site",
            "azure:mobile/networkSlice:NetworkSlice": "azurerm_mobile_network_slice",
            "azure:monitoring/aadDiagnosticSetting:AadDiagnosticSetting": "azurerm_monitor_aad_diagnostic_setting",
            "azure:monitoring/actionGroup:ActionGroup": "azurerm_monitor_action_group",
            "azure:monitoring/actionRuleActionGroup:ActionRuleActionGroup": "azurerm_monitor_action_rule_action_group",
            "azure:monitoring/actionRuleSuppression:ActionRuleSuppression": "azurerm_monitor_action_rule_suppression",
            "azure:monitoring/activityLogAlert:ActivityLogAlert": "azurerm_monitor_activity_log_alert",
            "azure:monitoring/alertProcessingRuleActionGroup:AlertProcessingRuleActionGroup": "azurerm_monitor_alert_processing_rule_action_group",
            "azure:monitoring/alertProcessingRuleSuppression:AlertProcessingRuleSuppression": "azurerm_monitor_alert_processing_rule_suppression",
            "azure:monitoring/alertPrometheusRuleGroup:AlertPrometheusRuleGroup": "azurerm_monitor_alert_prometheus_rule_group",
            "azure:monitoring/autoscaleSetting:AutoscaleSetting": "azurerm_monitor_autoscale_setting",
            "azure:monitoring/dataCollectionEndpoint:DataCollectionEndpoint": "azurerm_monitor_data_collection_endpoint",
            "azure:monitoring/dataCollectionRule:DataCollectionRule": "azurerm_monitor_data_collection_rule",
            "azure:monitoring/dataCollectionRuleAssociation:DataCollectionRuleAssociation": "azurerm_monitor_data_collection_rule_association",
            "azure:monitoring/diagnosticSetting:DiagnosticSetting": "azurerm_monitor_diagnostic_setting",
            "azure:monitoring/logProfile:LogProfile": "azurerm_monitor_log_profile",
            "azure:monitoring/logzMonitor:LogzMonitor": "azurerm_logz_monitor",
            "azure:monitoring/logzSubAccount:LogzSubAccount": "azurerm_logz_sub_account",
            "azure:monitoring/logzSubAccountTagRule:LogzSubAccountTagRule": "azurerm_logz_sub_account_tag_rule",
            "azure:monitoring/logzTagRule:LogzTagRule": "azurerm_logz_tag_rule",
            "azure:monitoring/metricAlert:MetricAlert": "azurerm_monitor_metric_alert",
            "azure:monitoring/privateLinkScope:PrivateLinkScope": "azurerm_monitor_private_link_scope",
            "azure:monitoring/privateLinkScopedService:PrivateLinkScopedService": "azurerm_monitor_private_link_scoped_service",
            "azure:monitoring/scheduledQueryRulesAlert:ScheduledQueryRulesAlert": "azurerm_monitor_scheduled_query_rules_alert",
            "azure:monitoring/scheduledQueryRulesAlertV2:ScheduledQueryRulesAlertV2": "azurerm_monitor_scheduled_query_rules_alert_v2",
            "azure:monitoring/scheduledQueryRulesLog:ScheduledQueryRulesLog": "azurerm_monitor_scheduled_query_rules_log",
            "azure:monitoring/smartDetectorAlertRule:SmartDetectorAlertRule": "azurerm_monitor_smart_detector_alert_rule",
            "azure:monitoring/workspace:Workspace": "azurerm_monitor_workspace",
            "azure:msi/userAssignedIdentity:UserAssignedIdentity": "azurerm_user_assigned_identity_legacy",
            "azure:mssql/database:Database": "azurerm_mssql_database",
            "azure:mssql/databaseExtendedAuditingPolicy:DatabaseExtendedAuditingPolicy": "azurerm_mssql_database_extended_auditing_policy",
            "azure:mssql/databaseVulnerabilityAssessmentRuleBaseline:DatabaseVulnerabilityAssessmentRuleBaseline": "azurerm_mssql_database_vulnerability_assessment_rule_baseline",
            "azure:mssql/elasticPool:ElasticPool": "azurerm_mssql_elasticpool",
            "azure:mssql/failoverGroup:FailoverGroup": "azurerm_mssql_failover_group",
            "azure:mssql/firewallRule:FirewallRule": "azurerm_mssql_firewall_rule",
            "azure:mssql/jobAgent:JobAgent": "azurerm_mssql_job_agent",
            "azure:mssql/jobCredential:JobCredential": "azurerm_mssql_job_credential",
            "azure:mssql/managedDatabase:ManagedDatabase": "azurerm_mssql_managed_database",
            "azure:mssql/managedInstance:ManagedInstance": "azurerm_mssql_managed_instance",
            "azure:mssql/managedInstanceActiveDirectoryAdministrator:ManagedInstanceActiveDirectoryAdministrator": "azurerm_mssql_managed_instance_active_directory_administrator",
            "azure:mssql/managedInstanceFailoverGroup:ManagedInstanceFailoverGroup": "azurerm_mssql_managed_instance_failover_group",
            "azure:mssql/managedInstanceSecurityAlertPolicy:ManagedInstanceSecurityAlertPolicy": "azurerm_mssql_managed_instance_security_alert_policy",
            "azure:mssql/managedInstanceTransparentDataEncryption:ManagedInstanceTransparentDataEncryption": "azurerm_mssql_managed_instance_transparent_data_encryption",
            "azure:mssql/managedInstanceVulnerabilityAssessment:ManagedInstanceVulnerabilityAssessment": "azurerm_mssql_managed_instance_vulnerability_assessment",
            "azure:mssql/outboundFirewallRule:OutboundFirewallRule": "azurerm_mssql_outbound_firewall_rule",
            "azure:mssql/server:Server": "azurerm_mssql_server",
            "azure:mssql/serverDnsAlias:ServerDnsAlias": "azurerm_mssql_server_dns_alias",
            "azure:mssql/serverExtendedAuditingPolicy:ServerExtendedAuditingPolicy": "azurerm_mssql_server_extended_auditing_policy",
            "azure:mssql/serverMicrosoftSupportAuditingPolicy:ServerMicrosoftSupportAuditingPolicy": "azurerm_mssql_server_microsoft_support_auditing_policy",
            "azure:mssql/serverSecurityAlertPolicy:ServerSecurityAlertPolicy": "azurerm_mssql_server_security_alert_policy",
            "azure:mssql/serverTransparentDataEncryption:ServerTransparentDataEncryption": "azurerm_mssql_server_transparent_data_encryption",
            "azure:mssql/serverVulnerabilityAssessment:ServerVulnerabilityAssessment": "azurerm_mssql_server_vulnerability_assessment",
            "azure:mssql/virtualMachine:VirtualMachine": "azurerm_mssql_virtual_machine",
            "azure:mssql/virtualMachineAvailabilityGroupListener:VirtualMachineAvailabilityGroupListener": "azurerm_mssql_virtual_machine_availability_group_listener",
            "azure:mssql/virtualMachineGroup:VirtualMachineGroup": "azurerm_mssql_virtual_machine_group",
            "azure:mssql/virtualNetworkRule:VirtualNetworkRule": "azurerm_mssql_virtual_network_rule",
            "azure:mysql/activeDirectoryAdministrator:ActiveDirectoryAdministrator": "azurerm_mysql_active_directory_administrator",
            "azure:mysql/configuration:Configuration": "azurerm_mysql_configuration",
            "azure:mysql/database:Database": "azurerm_mysql_database",
            "azure:mysql/firewallRule:FirewallRule": "azurerm_mysql_firewall_rule",
            "azure:mysql/flexibleDatabase:FlexibleDatabase": "azurerm_mysql_flexible_database",
            "azure:mysql/flexibleServer:FlexibleServer": "azurerm_mysql_flexible_server",
            "azure:mysql/flexibleServerActiveDirectoryAdministrator:FlexibleServerActiveDirectoryAdministrator": "azurerm_mysql_flexible_server_active_directory_administrator_legacy",
            "azure:mysql/flexibleServerActiveDirectoryAdministratory:FlexibleServerActiveDirectoryAdministratory": "azurerm_mysql_flexible_server_active_directory_administrator",
            "azure:mysql/flexibleServerConfiguration:FlexibleServerConfiguration": "azurerm_mysql_flexible_server_configuration",
            "azure:mysql/flexibleServerFirewallRule:FlexibleServerFirewallRule": "azurerm_mysql_flexible_server_firewall_rule",
            "azure:mysql/server:Server": "azurerm_mysql_server",
            "azure:mysql/serverKey:ServerKey": "azurerm_mysql_server_key",
            "azure:mysql/virtualNetworkRule:VirtualNetworkRule": "azurerm_mysql_virtual_network_rule",
            "azure:netapp/account:Account": "azurerm_netapp_account",
            "azure:netapp/pool:Pool": "azurerm_netapp_pool",
            "azure:netapp/snapshot:Snapshot": "azurerm_netapp_snapshot",
            "azure:netapp/snapshotPolicy:SnapshotPolicy": "azurerm_netapp_snapshot_policy",
            "azure:netapp/volume:Volume": "azurerm_netapp_volume",
            "azure:netapp/volumeGroupSapHana:VolumeGroupSapHana": "azurerm_netapp_volume_group_sap_hana",
            "azure:netapp/volumeQuotaRule:VolumeQuotaRule": "azurerm_netapp_volume_quota_rule",
            "azure:network/applicationGateway:ApplicationGateway": "azurerm_application_gateway",
            "azure:network/applicationSecurityGroup:ApplicationSecurityGroup": "azurerm_application_security_group",
            "azure:network/bgpConnection:BgpConnection": "azurerm_virtual_hub_bgp_connection",
            "azure:network/ddosProtectionPlan:DdosProtectionPlan": "azurerm_network_ddos_protection_plan",
            "azure:network/expressRouteCircuit:ExpressRouteCircuit": "azurerm_express_route_circuit",
            "azure:network/expressRouteCircuitAuthorization:ExpressRouteCircuitAuthorization": "azurerm_express_route_circuit_authorization",
            "azure:network/expressRouteCircuitConnection:ExpressRouteCircuitConnection": "azurerm_express_route_circuit_connection",
            "azure:network/expressRouteCircuitPeering:ExpressRouteCircuitPeering": "azurerm_express_route_circuit_peering",
            "azure:network/expressRouteConnection:ExpressRouteConnection": "azurerm_express_route_connection",
            "azure:network/expressRouteGateway:ExpressRouteGateway": "azurerm_express_route_gateway",
            "azure:network/expressRoutePort:ExpressRoutePort": "azurerm_express_route_port",
            "azure:network/expressRoutePortAuthorization:ExpressRoutePortAuthorization": "azurerm_express_route_port_authorization",
            "azure:network/firewall:Firewall": "azurerm_firewall",
            "azure:network/firewallApplicationRuleCollection:FirewallApplicationRuleCollection": "azurerm_firewall_application_rule_collection",
            "azure:network/firewallNatRuleCollection:FirewallNatRuleCollection": "azurerm_firewall_nat_rule_collection",
            "azure:network/firewallNetworkRuleCollection:FirewallNetworkRuleCollection": "azurerm_firewall_network_rule_collection",
            "azure:network/firewallPolicy:FirewallPolicy": "azurerm_firewall_policy",
            "azure:network/firewallPolicyRuleCollectionGroup:FirewallPolicyRuleCollectionGroup": "azurerm_firewall_policy_rule_collection_group",
            "azure:network/iPGroup:IPGroup": "azurerm_ip_group",
            "azure:network/iPGroupCIDR:IPGroupCIDR": "azurerm_ip_group_cidr",
            "azure:network/localNetworkGateway:LocalNetworkGateway": "azurerm_local_network_gateway",
            "azure:network/natGateway:NatGateway": "azurerm_nat_gateway",
            "azure:network/natGatewayPublicIpAssociation:NatGatewayPublicIpAssociation": "azurerm_nat_gateway_public_ip_association",
            "azure:network/natGatewayPublicIpPrefixAssociation:NatGatewayPublicIpPrefixAssociation": "azurerm_nat_gateway_public_ip_prefix_association",
            "azure:network/networkConnectionMonitor:NetworkConnectionMonitor": "azurerm_network_connection_monitor",
            "azure:network/networkInterface:NetworkInterface": "azurerm_network_interface",
            "azure:network/networkInterfaceApplicationGatewayBackendAddressPoolAssociation:NetworkInterfaceApplicationGatewayBackendAddressPoolAssociation": "azurerm_network_interface_application_gateway_backend_address_pool_association",
            "azure:network/networkInterfaceApplicationSecurityGroupAssociation:NetworkInterfaceApplicationSecurityGroupAssociation": "azurerm_network_interface_application_security_group_association",
            "azure:network/networkInterfaceBackendAddressPoolAssociation:NetworkInterfaceBackendAddressPoolAssociation": "azurerm_network_interface_backend_address_pool_association",
            "azure:network/networkInterfaceNatRuleAssociation:NetworkInterfaceNatRuleAssociation": "azurerm_network_interface_nat_rule_association",
            "azure:network/networkInterfaceSecurityGroupAssociation:NetworkInterfaceSecurityGroupAssociation": "azurerm_network_interface_security_group_association",
            "azure:network/networkManager:NetworkManager": "azurerm_network_manager",
            "azure:network/networkManagerAdminRule:NetworkManagerAdminRule": "azurerm_network_manager_admin_rule",
            "azure:network/networkManagerAdminRuleCollection:NetworkManagerAdminRuleCollection": "azurerm_network_manager_admin_rule_collection",
            "azure:network/networkManagerConnectivityConfiguration:NetworkManagerConnectivityConfiguration": "azurerm_network_manager_connectivity_configuration",
            "azure:network/networkManagerDeployment:NetworkManagerDeployment": "azurerm_network_manager_deployment",
            "azure:network/networkManagerManagementGroupConnection:NetworkManagerManagementGroupConnection": "azurerm_network_manager_management_group_connection",
            "azure:network/networkManagerNetworkGroup:NetworkManagerNetworkGroup": "azurerm_network_manager_network_group",
            "azure:network/networkManagerScopeConnection:NetworkManagerScopeConnection": "azurerm_network_manager_scope_connection",
            "azure:network/networkManagerSecurityAdminConfiguration:NetworkManagerSecurityAdminConfiguration": "azurerm_network_manager_security_admin_configuration",
            "azure:network/networkManagerStaticMember:NetworkManagerStaticMember": "azurerm_network_manager_static_member",
            "azure:network/networkManagerSubscriptionConnection:NetworkManagerSubscriptionConnection": "azurerm_network_manager_subscription_connection",
            "azure:network/networkPacketCapture:NetworkPacketCapture": "azurerm_network_packet_capture",
            "azure:network/networkSecurityGroup:NetworkSecurityGroup": "azurerm_network_security_group",
            "azure:network/networkSecurityRule:NetworkSecurityRule": "azurerm_network_security_rule",
            "azure:network/networkWatcher:NetworkWatcher": "azurerm_network_watcher",
            "azure:network/networkWatcherFlowLog:NetworkWatcherFlowLog": "azurerm_network_watcher_flow_log",
            "azure:network/pointToPointVpnGateway:PointToPointVpnGateway": "azurerm_point_to_site_vpn_gateway",
            "azure:network/profile:Profile": "azurerm_network_profile",
            "azure:network/publicIp:PublicIp": "azurerm_public_ip",
            "azure:network/publicIpPrefix:PublicIpPrefix": "azurerm_public_ip_prefix",
            "azure:network/route:Route": "azurerm_route",
            "azure:network/routeFilter:RouteFilter": "azurerm_route_filter",
            "azure:network/routeMap:RouteMap": "azurerm_route_map",
            "azure:network/routeServer:RouteServer": "azurerm_route_server",
            "azure:network/routeServerBgpConnection:RouteServerBgpConnection": "azurerm_route_server_bgp_connection",
            "azure:network/routeTable:RouteTable": "azurerm_route_table",
            "azure:network/routingIntent:RoutingIntent": "azurerm_virtual_hub_routing_intent",
            "azure:network/securityPartnerProvider:SecurityPartnerProvider": "azurerm_virtual_hub_security_partner_provider",
            "azure:network/subnet:Subnet": "azurerm_subnet",
            "azure:network/subnetNatGatewayAssociation:SubnetNatGatewayAssociation": "azurerm_subnet_nat_gateway_association",
            "azure:network/subnetNetworkSecurityGroupAssociation:SubnetNetworkSecurityGroupAssociation": "azurerm_subnet_network_security_group_association",
            "azure:network/subnetRouteTableAssociation:SubnetRouteTableAssociation": "azurerm_subnet_route_table_association",
            "azure:network/subnetServiceEndpointStoragePolicy:SubnetServiceEndpointStoragePolicy": "azurerm_subnet_service_endpoint_storage_policy",
            "azure:network/trafficManagerAzureEndpoint:TrafficManagerAzureEndpoint": "azurerm_traffic_manager_azure_endpoint",
            "azure:network/trafficManagerExternalEndpoint:TrafficManagerExternalEndpoint": "azurerm_traffic_manager_external_endpoint",
            "azure:network/trafficManagerNestedEndpoint:TrafficManagerNestedEndpoint": "azurerm_traffic_manager_nested_endpoint",
            "azure:network/trafficManagerProfile:TrafficManagerProfile": "azurerm_traffic_manager_profile",
            "azure:network/virtualHub:VirtualHub": "azurerm_virtual_hub",
            "azure:network/virtualHubConnection:VirtualHubConnection": "azurerm_virtual_hub_connection",
            "azure:network/virtualHubIp:VirtualHubIp": "azurerm_virtual_hub_ip",
            "azure:network/virtualHubRouteTable:VirtualHubRouteTable": "azurerm_virtual_hub_route_table",
            "azure:network/virtualHubRouteTableRoute:VirtualHubRouteTableRoute": "azurerm_virtual_hub_route_table_route",
            "azure:network/virtualNetwork:VirtualNetwork": "azurerm_virtual_network",
            "azure:network/virtualNetworkDnsServers:VirtualNetworkDnsServers": "azurerm_virtual_network_dns_servers",
            "azure:network/virtualNetworkGateway:VirtualNetworkGateway": "azurerm_virtual_network_gateway",
            "azure:network/virtualNetworkGatewayConnection:VirtualNetworkGatewayConnection": "azurerm_virtual_network_gateway_connection",
            "azure:network/virtualNetworkGatewayNatRule:VirtualNetworkGatewayNatRule": "azurerm_virtual_network_gateway_nat_rule",
            "azure:network/virtualNetworkPeering:VirtualNetworkPeering": "azurerm_virtual_network_peering",
            "azure:network/virtualWan:VirtualWan": "azurerm_virtual_wan",
            "azure:network/vnpGatewayNatRule:VnpGatewayNatRule": "azurerm_vpn_gateway_nat_rule",
            "azure:network/vpnGateway:VpnGateway": "azurerm_vpn_gateway",
            "azure:network/vpnGatewayConnection:VpnGatewayConnection": "azurerm_vpn_gateway_connection",
            "azure:network/vpnServerConfiguration:VpnServerConfiguration": "azurerm_vpn_server_configuration",
            "azure:network/vpnServerConfigurationPolicyGroup:VpnServerConfigurationPolicyGroup": "azurerm_vpn_server_configuration_policy_group",
            "azure:network/vpnSite:VpnSite": "azurerm_vpn_site",
            "azure:networkfunction/azureTrafficCollector:AzureTrafficCollector": "azurerm_network_function_azure_traffic_collector",
            "azure:networkfunction/collectorPolicy:CollectorPolicy": "azurerm_network_function_collector_policy",
            "azure:newrelic/monitor:Monitor": "azurerm_new_relic_monitor",
            "azure:newrelic/tagRule:TagRule": "azurerm_new_relic_tag_rule",
            "azure:nginx/certificate:Certificate": "azurerm_nginx_certificate",
            "azure:nginx/configuration:Configuration": "azurerm_nginx_configuration",
            "azure:nginx/deployment:Deployment": "azurerm_nginx_deployment",
            "azure:notificationhub/authorizationRule:AuthorizationRule": "azurerm_notification_hub_authorization_rule",
            "azure:notificationhub/hub:Hub": "azurerm_notification_hub",
            "azure:notificationhub/namespace:Namespace": "azurerm_notification_hub_namespace",
            "azure:operationalinsights/analyticsSolution:AnalyticsSolution": "azurerm_log_analytics_solution",
            "azure:operationalinsights/analyticsWorkspace:AnalyticsWorkspace": "azurerm_log_analytics_workspace",
            "azure:operationalinsights/queryPackQuery:QueryPackQuery": "azurerm_log_analytics_query_pack_query",
            "azure:orbital/contact:Contact": "azurerm_orbital_contact",
            "azure:orbital/contactProfile:ContactProfile": "azurerm_orbital_contact_profile",
            "azure:orbital/spacecraft:Spacecraft": "azurerm_orbital_spacecraft",
            "azure:paloalto/localRulestack:LocalRulestack": "azurerm_palo_alto_local_rulestack",
            "azure:paloalto/localRulestackCertificate:LocalRulestackCertificate": "azurerm_palo_alto_local_rulestack_certificate",
            "azure:paloalto/localRulestackFqdnList:LocalRulestackFqdnList": "azurerm_palo_alto_local_rulestack_fqdn_list",
            "azure:paloalto/localRulestackOutboundTrustCertificateAssociation:LocalRulestackOutboundTrustCertificateAssociation": "azurerm_palo_alto_local_rulestack_outbound_trust_certificate_association",
            "azure:paloalto/localRulestackOutboundUntrustCertificateAssociation:LocalRulestackOutboundUntrustCertificateAssociation": "azurerm_palo_alto_local_rulestack_outbound_untrust_certificate_association",
            "azure:paloalto/localRulestackPrefixList:LocalRulestackPrefixList": "azurerm_palo_alto_local_rulestack_prefix_list",
            "azure:paloalto/localRulestackRule:LocalRulestackRule": "azurerm_palo_alto_local_rulestack_rule",
            "azure:paloalto/nextGenerationFirewallVirtualHubLocalRulestack:NextGenerationFirewallVirtualHubLocalRulestack": "azurerm_palo_alto_next_generation_firewall_virtual_hub_local_rulestack",
            "azure:paloalto/nextGenerationFirewallVirtualHubPanorama:NextGenerationFirewallVirtualHubPanorama": "azurerm_palo_alto_next_generation_firewall_virtual_hub_panorama",
            "azure:paloalto/nextGenerationFirewallVirtualNetworkLocalRulestack:NextGenerationFirewallVirtualNetworkLocalRulestack": "azurerm_palo_alto_next_generation_firewall_virtual_network_local_rulestack",
            "azure:paloalto/nextGenerationFirewallVirtualNetworkPanorama:NextGenerationFirewallVirtualNetworkPanorama": "azurerm_palo_alto_next_generation_firewall_virtual_network_panorama",
            "azure:paloalto/virtualNetworkAppliance:VirtualNetworkAppliance": "azurerm_palo_alto_virtual_network_appliance",
            "azure:pim/activeRoleAssignment:ActiveRoleAssignment": "azurerm_pim_active_role_assignment",
            "azure:pim/eligibleRoleAssignment:EligibleRoleAssignment": "azurerm_pim_eligible_role_assignment",
            "azure:policy/definition:Definition": "azurerm_policy_definition",
            "azure:policy/policySetDefinition:PolicySetDefinition": "azurerm_policy_set_definition",
            "azure:policy/virtualMachineConfigurationAssignment:VirtualMachineConfigurationAssignment": "azurerm_policy_virtual_machine_configuration_assignment",
            "azure:portal/dashboard:Dashboard": "azurerm_dashboard",
            "azure:portal/portalDashboard:PortalDashboard": "azurerm_portal_dashboard",
            "azure:postgresql/activeDirectoryAdministrator:ActiveDirectoryAdministrator": "azurerm_postgresql_active_directory_administrator",
            "azure:postgresql/configuration:Configuration": "azurerm_postgresql_configuration",
            "azure:postgresql/database:Database": "azurerm_postgresql_database",
            "azure:postgresql/firewallRule:FirewallRule": "azurerm_postgresql_firewall_rule",
            "azure:postgresql/flexibleServer:FlexibleServer": "azurerm_postgresql_flexible_server",
            "azure:postgresql/flexibleServerActiveDirectoryAdministrator:FlexibleServerActiveDirectoryAdministrator": "azurerm_postgresql_flexible_server_active_directory_administrator",
            "azure:postgresql/flexibleServerConfiguration:FlexibleServerConfiguration": "azurerm_postgresql_flexible_server_configuration",
            "azure:postgresql/flexibleServerDatabase:FlexibleServerDatabase": "azurerm_postgresql_flexible_server_database",
            "azure:postgresql/flexibleServerFirewallRule:FlexibleServerFirewallRule": "azurerm_postgresql_flexible_server_firewall_rule",
            "azure:postgresql/server:Server": "azurerm_postgresql_server",
            "azure:postgresql/serverKey:ServerKey": "azurerm_postgresql_server_key",
            "azure:postgresql/virtualNetworkRule:VirtualNetworkRule": "azurerm_postgresql_virtual_network_rule",
            "azure:powerbi/embedded:Embedded": "azurerm_powerbi_embedded",
            "azure:privatedns/aAAARecord:AAAARecord": "azurerm_private_dns_aaaa_record",
            "azure:privatedns/aRecord:ARecord": "azurerm_private_dns_a_record",
            "azure:privatedns/cnameRecord:CnameRecord": "azurerm_private_dns_cname_record",
            "azure:privatedns/linkService:LinkService": "azurerm_private_link_service",
            "azure:privatedns/mxRecord:MxRecord": "azurerm_private_dns_mx_record",
            "azure:privatedns/pTRRecord:PTRRecord": "azurerm_private_dns_ptr_record",
            "azure:privatedns/resolver:Resolver": "azurerm_private_dns_resolver",
            "azure:privatedns/resolverDnsForwardingRuleset:ResolverDnsForwardingRuleset": "azurerm_private_dns_resolver_dns_forwarding_ruleset",
            "azure:privatedns/resolverForwardingRule:ResolverForwardingRule": "azurerm_private_dns_resolver_forwarding_rule",
            "azure:privatedns/resolverInboundEndpoint:ResolverInboundEndpoint": "azurerm_private_dns_resolver_inbound_endpoint",
            "azure:privatedns/resolverOutboundEndpoint:ResolverOutboundEndpoint": "azurerm_private_dns_resolver_outbound_endpoint",
            "azure:privatedns/resolverVirtualNetworkLink:ResolverVirtualNetworkLink": "azurerm_private_dns_resolver_virtual_network_link",
            "azure:privatedns/sRVRecord:SRVRecord": "azurerm_private_dns_srv_record",
            "azure:privatedns/txtRecord:TxtRecord": "azurerm_private_dns_txt_record",
            "azure:privatedns/zone:Zone": "azurerm_private_dns_zone",
            "azure:privatedns/zoneVirtualNetworkLink:ZoneVirtualNetworkLink": "azurerm_private_dns_zone_virtual_network_link",
            "azure:privatelink/applicationSecurityGroupAssociation:ApplicationSecurityGroupAssociation": "azurerm_private_endpoint_application_security_group_association",
            "azure:privatelink/endpoint:Endpoint": "azurerm_private_endpoint",
            "azure:proximity/placementGroup:PlacementGroup": "azurerm_proximity_placement_group",
            "azure:purview/account:Account": "azurerm_purview_account",
            "azure:recoveryservices/vault:Vault": "azurerm_recovery_services_vault",
            "azure:recoveryservices/vaultResourceGuardAssociation:VaultResourceGuardAssociation": "azurerm_recovery_services_vault_resource_guard_association",
            "azure:redis/cache:Cache": "azurerm_redis_cache",
            "azure:redis/enterpriseCluster:EnterpriseCluster": "azurerm_redis_enterprise_cluster",
            "azure:redis/enterpriseDatabase:EnterpriseDatabase": "azurerm_redis_enterprise_database",
            "azure:redis/firewallRule:FirewallRule": "azurerm_redis_firewall_rule",
            "azure:redis/linkedServer:LinkedServer": "azurerm_redis_linked_server",
            "azure:relay/hybridConnection:HybridConnection": "azurerm_relay_hybrid_connection",
            "azure:relay/hybridConnectionAuthorizationRule:HybridConnectionAuthorizationRule": "azurerm_relay_hybrid_connection_authorization_rule",
            "azure:relay/namespace:Namespace": "azurerm_relay_namespace",
            "azure:relay/namespaceAuthorizationRule:NamespaceAuthorizationRule": "azurerm_relay_namespace_authorization_rule",
            "azure:role/assignment:Assignment": "azurerm_role_assignment_legacy",
            "azure:role/definition:Definition": "azurerm_role_definition_legacy",
            "azure:search/service:Service": "azurerm_search_service",
            "azure:search/sharedPrivateLinkService:SharedPrivateLinkService": "azurerm_search_shared_private_link_service",
            "azure:securitycenter/advancedThreatProtection:AdvancedThreatProtection": "azurerm_advanced_threat_protection",
            "azure:securitycenter/assessment:Assessment": "azurerm_security_center_assessment",
            "azure:securitycenter/assessmentPolicy:AssessmentPolicy": "azurerm_security_center_assessment_policy",
            "azure:securitycenter/autoProvisioning:AutoProvisioning": "azurerm_security_center_auto_provisioning",
            "azure:securitycenter/automation:Automation": "azurerm_security_center_automation",
            "azure:securitycenter/contact:Contact": "azurerm_security_center_contact",
            "azure:securitycenter/serverVulnerabilityAssessment:ServerVulnerabilityAssessment": "azurerm_security_center_server_vulnerability_assessment",
            "azure:securitycenter/serverVulnerabilityAssessmentVirtualMachine:ServerVulnerabilityAssessmentVirtualMachine": "azurerm_security_center_server_vulnerability_assessment_virtual_machine",
            "azure:securitycenter/setting:Setting": "azurerm_security_center_setting",
            "azure:securitycenter/storageDefender:StorageDefender": "azurerm_security_center_storage_defender",
            "azure:securitycenter/subscriptionPricing:SubscriptionPricing": "azurerm_security_center_subscription_pricing",
            "azure:securitycenter/workspace:Workspace": "azurerm_security_center_workspace",
            "azure:sentinel/alertRuleAnomalyBuiltIn:AlertRuleAnomalyBuiltIn": "azurerm_sentinel_alert_rule_anomaly_built_in",
            "azure:sentinel/alertRuleAnomalyDuplicate:AlertRuleAnomalyDuplicate": "azurerm_sentinel_alert_rule_anomaly_duplicate",
            "azure:sentinel/alertRuleFusion:AlertRuleFusion": "azurerm_sentinel_alert_rule_fusion",
            "azure:sentinel/alertRuleMachineLearningBehaviorAnalytics:AlertRuleMachineLearningBehaviorAnalytics": "azurerm_sentinel_alert_rule_machine_learning_behavior_analytics",
            "azure:sentinel/alertRuleMsSecurityIncident:AlertRuleMsSecurityIncident": "azurerm_sentinel_alert_rule_ms_security_incident",
            "azure:sentinel/alertRuleNrt:AlertRuleNrt": "azurerm_sentinel_alert_rule_nrt",
            "azure:sentinel/alertRuleScheduled:AlertRuleScheduled": "azurerm_sentinel_alert_rule_scheduled",
            "azure:sentinel/alertRuleThreatIntelligence:AlertRuleThreatIntelligence": "azurerm_sentinel_alert_rule_threat_intelligence",
            "azure:sentinel/authomationRule:AuthomationRule": "azurerm_sentinel_automation_rule_legacy",
            "azure:sentinel/automationRule:AutomationRule": "azurerm_sentinel_automation_rule",
            "azure:sentinel/dataConnectorAwsCloudTrail:DataConnectorAwsCloudTrail": "azurerm_sentinel_data_connector_aws_cloud_trail",
            "azure:sentinel/dataConnectorAwsS3:DataConnectorAwsS3": "azurerm_sentinel_data_connector_aws_s3",
            "azure:sentinel/dataConnectorAzureActiveDirectory:DataConnectorAzureActiveDirectory": "azurerm_sentinel_data_connector_azure_active_directory",
            "azure:sentinel/dataConnectorAzureAdvancedThreadProtection:DataConnectorAzureAdvancedThreadProtection": "azurerm_sentinel_data_connector_azure_advanced_threat_protection",
            "azure:sentinel/dataConnectorAzureSecurityCenter:DataConnectorAzureSecurityCenter": "azurerm_sentinel_data_connector_azure_security_center",
            "azure:sentinel/dataConnectorDynamics365:DataConnectorDynamics365": "azurerm_sentinel_data_connector_dynamics_365",
            "azure:sentinel/dataConnectorIot:DataConnectorIot": "azurerm_sentinel_data_connector_iot",
            "azure:sentinel/dataConnectorMicrosoftCloudAppSecurity:DataConnectorMicrosoftCloudAppSecurity": "azurerm_sentinel_data_connector_microsoft_cloud_app_security",
            "azure:sentinel/dataConnectorMicrosoftDefenderAdvancedThreatProtection:DataConnectorMicrosoftDefenderAdvancedThreatProtection": "azurerm_sentinel_data_connector_microsoft_defender_advanced_threat_protection",
            "azure:sentinel/dataConnectorMicrosoftThreatIntelligence:DataConnectorMicrosoftThreatIntelligence": "azurerm_sentinel_data_connector_microsoft_threat_intelligence",
            "azure:sentinel/dataConnectorMicrosoftThreatProtection:DataConnectorMicrosoftThreatProtection": "azurerm_sentinel_data_connector_microsoft_threat_protection",
            "azure:sentinel/dataConnectorOffice365:DataConnectorOffice365": "azurerm_sentinel_data_connector_office_365",
            "azure:sentinel/dataConnectorOffice365Project:DataConnectorOffice365Project": "azurerm_sentinel_data_connector_office_365_project",
            "azure:sentinel/dataConnectorOfficeAtp:DataConnectorOfficeAtp": "azurerm_sentinel_data_connector_office_atp",
            "azure:sentinel/dataConnectorOfficeIrm:DataConnectorOfficeIrm": "azurerm_sentinel_data_connector_office_irm",
            "azure:sentinel/dataConnectorOfficePowerBi:DataConnectorOfficePowerBi": "azurerm_sentinel_data_connector_office_power_bi",
            "azure:sentinel/dataConnectorThreatIntelligence:DataConnectorThreatIntelligence": "azurerm_sentinel_data_connector_threat_intelligence",
            "azure:sentinel/dataConnectorThreatIntelligenceTaxii:DataConnectorThreatIntelligenceTaxii": "azurerm_sentinel_data_connector_threat_intelligence_taxii",
            "azure:sentinel/logAnalyticsWorkspaceOnboarding:LogAnalyticsWorkspaceOnboarding": "azurerm_sentinel_log_analytics_workspace_onboarding",
            "azure:sentinel/metadata:Metadata": "azurerm_sentinel_metadata",
            "azure:sentinel/threatIntelligenceIndicator:ThreatIntelligenceIndicator": "azurerm_sentinel_threat_intelligence_indicator",
            "azure:sentinel/watchlist:Watchlist": "azurerm_sentinel_watchlist",
            "azure:sentinel/watchlistItem:WatchlistItem": "azurerm_sentinel_watchlist_item",
            "azure:servicebus/namespace:Namespace": "azurerm_servicebus_namespace",
            "azure:servicebus/namespaceAuthorizationRule:NamespaceAuthorizationRule": "azurerm_servicebus_namespace_authorization_rule",
            "azure:servicebus/namespaceDisasterRecoveryConfig:NamespaceDisasterRecoveryConfig": "azurerm_servicebus_namespace_disaster_recovery_config",
            "azure:servicebus/namespaceNetworkRuleSet:NamespaceNetworkRuleSet": "azurerm_servicebus_namespace_network_rule_set",
            "azure:servicebus/queue:Queue": "azurerm_servicebus_queue",
            "azure:servicebus/queueAuthorizationRule:QueueAuthorizationRule": "azurerm_servicebus_queue_authorization_rule",
            "azure:servicebus/subscription:Subscription": "azurerm_servicebus_subscription",
            "azure:servicebus/subscriptionRule:SubscriptionRule": "azurerm_servicebus_subscription_rule",
            "azure:servicebus/topic:Topic": "azurerm_servicebus_topic",
            "azure:servicebus/topicAuthorizationRule:TopicAuthorizationRule": "azurerm_servicebus_topic_authorization_rule",
            "azure:servicefabric/cluster:Cluster": "azurerm_service_fabric_cluster",
            "azure:servicefabric/managedCluster:ManagedCluster": "azurerm_service_fabric_managed_cluster",
            "azure:signalr/service:Service": "azurerm_signalr_service",
            "azure:signalr/serviceCustomCertificate:ServiceCustomCertificate": "azurerm_signalr_service_custom_certificate",
            "azure:signalr/serviceCustomDomain:ServiceCustomDomain": "azurerm_signalr_service_custom_domain",
            "azure:signalr/serviceNetworkAcl:ServiceNetworkAcl": "azurerm_signalr_service_network_acl",
            "azure:signalr/sharedPrivateLinkResource:SharedPrivateLinkResource": "azurerm_signalr_shared_private_link_resource",
            "azure:siterecovery/fabric:Fabric": "azurerm_site_recovery_fabric",
            "azure:siterecovery/hyperVReplicationPolicy:HyperVReplicationPolicy": "azurerm_site_recovery_hyperv_replication_policy",
            "azure:siterecovery/hyperVReplicationPolicyAssociation:HyperVReplicationPolicyAssociation": "azurerm_site_recovery_hyperv_replication_policy_association",
            "azure:siterecovery/hyperVSite:HyperVSite": "azurerm_site_recovery_services_vault_hyperv_site",
            "azure:siterecovery/hypervNetworkMapping:HypervNetworkMapping": "azurerm_site_recovery_hyperv_network_mapping",
            "azure:siterecovery/networkMapping:NetworkMapping": "azurerm_site_recovery_network_mapping",
            "azure:siterecovery/protectionContainer:ProtectionContainer": "azurerm_site_recovery_protection_container",
            "azure:siterecovery/protectionContainerMapping:ProtectionContainerMapping": "azurerm_site_recovery_protection_container_mapping",
            "azure:siterecovery/replicatedVM:ReplicatedVM": "azurerm_site_recovery_replicated_vm",
            "azure:siterecovery/replicationPolicy:ReplicationPolicy": "azurerm_site_recovery_replication_policy",
            "azure:siterecovery/replicationRecoveryPlan:ReplicationRecoveryPlan": "azurerm_site_recovery_replication_recovery_plan",
            "azure:siterecovery/vMWareReplicationPolicy:VMWareReplicationPolicy": "azurerm_site_recovery_vmware_replication_policy",
            "azure:siterecovery/vmwareReplicationPolicyAssociation:VmwareReplicationPolicyAssociation": "azurerm_site_recovery_vmware_replication_policy_association",
            "azure:sql/activeDirectoryAdministrator:ActiveDirectoryAdministrator": "azurerm_sql_active_directory_administrator",
            "azure:sql/database:Database": "azurerm_sql_database",
            "azure:sql/elasticPool:ElasticPool": "azurerm_sql_elasticpool",
            "azure:sql/failoverGroup:FailoverGroup": "azurerm_sql_failover_group",
            "azure:sql/firewallRule:FirewallRule": "azurerm_sql_firewall_rule",
            "azure:sql/managedDatabase:ManagedDatabase": "azurerm_sql_managed_database",
            "azure:sql/managedInstance:ManagedInstance": "azurerm_sql_managed_instance",
            "azure:sql/managedInstanceActiveDirectoryAdministrator:ManagedInstanceActiveDirectoryAdministrator": "azurerm_sql_managed_instance_active_directory_administrator",
            "azure:sql/managedInstanceFailoverGroup:ManagedInstanceFailoverGroup": "azurerm_sql_managed_instance_failover_group",
            "azure:sql/sqlServer:SqlServer": "azurerm_sql_server",
            "azure:sql/virtualNetworkRule:VirtualNetworkRule": "azurerm_sql_virtual_network_rule",
            "azure:stack/hciCluster:HciCluster": "azurerm_stack_hci_cluster",
            "azure:storage/account:Account": "azurerm_storage_account",
            "azure:storage/accountNetworkRules:AccountNetworkRules": "azurerm_storage_account_network_rules",
            "azure:storage/blob:Blob": "azurerm_storage_blob",
            "azure:storage/blobInventoryPolicy:BlobInventoryPolicy": "azurerm_storage_blob_inventory_policy",
            "azure:storage/container:Container": "azurerm_storage_container",
            "azure:storage/customerManagedKey:CustomerManagedKey": "azurerm_storage_account_customer_managed_key",
            "azure:storage/dataLakeGen2Filesystem:DataLakeGen2Filesystem": "azurerm_storage_data_lake_gen2_filesystem",
            "azure:storage/dataLakeGen2Path:DataLakeGen2Path": "azurerm_storage_data_lake_gen2_path",
            "azure:storage/encryptionScope:EncryptionScope": "azurerm_storage_encryption_scope",
            "azure:storage/localUser:LocalUser": "azurerm_storage_account_local_user",
            "azure:storage/managementPolicy:ManagementPolicy": "azurerm_storage_management_policy",
            "azure:storage/mover:Mover": "azurerm_storage_mover",
            "azure:storage/moverAgent:MoverAgent": "azurerm_storage_mover_agent",
            "azure:storage/moverJobDefinition:MoverJobDefinition": "azurerm_storage_mover_job_definition",
            "azure:storage/moverProject:MoverProject": "azurerm_storage_mover_project",
            "azure:storage/moverSourceEndpoint:MoverSourceEndpoint": "azurerm_storage_mover_source_endpoint",
            "azure:storage/moverTargetEndpoint:MoverTargetEndpoint": "azurerm_storage_mover_target_endpoint",
            "azure:storage/objectReplication:ObjectReplication": "azurerm_storage_object_replication",
            "azure:storage/queue:Queue": "azurerm_storage_queue",
            "azure:storage/share:Share": "azurerm_storage_share",
            "azure:storage/shareDirectory:ShareDirectory": "azurerm_storage_share_directory",
            "azure:storage/shareFile:ShareFile": "azurerm_storage_share_file",
            "azure:storage/sync:Sync": "azurerm_storage_sync",
            "azure:storage/syncCloudEndpoint:SyncCloudEndpoint": "azurerm_storage_sync_cloud_endpoint",
            "azure:storage/syncGroup:SyncGroup": "azurerm_storage_sync_group",
            "azure:storage/table:Table": "azurerm_storage_table",
            "azure:storage/tableEntity:TableEntity": "azurerm_storage_table_entity",
            "azure:storage/zipBlob:ZipBlob": "azurerm_storage_zipblob",
            "azure:streamanalytics/cluster:Cluster": "azurerm_stream_analytics_cluster",
            "azure:streamanalytics/functionJavaScriptUDF:FunctionJavaScriptUDF": "azurerm_stream_analytics_function_javascript_udf",
            "azure:streamanalytics/functionJavascriptUda:FunctionJavascriptUda": "azurerm_stream_analytics_function_javascript_uda",
            "azure:streamanalytics/job:Job": "azurerm_stream_analytics_job",
            "azure:streamanalytics/jobSchedule:JobSchedule": "azurerm_stream_analytics_job_schedule",
            "azure:streamanalytics/managedPrivateEndpoint:ManagedPrivateEndpoint": "azurerm_stream_analytics_managed_private_endpoint",
            "azure:streamanalytics/outputBlob:OutputBlob": "azurerm_stream_analytics_output_blob",
            "azure:streamanalytics/outputCosmosdb:OutputCosmosdb": "azurerm_stream_analytics_output_cosmosdb",
            "azure:streamanalytics/outputEventHub:OutputEventHub": "azurerm_stream_analytics_output_eventhub",
            "azure:streamanalytics/outputFunction:OutputFunction": "azurerm_stream_analytics_output_function",
            "azure:streamanalytics/outputMssql:OutputMssql": "azurerm_stream_analytics_output_mssql",
            "azure:streamanalytics/outputPowerbi:OutputPowerbi": "azurerm_stream_analytics_output_powerbi",
            "azure:streamanalytics/outputServiceBusQueue:OutputServiceBusQueue": "azurerm_stream_analytics_output_servicebus_queue",
            "azure:streamanalytics/outputServicebusTopic:OutputServicebusTopic": "azurerm_stream_analytics_output_servicebus_topic",
            "azure:streamanalytics/outputSynapse:OutputSynapse": "azurerm_stream_analytics_output_synapse",
            "azure:streamanalytics/outputTable:OutputTable": "azurerm_stream_analytics_output_table",
            "azure:streamanalytics/referenceInputBlob:ReferenceInputBlob": "azurerm_stream_analytics_reference_input_blob",
            "azure:streamanalytics/referenceInputMssql:ReferenceInputMssql": "azurerm_stream_analytics_reference_input_mssql",
            "azure:streamanalytics/streamInputBlob:StreamInputBlob": "azurerm_stream_analytics_stream_input_blob",
            "azure:streamanalytics/streamInputEventHub:StreamInputEventHub": "azurerm_stream_analytics_stream_input_eventhub",
            "azure:streamanalytics/streamInputEventHubV2:StreamInputEventHubV2": "azurerm_stream_analytics_stream_input_eventhub_v2",
            "azure:streamanalytics/streamInputIotHub:StreamInputIotHub": "azurerm_stream_analytics_stream_input_iothub",
            "azure:synapse/firewallRule:FirewallRule": "azurerm_synapse_firewall_rule",
            "azure:synapse/integrationRuntimeAzure:IntegrationRuntimeAzure": "azurerm_synapse_integration_runtime_azure",
            "azure:synapse/integrationRuntimeSelfHosted:IntegrationRuntimeSelfHosted": "azurerm_synapse_integration_runtime_self_hosted",
            "azure:synapse/linkedService:LinkedService": "azurerm_synapse_linked_service",
            "azure:synapse/managedPrivateEndpoint:ManagedPrivateEndpoint": "azurerm_synapse_managed_private_endpoint",
            "azure:synapse/privateLinkHub:PrivateLinkHub": "azurerm_synapse_private_link_hub",
            "azure:synapse/roleAssignment:RoleAssignment": "azurerm_synapse_role_assignment",
            "azure:synapse/sparkPool:SparkPool": "azurerm_synapse_spark_pool",
            "azure:synapse/sqlPool:SqlPool": "azurerm_synapse_sql_pool",
            "azure:synapse/sqlPoolExtendedAuditingPolicy:SqlPoolExtendedAuditingPolicy": "azurerm_synapse_sql_pool_extended_auditing_policy",
            "azure:synapse/sqlPoolSecurityAlertPolicy:SqlPoolSecurityAlertPolicy": "azurerm_synapse_sql_pool_security_alert_policy",
            "azure:synapse/sqlPoolVulnerabilityAssessment:SqlPoolVulnerabilityAssessment": "azurerm_synapse_sql_pool_vulnerability_assessment",
            "azure:synapse/sqlPoolVulnerabilityAssessmentBaseline:SqlPoolVulnerabilityAssessmentBaseline": "azurerm_synapse_sql_pool_vulnerability_assessment_baseline",
            "azure:synapse/sqlPoolWorkloadClassifier:SqlPoolWorkloadClassifier": "azurerm_synapse_sql_pool_workload_classifier",
            "azure:synapse/sqlPoolWorkloadGroup:SqlPoolWorkloadGroup": "azurerm_synapse_sql_pool_workload_group",
            "azure:synapse/workspace:Workspace": "azurerm_synapse_workspace",
            "azure:synapse/workspaceAadAdmin:WorkspaceAadAdmin": "azurerm_synapse_workspace_aad_admin",
            "azure:synapse/workspaceExtendedAuditingPolicy:WorkspaceExtendedAuditingPolicy": "azurerm_synapse_workspace_extended_auditing_policy",
            "azure:synapse/workspaceKey:WorkspaceKey": "azurerm_synapse_workspace_key",
            "azure:synapse/workspaceSecurityAlertPolicy:WorkspaceSecurityAlertPolicy": "azurerm_synapse_workspace_security_alert_policy",
            "azure:synapse/workspaceSqlAadAdmin:WorkspaceSqlAadAdmin": "azurerm_synapse_workspace_sql_aad_admin",
            "azure:synapse/workspaceVulnerabilityAssessment:WorkspaceVulnerabilityAssessment": "azurerm_synapse_workspace_vulnerability_assessment",
            "azure:trafficmanager/profile:Profile": "azurerm_traffic_manager_profile_legacy",
            "azure:videoanalyzer/analyzer:Analyzer": "azurerm_video_analyzer",
            "azure:videoanalyzer/edgeModule:EdgeModule": "azurerm_video_analyzer_edge_module",
            "azure:voice/servicesCommunicationsGateway:ServicesCommunicationsGateway": "azurerm_voice_services_communications_gateway",
            "azure:voice/servicesCommunicationsGatewayTestLine:ServicesCommunicationsGatewayTestLine": "azurerm_voice_services_communications_gateway_test_line",
            "azure:waf/policy:Policy": "azurerm_web_application_firewall_policy",
            "azure:webpubsub/customCertificate:CustomCertificate": "azurerm_web_pubsub_custom_certificate",
            "azure:webpubsub/customDomain:CustomDomain": "azurerm_web_pubsub_custom_domain",
            "azure:webpubsub/hub:Hub": "azurerm_web_pubsub_hub",
            "azure:webpubsub/networkAcl:NetworkAcl": "azurerm_web_pubsub_network_acl",
            "azure:webpubsub/service:Service": "azurerm_web_pubsub",
            "azure:webpubsub/sharedPrivateLinkResource:SharedPrivateLinkResource": "azurerm_web_pubsub_shared_private_link_resource"
        },
        "functions": {
            "azure:aadb2c/getDirectory:getDirectory": "azurerm_aadb2c_directory",
            "azure:advisor/getRecommendations:getRecommendations": "azurerm_advisor_recommendations",
            "azure:apimanagement/getApi:getApi": "azurerm_api_management_api",
            "azure:apimanagement/getApiVersionSet:getApiVersionSet": "azurerm_api_management_api_version_set",
            "azure:apimanagement/getGateway:getGateway": "azurerm_api_management_gateway",
            "azure:apimanagement/getGatewayHostNameConfiguration:getGatewayHostNameConfiguration": "azurerm_api_management_gateway_host_name_configuration",
            "azure:apimanagement/getGroup:getGroup": "azurerm_api_management_group",
            "azure:apimanagement/getProduct:getProduct": "azurerm_api_management_product",
            "azure:apimanagement/getService:getService": "azurerm_api_management",
            "azure:apimanagement/getUser:getUser": "azurerm_api_management_user",
            "azure:appconfiguration/getConfigurationKey:getConfigurationKey": "azurerm_app_configuration_key",
            "azure:appconfiguration/getConfigurationKeys:getConfigurationKeys": "azurerm_app_configuration_keys",
            "azure:appconfiguration/getConfigurationStore:getConfigurationStore": "azurerm_app_configuration",
            "azure:appinsights/getInsights:getInsights": "azurerm_application_insights",
            "azure:appplatform/getSpringCloudApp:getSpringCloudApp": "azurerm_spring_cloud_app",
            "azure:appplatform/getSpringCloudService:getSpringCloudService": "azurerm_spring_cloud_service",
            "azure:appservice/getAppService:getAppService": "azurerm_app_service",
            "azure:appservice/getAppServiceEnvironment:getAppServiceEnvironment": "azurerm_app_service_environment",
            "azure:appservice/getAppServicePlan:getAppServicePlan": "azurerm_app_service_plan",
            "azure:appservice/getCertificate:getCertificate": "azurerm_app_service_certificate",
            "azure:appservice/getCertificateOrder:getCertificateOrder": "azurerm_app_service_certificate_order",
            "azure:appservice/getEnvironmentV3:getEnvironmentV3": "azurerm_app_service_environment_v3",
            "azure:appservice/getFunctionApp:getFunctionApp": "azurerm_function_app",
            "azure:appservice/getFunctionAppHostKeys:getFunctionAppHostKeys": "azurerm_function_app_host_keys",
            "azure:appservice/getLinuxFunctionApp:getLinuxFunctionApp": "azurerm_linux_function_app",
            "azure:appservice/getLinuxWebApp:getLinuxWebApp": "azurerm_linux_web_app",
            "azure:appservice/getServicePlan:getServicePlan": "azurerm_service_plan",
            "azure:appservice/getSourceControlToken:getSourceControlToken": "azurerm_source_control_token",
            "azure:appservice/getWindowsFunctionApp:getWindowsFunctionApp": "azurerm_windows_function_app",
            "azure:appservice/getWindowsWebApp:getWindowsWebApp": "azurerm_windows_web_app",
            "azure:arcmachine/get:get": "azurerm_arc_machine",
            "azure:attestation/getProvider:getProvider": "azurerm_attestation_provider",
            "azure:authorization/getRoleDefinition:getRoleDefinition": "azurerm_role_definition",
            "azure:authorization/getUserAssignedIdentity:getUserAssignedIdentity": "azurerm_user_assigned_identity",
            "azure:automation/getAccount:getAccount": "azurerm_automation_account",
            "azure:automation/getBoolVariable:getBoolVariable": "azurerm_automation_variable_bool",
            "azure:automation/getDateTimeVariable:getDateTimeVariable": "azurerm_automation_variable_datetime",
            "azure:automation/getIntVariable:getIntVariable": "azurerm_automation_variable_int",
            "azure:automation/getStringVariable:getStringVariable": "azurerm_automation_variable_string",
            "azure:automation/getVariableObject:getVariableObject": "azurerm_automation_variable_object",
            "azure:automation/getVariables:getVariables": "azurerm_automation_variables",
            "azure:avs/getPrivateCloud:getPrivateCloud": "azurerm_vmware_private_cloud",
            "azure:backup/getPolicyFileshare:getPolicyFileshare": "azurerm_backup_policy_file_share",
            "azure:backup/getPolicyVM:getPolicyVM": "azurerm_backup_policy_vm",
            "azure:batch/getAccount:getAccount": "azurerm_batch_account",
            "azure:batch/getApplication:getApplication": "azurerm_batch_application",
            "azure:batch/getCertificate:getCertificate": "azurerm_batch_certificate",
            "azure:batch/getPool:getPool": "azurerm_batch_pool",
            "azure:billing/getEnrollmentAccountScope:getEnrollmentAccountScope": "azurerm_billing_enrollment_account_scope",
            "azure:billing/getMcaAccountScope:getMcaAccountScope": "azurerm_billing_mca_account_scope",
            "azure:billing/getMpaAccountScope:getMpaAccountScope": "azurerm_billing_mpa_account_scope",
            "azure:blueprint/getDefinition:getDefinition": "azurerm_blueprint_definition",
            "azure:blueprint/getPublishedVersion:getPublishedVersion": "azurerm_blueprint_published_version",
            "azure:cdn/getFrontdoorCustomDomain:getFrontdoorCustomDomain": "azurerm_cdn_frontdoor_custom_domain",
            "azure:cdn/getFrontdoorEndpoint:getFrontdoorEndpoint": "azurerm_cdn_frontdoor_endpoint",
            "azure:cdn/getFrontdoorFirewallPolicy:getFrontdoorFirewallPolicy": "azurerm_cdn_frontdoor_firewall_policy",
            "azure:cdn/getFrontdoorOriginGroup:getFrontdoorOriginGroup": "azurerm_cdn_frontdoor_origin_group",
            "azure:cdn/getFrontdoorProfile:getFrontdoorProfile": "azurerm_cdn_frontdoor_profile",
            "azure:cdn/getFrontdoorRuleSet:getFrontdoorRuleSet": "azurerm_cdn_frontdoor_rule_set",
            "azure:cdn/getFrontdoorSecret:getFrontdoorSecret": "azurerm_cdn_frontdoor_secret",
            "azure:cdn/getProfile:getProfile": "azurerm_cdn_profile",
            "azure:cognitive/getAccount:getAccount": "azurerm_cognitive_account",
            "azure:communication/getService:getService": "azurerm_communication_service",
            "azure:compute/getAvailabilitySet:getAvailabilitySet": "azurerm_availability_set",
            "azure:compute/getBastionHost:getBastionHost": "azurerm_bastion_host",
            "azure:compute/getConfidentialLedger:getConfidentialLedger": "azurerm_confidential_ledger",
            "azure:compute/getDedicatedHost:getDedicatedHost": "azurerm_dedicated_host",
            "azure:compute/getDedicatedHostGroup:getDedicatedHostGroup": "azurerm_dedicated_host_group",
            "azure:compute/getDiskAccess:getDiskAccess": "azurerm_disk_access",
            "azure:compute/getDiskEncryptionSet:getDiskEncryptionSet": "azurerm_disk_encryption_set",
            "azure:compute/getImage:getImage": "azurerm_image",
            "azure:compute/getImages:getImages": "azurerm_images",
            "azure:compute/getManagedDisk:getManagedDisk": "azurerm_managed_disk",
            "azure:compute/getOrchestratedVirtualMachineScaleSet:getOrchestratedVirtualMachineScaleSet": "azurerm_orchestrated_virtual_machine_scale_set",
            "azure:compute/getPlatformImage:getPlatformImage": "azurerm_platform_image",
            "azure:compute/getSharedImage:getSharedImage": "azurerm_shared_image",
            "azure:compute/getSharedImageGallery:getSharedImageGallery": "azurerm_shared_image_gallery",
            "azure:compute/getSharedImageVersion:getSharedImageVersion": "azurerm_shared_image_version",
            "azure:compute/getSharedImageVersions:getSharedImageVersions": "azurerm_shared_image_versions",
            "azure:compute/getSnapshot:getSnapshot": "azurerm_snapshot",
            "azure:compute/getSshPublicKey:getSshPublicKey": "azurerm_ssh_public_key",
            "azure:compute/getVirtualMachine:getVirtualMachine": "azurerm_virtual_machine",
            "azure:compute/getVirtualMachineScaleSet:getVirtualMachineScaleSet": "azurerm_virtual_machine_scale_set",
            "azure:connections/getManagedApi:getManagedApi": "azurerm_managed_api",
            "azure:consumption/getBudgetResourceGroup:getBudgetResourceGroup": "azurerm_consumption_budget_resource_group",
            "azure:consumption/getBudgetSubscription:getBudgetSubscription": "azurerm_consumption_budget_subscription",
            "azure:containerapp/getApp:getApp": "azurerm_container_app",
            "azure:containerapp/getEnvironment:getEnvironment": "azurerm_container_app_environment",
            "azure:containerapp/getEnvironmentCertificate:getEnvironmentCertificate": "azurerm_container_app_environment_certificate",
            "azure:containerservice/getClusterNodePool:getClusterNodePool": "azurerm_kubernetes_cluster_node_pool",
            "azure:containerservice/getGroup:getGroup": "azurerm_container_group",
            "azure:containerservice/getKubernetesCluster:getKubernetesCluster": "azurerm_kubernetes_cluster",
            "azure:containerservice/getKubernetesNodePoolSnapshot:getKubernetesNodePoolSnapshot": "azurerm_kubernetes_node_pool_snapshot",
            "azure:containerservice/getKubernetesServiceVersions:getKubernetesServiceVersions": "azurerm_kubernetes_service_versions",
            "azure:containerservice/getRegistry:getRegistry": "azurerm_container_registry",
            "azure:containerservice/getRegistryScopeMap:getRegistryScopeMap": "azurerm_container_registry_scope_map",
            "azure:containerservice/getRegistryToken:getRegistryToken": "azurerm_container_registry_token",
            "azure:core/getClientConfig:getClientConfig": "azurerm_client_config",
            "azure:core/getExtendedLocations:getExtendedLocations": "azurerm_extended_locations",
            "azure:core/getResourceGroup:getResourceGroup": "azurerm_resource_group",
            "azure:core/getResourceGroupTemplateDeployment:getResourceGroupTemplateDeployment": "azurerm_resource_group_template_deployment",
            "azure:core/getResources:getResources": "azurerm_resources",
            "azure:core/getSubscription:getSubscription": "azurerm_subscription",
            "azure:core/getSubscriptionTemplateDeployment:getSubscriptionTemplateDeployment": "azurerm_subscription_template_deployment",
            "azure:core/getSubscriptions:getSubscriptions": "azurerm_subscriptions",
            "azure:core/getTemplateSpecVersion:getTemplateSpecVersion": "azurerm_template_spec_version",
            "azure:core/getTenantTemplateDeployment:getTenantTemplateDeployment": "azurerm_tenant_template_deployment",
            "azure:core/getUserAssignedIdentity:getUserAssignedIdentity": "azurerm_user_assigned_identity_legacy",
            "azure:cosmosdb/getAccount:getAccount": "azurerm_cosmosdb_account",
            "azure:cosmosdb/getMongoDatabase:getMongoDatabase": "azurerm_cosmosdb_mongo_database",
            "azure:cosmosdb/getRestorableDatabaseAccounts:getRestorableDatabaseAccounts": "azurerm_cosmosdb_restorable_database_accounts",
            "azure:cosmosdb/getSqlDatabase:getSqlDatabase": "azurerm_cosmosdb_sql_database",
            "azure:cosmosdb/getSqlRoleDefinition:getSqlRoleDefinition": "azurerm_cosmosdb_sql_role_definition",
            "azure:dashboard/azurerm_portal_dashboard:azurerm_portal_dashboard": "azurerm_portal_dashboard_legacy",
            "azure:databasemigration/getProject:getProject": "azurerm_database_migration_project",
            "azure:databasemigration/getService:getService": "azurerm_database_migration_service",
            "azure:databoxedge/getDevice:getDevice": "azurerm_databox_edge_device",
            "azure:databricks/getWorkspace:getWorkspace": "azurerm_databricks_workspace",
            "azure:databricks/getWorkspacePrivateEndpointConnection:getWorkspacePrivateEndpointConnection": "azurerm_databricks_workspace_private_endpoint_connection",
            "azure:datafactory/getFactory:getFactory": "azurerm_data_factory",
            "azure:dataprotection/getBackupVault:getBackupVault": "azurerm_data_protection_backup_vault",
            "azure:datashare/getAccount:getAccount": "azurerm_data_share_account",
            "azure:datashare/getDatasetBlobStorage:getDatasetBlobStorage": "azurerm_data_share_dataset_blob_storage",
            "azure:datashare/getDatasetDataLakeGen2:getDatasetDataLakeGen2": "azurerm_data_share_dataset_data_lake_gen2",
            "azure:datashare/getDatasetKustoCluster:getDatasetKustoCluster": "azurerm_data_share_dataset_kusto_cluster",
            "azure:datashare/getDatasetKustoDatabase:getDatasetKustoDatabase": "azurerm_data_share_dataset_kusto_database",
            "azure:datashare/getShare:getShare": "azurerm_data_share",
            "azure:desktopvirtualization/getHostPool:getHostPool": "azurerm_virtual_desktop_host_pool",
            "azure:devtest/getLab:getLab": "azurerm_dev_test_lab",
            "azure:devtest/getVirtualNetwork:getVirtualNetwork": "azurerm_dev_test_virtual_network",
            "azure:digitaltwins/getInstance:getInstance": "azurerm_digital_twins_instance",
            "azure:dns/getAAAARecord:getAAAARecord": "azurerm_dns_aaaa_record",
            "azure:dns/getARecord:getARecord": "azurerm_dns_a_record",
            "azure:dns/getCAARecord:getCAARecord": "azurerm_dns_caa_record",
            "azure:dns/getCnameRecord:getCnameRecord": "azurerm_dns_cname_record",
            "azure:dns/getMxRecord:getMxRecord": "azurerm_dns_mx_record",
            "azure:dns/getNsRecord:getNsRecord": "azurerm_dns_ns_record",
            "azure:dns/getPtrRecord:getPtrRecord": "azurerm_dns_ptr_record",
            "azure:dns/getSoaRecord:getSoaRecord": "azurerm_dns_soa_record",
            "azure:dns/getSrvRecord:getSrvRecord": "azurerm_dns_srv_record",
            "azure:dns/getTxtRecord:getTxtRecord": "azurerm_dns_txt_record",
            "azure:dns/getZone:getZone": "azurerm_dns_zone",
            "azure:domainservices/getService:getService": "azurerm_active_directory_domain_service",
            "azure:elasticcloud/getElasticsearch:getElasticsearch": "azurerm_elastic_cloud_elasticsearch",
            "azure:eventgrid/getDomain:getDomain": "azurerm_eventgrid_domain",
            "azure:eventgrid/getDomainTopic:getDomainTopic": "azurerm_eventgrid_domain_topic",
            "azure:eventgrid/getSystemTopic:getSystemTopic": "azurerm_eventgrid_system_topic",
            "azure:eventgrid/getTopic:getTopic": "azurerm_eventgrid_topic",
            "azure:eventhub/getAuthorizationRule:getAuthorizationRule": "azurerm_eventhub_authorization_rule",
            "azure:eventhub/getCluster:getCluster": "azurerm_eventhub_cluster",
            "azure:eventhub/getConsumeGroup:getConsumeGroup": "azurerm_eventhub_consumer_group",
            "azure:eventhub/getEventHub:getEventHub": "azurerm_eventhub",
            "azure:eventhub/getEventhubNamespace:getEventhubNamespace": "azurerm_eventhub_namespace_legacy",
            "azure:eventhub/getNamespace:getNamespace": "azurerm_eventhub_namespace",
            "azure:eventhub/getNamespaceAuthorizationRule:getNamespaceAuthorizationRule": "azurerm_eventhub_namespace_authorization_rule",
            "azure:eventhub/getSas:getSas": "azurerm_eventhub_sas",
            "azure:eventhub/getServiceBusNamespace:getServiceBusNamespace": "azurerm_servicebus_namespace_legacy",
            "azure:hdinsight/getCluster:getCluster": "azurerm_hdinsight_cluster",
            "azure:healthcare/getDicomService:getDicomService": "azurerm_healthcare_dicom_service",
            "azure:healthcare/getFhirService:getFhirService": "azurerm_healthcare_fhir_service",
            "azure:healthcare/getMedtechService:getMedtechService": "azurerm_healthcare_medtech_service",
            "azure:healthcare/getService:getService": "azurerm_healthcare_service",
            "azure:healthcare/getWorkspace:getWorkspace": "azurerm_healthcare_workspace",
            "azure:hybrid/getComputeMachine:getComputeMachine": "azurerm_hybrid_compute_machine",
            "azure:iot/getDps:getDps": "azurerm_iothub_dps",
            "azure:iot/getDpsSharedAccessPolicy:getDpsSharedAccessPolicy": "azurerm_iothub_dps_shared_access_policy",
            "azure:iot/getIotHub:getIotHub": "azurerm_iothub",
            "azure:iot/getSharedAccessPolicy:getSharedAccessPolicy": "azurerm_iothub_shared_access_policy",
            "azure:keyvault/getAccessPolicy:getAccessPolicy": "azurerm_key_vault_access_policy",
            "azure:keyvault/getCertificate:getCertificate": "azurerm_key_vault_certificate",
            "azure:keyvault/getCertificateData:getCertificateData": "azurerm_key_vault_certificate_data",
            "azure:keyvault/getCertificateIssuer:getCertificateIssuer": "azurerm_key_vault_certificate_issuer",
            "azure:keyvault/getCertificates:getCertificates": "azurerm_key_vault_certificates",
            "azure:keyvault/getEncryptedValue:getEncryptedValue": "azurerm_key_vault_encrypted_value",
            "azure:keyvault/getKey:getKey": "azurerm_key_vault_key",
            "azure:keyvault/getKeyVault:getKeyVault": "azurerm_key_vault",
            "azure:keyvault/getManagedHardwareSecurityModule:getManagedHardwareSecurityModule": "azurerm_key_vault_managed_hardware_security_module",
            "azure:keyvault/getManagedHardwareSecurityModuleRoleDefinition:getManagedHardwareSecurityModuleRoleDefinition": "azurerm_key_vault_managed_hardware_security_module_role_definition",
            "azure:keyvault/getSecret:getSecret": "azurerm_key_vault_secret",
            "azure:keyvault/getSecrets:getSecrets": "azurerm_key_vault_secrets",
            "azure:kusto/getCluster:getCluster": "azurerm_kusto_cluster",
            "azure:kusto/getDatabase:getDatabase": "azurerm_kusto_database",
            "azure:lb/getBackendAddressPool:getBackendAddressPool": "azurerm_lb_backend_address_pool",
            "azure:lb/getLB:getLB": "azurerm_lb",
            "azure:lb/getLBOutboundRule:getLBOutboundRule": "azurerm_lb_outbound_rule",
            "azure:lb/getLBRule:getLBRule": "azurerm_lb_rule",
            "azure:logicapps/getIntegrationAccount:getIntegrationAccount": "azurerm_logic_app_integration_account",
            "azure:logicapps/getStandard:getStandard": "azurerm_logic_app_standard",
            "azure:logicapps/getWorkflow:getWorkflow": "azurerm_logic_app_workflow",
            "azure:machinelearning/getWorkspace:getWorkspace": "azurerm_machine_learning_workspace",
            "azure:maintenance/getConfiguration:getConfiguration": "azurerm_maintenance_configuration",
            "azure:maintenance/getPublicConfigurations:getPublicConfigurations": "azurerm_public_maintenance_configurations",
            "azure:managedapplication/getDefinition:getDefinition": "azurerm_managed_application_definition",
            "azure:management/getGroup:getGroup": "azurerm_management_group",
            "azure:management/getGroupTemplateDeployment:getGroupTemplateDeployment": "azurerm_management_group_template_deployment",
            "azure:managementgroups/getManagementGroup:getManagementGroup": "azurerm_management_group_legacy",
            "azure:maps/getAccount:getAccount": "azurerm_maps_account",
            "azure:mariadb/getMariaDbServer:getMariaDbServer": "azurerm_mariadb_server",
            "azure:marketplace/getAgreement:getAgreement": "azurerm_marketplace_agreement",
            "azure:mixedreality/getSpatialAnchorsAccount:getSpatialAnchorsAccount": "azurerm_spatial_anchors_account",
            "azure:mobile/getNetwork:getNetwork": "azurerm_mobile_network",
            "azure:mobile/getNetworkAttachedDataNetwork:getNetworkAttachedDataNetwork": "azurerm_mobile_network_attached_data_network",
            "azure:mobile/getNetworkDataNetwork:getNetworkDataNetwork": "azurerm_mobile_network_data_network",
            "azure:mobile/getNetworkPacketCoreControlPlane:getNetworkPacketCoreControlPlane": "azurerm_mobile_network_packet_core_control_plane",
            "azure:mobile/getNetworkPacketCoreDataPlane:getNetworkPacketCoreDataPlane": "azurerm_mobile_network_packet_core_data_plane",
            "azure:mobile/getNetworkService:getNetworkService": "azurerm_mobile_network_service",
            "azure:mobile/getNetworkSim:getNetworkSim": "azurerm_mobile_network_sim",
            "azure:mobile/getNetworkSimGroup:getNetworkSimGroup": "azurerm_mobile_network_sim_group",
            "azure:mobile/getNetworkSimPolicy:getNetworkSimPolicy": "azurerm_mobile_network_sim_policy",
            "azure:mobile/getNetworkSite:getNetworkSite": "azurerm_mobile_network_site",
            "azure:mobile/getNetworkSlice:getNetworkSlice": "azurerm_mobile_network_slice",
            "azure:monitoring/getActionGroup:getActionGroup": "azurerm_monitor_action_group",
            "azure:monitoring/getDataCollectionEndpoint:getDataCollectionEndpoint": "azurerm_monitor_data_collection_endpoint",
            "azure:monitoring/getDataCollectionRule:getDataCollectionRule": "azurerm_monitor_data_collection_rule",
            "azure:monitoring/getDiagnosticCategories:getDiagnosticCategories": "azurerm_monitor_diagnostic_categories",
            "azure:monitoring/getLogProfile:getLogProfile": "azurerm_monitor_log_profile",
            "azure:monitoring/getScheduledQueryRulesAlert:getScheduledQueryRulesAlert": "azurerm_monitor_scheduled_query_rules_alert",
            "azure:monitoring/getScheduledQueryRulesLog:getScheduledQueryRulesLog": "azurerm_monitor_scheduled_query_rules_log",
            "azure:monitoring/getWorkspace:getWorkspace": "azurerm_monitor_workspace",
            "azure:mssql/getDatabase:getDatabase": "azurerm_mssql_database",
            "azure:mssql/getElasticPool:getElasticPool": "azurerm_mssql_elasticpool",
            "azure:mssql/getManagedInstance:getManagedInstance": "azurerm_mssql_managed_instance",
            "azure:mssql/getServer:getServer": "azurerm_mssql_server",
            "azure:mysql/getFlexibleServer:getFlexibleServer": "azurerm_mysql_flexible_server",
            "azure:mysql/getServer:getServer": "azurerm_mysql_server",
            "azure:netapp/getAccount:getAccount": "azurerm_netapp_account",
            "azure:netapp/getPool:getPool": "azurerm_netapp_pool",
            "azure:netapp/getSnapshot:getSnapshot": "azurerm_netapp_snapshot",
            "azure:netapp/getSnapshotPolicy:getSnapshotPolicy": "azurerm_netapp_snapshot_policy",
            "azure:netapp/getVolume:getVolume": "azurerm_netapp_volume",
            "azure:netapp/getVolumeGroupSapHana:getVolumeGroupSapHana": "azurerm_netapp_volume_group_sap_hana",
            "azure:netapp/getVolumeQuotaRule:getVolumeQuotaRule": "azurerm_netapp_volume_quota_rule",
            "azure:network/getApplicationGateway:getApplicationGateway": "azurerm_application_gateway",
            "azure:network/getApplicationSecurityGroup:getApplicationSecurityGroup": "azurerm_application_security_group",
            "azure:network/getExpressRouteCircuit:getExpressRouteCircuit": "azurerm_express_route_circuit",
            "azure:network/getFirewall:getFirewall": "azurerm_firewall",
            "azure:network/getFirewallPolicy:getFirewallPolicy": "azurerm_firewall_policy",
            "azure:network/getGatewayConnection:getGatewayConnection": "azurerm_virtual_network_gateway_connection",
            "azure:network/getIpGroup:getIpGroup": "azurerm_ip_group",
            "azure:network/getLocalNetworkGateway:getLocalNetworkGateway": "azurerm_local_network_gateway",
            "azure:network/getNatGateway:getNatGateway": "azurerm_nat_gateway",
            "azure:network/getNetworkDdosProtectionPlan:getNetworkDdosProtectionPlan": "azurerm_network_ddos_protection_plan",
            "azure:network/getNetworkInterface:getNetworkInterface": "azurerm_network_interface",
            "azure:network/getNetworkManagerNetworkGroup:getNetworkManagerNetworkGroup": "azurerm_network_manager_network_group",
            "azure:network/getNetworkSecurityGroup:getNetworkSecurityGroup": "azurerm_network_security_group",
            "azure:network/getNetworkWatcher:getNetworkWatcher": "azurerm_network_watcher",
            "azure:network/getPublicIP:getPublicIP": "azurerm_public_ip",
            "azure:network/getPublicIPs:getPublicIPs": "azurerm_public_ips",
            "azure:network/getPublicIpPrefix:getPublicIpPrefix": "azurerm_public_ip_prefix",
            "azure:network/getRouteFilter:getRouteFilter": "azurerm_route_filter",
            "azure:network/getRouteTable:getRouteTable": "azurerm_route_table",
            "azure:network/getServiceTags:getServiceTags": "azurerm_network_service_tags",
            "azure:network/getSubnet:getSubnet": "azurerm_subnet",
            "azure:network/getTrafficManager:getTrafficManager": "azurerm_traffic_manager_geographical_location",
            "azure:network/getTrafficManagerProfile:getTrafficManagerProfile": "azurerm_traffic_manager_profile",
            "azure:network/getVirtualHub:getVirtualHub": "azurerm_virtual_hub",
            "azure:network/getVirtualHubConnection:getVirtualHubConnection": "azurerm_virtual_hub_connection",
            "azure:network/getVirtualHubRouteTable:getVirtualHubRouteTable": "azurerm_virtual_hub_route_table",
            "azure:network/getVirtualNetwork:getVirtualNetwork": "azurerm_virtual_network",
            "azure:network/getVirtualNetworkGateway:getVirtualNetworkGateway": "azurerm_virtual_network_gateway",
            "azure:network/getVirtualWan:getVirtualWan": "azurerm_virtual_wan",
            "azure:network/getVpnGateway:getVpnGateway": "azurerm_vpn_gateway",
            "azure:notificationhub/getHub:getHub": "azurerm_notification_hub",
            "azure:notificationhub/getNamespace:getNamespace": "azurerm_notification_hub_namespace",
            "azure:operationalinsights/getAnalyticsWorkspace:getAnalyticsWorkspace": "azurerm_log_analytics_workspace",
            "azure:paloalto/getLocalRulestack:getLocalRulestack": "azurerm_palo_alto_local_rulestack",
            "azure:policy/getPolicyAssignment:getPolicyAssignment": "azurerm_policy_assignment",
            "azure:policy/getPolicyDefintion:getPolicyDefintion": "azurerm_policy_definition",
            "azure:policy/getPolicyDefintionBuiltIn:getPolicyDefintionBuiltIn": "azurerm_policy_definition_built_in",
            "azure:policy/getPolicySetDefinition:getPolicySetDefinition": "azurerm_policy_set_definition",
            "azure:policy/getVirtualMachineConfigurationAssignment:getVirtualMachineConfigurationAssignment": "azurerm_policy_virtual_machine_configuration_assignment",
            "azure:portal/getDashboard:getDashboard": "azurerm_portal_dashboard",
            "azure:postgresql/getFlexibleServer:getFlexibleServer": "azurerm_postgresql_flexible_server",
            "azure:postgresql/getServer:getServer": "azurerm_postgresql_server",
            "azure:privatedns/getAAAARecord:getAAAARecord": "azurerm_private_dns_aaaa_record",
            "azure:privatedns/getARecord:getARecord": "azurerm_private_dns_a_record",
            "azure:privatedns/getCnameRecord:getCnameRecord": "azurerm_private_dns_cname_record",
            "azure:privatedns/getDnsZone:getDnsZone": "azurerm_private_dns_zone",
            "azure:privatedns/getMxRecord:getMxRecord": "azurerm_private_dns_mx_record",
            "azure:privatedns/getPtrRecord:getPtrRecord": "azurerm_private_dns_ptr_record",
            "azure:privatedns/getResolver:getResolver": "azurerm_private_dns_resolver",
            "azure:privatedns/getResolverDnsForwardingRuleset:getResolverDnsForwardingRuleset": "azurerm_private_dns_resolver_dns_forwarding_ruleset",
            "azure:privatedns/getResolverForwardingRule:getResolverForwardingRule": "azurerm_private_dns_resolver_forwarding_rule",
            "azure:privatedns/getResolverInboundEndpoint:getResolverInboundEndpoint": "azurerm_private_dns_resolver_inbound_endpoint",
            "azure:privatedns/getResolverOutboundEndpoint:getResolverOutboundEndpoint": "azurerm_private_dns_resolver_outbound_endpoint",
            "azure:privatedns/getResolverVirtualNetworkLink:getResolverVirtualNetworkLink": "azurerm_private_dns_resolver_virtual_network_link",
            "azure:privatedns/getSoaRecord:getSoaRecord": "azurerm_private_dns_soa_record",
            "azure:privatedns/getSrvRecord:getSrvRecord": "azurerm_private_dns_srv_record",
            "azure:privatedns/getTxtRecord:getTxtRecord": "azurerm_private_dns_txt_record",
            "azure:privatedns/getZoneVirtualNetworkLink:getZoneVirtualNetworkLink": "azurerm_private_dns_zone_virtual_network_link",
            "azure:privatelink/getEndpointConnection:getEndpointConnection": "azurerm_private_endpoint_connection",
            "azure:privatelink/getService:getService": "azurerm_private_link_service",
            "azure:privatelink/getServiceEndpointConnections:getServiceEndpointConnections": "azurerm_private_link_service_endpoint_connections",
            "azure:proximity/getPlacementGroup:getPlacementGroup": "azurerm_proximity_placement_group",
            "azure:recoveryservices/getVault:getVault": "azurerm_recovery_services_vault",
            "azure:redis/getCache:getCache": "azurerm_redis_cache",
            "azure:redis/getEnterpriseDatabase:getEnterpriseDatabase": "azurerm_redis_enterprise_database",
            "azure:role/getRoleDefinition:getRoleDefinition": "azurerm_role_definition_legacy",
            "azure:search/getService:getService": "azurerm_search_service",
            "azure:sentinel/getAlertRule:getAlertRule": "azurerm_sentinel_alert_rule",
            "azure:sentinel/getAlertRuleAnomaly:getAlertRuleAnomaly": "azurerm_sentinel_alert_rule_anomaly",
            "azure:sentinel/getAlertRuleTemplate:getAlertRuleTemplate": "azurerm_sentinel_alert_rule_template",
            "azure:servicebus/getNamespace:getNamespace": "azurerm_servicebus_namespace",
            "azure:servicebus/getNamespaceAuthorizationRule:getNamespaceAuthorizationRule": "azurerm_servicebus_namespace_authorization_rule",
            "azure:servicebus/getNamespaceDisasterRecoveryConfig:getNamespaceDisasterRecoveryConfig": "azurerm_servicebus_namespace_disaster_recovery_config",
            "azure:servicebus/getQueue:getQueue": "azurerm_servicebus_queue",
            "azure:servicebus/getQueueAuthorizationRule:getQueueAuthorizationRule": "azurerm_servicebus_queue_authorization_rule",
            "azure:servicebus/getSubscription:getSubscription": "azurerm_servicebus_subscription",
            "azure:servicebus/getTopic:getTopic": "azurerm_servicebus_topic",
            "azure:servicebus/getTopicAuthorizationRule:getTopicAuthorizationRule": "azurerm_servicebus_topic_authorization_rule",
            "azure:signalr/getService:getService": "azurerm_signalr_service",
            "azure:siterecovery/getFabric:getFabric": "azurerm_site_recovery_fabric",
            "azure:siterecovery/getProtectionContainer:getProtectionContainer": "azurerm_site_recovery_protection_container",
            "azure:siterecovery/getReplicationPolicy:getReplicationPolicy": "azurerm_site_recovery_replication_policy",
            "azure:siterecovery/getReplicationRecoveryPlan:getReplicationRecoveryPlan": "azurerm_site_recovery_replication_recovery_plan",
            "azure:sql/getDatabase:getDatabase": "azurerm_sql_database",
            "azure:sql/getServer:getServer": "azurerm_sql_server",
            "azure:sql/getSqlManagedInstance:getSqlManagedInstance": "azurerm_sql_managed_instance",
            "azure:stack/getHciCluster:getHciCluster": "azurerm_stack_hci_cluster",
            "azure:storage/getAccount:getAccount": "azurerm_storage_account",
            "azure:storage/getAccountBlobContainerSAS:getAccountBlobContainerSAS": "azurerm_storage_account_blob_container_sas",
            "azure:storage/getAccountSAS:getAccountSAS": "azurerm_storage_account_sas",
            "azure:storage/getBlob:getBlob": "azurerm_storage_blob",
            "azure:storage/getContainers:getContainers": "azurerm_storage_containers",
            "azure:storage/getEncryptionScope:getEncryptionScope": "azurerm_storage_encryption_scope",
            "azure:storage/getPolicy:getPolicy": "azurerm_storage_management_policy",
            "azure:storage/getShare:getShare": "azurerm_storage_share",
            "azure:storage/getStorageContainer:getStorageContainer": "azurerm_storage_container",
            "azure:storage/getSync:getSync": "azurerm_storage_sync",
            "azure:storage/getSyncGroup:getSyncGroup": "azurerm_storage_sync_group",
            "azure:storage/getTableEntity:getTableEntity": "azurerm_storage_table_entity",
            "azure:streamanalytics/getJob:getJob": "azurerm_stream_analytics_job",
            "azure:synapse/getWorkspace:getWorkspace": "azurerm_synapse_workspace",
            "azure:trafficmanager/getGeographicalLocation:getGeographicalLocation": "azurerm_traffic_manager_geographical_location_legacy",
            "azure:waf/getFirewallPolicy:getFirewallPolicy": "azurerm_web_application_firewall_policy",
            "azure:webpubsub/getPrivateLinkResource:getPrivateLinkResource": "azurerm_web_pubsub_private_link_resource",
            "azure:webpubsub/getService:getService": "azurerm_web_pubsub"
        },
        "renamedProperties": {
            "azure:aadb2c/directory:Directory": {
                "billingType": "billing_type",
                "countryCode": "country_code",
                "dataResidencyLocation": "data_residency_location",
                "displayName": "display_name",
                "domainName": "domain_name",
                "effectiveStartDate": "effective_start_date",
                "resourceGroupName": "resource_group_name",
                "skuName": "sku_name",
                "tenantId": "tenant_id"
            },
            "azure:aadb2c/getDirectory:getDirectory": {
                "billingType": "billing_type",
                "dataResidencyLocation": "data_residency_location",
                "domainName": "domain_name",
                "effectiveStartDate": "effective_start_date",
                "resourceGroupName": "resource_group_name",
                "skuName": "sku_name",
                "tenantId": "tenant_id"
            },
            "azure:advisor/getRecommendations:getRecommendations": {
                "filterByCategories": "filter_by_category",
                "filterByResourceGroups": "filter_by_resource_groups"
            },
            "azure:advisor/getRecommendationsRecommendation:getRecommendationsRecommendation": {
                "recommendationName": "recommendation_name",
                "recommendationTypeId": "recommendation_type_id",
                "resourceName": "resource_name",
                "resourceType": "resource_type",
                "suppressionNames": "suppression_names",
                "updatedTime": "updated_time"
            },
            "azure:analysisservices/ServerIpv4FirewallRule:ServerIpv4FirewallRule": {
                "rangeEnd": "range_end",
                "rangeStart": "range_start"
            },
            "azure:analysisservices/server:Server": {
                "adminUsers": "admin_users",
                "backupBlobContainerUri": "backup_blob_container_uri",
                "enablePowerBiService": "enable_power_bi_service",
                "ipv4FirewallRules": "ipv4_firewall_rule",
                "querypoolConnectionMode": "querypool_connection_mode",
                "resourceGroupName": "resource_group_name",
                "serverFullName": "server_full_name"
            },
            "azure:apimanagement/ApiDiagnosticBackendRequest:ApiDiagnosticBackendRequest": {
                "bodyBytes": "body_bytes",
                "dataMasking": "data_masking",
                "headersToLogs": "headers_to_log"
            },
            "azure:apimanagement/ApiDiagnosticBackendRequestDataMasking:ApiDiagnosticBackendRequestDataMasking": {
                "queryParams": "query_params"
            },
            "azure:apimanagement/ApiDiagnosticBackendResponse:ApiDiagnosticBackendResponse": {
                "bodyBytes": "body_bytes",
                "dataMasking": "data_masking",
                "headersToLogs": "headers_to_log"
            },
            "azure:apimanagement/ApiDiagnosticBackendResponseDataMasking:ApiDiagnosticBackendResponseDataMasking": {
                "queryParams": "query_params"
            },
            "azure:apimanagement/ApiDiagnosticFrontendRequest:ApiDiagnosticFrontendRequest": {
                "bodyBytes": "body_bytes",
                "dataMasking": "data_masking",
                "headersToLogs": "headers_to_log"
            },
            "azure:apimanagement/ApiDiagnosticFrontendRequestDataMasking:ApiDiagnosticFrontendRequestDataMasking": {
                "queryParams": "query_params"
            },
            "azure:apimanagement/ApiDiagnosticFrontendResponse:ApiDiagnosticFrontendResponse": {
                "bodyBytes": "body_bytes",
                "dataMasking": "data_masking",
                "headersToLogs": "headers_to_log"
            },
            "azure:apimanagement/ApiDiagnosticFrontendResponseDataMasking:ApiDiagnosticFrontendResponseDataMasking": {
                "queryParams": "query_params"
            },
            "azure:apimanagement/ApiImport:ApiImport": {
                "contentFormat": "content_format",
                "contentValue": "content_value",
                "wsdlSelector": "wsdl_selector"
            },
            "azure:apimanagement/ApiImportWsdlSelector:ApiImportWsdlSelector": {
                "endpointName": "endpoint_name",
                "serviceName": "service_name"
            },
            "azure:apimanagement/ApiOauth2Authorization:ApiOauth2Authorization": {
                "authorizationServerName": "authorization_server_name"
            },
            "azure:apimanagement/ApiOpenidAuthentication:ApiOpenidAuthentication": {
                "bearerTokenSendingMethods": "bearer_token_sending_methods",
                "openidProviderName": "openid_provider_name"
            },
            "azure:apimanagement/ApiOperationRequest:ApiOperationRequest": {
                "headers": "header",
                "queryParameters": "query_parameter",
                "representations": "representation"
            },
            "azure:apimanagement/ApiOperationRequestHeader:ApiOperationRequestHeader": {
                "defaultValue": "default_value",
                "examples": "example",
                "schemaId": "schema_id",
                "typeName": "type_name"
            },
            "azure:apimanagement/ApiOperationRequestHeaderExample:ApiOperationRequestHeaderExample": {
                "externalValue": "external_value"
            },
            "azure:apimanagement/ApiOperationRequestQueryParameter:ApiOperationRequestQueryParameter": {
                "defaultValue": "default_value",
                "examples": "example",
                "schemaId": "schema_id",
                "typeName": "type_name"
            },
            "azure:apimanagement/ApiOperationRequestQueryParameterExample:ApiOperationRequestQueryParameterExample": {
                "externalValue": "external_value"
            },
            "azure:apimanagement/ApiOperationRequestRepresentation:ApiOperationRequestRepresentation": {
                "contentType": "content_type",
                "examples": "example",
                "formParameters": "form_parameter",
                "schemaId": "schema_id",
                "typeName": "type_name"
            },
            "azure:apimanagement/ApiOperationRequestRepresentationExample:ApiOperationRequestRepresentationExample": {
                "externalValue": "external_value"
            },
            "azure:apimanagement/ApiOperationRequestRepresentationFormParameter:ApiOperationRequestRepresentationFormParameter": {
                "defaultValue": "default_value",
                "examples": "example",
                "schemaId": "schema_id",
                "typeName": "type_name"
            },
            "azure:apimanagement/ApiOperationRequestRepresentationFormParameterExample:ApiOperationRequestRepresentationFormParameterExample": {
                "externalValue": "external_value"
            },
            "azure:apimanagement/ApiOperationResponse:ApiOperationResponse": {
                "headers": "header",
                "representations": "representation",
                "statusCode": "status_code"
            },
            "azure:apimanagement/ApiOperationResponseHeader:ApiOperationResponseHeader": {
                "defaultValue": "default_value",
                "examples": "example",
                "schemaId": "schema_id",
                "typeName": "type_name"
            },
            "azure:apimanagement/ApiOperationResponseHeaderExample:ApiOperationResponseHeaderExample": {
                "externalValue": "external_value"
            },
            "azure:apimanagement/ApiOperationResponseRepresentation:ApiOperationResponseRepresentation": {
                "contentType": "content_type",
                "examples": "example",
                "formParameters": "form_parameter",
                "schemaId": "schema_id",
                "typeName": "type_name"
            },
            "azure:apimanagement/ApiOperationResponseRepresentationExample:ApiOperationResponseRepresentationExample": {
                "externalValue": "external_value"
            },
            "azure:apimanagement/ApiOperationResponseRepresentationFormParameter:ApiOperationResponseRepresentationFormParameter": {
                "defaultValue": "default_value",
                "examples": "example",
                "schemaId": "schema_id",
                "typeName": "type_name"
            },
            "azure:apimanagement/ApiOperationResponseRepresentationFormParameterExample:ApiOperationResponseRepresentationFormParameterExample": {
                "externalValue": "external_value"
            },
            "azure:apimanagement/ApiOperationTemplateParameter:ApiOperationTemplateParameter": {
                "defaultValue": "default_value",
                "examples": "example",
                "schemaId": "schema_id",
                "typeName": "type_name"
            },
            "azure:apimanagement/ApiOperationTemplateParameterExample:ApiOperationTemplateParameterExample": {
                "externalValue": "external_value"
            },
            "azure:apimanagement/BackendCredentials:BackendCredentials": {
                "certificates": "certificate"
            },
            "azure:apimanagement/BackendServiceFabricCluster:BackendServiceFabricCluster": {
                "clientCertificateId": "client_certificate_id",
                "clientCertificateThumbprint": "client_certificate_thumbprint",
                "managementEndpoints": "management_endpoints",
                "maxPartitionResolutionRetries": "max_partition_resolution_retries",
                "serverCertificateThumbprints": "server_certificate_thumbprints",
                "serverX509Names": "server_x509_name"
            },
            "azure:apimanagement/BackendServiceFabricClusterServerX509Name:BackendServiceFabricClusterServerX509Name": {
                "issuerCertificateThumbprint": "issuer_certificate_thumbprint"
            },
            "azure:apimanagement/BackendTls:BackendTls": {
                "validateCertificateChain": "validate_certificate_chain",
                "validateCertificateName": "validate_certificate_name"
            },
            "azure:apimanagement/CustomDomainDeveloperPortal:CustomDomainDeveloperPortal": {
                "certificatePassword": "certificate_password",
                "certificateSource": "certificate_source",
                "certificateStatus": "certificate_status",
                "hostName": "host_name",
                "keyVaultId": "key_vault_id",
                "negotiateClientCertificate": "negotiate_client_certificate",
                "sslKeyvaultIdentityClientId": "ssl_keyvault_identity_client_id"
            },
            "azure:apimanagement/CustomDomainGateway:CustomDomainGateway": {
                "certificatePassword": "certificate_password",
                "certificateSource": "certificate_source",
                "certificateStatus": "certificate_status",
                "defaultSslBinding": "default_ssl_binding",
                "hostName": "host_name",
                "keyVaultId": "key_vault_id",
                "negotiateClientCertificate": "negotiate_client_certificate",
                "sslKeyvaultIdentityClientId": "ssl_keyvault_identity_client_id"
            },
            "azure:apimanagement/CustomDomainManagement:CustomDomainManagement": {
                "certificatePassword": "certificate_password",
                "certificateSource": "certificate_source",
                "certificateStatus": "certificate_status",
                "hostName": "host_name",
                "keyVaultId": "key_vault_id",
                "negotiateClientCertificate": "negotiate_client_certificate",
                "sslKeyvaultIdentityClientId": "ssl_keyvault_identity_client_id"
            },
            "azure:apimanagement/CustomDomainPortal:CustomDomainPortal": {
                "certificatePassword": "certificate_password",
                "certificateSource": "certificate_source",
                "certificateStatus": "certificate_status",
                "hostName": "host_name",
                "keyVaultId": "key_vault_id",
                "negotiateClientCertificate": "negotiate_client_certificate",
                "sslKeyvaultIdentityClientId": "ssl_keyvault_identity_client_id"
            },
            "azure:apimanagement/CustomDomainScm:CustomDomainScm": {
                "certificatePassword": "certificate_password",
                "certificateSource": "certificate_source",
                "certificateStatus": "certificate_status",
                "hostName": "host_name",
                "keyVaultId": "key_vault_id",
                "negotiateClientCertificate": "negotiate_client_certificate",
                "sslKeyvaultIdentityClientId": "ssl_keyvault_identity_client_id"
            },
            "azure:apimanagement/DiagnosticBackendRequest:DiagnosticBackendRequest": {
                "bodyBytes": "body_bytes",
                "dataMasking": "data_masking",
                "headersToLogs": "headers_to_log"
            },
            "azure:apimanagement/DiagnosticBackendRequestDataMasking:DiagnosticBackendRequestDataMasking": {
                "queryParams": "query_params"
            },
            "azure:apimanagement/DiagnosticBackendResponse:DiagnosticBackendResponse": {
                "bodyBytes": "body_bytes",
                "dataMasking": "data_masking",
                "headersToLogs": "headers_to_log"
            },
            "azure:apimanagement/DiagnosticBackendResponseDataMasking:DiagnosticBackendResponseDataMasking": {
                "queryParams": "query_params"
            },
            "azure:apimanagement/DiagnosticFrontendRequest:DiagnosticFrontendRequest": {
                "bodyBytes": "body_bytes",
                "dataMasking": "data_masking",
                "headersToLogs": "headers_to_log"
            },
            "azure:apimanagement/DiagnosticFrontendRequestDataMasking:DiagnosticFrontendRequestDataMasking": {
                "queryParams": "query_params"
            },
            "azure:apimanagement/DiagnosticFrontendResponse:DiagnosticFrontendResponse": {
                "bodyBytes": "body_bytes",
                "dataMasking": "data_masking",
                "headersToLogs": "headers_to_log"
            },
            "azure:apimanagement/DiagnosticFrontendResponseDataMasking:DiagnosticFrontendResponseDataMasking": {
                "queryParams": "query_params"
            },
            "azure:apimanagement/LoggerApplicationInsights:LoggerApplicationInsights": {
                "instrumentationKey": "instrumentation_key"
            },
            "azure:apimanagement/LoggerEventhub:LoggerEventhub": {
                "connectionString": "connection_string",
                "endpointUri": "endpoint_uri",
                "userAssignedIdentityClientId": "user_assigned_identity_client_id"
            },
            "azure:apimanagement/NamedValueValueFromKeyVault:NamedValueValueFromKeyVault": {
                "identityClientId": "identity_client_id",
                "secretId": "secret_id"
            },
            "azure:apimanagement/ServiceAdditionalLocation:ServiceAdditionalLocation": {
                "gatewayDisabled": "gateway_disabled",
                "gatewayRegionalUrl": "gateway_regional_url",
                "privateIpAddresses": "private_ip_addresses",
                "publicIpAddressId": "public_ip_address_id",
                "publicIpAddresses": "public_ip_addresses",
                "virtualNetworkConfiguration": "virtual_network_configuration"
            },
            "azure:apimanagement/ServiceAdditionalLocationVirtualNetworkConfiguration:ServiceAdditionalLocationVirtualNetworkConfiguration": {
                "subnetId": "subnet_id"
            },
            "azure:apimanagement/ServiceCertificate:ServiceCertificate": {
                "certificatePassword": "certificate_password",
                "encodedCertificate": "encoded_certificate",
                "storeName": "store_name"
            },
            "azure:apimanagement/ServiceDelegation:ServiceDelegation": {
                "subscriptionsEnabled": "subscriptions_enabled",
                "userRegistrationEnabled": "user_registration_enabled",
                "validationKey": "validation_key"
            },
            "azure:apimanagement/ServiceHostnameConfiguration:ServiceHostnameConfiguration": {
                "developerPortals": "developer_portal",
                "managements": "management",
                "portals": "portal",
                "proxies": "proxy",
                "scms": "scm"
            },
            "azure:apimanagement/ServiceHostnameConfigurationDeveloperPortal:ServiceHostnameConfigurationDeveloperPortal": {
                "certificatePassword": "certificate_password",
                "certificateSource": "certificate_source",
                "certificateStatus": "certificate_status",
                "hostName": "host_name",
                "keyVaultId": "key_vault_id",
                "negotiateClientCertificate": "negotiate_client_certificate",
                "sslKeyvaultIdentityClientId": "ssl_keyvault_identity_client_id"
            },
            "azure:apimanagement/ServiceHostnameConfigurationManagement:ServiceHostnameConfigurationManagement": {
                "certificatePassword": "certificate_password",
                "certificateSource": "certificate_source",
                "certificateStatus": "certificate_status",
                "hostName": "host_name",
                "keyVaultId": "key_vault_id",
                "negotiateClientCertificate": "negotiate_client_certificate",
                "sslKeyvaultIdentityClientId": "ssl_keyvault_identity_client_id"
            },
            "azure:apimanagement/ServiceHostnameConfigurationPortal:ServiceHostnameConfigurationPortal": {
                "certificatePassword": "certificate_password",
                "certificateSource": "certificate_source",
                "certificateStatus": "certificate_status",
                "hostName": "host_name",
                "keyVaultId": "key_vault_id",
                "negotiateClientCertificate": "negotiate_client_certificate",
                "sslKeyvaultIdentityClientId": "ssl_keyvault_identity_client_id"
            },
            "azure:apimanagement/ServiceHostnameConfigurationProxy:ServiceHostnameConfigurationProxy": {
                "certificatePassword": "certificate_password",
                "certificateSource": "certificate_source",
                "certificateStatus": "certificate_status",
                "defaultSslBinding": "default_ssl_binding",
                "hostName": "host_name",
                "keyVaultId": "key_vault_id",
                "negotiateClientCertificate": "negotiate_client_certificate",
                "sslKeyvaultIdentityClientId": "ssl_keyvault_identity_client_id"
            },
            "azure:apimanagement/ServiceHostnameConfigurationScm:ServiceHostnameConfigurationScm": {
                "certificatePassword": "certificate_password",
                "certificateSource": "certificate_source",
                "certificateStatus": "certificate_status",
                "hostName": "host_name",
                "keyVaultId": "key_vault_id",
                "negotiateClientCertificate": "negotiate_client_certificate",
                "sslKeyvaultIdentityClientId": "ssl_keyvault_identity_client_id"
            },
            "azure:apimanagement/ServiceIdentity:ServiceIdentity": {
                "identityIds": "identity_ids",
                "principalId": "principal_id",
                "tenantId": "tenant_id"
            },
            "azure:apimanagement/ServicePolicy:ServicePolicy": {
                "xmlContent": "xml_content",
                "xmlLink": "xml_link"
            },
            "azure:apimanagement/ServiceProtocols:ServiceProtocols": {
                "enableHttp2": "enable_http2"
            },
            "azure:apimanagement/ServiceSecurity:ServiceSecurity": {
                "enableBackendSsl30": "enable_backend_ssl30",
                "enableBackendTls10": "enable_backend_tls10",
                "enableBackendTls11": "enable_backend_tls11",
                "enableFrontendSsl30": "enable_frontend_ssl30",
                "enableFrontendTls10": "enable_frontend_tls10",
                "enableFrontendTls11": "enable_frontend_tls11",
                "tlsEcdheEcdsaWithAes128CbcShaCiphersEnabled": "tls_ecdhe_ecdsa_with_aes128_cbc_sha_ciphers_enabled",
                "tlsEcdheEcdsaWithAes256CbcShaCiphersEnabled": "tls_ecdhe_ecdsa_with_aes256_cbc_sha_ciphers_enabled",
                "tlsEcdheRsaWithAes128CbcShaCiphersEnabled": "tls_ecdhe_rsa_with_aes128_cbc_sha_ciphers_enabled",
                "tlsEcdheRsaWithAes256CbcShaCiphersEnabled": "tls_ecdhe_rsa_with_aes256_cbc_sha_ciphers_enabled",
                "tlsRsaWithAes128CbcSha256CiphersEnabled": "tls_rsa_with_aes128_cbc_sha256_ciphers_enabled",
                "tlsRsaWithAes128CbcShaCiphersEnabled": "tls_rsa_with_aes128_cbc_sha_ciphers_enabled",
                "tlsRsaWithAes128GcmSha256CiphersEnabled": "tls_rsa_with_aes128_gcm_sha256_ciphers_enabled",
                "tlsRsaWithAes256CbcSha256CiphersEnabled": "tls_rsa_with_aes256_cbc_sha256_ciphers_enabled",
                "tlsRsaWithAes256CbcShaCiphersEnabled": "tls_rsa_with_aes256_cbc_sha_ciphers_enabled",
                "tlsRsaWithAes256GcmSha384CiphersEnabled": "tls_rsa_with_aes256_gcm_sha384_ciphers_enabled",
                "tripleDesCiphersEnabled": "triple_des_ciphers_enabled"
            },
            "azure:apimanagement/ServiceSignUp:ServiceSignUp": {
                "termsOfService": "terms_of_service"
            },
            "azure:apimanagement/ServiceSignUpTermsOfService:ServiceSignUpTermsOfService": {
                "consentRequired": "consent_required"
            },
            "azure:apimanagement/ServiceTenantAccess:ServiceTenantAccess": {
                "primaryKey": "primary_key",
                "secondaryKey": "secondary_key",
                "tenantId": "tenant_id"
            },
            "azure:apimanagement/ServiceVirtualNetworkConfiguration:ServiceVirtualNetworkConfiguration": {
                "subnetId": "subnet_id"
            },
            "azure:apimanagement/api:Api": {
                "apiManagementName": "api_management_name",
                "apiType": "api_type",
                "displayName": "display_name",
                "isCurrent": "is_current",
                "isOnline": "is_online",
                "oauth2Authorization": "oauth2_authorization",
                "openidAuthentication": "openid_authentication",
                "resourceGroupName": "resource_group_name",
                "revisionDescription": "revision_description",
                "serviceUrl": "service_url",
                "soapPassThrough": "soap_pass_through",
                "sourceApiId": "source_api_id",
                "subscriptionKeyParameterNames": "subscription_key_parameter_names",
                "subscriptionRequired": "subscription_required",
                "termsOfServiceUrl": "terms_of_service_url",
                "versionDescription": "version_description",
                "versionSetId": "version_set_id"
            },
            "azure:apimanagement/apiDiagnostic:ApiDiagnostic": {
                "alwaysLogErrors": "always_log_errors",
                "apiManagementLoggerId": "api_management_logger_id",
                "apiManagementName": "api_management_name",
                "apiName": "api_name",
                "backendRequest": "backend_request",
                "backendResponse": "backend_response",
                "frontendRequest": "frontend_request",
                "frontendResponse": "frontend_response",
                "httpCorrelationProtocol": "http_correlation_protocol",
                "logClientIp": "log_client_ip",
                "operationNameFormat": "operation_name_format",
                "resourceGroupName": "resource_group_name",
                "samplingPercentage": "sampling_percentage"
            },
            "azure:apimanagement/apiOperation:ApiOperation": {
                "apiManagementName": "api_management_name",
                "apiName": "api_name",
                "displayName": "display_name",
                "operationId": "operation_id",
                "resourceGroupName": "resource_group_name",
                "responses": "response",
                "templateParameters": "template_parameter",
                "urlTemplate": "url_template"
            },
            "azure:apimanagement/apiOperationPolicy:ApiOperationPolicy": {
                "apiManagementName": "api_management_name",
                "apiName": "api_name",
                "operationId": "operation_id",
                "resourceGroupName": "resource_group_name",
                "xmlContent": "xml_content",
                "xmlLink": "xml_link"
            },
            "azure:apimanagement/apiOperationTag:ApiOperationTag": {
                "apiOperationId": "api_operation_id",
                "displayName": "display_name"
            },
            "azure:apimanagement/apiPolicy:ApiPolicy": {
                "apiManagementName": "api_management_name",
                "apiName": "api_name",
                "resourceGroupName": "resource_group_name",
                "xmlContent": "xml_content",
                "xmlLink": "xml_link"
            },
            "azure:apimanagement/apiRelease:ApiRelease": {
                "apiId": "api_id"
            },
            "azure:apimanagement/apiSchema:ApiSchema": {
                "apiManagementName": "api_management_name",
                "apiName": "api_name",
                "contentType": "content_type",
                "resourceGroupName": "resource_group_name",
                "schemaId": "schema_id"
            },
            "azure:apimanagement/apiTag:ApiTag": {
                "apiId": "api_id"
            },
            "azure:apimanagement/apiTagDescription:ApiTagDescription": {
                "apiTagId": "api_tag_id",
                "externalDocumentationDescription": "external_documentation_description",
                "externalDocumentationUrl": "external_documentation_url"
            },
            "azure:apimanagement/apiVersionSet:ApiVersionSet": {
                "apiManagementName": "api_management_name",
                "displayName": "display_name",
                "resourceGroupName": "resource_group_name",
                "versionHeaderName": "version_header_name",
                "versionQueryName": "version_query_name",
                "versioningScheme": "versioning_scheme"
            },
            "azure:apimanagement/authorizationServer:AuthorizationServer": {
                "apiManagementName": "api_management_name",
                "authorizationEndpoint": "authorization_endpoint",
                "authorizationMethods": "authorization_methods",
                "bearerTokenSendingMethods": "bearer_token_sending_methods",
                "clientAuthenticationMethods": "client_authentication_method",
                "clientId": "client_id",
                "clientRegistrationEndpoint": "client_registration_endpoint",
                "clientSecret": "client_secret",
                "defaultScope": "default_scope",
                "displayName": "display_name",
                "grantTypes": "grant_types",
                "resourceGroupName": "resource_group_name",
                "resourceOwnerPassword": "resource_owner_password",
                "resourceOwnerUsername": "resource_owner_username",
                "supportState": "support_state",
                "tokenBodyParameters": "token_body_parameter",
                "tokenEndpoint": "token_endpoint"
            },
            "azure:apimanagement/backend:Backend": {
                "apiManagementName": "api_management_name",
                "resourceGroupName": "resource_group_name",
                "resourceId": "resource_id",
                "serviceFabricCluster": "service_fabric_cluster"
            },
            "azure:apimanagement/certificate:Certificate": {
                "apiManagementName": "api_management_name",
                "keyVaultIdentityClientId": "key_vault_identity_client_id",
                "keyVaultSecretId": "key_vault_secret_id",
                "resourceGroupName": "resource_group_name"
            },
            "azure:apimanagement/customDomain:CustomDomain": {
                "apiManagementId": "api_management_id",
                "developerPortals": "developer_portal",
                "gateways": "gateway",
                "managements": "management",
                "portals": "portal",
                "scms": "scm"
            },
            "azure:apimanagement/diagnostic:Diagnostic": {
                "alwaysLogErrors": "always_log_errors",
                "apiManagementLoggerId": "api_management_logger_id",
                "apiManagementName": "api_management_name",
                "backendRequest": "backend_request",
                "backendResponse": "backend_response",
                "frontendRequest": "frontend_request",
                "frontendResponse": "frontend_response",
                "httpCorrelationProtocol": "http_correlation_protocol",
                "logClientIp": "log_client_ip",
                "operationNameFormat": "operation_name_format",
                "resourceGroupName": "resource_group_name",
                "samplingPercentage": "sampling_percentage"
            },
            "azure:apimanagement/emailTemplate:EmailTemplate": {
                "apiManagementName": "api_management_name",
                "resourceGroupName": "resource_group_name",
                "templateName": "template_name"
            },
            "azure:apimanagement/gateway:Gateway": {
                "apiManagementId": "api_management_id",
                "locationData": "location_data"
            },
            "azure:apimanagement/gatewayApi:GatewayApi": {
                "apiId": "api_id",
                "gatewayId": "gateway_id"
            },
            "azure:apimanagement/gatewayCertificateAuthority:GatewayCertificateAuthority": {
                "apiManagementId": "api_management_id",
                "certificateName": "certificate_name",
                "gatewayName": "gateway_name",
                "isTrusted": "is_trusted"
            },
            "azure:apimanagement/gatewayHostNameConfiguration:GatewayHostNameConfiguration": {
                "apiManagementId": "api_management_id",
                "certificateId": "certificate_id",
                "gatewayName": "gateway_name",
                "hostName": "host_name",
                "http2Enabled": "http2_enabled",
                "requestClientCertificateEnabled": "request_client_certificate_enabled",
                "tls10Enabled": "tls10_enabled",
                "tls11Enabled": "tls11_enabled"
            },
            "azure:apimanagement/getApi:getApi": {
                "apiManagementName": "api_management_name",
                "displayName": "display_name",
                "isCurrent": "is_current",
                "isOnline": "is_online",
                "resourceGroupName": "resource_group_name",
                "serviceUrl": "service_url",
                "soapPassThrough": "soap_pass_through",
                "subscriptionKeyParameterNames": "subscription_key_parameter_names",
                "subscriptionRequired": "subscription_required",
                "versionSetId": "version_set_id"
            },
            "azure:apimanagement/getApiVersionSet:getApiVersionSet": {
                "apiManagementName": "api_management_name",
                "displayName": "display_name",
                "resourceGroupName": "resource_group_name",
                "versionHeaderName": "version_header_name",
                "versionQueryName": "version_query_name",
                "versioningScheme": "versioning_scheme"
            },
            "azure:apimanagement/getGateway:getGateway": {
                "apiManagementId": "api_management_id",
                "locationDatas": "location_data"
            },
            "azure:apimanagement/getGatewayHostNameConfiguration:getGatewayHostNameConfiguration": {
                "apiManagementId": "api_management_id",
                "certificateId": "certificate_id",
                "gatewayName": "gateway_name",
                "hostName": "host_name",
                "http2Enabled": "http2_enabled",
                "requestClientCertificateEnabled": "request_client_certificate_enabled",
                "tls10Enabled": "tls10_enabled",
                "tls11Enabled": "tls11_enabled"
            },
            "azure:apimanagement/getGroup:getGroup": {
                "apiManagementName": "api_management_name",
                "displayName": "display_name",
                "externalId": "external_id",
                "resourceGroupName": "resource_group_name"
            },
            "azure:apimanagement/getProduct:getProduct": {
                "apiManagementName": "api_management_name",
                "approvalRequired": "approval_required",
                "displayName": "display_name",
                "productId": "product_id",
                "resourceGroupName": "resource_group_name",
                "subscriptionRequired": "subscription_required",
                "subscriptionsLimit": "subscriptions_limit"
            },
            "azure:apimanagement/getService:getService": {
                "additionalLocations": "additional_location",
                "developerPortalUrl": "developer_portal_url",
                "gatewayRegionalUrl": "gateway_regional_url",
                "gatewayUrl": "gateway_url",
                "hostnameConfigurations": "hostname_configuration",
                "identities": "identity",
                "managementApiUrl": "management_api_url",
                "notificationSenderEmail": "notification_sender_email",
                "portalUrl": "portal_url",
                "privateIpAddresses": "private_ip_addresses",
                "publicIpAddressId": "public_ip_address_id",
                "publicIpAddresses": "public_ip_addresses",
                "publisherEmail": "publisher_email",
                "publisherName": "publisher_name",
                "resourceGroupName": "resource_group_name",
                "scmUrl": "scm_url",
                "skuName": "sku_name",
                "tenantAccesses": "tenant_access"
            },
            "azure:apimanagement/getServiceAdditionalLocation:getServiceAdditionalLocation": {
                "gatewayRegionalUrl": "gateway_regional_url",
                "privateIpAddresses": "private_ip_addresses",
                "publicIpAddressId": "public_ip_address_id",
                "publicIpAddresses": "public_ip_addresses"
            },
            "azure:apimanagement/getServiceHostnameConfiguration:getServiceHostnameConfiguration": {
                "developerPortals": "developer_portal",
                "managements": "management",
                "portals": "portal",
                "proxies": "proxy",
                "scms": "scm"
            },
            "azure:apimanagement/getServiceHostnameConfigurationDeveloperPortal:getServiceHostnameConfigurationDeveloperPortal": {
                "hostName": "host_name",
                "keyVaultId": "key_vault_id",
                "negotiateClientCertificate": "negotiate_client_certificate"
            },
            "azure:apimanagement/getServiceHostnameConfigurationManagement:getServiceHostnameConfigurationManagement": {
                "hostName": "host_name",
                "keyVaultId": "key_vault_id",
                "negotiateClientCertificate": "negotiate_client_certificate"
            },
            "azure:apimanagement/getServiceHostnameConfigurationPortal:getServiceHostnameConfigurationPortal": {
                "hostName": "host_name",
                "keyVaultId": "key_vault_id",
                "negotiateClientCertificate": "negotiate_client_certificate"
            },
            "azure:apimanagement/getServiceHostnameConfigurationProxy:getServiceHostnameConfigurationProxy": {
                "defaultSslBinding": "default_ssl_binding",
                "hostName": "host_name",
                "keyVaultId": "key_vault_id",
                "negotiateClientCertificate": "negotiate_client_certificate"
            },
            "azure:apimanagement/getServiceHostnameConfigurationScm:getServiceHostnameConfigurationScm": {
                "hostName": "host_name",
                "keyVaultId": "key_vault_id",
                "negotiateClientCertificate": "negotiate_client_certificate"
            },
            "azure:apimanagement/getServiceIdentity:getServiceIdentity": {
                "identityIds": "identity_ids",
                "principalId": "principal_id",
                "tenantId": "tenant_id"
            },
            "azure:apimanagement/getServiceTenantAccess:getServiceTenantAccess": {
                "primaryKey": "primary_key",
                "secondaryKey": "secondary_key",
                "tenantId": "tenant_id"
            },
            "azure:apimanagement/getUser:getUser": {
                "apiManagementName": "api_management_name",
                "firstName": "first_name",
                "lastName": "last_name",
                "resourceGroupName": "resource_group_name",
                "userId": "user_id"
            },
            "azure:apimanagement/globalSchema:GlobalSchema": {
                "apiManagementName": "api_management_name",
                "resourceGroupName": "resource_group_name",
                "schemaId": "schema_id"
            },
            "azure:apimanagement/group:Group": {
                "apiManagementName": "api_management_name",
                "displayName": "display_name",
                "externalId": "external_id",
                "resourceGroupName": "resource_group_name"
            },
            "azure:apimanagement/groupUser:GroupUser": {
                "apiManagementName": "api_management_name",
                "groupName": "group_name",
                "resourceGroupName": "resource_group_name",
                "userId": "user_id"
            },
            "azure:apimanagement/identityProviderAad:IdentityProviderAad": {
                "allowedTenants": "allowed_tenants",
                "apiManagementName": "api_management_name",
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "resourceGroupName": "resource_group_name",
                "signinTenant": "signin_tenant"
            },
            "azure:apimanagement/identityProviderAadb2c:IdentityProviderAadb2c": {
                "allowedTenant": "allowed_tenant",
                "apiManagementName": "api_management_name",
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "passwordResetPolicy": "password_reset_policy",
                "profileEditingPolicy": "profile_editing_policy",
                "resourceGroupName": "resource_group_name",
                "signinPolicy": "signin_policy",
                "signinTenant": "signin_tenant",
                "signupPolicy": "signup_policy"
            },
            "azure:apimanagement/identityProviderFacebook:IdentityProviderFacebook": {
                "apiManagementName": "api_management_name",
                "appId": "app_id",
                "appSecret": "app_secret",
                "resourceGroupName": "resource_group_name"
            },
            "azure:apimanagement/identityProviderGoogle:IdentityProviderGoogle": {
                "apiManagementName": "api_management_name",
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "resourceGroupName": "resource_group_name"
            },
            "azure:apimanagement/identityProviderMicrosoft:IdentityProviderMicrosoft": {
                "apiManagementName": "api_management_name",
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "resourceGroupName": "resource_group_name"
            },
            "azure:apimanagement/identityProviderTwitter:IdentityProviderTwitter": {
                "apiKey": "api_key",
                "apiManagementName": "api_management_name",
                "apiSecretKey": "api_secret_key",
                "resourceGroupName": "resource_group_name"
            },
            "azure:apimanagement/logger:Logger": {
                "apiManagementName": "api_management_name",
                "applicationInsights": "application_insights",
                "resourceGroupName": "resource_group_name",
                "resourceId": "resource_id"
            },
            "azure:apimanagement/namedValue:NamedValue": {
                "apiManagementName": "api_management_name",
                "displayName": "display_name",
                "resourceGroupName": "resource_group_name",
                "valueFromKeyVault": "value_from_key_vault"
            },
            "azure:apimanagement/notificationRecipientEmail:NotificationRecipientEmail": {
                "apiManagementId": "api_management_id",
                "notificationType": "notification_type"
            },
            "azure:apimanagement/notificationRecipientUser:NotificationRecipientUser": {
                "apiManagementId": "api_management_id",
                "notificationType": "notification_type",
                "userId": "user_id"
            },
            "azure:apimanagement/openIdConnectProvider:OpenIdConnectProvider": {
                "apiManagementName": "api_management_name",
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "displayName": "display_name",
                "metadataEndpoint": "metadata_endpoint",
                "resourceGroupName": "resource_group_name"
            },
            "azure:apimanagement/policy:Policy": {
                "apiManagementId": "api_management_id",
                "xmlContent": "xml_content",
                "xmlLink": "xml_link"
            },
            "azure:apimanagement/product:Product": {
                "apiManagementName": "api_management_name",
                "approvalRequired": "approval_required",
                "displayName": "display_name",
                "productId": "product_id",
                "resourceGroupName": "resource_group_name",
                "subscriptionRequired": "subscription_required",
                "subscriptionsLimit": "subscriptions_limit"
            },
            "azure:apimanagement/productApi:ProductApi": {
                "apiManagementName": "api_management_name",
                "apiName": "api_name",
                "productId": "product_id",
                "resourceGroupName": "resource_group_name"
            },
            "azure:apimanagement/productGroup:ProductGroup": {
                "apiManagementName": "api_management_name",
                "groupName": "group_name",
                "productId": "product_id",
                "resourceGroupName": "resource_group_name"
            },
            "azure:apimanagement/productPolicy:ProductPolicy": {
                "apiManagementName": "api_management_name",
                "productId": "product_id",
                "resourceGroupName": "resource_group_name",
                "xmlContent": "xml_content",
                "xmlLink": "xml_link"
            },
            "azure:apimanagement/productTag:ProductTag": {
                "apiManagementName": "api_management_name",
                "apiManagementProductId": "api_management_product_id",
                "resourceGroupName": "resource_group_name"
            },
            "azure:apimanagement/redisCache:RedisCache": {
                "apiManagementId": "api_management_id",
                "cacheLocation": "cache_location",
                "connectionString": "connection_string",
                "redisCacheId": "redis_cache_id"
            },
            "azure:apimanagement/service:Service": {
                "additionalLocations": "additional_location",
                "certificates": "certificate",
                "clientCertificateEnabled": "client_certificate_enabled",
                "developerPortalUrl": "developer_portal_url",
                "gatewayDisabled": "gateway_disabled",
                "gatewayRegionalUrl": "gateway_regional_url",
                "gatewayUrl": "gateway_url",
                "hostnameConfiguration": "hostname_configuration",
                "managementApiUrl": "management_api_url",
                "minApiVersion": "min_api_version",
                "notificationSenderEmail": "notification_sender_email",
                "portalUrl": "portal_url",
                "privateIpAddresses": "private_ip_addresses",
                "publicIpAddressId": "public_ip_address_id",
                "publicIpAddresses": "public_ip_addresses",
                "publicNetworkAccessEnabled": "public_network_access_enabled",
                "publisherEmail": "publisher_email",
                "publisherName": "publisher_name",
                "resourceGroupName": "resource_group_name",
                "scmUrl": "scm_url",
                "signIn": "sign_in",
                "signUp": "sign_up",
                "skuName": "sku_name",
                "tenantAccess": "tenant_access",
                "virtualNetworkConfiguration": "virtual_network_configuration",
                "virtualNetworkType": "virtual_network_type"
            },
            "azure:apimanagement/subscription:Subscription": {
                "allowTracing": "allow_tracing",
                "apiId": "api_id",
                "apiManagementName": "api_management_name",
                "displayName": "display_name",
                "primaryKey": "primary_key",
                "productId": "product_id",
                "resourceGroupName": "resource_group_name",
                "secondaryKey": "secondary_key",
                "subscriptionId": "subscription_id",
                "userId": "user_id"
            },
            "azure:apimanagement/tag:Tag": {
                "apiManagementId": "api_management_id",
                "displayName": "display_name"
            },
            "azure:apimanagement/user:User": {
                "apiManagementName": "api_management_name",
                "firstName": "first_name",
                "lastName": "last_name",
                "resourceGroupName": "resource_group_name",
                "userId": "user_id"
            },
            "azure:appconfiguration/ConfigurationFeatureTargetingFilter:ConfigurationFeatureTargetingFilter": {
                "defaultRolloutPercentage": "default_rollout_percentage"
            },
            "azure:appconfiguration/ConfigurationFeatureTargetingFilterGroup:ConfigurationFeatureTargetingFilterGroup": {
                "rolloutPercentage": "rollout_percentage"
            },
            "azure:appconfiguration/ConfigurationStoreEncryption:ConfigurationStoreEncryption": {
                "identityClientId": "identity_client_id",
                "keyVaultKeyIdentifier": "key_vault_key_identifier"
            },
            "azure:appconfiguration/ConfigurationStoreIdentity:ConfigurationStoreIdentity": {
                "identityIds": "identity_ids",
                "principalId": "principal_id",
                "tenantId": "tenant_id"
            },
            "azure:appconfiguration/ConfigurationStorePrimaryReadKey:ConfigurationStorePrimaryReadKey": {
                "connectionString": "connection_string"
            },
            "azure:appconfiguration/ConfigurationStorePrimaryWriteKey:ConfigurationStorePrimaryWriteKey": {
                "connectionString": "connection_string"
            },
            "azure:appconfiguration/ConfigurationStoreSecondaryReadKey:ConfigurationStoreSecondaryReadKey": {
                "connectionString": "connection_string"
            },
            "azure:appconfiguration/ConfigurationStoreSecondaryWriteKey:ConfigurationStoreSecondaryWriteKey": {
                "connectionString": "connection_string"
            },
            "azure:appconfiguration/configurationFeature:ConfigurationFeature": {
                "configurationStoreId": "configuration_store_id",
                "percentageFilterValue": "percentage_filter_value",
                "targetingFilters": "targeting_filter",
                "timewindowFilters": "timewindow_filter"
            },
            "azure:appconfiguration/configurationKey:ConfigurationKey": {
                "configurationStoreId": "configuration_store_id",
                "contentType": "content_type",
                "vaultKeyReference": "vault_key_reference"
            },
            "azure:appconfiguration/configurationStore:ConfigurationStore": {
                "localAuthEnabled": "local_auth_enabled",
                "primaryReadKeys": "primary_read_key",
                "primaryWriteKeys": "primary_write_key",
                "publicNetworkAccess": "public_network_access",
                "purgeProtectionEnabled": "purge_protection_enabled",
                "replicas": "replica",
                "resourceGroupName": "resource_group_name",
                "secondaryReadKeys": "secondary_read_key",
                "secondaryWriteKeys": "secondary_write_key",
                "softDeleteRetentionDays": "soft_delete_retention_days"
            },
            "azure:appconfiguration/getConfigurationKey:getConfigurationKey": {
                "configurationStoreId": "configuration_store_id",
                "contentType": "content_type",
                "vaultKeyReference": "vault_key_reference"
            },
            "azure:appconfiguration/getConfigurationKeys:getConfigurationKeys": {
                "configurationStoreId": "configuration_store_id"
            },
            "azure:appconfiguration/getConfigurationKeysItem:getConfigurationKeysItem": {
                "contentType": "content_type",
                "vaultKeyReference": "vault_key_reference"
            },
            "azure:appconfiguration/getConfigurationStore:getConfigurationStore": {
                "encryptions": "encryption",
                "identities": "identity",
                "localAuthEnabled": "local_auth_enabled",
                "primaryReadKeys": "primary_read_key",
                "primaryWriteKeys": "primary_write_key",
                "publicNetworkAccess": "public_network_access",
                "publicNetworkAccessEnabled": "public_network_access_enabled",
                "purgeProtectionEnabled": "purge_protection_enabled",
                "replicas": "replica",
                "resourceGroupName": "resource_group_name",
                "secondaryReadKeys": "secondary_read_key",
                "secondaryWriteKeys": "secondary_write_key",
                "softDeleteRetentionDays": "soft_delete_retention_days"
            },
            "azure:appconfiguration/getConfigurationStoreEncryption:getConfigurationStoreEncryption": {
                "identityClientId": "identity_client_id",
                "keyVaultKeyIdentifier": "key_vault_key_identifier"
            },
            "azure:appconfiguration/getConfigurationStoreIdentity:getConfigurationStoreIdentity": {
                "identityIds": "identity_ids",
                "principalId": "principal_id",
                "tenantId": "tenant_id"
            },
            "azure:appconfiguration/getConfigurationStorePrimaryReadKey:getConfigurationStorePrimaryReadKey": {
                "connectionString": "connection_string"
            },
            "azure:appconfiguration/getConfigurationStorePrimaryWriteKey:getConfigurationStorePrimaryWriteKey": {
                "connectionString": "connection_string"
            },
            "azure:appconfiguration/getConfigurationStoreSecondaryReadKey:getConfigurationStoreSecondaryReadKey": {
                "connectionString": "connection_string"
            },
            "azure:appconfiguration/getConfigurationStoreSecondaryWriteKey:getConfigurationStoreSecondaryWriteKey": {
                "connectionString": "connection_string"
            },
            "azure:appconfiguration/licationLoadBalancer:LicationLoadBalancer": {
                "primaryConfigurationEndpoint": "primary_configuration_endpoint",
                "resourceGroupName": "resource_group_name"
            },
            "azure:appconfiguration/licationLoadBalancerFrontend:LicationLoadBalancerFrontend": {
                "applicationLoadBalancerId": "application_load_balancer_id",
                "fullyQualifiedDomainName": "fully_qualified_domain_name"
            },
            "azure:appconfiguration/licationLoadBalancerSubnetAssociation:LicationLoadBalancerSubnetAssociation": {
                "applicationLoadBalancerId": "application_load_balancer_id",
                "subnetId": "subnet_id"
            },
            "azure:appinsights/StandardWebTestRequest:StandardWebTestRequest": {
                "followRedirectsEnabled": "follow_redirects_enabled",
                "headers": "header",
                "httpVerb": "http_verb",
                "parseDependentRequestsEnabled": "parse_dependent_requests_enabled"
            },
            "azure:appinsights/StandardWebTestValidationRules:StandardWebTestValidationRules": {
                "expectedStatusCode": "expected_status_code",
                "sslCertRemainingLifetime": "ssl_cert_remaining_lifetime",
                "sslCheckEnabled": "ssl_check_enabled"
            },
            "azure:appinsights/StandardWebTestValidationRulesContent:StandardWebTestValidationRulesContent": {
                "contentMatch": "content_match",
                "ignoreCase": "ignore_case",
                "passIfTextFound": "pass_if_text_found"
            },
            "azure:appinsights/WorkbookIdentity:WorkbookIdentity": {
                "identityIds": "identity_ids",
                "principalId": "principal_id",
                "tenantId": "tenant_id"
            },
            "azure:appinsights/WorkbookTemplateGallery:WorkbookTemplateGallery": {
                "resourceType": "resource_type"
            },
            "azure:appinsights/analyticsItem:AnalyticsItem": {
                "applicationInsightsId": "application_insights_id",
                "functionAlias": "function_alias",
                "timeCreated": "time_created",
                "timeModified": "time_modified"
            },
            "azure:appinsights/apiKey:ApiKey": {
                "apiKey": "api_key",
                "applicationInsightsId": "application_insights_id",
                "readPermissions": "read_permissions",
                "writePermissions": "write_permissions"
            },
            "azure:appinsights/getInsights:getInsights": {
                "appId": "app_id",
                "applicationType": "application_type",
                "connectionString": "connection_string",
                "instrumentationKey": "instrumentation_key",
                "resourceGroupName": "resource_group_name",
                "retentionInDays": "retention_in_days",
                "workspaceId": "workspace_id"
            },
            "azure:appinsights/insights:Insights": {
                "appId": "app_id",
                "applicationType": "application_type",
                "connectionString": "connection_string",
                "dailyDataCapInGb": "daily_data_cap_in_gb",
                "dailyDataCapNotificationsDisabled": "daily_data_cap_notifications_disabled",
                "disableIpMasking": "disable_ip_masking",
                "forceCustomerStorageForProfiler": "force_customer_storage_for_profiler",
                "instrumentationKey": "instrumentation_key",
                "internetIngestionEnabled": "internet_ingestion_enabled",
                "internetQueryEnabled": "internet_query_enabled",
                "localAuthenticationDisabled": "local_authentication_disabled",
                "resourceGroupName": "resource_group_name",
                "retentionInDays": "retention_in_days",
                "samplingPercentage": "sampling_percentage",
                "workspaceId": "workspace_id"
            },
            "azure:appinsights/smartDetectionRule:SmartDetectionRule": {
                "additionalEmailRecipients": "additional_email_recipients",
                "applicationInsightsId": "application_insights_id",
                "sendEmailsToSubscriptionOwners": "send_emails_to_subscription_owners"
            },
            "azure:appinsights/standardWebTest:StandardWebTest": {
                "applicationInsightsId": "application_insights_id",
                "geoLocations": "geo_locations",
                "resourceGroupName": "resource_group_name",
                "retryEnabled": "retry_enabled",
                "syntheticMonitorId": "synthetic_monitor_id",
                "validationRules": "validation_rules"
            },
            "azure:appinsights/webTest:WebTest": {
                "applicationInsightsId": "application_insights_id",
                "geoLocations": "geo_locations",
                "resourceGroupName": "resource_group_name",
                "retryEnabled": "retry_enabled",
                "syntheticMonitorId": "synthetic_monitor_id"
            },
            "azure:appinsights/workbook:Workbook": {
                "dataJson": "data_json",
                "displayName": "display_name",
                "resourceGroupName": "resource_group_name",
                "sourceId": "source_id",
                "storageContainerId": "storage_container_id"
            },
            "azure:appinsights/workbookTemplate:WorkbookTemplate": {
                "resourceGroupName": "resource_group_name",
                "templateData": "template_data"
            },
            "azure:appplatform/SpringCloudApiPortalSso:SpringCloudApiPortalSso": {
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "issuerUri": "issuer_uri",
                "scopes": "scope"
            },
            "azure:appplatform/SpringCloudAppCustomPersistentDisk:SpringCloudAppCustomPersistentDisk": {
                "mountOptions": "mount_options",
                "mountPath": "mount_path",
                "readOnlyEnabled": "read_only_enabled",
                "shareName": "share_name",
                "storageName": "storage_name"
            },
            "azure:appplatform/SpringCloudAppIdentity:SpringCloudAppIdentity": {
                "identityIds": "identity_ids",
                "principalId": "principal_id",
                "tenantId": "tenant_id"
            },
            "azure:appplatform/SpringCloudAppIngressSettings:SpringCloudAppIngressSettings": {
                "backendProtocol": "backend_protocol",
                "readTimeoutInSeconds": "read_timeout_in_seconds",
                "sendTimeoutInSeconds": "send_timeout_in_seconds",
                "sessionAffinity": "session_affinity",
                "sessionCookieMaxAge": "session_cookie_max_age"
            },
            "azure:appplatform/SpringCloudAppPersistentDisk:SpringCloudAppPersistentDisk": {
                "mountPath": "mount_path",
                "sizeInGb": "size_in_gb"
            },
            "azure:appplatform/SpringCloudBuilderBuildPackGroup:SpringCloudBuilderBuildPackGroup": {
                "buildPackIds": "build_pack_ids"
            },
            "azure:appplatform/SpringCloudConfigurationServiceRepository:SpringCloudConfigurationServiceRepository": {
                "caCertificateId": "ca_certificate_id",
                "hostKey": "host_key",
                "hostKeyAlgorithm": "host_key_algorithm",
                "privateKey": "private_key",
                "searchPaths": "search_paths",
                "strictHostKeyChecking": "strict_host_key_checking"
            },
            "azure:appplatform/SpringCloudConnectionAuthentication:SpringCloudConnectionAuthentication": {
                "clientId": "client_id",
                "principalId": "principal_id",
                "subscriptionId": "subscription_id"
            },
            "azure:appplatform/SpringCloudConnectionSecretStore:SpringCloudConnectionSecretStore": {
                "keyVaultId": "key_vault_id"
            },
            "azure:appplatform/SpringCloudCustomizedAcceleratorGitRepository:SpringCloudCustomizedAcceleratorGitRepository": {
                "basicAuth": "basic_auth",
                "caCertificateId": "ca_certificate_id",
                "gitTag": "git_tag",
                "intervalInSeconds": "interval_in_seconds",
                "sshAuth": "ssh_auth"
            },
            "azure:appplatform/SpringCloudCustomizedAcceleratorGitRepositorySshAuth:SpringCloudCustomizedAcceleratorGitRepositorySshAuth": {
                "hostKey": "host_key",
                "hostKeyAlgorithm": "host_key_algorithm",
                "privateKey": "private_key"
            },
            "azure:appplatform/SpringCloudDevToolPortalSso:SpringCloudDevToolPortalSso": {
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "metadataUrl": "metadata_url",
                "scopes": "scope"
            },
            "azure:appplatform/SpringCloudGatewayApiMetadata:SpringCloudGatewayApiMetadata": {
                "documentationUrl": "documentation_url",
                "serverUrl": "server_url"
            },
            "azure:appplatform/SpringCloudGatewayClientAuthorization:SpringCloudGatewayClientAuthorization": {
                "certificateIds": "certificate_ids",
                "verificationEnabled": "verification_enabled"
            },
            "azure:appplatform/SpringCloudGatewayCors:SpringCloudGatewayCors": {
                "allowedHeaders": "allowed_headers",
                "allowedMethods": "allowed_methods",
                "allowedOriginPatterns": "allowed_origin_patterns",
                "allowedOrigins": "allowed_origins",
                "credentialsAllowed": "credentials_allowed",
                "exposedHeaders": "exposed_headers",
                "maxAgeSeconds": "max_age_seconds"
            },
            "azure:appplatform/SpringCloudGatewayRouteConfigRoute:SpringCloudGatewayRouteConfigRoute": {
                "classificationTags": "classification_tags",
                "ssoValidationEnabled": "sso_validation_enabled",
                "tokenRelay": "token_relay"
            },
            "azure:appplatform/SpringCloudGatewaySso:SpringCloudGatewaySso": {
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "issuerUri": "issuer_uri",
                "scopes": "scope"
            },
            "azure:appplatform/SpringCloudServiceConfigServerGitSetting:SpringCloudServiceConfigServerGitSetting": {
                "httpBasicAuth": "http_basic_auth",
                "repositories": "repository",
                "searchPaths": "search_paths",
                "sshAuth": "ssh_auth"
            },
            "azure:appplatform/SpringCloudServiceConfigServerGitSettingRepository:SpringCloudServiceConfigServerGitSettingRepository": {
                "httpBasicAuth": "http_basic_auth",
                "patterns": "pattern",
                "searchPaths": "search_paths",
                "sshAuth": "ssh_auth"
            },
            "azure:appplatform/SpringCloudServiceConfigServerGitSettingRepositorySshAuth:SpringCloudServiceConfigServerGitSettingRepositorySshAuth": {
                "hostKey": "host_key",
                "hostKeyAlgorithm": "host_key_algorithm",
                "privateKey": "private_key",
                "strictHostKeyCheckingEnabled": "strict_host_key_checking_enabled"
            },
            "azure:appplatform/SpringCloudServiceConfigServerGitSettingSshAuth:SpringCloudServiceConfigServerGitSettingSshAuth": {
                "hostKey": "host_key",
                "hostKeyAlgorithm": "host_key_algorithm",
                "privateKey": "private_key",
                "strictHostKeyCheckingEnabled": "strict_host_key_checking_enabled"
            },
            "azure:appplatform/SpringCloudServiceDefaultBuildService:SpringCloudServiceDefaultBuildService": {
                "containerRegistryName": "container_registry_name"
            },
            "azure:appplatform/SpringCloudServiceNetwork:SpringCloudServiceNetwork": {
                "appNetworkResourceGroup": "app_network_resource_group",
                "appSubnetId": "app_subnet_id",
                "cidrRanges": "cidr_ranges",
                "outboundType": "outbound_type",
                "readTimeoutSeconds": "read_timeout_seconds",
                "serviceRuntimeNetworkResourceGroup": "service_runtime_network_resource_group",
                "serviceRuntimeSubnetId": "service_runtime_subnet_id"
            },
            "azure:appplatform/SpringCloudServiceRequiredNetworkTrafficRule:SpringCloudServiceRequiredNetworkTrafficRule": {
                "ipAddresses": "ip_addresses"
            },
            "azure:appplatform/SpringCloudServiceTrace:SpringCloudServiceTrace": {
                "connectionString": "connection_string",
                "sampleRate": "sample_rate"
            },
            "azure:appplatform/getSpringCloudApp:getSpringCloudApp": {
                "httpsOnly": "https_only",
                "identities": "identity",
                "isPublic": "is_public",
                "persistentDisks": "persistent_disk",
                "resourceGroupName": "resource_group_name",
                "serviceName": "service_name",
                "tlsEnabled": "tls_enabled"
            },
            "azure:appplatform/getSpringCloudAppIdentity:getSpringCloudAppIdentity": {
                "identityIds": "identity_ids",
                "principalId": "principal_id",
                "tenantId": "tenant_id"
            },
            "azure:appplatform/getSpringCloudAppPersistentDisk:getSpringCloudAppPersistentDisk": {
                "mountPath": "mount_path",
                "sizeInGb": "size_in_gb"
            },
            "azure:appplatform/getSpringCloudService:getSpringCloudService": {
                "configServerGitSettings": "config_server_git_setting",
                "outboundPublicIpAddresses": "outbound_public_ip_addresses",
                "requiredNetworkTrafficRules": "required_network_traffic_rules",
                "resourceGroupName": "resource_group_name"
            },
            "azure:appplatform/getSpringCloudServiceConfigServerGitSetting:getSpringCloudServiceConfigServerGitSetting": {
                "httpBasicAuths": "http_basic_auth",
                "repositories": "repository",
                "searchPaths": "search_paths",
                "sshAuths": "ssh_auth"
            },
            "azure:appplatform/getSpringCloudServiceConfigServerGitSettingRepository:getSpringCloudServiceConfigServerGitSettingRepository": {
                "httpBasicAuths": "http_basic_auth",
                "patterns": "pattern",
                "searchPaths": "search_paths",
                "sshAuths": "ssh_auth"
            },
            "azure:appplatform/getSpringCloudServiceConfigServerGitSettingRepositorySshAuth:getSpringCloudServiceConfigServerGitSettingRepositorySshAuth": {
                "hostKey": "host_key",
                "hostKeyAlgorithm": "host_key_algorithm",
                "privateKey": "private_key",
                "strictHostKeyCheckingEnabled": "strict_host_key_checking_enabled"
            },
            "azure:appplatform/getSpringCloudServiceConfigServerGitSettingSshAuth:getSpringCloudServiceConfigServerGitSettingSshAuth": {
                "hostKey": "host_key",
                "hostKeyAlgorithm": "host_key_algorithm",
                "privateKey": "private_key",
                "strictHostKeyCheckingEnabled": "strict_host_key_checking_enabled"
            },
            "azure:appplatform/getSpringCloudServiceRequiredNetworkTrafficRule:getSpringCloudServiceRequiredNetworkTrafficRule": {
                "ipAddresses": "ip_addresses"
            },
            "azure:appplatform/springCloudAccelerator:SpringCloudAccelerator": {
                "springCloudServiceId": "spring_cloud_service_id"
            },
            "azure:appplatform/springCloudActiveDeployment:SpringCloudActiveDeployment": {
                "deploymentName": "deployment_name",
                "springCloudAppId": "spring_cloud_app_id"
            },
            "azure:appplatform/springCloudApiPortal:SpringCloudApiPortal": {
                "gatewayIds": "gateway_ids",
                "httpsOnlyEnabled": "https_only_enabled",
                "instanceCount": "instance_count",
                "publicNetworkAccessEnabled": "public_network_access_enabled",
                "springCloudServiceId": "spring_cloud_service_id"
            },
            "azure:appplatform/springCloudApiPortalCustomDomain:SpringCloudApiPortalCustomDomain": {
                "springCloudApiPortalId": "spring_cloud_api_portal_id"
            },
            "azure:appplatform/springCloudApp:SpringCloudApp": {
                "addonJson": "addon_json",
                "customPersistentDisks": "custom_persistent_disk",
                "httpsOnly": "https_only",
                "ingressSettings": "ingress_settings",
                "isPublic": "is_public",
                "persistentDisk": "persistent_disk",
                "publicEndpointEnabled": "public_endpoint_enabled",
                "resourceGroupName": "resource_group_name",
                "serviceName": "service_name",
                "tlsEnabled": "tls_enabled"
            },
            "azure:appplatform/springCloudAppCosmosDBAssociation:SpringCloudAppCosmosDBAssociation": {
                "apiType": "api_type",
                "cosmosdbAccessKey": "cosmosdb_access_key",
                "cosmosdbAccountId": "cosmosdb_account_id",
                "cosmosdbCassandraKeyspaceName": "cosmosdb_cassandra_keyspace_name",
                "cosmosdbGremlinDatabaseName": "cosmosdb_gremlin_database_name",
                "cosmosdbGremlinGraphName": "cosmosdb_gremlin_graph_name",
                "cosmosdbMongoDatabaseName": "cosmosdb_mongo_database_name",
                "cosmosdbSqlDatabaseName": "cosmosdb_sql_database_name",
                "springCloudAppId": "spring_cloud_app_id"
            },
            "azure:appplatform/springCloudAppMysqlAssociation:SpringCloudAppMysqlAssociation": {
                "databaseName": "database_name",
                "mysqlServerId": "mysql_server_id",
                "springCloudAppId": "spring_cloud_app_id"
            },
            "azure:appplatform/springCloudAppRedisAssociation:SpringCloudAppRedisAssociation": {
                "redisAccessKey": "redis_access_key",
                "redisCacheId": "redis_cache_id",
                "springCloudAppId": "spring_cloud_app_id",
                "sslEnabled": "ssl_enabled"
            },
            "azure:appplatform/springCloudApplicationInsightsApplicationPerformanceMonitoring:SpringCloudApplicationInsightsApplicationPerformanceMonitoring": {
                "connectionString": "connection_string",
                "globallyEnabled": "globally_enabled",
                "roleInstance": "role_instance",
                "roleName": "role_name",
                "samplingPercentage": "sampling_percentage",
                "samplingRequestsPerSecond": "sampling_requests_per_second",
                "springCloudServiceId": "spring_cloud_service_id"
            },
            "azure:appplatform/springCloudApplicationLiveView:SpringCloudApplicationLiveView": {
                "springCloudServiceId": "spring_cloud_service_id"
            },
            "azure:appplatform/springCloudBuildDeployment:SpringCloudBuildDeployment": {
                "addonJson": "addon_json",
                "applicationPerformanceMonitoringIds": "application_performance_monitoring_ids",
                "buildResultId": "build_result_id",
                "environmentVariables": "environment_variables",
                "instanceCount": "instance_count",
                "springCloudAppId": "spring_cloud_app_id"
            },
            "azure:appplatform/springCloudBuildPackBinding:SpringCloudBuildPackBinding": {
                "bindingType": "binding_type",
                "springCloudBuilderId": "spring_cloud_builder_id"
            },
            "azure:appplatform/springCloudBuilder:SpringCloudBuilder": {
                "buildPackGroups": "build_pack_group",
                "springCloudServiceId": "spring_cloud_service_id"
            },
            "azure:appplatform/springCloudCertificate:SpringCloudCertificate": {
                "certificateContent": "certificate_content",
                "excludePrivateKey": "exclude_private_key",
                "keyVaultCertificateId": "key_vault_certificate_id",
                "resourceGroupName": "resource_group_name",
                "serviceName": "service_name"
            },
            "azure:appplatform/springCloudConfigurationService:SpringCloudConfigurationService": {
                "repositories": "repository",
                "springCloudServiceId": "spring_cloud_service_id"
            },
            "azure:appplatform/springCloudConnection:SpringCloudConnection": {
                "clientType": "client_type",
                "secretStore": "secret_store",
                "springCloudId": "spring_cloud_id",
                "targetResourceId": "target_resource_id",
                "vnetSolution": "vnet_solution"
            },
            "azure:appplatform/springCloudContainerDeployment:SpringCloudContainerDeployment": {
                "addonJson": "addon_json",
                "applicationPerformanceMonitoringIds": "application_performance_monitoring_ids",
                "environmentVariables": "environment_variables",
                "instanceCount": "instance_count",
                "languageFramework": "language_framework",
                "springCloudAppId": "spring_cloud_app_id"
            },
            "azure:appplatform/springCloudCustomDomain:SpringCloudCustomDomain": {
                "certificateName": "certificate_name",
                "springCloudAppId": "spring_cloud_app_id"
            },
            "azure:appplatform/springCloudCustomizedAccelerator:SpringCloudCustomizedAccelerator": {
                "acceleratorTags": "accelerator_tags",
                "acceleratorType": "accelerator_type",
                "displayName": "display_name",
                "gitRepository": "git_repository",
                "iconUrl": "icon_url",
                "springCloudAcceleratorId": "spring_cloud_accelerator_id"
            },
            "azure:appplatform/springCloudDevToolPortal:SpringCloudDevToolPortal": {
                "applicationAcceleratorEnabled": "application_accelerator_enabled",
                "applicationLiveViewEnabled": "application_live_view_enabled",
                "publicNetworkAccessEnabled": "public_network_access_enabled",
                "springCloudServiceId": "spring_cloud_service_id"
            },
            "azure:appplatform/springCloudGateway:SpringCloudGateway": {
                "apiMetadata": "api_metadata",
                "applicationPerformanceMonitoringTypes": "application_performance_monitoring_types",
                "clientAuthorization": "client_authorization",
                "environmentVariables": "environment_variables",
                "httpsOnly": "https_only",
                "instanceCount": "instance_count",
                "publicNetworkAccessEnabled": "public_network_access_enabled",
                "sensitiveEnvironmentVariables": "sensitive_environment_variables",
                "springCloudServiceId": "spring_cloud_service_id"
            },
            "azure:appplatform/springCloudGatewayCustomDomain:SpringCloudGatewayCustomDomain": {
                "springCloudGatewayId": "spring_cloud_gateway_id"
            },
            "azure:appplatform/springCloudGatewayRouteConfig:SpringCloudGatewayRouteConfig": {
                "openApi": "open_api",
                "routes": "route",
                "springCloudAppId": "spring_cloud_app_id",
                "springCloudGatewayId": "spring_cloud_gateway_id",
                "ssoValidationEnabled": "sso_validation_enabled"
            },
            "azure:appplatform/springCloudJavaDeployment:SpringCloudJavaDeployment": {
                "environmentVariables": "environment_variables",
                "instanceCount": "instance_count",
                "jvmOptions": "jvm_options",
                "runtimeVersion": "runtime_version",
                "springCloudAppId": "spring_cloud_app_id"
            },
            "azure:appplatform/springCloudService:SpringCloudService": {
                "buildAgentPoolSize": "build_agent_pool_size",
                "configServerGitSetting": "config_server_git_setting",
                "containerRegistries": "container_registry",
                "defaultBuildService": "default_build_service",
                "logStreamPublicEndpointEnabled": "log_stream_public_endpoint_enabled",
                "outboundPublicIpAddresses": "outbound_public_ip_addresses",
                "requiredNetworkTrafficRules": "required_network_traffic_rules",
                "resourceGroupName": "resource_group_name",
                "serviceRegistryEnabled": "service_registry_enabled",
                "serviceRegistryId": "service_registry_id",
                "skuName": "sku_name",
                "zoneRedundant": "zone_redundant"
            },
            "azure:appplatform/springCloudStorage:SpringCloudStorage": {
                "springCloudServiceId": "spring_cloud_service_id",
                "storageAccountKey": "storage_account_key",
                "storageAccountName": "storage_account_name"
            },
            "azure:appservice/AppConnectionAuthentication:AppConnectionAuthentication": {
                "clientId": "client_id",
                "principalId": "principal_id",
                "subscriptionId": "subscription_id"
            },
            "azure:appservice/AppConnectionSecretStore:AppConnectionSecretStore": {
                "keyVaultId": "key_vault_id"
            },
            "azure:appservice/AppServiceAuthSettings:AppServiceAuthSettings": {
                "activeDirectory": "active_directory",
                "additionalLoginParams": "additional_login_params",
                "allowedExternalRedirectUrls": "allowed_external_redirect_urls",
                "defaultProvider": "default_provider",
                "runtimeVersion": "runtime_version",
                "tokenRefreshExtensionHours": "token_refresh_extension_hours",
                "tokenStoreEnabled": "token_store_enabled",
                "unauthenticatedClientAction": "unauthenticated_client_action"
            },
            "azure:appservice/AppServiceAuthSettingsActiveDirectory:AppServiceAuthSettingsActiveDirectory": {
                "allowedAudiences": "allowed_audiences",
                "clientId": "client_id",
                "clientSecret": "client_secret"
            },
            "azure:appservice/AppServiceAuthSettingsFacebook:AppServiceAuthSettingsFacebook": {
                "appId": "app_id",
                "appSecret": "app_secret",
                "oauthScopes": "oauth_scopes"
            },
            "azure:appservice/AppServiceAuthSettingsGoogle:AppServiceAuthSettingsGoogle": {
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "oauthScopes": "oauth_scopes"
            },
            "azure:appservice/AppServiceAuthSettingsMicrosoft:AppServiceAuthSettingsMicrosoft": {
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "oauthScopes": "oauth_scopes"
            },
            "azure:appservice/AppServiceAuthSettingsTwitter:AppServiceAuthSettingsTwitter": {
                "consumerKey": "consumer_key",
                "consumerSecret": "consumer_secret"
            },
            "azure:appservice/AppServiceBackup:AppServiceBackup": {
                "storageAccountUrl": "storage_account_url"
            },
            "azure:appservice/AppServiceBackupSchedule:AppServiceBackupSchedule": {
                "frequencyInterval": "frequency_interval",
                "frequencyUnit": "frequency_unit",
                "keepAtLeastOneBackup": "keep_at_least_one_backup",
                "retentionPeriodInDays": "retention_period_in_days",
                "startTime": "start_time"
            },
            "azure:appservice/AppServiceIdentity:AppServiceIdentity": {
                "identityIds": "identity_ids",
                "principalId": "principal_id",
                "tenantId": "tenant_id"
            },
            "azure:appservice/AppServiceLogs:AppServiceLogs": {
                "applicationLogs": "application_logs",
                "detailedErrorMessagesEnabled": "detailed_error_messages_enabled",
                "failedRequestTracingEnabled": "failed_request_tracing_enabled",
                "httpLogs": "http_logs"
            },
            "azure:appservice/AppServiceLogsApplicationLogs:AppServiceLogsApplicationLogs": {
                "azureBlobStorage": "azure_blob_storage",
                "fileSystemLevel": "file_system_level"
            },
            "azure:appservice/AppServiceLogsApplicationLogsAzureBlobStorage:AppServiceLogsApplicationLogsAzureBlobStorage": {
                "retentionInDays": "retention_in_days",
                "sasUrl": "sas_url"
            },
            "azure:appservice/AppServiceLogsHttpLogs:AppServiceLogsHttpLogs": {
                "azureBlobStorage": "azure_blob_storage",
                "fileSystem": "file_system"
            },
            "azure:appservice/AppServiceLogsHttpLogsAzureBlobStorage:AppServiceLogsHttpLogsAzureBlobStorage": {
                "retentionInDays": "retention_in_days",
                "sasUrl": "sas_url"
            },
            "azure:appservice/AppServiceLogsHttpLogsFileSystem:AppServiceLogsHttpLogsFileSystem": {
                "retentionInDays": "retention_in_days",
                "retentionInMb": "retention_in_mb"
            },
            "azure:appservice/AppServiceSiteConfig:AppServiceSiteConfig": {
                "acrUseManagedIdentityCredentials": "acr_use_managed_identity_credentials",
                "acrUserManagedIdentityClientId": "acr_user_managed_identity_client_id",
                "alwaysOn": "always_on",
                "appCommandLine": "app_command_line",
                "autoSwapSlotName": "auto_swap_slot_name",
                "defaultDocuments": "default_documents",
                "dotnetFrameworkVersion": "dotnet_framework_version",
                "ftpsState": "ftps_state",
                "healthCheckPath": "health_check_path",
                "http2Enabled": "http2_enabled",
                "ipRestrictions": "ip_restriction",
                "javaContainer": "java_container",
                "javaContainerVersion": "java_container_version",
                "javaVersion": "java_version",
                "linuxFxVersion": "linux_fx_version",
                "localMysqlEnabled": "local_mysql_enabled",
                "managedPipelineMode": "managed_pipeline_mode",
                "minTlsVersion": "min_tls_version",
                "numberOfWorkers": "number_of_workers",
                "phpVersion": "php_version",
                "pythonVersion": "python_version",
                "remoteDebuggingEnabled": "remote_debugging_enabled",
                "remoteDebuggingVersion": "remote_debugging_version",
                "scmIpRestrictions": "scm_ip_restriction",
                "scmType": "scm_type",
                "scmUseMainIpRestriction": "scm_use_main_ip_restriction",
                "use32BitWorkerProcess": "use_32_bit_worker_process",
                "vnetRouteAllEnabled": "vnet_route_all_enabled",
                "websocketsEnabled": "websockets_enabled",
                "windowsFxVersion": "windows_fx_version"
            },
            "azure:appservice/AppServiceSiteConfigCors:AppServiceSiteConfigCors": {
                "allowedOrigins": "allowed_origins",
                "supportCredentials": "support_credentials"
            },
            "azure:appservice/AppServiceSiteConfigIpRestriction:AppServiceSiteConfigIpRestriction": {
                "ipAddress": "ip_address",
                "serviceTag": "service_tag",
                "virtualNetworkSubnetId": "virtual_network_subnet_id"
            },
            "azure:appservice/AppServiceSiteConfigIpRestrictionHeaders:AppServiceSiteConfigIpRestrictionHeaders": {
                "xAzureFdids": "x_azure_fdid",
                "xFdHealthProbe": "x_fd_health_probe",
                "xForwardedFors": "x_forwarded_for",
                "xForwardedHosts": "x_forwarded_host"
            },
            "azure:appservice/AppServiceSiteConfigScmIpRestriction:AppServiceSiteConfigScmIpRestriction": {
                "ipAddress": "ip_address",
                "serviceTag": "service_tag",
                "virtualNetworkSubnetId": "virtual_network_subnet_id"
            },
            "azure:appservice/AppServiceSiteConfigScmIpRestrictionHeaders:AppServiceSiteConfigScmIpRestrictionHeaders": {
                "xAzureFdids": "x_azure_fdid",
                "xFdHealthProbe": "x_fd_health_probe",
                "xForwardedFors": "x_forwarded_for",
                "xForwardedHosts": "x_forwarded_host"
            },
            "azure:appservice/AppServiceSourceControl:AppServiceSourceControl": {
                "manualIntegration": "manual_integration",
                "repoUrl": "repo_url",
                "rollbackEnabled": "rollback_enabled",
                "useMercurial": "use_mercurial"
            },
            "azure:appservice/AppServiceStorageAccount:AppServiceStorageAccount": {
                "accessKey": "access_key",
                "accountName": "account_name",
                "mountPath": "mount_path",
                "shareName": "share_name"
            },
            "azure:appservice/CertificateOrderCertificate:CertificateOrderCertificate": {
                "certificateName": "certificate_name",
                "keyVaultId": "key_vault_id",
                "keyVaultSecretName": "key_vault_secret_name",
                "provisioningState": "provisioning_state"
            },
            "azure:appservice/ConnectionAuthentication:ConnectionAuthentication": {
                "clientId": "client_id",
                "principalId": "principal_id",
                "subscriptionId": "subscription_id"
            },
            "azure:appservice/ConnectionSecretStore:ConnectionSecretStore": {
                "keyVaultId": "key_vault_id"
            },
            "azure:appservice/EnvironmentV3InboundNetworkDependency:EnvironmentV3InboundNetworkDependency": {
                "ipAddresses": "ip_addresses"
            },
            "azure:appservice/FunctionAppAuthSettings:FunctionAppAuthSettings": {
                "activeDirectory": "active_directory",
                "additionalLoginParams": "additional_login_params",
                "allowedExternalRedirectUrls": "allowed_external_redirect_urls",
                "defaultProvider": "default_provider",
                "runtimeVersion": "runtime_version",
                "tokenRefreshExtensionHours": "token_refresh_extension_hours",
                "tokenStoreEnabled": "token_store_enabled",
                "unauthenticatedClientAction": "unauthenticated_client_action"
            },
            "azure:appservice/FunctionAppAuthSettingsActiveDirectory:FunctionAppAuthSettingsActiveDirectory": {
                "allowedAudiences": "allowed_audiences",
                "clientId": "client_id",
                "clientSecret": "client_secret"
            },
            "azure:appservice/FunctionAppAuthSettingsFacebook:FunctionAppAuthSettingsFacebook": {
                "appId": "app_id",
                "appSecret": "app_secret",
                "oauthScopes": "oauth_scopes"
            },
            "azure:appservice/FunctionAppAuthSettingsGoogle:FunctionAppAuthSettingsGoogle": {
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "oauthScopes": "oauth_scopes"
            },
            "azure:appservice/FunctionAppAuthSettingsMicrosoft:FunctionAppAuthSettingsMicrosoft": {
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "oauthScopes": "oauth_scopes"
            },
            "azure:appservice/FunctionAppAuthSettingsTwitter:FunctionAppAuthSettingsTwitter": {
                "consumerKey": "consumer_key",
                "consumerSecret": "consumer_secret"
            },
            "azure:appservice/FunctionAppIdentity:FunctionAppIdentity": {
                "identityIds": "identity_ids",
                "principalId": "principal_id",
                "tenantId": "tenant_id"
            },
            "azure:appservice/FunctionAppSiteConfig:FunctionAppSiteConfig": {
                "alwaysOn": "always_on",
                "appScaleLimit": "app_scale_limit",
                "autoSwapSlotName": "auto_swap_slot_name",
                "dotnetFrameworkVersion": "dotnet_framework_version",
                "elasticInstanceMinimum": "elastic_instance_minimum",
                "ftpsState": "ftps_state",
                "healthCheckPath": "health_check_path",
                "http2Enabled": "http2_enabled",
                "ipRestrictions": "ip_restriction",
                "javaVersion": "java_version",
                "linuxFxVersion": "linux_fx_version",
                "minTlsVersion": "min_tls_version",
                "preWarmedInstanceCount": "pre_warmed_instance_count",
                "runtimeScaleMonitoringEnabled": "runtime_scale_monitoring_enabled",
                "scmIpRestrictions": "scm_ip_restriction",
                "scmType": "scm_type",
                "scmUseMainIpRestriction": "scm_use_main_ip_restriction",
                "use32BitWorkerProcess": "use_32_bit_worker_process",
                "vnetRouteAllEnabled": "vnet_route_all_enabled",
                "websocketsEnabled": "websockets_enabled"
            },
            "azure:appservice/FunctionAppSiteConfigCors:FunctionAppSiteConfigCors": {
                "allowedOrigins": "allowed_origins",
                "supportCredentials": "support_credentials"
            },
            "azure:appservice/FunctionAppSiteConfigIpRestriction:FunctionAppSiteConfigIpRestriction": {
                "ipAddress": "ip_address",
                "serviceTag": "service_tag",
                "virtualNetworkSubnetId": "virtual_network_subnet_id"
            },
            "azure:appservice/FunctionAppSiteConfigIpRestrictionHeaders:FunctionAppSiteConfigIpRestrictionHeaders": {
                "xAzureFdids": "x_azure_fdid",
                "xFdHealthProbe": "x_fd_health_probe",
                "xForwardedFors": "x_forwarded_for",
                "xForwardedHosts": "x_forwarded_host"
            },
            "azure:appservice/FunctionAppSiteConfigScmIpRestriction:FunctionAppSiteConfigScmIpRestriction": {
                "ipAddress": "ip_address",
                "serviceTag": "service_tag",
                "virtualNetworkSubnetId": "virtual_network_subnet_id"
            },
            "azure:appservice/FunctionAppSiteConfigScmIpRestrictionHeaders:FunctionAppSiteConfigScmIpRestrictionHeaders": {
                "xAzureFdids": "x_azure_fdid",
                "xFdHealthProbe": "x_fd_health_probe",
                "xForwardedFors": "x_forwarded_for",
                "xForwardedHosts": "x_forwarded_host"
            },
            "azure:appservice/FunctionAppSlotAuthSettings:FunctionAppSlotAuthSettings": {
                "activeDirectory": "active_directory",
                "additionalLoginParams": "additional_login_params",
                "allowedExternalRedirectUrls": "allowed_external_redirect_urls",
                "defaultProvider": "default_provider",
                "runtimeVersion": "runtime_version",
                "tokenRefreshExtensionHours": "token_refresh_extension_hours",
                "tokenStoreEnabled": "token_store_enabled",
                "unauthenticatedClientAction": "unauthenticated_client_action"
            },
            "azure:appservice/FunctionAppSlotAuthSettingsActiveDirectory:FunctionAppSlotAuthSettingsActiveDirectory": {
                "allowedAudiences": "allowed_audiences",
                "clientId": "client_id",
                "clientSecret": "client_secret"
            },
            "azure:appservice/FunctionAppSlotAuthSettingsFacebook:FunctionAppSlotAuthSettingsFacebook": {
                "appId": "app_id",
                "appSecret": "app_secret",
                "oauthScopes": "oauth_scopes"
            },
            "azure:appservice/FunctionAppSlotAuthSettingsGoogle:FunctionAppSlotAuthSettingsGoogle": {
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "oauthScopes": "oauth_scopes"
            },
            "azure:appservice/FunctionAppSlotAuthSettingsMicrosoft:FunctionAppSlotAuthSettingsMicrosoft": {
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "oauthScopes": "oauth_scopes"
            },
            "azure:appservice/FunctionAppSlotAuthSettingsTwitter:FunctionAppSlotAuthSettingsTwitter": {
                "consumerKey": "consumer_key",
                "consumerSecret": "consumer_secret"
            },
            "azure:appservice/FunctionAppSlotIdentity:FunctionAppSlotIdentity": {
                "identityIds": "identity_ids",
                "principalId": "principal_id",
                "tenantId": "tenant_id"
            },
            "azure:appservice/FunctionAppSlotSiteConfig:FunctionAppSlotSiteConfig": {
                "alwaysOn": "always_on",
                "appScaleLimit": "app_scale_limit",
                "autoSwapSlotName": "auto_swap_slot_name",
                "dotnetFrameworkVersion": "dotnet_framework_version",
                "elasticInstanceMinimum": "elastic_instance_minimum",
                "ftpsState": "ftps_state",
                "healthCheckPath": "health_check_path",
                "http2Enabled": "http2_enabled",
                "ipRestrictions": "ip_restriction",
                "javaVersion": "java_version",
                "linuxFxVersion": "linux_fx_version",
                "minTlsVersion": "min_tls_version",
                "preWarmedInstanceCount": "pre_warmed_instance_count",
                "runtimeScaleMonitoringEnabled": "runtime_scale_monitoring_enabled",
                "scmIpRestrictions": "scm_ip_restriction",
                "scmType": "scm_type",
                "scmUseMainIpRestriction": "scm_use_main_ip_restriction",
                "use32BitWorkerProcess": "use_32_bit_worker_process",
                "vnetRouteAllEnabled": "vnet_route_all_enabled",
                "websocketsEnabled": "websockets_enabled"
            },
            "azure:appservice/FunctionAppSlotSiteConfigCors:FunctionAppSlotSiteConfigCors": {
                "allowedOrigins": "allowed_origins",
                "supportCredentials": "support_credentials"
            },
            "azure:appservice/FunctionAppSlotSiteConfigIpRestriction:FunctionAppSlotSiteConfigIpRestriction": {
                "ipAddress": "ip_address",
                "serviceTag": "service_tag",
                "virtualNetworkSubnetId": "virtual_network_subnet_id"
            },
            "azure:appservice/FunctionAppSlotSiteConfigIpRestrictionHeaders:FunctionAppSlotSiteConfigIpRestrictionHeaders": {
                "xAzureFdids": "x_azure_fdid",
                "xFdHealthProbe": "x_fd_health_probe",
                "xForwardedFors": "x_forwarded_for",
                "xForwardedHosts": "x_forwarded_host"
            },
            "azure:appservice/FunctionAppSlotSiteConfigScmIpRestriction:FunctionAppSlotSiteConfigScmIpRestriction": {
                "ipAddress": "ip_address",
                "serviceTag": "service_tag",
                "virtualNetworkSubnetId": "virtual_network_subnet_id"
            },
            "azure:appservice/FunctionAppSlotSiteConfigScmIpRestrictionHeaders:FunctionAppSlotSiteConfigScmIpRestrictionHeaders": {
                "xAzureFdids": "x_azure_fdid",
                "xFdHealthProbe": "x_fd_health_probe",
                "xForwardedFors": "x_forwarded_for",
                "xForwardedHosts": "x_forwarded_host"
            },
            "azure:appservice/FunctionAppSourceControl:FunctionAppSourceControl": {
                "manualIntegration": "manual_integration",
                "repoUrl": "repo_url",
                "rollbackEnabled": "rollback_enabled",
                "useMercurial": "use_mercurial"
            },
            "azure:appservice/LinuxFunctionAppAuthSettings:LinuxFunctionAppAuthSettings": {
                "activeDirectory": "active_directory",
                "additionalLoginParameters": "additional_login_parameters",
                "allowedExternalRedirectUrls": "allowed_external_redirect_urls",
                "defaultProvider": "default_provider",
                "runtimeVersion": "runtime_version",
                "tokenRefreshExtensionHours": "token_refresh_extension_hours",
                "tokenStoreEnabled": "token_store_enabled",
                "unauthenticatedClientAction": "unauthenticated_client_action"
            },
            "azure:appservice/LinuxFunctionAppAuthSettingsActiveDirectory:LinuxFunctionAppAuthSettingsActiveDirectory": {
                "allowedAudiences": "allowed_audiences",
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "clientSecretSettingName": "client_secret_setting_name"
            },
            "azure:appservice/LinuxFunctionAppAuthSettingsFacebook:LinuxFunctionAppAuthSettingsFacebook": {
                "appId": "app_id",
                "appSecret": "app_secret",
                "appSecretSettingName": "app_secret_setting_name",
                "oauthScopes": "oauth_scopes"
            },
            "azure:appservice/LinuxFunctionAppAuthSettingsGithub:LinuxFunctionAppAuthSettingsGithub": {
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "clientSecretSettingName": "client_secret_setting_name",
                "oauthScopes": "oauth_scopes"
            },
            "azure:appservice/LinuxFunctionAppAuthSettingsGoogle:LinuxFunctionAppAuthSettingsGoogle": {
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "clientSecretSettingName": "client_secret_setting_name",
                "oauthScopes": "oauth_scopes"
            },
            "azure:appservice/LinuxFunctionAppAuthSettingsMicrosoft:LinuxFunctionAppAuthSettingsMicrosoft": {
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "clientSecretSettingName": "client_secret_setting_name",
                "oauthScopes": "oauth_scopes"
            },
            "azure:appservice/LinuxFunctionAppAuthSettingsTwitter:LinuxFunctionAppAuthSettingsTwitter": {
                "consumerKey": "consumer_key",
                "consumerSecret": "consumer_secret",
                "consumerSecretSettingName": "consumer_secret_setting_name"
            },
            "azure:appservice/LinuxFunctionAppAuthSettingsV2:LinuxFunctionAppAuthSettingsV2": {
                "activeDirectoryV2": "active_directory_v2",
                "appleV2": "apple_v2",
                "authEnabled": "auth_enabled",
                "azureStaticWebAppV2": "azure_static_web_app_v2",
                "configFilePath": "config_file_path",
                "customOidcV2s": "custom_oidc_v2",
                "defaultProvider": "default_provider",
                "excludedPaths": "excluded_paths",
                "facebookV2": "facebook_v2",
                "forwardProxyConvention": "forward_proxy_convention",
                "forwardProxyCustomHostHeaderName": "forward_proxy_custom_host_header_name",
                "forwardProxyCustomSchemeHeaderName": "forward_proxy_custom_scheme_header_name",
                "githubV2": "github_v2",
                "googleV2": "google_v2",
                "httpRouteApiPrefix": "http_route_api_prefix",
                "microsoftV2": "microsoft_v2",
                "requireAuthentication": "require_authentication",
                "requireHttps": "require_https",
                "runtimeVersion": "runtime_version",
                "twitterV2": "twitter_v2",
                "unauthenticatedAction": "unauthenticated_action"
            },
            "azure:appservice/LinuxFunctionAppAuthSettingsV2ActiveDirectoryV2:LinuxFunctionAppAuthSettingsV2ActiveDirectoryV2": {
                "allowedApplications": "allowed_applications",
                "allowedAudiences": "allowed_audiences",
                "allowedGroups": "allowed_groups",
                "allowedIdentities": "allowed_identities",
                "clientId": "client_id",
                "clientSecretCertificateThumbprint": "client_secret_certificate_thumbprint",
                "clientSecretSettingName": "client_secret_setting_name",
                "jwtAllowedClientApplications": "jwt_allowed_client_applications",
                "jwtAllowedGroups": "jwt_allowed_groups",
                "loginParameters": "login_parameters",
                "tenantAuthEndpoint": "tenant_auth_endpoint",
                "wwwAuthenticationDisabled": "www_authentication_disabled"
            },
            "azure:appservice/LinuxFunctionAppAuthSettingsV2AppleV2:LinuxFunctionAppAuthSettingsV2AppleV2": {
                "clientId": "client_id",
                "clientSecretSettingName": "client_secret_setting_name",
                "loginScopes": "login_scopes"
            },
            "azure:appservice/LinuxFunctionAppAuthSettingsV2AzureStaticWebAppV2:LinuxFunctionAppAuthSettingsV2AzureStaticWebAppV2": {
                "clientId": "client_id"
            },
            "azure:appservice/LinuxFunctionAppAuthSettingsV2CustomOidcV2:LinuxFunctionAppAuthSettingsV2CustomOidcV2": {
                "authorisationEndpoint": "authorisation_endpoint",
                "certificationUri": "certification_uri",
                "clientCredentialMethod": "client_credential_method",
                "clientId": "client_id",
                "clientSecretSettingName": "client_secret_setting_name",
                "issuerEndpoint": "issuer_endpoint",
                "nameClaimType": "name_claim_type",
                "openidConfigurationEndpoint": "openid_configuration_endpoint",
                "tokenEndpoint": "token_endpoint"
            },
            "azure:appservice/LinuxFunctionAppAuthSettingsV2FacebookV2:LinuxFunctionAppAuthSettingsV2FacebookV2": {
                "appId": "app_id",
                "appSecretSettingName": "app_secret_setting_name",
                "graphApiVersion": "graph_api_version",
                "loginScopes": "login_scopes"
            },
            "azure:appservice/LinuxFunctionAppAuthSettingsV2GithubV2:LinuxFunctionAppAuthSettingsV2GithubV2": {
                "clientId": "client_id",
                "clientSecretSettingName": "client_secret_setting_name",
                "loginScopes": "login_scopes"
            },
            "azure:appservice/LinuxFunctionAppAuthSettingsV2GoogleV2:LinuxFunctionAppAuthSettingsV2GoogleV2": {
                "allowedAudiences": "allowed_audiences",
                "clientId": "client_id",
                "clientSecretSettingName": "client_secret_setting_name",
                "loginScopes": "login_scopes"
            },
            "azure:appservice/LinuxFunctionAppAuthSettingsV2Login:LinuxFunctionAppAuthSettingsV2Login": {
                "allowedExternalRedirectUrls": "allowed_external_redirect_urls",
                "cookieExpirationConvention": "cookie_expiration_convention",
                "cookieExpirationTime": "cookie_expiration_time",
                "logoutEndpoint": "logout_endpoint",
                "nonceExpirationTime": "nonce_expiration_time",
                "preserveUrlFragmentsForLogins": "preserve_url_fragments_for_logins",
                "tokenRefreshExtensionTime": "token_refresh_extension_time",
                "tokenStoreEnabled": "token_store_enabled",
                "tokenStorePath": "token_store_path",
                "tokenStoreSasSettingName": "token_store_sas_setting_name",
                "validateNonce": "validate_nonce"
            },
            "azure:appservice/LinuxFunctionAppAuthSettingsV2MicrosoftV2:LinuxFunctionAppAuthSettingsV2MicrosoftV2": {
                "allowedAudiences": "allowed_audiences",
                "clientId": "client_id",
                "clientSecretSettingName": "client_secret_setting_name",
                "loginScopes": "login_scopes"
            },
            "azure:appservice/LinuxFunctionAppAuthSettingsV2TwitterV2:LinuxFunctionAppAuthSettingsV2TwitterV2": {
                "consumerKey": "consumer_key",
                "consumerSecretSettingName": "consumer_secret_setting_name"
            },
            "azure:appservice/LinuxFunctionAppBackup:LinuxFunctionAppBackup": {
                "storageAccountUrl": "storage_account_url"
            },
            "azure:appservice/LinuxFunctionAppBackupSchedule:LinuxFunctionAppBackupSchedule": {
                "frequencyInterval": "frequency_interval",
                "frequencyUnit": "frequency_unit",
                "keepAtLeastOneBackup": "keep_at_least_one_backup",
                "lastExecutionTime": "last_execution_time",
                "retentionPeriodDays": "retention_period_days",
                "startTime": "start_time"
            },
            "azure:appservice/LinuxFunctionAppIdentity:LinuxFunctionAppIdentity": {
                "identityIds": "identity_ids",
                "principalId": "principal_id",
                "tenantId": "tenant_id"
            },
            "azure:appservice/LinuxFunctionAppSiteConfig:LinuxFunctionAppSiteConfig": {
                "alwaysOn": "always_on",
                "apiDefinitionUrl": "api_definition_url",
                "apiManagementApiId": "api_management_api_id",
                "appCommandLine": "app_command_line",
                "appScaleLimit": "app_scale_limit",
                "appServiceLogs": "app_service_logs",
                "applicationInsightsConnectionString": "application_insights_connection_string",
                "applicationInsightsKey": "application_insights_key",
                "applicationStack": "application_stack",
                "containerRegistryManagedIdentityClientId": "container_registry_managed_identity_client_id",
                "containerRegistryUseManagedIdentity": "container_registry_use_managed_identity",
                "defaultDocuments": "default_documents",
                "detailedErrorLoggingEnabled": "detailed_error_logging_enabled",
                "elasticInstanceMinimum": "elastic_instance_minimum",
                "ftpsState": "ftps_state",
                "healthCheckEvictionTimeInMin": "health_check_eviction_time_in_min",
                "healthCheckPath": "health_check_path",
                "http2Enabled": "http2_enabled",
                "ipRestrictions": "ip_restriction",
                "linuxFxVersion": "linux_fx_version",
                "loadBalancingMode": "load_balancing_mode",
                "managedPipelineMode": "managed_pipeline_mode",
                "minimumTlsVersion": "minimum_tls_version",
                "preWarmedInstanceCount": "pre_warmed_instance_count",
                "remoteDebuggingEnabled": "remote_debugging_enabled",
                "remoteDebuggingVersion": "remote_debugging_version",
                "runtimeScaleMonitoringEnabled": "runtime_scale_monitoring_enabled",
                "scmIpRestrictions": "scm_ip_restriction",
                "scmMinimumTlsVersion": "scm_minimum_tls_version",
                "scmType": "scm_type",
                "scmUseMainIpRestriction": "scm_use_main_ip_restriction",
                "use32BitWorker": "use_32_bit_worker",
                "vnetRouteAllEnabled": "vnet_route_all_enabled",
                "websocketsEnabled": "websockets_enabled",
                "workerCount": "worker_count"
            },
            "azure:appservice/LinuxFunctionAppSiteConfigAppServiceLogs:LinuxFunctionAppSiteConfigAppServiceLogs": {
                "diskQuotaMb": "disk_quota_mb",
                "retentionPeriodDays": "retention_period_days"
            },
            "azure:appservice/LinuxFunctionAppSiteConfigApplicationStack:LinuxFunctionAppSiteConfigApplicationStack": {
                "dockers": "docker",
                "dotnetVersion": "dotnet_version",
                "javaVersion": "java_version",
                "nodeVersion": "node_version",
                "powershellCoreVersion": "powershell_core_version",
                "pythonVersion": "python_version",
                "useCustomRuntime": "use_custom_runtime",
                "useDotnetIsolatedRuntime": "use_dotnet_isolated_runtime"
            },
            "azure:appservice/LinuxFunctionAppSiteConfigApplicationStackDocker:LinuxFunctionAppSiteConfigApplicationStackDocker": {
                "imageName": "image_name",
                "imageTag": "image_tag",
                "registryPassword": "registry_password",
                "registryUrl": "registry_url",
                "registryUsername": "registry_username"
            },
            "azure:appservice/LinuxFunctionAppSiteConfigCors:LinuxFunctionAppSiteConfigCors": {
                "allowedOrigins": "allowed_origins",
                "supportCredentials": "support_credentials"
            },
            "azure:appservice/LinuxFunctionAppSiteConfigIpRestriction:LinuxFunctionAppSiteConfigIpRestriction": {
                "ipAddress": "ip_address",
                "serviceTag": "service_tag",
                "virtualNetworkSubnetId": "virtual_network_subnet_id"
            },
            "azure:appservice/LinuxFunctionAppSiteConfigIpRestrictionHeaders:LinuxFunctionAppSiteConfigIpRestrictionHeaders": {
                "xAzureFdids": "x_azure_fdid",
                "xFdHealthProbe": "x_fd_health_probe",
                "xForwardedFors": "x_forwarded_for",
                "xForwardedHosts": "x_forwarded_host"
            },
            "azure:appservice/LinuxFunctionAppSiteConfigScmIpRestriction:LinuxFunctionAppSiteConfigScmIpRestriction": {
                "ipAddress": "ip_address",
                "serviceTag": "service_tag",
                "virtualNetworkSubnetId": "virtual_network_subnet_id"
            },
            "azure:appservice/LinuxFunctionAppSiteConfigScmIpRestrictionHeaders:LinuxFunctionAppSiteConfigScmIpRestrictionHeaders": {
                "xAzureFdids": "x_azure_fdid",
                "xFdHealthProbe": "x_fd_health_probe",
                "xForwardedFors": "x_forwarded_for",
                "xForwardedHosts": "x_forwarded_host"
            },
            "azure:appservice/LinuxFunctionAppSlotAuthSettings:LinuxFunctionAppSlotAuthSettings": {
                "activeDirectory": "active_directory",
                "additionalLoginParameters": "additional_login_parameters",
                "allowedExternalRedirectUrls": "allowed_external_redirect_urls",
                "defaultProvider": "default_provider",
                "runtimeVersion": "runtime_version",
                "tokenRefreshExtensionHours": "token_refresh_extension_hours",
                "tokenStoreEnabled": "token_store_enabled",
                "unauthenticatedClientAction": "unauthenticated_client_action"
            },
            "azure:appservice/LinuxFunctionAppSlotAuthSettingsActiveDirectory:LinuxFunctionAppSlotAuthSettingsActiveDirectory": {
                "allowedAudiences": "allowed_audiences",
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "clientSecretSettingName": "client_secret_setting_name"
            },
            "azure:appservice/LinuxFunctionAppSlotAuthSettingsFacebook:LinuxFunctionAppSlotAuthSettingsFacebook": {
                "appId": "app_id",
                "appSecret": "app_secret",
                "appSecretSettingName": "app_secret_setting_name",
                "oauthScopes": "oauth_scopes"
            },
            "azure:appservice/LinuxFunctionAppSlotAuthSettingsGithub:LinuxFunctionAppSlotAuthSettingsGithub": {
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "clientSecretSettingName": "client_secret_setting_name",
                "oauthScopes": "oauth_scopes"
            },
            "azure:appservice/LinuxFunctionAppSlotAuthSettingsGoogle:LinuxFunctionAppSlotAuthSettingsGoogle": {
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "clientSecretSettingName": "client_secret_setting_name",
                "oauthScopes": "oauth_scopes"
            },
            "azure:appservice/LinuxFunctionAppSlotAuthSettingsMicrosoft:LinuxFunctionAppSlotAuthSettingsMicrosoft": {
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "clientSecretSettingName": "client_secret_setting_name",
                "oauthScopes": "oauth_scopes"
            },
            "azure:appservice/LinuxFunctionAppSlotAuthSettingsTwitter:LinuxFunctionAppSlotAuthSettingsTwitter": {
                "consumerKey": "consumer_key",
                "consumerSecret": "consumer_secret",
                "consumerSecretSettingName": "consumer_secret_setting_name"
            },
            "azure:appservice/LinuxFunctionAppSlotAuthSettingsV2:LinuxFunctionAppSlotAuthSettingsV2": {
                "activeDirectoryV2": "active_directory_v2",
                "appleV2": "apple_v2",
                "authEnabled": "auth_enabled",
                "azureStaticWebAppV2": "azure_static_web_app_v2",
                "configFilePath": "config_file_path",
                "customOidcV2s": "custom_oidc_v2",
                "defaultProvider": "default_provider",
                "excludedPaths": "excluded_paths",
                "facebookV2": "facebook_v2",
                "forwardProxyConvention": "forward_proxy_convention",
                "forwardProxyCustomHostHeaderName": "forward_proxy_custom_host_header_name",
                "forwardProxyCustomSchemeHeaderName": "forward_proxy_custom_scheme_header_name",
                "githubV2": "github_v2",
                "googleV2": "google_v2",
                "httpRouteApiPrefix": "http_route_api_prefix",
                "microsoftV2": "microsoft_v2",
                "requireAuthentication": "require_authentication",
                "requireHttps": "require_https",
                "runtimeVersion": "runtime_version",
                "twitterV2": "twitter_v2",
                "unauthenticatedAction": "unauthenticated_action"
            },
            "azure:appservice/LinuxFunctionAppSlotAuthSettingsV2ActiveDirectoryV2:LinuxFunctionAppSlotAuthSettingsV2ActiveDirectoryV2": {
                "allowedApplications": "allowed_applications",
                "allowedAudiences": "allowed_audiences",
                "allowedGroups": "allowed_groups",
                "allowedIdentities": "allowed_identities",
                "clientId": "client_id",
                "clientSecretCertificateThumbprint": "client_secret_certificate_thumbprint",
                "clientSecretSettingName": "client_secret_setting_name",
                "jwtAllowedClientApplications": "jwt_allowed_client_applications",
                "jwtAllowedGroups": "jwt_allowed_groups",
                "loginParameters": "login_parameters",
                "tenantAuthEndpoint": "tenant_auth_endpoint",
                "wwwAuthenticationDisabled": "www_authentication_disabled"
            },
            "azure:appservice/LinuxFunctionAppSlotAuthSettingsV2AppleV2:LinuxFunctionAppSlotAuthSettingsV2AppleV2": {
                "clientId": "client_id",
                "clientSecretSettingName": "client_secret_setting_name",
                "loginScopes": "login_scopes"
            },
            "azure:appservice/LinuxFunctionAppSlotAuthSettingsV2AzureStaticWebAppV2:LinuxFunctionAppSlotAuthSettingsV2AzureStaticWebAppV2": {
                "clientId": "client_id"
            },
            "azure:appservice/LinuxFunctionAppSlotAuthSettingsV2CustomOidcV2:LinuxFunctionAppSlotAuthSettingsV2CustomOidcV2": {
                "authorisationEndpoint": "authorisation_endpoint",
                "certificationUri": "certification_uri",
                "clientCredentialMethod": "client_credential_method",
                "clientId": "client_id",
                "clientSecretSettingName": "client_secret_setting_name",
                "issuerEndpoint": "issuer_endpoint",
                "nameClaimType": "name_claim_type",
                "openidConfigurationEndpoint": "openid_configuration_endpoint",
                "tokenEndpoint": "token_endpoint"
            },
            "azure:appservice/LinuxFunctionAppSlotAuthSettingsV2FacebookV2:LinuxFunctionAppSlotAuthSettingsV2FacebookV2": {
                "appId": "app_id",
                "appSecretSettingName": "app_secret_setting_name",
                "graphApiVersion": "graph_api_version",
                "loginScopes": "login_scopes"
            },
            "azure:appservice/LinuxFunctionAppSlotAuthSettingsV2GithubV2:LinuxFunctionAppSlotAuthSettingsV2GithubV2": {
                "clientId": "client_id",
                "clientSecretSettingName": "client_secret_setting_name",
                "loginScopes": "login_scopes"
            },
            "azure:appservice/LinuxFunctionAppSlotAuthSettingsV2GoogleV2:LinuxFunctionAppSlotAuthSettingsV2GoogleV2": {
                "allowedAudiences": "allowed_audiences",
                "clientId": "client_id",
                "clientSecretSettingName": "client_secret_setting_name",
                "loginScopes": "login_scopes"
            },
            "azure:appservice/LinuxFunctionAppSlotAuthSettingsV2Login:LinuxFunctionAppSlotAuthSettingsV2Login": {
                "allowedExternalRedirectUrls": "allowed_external_redirect_urls",
                "cookieExpirationConvention": "cookie_expiration_convention",
                "cookieExpirationTime": "cookie_expiration_time",
                "logoutEndpoint": "logout_endpoint",
                "nonceExpirationTime": "nonce_expiration_time",
                "preserveUrlFragmentsForLogins": "preserve_url_fragments_for_logins",
                "tokenRefreshExtensionTime": "token_refresh_extension_time",
                "tokenStoreEnabled": "token_store_enabled",
                "tokenStorePath": "token_store_path",
                "tokenStoreSasSettingName": "token_store_sas_setting_name",
                "validateNonce": "validate_nonce"
            },
            "azure:appservice/LinuxFunctionAppSlotAuthSettingsV2MicrosoftV2:LinuxFunctionAppSlotAuthSettingsV2MicrosoftV2": {
                "allowedAudiences": "allowed_audiences",
                "clientId": "client_id",
                "clientSecretSettingName": "client_secret_setting_name",
                "loginScopes": "login_scopes"
            },
            "azure:appservice/LinuxFunctionAppSlotAuthSettingsV2TwitterV2:LinuxFunctionAppSlotAuthSettingsV2TwitterV2": {
                "consumerKey": "consumer_key",
                "consumerSecretSettingName": "consumer_secret_setting_name"
            },
            "azure:appservice/LinuxFunctionAppSlotBackup:LinuxFunctionAppSlotBackup": {
                "storageAccountUrl": "storage_account_url"
            },
            "azure:appservice/LinuxFunctionAppSlotBackupSchedule:LinuxFunctionAppSlotBackupSchedule": {
                "frequencyInterval": "frequency_interval",
                "frequencyUnit": "frequency_unit",
                "keepAtLeastOneBackup": "keep_at_least_one_backup",
                "lastExecutionTime": "last_execution_time",
                "retentionPeriodDays": "retention_period_days",
                "startTime": "start_time"
            },
            "azure:appservice/LinuxFunctionAppSlotIdentity:LinuxFunctionAppSlotIdentity": {
                "identityIds": "identity_ids",
                "principalId": "principal_id",
                "tenantId": "tenant_id"
            },
            "azure:appservice/LinuxFunctionAppSlotSiteConfig:LinuxFunctionAppSlotSiteConfig": {
                "alwaysOn": "always_on",
                "apiDefinitionUrl": "api_definition_url",
                "apiManagementApiId": "api_management_api_id",
                "appCommandLine": "app_command_line",
                "appScaleLimit": "app_scale_limit",
                "appServiceLogs": "app_service_logs",
                "applicationInsightsConnectionString": "application_insights_connection_string",
                "applicationInsightsKey": "application_insights_key",
                "applicationStack": "application_stack",
                "autoSwapSlotName": "auto_swap_slot_name",
                "containerRegistryManagedIdentityClientId": "container_registry_managed_identity_client_id",
                "containerRegistryUseManagedIdentity": "container_registry_use_managed_identity",
                "defaultDocuments": "default_documents",
                "detailedErrorLoggingEnabled": "detailed_error_logging_enabled",
                "elasticInstanceMinimum": "elastic_instance_minimum",
                "ftpsState": "ftps_state",
                "healthCheckEvictionTimeInMin": "health_check_eviction_time_in_min",
                "healthCheckPath": "health_check_path",
                "http2Enabled": "http2_enabled",
                "ipRestrictions": "ip_restriction",
                "linuxFxVersion": "linux_fx_version",
                "loadBalancingMode": "load_balancing_mode",
                "managedPipelineMode": "managed_pipeline_mode",
                "minimumTlsVersion": "minimum_tls_version",
                "preWarmedInstanceCount": "pre_warmed_instance_count",
                "remoteDebuggingEnabled": "remote_debugging_enabled",
                "remoteDebuggingVersion": "remote_debugging_version",
                "runtimeScaleMonitoringEnabled": "runtime_scale_monitoring_enabled",
                "scmIpRestrictions": "scm_ip_restriction",
                "scmMinimumTlsVersion": "scm_minimum_tls_version",
                "scmType": "scm_type",
                "scmUseMainIpRestriction": "scm_use_main_ip_restriction",
                "use32BitWorker": "use_32_bit_worker",
                "vnetRouteAllEnabled": "vnet_route_all_enabled",
                "websocketsEnabled": "websockets_enabled",
                "workerCount": "worker_count"
            },
            "azure:appservice/LinuxFunctionAppSlotSiteConfigAppServiceLogs:LinuxFunctionAppSlotSiteConfigAppServiceLogs": {
                "diskQuotaMb": "disk_quota_mb",
                "retentionPeriodDays": "retention_period_days"
            },
            "azure:appservice/LinuxFunctionAppSlotSiteConfigApplicationStack:LinuxFunctionAppSlotSiteConfigApplicationStack": {
                "dockers": "docker",
                "dotnetVersion": "dotnet_version",
                "javaVersion": "java_version",
                "nodeVersion": "node_version",
                "powershellCoreVersion": "powershell_core_version",
                "pythonVersion": "python_version",
                "useCustomRuntime": "use_custom_runtime",
                "useDotnetIsolatedRuntime": "use_dotnet_isolated_runtime"
            },
            "azure:appservice/LinuxFunctionAppSlotSiteConfigApplicationStackDocker:LinuxFunctionAppSlotSiteConfigApplicationStackDocker": {
                "imageName": "image_name",
                "imageTag": "image_tag",
                "registryPassword": "registry_password",
                "registryUrl": "registry_url",
                "registryUsername": "registry_username"
            },
            "azure:appservice/LinuxFunctionAppSlotSiteConfigCors:LinuxFunctionAppSlotSiteConfigCors": {
                "allowedOrigins": "allowed_origins",
                "supportCredentials": "support_credentials"
            },
            "azure:appservice/LinuxFunctionAppSlotSiteConfigIpRestriction:LinuxFunctionAppSlotSiteConfigIpRestriction": {
                "ipAddress": "ip_address",
                "serviceTag": "service_tag",
                "virtualNetworkSubnetId": "virtual_network_subnet_id"
            },
            "azure:appservice/LinuxFunctionAppSlotSiteConfigIpRestrictionHeaders:LinuxFunctionAppSlotSiteConfigIpRestrictionHeaders": {
                "xAzureFdids": "x_azure_fdid",
                "xFdHealthProbe": "x_fd_health_probe",
                "xForwardedFors": "x_forwarded_for",
                "xForwardedHosts": "x_forwarded_host"
            },
            "azure:appservice/LinuxFunctionAppSlotSiteConfigScmIpRestriction:LinuxFunctionAppSlotSiteConfigScmIpRestriction": {
                "ipAddress": "ip_address",
                "serviceTag": "service_tag",
                "virtualNetworkSubnetId": "virtual_network_subnet_id"
            },
            "azure:appservice/LinuxFunctionAppSlotSiteConfigScmIpRestrictionHeaders:LinuxFunctionAppSlotSiteConfigScmIpRestrictionHeaders": {
                "xAzureFdids": "x_azure_fdid",
                "xFdHealthProbe": "x_fd_health_probe",
                "xForwardedFors": "x_forwarded_for",
                "xForwardedHosts": "x_forwarded_host"
            },
            "azure:appservice/LinuxFunctionAppSlotStorageAccount:LinuxFunctionAppSlotStorageAccount": {
                "accessKey": "access_key",
                "accountName": "account_name",
                "mountPath": "mount_path",
                "shareName": "share_name"
            },
            "azure:appservice/LinuxFunctionAppStickySettings:LinuxFunctionAppStickySettings": {
                "appSettingNames": "app_setting_names",
                "connectionStringNames": "connection_string_names"
            },
            "azure:appservice/LinuxFunctionAppStorageAccount:LinuxFunctionAppStorageAccount": {
                "accessKey": "access_key",
                "accountName": "account_name",
                "mountPath": "mount_path",
                "shareName": "share_name"
            },
            "azure:appservice/LinuxWebAppAuthSettings:LinuxWebAppAuthSettings": {
                "activeDirectory": "active_directory",
                "additionalLoginParameters": "additional_login_parameters",
                "allowedExternalRedirectUrls": "allowed_external_redirect_urls",
                "defaultProvider": "default_provider",
                "runtimeVersion": "runtime_version",
                "tokenRefreshExtensionHours": "token_refresh_extension_hours",
                "tokenStoreEnabled": "token_store_enabled",
                "unauthenticatedClientAction": "unauthenticated_client_action"
            },
            "azure:appservice/LinuxWebAppAuthSettingsActiveDirectory:LinuxWebAppAuthSettingsActiveDirectory": {
                "allowedAudiences": "allowed_audiences",
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "clientSecretSettingName": "client_secret_setting_name"
            },
            "azure:appservice/LinuxWebAppAuthSettingsFacebook:LinuxWebAppAuthSettingsFacebook": {
                "appId": "app_id",
                "appSecret": "app_secret",
                "appSecretSettingName": "app_secret_setting_name",
                "oauthScopes": "oauth_scopes"
            },
            "azure:appservice/LinuxWebAppAuthSettingsGithub:LinuxWebAppAuthSettingsGithub": {
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "clientSecretSettingName": "client_secret_setting_name",
                "oauthScopes": "oauth_scopes"
            },
            "azure:appservice/LinuxWebAppAuthSettingsGoogle:LinuxWebAppAuthSettingsGoogle": {
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "clientSecretSettingName": "client_secret_setting_name",
                "oauthScopes": "oauth_scopes"
            },
            "azure:appservice/LinuxWebAppAuthSettingsMicrosoft:LinuxWebAppAuthSettingsMicrosoft": {
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "clientSecretSettingName": "client_secret_setting_name",
                "oauthScopes": "oauth_scopes"
            },
            "azure:appservice/LinuxWebAppAuthSettingsTwitter:LinuxWebAppAuthSettingsTwitter": {
                "consumerKey": "consumer_key",
                "consumerSecret": "consumer_secret",
                "consumerSecretSettingName": "consumer_secret_setting_name"
            },
            "azure:appservice/LinuxWebAppAuthSettingsV2:LinuxWebAppAuthSettingsV2": {
                "activeDirectoryV2": "active_directory_v2",
                "appleV2": "apple_v2",
                "authEnabled": "auth_enabled",
                "azureStaticWebAppV2": "azure_static_web_app_v2",
                "configFilePath": "config_file_path",
                "customOidcV2s": "custom_oidc_v2",
                "defaultProvider": "default_provider",
                "excludedPaths": "excluded_paths",
                "facebookV2": "facebook_v2",
                "forwardProxyConvention": "forward_proxy_convention",
                "forwardProxyCustomHostHeaderName": "forward_proxy_custom_host_header_name",
                "forwardProxyCustomSchemeHeaderName": "forward_proxy_custom_scheme_header_name",
                "githubV2": "github_v2",
                "googleV2": "google_v2",
                "httpRouteApiPrefix": "http_route_api_prefix",
                "microsoftV2": "microsoft_v2",
                "requireAuthentication": "require_authentication",
                "requireHttps": "require_https",
                "runtimeVersion": "runtime_version",
                "twitterV2": "twitter_v2",
                "unauthenticatedAction": "unauthenticated_action"
            },
            "azure:appservice/LinuxWebAppAuthSettingsV2ActiveDirectoryV2:LinuxWebAppAuthSettingsV2ActiveDirectoryV2": {
                "allowedApplications": "allowed_applications",
                "allowedAudiences": "allowed_audiences",
                "allowedGroups": "allowed_groups",
                "allowedIdentities": "allowed_identities",
                "clientId": "client_id",
                "clientSecretCertificateThumbprint": "client_secret_certificate_thumbprint",
                "clientSecretSettingName": "client_secret_setting_name",
                "jwtAllowedClientApplications": "jwt_allowed_client_applications",
                "jwtAllowedGroups": "jwt_allowed_groups",
                "loginParameters": "login_parameters",
                "tenantAuthEndpoint": "tenant_auth_endpoint",
                "wwwAuthenticationDisabled": "www_authentication_disabled"
            },
            "azure:appservice/LinuxWebAppAuthSettingsV2AppleV2:LinuxWebAppAuthSettingsV2AppleV2": {
                "clientId": "client_id",
                "clientSecretSettingName": "client_secret_setting_name",
                "loginScopes": "login_scopes"
            },
            "azure:appservice/LinuxWebAppAuthSettingsV2AzureStaticWebAppV2:LinuxWebAppAuthSettingsV2AzureStaticWebAppV2": {
                "clientId": "client_id"
            },
            "azure:appservice/LinuxWebAppAuthSettingsV2CustomOidcV2:LinuxWebAppAuthSettingsV2CustomOidcV2": {
                "authorisationEndpoint": "authorisation_endpoint",
                "certificationUri": "certification_uri",
                "clientCredentialMethod": "client_credential_method",
                "clientId": "client_id",
                "clientSecretSettingName": "client_secret_setting_name",
                "issuerEndpoint": "issuer_endpoint",
                "nameClaimType": "name_claim_type",
                "openidConfigurationEndpoint": "openid_configuration_endpoint",
                "tokenEndpoint": "token_endpoint"
            },
            "azure:appservice/LinuxWebAppAuthSettingsV2FacebookV2:LinuxWebAppAuthSettingsV2FacebookV2": {
                "appId": "app_id",
                "appSecretSettingName": "app_secret_setting_name",
                "graphApiVersion": "graph_api_version",
                "loginScopes": "login_scopes"
            },
            "azure:appservice/LinuxWebAppAuthSettingsV2GithubV2:LinuxWebAppAuthSettingsV2GithubV2": {
                "clientId": "client_id",
                "clientSecretSettingName": "client_secret_setting_name",
                "loginScopes": "login_scopes"
            },
            "azure:appservice/LinuxWebAppAuthSettingsV2GoogleV2:LinuxWebAppAuthSettingsV2GoogleV2": {
                "allowedAudiences": "allowed_audiences",
                "clientId": "client_id",
                "clientSecretSettingName": "client_secret_setting_name",
                "loginScopes": "login_scopes"
            },
            "azure:appservice/LinuxWebAppAuthSettingsV2Login:LinuxWebAppAuthSettingsV2Login": {
                "allowedExternalRedirectUrls": "allowed_external_redirect_urls",
                "cookieExpirationConvention": "cookie_expiration_convention",
                "cookieExpirationTime": "cookie_expiration_time",
                "logoutEndpoint": "logout_endpoint",
                "nonceExpirationTime": "nonce_expiration_time",
                "preserveUrlFragmentsForLogins": "preserve_url_fragments_for_logins",
                "tokenRefreshExtensionTime": "token_refresh_extension_time",
                "tokenStoreEnabled": "token_store_enabled",
                "tokenStorePath": "token_store_path",
                "tokenStoreSasSettingName": "token_store_sas_setting_name",
                "validateNonce": "validate_nonce"
            },
            "azure:appservice/LinuxWebAppAuthSettingsV2MicrosoftV2:LinuxWebAppAuthSettingsV2MicrosoftV2": {
                "allowedAudiences": "allowed_audiences",
                "clientId": "client_id",
                "clientSecretSettingName": "client_secret_setting_name",
                "loginScopes": "login_scopes"
            },
            "azure:appservice/LinuxWebAppAuthSettingsV2TwitterV2:LinuxWebAppAuthSettingsV2TwitterV2": {
                "consumerKey": "consumer_key",
                "consumerSecretSettingName": "consumer_secret_setting_name"
            },
            "azure:appservice/LinuxWebAppBackup:LinuxWebAppBackup": {
                "storageAccountUrl": "storage_account_url"
            },
            "azure:appservice/LinuxWebAppBackupSchedule:LinuxWebAppBackupSchedule": {
                "frequencyInterval": "frequency_interval",
                "frequencyUnit": "frequency_unit",
                "keepAtLeastOneBackup": "keep_at_least_one_backup",
                "lastExecutionTime": "last_execution_time",
                "retentionPeriodDays": "retention_period_days",
                "startTime": "start_time"
            },
            "azure:appservice/LinuxWebAppIdentity:LinuxWebAppIdentity": {
                "identityIds": "identity_ids",
                "principalId": "principal_id",
                "tenantId": "tenant_id"
            },
            "azure:appservice/LinuxWebAppLogs:LinuxWebAppLogs": {
                "applicationLogs": "application_logs",
                "detailedErrorMessages": "detailed_error_messages",
                "failedRequestTracing": "failed_request_tracing",
                "httpLogs": "http_logs"
            },
            "azure:appservice/LinuxWebAppLogsApplicationLogs:LinuxWebAppLogsApplicationLogs": {
                "azureBlobStorage": "azure_blob_storage",
                "fileSystemLevel": "file_system_level"
            },
            "azure:appservice/LinuxWebAppLogsApplicationLogsAzureBlobStorage:LinuxWebAppLogsApplicationLogsAzureBlobStorage": {
                "retentionInDays": "retention_in_days",
                "sasUrl": "sas_url"
            },
            "azure:appservice/LinuxWebAppLogsHttpLogs:LinuxWebAppLogsHttpLogs": {
                "azureBlobStorage": "azure_blob_storage",
                "fileSystem": "file_system"
            },
            "azure:appservice/LinuxWebAppLogsHttpLogsAzureBlobStorage:LinuxWebAppLogsHttpLogsAzureBlobStorage": {
                "retentionInDays": "retention_in_days",
                "sasUrl": "sas_url"
            },
            "azure:appservice/LinuxWebAppLogsHttpLogsFileSystem:LinuxWebAppLogsHttpLogsFileSystem": {
                "retentionInDays": "retention_in_days",
                "retentionInMb": "retention_in_mb"
            },
            "azure:appservice/LinuxWebAppSiteConfig:LinuxWebAppSiteConfig": {
                "alwaysOn": "always_on",
                "apiDefinitionUrl": "api_definition_url",
                "apiManagementApiId": "api_management_api_id",
                "appCommandLine": "app_command_line",
                "applicationStack": "application_stack",
                "autoHealEnabled": "auto_heal_enabled",
                "autoHealSetting": "auto_heal_setting",
                "containerRegistryManagedIdentityClientId": "container_registry_managed_identity_client_id",
                "containerRegistryUseManagedIdentity": "container_registry_use_managed_identity",
                "defaultDocuments": "default_documents",
                "detailedErrorLoggingEnabled": "detailed_error_logging_enabled",
                "ftpsState": "ftps_state",
                "healthCheckEvictionTimeInMin": "health_check_eviction_time_in_min",
                "healthCheckPath": "health_check_path",
                "http2Enabled": "http2_enabled",
                "ipRestrictions": "ip_restriction",
                "linuxFxVersion": "linux_fx_version",
                "loadBalancingMode": "load_balancing_mode",
                "localMysqlEnabled": "local_mysql_enabled",
                "managedPipelineMode": "managed_pipeline_mode",
                "minimumTlsVersion": "minimum_tls_version",
                "remoteDebuggingEnabled": "remote_debugging_enabled",
                "remoteDebuggingVersion": "remote_debugging_version",
                "scmIpRestrictions": "scm_ip_restriction",
                "scmMinimumTlsVersion": "scm_minimum_tls_version",
                "scmType": "scm_type",
                "scmUseMainIpRestriction": "scm_use_main_ip_restriction",
                "use32BitWorker": "use_32_bit_worker",
                "vnetRouteAllEnabled": "vnet_route_all_enabled",
                "websocketsEnabled": "websockets_enabled",
                "workerCount": "worker_count"
            },
            "azure:appservice/LinuxWebAppSiteConfigApplicationStack:LinuxWebAppSiteConfigApplicationStack": {
                "dockerImage": "docker_image",
                "dockerImageName": "docker_image_name",
                "dockerImageTag": "docker_image_tag",
                "dockerRegistryPassword": "docker_registry_password",
                "dockerRegistryUrl": "docker_registry_url",
                "dockerRegistryUsername": "docker_registry_username",
                "dotnetVersion": "dotnet_version",
                "goVersion": "go_version",
                "javaServer": "java_server",
                "javaServerVersion": "java_server_version",
                "javaVersion": "java_version",
                "nodeVersion": "node_version",
                "phpVersion": "php_version",
                "pythonVersion": "python_version",
                "rubyVersion": "ruby_version"
            },
            "azure:appservice/LinuxWebAppSiteConfigAutoHealSettingAction:LinuxWebAppSiteConfigAutoHealSettingAction": {
                "actionType": "action_type",
                "minimumProcessExecutionTime": "minimum_process_execution_time"
            },
            "azure:appservice/LinuxWebAppSiteConfigAutoHealSettingTrigger:LinuxWebAppSiteConfigAutoHealSettingTrigger": {
                "slowRequests": "slow_request",
                "statusCodes": "status_code"
            },
            "azure:appservice/LinuxWebAppSiteConfigAutoHealSettingTriggerSlowRequest:LinuxWebAppSiteConfigAutoHealSettingTriggerSlowRequest": {
                "timeTaken": "time_taken"
            },
            "azure:appservice/LinuxWebAppSiteConfigAutoHealSettingTriggerStatusCode:LinuxWebAppSiteConfigAutoHealSettingTriggerStatusCode": {
                "statusCodeRange": "status_code_range",
                "subStatus": "sub_status",
                "win32StatusCode": "win32_status_code"
            },
            "azure:appservice/LinuxWebAppSiteConfigCors:LinuxWebAppSiteConfigCors": {
                "allowedOrigins": "allowed_origins",
                "supportCredentials": "support_credentials"
            },
            "azure:appservice/LinuxWebAppSiteConfigIpRestriction:LinuxWebAppSiteConfigIpRestriction": {
                "ipAddress": "ip_address",
                "serviceTag": "service_tag",
                "virtualNetworkSubnetId": "virtual_network_subnet_id"
            },
            "azure:appservice/LinuxWebAppSiteConfigIpRestrictionHeaders:LinuxWebAppSiteConfigIpRestrictionHeaders": {
                "xAzureFdids": "x_azure_fdid",
                "xFdHealthProbe": "x_fd_health_probe",
                "xForwardedFors": "x_forwarded_for",
                "xForwardedHosts": "x_forwarded_host"
            },
            "azure:appservice/LinuxWebAppSiteConfigScmIpRestriction:LinuxWebAppSiteConfigScmIpRestriction": {
                "ipAddress": "ip_address",
                "serviceTag": "service_tag",
                "virtualNetworkSubnetId": "virtual_network_subnet_id"
            },
            "azure:appservice/LinuxWebAppSiteConfigScmIpRestrictionHeaders:LinuxWebAppSiteConfigScmIpRestrictionHeaders": {
                "xAzureFdids": "x_azure_fdid",
                "xFdHealthProbe": "x_fd_health_probe",
                "xForwardedFors": "x_forwarded_for",
                "xForwardedHosts": "x_forwarded_host"
            },
            "azure:appservice/LinuxWebAppSlotAuthSettings:LinuxWebAppSlotAuthSettings": {
                "activeDirectory": "active_directory",
                "additionalLoginParameters": "additional_login_parameters",
                "allowedExternalRedirectUrls": "allowed_external_redirect_urls",
                "defaultProvider": "default_provider",
                "runtimeVersion": "runtime_version",
                "tokenRefreshExtensionHours": "token_refresh_extension_hours",
                "tokenStoreEnabled": "token_store_enabled",
                "unauthenticatedClientAction": "unauthenticated_client_action"
            },
            "azure:appservice/LinuxWebAppSlotAuthSettingsActiveDirectory:LinuxWebAppSlotAuthSettingsActiveDirectory": {
                "allowedAudiences": "allowed_audiences",
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "clientSecretSettingName": "client_secret_setting_name"
            },
            "azure:appservice/LinuxWebAppSlotAuthSettingsFacebook:LinuxWebAppSlotAuthSettingsFacebook": {
                "appId": "app_id",
                "appSecret": "app_secret",
                "appSecretSettingName": "app_secret_setting_name",
                "oauthScopes": "oauth_scopes"
            },
            "azure:appservice/LinuxWebAppSlotAuthSettingsGithub:LinuxWebAppSlotAuthSettingsGithub": {
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "clientSecretSettingName": "client_secret_setting_name",
                "oauthScopes": "oauth_scopes"
            },
            "azure:appservice/LinuxWebAppSlotAuthSettingsGoogle:LinuxWebAppSlotAuthSettingsGoogle": {
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "clientSecretSettingName": "client_secret_setting_name",
                "oauthScopes": "oauth_scopes"
            },
            "azure:appservice/LinuxWebAppSlotAuthSettingsMicrosoft:LinuxWebAppSlotAuthSettingsMicrosoft": {
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "clientSecretSettingName": "client_secret_setting_name",
                "oauthScopes": "oauth_scopes"
            },
            "azure:appservice/LinuxWebAppSlotAuthSettingsTwitter:LinuxWebAppSlotAuthSettingsTwitter": {
                "consumerKey": "consumer_key",
                "consumerSecret": "consumer_secret",
                "consumerSecretSettingName": "consumer_secret_setting_name"
            },
            "azure:appservice/LinuxWebAppSlotAuthSettingsV2:LinuxWebAppSlotAuthSettingsV2": {
                "activeDirectoryV2": "active_directory_v2",
                "appleV2": "apple_v2",
                "authEnabled": "auth_enabled",
                "azureStaticWebAppV2": "azure_static_web_app_v2",
                "configFilePath": "config_file_path",
                "customOidcV2s": "custom_oidc_v2",
                "defaultProvider": "default_provider",
                "excludedPaths": "excluded_paths",
                "facebookV2": "facebook_v2",
                "forwardProxyConvention": "forward_proxy_convention",
                "forwardProxyCustomHostHeaderName": "forward_proxy_custom_host_header_name",
                "forwardProxyCustomSchemeHeaderName": "forward_proxy_custom_scheme_header_name",
                "githubV2": "github_v2",
                "googleV2": "google_v2",
                "httpRouteApiPrefix": "http_route_api_prefix",
                "microsoftV2": "microsoft_v2",
                "requireAuthentication": "require_authentication",
                "requireHttps": "require_https",
                "runtimeVersion": "runtime_version",
                "twitterV2": "twitter_v2",
                "unauthenticatedAction": "unauthenticated_action"
            },
            "azure:appservice/LinuxWebAppSlotAuthSettingsV2ActiveDirectoryV2:LinuxWebAppSlotAuthSettingsV2ActiveDirectoryV2": {
                "allowedApplications": "allowed_applications",
                "allowedAudiences": "allowed_audiences",
                "allowedGroups": "allowed_groups",
                "allowedIdentities": "allowed_identities",
                "clientId": "client_id",
                "clientSecretCertificateThumbprint": "client_secret_certificate_thumbprint",
                "clientSecretSettingName": "client_secret_setting_name",
                "jwtAllowedClientApplications": "jwt_allowed_client_applications",
                "jwtAllowedGroups": "jwt_allowed_groups",
                "loginParameters": "login_parameters",
                "tenantAuthEndpoint": "tenant_auth_endpoint",
                "wwwAuthenticationDisabled": "www_authentication_disabled"
            },
            "azure:appservice/LinuxWebAppSlotAuthSettingsV2AppleV2:LinuxWebAppSlotAuthSettingsV2AppleV2": {
                "clientId": "client_id",
                "clientSecretSettingName": "client_secret_setting_name",
                "loginScopes": "login_scopes"
            },
            "azure:appservice/LinuxWebAppSlotAuthSettingsV2AzureStaticWebAppV2:LinuxWebAppSlotAuthSettingsV2AzureStaticWebAppV2": {
                "clientId": "client_id"
            },
            "azure:appservice/LinuxWebAppSlotAuthSettingsV2CustomOidcV2:LinuxWebAppSlotAuthSettingsV2CustomOidcV2": {
                "authorisationEndpoint": "authorisation_endpoint",
                "certificationUri": "certification_uri",
                "clientCredentialMethod": "client_credential_method",
                "clientId": "client_id",
                "clientSecretSettingName": "client_secret_setting_name",
                "issuerEndpoint": "issuer_endpoint",
                "nameClaimType": "name_claim_type",
                "openidConfigurationEndpoint": "openid_configuration_endpoint",
                "tokenEndpoint": "token_endpoint"
            },
            "azure:appservice/LinuxWebAppSlotAuthSettingsV2FacebookV2:LinuxWebAppSlotAuthSettingsV2FacebookV2": {
                "appId": "app_id",
                "appSecretSettingName": "app_secret_setting_name",
                "graphApiVersion": "graph_api_version",
                "loginScopes": "login_scopes"
            },
            "azure:appservice/LinuxWebAppSlotAuthSettingsV2GithubV2:LinuxWebAppSlotAuthSettingsV2GithubV2": {
                "clientId": "client_id",
                "clientSecretSettingName": "client_secret_setting_name",
                "loginScopes": "login_scopes"
            },
            "azure:appservice/LinuxWebAppSlotAuthSettingsV2GoogleV2:LinuxWebAppSlotAuthSettingsV2GoogleV2": {
                "allowedAudiences": "allowed_audiences",
                "clientId": "client_id",
                "clientSecretSettingName": "client_secret_setting_name",
                "loginScopes": "login_scopes"
            },
            "azure:appservice/LinuxWebAppSlotAuthSettingsV2Login:LinuxWebAppSlotAuthSettingsV2Login": {
                "allowedExternalRedirectUrls": "allowed_external_redirect_urls",
                "cookieExpirationConvention": "cookie_expiration_convention",
                "cookieExpirationTime": "cookie_expiration_time",
                "logoutEndpoint": "logout_endpoint",
                "nonceExpirationTime": "nonce_expiration_time",
                "preserveUrlFragmentsForLogins": "preserve_url_fragments_for_logins",
                "tokenRefreshExtensionTime": "token_refresh_extension_time",
                "tokenStoreEnabled": "token_store_enabled",
                "tokenStorePath": "token_store_path",
                "tokenStoreSasSettingName": "token_store_sas_setting_name",
                "validateNonce": "validate_nonce"
            },
            "azure:appservice/LinuxWebAppSlotAuthSettingsV2MicrosoftV2:LinuxWebAppSlotAuthSettingsV2MicrosoftV2": {
                "allowedAudiences": "allowed_audiences",
                "clientId": "client_id",
                "clientSecretSettingName": "client_secret_setting_name",
                "loginScopes": "login_scopes"
            },
            "azure:appservice/LinuxWebAppSlotAuthSettingsV2TwitterV2:LinuxWebAppSlotAuthSettingsV2TwitterV2": {
                "consumerKey": "consumer_key",
                "consumerSecretSettingName": "consumer_secret_setting_name"
            },
            "azure:appservice/LinuxWebAppSlotBackup:LinuxWebAppSlotBackup": {
                "storageAccountUrl": "storage_account_url"
            },
            "azure:appservice/LinuxWebAppSlotBackupSchedule:LinuxWebAppSlotBackupSchedule": {
                "frequencyInterval": "frequency_interval",
                "frequencyUnit": "frequency_unit",
                "keepAtLeastOneBackup": "keep_at_least_one_backup",
                "lastExecutionTime": "last_execution_time",
                "retentionPeriodDays": "retention_period_days",
                "startTime": "start_time"
            },
            "azure:appservice/LinuxWebAppSlotIdentity:LinuxWebAppSlotIdentity": {
                "identityIds": "identity_ids",
                "principalId": "principal_id",
                "tenantId": "tenant_id"
            },
            "azure:appservice/LinuxWebAppSlotLogs:LinuxWebAppSlotLogs": {
                "applicationLogs": "application_logs",
                "detailedErrorMessages": "detailed_error_messages",
                "failedRequestTracing": "failed_request_tracing",
                "httpLogs": "http_logs"
            },
            "azure:appservice/LinuxWebAppSlotLogsApplicationLogs:LinuxWebAppSlotLogsApplicationLogs": {
                "azureBlobStorage": "azure_blob_storage",
                "fileSystemLevel": "file_system_level"
            },
            "azure:appservice/LinuxWebAppSlotLogsApplicationLogsAzureBlobStorage:LinuxWebAppSlotLogsApplicationLogsAzureBlobStorage": {
                "retentionInDays": "retention_in_days",
                "sasUrl": "sas_url"
            },
            "azure:appservice/LinuxWebAppSlotLogsHttpLogs:LinuxWebAppSlotLogsHttpLogs": {
                "azureBlobStorage": "azure_blob_storage",
                "fileSystem": "file_system"
            },
            "azure:appservice/LinuxWebAppSlotLogsHttpLogsAzureBlobStorage:LinuxWebAppSlotLogsHttpLogsAzureBlobStorage": {
                "retentionInDays": "retention_in_days",
                "sasUrl": "sas_url"
            },
            "azure:appservice/LinuxWebAppSlotLogsHttpLogsFileSystem:LinuxWebAppSlotLogsHttpLogsFileSystem": {
                "retentionInDays": "retention_in_days",
                "retentionInMb": "retention_in_mb"
            },
            "azure:appservice/LinuxWebAppSlotSiteConfig:LinuxWebAppSlotSiteConfig": {
                "alwaysOn": "always_on",
                "apiDefinitionUrl": "api_definition_url",
                "apiManagementApiId": "api_management_api_id",
                "appCommandLine": "app_command_line",
                "applicationStack": "application_stack",
                "autoHealEnabled": "auto_heal_enabled",
                "autoHealSetting": "auto_heal_setting",
                "autoSwapSlotName": "auto_swap_slot_name",
                "containerRegistryManagedIdentityClientId": "container_registry_managed_identity_client_id",
                "containerRegistryUseManagedIdentity": "container_registry_use_managed_identity",
                "defaultDocuments": "default_documents",
                "detailedErrorLoggingEnabled": "detailed_error_logging_enabled",
                "ftpsState": "ftps_state",
                "healthCheckEvictionTimeInMin": "health_check_eviction_time_in_min",
                "healthCheckPath": "health_check_path",
                "http2Enabled": "http2_enabled",
                "ipRestrictions": "ip_restriction",
                "linuxFxVersion": "linux_fx_version",
                "loadBalancingMode": "load_balancing_mode",
                "localMysqlEnabled": "local_mysql_enabled",
                "managedPipelineMode": "managed_pipeline_mode",
                "minimumTlsVersion": "minimum_tls_version",
                "remoteDebuggingEnabled": "remote_debugging_enabled",
                "remoteDebuggingVersion": "remote_debugging_version",
                "scmIpRestrictions": "scm_ip_restriction",
                "scmMinimumTlsVersion": "scm_minimum_tls_version",
                "scmType": "scm_type",
                "scmUseMainIpRestriction": "scm_use_main_ip_restriction",
                "use32BitWorker": "use_32_bit_worker",
                "vnetRouteAllEnabled": "vnet_route_all_enabled",
                "websocketsEnabled": "websockets_enabled",
                "workerCount": "worker_count"
            },
            "azure:appservice/LinuxWebAppSlotSiteConfigApplicationStack:LinuxWebAppSlotSiteConfigApplicationStack": {
                "dockerImage": "docker_image",
                "dockerImageName": "docker_image_name",
                "dockerImageTag": "docker_image_tag",
                "dockerRegistryPassword": "docker_registry_password",
                "dockerRegistryUrl": "docker_registry_url",
                "dockerRegistryUsername": "docker_registry_username",
                "dotnetVersion": "dotnet_version",
                "goVersion": "go_version",
                "javaServer": "java_server",
                "javaServerVersion": "java_server_version",
                "javaVersion": "java_version",
                "nodeVersion": "node_version",
                "phpVersion": "php_version",
                "pythonVersion": "python_version",
                "rubyVersion": "ruby_version"
            },
            "azure:appservice/LinuxWebAppSlotSiteConfigAutoHealSettingAction:LinuxWebAppSlotSiteConfigAutoHealSettingAction": {
                "actionType": "action_type",
                "minimumProcessExecutionTime": "minimum_process_execution_time"
            },
            "azure:appservice/LinuxWebAppSlotSiteConfigAutoHealSettingTrigger:LinuxWebAppSlotSiteConfigAutoHealSettingTrigger": {
                "slowRequests": "slow_request",
                "statusCodes": "status_code"
            },
            "azure:appservice/LinuxWebAppSlotSiteConfigAutoHealSettingTriggerSlowRequest:LinuxWebAppSlotSiteConfigAutoHealSettingTriggerSlowRequest": {
                "timeTaken": "time_taken"
            },
            "azure:appservice/LinuxWebAppSlotSiteConfigAutoHealSettingTriggerStatusCode:LinuxWebAppSlotSiteConfigAutoHealSettingTriggerStatusCode": {
                "statusCodeRange": "status_code_range",
                "subStatus": "sub_status",
                "win32StatusCode": "win32_status_code"
            },
            "azure:appservice/LinuxWebAppSlotSiteConfigCors:LinuxWebAppSlotSiteConfigCors": {
                "allowedOrigins": "allowed_origins",
                "supportCredentials": "support_credentials"
            },
            "azure:appservice/LinuxWebAppSlotSiteConfigIpRestriction:LinuxWebAppSlotSiteConfigIpRestriction": {
                "ipAddress": "ip_address",
                "serviceTag": "service_tag",
                "virtualNetworkSubnetId": "virtual_network_subnet_id"
            },
            "azure:appservice/LinuxWebAppSlotSiteConfigIpRestrictionHeaders:LinuxWebAppSlotSiteConfigIpRestrictionHeaders": {
                "xAzureFdids": "x_azure_fdid",
                "xFdHealthProbe": "x_fd_health_probe",
                "xForwardedFors": "x_forwarded_for",
                "xForwardedHosts": "x_forwarded_host"
            },
            "azure:appservice/LinuxWebAppSlotSiteConfigScmIpRestriction:LinuxWebAppSlotSiteConfigScmIpRestriction": {
                "ipAddress": "ip_address",
                "serviceTag": "service_tag",
                "virtualNetworkSubnetId": "virtual_network_subnet_id"
            },
            "azure:appservice/LinuxWebAppSlotSiteConfigScmIpRestrictionHeaders:LinuxWebAppSlotSiteConfigScmIpRestrictionHeaders": {
                "xAzureFdids": "x_azure_fdid",
                "xFdHealthProbe": "x_fd_health_probe",
                "xForwardedFors": "x_forwarded_for",
                "xForwardedHosts": "x_forwarded_host"
            },
            "azure:appservice/LinuxWebAppSlotStorageAccount:LinuxWebAppSlotStorageAccount": {
                "accessKey": "access_key",
                "accountName": "account_name",
                "mountPath": "mount_path",
                "shareName": "share_name"
            },
            "azure:appservice/LinuxWebAppStickySettings:LinuxWebAppStickySettings": {
                "appSettingNames": "app_setting_names",
                "connectionStringNames": "connection_string_names"
            },
            "azure:appservice/LinuxWebAppStorageAccount:LinuxWebAppStorageAccount": {
                "accessKey": "access_key",
                "accountName": "account_name",
                "mountPath": "mount_path",
                "shareName": "share_name"
            },
            "azure:appservice/SlotAuthSettings:SlotAuthSettings": {
                "activeDirectory": "active_directory",
                "additionalLoginParams": "additional_login_params",
                "allowedExternalRedirectUrls": "allowed_external_redirect_urls",
                "defaultProvider": "default_provider",
                "runtimeVersion": "runtime_version",
                "tokenRefreshExtensionHours": "token_refresh_extension_hours",
                "tokenStoreEnabled": "token_store_enabled",
                "unauthenticatedClientAction": "unauthenticated_client_action"
            },
            "azure:appservice/SlotAuthSettingsActiveDirectory:SlotAuthSettingsActiveDirectory": {
                "allowedAudiences": "allowed_audiences",
                "clientId": "client_id",
                "clientSecret": "client_secret"
            },
            "azure:appservice/SlotAuthSettingsFacebook:SlotAuthSettingsFacebook": {
                "appId": "app_id",
                "appSecret": "app_secret",
                "oauthScopes": "oauth_scopes"
            },
            "azure:appservice/SlotAuthSettingsGoogle:SlotAuthSettingsGoogle": {
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "oauthScopes": "oauth_scopes"
            },
            "azure:appservice/SlotAuthSettingsMicrosoft:SlotAuthSettingsMicrosoft": {
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "oauthScopes": "oauth_scopes"
            },
            "azure:appservice/SlotAuthSettingsTwitter:SlotAuthSettingsTwitter": {
                "consumerKey": "consumer_key",
                "consumerSecret": "consumer_secret"
            },
            "azure:appservice/SlotIdentity:SlotIdentity": {
                "identityIds": "identity_ids",
                "principalId": "principal_id",
                "tenantId": "tenant_id"
            },
            "azure:appservice/SlotLogs:SlotLogs": {
                "applicationLogs": "application_logs",
                "detailedErrorMessagesEnabled": "detailed_error_messages_enabled",
                "failedRequestTracingEnabled": "failed_request_tracing_enabled",
                "httpLogs": "http_logs"
            },
            "azure:appservice/SlotLogsApplicationLogs:SlotLogsApplicationLogs": {
                "azureBlobStorage": "azure_blob_storage",
                "fileSystemLevel": "file_system_level"
            },
            "azure:appservice/SlotLogsApplicationLogsAzureBlobStorage:SlotLogsApplicationLogsAzureBlobStorage": {
                "retentionInDays": "retention_in_days",
                "sasUrl": "sas_url"
            },
            "azure:appservice/SlotLogsHttpLogs:SlotLogsHttpLogs": {
                "azureBlobStorage": "azure_blob_storage",
                "fileSystem": "file_system"
            },
            "azure:appservice/SlotLogsHttpLogsAzureBlobStorage:SlotLogsHttpLogsAzureBlobStorage": {
                "retentionInDays": "retention_in_days",
                "sasUrl": "sas_url"
            },
            "azure:appservice/SlotLogsHttpLogsFileSystem:SlotLogsHttpLogsFileSystem": {
                "retentionInDays": "retention_in_days",
                "retentionInMb": "retention_in_mb"
            },
            "azure:appservice/SlotSiteConfig:SlotSiteConfig": {
                "acrUseManagedIdentityCredentials": "acr_use_managed_identity_credentials",
                "acrUserManagedIdentityClientId": "acr_user_managed_identity_client_id",
                "alwaysOn": "always_on",
                "appCommandLine": "app_command_line",
                "autoSwapSlotName": "auto_swap_slot_name",
                "defaultDocuments": "default_documents",
                "dotnetFrameworkVersion": "dotnet_framework_version",
                "ftpsState": "ftps_state",
                "healthCheckPath": "health_check_path",
                "http2Enabled": "http2_enabled",
                "ipRestrictions": "ip_restriction",
                "javaContainer": "java_container",
                "javaContainerVersion": "java_container_version",
                "javaVersion": "java_version",
                "linuxFxVersion": "linux_fx_version",
                "localMysqlEnabled": "local_mysql_enabled",
                "managedPipelineMode": "managed_pipeline_mode",
                "minTlsVersion": "min_tls_version",
                "numberOfWorkers": "number_of_workers",
                "phpVersion": "php_version",
                "pythonVersion": "python_version",
                "remoteDebuggingEnabled": "remote_debugging_enabled",
                "remoteDebuggingVersion": "remote_debugging_version",
                "scmIpRestrictions": "scm_ip_restriction",
                "scmType": "scm_type",
                "scmUseMainIpRestriction": "scm_use_main_ip_restriction",
                "use32BitWorkerProcess": "use_32_bit_worker_process",
                "vnetRouteAllEnabled": "vnet_route_all_enabled",
                "websocketsEnabled": "websockets_enabled",
                "windowsFxVersion": "windows_fx_version"
            },
            "azure:appservice/SlotSiteConfigCors:SlotSiteConfigCors": {
                "allowedOrigins": "allowed_origins",
                "supportCredentials": "support_credentials"
            },
            "azure:appservice/SlotSiteConfigIpRestriction:SlotSiteConfigIpRestriction": {
                "ipAddress": "ip_address",
                "serviceTag": "service_tag",
                "virtualNetworkSubnetId": "virtual_network_subnet_id"
            },
            "azure:appservice/SlotSiteConfigIpRestrictionHeaders:SlotSiteConfigIpRestrictionHeaders": {
                "xAzureFdids": "x_azure_fdid",
                "xFdHealthProbe": "x_fd_health_probe",
                "xForwardedFors": "x_forwarded_for",
                "xForwardedHosts": "x_forwarded_host"
            },
            "azure:appservice/SlotSiteConfigScmIpRestriction:SlotSiteConfigScmIpRestriction": {
                "ipAddress": "ip_address",
                "serviceTag": "service_tag",
                "virtualNetworkSubnetId": "virtual_network_subnet_id"
            },
            "azure:appservice/SlotSiteConfigScmIpRestrictionHeaders:SlotSiteConfigScmIpRestrictionHeaders": {
                "xAzureFdids": "x_azure_fdid",
                "xFdHealthProbe": "x_fd_health_probe",
                "xForwardedFors": "x_forwarded_for",
                "xForwardedHosts": "x_forwarded_host"
            },
            "azure:appservice/SlotStorageAccount:SlotStorageAccount": {
                "accessKey": "access_key",
                "accountName": "account_name",
                "mountPath": "mount_path",
                "shareName": "share_name"
            },
            "azure:appservice/SourceControlGithubActionConfiguration:SourceControlGithubActionConfiguration": {
                "codeConfiguration": "code_configuration",
                "containerConfiguration": "container_configuration",
                "generateWorkflowFile": "generate_workflow_file",
                "linuxAction": "linux_action"
            },
            "azure:appservice/SourceControlGithubActionConfigurationCodeConfiguration:SourceControlGithubActionConfigurationCodeConfiguration": {
                "runtimeStack": "runtime_stack",
                "runtimeVersion": "runtime_version"
            },
            "azure:appservice/SourceControlGithubActionConfigurationContainerConfiguration:SourceControlGithubActionConfigurationContainerConfiguration": {
                "imageName": "image_name",
                "registryPassword": "registry_password",
                "registryUrl": "registry_url",
                "registryUsername": "registry_username"
            },
            "azure:appservice/SourceControlSlotGithubActionConfiguration:SourceControlSlotGithubActionConfiguration": {
                "codeConfiguration": "code_configuration",
                "containerConfiguration": "container_configuration",
                "generateWorkflowFile": "generate_workflow_file",
                "linuxAction": "linux_action"
            },
            "azure:appservice/SourceControlSlotGithubActionConfigurationCodeConfiguration:SourceControlSlotGithubActionConfigurationCodeConfiguration": {
                "runtimeStack": "runtime_stack",
                "runtimeVersion": "runtime_version"
            },
            "azure:appservice/SourceControlSlotGithubActionConfigurationContainerConfiguration:SourceControlSlotGithubActionConfigurationContainerConfiguration": {
                "imageName": "image_name",
                "registryPassword": "registry_password",
                "registryUrl": "registry_url",
                "registryUsername": "registry_username"
            },
            "azure:appservice/StaticSiteIdentity:StaticSiteIdentity": {
                "identityIds": "identity_ids",
                "principalId": "principal_id",
                "tenantId": "tenant_id"
            },
            "azure:appservice/WindowsFunctionAppAuthSettings:WindowsFunctionAppAuthSettings": {
                "activeDirectory": "active_directory",
                "additionalLoginParameters": "additional_login_parameters",
                "allowedExternalRedirectUrls": "allowed_external_redirect_urls",
                "defaultProvider": "default_provider",
                "runtimeVersion": "runtime_version",
                "tokenRefreshExtensionHours": "token_refresh_extension_hours",
                "tokenStoreEnabled": "token_store_enabled",
                "unauthenticatedClientAction": "unauthenticated_client_action"
            },
            "azure:appservice/WindowsFunctionAppAuthSettingsActiveDirectory:WindowsFunctionAppAuthSettingsActiveDirectory": {
                "allowedAudiences": "allowed_audiences",
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "clientSecretSettingName": "client_secret_setting_name"
            },
            "azure:appservice/WindowsFunctionAppAuthSettingsFacebook:WindowsFunctionAppAuthSettingsFacebook": {
                "appId": "app_id",
                "appSecret": "app_secret",
                "appSecretSettingName": "app_secret_setting_name",
                "oauthScopes": "oauth_scopes"
            },
            "azure:appservice/WindowsFunctionAppAuthSettingsGithub:WindowsFunctionAppAuthSettingsGithub": {
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "clientSecretSettingName": "client_secret_setting_name",
                "oauthScopes": "oauth_scopes"
            },
            "azure:appservice/WindowsFunctionAppAuthSettingsGoogle:WindowsFunctionAppAuthSettingsGoogle": {
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "clientSecretSettingName": "client_secret_setting_name",
                "oauthScopes": "oauth_scopes"
            },
            "azure:appservice/WindowsFunctionAppAuthSettingsMicrosoft:WindowsFunctionAppAuthSettingsMicrosoft": {
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "clientSecretSettingName": "client_secret_setting_name",
                "oauthScopes": "oauth_scopes"
            },
            "azure:appservice/WindowsFunctionAppAuthSettingsTwitter:WindowsFunctionAppAuthSettingsTwitter": {
                "consumerKey": "consumer_key",
                "consumerSecret": "consumer_secret",
                "consumerSecretSettingName": "consumer_secret_setting_name"
            },
            "azure:appservice/WindowsFunctionAppAuthSettingsV2:WindowsFunctionAppAuthSettingsV2": {
                "activeDirectoryV2": "active_directory_v2",
                "appleV2": "apple_v2",
                "authEnabled": "auth_enabled",
                "azureStaticWebAppV2": "azure_static_web_app_v2",
                "configFilePath": "config_file_path",
                "customOidcV2s": "custom_oidc_v2",
                "defaultProvider": "default_provider",
                "excludedPaths": "excluded_paths",
                "facebookV2": "facebook_v2",
                "forwardProxyConvention": "forward_proxy_convention",
                "forwardProxyCustomHostHeaderName": "forward_proxy_custom_host_header_name",
                "forwardProxyCustomSchemeHeaderName": "forward_proxy_custom_scheme_header_name",
                "githubV2": "github_v2",
                "googleV2": "google_v2",
                "httpRouteApiPrefix": "http_route_api_prefix",
                "microsoftV2": "microsoft_v2",
                "requireAuthentication": "require_authentication",
                "requireHttps": "require_https",
                "runtimeVersion": "runtime_version",
                "twitterV2": "twitter_v2",
                "unauthenticatedAction": "unauthenticated_action"
            },
            "azure:appservice/WindowsFunctionAppAuthSettingsV2ActiveDirectoryV2:WindowsFunctionAppAuthSettingsV2ActiveDirectoryV2": {
                "allowedApplications": "allowed_applications",
                "allowedAudiences": "allowed_audiences",
                "allowedGroups": "allowed_groups",
                "allowedIdentities": "allowed_identities",
                "clientId": "client_id",
                "clientSecretCertificateThumbprint": "client_secret_certificate_thumbprint",
                "clientSecretSettingName": "client_secret_setting_name",
                "jwtAllowedClientApplications": "jwt_allowed_client_applications",
                "jwtAllowedGroups": "jwt_allowed_groups",
                "loginParameters": "login_parameters",
                "tenantAuthEndpoint": "tenant_auth_endpoint",
                "wwwAuthenticationDisabled": "www_authentication_disabled"
            },
            "azure:appservice/WindowsFunctionAppAuthSettingsV2AppleV2:WindowsFunctionAppAuthSettingsV2AppleV2": {
                "clientId": "client_id",
                "clientSecretSettingName": "client_secret_setting_name",
                "loginScopes": "login_scopes"
            },
            "azure:appservice/WindowsFunctionAppAuthSettingsV2AzureStaticWebAppV2:WindowsFunctionAppAuthSettingsV2AzureStaticWebAppV2": {
                "clientId": "client_id"
            },
            "azure:appservice/WindowsFunctionAppAuthSettingsV2CustomOidcV2:WindowsFunctionAppAuthSettingsV2CustomOidcV2": {
                "authorisationEndpoint": "authorisation_endpoint",
                "certificationUri": "certification_uri",
                "clientCredentialMethod": "client_credential_method",
                "clientId": "client_id",
                "clientSecretSettingName": "client_secret_setting_name",
                "issuerEndpoint": "issuer_endpoint",
                "nameClaimType": "name_claim_type",
                "openidConfigurationEndpoint": "openid_configuration_endpoint",
                "tokenEndpoint": "token_endpoint"
            },
            "azure:appservice/WindowsFunctionAppAuthSettingsV2FacebookV2:WindowsFunctionAppAuthSettingsV2FacebookV2": {
                "appId": "app_id",
                "appSecretSettingName": "app_secret_setting_name",
                "graphApiVersion": "graph_api_version",
                "loginScopes": "login_scopes"
            },
            "azure:appservice/WindowsFunctionAppAuthSettingsV2GithubV2:WindowsFunctionAppAuthSettingsV2GithubV2": {
                "clientId": "client_id",
                "clientSecretSettingName": "client_secret_setting_name",
                "loginScopes": "login_scopes"
            },
            "azure:appservice/WindowsFunctionAppAuthSettingsV2GoogleV2:WindowsFunctionAppAuthSettingsV2GoogleV2": {
                "allowedAudiences": "allowed_audiences",
                "clientId": "client_id",
                "clientSecretSettingName": "client_secret_setting_name",
                "loginScopes": "login_scopes"
            },
            "azure:appservice/WindowsFunctionAppAuthSettingsV2Login:WindowsFunctionAppAuthSettingsV2Login": {
                "allowedExternalRedirectUrls": "allowed_external_redirect_urls",
                "cookieExpirationConvention": "cookie_expiration_convention",
                "cookieExpirationTime": "cookie_expiration_time",
                "logoutEndpoint": "logout_endpoint",
                "nonceExpirationTime": "nonce_expiration_time",
                "preserveUrlFragmentsForLogins": "preserve_url_fragments_for_logins",
                "tokenRefreshExtensionTime": "token_refresh_extension_time",
                "tokenStoreEnabled": "token_store_enabled",
                "tokenStorePath": "token_store_path",
                "tokenStoreSasSettingName": "token_store_sas_setting_name",
                "validateNonce": "validate_nonce"
            },
            "azure:appservice/WindowsFunctionAppAuthSettingsV2MicrosoftV2:WindowsFunctionAppAuthSettingsV2MicrosoftV2": {
                "allowedAudiences": "allowed_audiences",
                "clientId": "client_id",
                "clientSecretSettingName": "client_secret_setting_name",
                "loginScopes": "login_scopes"
            },
            "azure:appservice/WindowsFunctionAppAuthSettingsV2TwitterV2:WindowsFunctionAppAuthSettingsV2TwitterV2": {
                "consumerKey": "consumer_key",
                "consumerSecretSettingName": "consumer_secret_setting_name"
            },
            "azure:appservice/WindowsFunctionAppBackup:WindowsFunctionAppBackup": {
                "storageAccountUrl": "storage_account_url"
            },
            "azure:appservice/WindowsFunctionAppBackupSchedule:WindowsFunctionAppBackupSchedule": {
                "frequencyInterval": "frequency_interval",
                "frequencyUnit": "frequency_unit",
                "keepAtLeastOneBackup": "keep_at_least_one_backup",
                "lastExecutionTime": "last_execution_time",
                "retentionPeriodDays": "retention_period_days",
                "startTime": "start_time"
            },
            "azure:appservice/WindowsFunctionAppIdentity:WindowsFunctionAppIdentity": {
                "identityIds": "identity_ids",
                "principalId": "principal_id",
                "tenantId": "tenant_id"
            },
            "azure:appservice/WindowsFunctionAppSiteConfig:WindowsFunctionAppSiteConfig": {
                "alwaysOn": "always_on",
                "apiDefinitionUrl": "api_definition_url",
                "apiManagementApiId": "api_management_api_id",
                "appCommandLine": "app_command_line",
                "appScaleLimit": "app_scale_limit",
                "appServiceLogs": "app_service_logs",
                "applicationInsightsConnectionString": "application_insights_connection_string",
                "applicationInsightsKey": "application_insights_key",
                "applicationStack": "application_stack",
                "defaultDocuments": "default_documents",
                "detailedErrorLoggingEnabled": "detailed_error_logging_enabled",
                "elasticInstanceMinimum": "elastic_instance_minimum",
                "ftpsState": "ftps_state",
                "healthCheckEvictionTimeInMin": "health_check_eviction_time_in_min",
                "healthCheckPath": "health_check_path",
                "http2Enabled": "http2_enabled",
                "ipRestrictions": "ip_restriction",
                "loadBalancingMode": "load_balancing_mode",
                "managedPipelineMode": "managed_pipeline_mode",
                "minimumTlsVersion": "minimum_tls_version",
                "preWarmedInstanceCount": "pre_warmed_instance_count",
                "remoteDebuggingEnabled": "remote_debugging_enabled",
                "remoteDebuggingVersion": "remote_debugging_version",
                "runtimeScaleMonitoringEnabled": "runtime_scale_monitoring_enabled",
                "scmIpRestrictions": "scm_ip_restriction",
                "scmMinimumTlsVersion": "scm_minimum_tls_version",
                "scmType": "scm_type",
                "scmUseMainIpRestriction": "scm_use_main_ip_restriction",
                "use32BitWorker": "use_32_bit_worker",
                "vnetRouteAllEnabled": "vnet_route_all_enabled",
                "websocketsEnabled": "websockets_enabled",
                "windowsFxVersion": "windows_fx_version",
                "workerCount": "worker_count"
            },
            "azure:appservice/WindowsFunctionAppSiteConfigAppServiceLogs:WindowsFunctionAppSiteConfigAppServiceLogs": {
                "diskQuotaMb": "disk_quota_mb",
                "retentionPeriodDays": "retention_period_days"
            },
            "azure:appservice/WindowsFunctionAppSiteConfigApplicationStack:WindowsFunctionAppSiteConfigApplicationStack": {
                "dotnetVersion": "dotnet_version",
                "javaVersion": "java_version",
                "nodeVersion": "node_version",
                "powershellCoreVersion": "powershell_core_version",
                "useCustomRuntime": "use_custom_runtime",
                "useDotnetIsolatedRuntime": "use_dotnet_isolated_runtime"
            },
            "azure:appservice/WindowsFunctionAppSiteConfigCors:WindowsFunctionAppSiteConfigCors": {
                "allowedOrigins": "allowed_origins",
                "supportCredentials": "support_credentials"
            },
            "azure:appservice/WindowsFunctionAppSiteConfigIpRestriction:WindowsFunctionAppSiteConfigIpRestriction": {
                "ipAddress": "ip_address",
                "serviceTag": "service_tag",
                "virtualNetworkSubnetId": "virtual_network_subnet_id"
            },
            "azure:appservice/WindowsFunctionAppSiteConfigIpRestrictionHeaders:WindowsFunctionAppSiteConfigIpRestrictionHeaders": {
                "xAzureFdids": "x_azure_fdid",
                "xFdHealthProbe": "x_fd_health_probe",
                "xForwardedFors": "x_forwarded_for",
                "xForwardedHosts": "x_forwarded_host"
            },
            "azure:appservice/WindowsFunctionAppSiteConfigScmIpRestriction:WindowsFunctionAppSiteConfigScmIpRestriction": {
                "ipAddress": "ip_address",
                "serviceTag": "service_tag",
                "virtualNetworkSubnetId": "virtual_network_subnet_id"
            },
            "azure:appservice/WindowsFunctionAppSiteConfigScmIpRestrictionHeaders:WindowsFunctionAppSiteConfigScmIpRestrictionHeaders": {
                "xAzureFdids": "x_azure_fdid",
                "xFdHealthProbe": "x_fd_health_probe",
                "xForwardedFors": "x_forwarded_for",
                "xForwardedHosts": "x_forwarded_host"
            },
            "azure:appservice/WindowsFunctionAppSlotAuthSettings:WindowsFunctionAppSlotAuthSettings": {
                "activeDirectory": "active_directory",
                "additionalLoginParameters": "additional_login_parameters",
                "allowedExternalRedirectUrls": "allowed_external_redirect_urls",
                "defaultProvider": "default_provider",
                "runtimeVersion": "runtime_version",
                "tokenRefreshExtensionHours": "token_refresh_extension_hours",
                "tokenStoreEnabled": "token_store_enabled",
                "unauthenticatedClientAction": "unauthenticated_client_action"
            },
            "azure:appservice/WindowsFunctionAppSlotAuthSettingsActiveDirectory:WindowsFunctionAppSlotAuthSettingsActiveDirectory": {
                "allowedAudiences": "allowed_audiences",
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "clientSecretSettingName": "client_secret_setting_name"
            },
            "azure:appservice/WindowsFunctionAppSlotAuthSettingsFacebook:WindowsFunctionAppSlotAuthSettingsFacebook": {
                "appId": "app_id",
                "appSecret": "app_secret",
                "appSecretSettingName": "app_secret_setting_name",
                "oauthScopes": "oauth_scopes"
            },
            "azure:appservice/WindowsFunctionAppSlotAuthSettingsGithub:WindowsFunctionAppSlotAuthSettingsGithub": {
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "clientSecretSettingName": "client_secret_setting_name",
                "oauthScopes": "oauth_scopes"
            },
            "azure:appservice/WindowsFunctionAppSlotAuthSettingsGoogle:WindowsFunctionAppSlotAuthSettingsGoogle": {
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "clientSecretSettingName": "client_secret_setting_name",
                "oauthScopes": "oauth_scopes"
            },
            "azure:appservice/WindowsFunctionAppSlotAuthSettingsMicrosoft:WindowsFunctionAppSlotAuthSettingsMicrosoft": {
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "clientSecretSettingName": "client_secret_setting_name",
                "oauthScopes": "oauth_scopes"
            },
            "azure:appservice/WindowsFunctionAppSlotAuthSettingsTwitter:WindowsFunctionAppSlotAuthSettingsTwitter": {
                "consumerKey": "consumer_key",
                "consumerSecret": "consumer_secret",
                "consumerSecretSettingName": "consumer_secret_setting_name"
            },
            "azure:appservice/WindowsFunctionAppSlotAuthSettingsV2:WindowsFunctionAppSlotAuthSettingsV2": {
                "activeDirectoryV2": "active_directory_v2",
                "appleV2": "apple_v2",
                "authEnabled": "auth_enabled",
                "azureStaticWebAppV2": "azure_static_web_app_v2",
                "configFilePath": "config_file_path",
                "customOidcV2s": "custom_oidc_v2",
                "defaultProvider": "default_provider",
                "excludedPaths": "excluded_paths",
                "facebookV2": "facebook_v2",
                "forwardProxyConvention": "forward_proxy_convention",
                "forwardProxyCustomHostHeaderName": "forward_proxy_custom_host_header_name",
                "forwardProxyCustomSchemeHeaderName": "forward_proxy_custom_scheme_header_name",
                "githubV2": "github_v2",
                "googleV2": "google_v2",
                "httpRouteApiPrefix": "http_route_api_prefix",
                "microsoftV2": "microsoft_v2",
                "requireAuthentication": "require_authentication",
                "requireHttps": "require_https",
                "runtimeVersion": "runtime_version",
                "twitterV2": "twitter_v2",
                "unauthenticatedAction": "unauthenticated_action"
            },
            "azure:appservice/WindowsFunctionAppSlotAuthSettingsV2ActiveDirectoryV2:WindowsFunctionAppSlotAuthSettingsV2ActiveDirectoryV2": {
                "allowedApplications": "allowed_applications",
                "allowedAudiences": "allowed_audiences",
                "allowedGroups": "allowed_groups",
                "allowedIdentities": "allowed_identities",
                "clientId": "client_id",
                "clientSecretCertificateThumbprint": "client_secret_certificate_thumbprint",
                "clientSecretSettingName": "client_secret_setting_name",
                "jwtAllowedClientApplications": "jwt_allowed_client_applications",
                "jwtAllowedGroups": "jwt_allowed_groups",
                "loginParameters": "login_parameters",
                "tenantAuthEndpoint": "tenant_auth_endpoint",
                "wwwAuthenticationDisabled": "www_authentication_disabled"
            },
            "azure:appservice/WindowsFunctionAppSlotAuthSettingsV2AppleV2:WindowsFunctionAppSlotAuthSettingsV2AppleV2": {
                "clientId": "client_id",
                "clientSecretSettingName": "client_secret_setting_name",
                "loginScopes": "login_scopes"
            },
            "azure:appservice/WindowsFunctionAppSlotAuthSettingsV2AzureStaticWebAppV2:WindowsFunctionAppSlotAuthSettingsV2AzureStaticWebAppV2": {
                "clientId": "client_id"
            },
            "azure:appservice/WindowsFunctionAppSlotAuthSettingsV2CustomOidcV2:WindowsFunctionAppSlotAuthSettingsV2CustomOidcV2": {
                "authorisationEndpoint": "authorisation_endpoint",
                "certificationUri": "certification_uri",
                "clientCredentialMethod": "client_credential_method",
                "clientId": "client_id",
                "clientSecretSettingName": "client_secret_setting_name",
                "issuerEndpoint": "issuer_endpoint",
                "nameClaimType": "name_claim_type",
                "openidConfigurationEndpoint": "openid_configuration_endpoint",
                "tokenEndpoint": "token_endpoint"
            },
            "azure:appservice/WindowsFunctionAppSlotAuthSettingsV2FacebookV2:WindowsFunctionAppSlotAuthSettingsV2FacebookV2": {
                "appId": "app_id",
                "appSecretSettingName": "app_secret_setting_name",
                "graphApiVersion": "graph_api_version",
                "loginScopes": "login_scopes"
            },
            "azure:appservice/WindowsFunctionAppSlotAuthSettingsV2GithubV2:WindowsFunctionAppSlotAuthSettingsV2GithubV2": {
                "clientId": "client_id",
                "clientSecretSettingName": "client_secret_setting_name",
                "loginScopes": "login_scopes"
            },
            "azure:appservice/WindowsFunctionAppSlotAuthSettingsV2GoogleV2:WindowsFunctionAppSlotAuthSettingsV2GoogleV2": {
                "allowedAudiences": "allowed_audiences",
                "clientId": "client_id",
                "clientSecretSettingName": "client_secret_setting_name",
                "loginScopes": "login_scopes"
            },
            "azure:appservice/WindowsFunctionAppSlotAuthSettingsV2Login:WindowsFunctionAppSlotAuthSettingsV2Login": {
                "allowedExternalRedirectUrls": "allowed_external_redirect_urls",
                "cookieExpirationConvention": "cookie_expiration_convention",
                "cookieExpirationTime": "cookie_expiration_time",
                "logoutEndpoint": "logout_endpoint",
                "nonceExpirationTime": "nonce_expiration_time",
                "preserveUrlFragmentsForLogins": "preserve_url_fragments_for_logins",
                "tokenRefreshExtensionTime": "token_refresh_extension_time",
                "tokenStoreEnabled": "token_store_enabled",
                "tokenStorePath": "token_store_path",
                "tokenStoreSasSettingName": "token_store_sas_setting_name",
                "validateNonce": "validate_nonce"
            },
            "azure:appservice/WindowsFunctionAppSlotAuthSettingsV2MicrosoftV2:WindowsFunctionAppSlotAuthSettingsV2MicrosoftV2": {
                "allowedAudiences": "allowed_audiences",
                "clientId": "client_id",
                "clientSecretSettingName": "client_secret_setting_name",
                "loginScopes": "login_scopes"
            },
            "azure:appservice/WindowsFunctionAppSlotAuthSettingsV2TwitterV2:WindowsFunctionAppSlotAuthSettingsV2TwitterV2": {
                "consumerKey": "consumer_key",
                "consumerSecretSettingName": "consumer_secret_setting_name"
            },
            "azure:appservice/WindowsFunctionAppSlotBackup:WindowsFunctionAppSlotBackup": {
                "storageAccountUrl": "storage_account_url"
            },
            "azure:appservice/WindowsFunctionAppSlotBackupSchedule:WindowsFunctionAppSlotBackupSchedule": {
                "frequencyInterval": "frequency_interval",
                "frequencyUnit": "frequency_unit",
                "keepAtLeastOneBackup": "keep_at_least_one_backup",
                "lastExecutionTime": "last_execution_time",
                "retentionPeriodDays": "retention_period_days",
                "startTime": "start_time"
            },
            "azure:appservice/WindowsFunctionAppSlotIdentity:WindowsFunctionAppSlotIdentity": {
                "identityIds": "identity_ids",
                "principalId": "principal_id",
                "tenantId": "tenant_id"
            },
            "azure:appservice/WindowsFunctionAppSlotSiteConfig:WindowsFunctionAppSlotSiteConfig": {
                "alwaysOn": "always_on",
                "apiDefinitionUrl": "api_definition_url",
                "apiManagementApiId": "api_management_api_id",
                "appCommandLine": "app_command_line",
                "appScaleLimit": "app_scale_limit",
                "appServiceLogs": "app_service_logs",
                "applicationInsightsConnectionString": "application_insights_connection_string",
                "applicationInsightsKey": "application_insights_key",
                "applicationStack": "application_stack",
                "autoSwapSlotName": "auto_swap_slot_name",
                "defaultDocuments": "default_documents",
                "detailedErrorLoggingEnabled": "detailed_error_logging_enabled",
                "elasticInstanceMinimum": "elastic_instance_minimum",
                "ftpsState": "ftps_state",
                "healthCheckEvictionTimeInMin": "health_check_eviction_time_in_min",
                "healthCheckPath": "health_check_path",
                "http2Enabled": "http2_enabled",
                "ipRestrictions": "ip_restriction",
                "loadBalancingMode": "load_balancing_mode",
                "managedPipelineMode": "managed_pipeline_mode",
                "minimumTlsVersion": "minimum_tls_version",
                "preWarmedInstanceCount": "pre_warmed_instance_count",
                "remoteDebuggingEnabled": "remote_debugging_enabled",
                "remoteDebuggingVersion": "remote_debugging_version",
                "runtimeScaleMonitoringEnabled": "runtime_scale_monitoring_enabled",
                "scmIpRestrictions": "scm_ip_restriction",
                "scmMinimumTlsVersion": "scm_minimum_tls_version",
                "scmType": "scm_type",
                "scmUseMainIpRestriction": "scm_use_main_ip_restriction",
                "use32BitWorker": "use_32_bit_worker",
                "vnetRouteAllEnabled": "vnet_route_all_enabled",
                "websocketsEnabled": "websockets_enabled",
                "windowsFxVersion": "windows_fx_version",
                "workerCount": "worker_count"
            },
            "azure:appservice/WindowsFunctionAppSlotSiteConfigAppServiceLogs:WindowsFunctionAppSlotSiteConfigAppServiceLogs": {
                "diskQuotaMb": "disk_quota_mb",
                "retentionPeriodDays": "retention_period_days"
            },
            "azure:appservice/WindowsFunctionAppSlotSiteConfigApplicationStack:WindowsFunctionAppSlotSiteConfigApplicationStack": {
                "dotnetVersion": "dotnet_version",
                "javaVersion": "java_version",
                "nodeVersion": "node_version",
                "powershellCoreVersion": "powershell_core_version",
                "useCustomRuntime": "use_custom_runtime",
                "useDotnetIsolatedRuntime": "use_dotnet_isolated_runtime"
            },
            "azure:appservice/WindowsFunctionAppSlotSiteConfigCors:WindowsFunctionAppSlotSiteConfigCors": {
                "allowedOrigins": "allowed_origins",
                "supportCredentials": "support_credentials"
            },
            "azure:appservice/WindowsFunctionAppSlotSiteConfigIpRestriction:WindowsFunctionAppSlotSiteConfigIpRestriction": {
                "ipAddress": "ip_address",
                "serviceTag": "service_tag",
                "virtualNetworkSubnetId": "virtual_network_subnet_id"
            },
            "azure:appservice/WindowsFunctionAppSlotSiteConfigIpRestrictionHeaders:WindowsFunctionAppSlotSiteConfigIpRestrictionHeaders": {
                "xAzureFdids": "x_azure_fdid",
                "xFdHealthProbe": "x_fd_health_probe",
                "xForwardedFors": "x_forwarded_for",
                "xForwardedHosts": "x_forwarded_host"
            },
            "azure:appservice/WindowsFunctionAppSlotSiteConfigScmIpRestriction:WindowsFunctionAppSlotSiteConfigScmIpRestriction": {
                "ipAddress": "ip_address",
                "serviceTag": "service_tag",
                "virtualNetworkSubnetId": "virtual_network_subnet_id"
            },
            "azure:appservice/WindowsFunctionAppSlotSiteConfigScmIpRestrictionHeaders:WindowsFunctionAppSlotSiteConfigScmIpRestrictionHeaders": {
                "xAzureFdids": "x_azure_fdid",
                "xFdHealthProbe": "x_fd_health_probe",
                "xForwardedFors": "x_forwarded_for",
                "xForwardedHosts": "x_forwarded_host"
            },
            "azure:appservice/WindowsFunctionAppSlotStorageAccount:WindowsFunctionAppSlotStorageAccount": {
                "accessKey": "access_key",
                "accountName": "account_name",
                "mountPath": "mount_path",
                "shareName": "share_name"
            },
            "azure:appservice/WindowsFunctionAppStickySettings:WindowsFunctionAppStickySettings": {
                "appSettingNames": "app_setting_names",
                "connectionStringNames": "connection_string_names"
            },
            "azure:appservice/WindowsFunctionAppStorageAccount:WindowsFunctionAppStorageAccount": {
                "accessKey": "access_key",
                "accountName": "account_name",
                "mountPath": "mount_path",
                "shareName": "share_name"
            },
            "azure:appservice/WindowsWebAppAuthSettings:WindowsWebAppAuthSettings": {
                "activeDirectory": "active_directory",
                "additionalLoginParameters": "additional_login_parameters",
                "allowedExternalRedirectUrls": "allowed_external_redirect_urls",
                "defaultProvider": "default_provider",
                "runtimeVersion": "runtime_version",
                "tokenRefreshExtensionHours": "token_refresh_extension_hours",
                "tokenStoreEnabled": "token_store_enabled",
                "unauthenticatedClientAction": "unauthenticated_client_action"
            },
            "azure:appservice/WindowsWebAppAuthSettingsActiveDirectory:WindowsWebAppAuthSettingsActiveDirectory": {
                "allowedAudiences": "allowed_audiences",
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "clientSecretSettingName": "client_secret_setting_name"
            },
            "azure:appservice/WindowsWebAppAuthSettingsFacebook:WindowsWebAppAuthSettingsFacebook": {
                "appId": "app_id",
                "appSecret": "app_secret",
                "appSecretSettingName": "app_secret_setting_name",
                "oauthScopes": "oauth_scopes"
            },
            "azure:appservice/WindowsWebAppAuthSettingsGithub:WindowsWebAppAuthSettingsGithub": {
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "clientSecretSettingName": "client_secret_setting_name",
                "oauthScopes": "oauth_scopes"
            },
            "azure:appservice/WindowsWebAppAuthSettingsGoogle:WindowsWebAppAuthSettingsGoogle": {
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "clientSecretSettingName": "client_secret_setting_name",
                "oauthScopes": "oauth_scopes"
            },
            "azure:appservice/WindowsWebAppAuthSettingsMicrosoft:WindowsWebAppAuthSettingsMicrosoft": {
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "clientSecretSettingName": "client_secret_setting_name",
                "oauthScopes": "oauth_scopes"
            },
            "azure:appservice/WindowsWebAppAuthSettingsTwitter:WindowsWebAppAuthSettingsTwitter": {
                "consumerKey": "consumer_key",
                "consumerSecret": "consumer_secret",
                "consumerSecretSettingName": "consumer_secret_setting_name"
            },
            "azure:appservice/WindowsWebAppAuthSettingsV2:WindowsWebAppAuthSettingsV2": {
                "activeDirectoryV2": "active_directory_v2",
                "appleV2": "apple_v2",
                "authEnabled": "auth_enabled",
                "azureStaticWebAppV2": "azure_static_web_app_v2",
                "configFilePath": "config_file_path",
                "customOidcV2s": "custom_oidc_v2",
                "defaultProvider": "default_provider",
                "excludedPaths": "excluded_paths",
                "facebookV2": "facebook_v2",
                "forwardProxyConvention": "forward_proxy_convention",
                "forwardProxyCustomHostHeaderName": "forward_proxy_custom_host_header_name",
                "forwardProxyCustomSchemeHeaderName": "forward_proxy_custom_scheme_header_name",
                "githubV2": "github_v2",
                "googleV2": "google_v2",
                "httpRouteApiPrefix": "http_route_api_prefix",
                "microsoftV2": "microsoft_v2",
                "requireAuthentication": "require_authentication",
                "requireHttps": "require_https",
                "runtimeVersion": "runtime_version",
                "twitterV2": "twitter_v2",
                "unauthenticatedAction": "unauthenticated_action"
            },
            "azure:appservice/WindowsWebAppAuthSettingsV2ActiveDirectoryV2:WindowsWebAppAuthSettingsV2ActiveDirectoryV2": {
                "allowedApplications": "allowed_applications",
                "allowedAudiences": "allowed_audiences",
                "allowedGroups": "allowed_groups",
                "allowedIdentities": "allowed_identities",
                "clientId": "client_id",
                "clientSecretCertificateThumbprint": "client_secret_certificate_thumbprint",
                "clientSecretSettingName": "client_secret_setting_name",
                "jwtAllowedClientApplications": "jwt_allowed_client_applications",
                "jwtAllowedGroups": "jwt_allowed_groups",
                "loginParameters": "login_parameters",
                "tenantAuthEndpoint": "tenant_auth_endpoint",
                "wwwAuthenticationDisabled": "www_authentication_disabled"
            },
            "azure:appservice/WindowsWebAppAuthSettingsV2AppleV2:WindowsWebAppAuthSettingsV2AppleV2": {
                "clientId": "client_id",
                "clientSecretSettingName": "client_secret_setting_name",
                "loginScopes": "login_scopes"
            },
            "azure:appservice/WindowsWebAppAuthSettingsV2AzureStaticWebAppV2:WindowsWebAppAuthSettingsV2AzureStaticWebAppV2": {
                "clientId": "client_id"
            },
            "azure:appservice/WindowsWebAppAuthSettingsV2CustomOidcV2:WindowsWebAppAuthSettingsV2CustomOidcV2": {
                "authorisationEndpoint": "authorisation_endpoint",
                "certificationUri": "certification_uri",
                "clientCredentialMethod": "client_credential_method",
                "clientId": "client_id",
                "clientSecretSettingName": "client_secret_setting_name",
                "issuerEndpoint": "issuer_endpoint",
                "nameClaimType": "name_claim_type",
                "openidConfigurationEndpoint": "openid_configuration_endpoint",
                "tokenEndpoint": "token_endpoint"
            },
            "azure:appservice/WindowsWebAppAuthSettingsV2FacebookV2:WindowsWebAppAuthSettingsV2FacebookV2": {
                "appId": "app_id",
                "appSecretSettingName": "app_secret_setting_name",
                "graphApiVersion": "graph_api_version",
                "loginScopes": "login_scopes"
            },
            "azure:appservice/WindowsWebAppAuthSettingsV2GithubV2:WindowsWebAppAuthSettingsV2GithubV2": {
                "clientId": "client_id",
                "clientSecretSettingName": "client_secret_setting_name",
                "loginScopes": "login_scopes"
            },
            "azure:appservice/WindowsWebAppAuthSettingsV2GoogleV2:WindowsWebAppAuthSettingsV2GoogleV2": {
                "allowedAudiences": "allowed_audiences",
                "clientId": "client_id",
                "clientSecretSettingName": "client_secret_setting_name",
                "loginScopes": "login_scopes"
            },
            "azure:appservice/WindowsWebAppAuthSettingsV2Login:WindowsWebAppAuthSettingsV2Login": {
                "allowedExternalRedirectUrls": "allowed_external_redirect_urls",
                "cookieExpirationConvention": "cookie_expiration_convention",
                "cookieExpirationTime": "cookie_expiration_time",
                "logoutEndpoint": "logout_endpoint",
                "nonceExpirationTime": "nonce_expiration_time",
                "preserveUrlFragmentsForLogins": "preserve_url_fragments_for_logins",
                "tokenRefreshExtensionTime": "token_refresh_extension_time",
                "tokenStoreEnabled": "token_store_enabled",
                "tokenStorePath": "token_store_path",
                "tokenStoreSasSettingName": "token_store_sas_setting_name",
                "validateNonce": "validate_nonce"
            },
            "azure:appservice/WindowsWebAppAuthSettingsV2MicrosoftV2:WindowsWebAppAuthSettingsV2MicrosoftV2": {
                "allowedAudiences": "allowed_audiences",
                "clientId": "client_id",
                "clientSecretSettingName": "client_secret_setting_name",
                "loginScopes": "login_scopes"
            },
            "azure:appservice/WindowsWebAppAuthSettingsV2TwitterV2:WindowsWebAppAuthSettingsV2TwitterV2": {
                "consumerKey": "consumer_key",
                "consumerSecretSettingName": "consumer_secret_setting_name"
            },
            "azure:appservice/WindowsWebAppBackup:WindowsWebAppBackup": {
                "storageAccountUrl": "storage_account_url"
            },
            "azure:appservice/WindowsWebAppBackupSchedule:WindowsWebAppBackupSchedule": {
                "frequencyInterval": "frequency_interval",
                "frequencyUnit": "frequency_unit",
                "keepAtLeastOneBackup": "keep_at_least_one_backup",
                "lastExecutionTime": "last_execution_time",
                "retentionPeriodDays": "retention_period_days",
                "startTime": "start_time"
            },
            "azure:appservice/WindowsWebAppIdentity:WindowsWebAppIdentity": {
                "identityIds": "identity_ids",
                "principalId": "principal_id",
                "tenantId": "tenant_id"
            },
            "azure:appservice/WindowsWebAppLogs:WindowsWebAppLogs": {
                "applicationLogs": "application_logs",
                "detailedErrorMessages": "detailed_error_messages",
                "failedRequestTracing": "failed_request_tracing",
                "httpLogs": "http_logs"
            },
            "azure:appservice/WindowsWebAppLogsApplicationLogs:WindowsWebAppLogsApplicationLogs": {
                "azureBlobStorage": "azure_blob_storage",
                "fileSystemLevel": "file_system_level"
            },
            "azure:appservice/WindowsWebAppLogsApplicationLogsAzureBlobStorage:WindowsWebAppLogsApplicationLogsAzureBlobStorage": {
                "retentionInDays": "retention_in_days",
                "sasUrl": "sas_url"
            },
            "azure:appservice/WindowsWebAppLogsHttpLogs:WindowsWebAppLogsHttpLogs": {
                "azureBlobStorage": "azure_blob_storage",
                "fileSystem": "file_system"
            },
            "azure:appservice/WindowsWebAppLogsHttpLogsAzureBlobStorage:WindowsWebAppLogsHttpLogsAzureBlobStorage": {
                "retentionInDays": "retention_in_days",
                "sasUrl": "sas_url"
            },
            "azure:appservice/WindowsWebAppLogsHttpLogsFileSystem:WindowsWebAppLogsHttpLogsFileSystem": {
                "retentionInDays": "retention_in_days",
                "retentionInMb": "retention_in_mb"
            },
            "azure:appservice/WindowsWebAppSiteConfig:WindowsWebAppSiteConfig": {
                "alwaysOn": "always_on",
                "apiDefinitionUrl": "api_definition_url",
                "apiManagementApiId": "api_management_api_id",
                "appCommandLine": "app_command_line",
                "applicationStack": "application_stack",
                "autoHealEnabled": "auto_heal_enabled",
                "autoHealSetting": "auto_heal_setting",
                "containerRegistryManagedIdentityClientId": "container_registry_managed_identity_client_id",
                "containerRegistryUseManagedIdentity": "container_registry_use_managed_identity",
                "defaultDocuments": "default_documents",
                "detailedErrorLoggingEnabled": "detailed_error_logging_enabled",
                "ftpsState": "ftps_state",
                "healthCheckEvictionTimeInMin": "health_check_eviction_time_in_min",
                "healthCheckPath": "health_check_path",
                "http2Enabled": "http2_enabled",
                "ipRestrictions": "ip_restriction",
                "linuxFxVersion": "linux_fx_version",
                "loadBalancingMode": "load_balancing_mode",
                "localMysqlEnabled": "local_mysql_enabled",
                "managedPipelineMode": "managed_pipeline_mode",
                "minimumTlsVersion": "minimum_tls_version",
                "remoteDebuggingEnabled": "remote_debugging_enabled",
                "remoteDebuggingVersion": "remote_debugging_version",
                "scmIpRestrictions": "scm_ip_restriction",
                "scmMinimumTlsVersion": "scm_minimum_tls_version",
                "scmType": "scm_type",
                "scmUseMainIpRestriction": "scm_use_main_ip_restriction",
                "use32BitWorker": "use_32_bit_worker",
                "virtualApplications": "virtual_application",
                "vnetRouteAllEnabled": "vnet_route_all_enabled",
                "websocketsEnabled": "websockets_enabled",
                "windowsFxVersion": "windows_fx_version",
                "workerCount": "worker_count"
            },
            "azure:appservice/WindowsWebAppSiteConfigApplicationStack:WindowsWebAppSiteConfigApplicationStack": {
                "currentStack": "current_stack",
                "dockerContainerName": "docker_container_name",
                "dockerContainerRegistry": "docker_container_registry",
                "dockerContainerTag": "docker_container_tag",
                "dockerImageName": "docker_image_name",
                "dockerRegistryPassword": "docker_registry_password",
                "dockerRegistryUrl": "docker_registry_url",
                "dockerRegistryUsername": "docker_registry_username",
                "dotnetCoreVersion": "dotnet_core_version",
                "dotnetVersion": "dotnet_version",
                "javaContainer": "java_container",
                "javaContainerVersion": "java_container_version",
                "javaEmbeddedServerEnabled": "java_embedded_server_enabled",
                "javaVersion": "java_version",
                "nodeVersion": "node_version",
                "phpVersion": "php_version",
                "pythonVersion": "python_version",
                "tomcatVersion": "tomcat_version"
            },
            "azure:appservice/WindowsWebAppSiteConfigAutoHealSettingAction:WindowsWebAppSiteConfigAutoHealSettingAction": {
                "actionType": "action_type",
                "customAction": "custom_action",
                "minimumProcessExecutionTime": "minimum_process_execution_time"
            },
            "azure:appservice/WindowsWebAppSiteConfigAutoHealSettingTrigger:WindowsWebAppSiteConfigAutoHealSettingTrigger": {
                "privateMemoryKb": "private_memory_kb",
                "slowRequests": "slow_request",
                "statusCodes": "status_code"
            },
            "azure:appservice/WindowsWebAppSiteConfigAutoHealSettingTriggerSlowRequest:WindowsWebAppSiteConfigAutoHealSettingTriggerSlowRequest": {
                "timeTaken": "time_taken"
            },
            "azure:appservice/WindowsWebAppSiteConfigAutoHealSettingTriggerStatusCode:WindowsWebAppSiteConfigAutoHealSettingTriggerStatusCode": {
                "statusCodeRange": "status_code_range",
                "subStatus": "sub_status",
                "win32StatusCode": "win32_status_code"
            },
            "azure:appservice/WindowsWebAppSiteConfigCors:WindowsWebAppSiteConfigCors": {
                "allowedOrigins": "allowed_origins",
                "supportCredentials": "support_credentials"
            },
            "azure:appservice/WindowsWebAppSiteConfigIpRestriction:WindowsWebAppSiteConfigIpRestriction": {
                "ipAddress": "ip_address",
                "serviceTag": "service_tag",
                "virtualNetworkSubnetId": "virtual_network_subnet_id"
            },
            "azure:appservice/WindowsWebAppSiteConfigIpRestrictionHeaders:WindowsWebAppSiteConfigIpRestrictionHeaders": {
                "xAzureFdids": "x_azure_fdid",
                "xFdHealthProbe": "x_fd_health_probe",
                "xForwardedFors": "x_forwarded_for",
                "xForwardedHosts": "x_forwarded_host"
            },
            "azure:appservice/WindowsWebAppSiteConfigScmIpRestriction:WindowsWebAppSiteConfigScmIpRestriction": {
                "ipAddress": "ip_address",
                "serviceTag": "service_tag",
                "virtualNetworkSubnetId": "virtual_network_subnet_id"
            },
            "azure:appservice/WindowsWebAppSiteConfigScmIpRestrictionHeaders:WindowsWebAppSiteConfigScmIpRestrictionHeaders": {
                "xAzureFdids": "x_azure_fdid",
                "xFdHealthProbe": "x_fd_health_probe",
                "xForwardedFors": "x_forwarded_for",
                "xForwardedHosts": "x_forwarded_host"
            },
            "azure:appservice/WindowsWebAppSiteConfigVirtualApplication:WindowsWebAppSiteConfigVirtualApplication": {
                "physicalPath": "physical_path",
                "virtualDirectories": "virtual_directory",
                "virtualPath": "virtual_path"
            },
            "azure:appservice/WindowsWebAppSiteConfigVirtualApplicationVirtualDirectory:WindowsWebAppSiteConfigVirtualApplicationVirtualDirectory": {
                "physicalPath": "physical_path",
                "virtualPath": "virtual_path"
            },
            "azure:appservice/WindowsWebAppSlotAuthSettings:WindowsWebAppSlotAuthSettings": {
                "activeDirectory": "active_directory",
                "additionalLoginParameters": "additional_login_parameters",
                "allowedExternalRedirectUrls": "allowed_external_redirect_urls",
                "defaultProvider": "default_provider",
                "runtimeVersion": "runtime_version",
                "tokenRefreshExtensionHours": "token_refresh_extension_hours",
                "tokenStoreEnabled": "token_store_enabled",
                "unauthenticatedClientAction": "unauthenticated_client_action"
            },
            "azure:appservice/WindowsWebAppSlotAuthSettingsActiveDirectory:WindowsWebAppSlotAuthSettingsActiveDirectory": {
                "allowedAudiences": "allowed_audiences",
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "clientSecretSettingName": "client_secret_setting_name"
            },
            "azure:appservice/WindowsWebAppSlotAuthSettingsFacebook:WindowsWebAppSlotAuthSettingsFacebook": {
                "appId": "app_id",
                "appSecret": "app_secret",
                "appSecretSettingName": "app_secret_setting_name",
                "oauthScopes": "oauth_scopes"
            },
            "azure:appservice/WindowsWebAppSlotAuthSettingsGithub:WindowsWebAppSlotAuthSettingsGithub": {
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "clientSecretSettingName": "client_secret_setting_name",
                "oauthScopes": "oauth_scopes"
            },
            "azure:appservice/WindowsWebAppSlotAuthSettingsGoogle:WindowsWebAppSlotAuthSettingsGoogle": {
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "clientSecretSettingName": "client_secret_setting_name",
                "oauthScopes": "oauth_scopes"
            },
            "azure:appservice/WindowsWebAppSlotAuthSettingsMicrosoft:WindowsWebAppSlotAuthSettingsMicrosoft": {
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "clientSecretSettingName": "client_secret_setting_name",
                "oauthScopes": "oauth_scopes"
            },
            "azure:appservice/WindowsWebAppSlotAuthSettingsTwitter:WindowsWebAppSlotAuthSettingsTwitter": {
                "consumerKey": "consumer_key",
                "consumerSecret": "consumer_secret",
                "consumerSecretSettingName": "consumer_secret_setting_name"
            },
            "azure:appservice/WindowsWebAppSlotAuthSettingsV2:WindowsWebAppSlotAuthSettingsV2": {
                "activeDirectoryV2": "active_directory_v2",
                "appleV2": "apple_v2",
                "authEnabled": "auth_enabled",
                "azureStaticWebAppV2": "azure_static_web_app_v2",
                "configFilePath": "config_file_path",
                "customOidcV2s": "custom_oidc_v2",
                "defaultProvider": "default_provider",
                "excludedPaths": "excluded_paths",
                "facebookV2": "facebook_v2",
                "forwardProxyConvention": "forward_proxy_convention",
                "forwardProxyCustomHostHeaderName": "forward_proxy_custom_host_header_name",
                "forwardProxyCustomSchemeHeaderName": "forward_proxy_custom_scheme_header_name",
                "githubV2": "github_v2",
                "googleV2": "google_v2",
                "httpRouteApiPrefix": "http_route_api_prefix",
                "microsoftV2": "microsoft_v2",
                "requireAuthentication": "require_authentication",
                "requireHttps": "require_https",
                "runtimeVersion": "runtime_version",
                "twitterV2": "twitter_v2",
                "unauthenticatedAction": "unauthenticated_action"
            },
            "azure:appservice/WindowsWebAppSlotAuthSettingsV2ActiveDirectoryV2:WindowsWebAppSlotAuthSettingsV2ActiveDirectoryV2": {
                "allowedApplications": "allowed_applications",
                "allowedAudiences": "allowed_audiences",
                "allowedGroups": "allowed_groups",
                "allowedIdentities": "allowed_identities",
                "clientId": "client_id",
                "clientSecretCertificateThumbprint": "client_secret_certificate_thumbprint",
                "clientSecretSettingName": "client_secret_setting_name",
                "jwtAllowedClientApplications": "jwt_allowed_client_applications",
                "jwtAllowedGroups": "jwt_allowed_groups",
                "loginParameters": "login_parameters",
                "tenantAuthEndpoint": "tenant_auth_endpoint",
                "wwwAuthenticationDisabled": "www_authentication_disabled"
            },
            "azure:appservice/WindowsWebAppSlotAuthSettingsV2AppleV2:WindowsWebAppSlotAuthSettingsV2AppleV2": {
                "clientId": "client_id",
                "clientSecretSettingName": "client_secret_setting_name",
                "loginScopes": "login_scopes"
            },
            "azure:appservice/WindowsWebAppSlotAuthSettingsV2AzureStaticWebAppV2:WindowsWebAppSlotAuthSettingsV2AzureStaticWebAppV2": {
                "clientId": "client_id"
            },
            "azure:appservice/WindowsWebAppSlotAuthSettingsV2CustomOidcV2:WindowsWebAppSlotAuthSettingsV2CustomOidcV2": {
                "authorisationEndpoint": "authorisation_endpoint",
                "certificationUri": "certification_uri",
                "clientCredentialMethod": "client_credential_method",
                "clientId": "client_id",
                "clientSecretSettingName": "client_secret_setting_name",
                "issuerEndpoint": "issuer_endpoint",
                "nameClaimType": "name_claim_type",
                "openidConfigurationEndpoint": "openid_configuration_endpoint",
                "tokenEndpoint": "token_endpoint"
            },
            "azure:appservice/WindowsWebAppSlotAuthSettingsV2FacebookV2:WindowsWebAppSlotAuthSettingsV2FacebookV2": {
                "appId": "app_id",
                "appSecretSettingName": "app_secret_setting_name",
                "graphApiVersion": "graph_api_version",
                "loginScopes": "login_scopes"
            },
            "azure:appservice/WindowsWebAppSlotAuthSettingsV2GithubV2:WindowsWebAppSlotAuthSettingsV2GithubV2": {
                "clientId": "client_id",
                "clientSecretSettingName": "client_secret_setting_name",
                "loginScopes": "login_scopes"
            },
            "azure:appservice/WindowsWebAppSlotAuthSettingsV2GoogleV2:WindowsWebAppSlotAuthSettingsV2GoogleV2": {
                "allowedAudiences": "allowed_audiences",
                "clientId": "client_id",
                "clientSecretSettingName": "client_secret_setting_name",
                "loginScopes": "login_scopes"
            },
            "azure:appservice/WindowsWebAppSlotAuthSettingsV2Login:WindowsWebAppSlotAuthSettingsV2Login": {
                "allowedExternalRedirectUrls": "allowed_external_redirect_urls",
                "cookieExpirationConvention": "cookie_expiration_convention",
                "cookieExpirationTime": "cookie_expiration_time",
                "logoutEndpoint": "logout_endpoint",
                "nonceExpirationTime": "nonce_expiration_time",
                "preserveUrlFragmentsForLogins": "preserve_url_fragments_for_logins",
                "tokenRefreshExtensionTime": "token_refresh_extension_time",
                "tokenStoreEnabled": "token_store_enabled",
                "tokenStorePath": "token_store_path",
                "tokenStoreSasSettingName": "token_store_sas_setting_name",
                "validateNonce": "validate_nonce"
            },
            "azure:appservice/WindowsWebAppSlotAuthSettingsV2MicrosoftV2:WindowsWebAppSlotAuthSettingsV2MicrosoftV2": {
                "allowedAudiences": "allowed_audiences",
                "clientId": "client_id",
                "clientSecretSettingName": "client_secret_setting_name",
                "loginScopes": "login_scopes"
            },
            "azure:appservice/WindowsWebAppSlotAuthSettingsV2TwitterV2:WindowsWebAppSlotAuthSettingsV2TwitterV2": {
                "consumerKey": "consumer_key",
                "consumerSecretSettingName": "consumer_secret_setting_name"
            },
            "azure:appservice/WindowsWebAppSlotBackup:WindowsWebAppSlotBackup": {
                "storageAccountUrl": "storage_account_url"
            },
            "azure:appservice/WindowsWebAppSlotBackupSchedule:WindowsWebAppSlotBackupSchedule": {
                "frequencyInterval": "frequency_interval",
                "frequencyUnit": "frequency_unit",
                "keepAtLeastOneBackup": "keep_at_least_one_backup",
                "lastExecutionTime": "last_execution_time",
                "retentionPeriodDays": "retention_period_days",
                "startTime": "start_time"
            },
            "azure:appservice/WindowsWebAppSlotIdentity:WindowsWebAppSlotIdentity": {
                "identityIds": "identity_ids",
                "principalId": "principal_id",
                "tenantId": "tenant_id"
            },
            "azure:appservice/WindowsWebAppSlotLogs:WindowsWebAppSlotLogs": {
                "applicationLogs": "application_logs",
                "detailedErrorMessages": "detailed_error_messages",
                "failedRequestTracing": "failed_request_tracing",
                "httpLogs": "http_logs"
            },
            "azure:appservice/WindowsWebAppSlotLogsApplicationLogs:WindowsWebAppSlotLogsApplicationLogs": {
                "azureBlobStorage": "azure_blob_storage",
                "fileSystemLevel": "file_system_level"
            },
            "azure:appservice/WindowsWebAppSlotLogsApplicationLogsAzureBlobStorage:WindowsWebAppSlotLogsApplicationLogsAzureBlobStorage": {
                "retentionInDays": "retention_in_days",
                "sasUrl": "sas_url"
            },
            "azure:appservice/WindowsWebAppSlotLogsHttpLogs:WindowsWebAppSlotLogsHttpLogs": {
                "azureBlobStorage": "azure_blob_storage",
                "fileSystem": "file_system"
            },
            "azure:appservice/WindowsWebAppSlotLogsHttpLogsAzureBlobStorage:WindowsWebAppSlotLogsHttpLogsAzureBlobStorage": {
                "retentionInDays": "retention_in_days",
                "sasUrl": "sas_url"
            },
            "azure:appservice/WindowsWebAppSlotLogsHttpLogsFileSystem:WindowsWebAppSlotLogsHttpLogsFileSystem": {
                "retentionInDays": "retention_in_days",
                "retentionInMb": "retention_in_mb"
            },
            "azure:appservice/WindowsWebAppSlotSiteConfig:WindowsWebAppSlotSiteConfig": {
                "alwaysOn": "always_on",
                "apiDefinitionUrl": "api_definition_url",
                "apiManagementApiId": "api_management_api_id",
                "appCommandLine": "app_command_line",
                "applicationStack": "application_stack",
                "autoHealEnabled": "auto_heal_enabled",
                "autoHealSetting": "auto_heal_setting",
                "autoSwapSlotName": "auto_swap_slot_name",
                "containerRegistryManagedIdentityClientId": "container_registry_managed_identity_client_id",
                "containerRegistryUseManagedIdentity": "container_registry_use_managed_identity",
                "defaultDocuments": "default_documents",
                "detailedErrorLoggingEnabled": "detailed_error_logging_enabled",
                "ftpsState": "ftps_state",
                "healthCheckEvictionTimeInMin": "health_check_eviction_time_in_min",
                "healthCheckPath": "health_check_path",
                "http2Enabled": "http2_enabled",
                "ipRestrictions": "ip_restriction",
                "loadBalancingMode": "load_balancing_mode",
                "localMysqlEnabled": "local_mysql_enabled",
                "managedPipelineMode": "managed_pipeline_mode",
                "minimumTlsVersion": "minimum_tls_version",
                "remoteDebuggingEnabled": "remote_debugging_enabled",
                "remoteDebuggingVersion": "remote_debugging_version",
                "scmIpRestrictions": "scm_ip_restriction",
                "scmMinimumTlsVersion": "scm_minimum_tls_version",
                "scmType": "scm_type",
                "scmUseMainIpRestriction": "scm_use_main_ip_restriction",
                "use32BitWorker": "use_32_bit_worker",
                "virtualApplications": "virtual_application",
                "vnetRouteAllEnabled": "vnet_route_all_enabled",
                "websocketsEnabled": "websockets_enabled",
                "windowsFxVersion": "windows_fx_version",
                "workerCount": "worker_count"
            },
            "azure:appservice/WindowsWebAppSlotSiteConfigApplicationStack:WindowsWebAppSlotSiteConfigApplicationStack": {
                "currentStack": "current_stack",
                "dockerContainerName": "docker_container_name",
                "dockerContainerRegistry": "docker_container_registry",
                "dockerContainerTag": "docker_container_tag",
                "dockerImageName": "docker_image_name",
                "dockerRegistryPassword": "docker_registry_password",
                "dockerRegistryUrl": "docker_registry_url",
                "dockerRegistryUsername": "docker_registry_username",
                "dotnetCoreVersion": "dotnet_core_version",
                "dotnetVersion": "dotnet_version",
                "javaContainer": "java_container",
                "javaContainerVersion": "java_container_version",
                "javaEmbeddedServerEnabled": "java_embedded_server_enabled",
                "javaVersion": "java_version",
                "nodeVersion": "node_version",
                "phpVersion": "php_version",
                "pythonVersion": "python_version",
                "tomcatVersion": "tomcat_version"
            },
            "azure:appservice/WindowsWebAppSlotSiteConfigAutoHealSettingAction:WindowsWebAppSlotSiteConfigAutoHealSettingAction": {
                "actionType": "action_type",
                "customAction": "custom_action",
                "minimumProcessExecutionTime": "minimum_process_execution_time"
            },
            "azure:appservice/WindowsWebAppSlotSiteConfigAutoHealSettingTrigger:WindowsWebAppSlotSiteConfigAutoHealSettingTrigger": {
                "privateMemoryKb": "private_memory_kb",
                "slowRequests": "slow_request",
                "statusCodes": "status_code"
            },
            "azure:appservice/WindowsWebAppSlotSiteConfigAutoHealSettingTriggerSlowRequest:WindowsWebAppSlotSiteConfigAutoHealSettingTriggerSlowRequest": {
                "timeTaken": "time_taken"
            },
            "azure:appservice/WindowsWebAppSlotSiteConfigAutoHealSettingTriggerStatusCode:WindowsWebAppSlotSiteConfigAutoHealSettingTriggerStatusCode": {
                "statusCodeRange": "status_code_range",
                "subStatus": "sub_status",
                "win32StatusCode": "win32_status_code"
            },
            "azure:appservice/WindowsWebAppSlotSiteConfigCors:WindowsWebAppSlotSiteConfigCors": {
                "allowedOrigins": "allowed_origins",
                "supportCredentials": "support_credentials"
            },
            "azure:appservice/WindowsWebAppSlotSiteConfigIpRestriction:WindowsWebAppSlotSiteConfigIpRestriction": {
                "ipAddress": "ip_address",
                "serviceTag": "service_tag",
                "virtualNetworkSubnetId": "virtual_network_subnet_id"
            },
            "azure:appservice/WindowsWebAppSlotSiteConfigIpRestrictionHeaders:WindowsWebAppSlotSiteConfigIpRestrictionHeaders": {
                "xAzureFdids": "x_azure_fdid",
                "xFdHealthProbe": "x_fd_health_probe",
                "xForwardedFors": "x_forwarded_for",
                "xForwardedHosts": "x_forwarded_host"
            },
            "azure:appservice/WindowsWebAppSlotSiteConfigScmIpRestriction:WindowsWebAppSlotSiteConfigScmIpRestriction": {
                "ipAddress": "ip_address",
                "serviceTag": "service_tag",
                "virtualNetworkSubnetId": "virtual_network_subnet_id"
            },
            "azure:appservice/WindowsWebAppSlotSiteConfigScmIpRestrictionHeaders:WindowsWebAppSlotSiteConfigScmIpRestrictionHeaders": {
                "xAzureFdids": "x_azure_fdid",
                "xFdHealthProbe": "x_fd_health_probe",
                "xForwardedFors": "x_forwarded_for",
                "xForwardedHosts": "x_forwarded_host"
            },
            "azure:appservice/WindowsWebAppSlotSiteConfigVirtualApplication:WindowsWebAppSlotSiteConfigVirtualApplication": {
                "physicalPath": "physical_path",
                "virtualDirectories": "virtual_directory",
                "virtualPath": "virtual_path"
            },
            "azure:appservice/WindowsWebAppSlotSiteConfigVirtualApplicationVirtualDirectory:WindowsWebAppSlotSiteConfigVirtualApplicationVirtualDirectory": {
                "physicalPath": "physical_path",
                "virtualPath": "virtual_path"
            },
            "azure:appservice/WindowsWebAppSlotStorageAccount:WindowsWebAppSlotStorageAccount": {
                "accessKey": "access_key",
                "accountName": "account_name",
                "mountPath": "mount_path",
                "shareName": "share_name"
            },
            "azure:appservice/WindowsWebAppStickySettings:WindowsWebAppStickySettings": {
                "appSettingNames": "app_setting_names",
                "connectionStringNames": "connection_string_names"
            },
            "azure:appservice/WindowsWebAppStorageAccount:WindowsWebAppStorageAccount": {
                "accessKey": "access_key",
                "accountName": "account_name",
                "mountPath": "mount_path",
                "shareName": "share_name"
            },
            "azure:appservice/activeSlot:ActiveSlot": {
                "appServiceName": "app_service_name",
                "appServiceSlotName": "app_service_slot_name",
                "resourceGroupName": "resource_group_name"
            },
            "azure:appservice/appConnection:AppConnection": {
                "clientType": "client_type",
                "functionAppId": "function_app_id",
                "secretStore": "secret_store",
                "targetResourceId": "target_resource_id",
                "vnetSolution": "vnet_solution"
            },
            "azure:appservice/appService:AppService": {
                "appServicePlanId": "app_service_plan_id",
                "appSettings": "app_settings",
                "authSettings": "auth_settings",
                "clientAffinityEnabled": "client_affinity_enabled",
                "clientCertEnabled": "client_cert_enabled",
                "clientCertMode": "client_cert_mode",
                "connectionStrings": "connection_string",
                "customDomainVerificationId": "custom_domain_verification_id",
                "defaultSiteHostname": "default_site_hostname",
                "httpsOnly": "https_only",
                "keyVaultReferenceIdentityId": "key_vault_reference_identity_id",
                "outboundIpAddressLists": "outbound_ip_address_list",
                "outboundIpAddresses": "outbound_ip_addresses",
                "possibleOutboundIpAddressLists": "possible_outbound_ip_address_list",
                "possibleOutboundIpAddresses": "possible_outbound_ip_addresses",
                "resourceGroupName": "resource_group_name",
                "siteConfig": "site_config",
                "siteCredentials": "site_credential",
                "sourceControl": "source_control",
                "storageAccounts": "storage_account"
            },
            "azure:appservice/certificate:Certificate": {
                "appServicePlanId": "app_service_plan_id",
                "expirationDate": "expiration_date",
                "friendlyName": "friendly_name",
                "hostNames": "host_names",
                "hostingEnvironmentProfileId": "hosting_environment_profile_id",
                "issueDate": "issue_date",
                "keyVaultSecretId": "key_vault_secret_id",
                "pfxBlob": "pfx_blob",
                "resourceGroupName": "resource_group_name",
                "subjectName": "subject_name"
            },
            "azure:appservice/certificateBinding:CertificateBinding": {
                "appServiceName": "app_service_name",
                "certificateId": "certificate_id",
                "hostnameBindingId": "hostname_binding_id",
                "sslState": "ssl_state"
            },
            "azure:appservice/certificateOrder:CertificateOrder": {
                "appServiceCertificateNotRenewableReasons": "app_service_certificate_not_renewable_reasons",
                "autoRenew": "auto_renew",
                "distinguishedName": "distinguished_name",
                "domainVerificationToken": "domain_verification_token",
                "expirationTime": "expiration_time",
                "intermediateThumbprint": "intermediate_thumbprint",
                "isPrivateKeyExternal": "is_private_key_external",
                "keySize": "key_size",
                "productType": "product_type",
                "resourceGroupName": "resource_group_name",
                "rootThumbprint": "root_thumbprint",
                "signedCertificateThumbprint": "signed_certificate_thumbprint",
                "validityInYears": "validity_in_years"
            },
            "azure:appservice/connection:Connection": {
                "appServiceId": "app_service_id",
                "clientType": "client_type",
                "secretStore": "secret_store",
                "targetResourceId": "target_resource_id",
                "vnetSolution": "vnet_solution"
            },
            "azure:appservice/customHostnameBinding:CustomHostnameBinding": {
                "appServiceName": "app_service_name",
                "resourceGroupName": "resource_group_name",
                "sslState": "ssl_state",
                "virtualIp": "virtual_ip"
            },
            "azure:appservice/environment:Environment": {
                "allowedUserIpCidrs": "allowed_user_ip_cidrs",
                "clusterSettings": "cluster_setting",
                "frontEndScaleFactor": "front_end_scale_factor",
                "internalIpAddress": "internal_ip_address",
                "internalLoadBalancingMode": "internal_load_balancing_mode",
                "outboundIpAddresses": "outbound_ip_addresses",
                "pricingTier": "pricing_tier",
                "resourceGroupName": "resource_group_name",
                "serviceIpAddress": "service_ip_address",
                "subnetId": "subnet_id"
            },
            "azure:appservice/environmentV3:EnvironmentV3": {
                "allowNewPrivateEndpointConnections": "allow_new_private_endpoint_connections",
                "clusterSettings": "cluster_setting",
                "dedicatedHostCount": "dedicated_host_count",
                "dnsSuffix": "dns_suffix",
                "externalInboundIpAddresses": "external_inbound_ip_addresses",
                "inboundNetworkDependencies": "inbound_network_dependencies",
                "internalInboundIpAddresses": "internal_inbound_ip_addresses",
                "internalLoadBalancingMode": "internal_load_balancing_mode",
                "ipSslAddressCount": "ip_ssl_address_count",
                "linuxOutboundIpAddresses": "linux_outbound_ip_addresses",
                "pricingTier": "pricing_tier",
                "resourceGroupName": "resource_group_name",
                "subnetId": "subnet_id",
                "windowsOutboundIpAddresses": "windows_outbound_ip_addresses",
                "zoneRedundant": "zone_redundant"
            },
            "azure:appservice/functionApp:FunctionApp": {
                "appServicePlanId": "app_service_plan_id",
                "appSettings": "app_settings",
                "authSettings": "auth_settings",
                "clientCertMode": "client_cert_mode",
                "connectionStrings": "connection_string",
                "customDomainVerificationId": "custom_domain_verification_id",
                "dailyMemoryTimeQuota": "daily_memory_time_quota",
                "defaultHostname": "default_hostname",
                "enableBuiltinLogging": "enable_builtin_logging",
                "httpsOnly": "https_only",
                "keyVaultReferenceIdentityId": "key_vault_reference_identity_id",
                "osType": "os_type",
                "outboundIpAddresses": "outbound_ip_addresses",
                "possibleOutboundIpAddresses": "possible_outbound_ip_addresses",
                "resourceGroupName": "resource_group_name",
                "siteConfig": "site_config",
                "siteCredentials": "site_credential",
                "sourceControl": "source_control",
                "storageAccountAccessKey": "storage_account_access_key",
                "storageAccountName": "storage_account_name"
            },
            "azure:appservice/functionAppActiveSlot:FunctionAppActiveSlot": {
                "lastSuccessfulSwap": "last_successful_swap",
                "overwriteNetworkConfig": "overwrite_network_config",
                "slotId": "slot_id"
            },
            "azure:appservice/functionAppFunction:FunctionAppFunction": {
                "configJson": "config_json",
                "configUrl": "config_url",
                "files": "file",
                "functionAppId": "function_app_id",
                "invocationUrl": "invocation_url",
                "scriptRootPathUrl": "script_root_path_url",
                "scriptUrl": "script_url",
                "secretsFileUrl": "secrets_file_url",
                "testData": "test_data",
                "testDataUrl": "test_data_url"
            },
            "azure:appservice/functionAppHybridConnection:FunctionAppHybridConnection": {
                "functionAppId": "function_app_id",
                "namespaceName": "namespace_name",
                "relayId": "relay_id",
                "relayName": "relay_name",
                "sendKeyName": "send_key_name",
                "sendKeyValue": "send_key_value",
                "serviceBusNamespace": "service_bus_namespace",
                "serviceBusSuffix": "service_bus_suffix"
            },
            "azure:appservice/functionAppSlot:FunctionAppSlot": {
                "appServicePlanId": "app_service_plan_id",
                "appSettings": "app_settings",
                "authSettings": "auth_settings",
                "connectionStrings": "connection_string",
                "dailyMemoryTimeQuota": "daily_memory_time_quota",
                "defaultHostname": "default_hostname",
                "enableBuiltinLogging": "enable_builtin_logging",
                "functionAppName": "function_app_name",
                "httpsOnly": "https_only",
                "osType": "os_type",
                "outboundIpAddresses": "outbound_ip_addresses",
                "possibleOutboundIpAddresses": "possible_outbound_ip_addresses",
                "resourceGroupName": "resource_group_name",
                "siteConfig": "site_config",
                "siteCredentials": "site_credential",
                "storageAccountAccessKey": "storage_account_access_key",
                "storageAccountName": "storage_account_name"
            },
            "azure:appservice/getAppService:getAppService": {
                "appServicePlanId": "app_service_plan_id",
                "appSettings": "app_settings",
                "clientAffinityEnabled": "client_affinity_enabled",
                "clientCertEnabled": "client_cert_enabled",
                "connectionStrings": "connection_string",
                "customDomainVerificationId": "custom_domain_verification_id",
                "defaultSiteHostname": "default_site_hostname",
                "httpsOnly": "https_only",
                "outboundIpAddressLists": "outbound_ip_address_list",
                "outboundIpAddresses": "outbound_ip_addresses",
                "possibleOutboundIpAddressLists": "possible_outbound_ip_address_list",
                "possibleOutboundIpAddresses": "possible_outbound_ip_addresses",
                "resourceGroupName": "resource_group_name",
                "siteConfigs": "site_config",
                "siteCredentials": "site_credential",
                "sourceControls": "source_control"
            },
            "azure:appservice/getAppServiceEnvironment:getAppServiceEnvironment": {
                "clusterSettings": "cluster_setting",
                "frontEndScaleFactor": "front_end_scale_factor",
                "internalIpAddress": "internal_ip_address",
                "outboundIpAddresses": "outbound_ip_addresses",
                "pricingTier": "pricing_tier",
                "resourceGroupName": "resource_group_name",
                "serviceIpAddress": "service_ip_address"
            },
            "azure:appservice/getAppServicePlan:getAppServicePlan": {
                "appServiceEnvironmentId": "app_service_environment_id",
                "isXenon": "is_xenon",
                "maximumElasticWorkerCount": "maximum_elastic_worker_count",
                "maximumNumberOfWorkers": "maximum_number_of_workers",
                "perSiteScaling": "per_site_scaling",
                "resourceGroupName": "resource_group_name",
                "zoneRedundant": "zone_redundant"
            },
            "azure:appservice/getAppServiceSiteConfig:getAppServiceSiteConfig": {
                "acrUseManagedIdentityCredentials": "acr_use_managed_identity_credentials",
                "acrUserManagedIdentityClientId": "acr_user_managed_identity_client_id",
                "alwaysOn": "always_on",
                "appCommandLine": "app_command_line",
                "defaultDocuments": "default_documents",
                "dotnetFrameworkVersion": "dotnet_framework_version",
                "ftpsState": "ftps_state",
                "healthCheckPath": "health_check_path",
                "http2Enabled": "http2_enabled",
                "ipRestrictions": "ip_restriction",
                "javaContainer": "java_container",
                "javaContainerVersion": "java_container_version",
                "javaVersion": "java_version",
                "linuxFxVersion": "linux_fx_version",
                "localMysqlEnabled": "local_mysql_enabled",
                "managedPipelineMode": "managed_pipeline_mode",
                "minTlsVersion": "min_tls_version",
                "numberOfWorkers": "number_of_workers",
                "phpVersion": "php_version",
                "pythonVersion": "python_version",
                "remoteDebuggingEnabled": "remote_debugging_enabled",
                "remoteDebuggingVersion": "remote_debugging_version",
                "scmIpRestrictions": "scm_ip_restriction",
                "scmType": "scm_type",
                "scmUseMainIpRestriction": "scm_use_main_ip_restriction",
                "use32BitWorkerProcess": "use_32_bit_worker_process",
                "vnetRouteAllEnabled": "vnet_route_all_enabled",
                "websocketsEnabled": "websockets_enabled",
                "windowsFxVersion": "windows_fx_version"
            },
            "azure:appservice/getAppServiceSiteConfigCor:getAppServiceSiteConfigCor": {
                "allowedOrigins": "allowed_origins",
                "supportCredentials": "support_credentials"
            },
            "azure:appservice/getAppServiceSiteConfigIpRestriction:getAppServiceSiteConfigIpRestriction": {
                "ipAddress": "ip_address",
                "serviceTag": "service_tag",
                "virtualNetworkSubnetId": "virtual_network_subnet_id"
            },
            "azure:appservice/getAppServiceSiteConfigIpRestrictionHeaders:getAppServiceSiteConfigIpRestrictionHeaders": {
                "xAzureFdids": "x_azure_fdid",
                "xFdHealthProbes": "x_fd_health_probe",
                "xForwardedFors": "x_forwarded_for",
                "xForwardedHosts": "x_forwarded_host"
            },
            "azure:appservice/getAppServiceSiteConfigScmIpRestriction:getAppServiceSiteConfigScmIpRestriction": {
                "ipAddress": "ip_address",
                "serviceTag": "service_tag",
                "virtualNetworkSubnetId": "virtual_network_subnet_id"
            },
            "azure:appservice/getAppServiceSiteConfigScmIpRestrictionHeaders:getAppServiceSiteConfigScmIpRestrictionHeaders": {
                "xAzureFdids": "x_azure_fdid",
                "xFdHealthProbes": "x_fd_health_probe",
                "xForwardedFors": "x_forwarded_for",
                "xForwardedHosts": "x_forwarded_host"
            },
            "azure:appservice/getAppServiceSourceControl:getAppServiceSourceControl": {
                "manualIntegration": "manual_integration",
                "repoUrl": "repo_url",
                "rollbackEnabled": "rollback_enabled",
                "useMercurial": "use_mercurial"
            },
            "azure:appservice/getCertificate:getCertificate": {
                "expirationDate": "expiration_date",
                "friendlyName": "friendly_name",
                "hostNames": "host_names",
                "issueDate": "issue_date",
                "resourceGroupName": "resource_group_name",
                "subjectName": "subject_name"
            },
            "azure:appservice/getCertificateOrder:getCertificateOrder": {
                "appServiceCertificateNotRenewableReasons": "app_service_certificate_not_renewable_reasons",
                "autoRenew": "auto_renew",
                "distinguishedName": "distinguished_name",
                "domainVerificationToken": "domain_verification_token",
                "expirationTime": "expiration_time",
                "intermediateThumbprint": "intermediate_thumbprint",
                "isPrivateKeyExternal": "is_private_key_external",
                "keySize": "key_size",
                "productType": "product_type",
                "resourceGroupName": "resource_group_name",
                "rootThumbprint": "root_thumbprint",
                "signedCertificateThumbprint": "signed_certificate_thumbprint",
                "validityInYears": "validity_in_years"
            },
            "azure:appservice/getCertificateOrderCertificate:getCertificateOrderCertificate": {
                "certificateName": "certificate_name",
                "keyVaultId": "key_vault_id",
                "keyVaultSecretName": "key_vault_secret_name",
                "provisioningState": "provisioning_state"
            },
            "azure:appservice/getEnvironmentV3:getEnvironmentV3": {
                "allowNewPrivateEndpointConnections": "allow_new_private_endpoint_connections",
                "clusterSettings": "cluster_setting",
                "dedicatedHostCount": "dedicated_host_count",
                "dnsSuffix": "dns_suffix",
                "externalInboundIpAddresses": "external_inbound_ip_addresses",
                "inboundNetworkDependencies": "inbound_network_dependencies",
                "internalInboundIpAddresses": "internal_inbound_ip_addresses",
                "internalLoadBalancingMode": "internal_load_balancing_mode",
                "ipSslAddressCount": "ip_ssl_address_count",
                "linuxOutboundIpAddresses": "linux_outbound_ip_addresses",
                "pricingTier": "pricing_tier",
                "resourceGroupName": "resource_group_name",
                "subnetId": "subnet_id",
                "windowsOutboundIpAddresses": "windows_outbound_ip_addresses",
                "zoneRedundant": "zone_redundant"
            },
            "azure:appservice/getEnvironmentV3InboundNetworkDependency:getEnvironmentV3InboundNetworkDependency": {
                "ipAddresses": "ip_addresses"
            },
            "azure:appservice/getFunctionApp:getFunctionApp": {
                "appServicePlanId": "app_service_plan_id",
                "appSettings": "app_settings",
                "clientCertMode": "client_cert_mode",
                "connectionStrings": "connection_string",
                "customDomainVerificationId": "custom_domain_verification_id",
                "defaultHostname": "default_hostname",
                "identities": "identity",
                "osType": "os_type",
                "outboundIpAddresses": "outbound_ip_addresses",
                "possibleOutboundIpAddresses": "possible_outbound_ip_addresses",
                "resourceGroupName": "resource_group_name",
                "siteConfigs": "site_config",
                "siteCredentials": "site_credential",
                "sourceControls": "source_control"
            },
            "azure:appservice/getFunctionAppHostKeys:getFunctionAppHostKeys": {
                "blobsExtensionKey": "blobs_extension_key",
                "defaultFunctionKey": "default_function_key",
                "durabletaskExtensionKey": "durabletask_extension_key",
                "eventGridExtensionConfigKey": "event_grid_extension_config_key",
                "primaryKey": "primary_key",
                "resourceGroupName": "resource_group_name",
                "signalrExtensionKey": "signalr_extension_key",
                "webpubsubExtensionKey": "webpubsub_extension_key"
            },
            "azure:appservice/getFunctionAppIdentity:getFunctionAppIdentity": {
                "identityIds": "identity_ids",
                "principalId": "principal_id",
                "tenantId": "tenant_id"
            },
            "azure:appservice/getFunctionAppSiteConfig:getFunctionAppSiteConfig": {
                "alwaysOn": "always_on",
                "appScaleLimit": "app_scale_limit",
                "autoSwapSlotName": "auto_swap_slot_name",
                "dotnetFrameworkVersion": "dotnet_framework_version",
                "elasticInstanceMinimum": "elastic_instance_minimum",
                "ftpsState": "ftps_state",
                "healthCheckPath": "health_check_path",
                "http2Enabled": "http2_enabled",
                "ipRestrictions": "ip_restriction",
                "javaVersion": "java_version",
                "linuxFxVersion": "linux_fx_version",
                "minTlsVersion": "min_tls_version",
                "preWarmedInstanceCount": "pre_warmed_instance_count",
                "runtimeScaleMonitoringEnabled": "runtime_scale_monitoring_enabled",
                "scmIpRestrictions": "scm_ip_restriction",
                "scmType": "scm_type",
                "scmUseMainIpRestriction": "scm_use_main_ip_restriction",
                "use32BitWorkerProcess": "use_32_bit_worker_process",
                "vnetRouteAllEnabled": "vnet_route_all_enabled",
                "websocketsEnabled": "websockets_enabled"
            },
            "azure:appservice/getFunctionAppSiteConfigCors:getFunctionAppSiteConfigCors": {
                "allowedOrigins": "allowed_origins",
                "supportCredentials": "support_credentials"
            },
            "azure:appservice/getFunctionAppSiteConfigIpRestriction:getFunctionAppSiteConfigIpRestriction": {
                "ipAddress": "ip_address",
                "serviceTag": "service_tag",
                "virtualNetworkSubnetId": "virtual_network_subnet_id"
            },
            "azure:appservice/getFunctionAppSiteConfigIpRestrictionHeaders:getFunctionAppSiteConfigIpRestrictionHeaders": {
                "xAzureFdids": "x_azure_fdid",
                "xFdHealthProbes": "x_fd_health_probe",
                "xForwardedFors": "x_forwarded_for",
                "xForwardedHosts": "x_forwarded_host"
            },
            "azure:appservice/getFunctionAppSiteConfigScmIpRestriction:getFunctionAppSiteConfigScmIpRestriction": {
                "ipAddress": "ip_address",
                "serviceTag": "service_tag",
                "virtualNetworkSubnetId": "virtual_network_subnet_id"
            },
            "azure:appservice/getFunctionAppSiteConfigScmIpRestrictionHeaders:getFunctionAppSiteConfigScmIpRestrictionHeaders": {
                "xAzureFdids": "x_azure_fdid",
                "xFdHealthProbes": "x_fd_health_probe",
                "xForwardedFors": "x_forwarded_for",
                "xForwardedHosts": "x_forwarded_host"
            },
            "azure:appservice/getFunctionAppSourceControl:getFunctionAppSourceControl": {
                "manualIntegration": "manual_integration",
                "repoUrl": "repo_url",
                "rollbackEnabled": "rollback_enabled",
                "useMercurial": "use_mercurial"
            },
            "azure:appservice/getLinuxFunctionApp:getLinuxFunctionApp": {
                "appSettings": "app_settings",
                "authSettings": "auth_settings",
                "authSettingsV2s": "auth_settings_v2",
                "backups": "backup",
                "builtinLoggingEnabled": "builtin_logging_enabled",
                "clientCertificateEnabled": "client_certificate_enabled",
                "clientCertificateExclusionPaths": "client_certificate_exclusion_paths",
                "clientCertificateMode": "client_certificate_mode",
                "connectionStrings": "connection_string",
                "contentShareForceDisabled": "content_share_force_disabled",
                "customDomainVerificationId": "custom_domain_verification_id",
                "dailyMemoryTimeQuota": "daily_memory_time_quota",
                "defaultHostname": "default_hostname",
                "ftpPublishBasicAuthenticationEnabled": "ftp_publish_basic_authentication_enabled",
                "functionsExtensionVersion": "functions_extension_version",
                "hostingEnvironmentId": "hosting_environment_id",
                "httpsOnly": "https_only",
                "identities": "identity",
                "outboundIpAddressLists": "outbound_ip_address_list",
                "outboundIpAddresses": "outbound_ip_addresses",
                "possibleOutboundIpAddressLists": "possible_outbound_ip_address_list",
                "possibleOutboundIpAddresses": "possible_outbound_ip_addresses",
                "publicNetworkAccessEnabled": "public_network_access_enabled",
                "resourceGroupName": "resource_group_name",
                "servicePlanId": "service_plan_id",
                "siteConfigs": "site_config",
                "siteCredentials": "site_credential",
                "stickySettings": "sticky_settings",
                "storageAccountAccessKey": "storage_account_access_key",
                "storageAccountName": "storage_account_name",
                "storageKeyVaultSecretId": "storage_key_vault_secret_id",
                "storageUsesManagedIdentity": "storage_uses_managed_identity",
                "virtualNetworkSubnetId": "virtual_network_subnet_id",
                "webdeployPublishBasicAuthenticationEnabled": "webdeploy_publish_basic_authentication_enabled"
            },
            "azure:appservice/getLinuxFunctionAppAuthSetting:getLinuxFunctionAppAuthSetting": {
                "activeDirectories": "active_directory",
                "additionalLoginParameters": "additional_login_parameters",
                "allowedExternalRedirectUrls": "allowed_external_redirect_urls",
                "defaultProvider": "default_provider",
                "facebooks": "facebook",
                "githubs": "github",
                "googles": "google",
                "microsofts": "microsoft",
                "runtimeVersion": "runtime_version",
                "tokenRefreshExtensionHours": "token_refresh_extension_hours",
                "tokenStoreEnabled": "token_store_enabled",
                "twitters": "twitter",
                "unauthenticatedClientAction": "unauthenticated_client_action"
            },
            "azure:appservice/getLinuxFunctionAppAuthSettingActiveDirectory:getLinuxFunctionAppAuthSettingActiveDirectory": {
                "allowedAudiences": "allowed_audiences",
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "clientSecretSettingName": "client_secret_setting_name"
            },
            "azure:appservice/getLinuxFunctionAppAuthSettingFacebook:getLinuxFunctionAppAuthSettingFacebook": {
                "appId": "app_id",
                "appSecret": "app_secret",
                "appSecretSettingName": "app_secret_setting_name",
                "oauthScopes": "oauth_scopes"
            },
            "azure:appservice/getLinuxFunctionAppAuthSettingGithub:getLinuxFunctionAppAuthSettingGithub": {
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "clientSecretSettingName": "client_secret_setting_name",
                "oauthScopes": "oauth_scopes"
            },
            "azure:appservice/getLinuxFunctionAppAuthSettingGoogle:getLinuxFunctionAppAuthSettingGoogle": {
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "clientSecretSettingName": "client_secret_setting_name",
                "oauthScopes": "oauth_scopes"
            },
            "azure:appservice/getLinuxFunctionAppAuthSettingMicrosoft:getLinuxFunctionAppAuthSettingMicrosoft": {
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "clientSecretSettingName": "client_secret_setting_name",
                "oauthScopes": "oauth_scopes"
            },
            "azure:appservice/getLinuxFunctionAppAuthSettingTwitter:getLinuxFunctionAppAuthSettingTwitter": {
                "consumerKey": "consumer_key",
                "consumerSecret": "consumer_secret",
                "consumerSecretSettingName": "consumer_secret_setting_name"
            },
            "azure:appservice/getLinuxFunctionAppAuthSettingsV2:getLinuxFunctionAppAuthSettingsV2": {
                "activeDirectoryV2s": "active_directory_v2",
                "appleV2s": "apple_v2",
                "authEnabled": "auth_enabled",
                "azureStaticWebAppV2s": "azure_static_web_app_v2",
                "configFilePath": "config_file_path",
                "customOidcV2s": "custom_oidc_v2",
                "defaultProvider": "default_provider",
                "excludedPaths": "excluded_paths",
                "facebookV2s": "facebook_v2",
                "forwardProxyConvention": "forward_proxy_convention",
                "forwardProxyCustomHostHeaderName": "forward_proxy_custom_host_header_name",
                "forwardProxyCustomSchemeHeaderName": "forward_proxy_custom_scheme_header_name",
                "githubV2s": "github_v2",
                "googleV2s": "google_v2",
                "httpRouteApiPrefix": "http_route_api_prefix",
                "logins": "login",
                "microsoftV2s": "microsoft_v2",
                "requireAuthentication": "require_authentication",
                "requireHttps": "require_https",
                "runtimeVersion": "runtime_version",
                "twitterV2s": "twitter_v2",
                "unauthenticatedAction": "unauthenticated_action"
            },
            "azure:appservice/getLinuxFunctionAppAuthSettingsV2ActiveDirectoryV2:getLinuxFunctionAppAuthSettingsV2ActiveDirectoryV2": {
                "allowedApplications": "allowed_applications",
                "allowedAudiences": "allowed_audiences",
                "allowedGroups": "allowed_groups",
                "allowedIdentities": "allowed_identities",
                "clientId": "client_id",
                "clientSecretCertificateThumbprint": "client_secret_certificate_thumbprint",
                "clientSecretSettingName": "client_secret_setting_name",
                "jwtAllowedClientApplications": "jwt_allowed_client_applications",
                "jwtAllowedGroups": "jwt_allowed_groups",
                "loginParameters": "login_parameters",
                "tenantAuthEndpoint": "tenant_auth_endpoint",
                "wwwAuthenticationDisabled": "www_authentication_disabled"
            },
            "azure:appservice/getLinuxFunctionAppAuthSettingsV2AppleV2:getLinuxFunctionAppAuthSettingsV2AppleV2": {
                "clientId": "client_id",
                "clientSecretSettingName": "client_secret_setting_name",
                "loginScopes": "login_scopes"
            },
            "azure:appservice/getLinuxFunctionAppAuthSettingsV2AzureStaticWebAppV2:getLinuxFunctionAppAuthSettingsV2AzureStaticWebAppV2": {
                "clientId": "client_id"
            },
            "azure:appservice/getLinuxFunctionAppAuthSettingsV2CustomOidcV2:getLinuxFunctionAppAuthSettingsV2CustomOidcV2": {
                "authorisationEndpoint": "authorisation_endpoint",
                "certificationUri": "certification_uri",
                "clientCredentialMethod": "client_credential_method",
                "clientId": "client_id",
                "clientSecretSettingName": "client_secret_setting_name",
                "issuerEndpoint": "issuer_endpoint",
                "nameClaimType": "name_claim_type",
                "openidConfigurationEndpoint": "openid_configuration_endpoint",
                "tokenEndpoint": "token_endpoint"
            },
            "azure:appservice/getLinuxFunctionAppAuthSettingsV2FacebookV2:getLinuxFunctionAppAuthSettingsV2FacebookV2": {
                "appId": "app_id",
                "appSecretSettingName": "app_secret_setting_name",
                "graphApiVersion": "graph_api_version",
                "loginScopes": "login_scopes"
            },
            "azure:appservice/getLinuxFunctionAppAuthSettingsV2GithubV2:getLinuxFunctionAppAuthSettingsV2GithubV2": {
                "clientId": "client_id",
                "clientSecretSettingName": "client_secret_setting_name",
                "loginScopes": "login_scopes"
            },
            "azure:appservice/getLinuxFunctionAppAuthSettingsV2GoogleV2:getLinuxFunctionAppAuthSettingsV2GoogleV2": {
                "allowedAudiences": "allowed_audiences",
                "clientId": "client_id",
                "clientSecretSettingName": "client_secret_setting_name",
                "loginScopes": "login_scopes"
            },
            "azure:appservice/getLinuxFunctionAppAuthSettingsV2Login:getLinuxFunctionAppAuthSettingsV2Login": {
                "allowedExternalRedirectUrls": "allowed_external_redirect_urls",
                "cookieExpirationConvention": "cookie_expiration_convention",
                "cookieExpirationTime": "cookie_expiration_time",
                "logoutEndpoint": "logout_endpoint",
                "nonceExpirationTime": "nonce_expiration_time",
                "preserveUrlFragmentsForLogins": "preserve_url_fragments_for_logins",
                "tokenRefreshExtensionTime": "token_refresh_extension_time",
                "tokenStoreEnabled": "token_store_enabled",
                "tokenStorePath": "token_store_path",
                "tokenStoreSasSettingName": "token_store_sas_setting_name",
                "validateNonce": "validate_nonce"
            },
            "azure:appservice/getLinuxFunctionAppAuthSettingsV2MicrosoftV2:getLinuxFunctionAppAuthSettingsV2MicrosoftV2": {
                "allowedAudiences": "allowed_audiences",
                "clientId": "client_id",
                "clientSecretSettingName": "client_secret_setting_name",
                "loginScopes": "login_scopes"
            },
            "azure:appservice/getLinuxFunctionAppAuthSettingsV2TwitterV2:getLinuxFunctionAppAuthSettingsV2TwitterV2": {
                "consumerKey": "consumer_key",
                "consumerSecretSettingName": "consumer_secret_setting_name"
            },
            "azure:appservice/getLinuxFunctionAppBackup:getLinuxFunctionAppBackup": {
                "schedules": "schedule",
                "storageAccountUrl": "storage_account_url"
            },
            "azure:appservice/getLinuxFunctionAppBackupSchedule:getLinuxFunctionAppBackupSchedule": {
                "frequencyInterval": "frequency_interval",
                "frequencyUnit": "frequency_unit",
                "keepAtLeastOneBackup": "keep_at_least_one_backup",
                "lastExecutionTime": "last_execution_time",
                "retentionPeriodDays": "retention_period_days",
                "startTime": "start_time"
            },
            "azure:appservice/getLinuxFunctionAppIdentity:getLinuxFunctionAppIdentity": {
                "identityIds": "identity_ids",
                "principalId": "principal_id",
                "tenantId": "tenant_id"
            },
            "azure:appservice/getLinuxFunctionAppSiteConfig:getLinuxFunctionAppSiteConfig": {
                "alwaysOn": "always_on",
                "apiDefinitionUrl": "api_definition_url",
                "apiManagementApiId": "api_management_api_id",
                "appCommandLine": "app_command_line",
                "appScaleLimit": "app_scale_limit",
                "appServiceLogs": "app_service_logs",
                "applicationInsightsConnectionString": "application_insights_connection_string",
                "applicationInsightsKey": "application_insights_key",
                "applicationStacks": "application_stack",
                "containerRegistryManagedIdentityClientId": "container_registry_managed_identity_client_id",
                "containerRegistryUseManagedIdentity": "container_registry_use_managed_identity",
                "defaultDocuments": "default_documents",
                "detailedErrorLoggingEnabled": "detailed_error_logging_enabled",
                "elasticInstanceMinimum": "elastic_instance_minimum",
                "ftpsState": "ftps_state",
                "healthCheckEvictionTimeInMin": "health_check_eviction_time_in_min",
                "healthCheckPath": "health_check_path",
                "http2Enabled": "http2_enabled",
                "ipRestrictions": "ip_restriction",
                "linuxFxVersion": "linux_fx_version",
                "loadBalancingMode": "load_balancing_mode",
                "managedPipelineMode": "managed_pipeline_mode",
                "minimumTlsVersion": "minimum_tls_version",
                "preWarmedInstanceCount": "pre_warmed_instance_count",
                "remoteDebuggingEnabled": "remote_debugging_enabled",
                "remoteDebuggingVersion": "remote_debugging_version",
                "runtimeScaleMonitoringEnabled": "runtime_scale_monitoring_enabled",
                "scmIpRestrictions": "scm_ip_restriction",
                "scmMinimumTlsVersion": "scm_minimum_tls_version",
                "scmType": "scm_type",
                "scmUseMainIpRestriction": "scm_use_main_ip_restriction",
                "use32BitWorker": "use_32_bit_worker",
                "vnetRouteAllEnabled": "vnet_route_all_enabled",
                "websocketsEnabled": "websockets_enabled",
                "workerCount": "worker_count"
            },
            "azure:appservice/getLinuxFunctionAppSiteConfigAppServiceLog:getLinuxFunctionAppSiteConfigAppServiceLog": {
                "diskQuotaMb": "disk_quota_mb",
                "retentionPeriodDays": "retention_period_days"
            },
            "azure:appservice/getLinuxFunctionAppSiteConfigApplicationStack:getLinuxFunctionAppSiteConfigApplicationStack": {
                "dockers": "docker",
                "dotnetVersion": "dotnet_version",
                "javaVersion": "java_version",
                "nodeVersion": "node_version",
                "powershellCoreVersion": "powershell_core_version",
                "pythonVersion": "python_version",
                "useCustomRuntime": "use_custom_runtime",
                "useDotnetIsolatedRuntime": "use_dotnet_isolated_runtime"
            },
            "azure:appservice/getLinuxFunctionAppSiteConfigApplicationStackDocker:getLinuxFunctionAppSiteConfigApplicationStackDocker": {
                "imageName": "image_name",
                "imageTag": "image_tag",
                "registryPassword": "registry_password",
                "registryUrl": "registry_url",
                "registryUsername": "registry_username"
            },
            "azure:appservice/getLinuxFunctionAppSiteConfigCor:getLinuxFunctionAppSiteConfigCor": {
                "allowedOrigins": "allowed_origins",
                "supportCredentials": "support_credentials"
            },
            "azure:appservice/getLinuxFunctionAppSiteConfigIpRestriction:getLinuxFunctionAppSiteConfigIpRestriction": {
                "ipAddress": "ip_address",
                "serviceTag": "service_tag",
                "virtualNetworkSubnetId": "virtual_network_subnet_id"
            },
            "azure:appservice/getLinuxFunctionAppSiteConfigIpRestrictionHeader:getLinuxFunctionAppSiteConfigIpRestrictionHeader": {
                "xAzureFdids": "x_azure_fdid",
                "xFdHealthProbes": "x_fd_health_probe",
                "xForwardedFors": "x_forwarded_for",
                "xForwardedHosts": "x_forwarded_host"
            },
            "azure:appservice/getLinuxFunctionAppSiteConfigScmIpRestriction:getLinuxFunctionAppSiteConfigScmIpRestriction": {
                "ipAddress": "ip_address",
                "serviceTag": "service_tag",
                "virtualNetworkSubnetId": "virtual_network_subnet_id"
            },
            "azure:appservice/getLinuxFunctionAppSiteConfigScmIpRestrictionHeader:getLinuxFunctionAppSiteConfigScmIpRestrictionHeader": {
                "xAzureFdids": "x_azure_fdid",
                "xFdHealthProbes": "x_fd_health_probe",
                "xForwardedFors": "x_forwarded_for",
                "xForwardedHosts": "x_forwarded_host"
            },
            "azure:appservice/getLinuxFunctionAppStickySetting:getLinuxFunctionAppStickySetting": {
                "appSettingNames": "app_setting_names",
                "connectionStringNames": "connection_string_names"
            },
            "azure:appservice/getLinuxWebApp:getLinuxWebApp": {
                "appMetadata": "app_metadata",
                "appSettings": "app_settings",
                "authSettings": "auth_settings",
                "authSettingsV2s": "auth_settings_v2",
                "backups": "backup",
                "clientAffinityEnabled": "client_affinity_enabled",
                "clientCertificateEnabled": "client_certificate_enabled",
                "clientCertificateExclusionPaths": "client_certificate_exclusion_paths",
                "clientCertificateMode": "client_certificate_mode",
                "connectionStrings": "connection_string",
                "customDomainVerificationId": "custom_domain_verification_id",
                "defaultHostname": "default_hostname",
                "ftpPublishBasicAuthenticationEnabled": "ftp_publish_basic_authentication_enabled",
                "hostingEnvironmentId": "hosting_environment_id",
                "httpsOnly": "https_only",
                "identities": "identity",
                "keyVaultReferenceIdentityId": "key_vault_reference_identity_id",
                "outboundIpAddressLists": "outbound_ip_address_list",
                "outboundIpAddresses": "outbound_ip_addresses",
                "possibleOutboundIpAddressLists": "possible_outbound_ip_address_list",
                "possibleOutboundIpAddresses": "possible_outbound_ip_addresses",
                "publicNetworkAccessEnabled": "public_network_access_enabled",
                "resourceGroupName": "resource_group_name",
                "servicePlanId": "service_plan_id",
                "siteConfigs": "site_config",
                "siteCredentials": "site_credential",
                "stickySettings": "sticky_settings",
                "storageAccounts": "storage_account",
                "virtualNetworkSubnetId": "virtual_network_subnet_id",
                "webdeployPublishBasicAuthenticationEnabled": "webdeploy_publish_basic_authentication_enabled"
            },
            "azure:appservice/getLinuxWebAppAuthSetting:getLinuxWebAppAuthSetting": {
                "activeDirectories": "active_directory",
                "additionalLoginParameters": "additional_login_parameters",
                "allowedExternalRedirectUrls": "allowed_external_redirect_urls",
                "defaultProvider": "default_provider",
                "facebooks": "facebook",
                "githubs": "github",
                "googles": "google",
                "microsofts": "microsoft",
                "runtimeVersion": "runtime_version",
                "tokenRefreshExtensionHours": "token_refresh_extension_hours",
                "tokenStoreEnabled": "token_store_enabled",
                "twitters": "twitter",
                "unauthenticatedClientAction": "unauthenticated_client_action"
            },
            "azure:appservice/getLinuxWebAppAuthSettingActiveDirectory:getLinuxWebAppAuthSettingActiveDirectory": {
                "allowedAudiences": "allowed_audiences",
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "clientSecretSettingName": "client_secret_setting_name"
            },
            "azure:appservice/getLinuxWebAppAuthSettingFacebook:getLinuxWebAppAuthSettingFacebook": {
                "appId": "app_id",
                "appSecret": "app_secret",
                "appSecretSettingName": "app_secret_setting_name",
                "oauthScopes": "oauth_scopes"
            },
            "azure:appservice/getLinuxWebAppAuthSettingGithub:getLinuxWebAppAuthSettingGithub": {
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "clientSecretSettingName": "client_secret_setting_name",
                "oauthScopes": "oauth_scopes"
            },
            "azure:appservice/getLinuxWebAppAuthSettingGoogle:getLinuxWebAppAuthSettingGoogle": {
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "clientSecretSettingName": "client_secret_setting_name",
                "oauthScopes": "oauth_scopes"
            },
            "azure:appservice/getLinuxWebAppAuthSettingMicrosoft:getLinuxWebAppAuthSettingMicrosoft": {
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "clientSecretSettingName": "client_secret_setting_name",
                "oauthScopes": "oauth_scopes"
            },
            "azure:appservice/getLinuxWebAppAuthSettingTwitter:getLinuxWebAppAuthSettingTwitter": {
                "consumerKey": "consumer_key",
                "consumerSecret": "consumer_secret",
                "consumerSecretSettingName": "consumer_secret_setting_name"
            },
            "azure:appservice/getLinuxWebAppAuthSettingsV2:getLinuxWebAppAuthSettingsV2": {
                "activeDirectoryV2s": "active_directory_v2",
                "appleV2s": "apple_v2",
                "authEnabled": "auth_enabled",
                "azureStaticWebAppV2s": "azure_static_web_app_v2",
                "configFilePath": "config_file_path",
                "customOidcV2s": "custom_oidc_v2",
                "defaultProvider": "default_provider",
                "excludedPaths": "excluded_paths",
                "facebookV2s": "facebook_v2",
                "forwardProxyConvention": "forward_proxy_convention",
                "forwardProxyCustomHostHeaderName": "forward_proxy_custom_host_header_name",
                "forwardProxyCustomSchemeHeaderName": "forward_proxy_custom_scheme_header_name",
                "githubV2s": "github_v2",
                "googleV2s": "google_v2",
                "httpRouteApiPrefix": "http_route_api_prefix",
                "logins": "login",
                "microsoftV2s": "microsoft_v2",
                "requireAuthentication": "require_authentication",
                "requireHttps": "require_https",
                "runtimeVersion": "runtime_version",
                "twitterV2s": "twitter_v2",
                "unauthenticatedAction": "unauthenticated_action"
            },
            "azure:appservice/getLinuxWebAppAuthSettingsV2ActiveDirectoryV2:getLinuxWebAppAuthSettingsV2ActiveDirectoryV2": {
                "allowedApplications": "allowed_applications",
                "allowedAudiences": "allowed_audiences",
                "allowedGroups": "allowed_groups",
                "allowedIdentities": "allowed_identities",
                "clientId": "client_id",
                "clientSecretCertificateThumbprint": "client_secret_certificate_thumbprint",
                "clientSecretSettingName": "client_secret_setting_name",
                "jwtAllowedClientApplications": "jwt_allowed_client_applications",
                "jwtAllowedGroups": "jwt_allowed_groups",
                "loginParameters": "login_parameters",
                "tenantAuthEndpoint": "tenant_auth_endpoint",
                "wwwAuthenticationDisabled": "www_authentication_disabled"
            },
            "azure:appservice/getLinuxWebAppAuthSettingsV2AppleV2:getLinuxWebAppAuthSettingsV2AppleV2": {
                "clientId": "client_id",
                "clientSecretSettingName": "client_secret_setting_name",
                "loginScopes": "login_scopes"
            },
            "azure:appservice/getLinuxWebAppAuthSettingsV2AzureStaticWebAppV2:getLinuxWebAppAuthSettingsV2AzureStaticWebAppV2": {
                "clientId": "client_id"
            },
            "azure:appservice/getLinuxWebAppAuthSettingsV2CustomOidcV2:getLinuxWebAppAuthSettingsV2CustomOidcV2": {
                "authorisationEndpoint": "authorisation_endpoint",
                "certificationUri": "certification_uri",
                "clientCredentialMethod": "client_credential_method",
                "clientId": "client_id",
                "clientSecretSettingName": "client_secret_setting_name",
                "issuerEndpoint": "issuer_endpoint",
                "nameClaimType": "name_claim_type",
                "openidConfigurationEndpoint": "openid_configuration_endpoint",
                "tokenEndpoint": "token_endpoint"
            },
            "azure:appservice/getLinuxWebAppAuthSettingsV2FacebookV2:getLinuxWebAppAuthSettingsV2FacebookV2": {
                "appId": "app_id",
                "appSecretSettingName": "app_secret_setting_name",
                "graphApiVersion": "graph_api_version",
                "loginScopes": "login_scopes"
            },
            "azure:appservice/getLinuxWebAppAuthSettingsV2GithubV2:getLinuxWebAppAuthSettingsV2GithubV2": {
                "clientId": "client_id",
                "clientSecretSettingName": "client_secret_setting_name",
                "loginScopes": "login_scopes"
            },
            "azure:appservice/getLinuxWebAppAuthSettingsV2GoogleV2:getLinuxWebAppAuthSettingsV2GoogleV2": {
                "allowedAudiences": "allowed_audiences",
                "clientId": "client_id",
                "clientSecretSettingName": "client_secret_setting_name",
                "loginScopes": "login_scopes"
            },
            "azure:appservice/getLinuxWebAppAuthSettingsV2Login:getLinuxWebAppAuthSettingsV2Login": {
                "allowedExternalRedirectUrls": "allowed_external_redirect_urls",
                "cookieExpirationConvention": "cookie_expiration_convention",
                "cookieExpirationTime": "cookie_expiration_time",
                "logoutEndpoint": "logout_endpoint",
                "nonceExpirationTime": "nonce_expiration_time",
                "preserveUrlFragmentsForLogins": "preserve_url_fragments_for_logins",
                "tokenRefreshExtensionTime": "token_refresh_extension_time",
                "tokenStoreEnabled": "token_store_enabled",
                "tokenStorePath": "token_store_path",
                "tokenStoreSasSettingName": "token_store_sas_setting_name",
                "validateNonce": "validate_nonce"
            },
            "azure:appservice/getLinuxWebAppAuthSettingsV2MicrosoftV2:getLinuxWebAppAuthSettingsV2MicrosoftV2": {
                "allowedAudiences": "allowed_audiences",
                "clientId": "client_id",
                "clientSecretSettingName": "client_secret_setting_name",
                "loginScopes": "login_scopes"
            },
            "azure:appservice/getLinuxWebAppAuthSettingsV2TwitterV2:getLinuxWebAppAuthSettingsV2TwitterV2": {
                "consumerKey": "consumer_key",
                "consumerSecretSettingName": "consumer_secret_setting_name"
            },
            "azure:appservice/getLinuxWebAppBackup:getLinuxWebAppBackup": {
                "schedules": "schedule",
                "storageAccountUrl": "storage_account_url"
            },
            "azure:appservice/getLinuxWebAppBackupSchedule:getLinuxWebAppBackupSchedule": {
                "frequencyInterval": "frequency_interval",
                "frequencyUnit": "frequency_unit",
                "keepAtLeastOneBackup": "keep_at_least_one_backup",
                "lastExecutionTime": "last_execution_time",
                "retentionPeriodDays": "retention_period_days",
                "startTime": "start_time"
            },
            "azure:appservice/getLinuxWebAppIdentity:getLinuxWebAppIdentity": {
                "identityIds": "identity_ids",
                "principalId": "principal_id",
                "tenantId": "tenant_id"
            },
            "azure:appservice/getLinuxWebAppLog:getLinuxWebAppLog": {
                "applicationLogs": "application_logs",
                "detailedErrorMessages": "detailed_error_messages",
                "failedRequestTracing": "failed_request_tracing",
                "httpLogs": "http_logs"
            },
            "azure:appservice/getLinuxWebAppLogApplicationLog:getLinuxWebAppLogApplicationLog": {
                "azureBlobStorages": "azure_blob_storage",
                "fileSystemLevel": "file_system_level"
            },
            "azure:appservice/getLinuxWebAppLogApplicationLogAzureBlobStorage:getLinuxWebAppLogApplicationLogAzureBlobStorage": {
                "retentionInDays": "retention_in_days",
                "sasUrl": "sas_url"
            },
            "azure:appservice/getLinuxWebAppLogHttpLog:getLinuxWebAppLogHttpLog": {
                "azureBlobStorages": "azure_blob_storage",
                "fileSystems": "file_system"
            },
            "azure:appservice/getLinuxWebAppLogHttpLogAzureBlobStorage:getLinuxWebAppLogHttpLogAzureBlobStorage": {
                "retentionInDays": "retention_in_days",
                "sasUrl": "sas_url"
            },
            "azure:appservice/getLinuxWebAppLogHttpLogFileSystem:getLinuxWebAppLogHttpLogFileSystem": {
                "retentionInDays": "retention_in_days",
                "retentionInMb": "retention_in_mb"
            },
            "azure:appservice/getLinuxWebAppSiteConfig:getLinuxWebAppSiteConfig": {
                "alwaysOn": "always_on",
                "apiDefinitionUrl": "api_definition_url",
                "apiManagementApiId": "api_management_api_id",
                "appCommandLine": "app_command_line",
                "applicationStacks": "application_stack",
                "autoHealEnabled": "auto_heal_enabled",
                "autoHealSettings": "auto_heal_setting",
                "containerRegistryManagedIdentityClientId": "container_registry_managed_identity_client_id",
                "containerRegistryUseManagedIdentity": "container_registry_use_managed_identity",
                "defaultDocuments": "default_documents",
                "detailedErrorLoggingEnabled": "detailed_error_logging_enabled",
                "ftpsState": "ftps_state",
                "healthCheckEvictionTimeInMin": "health_check_eviction_time_in_min",
                "healthCheckPath": "health_check_path",
                "http2Enabled": "http2_enabled",
                "ipRestrictions": "ip_restriction",
                "linuxFxVersion": "linux_fx_version",
                "loadBalancingMode": "load_balancing_mode",
                "localMysqlEnabled": "local_mysql_enabled",
                "managedPipelineMode": "managed_pipeline_mode",
                "minimumTlsVersion": "minimum_tls_version",
                "remoteDebuggingEnabled": "remote_debugging_enabled",
                "remoteDebuggingVersion": "remote_debugging_version",
                "scmIpRestrictions": "scm_ip_restriction",
                "scmMinimumTlsVersion": "scm_minimum_tls_version",
                "scmType": "scm_type",
                "scmUseMainIpRestriction": "scm_use_main_ip_restriction",
                "use32BitWorker": "use_32_bit_worker",
                "vnetRouteAllEnabled": "vnet_route_all_enabled",
                "websocketsEnabled": "websockets_enabled",
                "workerCount": "worker_count"
            },
            "azure:appservice/getLinuxWebAppSiteConfigApplicationStack:getLinuxWebAppSiteConfigApplicationStack": {
                "dockerImage": "docker_image",
                "dockerImageName": "docker_image_name",
                "dockerImageTag": "docker_image_tag",
                "dockerRegistryPassword": "docker_registry_password",
                "dockerRegistryUrl": "docker_registry_url",
                "dockerRegistryUsername": "docker_registry_username",
                "dotnetVersion": "dotnet_version",
                "goVersion": "go_version",
                "javaServer": "java_server",
                "javaServerVersion": "java_server_version",
                "javaVersion": "java_version",
                "nodeVersion": "node_version",
                "phpVersion": "php_version",
                "pythonVersion": "python_version",
                "rubyVersion": "ruby_version"
            },
            "azure:appservice/getLinuxWebAppSiteConfigAutoHealSetting:getLinuxWebAppSiteConfigAutoHealSetting": {
                "actions": "action",
                "triggers": "trigger"
            },
            "azure:appservice/getLinuxWebAppSiteConfigAutoHealSettingAction:getLinuxWebAppSiteConfigAutoHealSettingAction": {
                "actionType": "action_type",
                "minimumProcessExecutionTime": "minimum_process_execution_time"
            },
            "azure:appservice/getLinuxWebAppSiteConfigAutoHealSettingTrigger:getLinuxWebAppSiteConfigAutoHealSettingTrigger": {
                "slowRequests": "slow_request",
                "statusCodes": "status_code"
            },
            "azure:appservice/getLinuxWebAppSiteConfigAutoHealSettingTriggerSlowRequest:getLinuxWebAppSiteConfigAutoHealSettingTriggerSlowRequest": {
                "timeTaken": "time_taken"
            },
            "azure:appservice/getLinuxWebAppSiteConfigAutoHealSettingTriggerStatusCode:getLinuxWebAppSiteConfigAutoHealSettingTriggerStatusCode": {
                "statusCodeRange": "status_code_range",
                "subStatus": "sub_status",
                "win32StatusCode": "win32_status_code"
            },
            "azure:appservice/getLinuxWebAppSiteConfigCor:getLinuxWebAppSiteConfigCor": {
                "allowedOrigins": "allowed_origins",
                "supportCredentials": "support_credentials"
            },
            "azure:appservice/getLinuxWebAppSiteConfigIpRestriction:getLinuxWebAppSiteConfigIpRestriction": {
                "ipAddress": "ip_address",
                "serviceTag": "service_tag",
                "virtualNetworkSubnetId": "virtual_network_subnet_id"
            },
            "azure:appservice/getLinuxWebAppSiteConfigIpRestrictionHeader:getLinuxWebAppSiteConfigIpRestrictionHeader": {
                "xAzureFdids": "x_azure_fdid",
                "xFdHealthProbes": "x_fd_health_probe",
                "xForwardedFors": "x_forwarded_for",
                "xForwardedHosts": "x_forwarded_host"
            },
            "azure:appservice/getLinuxWebAppSiteConfigScmIpRestriction:getLinuxWebAppSiteConfigScmIpRestriction": {
                "ipAddress": "ip_address",
                "serviceTag": "service_tag",
                "virtualNetworkSubnetId": "virtual_network_subnet_id"
            },
            "azure:appservice/getLinuxWebAppSiteConfigScmIpRestrictionHeader:getLinuxWebAppSiteConfigScmIpRestrictionHeader": {
                "xAzureFdids": "x_azure_fdid",
                "xFdHealthProbes": "x_fd_health_probe",
                "xForwardedFors": "x_forwarded_for",
                "xForwardedHosts": "x_forwarded_host"
            },
            "azure:appservice/getLinuxWebAppStickySetting:getLinuxWebAppStickySetting": {
                "appSettingNames": "app_setting_names",
                "connectionStringNames": "connection_string_names"
            },
            "azure:appservice/getLinuxWebAppStorageAccount:getLinuxWebAppStorageAccount": {
                "accessKey": "access_key",
                "accountName": "account_name",
                "mountPath": "mount_path",
                "shareName": "share_name"
            },
            "azure:appservice/getServicePlan:getServicePlan": {
                "appServiceEnvironmentId": "app_service_environment_id",
                "maximumElasticWorkerCount": "maximum_elastic_worker_count",
                "osType": "os_type",
                "perSiteScalingEnabled": "per_site_scaling_enabled",
                "resourceGroupName": "resource_group_name",
                "skuName": "sku_name",
                "workerCount": "worker_count",
                "zoneBalancingEnabled": "zone_balancing_enabled"
            },
            "azure:appservice/getSourceControlToken:getSourceControlToken": {
                "tokenSecret": "token_secret"
            },
            "azure:appservice/getWindowsFunctionApp:getWindowsFunctionApp": {
                "appSettings": "app_settings",
                "authSettings": "auth_settings",
                "authSettingsV2s": "auth_settings_v2",
                "backups": "backup",
                "builtinLoggingEnabled": "builtin_logging_enabled",
                "clientCertificateEnabled": "client_certificate_enabled",
                "clientCertificateExclusionPaths": "client_certificate_exclusion_paths",
                "clientCertificateMode": "client_certificate_mode",
                "connectionStrings": "connection_string",
                "contentShareForceDisabled": "content_share_force_disabled",
                "customDomainVerificationId": "custom_domain_verification_id",
                "dailyMemoryTimeQuota": "daily_memory_time_quota",
                "defaultHostname": "default_hostname",
                "ftpPublishBasicAuthenticationEnabled": "ftp_publish_basic_authentication_enabled",
                "functionsExtensionVersion": "functions_extension_version",
                "hostingEnvironmentId": "hosting_environment_id",
                "httpsOnly": "https_only",
                "identities": "identity",
                "outboundIpAddressLists": "outbound_ip_address_list",
                "outboundIpAddresses": "outbound_ip_addresses",
                "possibleOutboundIpAddressLists": "possible_outbound_ip_address_list",
                "possibleOutboundIpAddresses": "possible_outbound_ip_addresses",
                "publicNetworkAccessEnabled": "public_network_access_enabled",
                "resourceGroupName": "resource_group_name",
                "servicePlanId": "service_plan_id",
                "siteConfigs": "site_config",
                "siteCredentials": "site_credential",
                "stickySettings": "sticky_settings",
                "storageAccountAccessKey": "storage_account_access_key",
                "storageAccountName": "storage_account_name",
                "storageKeyVaultSecretId": "storage_key_vault_secret_id",
                "storageUsesManagedIdentity": "storage_uses_managed_identity",
                "virtualNetworkSubnetId": "virtual_network_subnet_id",
                "webdeployPublishBasicAuthenticationEnabled": "webdeploy_publish_basic_authentication_enabled"
            },
            "azure:appservice/getWindowsFunctionAppAuthSetting:getWindowsFunctionAppAuthSetting": {
                "activeDirectories": "active_directory",
                "additionalLoginParameters": "additional_login_parameters",
                "allowedExternalRedirectUrls": "allowed_external_redirect_urls",
                "defaultProvider": "default_provider",
                "facebooks": "facebook",
                "githubs": "github",
                "googles": "google",
                "microsofts": "microsoft",
                "runtimeVersion": "runtime_version",
                "tokenRefreshExtensionHours": "token_refresh_extension_hours",
                "tokenStoreEnabled": "token_store_enabled",
                "twitters": "twitter",
                "unauthenticatedClientAction": "unauthenticated_client_action"
            },
            "azure:appservice/getWindowsFunctionAppAuthSettingActiveDirectory:getWindowsFunctionAppAuthSettingActiveDirectory": {
                "allowedAudiences": "allowed_audiences",
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "clientSecretSettingName": "client_secret_setting_name"
            },
            "azure:appservice/getWindowsFunctionAppAuthSettingFacebook:getWindowsFunctionAppAuthSettingFacebook": {
                "appId": "app_id",
                "appSecret": "app_secret",
                "appSecretSettingName": "app_secret_setting_name",
                "oauthScopes": "oauth_scopes"
            },
            "azure:appservice/getWindowsFunctionAppAuthSettingGithub:getWindowsFunctionAppAuthSettingGithub": {
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "clientSecretSettingName": "client_secret_setting_name",
                "oauthScopes": "oauth_scopes"
            },
            "azure:appservice/getWindowsFunctionAppAuthSettingGoogle:getWindowsFunctionAppAuthSettingGoogle": {
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "clientSecretSettingName": "client_secret_setting_name",
                "oauthScopes": "oauth_scopes"
            },
            "azure:appservice/getWindowsFunctionAppAuthSettingMicrosoft:getWindowsFunctionAppAuthSettingMicrosoft": {
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "clientSecretSettingName": "client_secret_setting_name",
                "oauthScopes": "oauth_scopes"
            },
            "azure:appservice/getWindowsFunctionAppAuthSettingTwitter:getWindowsFunctionAppAuthSettingTwitter": {
                "consumerKey": "consumer_key",
                "consumerSecret": "consumer_secret",
                "consumerSecretSettingName": "consumer_secret_setting_name"
            },
            "azure:appservice/getWindowsFunctionAppAuthSettingsV2:getWindowsFunctionAppAuthSettingsV2": {
                "activeDirectoryV2s": "active_directory_v2",
                "appleV2s": "apple_v2",
                "authEnabled": "auth_enabled",
                "azureStaticWebAppV2s": "azure_static_web_app_v2",
                "configFilePath": "config_file_path",
                "customOidcV2s": "custom_oidc_v2",
                "defaultProvider": "default_provider",
                "excludedPaths": "excluded_paths",
                "facebookV2s": "facebook_v2",
                "forwardProxyConvention": "forward_proxy_convention",
                "forwardProxyCustomHostHeaderName": "forward_proxy_custom_host_header_name",
                "forwardProxyCustomSchemeHeaderName": "forward_proxy_custom_scheme_header_name",
                "githubV2s": "github_v2",
                "googleV2s": "google_v2",
                "httpRouteApiPrefix": "http_route_api_prefix",
                "logins": "login",
                "microsoftV2s": "microsoft_v2",
                "requireAuthentication": "require_authentication",
                "requireHttps": "require_https",
                "runtimeVersion": "runtime_version",
                "twitterV2s": "twitter_v2",
                "unauthenticatedAction": "unauthenticated_action"
            },
            "azure:appservice/getWindowsFunctionAppAuthSettingsV2ActiveDirectoryV2:getWindowsFunctionAppAuthSettingsV2ActiveDirectoryV2": {
                "allowedApplications": "allowed_applications",
                "allowedAudiences": "allowed_audiences",
                "allowedGroups": "allowed_groups",
                "allowedIdentities": "allowed_identities",
                "clientId": "client_id",
                "clientSecretCertificateThumbprint": "client_secret_certificate_thumbprint",
                "clientSecretSettingName": "client_secret_setting_name",
                "jwtAllowedClientApplications": "jwt_allowed_client_applications",
                "jwtAllowedGroups": "jwt_allowed_groups",
                "loginParameters": "login_parameters",
                "tenantAuthEndpoint": "tenant_auth_endpoint",
                "wwwAuthenticationDisabled": "www_authentication_disabled"
            },
            "azure:appservice/getWindowsFunctionAppAuthSettingsV2AppleV2:getWindowsFunctionAppAuthSettingsV2AppleV2": {
                "clientId": "client_id",
                "clientSecretSettingName": "client_secret_setting_name",
                "loginScopes": "login_scopes"
            },
            "azure:appservice/getWindowsFunctionAppAuthSettingsV2AzureStaticWebAppV2:getWindowsFunctionAppAuthSettingsV2AzureStaticWebAppV2": {
                "clientId": "client_id"
            },
            "azure:appservice/getWindowsFunctionAppAuthSettingsV2CustomOidcV2:getWindowsFunctionAppAuthSettingsV2CustomOidcV2": {
                "authorisationEndpoint": "authorisation_endpoint",
                "certificationUri": "certification_uri",
                "clientCredentialMethod": "client_credential_method",
                "clientId": "client_id",
                "clientSecretSettingName": "client_secret_setting_name",
                "issuerEndpoint": "issuer_endpoint",
                "nameClaimType": "name_claim_type",
                "openidConfigurationEndpoint": "openid_configuration_endpoint",
                "tokenEndpoint": "token_endpoint"
            },
            "azure:appservice/getWindowsFunctionAppAuthSettingsV2FacebookV2:getWindowsFunctionAppAuthSettingsV2FacebookV2": {
                "appId": "app_id",
                "appSecretSettingName": "app_secret_setting_name",
                "graphApiVersion": "graph_api_version",
                "loginScopes": "login_scopes"
            },
            "azure:appservice/getWindowsFunctionAppAuthSettingsV2GithubV2:getWindowsFunctionAppAuthSettingsV2GithubV2": {
                "clientId": "client_id",
                "clientSecretSettingName": "client_secret_setting_name",
                "loginScopes": "login_scopes"
            },
            "azure:appservice/getWindowsFunctionAppAuthSettingsV2GoogleV2:getWindowsFunctionAppAuthSettingsV2GoogleV2": {
                "allowedAudiences": "allowed_audiences",
                "clientId": "client_id",
                "clientSecretSettingName": "client_secret_setting_name",
                "loginScopes": "login_scopes"
            },
            "azure:appservice/getWindowsFunctionAppAuthSettingsV2Login:getWindowsFunctionAppAuthSettingsV2Login": {
                "allowedExternalRedirectUrls": "allowed_external_redirect_urls",
                "cookieExpirationConvention": "cookie_expiration_convention",
                "cookieExpirationTime": "cookie_expiration_time",
                "logoutEndpoint": "logout_endpoint",
                "nonceExpirationTime": "nonce_expiration_time",
                "preserveUrlFragmentsForLogins": "preserve_url_fragments_for_logins",
                "tokenRefreshExtensionTime": "token_refresh_extension_time",
                "tokenStoreEnabled": "token_store_enabled",
                "tokenStorePath": "token_store_path",
                "tokenStoreSasSettingName": "token_store_sas_setting_name",
                "validateNonce": "validate_nonce"
            },
            "azure:appservice/getWindowsFunctionAppAuthSettingsV2MicrosoftV2:getWindowsFunctionAppAuthSettingsV2MicrosoftV2": {
                "allowedAudiences": "allowed_audiences",
                "clientId": "client_id",
                "clientSecretSettingName": "client_secret_setting_name",
                "loginScopes": "login_scopes"
            },
            "azure:appservice/getWindowsFunctionAppAuthSettingsV2TwitterV2:getWindowsFunctionAppAuthSettingsV2TwitterV2": {
                "consumerKey": "consumer_key",
                "consumerSecretSettingName": "consumer_secret_setting_name"
            },
            "azure:appservice/getWindowsFunctionAppBackup:getWindowsFunctionAppBackup": {
                "schedules": "schedule",
                "storageAccountUrl": "storage_account_url"
            },
            "azure:appservice/getWindowsFunctionAppBackupSchedule:getWindowsFunctionAppBackupSchedule": {
                "frequencyInterval": "frequency_interval",
                "frequencyUnit": "frequency_unit",
                "keepAtLeastOneBackup": "keep_at_least_one_backup",
                "lastExecutionTime": "last_execution_time",
                "retentionPeriodDays": "retention_period_days",
                "startTime": "start_time"
            },
            "azure:appservice/getWindowsFunctionAppIdentity:getWindowsFunctionAppIdentity": {
                "identityIds": "identity_ids",
                "principalId": "principal_id",
                "tenantId": "tenant_id"
            },
            "azure:appservice/getWindowsFunctionAppSiteConfig:getWindowsFunctionAppSiteConfig": {
                "alwaysOn": "always_on",
                "apiDefinitionUrl": "api_definition_url",
                "apiManagementApiId": "api_management_api_id",
                "appCommandLine": "app_command_line",
                "appScaleLimit": "app_scale_limit",
                "appServiceLogs": "app_service_logs",
                "applicationInsightsConnectionString": "application_insights_connection_string",
                "applicationInsightsKey": "application_insights_key",
                "applicationStacks": "application_stack",
                "defaultDocuments": "default_documents",
                "detailedErrorLoggingEnabled": "detailed_error_logging_enabled",
                "elasticInstanceMinimum": "elastic_instance_minimum",
                "ftpsState": "ftps_state",
                "healthCheckEvictionTimeInMin": "health_check_eviction_time_in_min",
                "healthCheckPath": "health_check_path",
                "http2Enabled": "http2_enabled",
                "ipRestrictions": "ip_restriction",
                "loadBalancingMode": "load_balancing_mode",
                "managedPipelineMode": "managed_pipeline_mode",
                "minimumTlsVersion": "minimum_tls_version",
                "preWarmedInstanceCount": "pre_warmed_instance_count",
                "remoteDebuggingEnabled": "remote_debugging_enabled",
                "remoteDebuggingVersion": "remote_debugging_version",
                "runtimeScaleMonitoringEnabled": "runtime_scale_monitoring_enabled",
                "scmIpRestrictions": "scm_ip_restriction",
                "scmMinimumTlsVersion": "scm_minimum_tls_version",
                "scmType": "scm_type",
                "scmUseMainIpRestriction": "scm_use_main_ip_restriction",
                "use32BitWorker": "use_32_bit_worker",
                "vnetRouteAllEnabled": "vnet_route_all_enabled",
                "websocketsEnabled": "websockets_enabled",
                "windowsFxVersion": "windows_fx_version",
                "workerCount": "worker_count"
            },
            "azure:appservice/getWindowsFunctionAppSiteConfigAppServiceLog:getWindowsFunctionAppSiteConfigAppServiceLog": {
                "diskQuotaMb": "disk_quota_mb",
                "retentionPeriodDays": "retention_period_days"
            },
            "azure:appservice/getWindowsFunctionAppSiteConfigApplicationStack:getWindowsFunctionAppSiteConfigApplicationStack": {
                "dotnetVersion": "dotnet_version",
                "javaVersion": "java_version",
                "nodeVersion": "node_version",
                "powershellCoreVersion": "powershell_core_version",
                "useCustomRuntime": "use_custom_runtime",
                "useDotnetIsolatedRuntime": "use_dotnet_isolated_runtime"
            },
            "azure:appservice/getWindowsFunctionAppSiteConfigCor:getWindowsFunctionAppSiteConfigCor": {
                "allowedOrigins": "allowed_origins",
                "supportCredentials": "support_credentials"
            },
            "azure:appservice/getWindowsFunctionAppSiteConfigIpRestriction:getWindowsFunctionAppSiteConfigIpRestriction": {
                "ipAddress": "ip_address",
                "serviceTag": "service_tag",
                "virtualNetworkSubnetId": "virtual_network_subnet_id"
            },
            "azure:appservice/getWindowsFunctionAppSiteConfigIpRestrictionHeader:getWindowsFunctionAppSiteConfigIpRestrictionHeader": {
                "xAzureFdids": "x_azure_fdid",
                "xFdHealthProbes": "x_fd_health_probe",
                "xForwardedFors": "x_forwarded_for",
                "xForwardedHosts": "x_forwarded_host"
            },
            "azure:appservice/getWindowsFunctionAppSiteConfigScmIpRestriction:getWindowsFunctionAppSiteConfigScmIpRestriction": {
                "ipAddress": "ip_address",
                "serviceTag": "service_tag",
                "virtualNetworkSubnetId": "virtual_network_subnet_id"
            },
            "azure:appservice/getWindowsFunctionAppSiteConfigScmIpRestrictionHeader:getWindowsFunctionAppSiteConfigScmIpRestrictionHeader": {
                "xAzureFdids": "x_azure_fdid",
                "xFdHealthProbes": "x_fd_health_probe",
                "xForwardedFors": "x_forwarded_for",
                "xForwardedHosts": "x_forwarded_host"
            },
            "azure:appservice/getWindowsFunctionAppStickySetting:getWindowsFunctionAppStickySetting": {
                "appSettingNames": "app_setting_names",
                "connectionStringNames": "connection_string_names"
            },
            "azure:appservice/getWindowsWebApp:getWindowsWebApp": {
                "appSettings": "app_settings",
                "authSettings": "auth_settings",
                "authSettingsV2s": "auth_settings_v2",
                "backups": "backup",
                "clientAffinityEnabled": "client_affinity_enabled",
                "clientCertificateEnabled": "client_certificate_enabled",
                "clientCertificateExclusionPaths": "client_certificate_exclusion_paths",
                "clientCertificateMode": "client_certificate_mode",
                "connectionStrings": "connection_string",
                "customDomainVerificationId": "custom_domain_verification_id",
                "defaultHostname": "default_hostname",
                "ftpPublishBasicAuthenticationEnabled": "ftp_publish_basic_authentication_enabled",
                "hostingEnvironmentId": "hosting_environment_id",
                "httpsOnly": "https_only",
                "identities": "identity",
                "outboundIpAddressLists": "outbound_ip_address_list",
                "outboundIpAddresses": "outbound_ip_addresses",
                "possibleOutboundIpAddressLists": "possible_outbound_ip_address_list",
                "possibleOutboundIpAddresses": "possible_outbound_ip_addresses",
                "publicNetworkAccessEnabled": "public_network_access_enabled",
                "resourceGroupName": "resource_group_name",
                "servicePlanId": "service_plan_id",
                "siteConfigs": "site_config",
                "siteCredentials": "site_credential",
                "stickySettings": "sticky_settings",
                "storageAccounts": "storage_account",
                "virtualNetworkSubnetId": "virtual_network_subnet_id",
                "webdeployPublishBasicAuthenticationEnabled": "webdeploy_publish_basic_authentication_enabled"
            },
            "azure:appservice/getWindowsWebAppAuthSetting:getWindowsWebAppAuthSetting": {
                "activeDirectories": "active_directory",
                "additionalLoginParameters": "additional_login_parameters",
                "allowedExternalRedirectUrls": "allowed_external_redirect_urls",
                "defaultProvider": "default_provider",
                "facebooks": "facebook",
                "githubs": "github",
                "googles": "google",
                "microsofts": "microsoft",
                "runtimeVersion": "runtime_version",
                "tokenRefreshExtensionHours": "token_refresh_extension_hours",
                "tokenStoreEnabled": "token_store_enabled",
                "twitters": "twitter",
                "unauthenticatedClientAction": "unauthenticated_client_action"
            },
            "azure:appservice/getWindowsWebAppAuthSettingActiveDirectory:getWindowsWebAppAuthSettingActiveDirectory": {
                "allowedAudiences": "allowed_audiences",
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "clientSecretSettingName": "client_secret_setting_name"
            },
            "azure:appservice/getWindowsWebAppAuthSettingFacebook:getWindowsWebAppAuthSettingFacebook": {
                "appId": "app_id",
                "appSecret": "app_secret",
                "appSecretSettingName": "app_secret_setting_name",
                "oauthScopes": "oauth_scopes"
            },
            "azure:appservice/getWindowsWebAppAuthSettingGithub:getWindowsWebAppAuthSettingGithub": {
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "clientSecretSettingName": "client_secret_setting_name",
                "oauthScopes": "oauth_scopes"
            },
            "azure:appservice/getWindowsWebAppAuthSettingGoogle:getWindowsWebAppAuthSettingGoogle": {
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "clientSecretSettingName": "client_secret_setting_name",
                "oauthScopes": "oauth_scopes"
            },
            "azure:appservice/getWindowsWebAppAuthSettingMicrosoft:getWindowsWebAppAuthSettingMicrosoft": {
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "clientSecretSettingName": "client_secret_setting_name",
                "oauthScopes": "oauth_scopes"
            },
            "azure:appservice/getWindowsWebAppAuthSettingTwitter:getWindowsWebAppAuthSettingTwitter": {
                "consumerKey": "consumer_key",
                "consumerSecret": "consumer_secret",
                "consumerSecretSettingName": "consumer_secret_setting_name"
            },
            "azure:appservice/getWindowsWebAppAuthSettingsV2:getWindowsWebAppAuthSettingsV2": {
                "activeDirectoryV2s": "active_directory_v2",
                "appleV2s": "apple_v2",
                "authEnabled": "auth_enabled",
                "azureStaticWebAppV2s": "azure_static_web_app_v2",
                "configFilePath": "config_file_path",
                "customOidcV2s": "custom_oidc_v2",
                "defaultProvider": "default_provider",
                "excludedPaths": "excluded_paths",
                "facebookV2s": "facebook_v2",
                "forwardProxyConvention": "forward_proxy_convention",
                "forwardProxyCustomHostHeaderName": "forward_proxy_custom_host_header_name",
                "forwardProxyCustomSchemeHeaderName": "forward_proxy_custom_scheme_header_name",
                "githubV2s": "github_v2",
                "googleV2s": "google_v2",
                "httpRouteApiPrefix": "http_route_api_prefix",
                "logins": "login",
                "microsoftV2s": "microsoft_v2",
                "requireAuthentication": "require_authentication",
                "requireHttps": "require_https",
                "runtimeVersion": "runtime_version",
                "twitterV2s": "twitter_v2",
                "unauthenticatedAction": "unauthenticated_action"
            },
            "azure:appservice/getWindowsWebAppAuthSettingsV2ActiveDirectoryV2:getWindowsWebAppAuthSettingsV2ActiveDirectoryV2": {
                "allowedApplications": "allowed_applications",
                "allowedAudiences": "allowed_audiences",
                "allowedGroups": "allowed_groups",
                "allowedIdentities": "allowed_identities",
                "clientId": "client_id",
                "clientSecretCertificateThumbprint": "client_secret_certificate_thumbprint",
                "clientSecretSettingName": "client_secret_setting_name",
                "jwtAllowedClientApplications": "jwt_allowed_client_applications",
                "jwtAllowedGroups": "jwt_allowed_groups",
                "loginParameters": "login_parameters",
                "tenantAuthEndpoint": "tenant_auth_endpoint",
                "wwwAuthenticationDisabled": "www_authentication_disabled"
            },
            "azure:appservice/getWindowsWebAppAuthSettingsV2AppleV2:getWindowsWebAppAuthSettingsV2AppleV2": {
                "clientId": "client_id",
                "clientSecretSettingName": "client_secret_setting_name",
                "loginScopes": "login_scopes"
            },
            "azure:appservice/getWindowsWebAppAuthSettingsV2AzureStaticWebAppV2:getWindowsWebAppAuthSettingsV2AzureStaticWebAppV2": {
                "clientId": "client_id"
            },
            "azure:appservice/getWindowsWebAppAuthSettingsV2CustomOidcV2:getWindowsWebAppAuthSettingsV2CustomOidcV2": {
                "authorisationEndpoint": "authorisation_endpoint",
                "certificationUri": "certification_uri",
                "clientCredentialMethod": "client_credential_method",
                "clientId": "client_id",
                "clientSecretSettingName": "client_secret_setting_name",
                "issuerEndpoint": "issuer_endpoint",
                "nameClaimType": "name_claim_type",
                "openidConfigurationEndpoint": "openid_configuration_endpoint",
                "tokenEndpoint": "token_endpoint"
            },
            "azure:appservice/getWindowsWebAppAuthSettingsV2FacebookV2:getWindowsWebAppAuthSettingsV2FacebookV2": {
                "appId": "app_id",
                "appSecretSettingName": "app_secret_setting_name",
                "graphApiVersion": "graph_api_version",
                "loginScopes": "login_scopes"
            },
            "azure:appservice/getWindowsWebAppAuthSettingsV2GithubV2:getWindowsWebAppAuthSettingsV2GithubV2": {
                "clientId": "client_id",
                "clientSecretSettingName": "client_secret_setting_name",
                "loginScopes": "login_scopes"
            },
            "azure:appservice/getWindowsWebAppAuthSettingsV2GoogleV2:getWindowsWebAppAuthSettingsV2GoogleV2": {
                "allowedAudiences": "allowed_audiences",
                "clientId": "client_id",
                "clientSecretSettingName": "client_secret_setting_name",
                "loginScopes": "login_scopes"
            },
            "azure:appservice/getWindowsWebAppAuthSettingsV2Login:getWindowsWebAppAuthSettingsV2Login": {
                "allowedExternalRedirectUrls": "allowed_external_redirect_urls",
                "cookieExpirationConvention": "cookie_expiration_convention",
                "cookieExpirationTime": "cookie_expiration_time",
                "logoutEndpoint": "logout_endpoint",
                "nonceExpirationTime": "nonce_expiration_time",
                "preserveUrlFragmentsForLogins": "preserve_url_fragments_for_logins",
                "tokenRefreshExtensionTime": "token_refresh_extension_time",
                "tokenStoreEnabled": "token_store_enabled",
                "tokenStorePath": "token_store_path",
                "tokenStoreSasSettingName": "token_store_sas_setting_name",
                "validateNonce": "validate_nonce"
            },
            "azure:appservice/getWindowsWebAppAuthSettingsV2MicrosoftV2:getWindowsWebAppAuthSettingsV2MicrosoftV2": {
                "allowedAudiences": "allowed_audiences",
                "clientId": "client_id",
                "clientSecretSettingName": "client_secret_setting_name",
                "loginScopes": "login_scopes"
            },
            "azure:appservice/getWindowsWebAppAuthSettingsV2TwitterV2:getWindowsWebAppAuthSettingsV2TwitterV2": {
                "consumerKey": "consumer_key",
                "consumerSecretSettingName": "consumer_secret_setting_name"
            },
            "azure:appservice/getWindowsWebAppBackup:getWindowsWebAppBackup": {
                "schedules": "schedule",
                "storageAccountUrl": "storage_account_url"
            },
            "azure:appservice/getWindowsWebAppBackupSchedule:getWindowsWebAppBackupSchedule": {
                "frequencyInterval": "frequency_interval",
                "frequencyUnit": "frequency_unit",
                "keepAtLeastOneBackup": "keep_at_least_one_backup",
                "lastExecutionTime": "last_execution_time",
                "retentionPeriodDays": "retention_period_days",
                "startTime": "start_time"
            },
            "azure:appservice/getWindowsWebAppIdentity:getWindowsWebAppIdentity": {
                "identityIds": "identity_ids",
                "principalId": "principal_id",
                "tenantId": "tenant_id"
            },
            "azure:appservice/getWindowsWebAppLog:getWindowsWebAppLog": {
                "applicationLogs": "application_logs",
                "detailedErrorMessages": "detailed_error_messages",
                "failedRequestTracing": "failed_request_tracing",
                "httpLogs": "http_logs"
            },
            "azure:appservice/getWindowsWebAppLogApplicationLog:getWindowsWebAppLogApplicationLog": {
                "azureBlobStorages": "azure_blob_storage",
                "fileSystemLevel": "file_system_level"
            },
            "azure:appservice/getWindowsWebAppLogApplicationLogAzureBlobStorage:getWindowsWebAppLogApplicationLogAzureBlobStorage": {
                "retentionInDays": "retention_in_days",
                "sasUrl": "sas_url"
            },
            "azure:appservice/getWindowsWebAppLogHttpLog:getWindowsWebAppLogHttpLog": {
                "azureBlobStorages": "azure_blob_storage",
                "fileSystems": "file_system"
            },
            "azure:appservice/getWindowsWebAppLogHttpLogAzureBlobStorage:getWindowsWebAppLogHttpLogAzureBlobStorage": {
                "retentionInDays": "retention_in_days",
                "sasUrl": "sas_url"
            },
            "azure:appservice/getWindowsWebAppLogHttpLogFileSystem:getWindowsWebAppLogHttpLogFileSystem": {
                "retentionInDays": "retention_in_days",
                "retentionInMb": "retention_in_mb"
            },
            "azure:appservice/getWindowsWebAppSiteConfig:getWindowsWebAppSiteConfig": {
                "alwaysOn": "always_on",
                "apiDefinitionUrl": "api_definition_url",
                "apiManagementApiId": "api_management_api_id",
                "appCommandLine": "app_command_line",
                "applicationStacks": "application_stack",
                "autoHealEnabled": "auto_heal_enabled",
                "autoHealSettings": "auto_heal_setting",
                "containerRegistryManagedIdentityClientId": "container_registry_managed_identity_client_id",
                "containerRegistryUseManagedIdentity": "container_registry_use_managed_identity",
                "defaultDocuments": "default_documents",
                "detailedErrorLoggingEnabled": "detailed_error_logging_enabled",
                "ftpsState": "ftps_state",
                "healthCheckEvictionTimeInMin": "health_check_eviction_time_in_min",
                "healthCheckPath": "health_check_path",
                "http2Enabled": "http2_enabled",
                "ipRestrictions": "ip_restriction",
                "loadBalancingMode": "load_balancing_mode",
                "localMysqlEnabled": "local_mysql_enabled",
                "managedPipelineMode": "managed_pipeline_mode",
                "minimumTlsVersion": "minimum_tls_version",
                "remoteDebuggingEnabled": "remote_debugging_enabled",
                "remoteDebuggingVersion": "remote_debugging_version",
                "scmIpRestrictions": "scm_ip_restriction",
                "scmMinimumTlsVersion": "scm_minimum_tls_version",
                "scmType": "scm_type",
                "scmUseMainIpRestriction": "scm_use_main_ip_restriction",
                "use32BitWorker": "use_32_bit_worker",
                "virtualApplications": "virtual_application",
                "vnetRouteAllEnabled": "vnet_route_all_enabled",
                "websocketsEnabled": "websockets_enabled",
                "windowsFxVersion": "windows_fx_version",
                "workerCount": "worker_count"
            },
            "azure:appservice/getWindowsWebAppSiteConfigApplicationStack:getWindowsWebAppSiteConfigApplicationStack": {
                "currentStack": "current_stack",
                "dockerContainerName": "docker_container_name",
                "dockerContainerRegistry": "docker_container_registry",
                "dockerContainerTag": "docker_container_tag",
                "dockerImageName": "docker_image_name",
                "dockerRegistryPassword": "docker_registry_password",
                "dockerRegistryUrl": "docker_registry_url",
                "dockerRegistryUsername": "docker_registry_username",
                "dotnetCoreVersion": "dotnet_core_version",
                "dotnetVersion": "dotnet_version",
                "javaContainer": "java_container",
                "javaContainerVersion": "java_container_version",
                "javaEmbeddedServerEnabled": "java_embedded_server_enabled",
                "javaVersion": "java_version",
                "nodeVersion": "node_version",
                "phpVersion": "php_version",
                "pythonVersion": "python_version",
                "tomcatVersion": "tomcat_version"
            },
            "azure:appservice/getWindowsWebAppSiteConfigAutoHealSetting:getWindowsWebAppSiteConfigAutoHealSetting": {
                "actions": "action",
                "triggers": "trigger"
            },
            "azure:appservice/getWindowsWebAppSiteConfigAutoHealSettingAction:getWindowsWebAppSiteConfigAutoHealSettingAction": {
                "actionType": "action_type",
                "customActions": "custom_action",
                "minimumProcessExecutionTime": "minimum_process_execution_time"
            },
            "azure:appservice/getWindowsWebAppSiteConfigAutoHealSettingTrigger:getWindowsWebAppSiteConfigAutoHealSettingTrigger": {
                "privateMemoryKb": "private_memory_kb",
                "slowRequests": "slow_request",
                "statusCodes": "status_code"
            },
            "azure:appservice/getWindowsWebAppSiteConfigAutoHealSettingTriggerSlowRequest:getWindowsWebAppSiteConfigAutoHealSettingTriggerSlowRequest": {
                "timeTaken": "time_taken"
            },
            "azure:appservice/getWindowsWebAppSiteConfigAutoHealSettingTriggerStatusCode:getWindowsWebAppSiteConfigAutoHealSettingTriggerStatusCode": {
                "statusCodeRange": "status_code_range",
                "subStatus": "sub_status",
                "win32StatusCode": "win32_status_code"
            },
            "azure:appservice/getWindowsWebAppSiteConfigCor:getWindowsWebAppSiteConfigCor": {
                "allowedOrigins": "allowed_origins",
                "supportCredentials": "support_credentials"
            },
            "azure:appservice/getWindowsWebAppSiteConfigIpRestriction:getWindowsWebAppSiteConfigIpRestriction": {
                "ipAddress": "ip_address",
                "serviceTag": "service_tag",
                "virtualNetworkSubnetId": "virtual_network_subnet_id"
            },
            "azure:appservice/getWindowsWebAppSiteConfigIpRestrictionHeader:getWindowsWebAppSiteConfigIpRestrictionHeader": {
                "xAzureFdids": "x_azure_fdid",
                "xFdHealthProbes": "x_fd_health_probe",
                "xForwardedFors": "x_forwarded_for",
                "xForwardedHosts": "x_forwarded_host"
            },
            "azure:appservice/getWindowsWebAppSiteConfigScmIpRestriction:getWindowsWebAppSiteConfigScmIpRestriction": {
                "ipAddress": "ip_address",
                "serviceTag": "service_tag",
                "virtualNetworkSubnetId": "virtual_network_subnet_id"
            },
            "azure:appservice/getWindowsWebAppSiteConfigScmIpRestrictionHeader:getWindowsWebAppSiteConfigScmIpRestrictionHeader": {
                "xAzureFdids": "x_azure_fdid",
                "xFdHealthProbes": "x_fd_health_probe",
                "xForwardedFors": "x_forwarded_for",
                "xForwardedHosts": "x_forwarded_host"
            },
            "azure:appservice/getWindowsWebAppSiteConfigVirtualApplication:getWindowsWebAppSiteConfigVirtualApplication": {
                "physicalPath": "physical_path",
                "virtualDirectories": "virtual_directory",
                "virtualPath": "virtual_path"
            },
            "azure:appservice/getWindowsWebAppSiteConfigVirtualApplicationVirtualDirectory:getWindowsWebAppSiteConfigVirtualApplicationVirtualDirectory": {
                "physicalPath": "physical_path",
                "virtualPath": "virtual_path"
            },
            "azure:appservice/getWindowsWebAppStickySetting:getWindowsWebAppStickySetting": {
                "appSettingNames": "app_setting_names",
                "connectionStringNames": "connection_string_names"
            },
            "azure:appservice/getWindowsWebAppStorageAccount:getWindowsWebAppStorageAccount": {
                "accessKey": "access_key",
                "accountName": "account_name",
                "mountPath": "mount_path",
                "shareName": "share_name"
            },
            "azure:appservice/hybridConnection:HybridConnection": {
                "appServiceName": "app_service_name",
                "namespaceName": "namespace_name",
                "relayId": "relay_id",
                "relayName": "relay_name",
                "resourceGroupName": "resource_group_name",
                "sendKeyName": "send_key_name",
                "sendKeyValue": "send_key_value",
                "serviceBusNamespace": "service_bus_namespace",
                "serviceBusSuffix": "service_bus_suffix"
            },
            "azure:appservice/linuxFunctionApp:LinuxFunctionApp": {
                "appSettings": "app_settings",
                "authSettings": "auth_settings",
                "authSettingsV2": "auth_settings_v2",
                "builtinLoggingEnabled": "builtin_logging_enabled",
                "clientCertificateEnabled": "client_certificate_enabled",
                "clientCertificateExclusionPaths": "client_certificate_exclusion_paths",
                "clientCertificateMode": "client_certificate_mode",
                "connectionStrings": "connection_string",
                "contentShareForceDisabled": "content_share_force_disabled",
                "customDomainVerificationId": "custom_domain_verification_id",
                "dailyMemoryTimeQuota": "daily_memory_time_quota",
                "defaultHostname": "default_hostname",
                "ftpPublishBasicAuthenticationEnabled": "ftp_publish_basic_authentication_enabled",
                "functionsExtensionVersion": "functions_extension_version",
                "hostingEnvironmentId": "hosting_environment_id",
                "httpsOnly": "https_only",
                "keyVaultReferenceIdentityId": "key_vault_reference_identity_id",
                "outboundIpAddressLists": "outbound_ip_address_list",
                "outboundIpAddresses": "outbound_ip_addresses",
                "possibleOutboundIpAddressLists": "possible_outbound_ip_address_list",
                "possibleOutboundIpAddresses": "possible_outbound_ip_addresses",
                "publicNetworkAccessEnabled": "public_network_access_enabled",
                "resourceGroupName": "resource_group_name",
                "servicePlanId": "service_plan_id",
                "siteConfig": "site_config",
                "siteCredentials": "site_credential",
                "stickySettings": "sticky_settings",
                "storageAccountAccessKey": "storage_account_access_key",
                "storageAccountName": "storage_account_name",
                "storageAccounts": "storage_account",
                "storageKeyVaultSecretId": "storage_key_vault_secret_id",
                "storageUsesManagedIdentity": "storage_uses_managed_identity",
                "virtualNetworkSubnetId": "virtual_network_subnet_id",
                "webdeployPublishBasicAuthenticationEnabled": "webdeploy_publish_basic_authentication_enabled",
                "zipDeployFile": "zip_deploy_file"
            },
            "azure:appservice/linuxFunctionAppSlot:LinuxFunctionAppSlot": {
                "appSettings": "app_settings",
                "authSettings": "auth_settings",
                "authSettingsV2": "auth_settings_v2",
                "builtinLoggingEnabled": "builtin_logging_enabled",
                "clientCertificateEnabled": "client_certificate_enabled",
                "clientCertificateExclusionPaths": "client_certificate_exclusion_paths",
                "clientCertificateMode": "client_certificate_mode",
                "connectionStrings": "connection_string",
                "contentShareForceDisabled": "content_share_force_disabled",
                "customDomainVerificationId": "custom_domain_verification_id",
                "dailyMemoryTimeQuota": "daily_memory_time_quota",
                "defaultHostname": "default_hostname",
                "ftpPublishBasicAuthenticationEnabled": "ftp_publish_basic_authentication_enabled",
                "functionAppId": "function_app_id",
                "functionsExtensionVersion": "functions_extension_version",
                "hostingEnvironmentId": "hosting_environment_id",
                "httpsOnly": "https_only",
                "keyVaultReferenceIdentityId": "key_vault_reference_identity_id",
                "outboundIpAddressLists": "outbound_ip_address_list",
                "outboundIpAddresses": "outbound_ip_addresses",
                "possibleOutboundIpAddressLists": "possible_outbound_ip_address_list",
                "possibleOutboundIpAddresses": "possible_outbound_ip_addresses",
                "publicNetworkAccessEnabled": "public_network_access_enabled",
                "servicePlanId": "service_plan_id",
                "siteConfig": "site_config",
                "siteCredentials": "site_credential",
                "storageAccountAccessKey": "storage_account_access_key",
                "storageAccountName": "storage_account_name",
                "storageAccounts": "storage_account",
                "storageKeyVaultSecretId": "storage_key_vault_secret_id",
                "storageUsesManagedIdentity": "storage_uses_managed_identity",
                "virtualNetworkSubnetId": "virtual_network_subnet_id",
                "webdeployPublishBasicAuthenticationEnabled": "webdeploy_publish_basic_authentication_enabled"
            },
            "azure:appservice/linuxWebApp:LinuxWebApp": {
                "appSettings": "app_settings",
                "authSettings": "auth_settings",
                "authSettingsV2": "auth_settings_v2",
                "clientAffinityEnabled": "client_affinity_enabled",
                "clientCertificateEnabled": "client_certificate_enabled",
                "clientCertificateExclusionPaths": "client_certificate_exclusion_paths",
                "clientCertificateMode": "client_certificate_mode",
                "connectionStrings": "connection_string",
                "customDomainVerificationId": "custom_domain_verification_id",
                "defaultHostname": "default_hostname",
                "ftpPublishBasicAuthenticationEnabled": "ftp_publish_basic_authentication_enabled",
                "hostingEnvironmentId": "hosting_environment_id",
                "httpsOnly": "https_only",
                "keyVaultReferenceIdentityId": "key_vault_reference_identity_id",
                "outboundIpAddressLists": "outbound_ip_address_list",
                "outboundIpAddresses": "outbound_ip_addresses",
                "possibleOutboundIpAddressLists": "possible_outbound_ip_address_list",
                "possibleOutboundIpAddresses": "possible_outbound_ip_addresses",
                "publicNetworkAccessEnabled": "public_network_access_enabled",
                "resourceGroupName": "resource_group_name",
                "servicePlanId": "service_plan_id",
                "siteConfig": "site_config",
                "siteCredentials": "site_credential",
                "stickySettings": "sticky_settings",
                "storageAccounts": "storage_account",
                "virtualNetworkSubnetId": "virtual_network_subnet_id",
                "webdeployPublishBasicAuthenticationEnabled": "webdeploy_publish_basic_authentication_enabled",
                "zipDeployFile": "zip_deploy_file"
            },
            "azure:appservice/linuxWebAppSlot:LinuxWebAppSlot": {
                "appMetadata": "app_metadata",
                "appServiceId": "app_service_id",
                "appSettings": "app_settings",
                "authSettings": "auth_settings",
                "authSettingsV2": "auth_settings_v2",
                "clientAffinityEnabled": "client_affinity_enabled",
                "clientCertificateEnabled": "client_certificate_enabled",
                "clientCertificateExclusionPaths": "client_certificate_exclusion_paths",
                "clientCertificateMode": "client_certificate_mode",
                "connectionStrings": "connection_string",
                "customDomainVerificationId": "custom_domain_verification_id",
                "defaultHostname": "default_hostname",
                "ftpPublishBasicAuthenticationEnabled": "ftp_publish_basic_authentication_enabled",
                "hostingEnvironmentId": "hosting_environment_id",
                "httpsOnly": "https_only",
                "keyVaultReferenceIdentityId": "key_vault_reference_identity_id",
                "outboundIpAddressLists": "outbound_ip_address_list",
                "outboundIpAddresses": "outbound_ip_addresses",
                "possibleOutboundIpAddressLists": "possible_outbound_ip_address_list",
                "possibleOutboundIpAddresses": "possible_outbound_ip_addresses",
                "publicNetworkAccessEnabled": "public_network_access_enabled",
                "servicePlanId": "service_plan_id",
                "siteConfig": "site_config",
                "siteCredentials": "site_credential",
                "storageAccounts": "storage_account",
                "virtualNetworkSubnetId": "virtual_network_subnet_id",
                "webdeployPublishBasicAuthenticationEnabled": "webdeploy_publish_basic_authentication_enabled",
                "zipDeployFile": "zip_deploy_file"
            },
            "azure:appservice/managedCertificate:ManagedCertificate": {
                "canonicalName": "canonical_name",
                "customHostnameBindingId": "custom_hostname_binding_id",
                "expirationDate": "expiration_date",
                "friendlyName": "friendly_name",
                "hostNames": "host_names",
                "issueDate": "issue_date",
                "subjectName": "subject_name"
            },
            "azure:appservice/plan:Plan": {
                "appServiceEnvironmentId": "app_service_environment_id",
                "isXenon": "is_xenon",
                "maximumElasticWorkerCount": "maximum_elastic_worker_count",
                "maximumNumberOfWorkers": "maximum_number_of_workers",
                "perSiteScaling": "per_site_scaling",
                "resourceGroupName": "resource_group_name",
                "zoneRedundant": "zone_redundant"
            },
            "azure:appservice/publicCertificate:PublicCertificate": {
                "appServiceName": "app_service_name",
                "certificateLocation": "certificate_location",
                "certificateName": "certificate_name",
                "resourceGroupName": "resource_group_name"
            },
            "azure:appservice/servicePlan:ServicePlan": {
                "appServiceEnvironmentId": "app_service_environment_id",
                "maximumElasticWorkerCount": "maximum_elastic_worker_count",
                "osType": "os_type",
                "perSiteScalingEnabled": "per_site_scaling_enabled",
                "resourceGroupName": "resource_group_name",
                "skuName": "sku_name",
                "workerCount": "worker_count",
                "zoneBalancingEnabled": "zone_balancing_enabled"
            },
            "azure:appservice/slot:Slot": {
                "appServiceName": "app_service_name",
                "appServicePlanId": "app_service_plan_id",
                "appSettings": "app_settings",
                "authSettings": "auth_settings",
                "clientAffinityEnabled": "client_affinity_enabled",
                "connectionStrings": "connection_string",
                "defaultSiteHostname": "default_site_hostname",
                "httpsOnly": "https_only",
                "keyVaultReferenceIdentityId": "key_vault_reference_identity_id",
                "resourceGroupName": "resource_group_name",
                "siteConfig": "site_config",
                "siteCredentials": "site_credential",
                "storageAccounts": "storage_account"
            },
            "azure:appservice/slotCustomHostnameBinding:SlotCustomHostnameBinding": {
                "appServiceSlotId": "app_service_slot_id",
                "sslState": "ssl_state",
                "virtualIp": "virtual_ip"
            },
            "azure:appservice/slotVirtualNetworkSwiftConnection:SlotVirtualNetworkSwiftConnection": {
                "appServiceId": "app_service_id",
                "slotName": "slot_name",
                "subnetId": "subnet_id"
            },
            "azure:appservice/sourceCodeToken:SourceCodeToken": {
                "tokenSecret": "token_secret"
            },
            "azure:appservice/sourceControl:SourceControl": {
                "appId": "app_id",
                "githubActionConfiguration": "github_action_configuration",
                "repoUrl": "repo_url",
                "rollbackEnabled": "rollback_enabled",
                "scmType": "scm_type",
                "useLocalGit": "use_local_git",
                "useManualIntegration": "use_manual_integration",
                "useMercurial": "use_mercurial",
                "usesGithubAction": "uses_github_action"
            },
            "azure:appservice/sourceControlSlot:SourceControlSlot": {
                "githubActionConfiguration": "github_action_configuration",
                "repoUrl": "repo_url",
                "rollbackEnabled": "rollback_enabled",
                "scmType": "scm_type",
                "slotId": "slot_id",
                "useLocalGit": "use_local_git",
                "useManualIntegration": "use_manual_integration",
                "useMercurial": "use_mercurial",
                "usesGithubAction": "uses_github_action"
            },
            "azure:appservice/sourceControlToken:SourceControlToken": {
                "tokenSecret": "token_secret"
            },
            "azure:appservice/staticSite:StaticSite": {
                "apiKey": "api_key",
                "appSettings": "app_settings",
                "defaultHostName": "default_host_name",
                "resourceGroupName": "resource_group_name",
                "skuSize": "sku_size",
                "skuTier": "sku_tier"
            },
            "azure:appservice/staticSiteCustomDomain:StaticSiteCustomDomain": {
                "domainName": "domain_name",
                "staticSiteId": "static_site_id",
                "validationToken": "validation_token",
                "validationType": "validation_type"
            },
            "azure:appservice/virtualNetworkSwiftConnection:VirtualNetworkSwiftConnection": {
                "appServiceId": "app_service_id",
                "subnetId": "subnet_id"
            },
            "azure:appservice/webAppActiveSlot:WebAppActiveSlot": {
                "lastSuccessfulSwap": "last_successful_swap",
                "overwriteNetworkConfig": "overwrite_network_config",
                "slotId": "slot_id"
            },
            "azure:appservice/webAppHybridConnection:WebAppHybridConnection": {
                "namespaceName": "namespace_name",
                "relayId": "relay_id",
                "relayName": "relay_name",
                "sendKeyName": "send_key_name",
                "sendKeyValue": "send_key_value",
                "serviceBusNamespace": "service_bus_namespace",
                "serviceBusSuffix": "service_bus_suffix",
                "webAppId": "web_app_id"
            },
            "azure:appservice/windowsFunctionApp:WindowsFunctionApp": {
                "appSettings": "app_settings",
                "authSettings": "auth_settings",
                "authSettingsV2": "auth_settings_v2",
                "builtinLoggingEnabled": "builtin_logging_enabled",
                "clientCertificateEnabled": "client_certificate_enabled",
                "clientCertificateExclusionPaths": "client_certificate_exclusion_paths",
                "clientCertificateMode": "client_certificate_mode",
                "connectionStrings": "connection_string",
                "contentShareForceDisabled": "content_share_force_disabled",
                "customDomainVerificationId": "custom_domain_verification_id",
                "dailyMemoryTimeQuota": "daily_memory_time_quota",
                "defaultHostname": "default_hostname",
                "ftpPublishBasicAuthenticationEnabled": "ftp_publish_basic_authentication_enabled",
                "functionsExtensionVersion": "functions_extension_version",
                "hostingEnvironmentId": "hosting_environment_id",
                "httpsOnly": "https_only",
                "keyVaultReferenceIdentityId": "key_vault_reference_identity_id",
                "outboundIpAddressLists": "outbound_ip_address_list",
                "outboundIpAddresses": "outbound_ip_addresses",
                "possibleOutboundIpAddressLists": "possible_outbound_ip_address_list",
                "possibleOutboundIpAddresses": "possible_outbound_ip_addresses",
                "publicNetworkAccessEnabled": "public_network_access_enabled",
                "resourceGroupName": "resource_group_name",
                "servicePlanId": "service_plan_id",
                "siteConfig": "site_config",
                "siteCredentials": "site_credential",
                "stickySettings": "sticky_settings",
                "storageAccountAccessKey": "storage_account_access_key",
                "storageAccountName": "storage_account_name",
                "storageAccounts": "storage_account",
                "storageKeyVaultSecretId": "storage_key_vault_secret_id",
                "storageUsesManagedIdentity": "storage_uses_managed_identity",
                "virtualNetworkSubnetId": "virtual_network_subnet_id",
                "webdeployPublishBasicAuthenticationEnabled": "webdeploy_publish_basic_authentication_enabled",
                "zipDeployFile": "zip_deploy_file"
            },
            "azure:appservice/windowsFunctionAppSlot:WindowsFunctionAppSlot": {
                "appSettings": "app_settings",
                "authSettings": "auth_settings",
                "authSettingsV2": "auth_settings_v2",
                "builtinLoggingEnabled": "builtin_logging_enabled",
                "clientCertificateEnabled": "client_certificate_enabled",
                "clientCertificateExclusionPaths": "client_certificate_exclusion_paths",
                "clientCertificateMode": "client_certificate_mode",
                "connectionStrings": "connection_string",
                "contentShareForceDisabled": "content_share_force_disabled",
                "customDomainVerificationId": "custom_domain_verification_id",
                "dailyMemoryTimeQuota": "daily_memory_time_quota",
                "defaultHostname": "default_hostname",
                "ftpPublishBasicAuthenticationEnabled": "ftp_publish_basic_authentication_enabled",
                "functionAppId": "function_app_id",
                "functionsExtensionVersion": "functions_extension_version",
                "hostingEnvironmentId": "hosting_environment_id",
                "httpsOnly": "https_only",
                "keyVaultReferenceIdentityId": "key_vault_reference_identity_id",
                "outboundIpAddressLists": "outbound_ip_address_list",
                "outboundIpAddresses": "outbound_ip_addresses",
                "possibleOutboundIpAddressLists": "possible_outbound_ip_address_list",
                "possibleOutboundIpAddresses": "possible_outbound_ip_addresses",
                "publicNetworkAccessEnabled": "public_network_access_enabled",
                "servicePlanId": "service_plan_id",
                "siteConfig": "site_config",
                "siteCredentials": "site_credential",
                "storageAccountAccessKey": "storage_account_access_key",
                "storageAccountName": "storage_account_name",
                "storageAccounts": "storage_account",
                "storageKeyVaultSecretId": "storage_key_vault_secret_id",
                "storageUsesManagedIdentity": "storage_uses_managed_identity",
                "virtualNetworkSubnetId": "virtual_network_subnet_id",
                "webdeployPublishBasicAuthenticationEnabled": "webdeploy_publish_basic_authentication_enabled"
            },
            "azure:appservice/windowsWebApp:WindowsWebApp": {
                "appSettings": "app_settings",
                "authSettings": "auth_settings",
                "authSettingsV2": "auth_settings_v2",
                "clientAffinityEnabled": "client_affinity_enabled",
                "clientCertificateEnabled": "client_certificate_enabled",
                "clientCertificateExclusionPaths": "client_certificate_exclusion_paths",
                "clientCertificateMode": "client_certificate_mode",
                "connectionStrings": "connection_string",
                "customDomainVerificationId": "custom_domain_verification_id",
                "defaultHostname": "default_hostname",
                "ftpPublishBasicAuthenticationEnabled": "ftp_publish_basic_authentication_enabled",
                "hostingEnvironmentId": "hosting_environment_id",
                "httpsOnly": "https_only",
                "keyVaultReferenceIdentityId": "key_vault_reference_identity_id",
                "outboundIpAddressLists": "outbound_ip_address_list",
                "outboundIpAddresses": "outbound_ip_addresses",
                "possibleOutboundIpAddressLists": "possible_outbound_ip_address_list",
                "possibleOutboundIpAddresses": "possible_outbound_ip_addresses",
                "publicNetworkAccessEnabled": "public_network_access_enabled",
                "resourceGroupName": "resource_group_name",
                "servicePlanId": "service_plan_id",
                "siteConfig": "site_config",
                "siteCredentials": "site_credential",
                "stickySettings": "sticky_settings",
                "storageAccounts": "storage_account",
                "virtualNetworkSubnetId": "virtual_network_subnet_id",
                "webdeployPublishBasicAuthenticationEnabled": "webdeploy_publish_basic_authentication_enabled",
                "zipDeployFile": "zip_deploy_file"
            },
            "azure:appservice/windowsWebAppSlot:WindowsWebAppSlot": {
                "appServiceId": "app_service_id",
                "appSettings": "app_settings",
                "authSettings": "auth_settings",
                "authSettingsV2": "auth_settings_v2",
                "clientAffinityEnabled": "client_affinity_enabled",
                "clientCertificateEnabled": "client_certificate_enabled",
                "clientCertificateExclusionPaths": "client_certificate_exclusion_paths",
                "clientCertificateMode": "client_certificate_mode",
                "connectionStrings": "connection_string",
                "customDomainVerificationId": "custom_domain_verification_id",
                "defaultHostname": "default_hostname",
                "ftpPublishBasicAuthenticationEnabled": "ftp_publish_basic_authentication_enabled",
                "hostingEnvironmentId": "hosting_environment_id",
                "httpsOnly": "https_only",
                "keyVaultReferenceIdentityId": "key_vault_reference_identity_id",
                "outboundIpAddressLists": "outbound_ip_address_list",
                "outboundIpAddresses": "outbound_ip_addresses",
                "possibleOutboundIpAddressLists": "possible_outbound_ip_address_list",
                "possibleOutboundIpAddresses": "possible_outbound_ip_addresses",
                "publicNetworkAccessEnabled": "public_network_access_enabled",
                "servicePlanId": "service_plan_id",
                "siteConfig": "site_config",
                "siteCredentials": "site_credential",
                "storageAccounts": "storage_account",
                "virtualNetworkSubnetId": "virtual_network_subnet_id",
                "webdeployPublishBasicAuthenticationEnabled": "webdeploy_publish_basic_authentication_enabled",
                "zipDeployFile": "zip_deploy_file"
            },
            "azure:arc/ResourceBridgeApplianceIdentity:ResourceBridgeApplianceIdentity": {
                "principalId": "principal_id",
                "tenantId": "tenant_id"
            },
            "azure:arc/privateLinkScope:PrivateLinkScope": {
                "publicNetworkAccessEnabled": "public_network_access_enabled",
                "resourceGroupName": "resource_group_name"
            },
            "azure:arc/resourceBridgeAppliance:ResourceBridgeAppliance": {
                "infrastructureProvider": "infrastructure_provider",
                "publicKeyBase64": "public_key_base64",
                "resourceGroupName": "resource_group_name"
            },
            "azure:arckubernetes/ClusterExtensionIdentity:ClusterExtensionIdentity": {
                "principalId": "principal_id",
                "tenantId": "tenant_id"
            },
            "azure:arckubernetes/ClusterIdentity:ClusterIdentity": {
                "principalId": "principal_id",
                "tenantId": "tenant_id"
            },
            "azure:arckubernetes/FluxConfigurationBlobStorage:FluxConfigurationBlobStorage": {
                "accountKey": "account_key",
                "containerId": "container_id",
                "localAuthReference": "local_auth_reference",
                "sasToken": "sas_token",
                "servicePrincipal": "service_principal",
                "syncIntervalInSeconds": "sync_interval_in_seconds",
                "timeoutInSeconds": "timeout_in_seconds"
            },
            "azure:arckubernetes/FluxConfigurationBlobStorageServicePrincipal:FluxConfigurationBlobStorageServicePrincipal": {
                "clientCertificateBase64": "client_certificate_base64",
                "clientCertificatePassword": "client_certificate_password",
                "clientCertificateSendChain": "client_certificate_send_chain",
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "tenantId": "tenant_id"
            },
            "azure:arckubernetes/FluxConfigurationBucket:FluxConfigurationBucket": {
                "accessKey": "access_key",
                "bucketName": "bucket_name",
                "localAuthReference": "local_auth_reference",
                "secretKeyBase64": "secret_key_base64",
                "syncIntervalInSeconds": "sync_interval_in_seconds",
                "timeoutInSeconds": "timeout_in_seconds",
                "tlsEnabled": "tls_enabled"
            },
            "azure:arckubernetes/FluxConfigurationGitRepository:FluxConfigurationGitRepository": {
                "httpsCaCertBase64": "https_ca_cert_base64",
                "httpsKeyBase64": "https_key_base64",
                "httpsUser": "https_user",
                "localAuthReference": "local_auth_reference",
                "referenceType": "reference_type",
                "referenceValue": "reference_value",
                "sshKnownHostsBase64": "ssh_known_hosts_base64",
                "sshPrivateKeyBase64": "ssh_private_key_base64",
                "syncIntervalInSeconds": "sync_interval_in_seconds",
                "timeoutInSeconds": "timeout_in_seconds"
            },
            "azure:arckubernetes/FluxConfigurationKustomization:FluxConfigurationKustomization": {
                "dependsOns": "depends_on",
                "garbageCollectionEnabled": "garbage_collection_enabled",
                "recreatingEnabled": "recreating_enabled",
                "retryIntervalInSeconds": "retry_interval_in_seconds",
                "syncIntervalInSeconds": "sync_interval_in_seconds",
                "timeoutInSeconds": "timeout_in_seconds"
            },
            "azure:arckubernetes/cluster:Cluster": {
                "agentPublicKeyCertificate": "agent_public_key_certificate",
                "agentVersion": "agent_version",
                "kubernetesVersion": "kubernetes_version",
                "resourceGroupName": "resource_group_name",
                "totalCoreCount": "total_core_count",
                "totalNodeCount": "total_node_count"
            },
            "azure:arckubernetes/clusterExtension:ClusterExtension": {
                "clusterId": "cluster_id",
                "configurationProtectedSettings": "configuration_protected_settings",
                "configurationSettings": "configuration_settings",
                "currentVersion": "current_version",
                "extensionType": "extension_type",
                "releaseNamespace": "release_namespace",
                "releaseTrain": "release_train",
                "targetNamespace": "target_namespace"
            },
            "azure:arckubernetes/fluxConfiguration:FluxConfiguration": {
                "blobStorage": "blob_storage",
                "clusterId": "cluster_id",
                "continuousReconciliationEnabled": "continuous_reconciliation_enabled",
                "gitRepository": "git_repository"
            },
            "azure:arcmachine/extension:Extension": {
                "arcMachineId": "arc_machine_id",
                "automaticUpgradeEnabled": "automatic_upgrade_enabled",
                "forceUpdateTag": "force_update_tag",
                "protectedSettings": "protected_settings",
                "typeHandlerVersion": "type_handler_version"
            },
            "azure:arcmachine/get:get": {
                "activeDirectoryFqdn": "active_directory_fqdn",
                "agentVersion": "agent_version",
                "agents": "agent",
                "clientPublicKey": "client_public_key",
                "cloudMetadatas": "cloud_metadata",
                "detectedProperties": "detected_properties",
                "displayName": "display_name",
                "dnsFqdn": "dns_fqdn",
                "domainName": "domain_name",
                "identities": "identity",
                "lastStatusChangeTime": "last_status_change_time",
                "locationDatas": "location_data",
                "machineFqdn": "machine_fqdn",
                "mssqlDiscovered": "mssql_discovered",
                "osName": "os_name",
                "osProfiles": "os_profile",
                "osSku": "os_sku",
                "osType": "os_type",
                "osVersion": "os_version",
                "parentClusterResourceId": "parent_cluster_resource_id",
                "privateLinkScopeResourceId": "private_link_scope_resource_id",
                "resourceGroupName": "resource_group_name",
                "serviceStatuses": "service_status",
                "vmId": "vm_id",
                "vmUuid": "vm_uuid"
            },
            "azure:arcmachine/getAgent:getAgent": {
                "extensionsAllowLists": "extensions_allow_list",
                "extensionsBlockLists": "extensions_block_list",
                "extensionsEnabled": "extensions_enabled",
                "guestConfigurationEnabled": "guest_configuration_enabled",
                "incomingConnectionsPorts": "incoming_connections_ports",
                "proxyBypasses": "proxy_bypass",
                "proxyUrl": "proxy_url"
            },
            "azure:arcmachine/getIdentity:getIdentity": {
                "principalId": "principal_id",
                "tenantId": "tenant_id"
            },
            "azure:arcmachine/getLocationData:getLocationData": {
                "countryOrRegion": "country_or_region"
            },
            "azure:arcmachine/getOsProfile:getOsProfile": {
                "computerName": "computer_name",
                "linuxes": "linux"
            },
            "azure:arcmachine/getOsProfileLinux:getOsProfileLinux": {
                "patches": "patch"
            },
            "azure:arcmachine/getOsProfileLinuxPatch:getOsProfileLinuxPatch": {
                "assessmentMode": "assessment_mode",
                "patchMode": "patch_mode"
            },
            "azure:arcmachine/getOsProfileWindow:getOsProfileWindow": {
                "patches": "patch"
            },
            "azure:arcmachine/getOsProfileWindowPatch:getOsProfileWindowPatch": {
                "assessmentMode": "assessment_mode",
                "patchMode": "patch_mode"
            },
            "azure:arcmachine/getServiceStatus:getServiceStatus": {
                "extensionServices": "extension_service",
                "guestConfigurationServices": "guest_configuration_service"
            },
            "azure:arcmachine/getServiceStatusExtensionService:getServiceStatusExtensionService": {
                "startupType": "startup_type"
            },
            "azure:arcmachine/getServiceStatusGuestConfigurationService:getServiceStatusGuestConfigurationService": {
                "startupType": "startup_type"
            },
            "azure:armmsi/federatedIdentityCredential:FederatedIdentityCredential": {
                "parentId": "parent_id",
                "resourceGroupName": "resource_group_name"
            },
            "azure:attestation/ProviderPolicy:ProviderPolicy": {
                "environmentType": "environment_type"
            },
            "azure:attestation/getProvider:getProvider": {
                "attestationUri": "attestation_uri",
                "resourceGroupName": "resource_group_name",
                "trustModel": "trust_model"
            },
            "azure:attestation/provider:Provider": {
                "attestationUri": "attestation_uri",
                "openEnclavePolicyBase64": "open_enclave_policy_base64",
                "policies": "policy",
                "policySigningCertificateData": "policy_signing_certificate_data",
                "resourceGroupName": "resource_group_name",
                "sevSnpPolicyBase64": "sev_snp_policy_base64",
                "sgxEnclavePolicyBase64": "sgx_enclave_policy_base64",
                "tpmPolicyBase64": "tpm_policy_base64",
                "trustModel": "trust_model"
            },
            "azure:authorization/RoleDefinitionPermission:RoleDefinitionPermission": {
                "dataActions": "data_actions",
                "notActions": "not_actions",
                "notDataActions": "not_data_actions"
            },
            "azure:authorization/assignment:Assignment": {
                "conditionVersion": "condition_version",
                "delegatedManagedIdentityResourceId": "delegated_managed_identity_resource_id",
                "principalId": "principal_id",
                "principalType": "principal_type",
                "roleDefinitionId": "role_definition_id",
                "roleDefinitionName": "role_definition_name",
                "skipServicePrincipalAadCheck": "skip_service_principal_aad_check"
            },
            "azure:authorization/getRoleDefinition:getRoleDefinition": {
                "assignableScopes": "assignable_scopes",
                "roleDefinitionId": "role_definition_id"
            },
            "azure:authorization/getRoleDefinitionPermission:getRoleDefinitionPermission": {
                "dataActions": "data_actions",
                "notActions": "not_actions",
                "notDataActions": "not_data_actions"
            },
            "azure:authorization/getUserAssignedIdentity:getUserAssignedIdentity": {
                "clientId": "client_id",
                "principalId": "principal_id",
                "resourceGroupName": "resource_group_name",
                "tenantId": "tenant_id"
            },
            "azure:authorization/roleDefinition:RoleDefinition": {
                "assignableScopes": "assignable_scopes",
                "roleDefinitionId": "role_definition_id",
                "roleDefinitionResourceId": "role_definition_resource_id"
            },
            "azure:authorization/userAssignedIdentity:UserAssignedIdentity": {
                "clientId": "client_id",
                "principalId": "principal_id",
                "resourceGroupName": "resource_group_name",
                "tenantId": "tenant_id"
            },
            "azure:automanage/ConfigurationAntimalware:ConfigurationAntimalware": {
                "realTimeProtectionEnabled": "real_time_protection_enabled",
                "scheduledScanDay": "scheduled_scan_day",
                "scheduledScanEnabled": "scheduled_scan_enabled",
                "scheduledScanTimeInMinutes": "scheduled_scan_time_in_minutes",
                "scheduledScanType": "scheduled_scan_type"
            },
            "azure:automanage/ConfigurationAzureSecurityBaseline:ConfigurationAzureSecurityBaseline": {
                "assignmentType": "assignment_type"
            },
            "azure:automanage/ConfigurationBackup:ConfigurationBackup": {
                "instantRpRetentionRangeInDays": "instant_rp_retention_range_in_days",
                "policyName": "policy_name",
                "retentionPolicy": "retention_policy",
                "schedulePolicy": "schedule_policy",
                "timeZone": "time_zone"
            },
            "azure:automanage/ConfigurationBackupRetentionPolicy:ConfigurationBackupRetentionPolicy": {
                "dailySchedule": "daily_schedule",
                "retentionPolicyType": "retention_policy_type",
                "weeklySchedule": "weekly_schedule"
            },
            "azure:automanage/ConfigurationBackupRetentionPolicyDailySchedule:ConfigurationBackupRetentionPolicyDailySchedule": {
                "retentionDuration": "retention_duration",
                "retentionTimes": "retention_times"
            },
            "azure:automanage/ConfigurationBackupRetentionPolicyDailyScheduleRetentionDuration:ConfigurationBackupRetentionPolicyDailyScheduleRetentionDuration": {
                "durationType": "duration_type"
            },
            "azure:automanage/ConfigurationBackupRetentionPolicyWeeklySchedule:ConfigurationBackupRetentionPolicyWeeklySchedule": {
                "retentionDuration": "retention_duration",
                "retentionTimes": "retention_times"
            },
            "azure:automanage/ConfigurationBackupRetentionPolicyWeeklyScheduleRetentionDuration:ConfigurationBackupRetentionPolicyWeeklyScheduleRetentionDuration": {
                "durationType": "duration_type"
            },
            "azure:automanage/ConfigurationBackupSchedulePolicy:ConfigurationBackupSchedulePolicy": {
                "schedulePolicyType": "schedule_policy_type",
                "scheduleRunDays": "schedule_run_days",
                "scheduleRunFrequency": "schedule_run_frequency",
                "scheduleRunTimes": "schedule_run_times"
            },
            "azure:automanage/configuration:Configuration": {
                "automationAccountEnabled": "automation_account_enabled",
                "azureSecurityBaseline": "azure_security_baseline",
                "bootDiagnosticsEnabled": "boot_diagnostics_enabled",
                "defenderForCloudEnabled": "defender_for_cloud_enabled",
                "guestConfigurationEnabled": "guest_configuration_enabled",
                "logAnalyticsEnabled": "log_analytics_enabled",
                "resourceGroupName": "resource_group_name",
                "statusChangeAlertEnabled": "status_change_alert_enabled"
            },
            "azure:automation/AccountEncryption:AccountEncryption": {
                "keySource": "key_source",
                "keyVaultKeyId": "key_vault_key_id",
                "userAssignedIdentityId": "user_assigned_identity_id"
            },
            "azure:automation/AccountIdentity:AccountIdentity": {
                "identityIds": "identity_ids",
                "principalId": "principal_id",
                "tenantId": "tenant_id"
            },
            "azure:automation/ConnectionTypeField:ConnectionTypeField": {
                "isEncrypted": "is_encrypted",
                "isOptional": "is_optional"
            },
            "azure:automation/RunBookDraft:RunBookDraft": {
                "contentLink": "content_link",
                "creationTime": "creation_time",
                "editModeEnabled": "edit_mode_enabled",
                "lastModifiedTime": "last_modified_time",
                "outputTypes": "output_types"
            },
            "azure:automation/RunBookDraftParameter:RunBookDraftParameter": {
                "defaultValue": "default_value"
            },
            "azure:automation/RunBookJobSchedule:RunBookJobSchedule": {
                "jobScheduleId": "job_schedule_id",
                "runOn": "run_on",
                "scheduleName": "schedule_name"
            },
            "azure:automation/SoftwareUpdateConfigurationLinux:SoftwareUpdateConfigurationLinux": {
                "classificationIncluded": "classification_included",
                "classificationsIncludeds": "classifications_included",
                "excludedPackages": "excluded_packages",
                "includedPackages": "included_packages"
            },
            "azure:automation/SoftwareUpdateConfigurationSchedule:SoftwareUpdateConfigurationSchedule": {
                "advancedMonthDays": "advanced_month_days",
                "advancedWeekDays": "advanced_week_days",
                "creationTime": "creation_time",
                "expiryTime": "expiry_time",
                "expiryTimeOffsetMinutes": "expiry_time_offset_minutes",
                "isEnabled": "is_enabled",
                "lastModifiedTime": "last_modified_time",
                "monthlyOccurrences": "monthly_occurrence",
                "nextRun": "next_run",
                "nextRunOffsetMinutes": "next_run_offset_minutes",
                "startTime": "start_time",
                "startTimeOffsetMinutes": "start_time_offset_minutes",
                "timeZone": "time_zone"
            },
            "azure:automation/SoftwareUpdateConfigurationTarget:SoftwareUpdateConfigurationTarget": {
                "azureQueries": "azure_query",
                "nonAzureQueries": "non_azure_query"
            },
            "azure:automation/SoftwareUpdateConfigurationTargetAzureQuery:SoftwareUpdateConfigurationTargetAzureQuery": {
                "scopes": "scope",
                "tagFilter": "tag_filter"
            },
            "azure:automation/SoftwareUpdateConfigurationTargetNonAzureQuery:SoftwareUpdateConfigurationTargetNonAzureQuery": {
                "functionAlias": "function_alias",
                "workspaceId": "workspace_id"
            },
            "azure:automation/SoftwareUpdateConfigurationWindows:SoftwareUpdateConfigurationWindows": {
                "classificationIncluded": "classification_included",
                "classificationsIncludeds": "classifications_included",
                "excludedKnowledgeBaseNumbers": "excluded_knowledge_base_numbers",
                "includedKnowledgeBaseNumbers": "included_knowledge_base_numbers"
            },
            "azure:automation/SourceControlSecurity:SourceControlSecurity": {
                "refreshToken": "refresh_token",
                "tokenType": "token_type"
            },
            "azure:automation/account:Account": {
                "dscPrimaryAccessKey": "dsc_primary_access_key",
                "dscSecondaryAccessKey": "dsc_secondary_access_key",
                "dscServerEndpoint": "dsc_server_endpoint",
                "encryptions": "encryption",
                "hybridServiceUrl": "hybrid_service_url",
                "localAuthenticationEnabled": "local_authentication_enabled",
                "privateEndpointConnections": "private_endpoint_connection",
                "publicNetworkAccessEnabled": "public_network_access_enabled",
                "resourceGroupName": "resource_group_name",
                "skuName": "sku_name"
            },
            "azure:automation/boolVariable:BoolVariable": {
                "automationAccountName": "automation_account_name",
                "resourceGroupName": "resource_group_name"
            },
            "azure:automation/certificate:Certificate": {
                "automationAccountName": "automation_account_name",
                "resourceGroupName": "resource_group_name"
            },
            "azure:automation/connection:Connection": {
                "automationAccountName": "automation_account_name",
                "resourceGroupName": "resource_group_name"
            },
            "azure:automation/connectionCertificate:ConnectionCertificate": {
                "automationAccountName": "automation_account_name",
                "automationCertificateName": "automation_certificate_name",
                "resourceGroupName": "resource_group_name",
                "subscriptionId": "subscription_id"
            },
            "azure:automation/connectionClassicCertificate:ConnectionClassicCertificate": {
                "automationAccountName": "automation_account_name",
                "certificateAssetName": "certificate_asset_name",
                "resourceGroupName": "resource_group_name",
                "subscriptionId": "subscription_id",
                "subscriptionName": "subscription_name"
            },
            "azure:automation/connectionServicePrincipal:ConnectionServicePrincipal": {
                "applicationId": "application_id",
                "automationAccountName": "automation_account_name",
                "certificateThumbprint": "certificate_thumbprint",
                "resourceGroupName": "resource_group_name",
                "subscriptionId": "subscription_id",
                "tenantId": "tenant_id"
            },
            "azure:automation/connectionType:ConnectionType": {
                "automationAccountName": "automation_account_name",
                "fields": "field",
                "isGlobal": "is_global",
                "resourceGroupName": "resource_group_name"
            },
            "azure:automation/credential:Credential": {
                "automationAccountName": "automation_account_name",
                "resourceGroupName": "resource_group_name"
            },
            "azure:automation/dateTimeVariable:DateTimeVariable": {
                "automationAccountName": "automation_account_name",
                "resourceGroupName": "resource_group_name"
            },
            "azure:automation/dscConfiguration:DscConfiguration": {
                "automationAccountName": "automation_account_name",
                "contentEmbedded": "content_embedded",
                "logVerbose": "log_verbose",
                "resourceGroupName": "resource_group_name"
            },
            "azure:automation/dscNodeConfiguration:DscNodeConfiguration": {
                "automationAccountName": "automation_account_name",
                "configurationName": "configuration_name",
                "contentEmbedded": "content_embedded",
                "resourceGroupName": "resource_group_name"
            },
            "azure:automation/getAccount:getAccount": {
                "hybridServiceUrl": "hybrid_service_url",
                "identities": "identity",
                "primaryKey": "primary_key",
                "privateEndpointConnections": "private_endpoint_connection",
                "resourceGroupName": "resource_group_name",
                "secondaryKey": "secondary_key"
            },
            "azure:automation/getAccountIdentity:getAccountIdentity": {
                "identityIds": "identity_ids",
                "principalId": "principal_id",
                "tenantId": "tenant_id"
            },
            "azure:automation/getBoolVariable:getBoolVariable": {
                "automationAccountName": "automation_account_name",
                "resourceGroupName": "resource_group_name"
            },
            "azure:automation/getDateTimeVariable:getDateTimeVariable": {
                "automationAccountName": "automation_account_name",
                "resourceGroupName": "resource_group_name"
            },
            "azure:automation/getIntVariable:getIntVariable": {
                "automationAccountName": "automation_account_name",
                "resourceGroupName": "resource_group_name"
            },
            "azure:automation/getStringVariable:getStringVariable": {
                "automationAccountName": "automation_account_name",
                "resourceGroupName": "resource_group_name"
            },
            "azure:automation/getVariableObject:getVariableObject": {
                "automationAccountName": "automation_account_name",
                "resourceGroupName": "resource_group_name"
            },
            "azure:automation/getVariables:getVariables": {
                "automationAccountId": "automation_account_id",
                "bools": "bool",
                "datetimes": "datetime",
                "encrypteds": "encrypted",
                "ints": "int",
                "nulls": "null",
                "objects": "object",
                "strings": "string"
            },
            "azure:automation/hybridRunbookWorker:HybridRunbookWorker": {
                "automationAccountName": "automation_account_name",
                "lastSeenDateTime": "last_seen_date_time",
                "registrationDateTime": "registration_date_time",
                "resourceGroupName": "resource_group_name",
                "vmResourceId": "vm_resource_id",
                "workerGroupName": "worker_group_name",
                "workerId": "worker_id",
                "workerName": "worker_name",
                "workerType": "worker_type"
            },
            "azure:automation/hybridRunbookWorkerGroup:HybridRunbookWorkerGroup": {
                "automationAccountName": "automation_account_name",
                "credentialName": "credential_name",
                "resourceGroupName": "resource_group_name"
            },
            "azure:automation/intVariable:IntVariable": {
                "automationAccountName": "automation_account_name",
                "resourceGroupName": "resource_group_name"
            },
            "azure:automation/jobSchedule:JobSchedule": {
                "automationAccountName": "automation_account_name",
                "jobScheduleId": "job_schedule_id",
                "resourceGroupName": "resource_group_name",
                "runOn": "run_on",
                "runbookName": "runbook_name",
                "scheduleName": "schedule_name"
            },
            "azure:automation/module:Module": {
                "automationAccountName": "automation_account_name",
                "moduleLink": "module_link",
                "resourceGroupName": "resource_group_name"
            },
            "azure:automation/python3Package:Python3Package": {
                "automationAccountName": "automation_account_name",
                "contentUri": "content_uri",
                "contentVersion": "content_version",
                "hashAlgorithm": "hash_algorithm",
                "hashValue": "hash_value",
                "resourceGroupName": "resource_group_name"
            },
            "azure:automation/runBook:RunBook": {
                "automationAccountName": "automation_account_name",
                "jobSchedules": "job_schedule",
                "logActivityTraceLevel": "log_activity_trace_level",
                "logProgress": "log_progress",
                "logVerbose": "log_verbose",
                "publishContentLink": "publish_content_link",
                "resourceGroupName": "resource_group_name",
                "runbookType": "runbook_type"
            },
            "azure:automation/schedule:Schedule": {
                "automationAccountName": "automation_account_name",
                "expiryTime": "expiry_time",
                "monthDays": "month_days",
                "monthlyOccurrences": "monthly_occurrence",
                "resourceGroupName": "resource_group_name",
                "startTime": "start_time",
                "weekDays": "week_days"
            },
            "azure:automation/softwareUpdateConfiguration:SoftwareUpdateConfiguration": {
                "automationAccountId": "automation_account_id",
                "errorCode": "error_code",
                "errorMeesage": "error_meesage",
                "errorMessage": "error_message",
                "linuxes": "linux",
                "nonAzureComputerNames": "non_azure_computer_names",
                "operatingSystem": "operating_system",
                "postTasks": "post_task",
                "preTasks": "pre_task",
                "schedules": "schedule",
                "virtualMachineIds": "virtual_machine_ids"
            },
            "azure:automation/sourceControl:SourceControl": {
                "automaticSync": "automatic_sync",
                "automationAccountId": "automation_account_id",
                "folderPath": "folder_path",
                "publishRunbookEnabled": "publish_runbook_enabled",
                "repositoryUrl": "repository_url",
                "sourceControlType": "source_control_type"
            },
            "azure:automation/stringVariable:StringVariable": {
                "automationAccountName": "automation_account_name",
                "resourceGroupName": "resource_group_name"
            },
            "azure:automation/variableObject:VariableObject": {
                "automationAccountName": "automation_account_name",
                "resourceGroupName": "resource_group_name"
            },
            "azure:automation/watcher:Watcher": {
                "automationAccountId": "automation_account_id",
                "executionFrequencyInSeconds": "execution_frequency_in_seconds",
                "scriptName": "script_name",
                "scriptParameters": "script_parameters",
                "scriptRunOn": "script_run_on"
            },
            "azure:automation/webhook:Webhook": {
                "automationAccountName": "automation_account_name",
                "expiryTime": "expiry_time",
                "resourceGroupName": "resource_group_name",
                "runOnWorkerGroup": "run_on_worker_group",
                "runbookName": "runbook_name"
            },
            "azure:avs/PrivateCloudCircuit:PrivateCloudCircuit": {
                "expressRouteId": "express_route_id",
                "expressRoutePrivatePeeringId": "express_route_private_peering_id",
                "primarySubnetCidr": "primary_subnet_cidr",
                "secondarySubnetCidr": "secondary_subnet_cidr"
            },
            "azure:avs/cluster:Cluster": {
                "clusterNodeCount": "cluster_node_count",
                "clusterNumber": "cluster_number",
                "skuName": "sku_name",
                "vmwareCloudId": "vmware_cloud_id"
            },
            "azure:avs/expressRouteAuthorization:ExpressRouteAuthorization": {
                "expressRouteAuthorizationId": "express_route_authorization_id",
                "expressRouteAuthorizationKey": "express_route_authorization_key",
                "privateCloudId": "private_cloud_id"
            },
            "azure:avs/getPrivateCloud:getPrivateCloud": {
                "circuits": "circuit",
                "hcxCloudManagerEndpoint": "hcx_cloud_manager_endpoint",
                "internetConnectionEnabled": "internet_connection_enabled",
                "managementClusters": "management_cluster",
                "managementSubnetCidr": "management_subnet_cidr",
                "networkSubnetCidr": "network_subnet_cidr",
                "nsxtCertificateThumbprint": "nsxt_certificate_thumbprint",
                "nsxtManagerEndpoint": "nsxt_manager_endpoint",
                "provisioningSubnetCidr": "provisioning_subnet_cidr",
                "resourceGroupName": "resource_group_name",
                "skuName": "sku_name",
                "vcenterCertificateThumbprint": "vcenter_certificate_thumbprint",
                "vcsaEndpoint": "vcsa_endpoint",
                "vmotionSubnetCidr": "vmotion_subnet_cidr"
            },
            "azure:avs/getPrivateCloudCircuit:getPrivateCloudCircuit": {
                "expressRouteId": "express_route_id",
                "expressRoutePrivatePeeringId": "express_route_private_peering_id",
                "primarySubnetCidr": "primary_subnet_cidr",
                "secondarySubnetCidr": "secondary_subnet_cidr"
            },
            "azure:avs/netappVolumeAttachment:NetappVolumeAttachment": {
                "netappVolumeId": "netapp_volume_id",
                "vmwareClusterId": "vmware_cluster_id"
            },
            "azure:avs/privateCloud:PrivateCloud": {
                "circuits": "circuit",
                "hcxCloudManagerEndpoint": "hcx_cloud_manager_endpoint",
                "internetConnectionEnabled": "internet_connection_enabled",
                "managementCluster": "management_cluster",
                "managementSubnetCidr": "management_subnet_cidr",
                "networkSubnetCidr": "network_subnet_cidr",
                "nsxtCertificateThumbprint": "nsxt_certificate_thumbprint",
                "nsxtManagerEndpoint": "nsxt_manager_endpoint",
                "nsxtPassword": "nsxt_password",
                "provisioningSubnetCidr": "provisioning_subnet_cidr",
                "resourceGroupName": "resource_group_name",
                "skuName": "sku_name",
                "vcenterCertificateThumbprint": "vcenter_certificate_thumbprint",
                "vcenterPassword": "vcenter_password",
                "vcsaEndpoint": "vcsa_endpoint",
                "vmotionSubnetCidr": "vmotion_subnet_cidr"
            },
            "azure:backup/PolicyFileShareBackupHourly:PolicyFileShareBackupHourly": {
                "startTime": "start_time",
                "windowDuration": "window_duration"
            },
            "azure:backup/PolicyFileShareRetentionMonthly:PolicyFileShareRetentionMonthly": {
                "includeLastDays": "include_last_days"
            },
            "azure:backup/PolicyFileShareRetentionYearly:PolicyFileShareRetentionYearly": {
                "includeLastDays": "include_last_days"
            },
            "azure:backup/PolicyVMBackup:PolicyVMBackup": {
                "hourDuration": "hour_duration",
                "hourInterval": "hour_interval"
            },
            "azure:backup/PolicyVMRetentionMonthly:PolicyVMRetentionMonthly": {
                "includeLastDays": "include_last_days"
            },
            "azure:backup/PolicyVMRetentionYearly:PolicyVMRetentionYearly": {
                "includeLastDays": "include_last_days"
            },
            "azure:backup/PolicyVMWorkloadProtectionPolicy:PolicyVMWorkloadProtectionPolicy": {
                "policyType": "policy_type",
                "retentionDaily": "retention_daily",
                "retentionMonthly": "retention_monthly",
                "retentionWeekly": "retention_weekly",
                "retentionYearly": "retention_yearly",
                "simpleRetention": "simple_retention"
            },
            "azure:backup/PolicyVMWorkloadProtectionPolicyBackup:PolicyVMWorkloadProtectionPolicyBackup": {
                "frequencyInMinutes": "frequency_in_minutes"
            },
            "azure:backup/PolicyVMWorkloadProtectionPolicyRetentionMonthly:PolicyVMWorkloadProtectionPolicyRetentionMonthly": {
                "formatType": "format_type"
            },
            "azure:backup/PolicyVMWorkloadProtectionPolicyRetentionYearly:PolicyVMWorkloadProtectionPolicyRetentionYearly": {
                "formatType": "format_type"
            },
            "azure:backup/PolicyVMWorkloadSettings:PolicyVMWorkloadSettings": {
                "compressionEnabled": "compression_enabled",
                "timeZone": "time_zone"
            },
            "azure:backup/containerStorageAccount:ContainerStorageAccount": {
                "recoveryVaultName": "recovery_vault_name",
                "resourceGroupName": "resource_group_name",
                "storageAccountId": "storage_account_id"
            },
            "azure:backup/getPolicyFileshare:getPolicyFileshare": {
                "recoveryVaultName": "recovery_vault_name",
                "resourceGroupName": "resource_group_name"
            },
            "azure:backup/getPolicyVM:getPolicyVM": {
                "recoveryVaultName": "recovery_vault_name",
                "resourceGroupName": "resource_group_name"
            },
            "azure:backup/policyFileShare:PolicyFileShare": {
                "recoveryVaultName": "recovery_vault_name",
                "resourceGroupName": "resource_group_name",
                "retentionDaily": "retention_daily",
                "retentionMonthly": "retention_monthly",
                "retentionWeekly": "retention_weekly",
                "retentionYearly": "retention_yearly"
            },
            "azure:backup/policyVM:PolicyVM": {
                "instantRestoreResourceGroup": "instant_restore_resource_group",
                "instantRestoreRetentionDays": "instant_restore_retention_days",
                "policyType": "policy_type",
                "recoveryVaultName": "recovery_vault_name",
                "resourceGroupName": "resource_group_name",
                "retentionDaily": "retention_daily",
                "retentionMonthly": "retention_monthly",
                "retentionWeekly": "retention_weekly",
                "retentionYearly": "retention_yearly"
            },
            "azure:backup/policyVMWorkload:PolicyVMWorkload": {
                "protectionPolicies": "protection_policy",
                "recoveryVaultName": "recovery_vault_name",
                "resourceGroupName": "resource_group_name",
                "workloadType": "workload_type"
            },
            "azure:backup/protectedFileShare:ProtectedFileShare": {
                "backupPolicyId": "backup_policy_id",
                "recoveryVaultName": "recovery_vault_name",
                "resourceGroupName": "resource_group_name",
                "sourceFileShareName": "source_file_share_name",
                "sourceStorageAccountId": "source_storage_account_id"
            },
            "azure:backup/protectedVM:ProtectedVM": {
                "backupPolicyId": "backup_policy_id",
                "excludeDiskLuns": "exclude_disk_luns",
                "includeDiskLuns": "include_disk_luns",
                "protectionState": "protection_state",
                "recoveryVaultName": "recovery_vault_name",
                "resourceGroupName": "resource_group_name",
                "sourceVmId": "source_vm_id"
            },
            "azure:batch/AccountEncryption:AccountEncryption": {
                "keyVaultKeyId": "key_vault_key_id"
            },
            "azure:batch/AccountIdentity:AccountIdentity": {
                "identityIds": "identity_ids",
                "principalId": "principal_id",
                "tenantId": "tenant_id"
            },
            "azure:batch/AccountNetworkProfile:AccountNetworkProfile": {
                "accountAccess": "account_access",
                "nodeManagementAccess": "node_management_access"
            },
            "azure:batch/AccountNetworkProfileAccountAccess:AccountNetworkProfileAccountAccess": {
                "defaultAction": "default_action",
                "ipRules": "ip_rule"
            },
            "azure:batch/AccountNetworkProfileAccountAccessIpRule:AccountNetworkProfileAccountAccessIpRule": {
                "ipRange": "ip_range"
            },
            "azure:batch/AccountNetworkProfileNodeManagementAccess:AccountNetworkProfileNodeManagementAccess": {
                "defaultAction": "default_action",
                "ipRules": "ip_rule"
            },
            "azure:batch/AccountNetworkProfileNodeManagementAccessIpRule:AccountNetworkProfileNodeManagementAccessIpRule": {
                "ipRange": "ip_range"
            },
            "azure:batch/PoolAutoScale:PoolAutoScale": {
                "evaluationInterval": "evaluation_interval"
            },
            "azure:batch/PoolCertificate:PoolCertificate": {
                "storeLocation": "store_location",
                "storeName": "store_name",
                "visibilities": "visibility"
            },
            "azure:batch/PoolContainerConfiguration:PoolContainerConfiguration": {
                "containerImageNames": "container_image_names",
                "containerRegistries": "container_registries"
            },
            "azure:batch/PoolContainerConfigurationContainerRegistry:PoolContainerConfigurationContainerRegistry": {
                "registryServer": "registry_server",
                "userAssignedIdentityId": "user_assigned_identity_id",
                "userName": "user_name"
            },
            "azure:batch/PoolDataDisk:PoolDataDisk": {
                "diskSizeGb": "disk_size_gb",
                "storageAccountType": "storage_account_type"
            },
            "azure:batch/PoolDiskEncryption:PoolDiskEncryption": {
                "diskEncryptionTarget": "disk_encryption_target"
            },
            "azure:batch/PoolExtension:PoolExtension": {
                "autoUpgradeMinorVersion": "auto_upgrade_minor_version",
                "automaticUpgradeEnabled": "automatic_upgrade_enabled",
                "protectedSettings": "protected_settings",
                "provisionAfterExtensions": "provision_after_extensions",
                "settingsJson": "settings_json",
                "typeHandlerVersion": "type_handler_version"
            },
            "azure:batch/PoolFixedScale:PoolFixedScale": {
                "nodeDeallocationMethod": "node_deallocation_method",
                "resizeTimeout": "resize_timeout",
                "targetDedicatedNodes": "target_dedicated_nodes",
                "targetLowPriorityNodes": "target_low_priority_nodes"
            },
            "azure:batch/PoolIdentity:PoolIdentity": {
                "identityIds": "identity_ids"
            },
            "azure:batch/PoolMount:PoolMount": {
                "azureBlobFileSystem": "azure_blob_file_system",
                "azureFileShares": "azure_file_share",
                "cifsMounts": "cifs_mount",
                "nfsMounts": "nfs_mount"
            },
            "azure:batch/PoolMountAzureBlobFileSystem:PoolMountAzureBlobFileSystem": {
                "accountKey": "account_key",
                "accountName": "account_name",
                "blobfuseOptions": "blobfuse_options",
                "containerName": "container_name",
                "identityId": "identity_id",
                "relativeMountPath": "relative_mount_path",
                "sasKey": "sas_key"
            },
            "azure:batch/PoolMountAzureFileShare:PoolMountAzureFileShare": {
                "accountKey": "account_key",
                "accountName": "account_name",
                "azureFileUrl": "azure_file_url",
                "mountOptions": "mount_options",
                "relativeMountPath": "relative_mount_path"
            },
            "azure:batch/PoolMountCifsMount:PoolMountCifsMount": {
                "mountOptions": "mount_options",
                "relativeMountPath": "relative_mount_path",
                "userName": "user_name"
            },
            "azure:batch/PoolMountNfsMount:PoolMountNfsMount": {
                "mountOptions": "mount_options",
                "relativeMountPath": "relative_mount_path"
            },
            "azure:batch/PoolNetworkConfiguration:PoolNetworkConfiguration": {
                "acceleratedNetworkingEnabled": "accelerated_networking_enabled",
                "dynamicVnetAssignmentScope": "dynamic_vnet_assignment_scope",
                "endpointConfigurations": "endpoint_configuration",
                "publicAddressProvisioningType": "public_address_provisioning_type",
                "publicIps": "public_ips",
                "subnetId": "subnet_id"
            },
            "azure:batch/PoolNetworkConfigurationEndpointConfiguration:PoolNetworkConfigurationEndpointConfiguration": {
                "backendPort": "backend_port",
                "frontendPortRange": "frontend_port_range",
                "networkSecurityGroupRules": "network_security_group_rules"
            },
            "azure:batch/PoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRule:PoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRule": {
                "sourceAddressPrefix": "source_address_prefix",
                "sourcePortRanges": "source_port_ranges"
            },
            "azure:batch/PoolStartTask:PoolStartTask": {
                "commandLine": "command_line",
                "commonEnvironmentProperties": "common_environment_properties",
                "containers": "container",
                "resourceFiles": "resource_file",
                "taskRetryMaximum": "task_retry_maximum",
                "userIdentity": "user_identity",
                "waitForSuccess": "wait_for_success"
            },
            "azure:batch/PoolStartTaskContainer:PoolStartTaskContainer": {
                "imageName": "image_name",
                "registries": "registry",
                "runOptions": "run_options",
                "workingDirectory": "working_directory"
            },
            "azure:batch/PoolStartTaskContainerRegistry:PoolStartTaskContainerRegistry": {
                "registryServer": "registry_server",
                "userAssignedIdentityId": "user_assigned_identity_id",
                "userName": "user_name"
            },
            "azure:batch/PoolStartTaskResourceFile:PoolStartTaskResourceFile": {
                "autoStorageContainerName": "auto_storage_container_name",
                "blobPrefix": "blob_prefix",
                "fileMode": "file_mode",
                "filePath": "file_path",
                "httpUrl": "http_url",
                "storageContainerUrl": "storage_container_url",
                "userAssignedIdentityId": "user_assigned_identity_id"
            },
            "azure:batch/PoolStartTaskUserIdentity:PoolStartTaskUserIdentity": {
                "autoUser": "auto_user",
                "userName": "user_name"
            },
            "azure:batch/PoolStartTaskUserIdentityAutoUser:PoolStartTaskUserIdentityAutoUser": {
                "elevationLevel": "elevation_level"
            },
            "azure:batch/PoolTaskSchedulingPolicy:PoolTaskSchedulingPolicy": {
                "nodeFillType": "node_fill_type"
            },
            "azure:batch/PoolUserAccount:PoolUserAccount": {
                "elevationLevel": "elevation_level",
                "linuxUserConfigurations": "linux_user_configuration",
                "windowsUserConfigurations": "windows_user_configuration"
            },
            "azure:batch/PoolUserAccountLinuxUserConfiguration:PoolUserAccountLinuxUserConfiguration": {
                "sshPrivateKey": "ssh_private_key"
            },
            "azure:batch/PoolUserAccountWindowsUserConfiguration:PoolUserAccountWindowsUserConfiguration": {
                "loginMode": "login_mode"
            },
            "azure:batch/PoolWindow:PoolWindow": {
                "enableAutomaticUpdates": "enable_automatic_updates"
            },
            "azure:batch/account:Account": {
                "accountEndpoint": "account_endpoint",
                "allowedAuthenticationModes": "allowed_authentication_modes",
                "keyVaultReference": "key_vault_reference",
                "networkProfile": "network_profile",
                "poolAllocationMode": "pool_allocation_mode",
                "primaryAccessKey": "primary_access_key",
                "publicNetworkAccessEnabled": "public_network_access_enabled",
                "resourceGroupName": "resource_group_name",
                "secondaryAccessKey": "secondary_access_key",
                "storageAccountAuthenticationMode": "storage_account_authentication_mode",
                "storageAccountId": "storage_account_id",
                "storageAccountNodeIdentity": "storage_account_node_identity"
            },
            "azure:batch/application:Application": {
                "accountName": "account_name",
                "allowUpdates": "allow_updates",
                "defaultVersion": "default_version",
                "displayName": "display_name",
                "resourceGroupName": "resource_group_name"
            },
            "azure:batch/certificate:Certificate": {
                "accountName": "account_name",
                "publicData": "public_data",
                "resourceGroupName": "resource_group_name",
                "thumbprintAlgorithm": "thumbprint_algorithm"
            },
            "azure:batch/getAccount:getAccount": {
                "accountEndpoint": "account_endpoint",
                "keyVaultReferences": "key_vault_reference",
                "poolAllocationMode": "pool_allocation_mode",
                "primaryAccessKey": "primary_access_key",
                "resourceGroupName": "resource_group_name",
                "secondaryAccessKey": "secondary_access_key",
                "storageAccountId": "storage_account_id"
            },
            "azure:batch/getAccountEncryption:getAccountEncryption": {
                "keyVaultKeyId": "key_vault_key_id"
            },
            "azure:batch/getApplication:getApplication": {
                "accountName": "account_name",
                "allowUpdates": "allow_updates",
                "defaultVersion": "default_version",
                "displayName": "display_name",
                "resourceGroupName": "resource_group_name"
            },
            "azure:batch/getCertificate:getCertificate": {
                "accountName": "account_name",
                "publicData": "public_data",
                "resourceGroupName": "resource_group_name",
                "thumbprintAlgorithm": "thumbprint_algorithm"
            },
            "azure:batch/getPool:getPool": {
                "accountName": "account_name",
                "autoScales": "auto_scale",
                "certificates": "certificate",
                "containerConfigurations": "container_configuration",
                "dataDisks": "data_disks",
                "diskEncryptions": "disk_encryption",
                "displayName": "display_name",
                "fixedScales": "fixed_scale",
                "interNodeCommunication": "inter_node_communication",
                "licenseType": "license_type",
                "maxTasksPerNode": "max_tasks_per_node",
                "mounts": "mount",
                "networkConfigurations": "network_configuration",
                "nodeAgentSkuId": "node_agent_sku_id",
                "nodePlacements": "node_placement",
                "osDiskPlacement": "os_disk_placement",
                "resourceGroupName": "resource_group_name",
                "startTasks": "start_task",
                "storageImageReferences": "storage_image_reference",
                "taskSchedulingPolicies": "task_scheduling_policy",
                "userAccounts": "user_accounts",
                "vmSize": "vm_size"
            },
            "azure:batch/getPoolAutoScale:getPoolAutoScale": {
                "evaluationInterval": "evaluation_interval"
            },
            "azure:batch/getPoolCertificate:getPoolCertificate": {
                "storeLocation": "store_location",
                "storeName": "store_name",
                "visibilities": "visibility"
            },
            "azure:batch/getPoolContainerConfiguration:getPoolContainerConfiguration": {
                "containerImageNames": "container_image_names",
                "containerRegistries": "container_registries"
            },
            "azure:batch/getPoolContainerConfigurationContainerRegistry:getPoolContainerConfigurationContainerRegistry": {
                "registryServer": "registry_server",
                "userAssignedIdentityId": "user_assigned_identity_id",
                "userName": "user_name"
            },
            "azure:batch/getPoolDataDisk:getPoolDataDisk": {
                "diskSizeGb": "disk_size_gb",
                "storageAccountType": "storage_account_type"
            },
            "azure:batch/getPoolDiskEncryption:getPoolDiskEncryption": {
                "diskEncryptionTarget": "disk_encryption_target"
            },
            "azure:batch/getPoolExtension:getPoolExtension": {
                "autoUpgradeMinorVersion": "auto_upgrade_minor_version",
                "protectedSettings": "protected_settings",
                "provisionAfterExtensions": "provision_after_extensions",
                "settingsJson": "settings_json",
                "typeHandlerVersion": "type_handler_version"
            },
            "azure:batch/getPoolFixedScale:getPoolFixedScale": {
                "resizeTimeout": "resize_timeout",
                "targetDedicatedNodes": "target_dedicated_nodes",
                "targetLowPriorityNodes": "target_low_priority_nodes"
            },
            "azure:batch/getPoolMount:getPoolMount": {
                "azureBlobFileSystems": "azure_blob_file_system",
                "azureFileShares": "azure_file_share",
                "cifsMounts": "cifs_mount",
                "nfsMounts": "nfs_mount"
            },
            "azure:batch/getPoolMountAzureBlobFileSystem:getPoolMountAzureBlobFileSystem": {
                "accountKey": "account_key",
                "accountName": "account_name",
                "blobfuseOptions": "blobfuse_options",
                "containerName": "container_name",
                "identityId": "identity_id",
                "relativeMountPath": "relative_mount_path",
                "sasKey": "sas_key"
            },
            "azure:batch/getPoolMountAzureFileShare:getPoolMountAzureFileShare": {
                "accountKey": "account_key",
                "accountName": "account_name",
                "azureFileUrl": "azure_file_url",
                "mountOptions": "mount_options",
                "relativeMountPath": "relative_mount_path"
            },
            "azure:batch/getPoolMountCifsMount:getPoolMountCifsMount": {
                "mountOptions": "mount_options",
                "relativeMountPath": "relative_mount_path",
                "userName": "user_name"
            },
            "azure:batch/getPoolMountNfsMount:getPoolMountNfsMount": {
                "mountOptions": "mount_options",
                "relativeMountPath": "relative_mount_path"
            },
            "azure:batch/getPoolNetworkConfiguration:getPoolNetworkConfiguration": {
                "acceleratedNetworkingEnabled": "accelerated_networking_enabled",
                "dynamicVnetAssignmentScope": "dynamic_vnet_assignment_scope",
                "endpointConfigurations": "endpoint_configuration",
                "publicAddressProvisioningType": "public_address_provisioning_type",
                "publicIps": "public_ips",
                "subnetId": "subnet_id"
            },
            "azure:batch/getPoolNetworkConfigurationEndpointConfiguration:getPoolNetworkConfigurationEndpointConfiguration": {
                "backendPort": "backend_port",
                "frontendPortRange": "frontend_port_range",
                "networkSecurityGroupRules": "network_security_group_rules"
            },
            "azure:batch/getPoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRule:getPoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRule": {
                "sourceAddressPrefix": "source_address_prefix",
                "sourcePortRanges": "source_port_ranges"
            },
            "azure:batch/getPoolStartTask:getPoolStartTask": {
                "commandLine": "command_line",
                "commonEnvironmentProperties": "common_environment_properties",
                "containers": "container",
                "resourceFiles": "resource_file",
                "taskRetryMaximum": "task_retry_maximum",
                "userIdentities": "user_identity",
                "waitForSuccess": "wait_for_success"
            },
            "azure:batch/getPoolStartTaskContainer:getPoolStartTaskContainer": {
                "imageName": "image_name",
                "registries": "registry",
                "runOptions": "run_options",
                "workingDirectory": "working_directory"
            },
            "azure:batch/getPoolStartTaskContainerRegistry:getPoolStartTaskContainerRegistry": {
                "registryServer": "registry_server",
                "userAssignedIdentityId": "user_assigned_identity_id",
                "userName": "user_name"
            },
            "azure:batch/getPoolStartTaskResourceFile:getPoolStartTaskResourceFile": {
                "autoStorageContainerName": "auto_storage_container_name",
                "blobPrefix": "blob_prefix",
                "fileMode": "file_mode",
                "filePath": "file_path",
                "httpUrl": "http_url",
                "storageContainerUrl": "storage_container_url",
                "userAssignedIdentityId": "user_assigned_identity_id"
            },
            "azure:batch/getPoolStartTaskUserIdentity:getPoolStartTaskUserIdentity": {
                "autoUsers": "auto_user",
                "userName": "user_name"
            },
            "azure:batch/getPoolStartTaskUserIdentityAutoUser:getPoolStartTaskUserIdentityAutoUser": {
                "elevationLevel": "elevation_level"
            },
            "azure:batch/getPoolTaskSchedulingPolicy:getPoolTaskSchedulingPolicy": {
                "nodeFillType": "node_fill_type"
            },
            "azure:batch/getPoolUserAccount:getPoolUserAccount": {
                "elevationLevel": "elevation_level",
                "linuxUserConfigurations": "linux_user_configuration",
                "windowsUserConfigurations": "windows_user_configuration"
            },
            "azure:batch/getPoolUserAccountLinuxUserConfiguration:getPoolUserAccountLinuxUserConfiguration": {
                "sshPrivateKey": "ssh_private_key"
            },
            "azure:batch/getPoolUserAccountWindowsUserConfiguration:getPoolUserAccountWindowsUserConfiguration": {
                "loginMode": "login_mode"
            },
            "azure:batch/getPoolWindow:getPoolWindow": {
                "enableAutomaticUpdates": "enable_automatic_updates"
            },
            "azure:batch/job:Job": {
                "batchPoolId": "batch_pool_id",
                "commonEnvironmentProperties": "common_environment_properties",
                "displayName": "display_name",
                "taskRetryMaximum": "task_retry_maximum"
            },
            "azure:batch/pool:Pool": {
                "accountName": "account_name",
                "autoScale": "auto_scale",
                "certificates": "certificate",
                "containerConfiguration": "container_configuration",
                "dataDisks": "data_disks",
                "diskEncryptions": "disk_encryption",
                "displayName": "display_name",
                "fixedScale": "fixed_scale",
                "interNodeCommunication": "inter_node_communication",
                "licenseType": "license_type",
                "maxTasksPerNode": "max_tasks_per_node",
                "mounts": "mount",
                "networkConfiguration": "network_configuration",
                "nodeAgentSkuId": "node_agent_sku_id",
                "nodePlacements": "node_placement",
                "osDiskPlacement": "os_disk_placement",
                "resourceGroupName": "resource_group_name",
                "startTask": "start_task",
                "stopPendingResizeOperation": "stop_pending_resize_operation",
                "storageImageReference": "storage_image_reference",
                "targetNodeCommunicationMode": "target_node_communication_mode",
                "taskSchedulingPolicies": "task_scheduling_policy",
                "userAccounts": "user_accounts",
                "vmSize": "vm_size"
            },
            "azure:billing/AccountCostManagementExportExportDataOptions:AccountCostManagementExportExportDataOptions": {
                "timeFrame": "time_frame"
            },
            "azure:billing/AccountCostManagementExportExportDataStorageLocation:AccountCostManagementExportExportDataStorageLocation": {
                "containerId": "container_id",
                "rootFolderPath": "root_folder_path"
            },
            "azure:billing/accountCostManagementExport:AccountCostManagementExport": {
                "billingAccountId": "billing_account_id",
                "exportDataOptions": "export_data_options",
                "exportDataStorageLocation": "export_data_storage_location",
                "recurrencePeriodEndDate": "recurrence_period_end_date",
                "recurrencePeriodStartDate": "recurrence_period_start_date",
                "recurrenceType": "recurrence_type"
            },
            "azure:billing/getEnrollmentAccountScope:getEnrollmentAccountScope": {
                "billingAccountName": "billing_account_name",
                "enrollmentAccountName": "enrollment_account_name"
            },
            "azure:billing/getMcaAccountScope:getMcaAccountScope": {
                "billingAccountName": "billing_account_name",
                "billingProfileName": "billing_profile_name",
                "invoiceSectionName": "invoice_section_name"
            },
            "azure:billing/getMpaAccountScope:getMpaAccountScope": {
                "billingAccountName": "billing_account_name",
                "customerName": "customer_name"
            },
            "azure:blueprint/AssignmentIdentity:AssignmentIdentity": {
                "identityIds": "identity_ids",
                "principalId": "principal_id",
                "tenantId": "tenant_id"
            },
            "azure:blueprint/assignment:Assignment": {
                "blueprintName": "blueprint_name",
                "displayName": "display_name",
                "lockExcludeActions": "lock_exclude_actions",
                "lockExcludePrincipals": "lock_exclude_principals",
                "lockMode": "lock_mode",
                "parameterValues": "parameter_values",
                "resourceGroups": "resource_groups",
                "targetSubscriptionId": "target_subscription_id",
                "versionId": "version_id"
            },
            "azure:blueprint/getDefinition:getDefinition": {
                "displayName": "display_name",
                "lastModified": "last_modified",
                "scopeId": "scope_id",
                "targetScope": "target_scope",
                "timeCreated": "time_created"
            },
            "azure:blueprint/getPublishedVersion:getPublishedVersion": {
                "blueprintName": "blueprint_name",
                "displayName": "display_name",
                "lastModified": "last_modified",
                "scopeId": "scope_id",
                "targetScope": "target_scope",
                "timeCreated": "time_created"
            },
            "azure:bot/ChannelDirectLineSite:ChannelDirectLineSite": {
                "endpointParametersEnabled": "endpoint_parameters_enabled",
                "enhancedAuthenticationEnabled": "enhanced_authentication_enabled",
                "storageEnabled": "storage_enabled",
                "trustedOrigins": "trusted_origins",
                "userUploadEnabled": "user_upload_enabled",
                "v1Allowed": "v1_allowed",
                "v3Allowed": "v3_allowed"
            },
            "azure:bot/ChannelFacebookPage:ChannelFacebookPage": {
                "accessToken": "access_token"
            },
            "azure:bot/ChannelLineLineChannel:ChannelLineLineChannel": {
                "accessToken": "access_token"
            },
            "azure:bot/ChannelWebChatSite:ChannelWebChatSite": {
                "endpointParametersEnabled": "endpoint_parameters_enabled",
                "storageEnabled": "storage_enabled",
                "userUploadEnabled": "user_upload_enabled"
            },
            "azure:bot/channelAlexa:ChannelAlexa": {
                "botName": "bot_name",
                "resourceGroupName": "resource_group_name",
                "skillId": "skill_id"
            },
            "azure:bot/channelDirectLine:ChannelDirectLine": {
                "botName": "bot_name",
                "resourceGroupName": "resource_group_name",
                "sites": "site"
            },
            "azure:bot/channelDirectLineSpeech:ChannelDirectLineSpeech": {
                "botName": "bot_name",
                "cognitiveAccountId": "cognitive_account_id",
                "cognitiveServiceAccessKey": "cognitive_service_access_key",
                "cognitiveServiceLocation": "cognitive_service_location",
                "customSpeechModelId": "custom_speech_model_id",
                "customVoiceDeploymentId": "custom_voice_deployment_id",
                "resourceGroupName": "resource_group_name"
            },
            "azure:bot/channelEmail:ChannelEmail": {
                "botName": "bot_name",
                "emailAddress": "email_address",
                "emailPassword": "email_password",
                "resourceGroupName": "resource_group_name"
            },
            "azure:bot/channelFacebook:ChannelFacebook": {
                "botName": "bot_name",
                "facebookApplicationId": "facebook_application_id",
                "facebookApplicationSecret": "facebook_application_secret",
                "pages": "page",
                "resourceGroupName": "resource_group_name"
            },
            "azure:bot/channelLine:ChannelLine": {
                "botName": "bot_name",
                "lineChannels": "line_channel",
                "resourceGroupName": "resource_group_name"
            },
            "azure:bot/channelSlack:ChannelSlack": {
                "botName": "bot_name",
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "landingPageUrl": "landing_page_url",
                "resourceGroupName": "resource_group_name",
                "signingSecret": "signing_secret",
                "verificationToken": "verification_token"
            },
            "azure:bot/channelSms:ChannelSms": {
                "botName": "bot_name",
                "phoneNumber": "phone_number",
                "resourceGroupName": "resource_group_name",
                "smsChannelAccountSecurityId": "sms_channel_account_security_id",
                "smsChannelAuthToken": "sms_channel_auth_token"
            },
            "azure:bot/channelTeams:ChannelTeams": {
                "botName": "bot_name",
                "callingWebHook": "calling_web_hook",
                "deploymentEnvironment": "deployment_environment",
                "enableCalling": "enable_calling",
                "resourceGroupName": "resource_group_name"
            },
            "azure:bot/channelWebChat:ChannelWebChat": {
                "botName": "bot_name",
                "resourceGroupName": "resource_group_name",
                "siteNames": "site_names",
                "sites": "site"
            },
            "azure:bot/channelsRegistration:ChannelsRegistration": {
                "cmkKeyVaultUrl": "cmk_key_vault_url",
                "developerAppInsightsApiKey": "developer_app_insights_api_key",
                "developerAppInsightsApplicationId": "developer_app_insights_application_id",
                "developerAppInsightsKey": "developer_app_insights_key",
                "displayName": "display_name",
                "iconUrl": "icon_url",
                "isolatedNetworkEnabled": "isolated_network_enabled",
                "microsoftAppId": "microsoft_app_id",
                "publicNetworkAccessEnabled": "public_network_access_enabled",
                "resourceGroupName": "resource_group_name",
                "streamingEndpointEnabled": "streaming_endpoint_enabled"
            },
            "azure:bot/connection:Connection": {
                "botName": "bot_name",
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "resourceGroupName": "resource_group_name",
                "serviceProviderName": "service_provider_name"
            },
            "azure:bot/healthbot:Healthbot": {
                "botManagementPortalUrl": "bot_management_portal_url",
                "resourceGroupName": "resource_group_name",
                "skuName": "sku_name"
            },
            "azure:bot/serviceAzureBot:ServiceAzureBot": {
                "developerAppInsightsApiKey": "developer_app_insights_api_key",
                "developerAppInsightsApplicationId": "developer_app_insights_application_id",
                "developerAppInsightsKey": "developer_app_insights_key",
                "displayName": "display_name",
                "iconUrl": "icon_url",
                "localAuthenticationEnabled": "local_authentication_enabled",
                "luisAppIds": "luis_app_ids",
                "luisKey": "luis_key",
                "microsoftAppId": "microsoft_app_id",
                "microsoftAppMsiId": "microsoft_app_msi_id",
                "microsoftAppTenantId": "microsoft_app_tenant_id",
                "microsoftAppType": "microsoft_app_type",
                "publicNetworkAccessEnabled": "public_network_access_enabled",
                "resourceGroupName": "resource_group_name",
                "streamingEndpointEnabled": "streaming_endpoint_enabled"
            },
            "azure:bot/webApp:WebApp": {
                "developerAppInsightsApiKey": "developer_app_insights_api_key",
                "developerAppInsightsApplicationId": "developer_app_insights_application_id",
                "developerAppInsightsKey": "developer_app_insights_key",
                "displayName": "display_name",
                "luisAppIds": "luis_app_ids",
                "luisKey": "luis_key",
                "microsoftAppId": "microsoft_app_id",
                "resourceGroupName": "resource_group_name"
            },
            "azure:cdn/EndpointCustomDomainCdnManagedHttps:EndpointCustomDomainCdnManagedHttps": {
                "certificateType": "certificate_type",
                "protocolType": "protocol_type",
                "tlsVersion": "tls_version"
            },
            "azure:cdn/EndpointCustomDomainUserManagedHttps:EndpointCustomDomainUserManagedHttps": {
                "keyVaultCertificateId": "key_vault_certificate_id",
                "keyVaultSecretId": "key_vault_secret_id",
                "tlsVersion": "tls_version"
            },
            "azure:cdn/EndpointDeliveryRule:EndpointDeliveryRule": {
                "cacheExpirationAction": "cache_expiration_action",
                "cacheKeyQueryStringAction": "cache_key_query_string_action",
                "cookiesConditions": "cookies_condition",
                "deviceCondition": "device_condition",
                "httpVersionConditions": "http_version_condition",
                "modifyRequestHeaderActions": "modify_request_header_action",
                "modifyResponseHeaderActions": "modify_response_header_action",
                "postArgConditions": "post_arg_condition",
                "queryStringConditions": "query_string_condition",
                "remoteAddressConditions": "remote_address_condition",
                "requestBodyConditions": "request_body_condition",
                "requestHeaderConditions": "request_header_condition",
                "requestMethodCondition": "request_method_condition",
                "requestSchemeCondition": "request_scheme_condition",
                "requestUriConditions": "request_uri_condition",
                "urlFileExtensionConditions": "url_file_extension_condition",
                "urlFileNameConditions": "url_file_name_condition",
                "urlPathConditions": "url_path_condition",
                "urlRedirectAction": "url_redirect_action",
                "urlRewriteAction": "url_rewrite_action"
            },
            "azure:cdn/EndpointDeliveryRuleCookiesCondition:EndpointDeliveryRuleCookiesCondition": {
                "matchValues": "match_values",
                "negateCondition": "negate_condition"
            },
            "azure:cdn/EndpointDeliveryRuleDeviceCondition:EndpointDeliveryRuleDeviceCondition": {
                "matchValues": "match_values",
                "negateCondition": "negate_condition"
            },
            "azure:cdn/EndpointDeliveryRuleHttpVersionCondition:EndpointDeliveryRuleHttpVersionCondition": {
                "matchValues": "match_values",
                "negateCondition": "negate_condition"
            },
            "azure:cdn/EndpointDeliveryRulePostArgCondition:EndpointDeliveryRulePostArgCondition": {
                "matchValues": "match_values",
                "negateCondition": "negate_condition"
            },
            "azure:cdn/EndpointDeliveryRuleQueryStringCondition:EndpointDeliveryRuleQueryStringCondition": {
                "matchValues": "match_values",
                "negateCondition": "negate_condition"
            },
            "azure:cdn/EndpointDeliveryRuleRemoteAddressCondition:EndpointDeliveryRuleRemoteAddressCondition": {
                "matchValues": "match_values",
                "negateCondition": "negate_condition"
            },
            "azure:cdn/EndpointDeliveryRuleRequestBodyCondition:EndpointDeliveryRuleRequestBodyCondition": {
                "matchValues": "match_values",
                "negateCondition": "negate_condition"
            },
            "azure:cdn/EndpointDeliveryRuleRequestHeaderCondition:EndpointDeliveryRuleRequestHeaderCondition": {
                "matchValues": "match_values",
                "negateCondition": "negate_condition"
            },
            "azure:cdn/EndpointDeliveryRuleRequestMethodCondition:EndpointDeliveryRuleRequestMethodCondition": {
                "matchValues": "match_values",
                "negateCondition": "negate_condition"
            },
            "azure:cdn/EndpointDeliveryRuleRequestSchemeCondition:EndpointDeliveryRuleRequestSchemeCondition": {
                "matchValues": "match_values",
                "negateCondition": "negate_condition"
            },
            "azure:cdn/EndpointDeliveryRuleRequestUriCondition:EndpointDeliveryRuleRequestUriCondition": {
                "matchValues": "match_values",
                "negateCondition": "negate_condition"
            },
            "azure:cdn/EndpointDeliveryRuleUrlFileExtensionCondition:EndpointDeliveryRuleUrlFileExtensionCondition": {
                "matchValues": "match_values",
                "negateCondition": "negate_condition"
            },
            "azure:cdn/EndpointDeliveryRuleUrlFileNameCondition:EndpointDeliveryRuleUrlFileNameCondition": {
                "matchValues": "match_values",
                "negateCondition": "negate_condition"
            },
            "azure:cdn/EndpointDeliveryRuleUrlPathCondition:EndpointDeliveryRuleUrlPathCondition": {
                "matchValues": "match_values",
                "negateCondition": "negate_condition"
            },
            "azure:cdn/EndpointDeliveryRuleUrlRedirectAction:EndpointDeliveryRuleUrlRedirectAction": {
                "queryString": "query_string",
                "redirectType": "redirect_type"
            },
            "azure:cdn/EndpointDeliveryRuleUrlRewriteAction:EndpointDeliveryRuleUrlRewriteAction": {
                "preserveUnmatchedPath": "preserve_unmatched_path",
                "sourcePattern": "source_pattern"
            },
            "azure:cdn/EndpointGeoFilter:EndpointGeoFilter": {
                "countryCodes": "country_codes",
                "relativePath": "relative_path"
            },
            "azure:cdn/EndpointGlobalDeliveryRule:EndpointGlobalDeliveryRule": {
                "cacheExpirationAction": "cache_expiration_action",
                "cacheKeyQueryStringAction": "cache_key_query_string_action",
                "modifyRequestHeaderActions": "modify_request_header_action",
                "modifyResponseHeaderActions": "modify_response_header_action",
                "urlRedirectAction": "url_redirect_action",
                "urlRewriteAction": "url_rewrite_action"
            },
            "azure:cdn/EndpointGlobalDeliveryRuleUrlRedirectAction:EndpointGlobalDeliveryRuleUrlRedirectAction": {
                "queryString": "query_string",
                "redirectType": "redirect_type"
            },
            "azure:cdn/EndpointGlobalDeliveryRuleUrlRewriteAction:EndpointGlobalDeliveryRuleUrlRewriteAction": {
                "preserveUnmatchedPath": "preserve_unmatched_path",
                "sourcePattern": "source_pattern"
            },
            "azure:cdn/EndpointOrigin:EndpointOrigin": {
                "hostName": "host_name",
                "httpPort": "http_port",
                "httpsPort": "https_port"
            },
            "azure:cdn/FrontdoorCustomDomainTls:FrontdoorCustomDomainTls": {
                "cdnFrontdoorSecretId": "cdn_frontdoor_secret_id",
                "certificateType": "certificate_type",
                "minimumTlsVersion": "minimum_tls_version"
            },
            "azure:cdn/FrontdoorFirewallPolicyCustomRule:FrontdoorFirewallPolicyCustomRule": {
                "matchConditions": "match_condition",
                "rateLimitDurationInMinutes": "rate_limit_duration_in_minutes",
                "rateLimitThreshold": "rate_limit_threshold"
            },
            "azure:cdn/FrontdoorFirewallPolicyCustomRuleMatchCondition:FrontdoorFirewallPolicyCustomRuleMatchCondition": {
                "matchValues": "match_values",
                "matchVariable": "match_variable",
                "negationCondition": "negation_condition"
            },
            "azure:cdn/FrontdoorFirewallPolicyManagedRule:FrontdoorFirewallPolicyManagedRule": {
                "exclusions": "exclusion",
                "overrides": "override"
            },
            "azure:cdn/FrontdoorFirewallPolicyManagedRuleExclusion:FrontdoorFirewallPolicyManagedRuleExclusion": {
                "matchVariable": "match_variable"
            },
            "azure:cdn/FrontdoorFirewallPolicyManagedRuleOverride:FrontdoorFirewallPolicyManagedRuleOverride": {
                "exclusions": "exclusion",
                "ruleGroupName": "rule_group_name",
                "rules": "rule"
            },
            "azure:cdn/FrontdoorFirewallPolicyManagedRuleOverrideExclusion:FrontdoorFirewallPolicyManagedRuleOverrideExclusion": {
                "matchVariable": "match_variable"
            },
            "azure:cdn/FrontdoorFirewallPolicyManagedRuleOverrideRule:FrontdoorFirewallPolicyManagedRuleOverrideRule": {
                "exclusions": "exclusion",
                "ruleId": "rule_id"
            },
            "azure:cdn/FrontdoorFirewallPolicyManagedRuleOverrideRuleExclusion:FrontdoorFirewallPolicyManagedRuleOverrideRuleExclusion": {
                "matchVariable": "match_variable"
            },
            "azure:cdn/FrontdoorOriginGroupHealthProbe:FrontdoorOriginGroupHealthProbe": {
                "intervalInSeconds": "interval_in_seconds",
                "requestType": "request_type"
            },
            "azure:cdn/FrontdoorOriginGroupLoadBalancing:FrontdoorOriginGroupLoadBalancing": {
                "additionalLatencyInMilliseconds": "additional_latency_in_milliseconds",
                "sampleSize": "sample_size",
                "successfulSamplesRequired": "successful_samples_required"
            },
            "azure:cdn/FrontdoorOriginPrivateLink:FrontdoorOriginPrivateLink": {
                "privateLinkTargetId": "private_link_target_id",
                "requestMessage": "request_message",
                "targetType": "target_type"
            },
            "azure:cdn/FrontdoorRouteCache:FrontdoorRouteCache": {
                "compressionEnabled": "compression_enabled",
                "contentTypesToCompresses": "content_types_to_compress",
                "queryStringCachingBehavior": "query_string_caching_behavior",
                "queryStrings": "query_strings"
            },
            "azure:cdn/FrontdoorRuleActions:FrontdoorRuleActions": {
                "requestHeaderActions": "request_header_action",
                "responseHeaderActions": "response_header_action",
                "routeConfigurationOverrideAction": "route_configuration_override_action",
                "urlRedirectAction": "url_redirect_action",
                "urlRewriteAction": "url_rewrite_action"
            },
            "azure:cdn/FrontdoorRuleActionsRequestHeaderAction:FrontdoorRuleActionsRequestHeaderAction": {
                "headerAction": "header_action",
                "headerName": "header_name"
            },
            "azure:cdn/FrontdoorRuleActionsResponseHeaderAction:FrontdoorRuleActionsResponseHeaderAction": {
                "headerAction": "header_action",
                "headerName": "header_name"
            },
            "azure:cdn/FrontdoorRuleActionsRouteConfigurationOverrideAction:FrontdoorRuleActionsRouteConfigurationOverrideAction": {
                "cacheBehavior": "cache_behavior",
                "cacheDuration": "cache_duration",
                "cdnFrontdoorOriginGroupId": "cdn_frontdoor_origin_group_id",
                "compressionEnabled": "compression_enabled",
                "forwardingProtocol": "forwarding_protocol",
                "queryStringCachingBehavior": "query_string_caching_behavior",
                "queryStringParameters": "query_string_parameters"
            },
            "azure:cdn/FrontdoorRuleActionsUrlRedirectAction:FrontdoorRuleActionsUrlRedirectAction": {
                "destinationFragment": "destination_fragment",
                "destinationHostname": "destination_hostname",
                "destinationPath": "destination_path",
                "queryString": "query_string",
                "redirectProtocol": "redirect_protocol",
                "redirectType": "redirect_type"
            },
            "azure:cdn/FrontdoorRuleActionsUrlRewriteAction:FrontdoorRuleActionsUrlRewriteAction": {
                "preserveUnmatchedPath": "preserve_unmatched_path",
                "sourcePattern": "source_pattern"
            },
            "azure:cdn/FrontdoorRuleConditions:FrontdoorRuleConditions": {
                "clientPortConditions": "client_port_condition",
                "cookiesConditions": "cookies_condition",
                "hostNameConditions": "host_name_condition",
                "httpVersionConditions": "http_version_condition",
                "isDeviceConditions": "is_device_condition",
                "postArgsConditions": "post_args_condition",
                "queryStringConditions": "query_string_condition",
                "remoteAddressConditions": "remote_address_condition",
                "requestBodyConditions": "request_body_condition",
                "requestHeaderConditions": "request_header_condition",
                "requestMethodConditions": "request_method_condition",
                "requestSchemeConditions": "request_scheme_condition",
                "requestUriConditions": "request_uri_condition",
                "serverPortConditions": "server_port_condition",
                "socketAddressConditions": "socket_address_condition",
                "sslProtocolConditions": "ssl_protocol_condition",
                "urlFileExtensionConditions": "url_file_extension_condition",
                "urlFilenameConditions": "url_filename_condition",
                "urlPathConditions": "url_path_condition"
            },
            "azure:cdn/FrontdoorRuleConditionsClientPortCondition:FrontdoorRuleConditionsClientPortCondition": {
                "matchValues": "match_values",
                "negateCondition": "negate_condition"
            },
            "azure:cdn/FrontdoorRuleConditionsCookiesCondition:FrontdoorRuleConditionsCookiesCondition": {
                "cookieName": "cookie_name",
                "matchValues": "match_values",
                "negateCondition": "negate_condition"
            },
            "azure:cdn/FrontdoorRuleConditionsHostNameCondition:FrontdoorRuleConditionsHostNameCondition": {
                "matchValues": "match_values",
                "negateCondition": "negate_condition"
            },
            "azure:cdn/FrontdoorRuleConditionsHttpVersionCondition:FrontdoorRuleConditionsHttpVersionCondition": {
                "matchValues": "match_values",
                "negateCondition": "negate_condition"
            },
            "azure:cdn/FrontdoorRuleConditionsIsDeviceCondition:FrontdoorRuleConditionsIsDeviceCondition": {
                "matchValues": "match_values",
                "negateCondition": "negate_condition"
            },
            "azure:cdn/FrontdoorRuleConditionsPostArgsCondition:FrontdoorRuleConditionsPostArgsCondition": {
                "matchValues": "match_values",
                "negateCondition": "negate_condition",
                "postArgsName": "post_args_name"
            },
            "azure:cdn/FrontdoorRuleConditionsQueryStringCondition:FrontdoorRuleConditionsQueryStringCondition": {
                "matchValues": "match_values",
                "negateCondition": "negate_condition"
            },
            "azure:cdn/FrontdoorRuleConditionsRemoteAddressCondition:FrontdoorRuleConditionsRemoteAddressCondition": {
                "matchValues": "match_values",
                "negateCondition": "negate_condition"
            },
            "azure:cdn/FrontdoorRuleConditionsRequestBodyCondition:FrontdoorRuleConditionsRequestBodyCondition": {
                "matchValues": "match_values",
                "negateCondition": "negate_condition"
            },
            "azure:cdn/FrontdoorRuleConditionsRequestHeaderCondition:FrontdoorRuleConditionsRequestHeaderCondition": {
                "headerName": "header_name",
                "matchValues": "match_values",
                "negateCondition": "negate_condition"
            },
            "azure:cdn/FrontdoorRuleConditionsRequestMethodCondition:FrontdoorRuleConditionsRequestMethodCondition": {
                "matchValues": "match_values",
                "negateCondition": "negate_condition"
            },
            "azure:cdn/FrontdoorRuleConditionsRequestSchemeCondition:FrontdoorRuleConditionsRequestSchemeCondition": {
                "matchValues": "match_values",
                "negateCondition": "negate_condition"
            },
            "azure:cdn/FrontdoorRuleConditionsRequestUriCondition:FrontdoorRuleConditionsRequestUriCondition": {
                "matchValues": "match_values",
                "negateCondition": "negate_condition"
            },
            "azure:cdn/FrontdoorRuleConditionsServerPortCondition:FrontdoorRuleConditionsServerPortCondition": {
                "matchValues": "match_values",
                "negateCondition": "negate_condition"
            },
            "azure:cdn/FrontdoorRuleConditionsSocketAddressCondition:FrontdoorRuleConditionsSocketAddressCondition": {
                "matchValues": "match_values",
                "negateCondition": "negate_condition"
            },
            "azure:cdn/FrontdoorRuleConditionsSslProtocolCondition:FrontdoorRuleConditionsSslProtocolCondition": {
                "matchValues": "match_values",
                "negateCondition": "negate_condition"
            },
            "azure:cdn/FrontdoorRuleConditionsUrlFileExtensionCondition:FrontdoorRuleConditionsUrlFileExtensionCondition": {
                "matchValues": "match_values",
                "negateCondition": "negate_condition"
            },
            "azure:cdn/FrontdoorRuleConditionsUrlFilenameCondition:FrontdoorRuleConditionsUrlFilenameCondition": {
                "matchValues": "match_values",
                "negateCondition": "negate_condition"
            },
            "azure:cdn/FrontdoorRuleConditionsUrlPathCondition:FrontdoorRuleConditionsUrlPathCondition": {
                "matchValues": "match_values",
                "negateCondition": "negate_condition"
            },
            "azure:cdn/FrontdoorSecretSecret:FrontdoorSecretSecret": {
                "customerCertificates": "customer_certificate"
            },
            "azure:cdn/FrontdoorSecretSecretCustomerCertificate:FrontdoorSecretSecretCustomerCertificate": {
                "keyVaultCertificateId": "key_vault_certificate_id",
                "subjectAlternativeNames": "subject_alternative_names"
            },
            "azure:cdn/FrontdoorSecurityPolicySecurityPoliciesFirewall:FrontdoorSecurityPolicySecurityPoliciesFirewall": {
                "cdnFrontdoorFirewallPolicyId": "cdn_frontdoor_firewall_policy_id"
            },
            "azure:cdn/FrontdoorSecurityPolicySecurityPoliciesFirewallAssociation:FrontdoorSecurityPolicySecurityPoliciesFirewallAssociation": {
                "domains": "domain",
                "patternsToMatch": "patterns_to_match"
            },
            "azure:cdn/FrontdoorSecurityPolicySecurityPoliciesFirewallAssociationDomain:FrontdoorSecurityPolicySecurityPoliciesFirewallAssociationDomain": {
                "cdnFrontdoorDomainId": "cdn_frontdoor_domain_id"
            },
            "azure:cdn/endpoint:Endpoint": {
                "contentTypesToCompresses": "content_types_to_compress",
                "deliveryRules": "delivery_rule",
                "geoFilters": "geo_filter",
                "globalDeliveryRule": "global_delivery_rule",
                "isCompressionEnabled": "is_compression_enabled",
                "isHttpAllowed": "is_http_allowed",
                "isHttpsAllowed": "is_https_allowed",
                "optimizationType": "optimization_type",
                "originHostHeader": "origin_host_header",
                "originPath": "origin_path",
                "origins": "origin",
                "probePath": "probe_path",
                "profileName": "profile_name",
                "querystringCachingBehaviour": "querystring_caching_behaviour",
                "resourceGroupName": "resource_group_name"
            },
            "azure:cdn/endpointCustomDomain:EndpointCustomDomain": {
                "cdnEndpointId": "cdn_endpoint_id",
                "cdnManagedHttps": "cdn_managed_https",
                "hostName": "host_name",
                "userManagedHttps": "user_managed_https"
            },
            "azure:cdn/frontdoorCustomDomain:FrontdoorCustomDomain": {
                "cdnFrontdoorProfileId": "cdn_frontdoor_profile_id",
                "dnsZoneId": "dns_zone_id",
                "expirationDate": "expiration_date",
                "hostName": "host_name",
                "validationToken": "validation_token"
            },
            "azure:cdn/frontdoorCustomDomainAssociation:FrontdoorCustomDomainAssociation": {
                "cdnFrontdoorCustomDomainId": "cdn_frontdoor_custom_domain_id",
                "cdnFrontdoorRouteIds": "cdn_frontdoor_route_ids"
            },
            "azure:cdn/frontdoorEndpoint:FrontdoorEndpoint": {
                "cdnFrontdoorProfileId": "cdn_frontdoor_profile_id",
                "hostName": "host_name"
            },
            "azure:cdn/frontdoorFirewallPolicy:FrontdoorFirewallPolicy": {
                "customBlockResponseBody": "custom_block_response_body",
                "customBlockResponseStatusCode": "custom_block_response_status_code",
                "customRules": "custom_rule",
                "frontendEndpointIds": "frontend_endpoint_ids",
                "managedRules": "managed_rule",
                "redirectUrl": "redirect_url",
                "resourceGroupName": "resource_group_name",
                "skuName": "sku_name"
            },
            "azure:cdn/frontdoorOrigin:FrontdoorOrigin": {
                "cdnFrontdoorOriginGroupId": "cdn_frontdoor_origin_group_id",
                "certificateNameCheckEnabled": "certificate_name_check_enabled",
                "healthProbesEnabled": "health_probes_enabled",
                "hostName": "host_name",
                "httpPort": "http_port",
                "httpsPort": "https_port",
                "originHostHeader": "origin_host_header",
                "privateLink": "private_link"
            },
            "azure:cdn/frontdoorOriginGroup:FrontdoorOriginGroup": {
                "cdnFrontdoorProfileId": "cdn_frontdoor_profile_id",
                "healthProbe": "health_probe",
                "loadBalancing": "load_balancing",
                "restoreTrafficTimeToHealedOrNewEndpointInMinutes": "restore_traffic_time_to_healed_or_new_endpoint_in_minutes",
                "sessionAffinityEnabled": "session_affinity_enabled"
            },
            "azure:cdn/frontdoorProfile:FrontdoorProfile": {
                "resourceGroupName": "resource_group_name",
                "resourceGuid": "resource_guid",
                "responseTimeoutSeconds": "response_timeout_seconds",
                "skuName": "sku_name"
            },
            "azure:cdn/frontdoorRoute:FrontdoorRoute": {
                "cdnFrontdoorCustomDomainIds": "cdn_frontdoor_custom_domain_ids",
                "cdnFrontdoorEndpointId": "cdn_frontdoor_endpoint_id",
                "cdnFrontdoorOriginGroupId": "cdn_frontdoor_origin_group_id",
                "cdnFrontdoorOriginIds": "cdn_frontdoor_origin_ids",
                "cdnFrontdoorOriginPath": "cdn_frontdoor_origin_path",
                "cdnFrontdoorRuleSetIds": "cdn_frontdoor_rule_set_ids",
                "forwardingProtocol": "forwarding_protocol",
                "httpsRedirectEnabled": "https_redirect_enabled",
                "linkToDefaultDomain": "link_to_default_domain",
                "patternsToMatches": "patterns_to_match",
                "supportedProtocols": "supported_protocols"
            },
            "azure:cdn/frontdoorRouteDisableLinkToDefaultDomain:FrontdoorRouteDisableLinkToDefaultDomain": {
                "cdnFrontdoorCustomDomainIds": "cdn_frontdoor_custom_domain_ids",
                "cdnFrontdoorRouteId": "cdn_frontdoor_route_id"
            },
            "azure:cdn/frontdoorRule:FrontdoorRule": {
                "behaviorOnMatch": "behavior_on_match",
                "cdnFrontdoorRuleSetId": "cdn_frontdoor_rule_set_id",
                "cdnFrontdoorRuleSetName": "cdn_frontdoor_rule_set_name"
            },
            "azure:cdn/frontdoorRuleSet:FrontdoorRuleSet": {
                "cdnFrontdoorProfileId": "cdn_frontdoor_profile_id"
            },
            "azure:cdn/frontdoorSecret:FrontdoorSecret": {
                "cdnFrontdoorProfileId": "cdn_frontdoor_profile_id",
                "cdnFrontdoorProfileName": "cdn_frontdoor_profile_name"
            },
            "azure:cdn/frontdoorSecurityPolicy:FrontdoorSecurityPolicy": {
                "cdnFrontdoorProfileId": "cdn_frontdoor_profile_id",
                "securityPolicies": "security_policies"
            },
            "azure:cdn/getFrontdoorCustomDomain:getFrontdoorCustomDomain": {
                "cdnFrontdoorProfileId": "cdn_frontdoor_profile_id",
                "dnsZoneId": "dns_zone_id",
                "expirationDate": "expiration_date",
                "hostName": "host_name",
                "profileName": "profile_name",
                "resourceGroupName": "resource_group_name",
                "validationToken": "validation_token"
            },
            "azure:cdn/getFrontdoorCustomDomainTl:getFrontdoorCustomDomainTl": {
                "cdnFrontdoorSecretId": "cdn_frontdoor_secret_id",
                "certificateType": "certificate_type",
                "minimumTlsVersion": "minimum_tls_version"
            },
            "azure:cdn/getFrontdoorEndpoint:getFrontdoorEndpoint": {
                "hostName": "host_name",
                "profileName": "profile_name",
                "resourceGroupName": "resource_group_name"
            },
            "azure:cdn/getFrontdoorFirewallPolicy:getFrontdoorFirewallPolicy": {
                "frontendEndpointIds": "frontend_endpoint_ids",
                "redirectUrl": "redirect_url",
                "resourceGroupName": "resource_group_name",
                "skuName": "sku_name"
            },
            "azure:cdn/getFrontdoorOriginGroup:getFrontdoorOriginGroup": {
                "cdnFrontdoorProfileId": "cdn_frontdoor_profile_id",
                "healthProbes": "health_probe",
                "loadBalancings": "load_balancing",
                "profileName": "profile_name",
                "resourceGroupName": "resource_group_name",
                "restoreTrafficTimeToHealedOrNewEndpointInMinutes": "restore_traffic_time_to_healed_or_new_endpoint_in_minutes",
                "sessionAffinityEnabled": "session_affinity_enabled"
            },
            "azure:cdn/getFrontdoorOriginGroupHealthProbe:getFrontdoorOriginGroupHealthProbe": {
                "intervalInSeconds": "interval_in_seconds",
                "requestType": "request_type"
            },
            "azure:cdn/getFrontdoorOriginGroupLoadBalancing:getFrontdoorOriginGroupLoadBalancing": {
                "additionalLatencyInMilliseconds": "additional_latency_in_milliseconds",
                "sampleSize": "sample_size",
                "successfulSamplesRequired": "successful_samples_required"
            },
            "azure:cdn/getFrontdoorProfile:getFrontdoorProfile": {
                "resourceGroupName": "resource_group_name",
                "resourceGuid": "resource_guid",
                "responseTimeoutSeconds": "response_timeout_seconds",
                "skuName": "sku_name"
            },
            "azure:cdn/getFrontdoorRuleSet:getFrontdoorRuleSet": {
                "cdnFrontdoorProfileId": "cdn_frontdoor_profile_id",
                "profileName": "profile_name",
                "resourceGroupName": "resource_group_name"
            },
            "azure:cdn/getFrontdoorSecret:getFrontdoorSecret": {
                "cdnFrontdoorProfileId": "cdn_frontdoor_profile_id",
                "profileName": "profile_name",
                "resourceGroupName": "resource_group_name",
                "secrets": "secret"
            },
            "azure:cdn/getFrontdoorSecretSecret:getFrontdoorSecretSecret": {
                "customerCertificates": "customer_certificate"
            },
            "azure:cdn/getFrontdoorSecretSecretCustomerCertificate:getFrontdoorSecretSecretCustomerCertificate": {
                "expirationDate": "expiration_date",
                "keyVaultCertificateId": "key_vault_certificate_id",
                "subjectAlternativeNames": "subject_alternative_names"
            },
            "azure:cdn/getProfile:getProfile": {
                "resourceGroupName": "resource_group_name"
            },
            "azure:cdn/profile:Profile": {
                "resourceGroupName": "resource_group_name"
            },
            "azure:cognitive/AccountCustomerManagedKey:AccountCustomerManagedKey": {
                "identityClientId": "identity_client_id",
                "keyVaultKeyId": "key_vault_key_id"
            },
            "azure:cognitive/AccountIdentity:AccountIdentity": {
                "identityIds": "identity_ids",
                "principalId": "principal_id",
                "tenantId": "tenant_id"
            },
            "azure:cognitive/AccountNetworkAcls:AccountNetworkAcls": {
                "defaultAction": "default_action",
                "ipRules": "ip_rules",
                "virtualNetworkRules": "virtual_network_rules"
            },
            "azure:cognitive/AccountNetworkAclsVirtualNetworkRule:AccountNetworkAclsVirtualNetworkRule": {
                "ignoreMissingVnetServiceEndpoint": "ignore_missing_vnet_service_endpoint",
                "subnetId": "subnet_id"
            },
            "azure:cognitive/AccountStorage:AccountStorage": {
                "identityClientId": "identity_client_id",
                "storageAccountId": "storage_account_id"
            },
            "azure:cognitive/account:Account": {
                "customQuestionAnsweringSearchServiceId": "custom_question_answering_search_service_id",
                "customQuestionAnsweringSearchServiceKey": "custom_question_answering_search_service_key",
                "customSubdomainName": "custom_subdomain_name",
                "customerManagedKey": "customer_managed_key",
                "dynamicThrottlingEnabled": "dynamic_throttling_enabled",
                "localAuthEnabled": "local_auth_enabled",
                "metricsAdvisorAadClientId": "metrics_advisor_aad_client_id",
                "metricsAdvisorAadTenantId": "metrics_advisor_aad_tenant_id",
                "metricsAdvisorSuperUserName": "metrics_advisor_super_user_name",
                "metricsAdvisorWebsiteName": "metrics_advisor_website_name",
                "networkAcls": "network_acls",
                "outboundNetworkAccessRestricted": "outbound_network_access_restricted",
                "primaryAccessKey": "primary_access_key",
                "publicNetworkAccessEnabled": "public_network_access_enabled",
                "qnaRuntimeEndpoint": "qna_runtime_endpoint",
                "resourceGroupName": "resource_group_name",
                "secondaryAccessKey": "secondary_access_key",
                "skuName": "sku_name",
                "storages": "storage"
            },
            "azure:cognitive/accountCustomerManagedKey:AccountCustomerManagedKey": {
                "cognitiveAccountId": "cognitive_account_id",
                "identityClientId": "identity_client_id",
                "keyVaultKeyId": "key_vault_key_id"
            },
            "azure:cognitive/deployment:Deployment": {
                "cognitiveAccountId": "cognitive_account_id",
                "raiPolicyName": "rai_policy_name",
                "versionUpgradeOption": "version_upgrade_option"
            },
            "azure:cognitive/getAccount:getAccount": {
                "primaryAccessKey": "primary_access_key",
                "qnaRuntimeEndpoint": "qna_runtime_endpoint",
                "resourceGroupName": "resource_group_name",
                "secondaryAccessKey": "secondary_access_key",
                "skuName": "sku_name"
            },
            "azure:communication/emailService:EmailService": {
                "dataLocation": "data_location",
                "resourceGroupName": "resource_group_name"
            },
            "azure:communication/getService:getService": {
                "dataLocation": "data_location",
                "primaryConnectionString": "primary_connection_string",
                "primaryKey": "primary_key",
                "resourceGroupName": "resource_group_name",
                "secondaryConnectionString": "secondary_connection_string",
                "secondaryKey": "secondary_key"
            },
            "azure:communication/service:Service": {
                "dataLocation": "data_location",
                "primaryConnectionString": "primary_connection_string",
                "primaryKey": "primary_key",
                "resourceGroupName": "resource_group_name",
                "secondaryConnectionString": "secondary_connection_string",
                "secondaryKey": "secondary_key"
            },
            "azure:compute/BastionHostIpConfiguration:BastionHostIpConfiguration": {
                "publicIpAddressId": "public_ip_address_id",
                "subnetId": "subnet_id"
            },
            "azure:compute/DiskEncryptionSetIdentity:DiskEncryptionSetIdentity": {
                "identityIds": "identity_ids",
                "principalId": "principal_id",
                "tenantId": "tenant_id"
            },
            "azure:compute/ExtensionProtectedSettingsFromKeyVault:ExtensionProtectedSettingsFromKeyVault": {
                "secretUrl": "secret_url",
                "sourceVaultId": "source_vault_id"
            },
            "azure:compute/GalleryApplicationVersionSource:GalleryApplicationVersionSource": {
                "defaultConfigurationLink": "default_configuration_link",
                "mediaLink": "media_link"
            },
            "azure:compute/GalleryApplicationVersionTargetRegion:GalleryApplicationVersionTargetRegion": {
                "excludeFromLatest": "exclude_from_latest",
                "regionalReplicaCount": "regional_replica_count",
                "storageAccountType": "storage_account_type"
            },
            "azure:compute/ImageDataDisk:ImageDataDisk": {
                "blobUri": "blob_uri",
                "managedDiskId": "managed_disk_id",
                "sizeGb": "size_gb"
            },
            "azure:compute/ImageOsDisk:ImageOsDisk": {
                "blobUri": "blob_uri",
                "diskEncryptionSetId": "disk_encryption_set_id",
                "managedDiskId": "managed_disk_id",
                "osState": "os_state",
                "osType": "os_type",
                "sizeGb": "size_gb"
            },
            "azure:compute/LinuxVirtualMachineAdditionalCapabilities:LinuxVirtualMachineAdditionalCapabilities": {
                "ultraSsdEnabled": "ultra_ssd_enabled"
            },
            "azure:compute/LinuxVirtualMachineAdminSshKey:LinuxVirtualMachineAdminSshKey": {
                "publicKey": "public_key"
            },
            "azure:compute/LinuxVirtualMachineBootDiagnostics:LinuxVirtualMachineBootDiagnostics": {
                "storageAccountUri": "storage_account_uri"
            },
            "azure:compute/LinuxVirtualMachineGalleryApplication:LinuxVirtualMachineGalleryApplication": {
                "configurationBlobUri": "configuration_blob_uri",
                "versionId": "version_id"
            },
            "azure:compute/LinuxVirtualMachineIdentity:LinuxVirtualMachineIdentity": {
                "identityIds": "identity_ids",
                "principalId": "principal_id",
                "tenantId": "tenant_id"
            },
            "azure:compute/LinuxVirtualMachineOsDisk:LinuxVirtualMachineOsDisk": {
                "diffDiskSettings": "diff_disk_settings",
                "diskEncryptionSetId": "disk_encryption_set_id",
                "diskSizeGb": "disk_size_gb",
                "secureVmDiskEncryptionSetId": "secure_vm_disk_encryption_set_id",
                "securityEncryptionType": "security_encryption_type",
                "storageAccountType": "storage_account_type",
                "writeAcceleratorEnabled": "write_accelerator_enabled"
            },
            "azure:compute/LinuxVirtualMachineScaleSetAdditionalCapabilities:LinuxVirtualMachineScaleSetAdditionalCapabilities": {
                "ultraSsdEnabled": "ultra_ssd_enabled"
            },
            "azure:compute/LinuxVirtualMachineScaleSetAdminSshKey:LinuxVirtualMachineScaleSetAdminSshKey": {
                "publicKey": "public_key"
            },
            "azure:compute/LinuxVirtualMachineScaleSetAutomaticInstanceRepair:LinuxVirtualMachineScaleSetAutomaticInstanceRepair": {
                "gracePeriod": "grace_period"
            },
            "azure:compute/LinuxVirtualMachineScaleSetAutomaticOsUpgradePolicy:LinuxVirtualMachineScaleSetAutomaticOsUpgradePolicy": {
                "disableAutomaticRollback": "disable_automatic_rollback",
                "enableAutomaticOsUpgrade": "enable_automatic_os_upgrade"
            },
            "azure:compute/LinuxVirtualMachineScaleSetBootDiagnostics:LinuxVirtualMachineScaleSetBootDiagnostics": {
                "storageAccountUri": "storage_account_uri"
            },
            "azure:compute/LinuxVirtualMachineScaleSetDataDisk:LinuxVirtualMachineScaleSetDataDisk": {
                "createOption": "create_option",
                "diskEncryptionSetId": "disk_encryption_set_id",
                "diskSizeGb": "disk_size_gb",
                "storageAccountType": "storage_account_type",
                "ultraSsdDiskIopsReadWrite": "ultra_ssd_disk_iops_read_write",
                "ultraSsdDiskMbpsReadWrite": "ultra_ssd_disk_mbps_read_write",
                "writeAcceleratorEnabled": "write_accelerator_enabled"
            },
            "azure:compute/LinuxVirtualMachineScaleSetExtension:LinuxVirtualMachineScaleSetExtension": {
                "autoUpgradeMinorVersion": "auto_upgrade_minor_version",
                "automaticUpgradeEnabled": "automatic_upgrade_enabled",
                "forceUpdateTag": "force_update_tag",
                "protectedSettings": "protected_settings",
                "protectedSettingsFromKeyVault": "protected_settings_from_key_vault",
                "provisionAfterExtensions": "provision_after_extensions",
                "typeHandlerVersion": "type_handler_version"
            },
            "azure:compute/LinuxVirtualMachineScaleSetExtensionProtectedSettingsFromKeyVault:LinuxVirtualMachineScaleSetExtensionProtectedSettingsFromKeyVault": {
                "secretUrl": "secret_url",
                "sourceVaultId": "source_vault_id"
            },
            "azure:compute/LinuxVirtualMachineScaleSetGalleryApplication:LinuxVirtualMachineScaleSetGalleryApplication": {
                "configurationBlobUri": "configuration_blob_uri",
                "configurationReferenceBlobUri": "configuration_reference_blob_uri",
                "packageReferenceId": "package_reference_id",
                "versionId": "version_id"
            },
            "azure:compute/LinuxVirtualMachineScaleSetIdentity:LinuxVirtualMachineScaleSetIdentity": {
                "identityIds": "identity_ids",
                "principalId": "principal_id",
                "tenantId": "tenant_id"
            },
            "azure:compute/LinuxVirtualMachineScaleSetNetworkInterface:LinuxVirtualMachineScaleSetNetworkInterface": {
                "dnsServers": "dns_servers",
                "enableAcceleratedNetworking": "enable_accelerated_networking",
                "enableIpForwarding": "enable_ip_forwarding",
                "ipConfigurations": "ip_configuration",
                "networkSecurityGroupId": "network_security_group_id"
            },
            "azure:compute/LinuxVirtualMachineScaleSetNetworkInterfaceIpConfiguration:LinuxVirtualMachineScaleSetNetworkInterfaceIpConfiguration": {
                "applicationGatewayBackendAddressPoolIds": "application_gateway_backend_address_pool_ids",
                "applicationSecurityGroupIds": "application_security_group_ids",
                "loadBalancerBackendAddressPoolIds": "load_balancer_backend_address_pool_ids",
                "loadBalancerInboundNatRulesIds": "load_balancer_inbound_nat_rules_ids",
                "publicIpAddresses": "public_ip_address",
                "subnetId": "subnet_id"
            },
            "azure:compute/LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddress:LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddress": {
                "domainNameLabel": "domain_name_label",
                "idleTimeoutInMinutes": "idle_timeout_in_minutes",
                "ipTags": "ip_tag",
                "publicIpPrefixId": "public_ip_prefix_id"
            },
            "azure:compute/LinuxVirtualMachineScaleSetOsDisk:LinuxVirtualMachineScaleSetOsDisk": {
                "diffDiskSettings": "diff_disk_settings",
                "diskEncryptionSetId": "disk_encryption_set_id",
                "diskSizeGb": "disk_size_gb",
                "secureVmDiskEncryptionSetId": "secure_vm_disk_encryption_set_id",
                "securityEncryptionType": "security_encryption_type",
                "storageAccountType": "storage_account_type",
                "writeAcceleratorEnabled": "write_accelerator_enabled"
            },
            "azure:compute/LinuxVirtualMachineScaleSetRollingUpgradePolicy:LinuxVirtualMachineScaleSetRollingUpgradePolicy": {
                "crossZoneUpgradesEnabled": "cross_zone_upgrades_enabled",
                "maxBatchInstancePercent": "max_batch_instance_percent",
                "maxUnhealthyInstancePercent": "max_unhealthy_instance_percent",
                "maxUnhealthyUpgradedInstancePercent": "max_unhealthy_upgraded_instance_percent",
                "pauseTimeBetweenBatches": "pause_time_between_batches",
                "prioritizeUnhealthyInstancesEnabled": "prioritize_unhealthy_instances_enabled"
            },
            "azure:compute/LinuxVirtualMachineScaleSetScaleIn:LinuxVirtualMachineScaleSetScaleIn": {
                "forceDeletionEnabled": "force_deletion_enabled"
            },
            "azure:compute/LinuxVirtualMachineScaleSetSecret:LinuxVirtualMachineScaleSetSecret": {
                "certificates": "certificate",
                "keyVaultId": "key_vault_id"
            },
            "azure:compute/LinuxVirtualMachineSecret:LinuxVirtualMachineSecret": {
                "certificates": "certificate",
                "keyVaultId": "key_vault_id"
            },
            "azure:compute/ManagedDiskEncryptionSettings:ManagedDiskEncryptionSettings": {
                "diskEncryptionKey": "disk_encryption_key",
                "keyEncryptionKey": "key_encryption_key"
            },
            "azure:compute/ManagedDiskEncryptionSettingsDiskEncryptionKey:ManagedDiskEncryptionSettingsDiskEncryptionKey": {
                "secretUrl": "secret_url",
                "sourceVaultId": "source_vault_id"
            },
            "azure:compute/ManagedDiskEncryptionSettingsKeyEncryptionKey:ManagedDiskEncryptionSettingsKeyEncryptionKey": {
                "keyUrl": "key_url",
                "sourceVaultId": "source_vault_id"
            },
            "azure:compute/OrchestratedVirtualMachineScaleSetAdditionalCapabilities:OrchestratedVirtualMachineScaleSetAdditionalCapabilities": {
                "ultraSsdEnabled": "ultra_ssd_enabled"
            },
            "azure:compute/OrchestratedVirtualMachineScaleSetAutomaticInstanceRepair:OrchestratedVirtualMachineScaleSetAutomaticInstanceRepair": {
                "gracePeriod": "grace_period"
            },
            "azure:compute/OrchestratedVirtualMachineScaleSetBootDiagnostics:OrchestratedVirtualMachineScaleSetBootDiagnostics": {
                "storageAccountUri": "storage_account_uri"
            },
            "azure:compute/OrchestratedVirtualMachineScaleSetDataDisk:OrchestratedVirtualMachineScaleSetDataDisk": {
                "createOption": "create_option",
                "diskEncryptionSetId": "disk_encryption_set_id",
                "diskSizeGb": "disk_size_gb",
                "storageAccountType": "storage_account_type",
                "ultraSsdDiskIopsReadWrite": "ultra_ssd_disk_iops_read_write",
                "ultraSsdDiskMbpsReadWrite": "ultra_ssd_disk_mbps_read_write",
                "writeAcceleratorEnabled": "write_accelerator_enabled"
            },
            "azure:compute/OrchestratedVirtualMachineScaleSetExtension:OrchestratedVirtualMachineScaleSetExtension": {
                "autoUpgradeMinorVersionEnabled": "auto_upgrade_minor_version_enabled",
                "extensionsToProvisionAfterVmCreations": "extensions_to_provision_after_vm_creation",
                "failureSuppressionEnabled": "failure_suppression_enabled",
                "forceExtensionExecutionOnChange": "force_extension_execution_on_change",
                "protectedSettings": "protected_settings",
                "protectedSettingsFromKeyVault": "protected_settings_from_key_vault",
                "typeHandlerVersion": "type_handler_version"
            },
            "azure:compute/OrchestratedVirtualMachineScaleSetExtensionProtectedSettingsFromKeyVault:OrchestratedVirtualMachineScaleSetExtensionProtectedSettingsFromKeyVault": {
                "secretUrl": "secret_url",
                "sourceVaultId": "source_vault_id"
            },
            "azure:compute/OrchestratedVirtualMachineScaleSetIdentity:OrchestratedVirtualMachineScaleSetIdentity": {
                "identityIds": "identity_ids"
            },
            "azure:compute/OrchestratedVirtualMachineScaleSetNetworkInterface:OrchestratedVirtualMachineScaleSetNetworkInterface": {
                "dnsServers": "dns_servers",
                "enableAcceleratedNetworking": "enable_accelerated_networking",
                "enableIpForwarding": "enable_ip_forwarding",
                "ipConfigurations": "ip_configuration",
                "networkSecurityGroupId": "network_security_group_id"
            },
            "azure:compute/OrchestratedVirtualMachineScaleSetNetworkInterfaceIpConfiguration:OrchestratedVirtualMachineScaleSetNetworkInterfaceIpConfiguration": {
                "applicationGatewayBackendAddressPoolIds": "application_gateway_backend_address_pool_ids",
                "applicationSecurityGroupIds": "application_security_group_ids",
                "loadBalancerBackendAddressPoolIds": "load_balancer_backend_address_pool_ids",
                "publicIpAddresses": "public_ip_address",
                "subnetId": "subnet_id"
            },
            "azure:compute/OrchestratedVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddress:OrchestratedVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddress": {
                "domainNameLabel": "domain_name_label",
                "idleTimeoutInMinutes": "idle_timeout_in_minutes",
                "ipTags": "ip_tag",
                "publicIpPrefixId": "public_ip_prefix_id",
                "skuName": "sku_name"
            },
            "azure:compute/OrchestratedVirtualMachineScaleSetOsDisk:OrchestratedVirtualMachineScaleSetOsDisk": {
                "diffDiskSettings": "diff_disk_settings",
                "diskEncryptionSetId": "disk_encryption_set_id",
                "diskSizeGb": "disk_size_gb",
                "storageAccountType": "storage_account_type",
                "writeAcceleratorEnabled": "write_accelerator_enabled"
            },
            "azure:compute/OrchestratedVirtualMachineScaleSetOsProfile:OrchestratedVirtualMachineScaleSetOsProfile": {
                "customData": "custom_data",
                "linuxConfiguration": "linux_configuration",
                "windowsConfiguration": "windows_configuration"
            },
            "azure:compute/OrchestratedVirtualMachineScaleSetOsProfileLinuxConfiguration:OrchestratedVirtualMachineScaleSetOsProfileLinuxConfiguration": {
                "adminPassword": "admin_password",
                "adminSshKeys": "admin_ssh_key",
                "adminUsername": "admin_username",
                "computerNamePrefix": "computer_name_prefix",
                "disablePasswordAuthentication": "disable_password_authentication",
                "patchAssessmentMode": "patch_assessment_mode",
                "patchMode": "patch_mode",
                "provisionVmAgent": "provision_vm_agent",
                "secrets": "secret"
            },
            "azure:compute/OrchestratedVirtualMachineScaleSetOsProfileLinuxConfigurationAdminSshKey:OrchestratedVirtualMachineScaleSetOsProfileLinuxConfigurationAdminSshKey": {
                "publicKey": "public_key"
            },
            "azure:compute/OrchestratedVirtualMachineScaleSetOsProfileLinuxConfigurationSecret:OrchestratedVirtualMachineScaleSetOsProfileLinuxConfigurationSecret": {
                "certificates": "certificate",
                "keyVaultId": "key_vault_id"
            },
            "azure:compute/OrchestratedVirtualMachineScaleSetOsProfileWindowsConfiguration:OrchestratedVirtualMachineScaleSetOsProfileWindowsConfiguration": {
                "adminPassword": "admin_password",
                "adminUsername": "admin_username",
                "computerNamePrefix": "computer_name_prefix",
                "enableAutomaticUpdates": "enable_automatic_updates",
                "hotpatchingEnabled": "hotpatching_enabled",
                "patchAssessmentMode": "patch_assessment_mode",
                "patchMode": "patch_mode",
                "provisionVmAgent": "provision_vm_agent",
                "secrets": "secret",
                "winrmListeners": "winrm_listener"
            },
            "azure:compute/OrchestratedVirtualMachineScaleSetOsProfileWindowsConfigurationSecret:OrchestratedVirtualMachineScaleSetOsProfileWindowsConfigurationSecret": {
                "certificates": "certificate",
                "keyVaultId": "key_vault_id"
            },
            "azure:compute/OrchestratedVirtualMachineScaleSetOsProfileWindowsConfigurationWinrmListener:OrchestratedVirtualMachineScaleSetOsProfileWindowsConfigurationWinrmListener": {
                "certificateUrl": "certificate_url"
            },
            "azure:compute/OrchestratedVirtualMachineScaleSetPriorityMix:OrchestratedVirtualMachineScaleSetPriorityMix": {
                "baseRegularCount": "base_regular_count",
                "regularPercentageAboveBase": "regular_percentage_above_base"
            },
            "azure:compute/PacketCaptureFilter:PacketCaptureFilter": {
                "localIpAddress": "local_ip_address",
                "localPort": "local_port",
                "remoteIpAddress": "remote_ip_address",
                "remotePort": "remote_port"
            },
            "azure:compute/PacketCaptureStorageLocation:PacketCaptureStorageLocation": {
                "filePath": "file_path",
                "storageAccountId": "storage_account_id",
                "storagePath": "storage_path"
            },
            "azure:compute/ScaleSetBootDiagnostics:ScaleSetBootDiagnostics": {
                "storageUri": "storage_uri"
            },
            "azure:compute/ScaleSetExtension:ScaleSetExtension": {
                "autoUpgradeMinorVersion": "auto_upgrade_minor_version",
                "protectedSettings": "protected_settings",
                "provisionAfterExtensions": "provision_after_extensions",
                "typeHandlerVersion": "type_handler_version"
            },
            "azure:compute/ScaleSetIdentity:ScaleSetIdentity": {
                "identityIds": "identity_ids",
                "principalId": "principal_id"
            },
            "azure:compute/ScaleSetNetworkProfile:ScaleSetNetworkProfile": {
                "acceleratedNetworking": "accelerated_networking",
                "dnsSettings": "dns_settings",
                "ipConfigurations": "ip_configuration",
                "ipForwarding": "ip_forwarding",
                "networkSecurityGroupId": "network_security_group_id"
            },
            "azure:compute/ScaleSetNetworkProfileDnsSettings:ScaleSetNetworkProfileDnsSettings": {
                "dnsServers": "dns_servers"
            },
            "azure:compute/ScaleSetNetworkProfileIpConfiguration:ScaleSetNetworkProfileIpConfiguration": {
                "applicationGatewayBackendAddressPoolIds": "application_gateway_backend_address_pool_ids",
                "applicationSecurityGroupIds": "application_security_group_ids",
                "loadBalancerBackendAddressPoolIds": "load_balancer_backend_address_pool_ids",
                "loadBalancerInboundNatRulesIds": "load_balancer_inbound_nat_rules_ids",
                "publicIpAddressConfiguration": "public_ip_address_configuration",
                "subnetId": "subnet_id"
            },
            "azure:compute/ScaleSetNetworkProfileIpConfigurationPublicIpAddressConfiguration:ScaleSetNetworkProfileIpConfigurationPublicIpAddressConfiguration": {
                "domainNameLabel": "domain_name_label",
                "idleTimeout": "idle_timeout"
            },
            "azure:compute/ScaleSetOsProfile:ScaleSetOsProfile": {
                "adminPassword": "admin_password",
                "adminUsername": "admin_username",
                "computerNamePrefix": "computer_name_prefix",
                "customData": "custom_data"
            },
            "azure:compute/ScaleSetOsProfileLinuxConfig:ScaleSetOsProfileLinuxConfig": {
                "disablePasswordAuthentication": "disable_password_authentication",
                "sshKeys": "ssh_keys"
            },
            "azure:compute/ScaleSetOsProfileLinuxConfigSshKey:ScaleSetOsProfileLinuxConfigSshKey": {
                "keyData": "key_data"
            },
            "azure:compute/ScaleSetOsProfileSecret:ScaleSetOsProfileSecret": {
                "sourceVaultId": "source_vault_id",
                "vaultCertificates": "vault_certificates"
            },
            "azure:compute/ScaleSetOsProfileSecretVaultCertificate:ScaleSetOsProfileSecretVaultCertificate": {
                "certificateStore": "certificate_store",
                "certificateUrl": "certificate_url"
            },
            "azure:compute/ScaleSetOsProfileWindowsConfig:ScaleSetOsProfileWindowsConfig": {
                "additionalUnattendConfigs": "additional_unattend_config",
                "enableAutomaticUpgrades": "enable_automatic_upgrades",
                "provisionVmAgent": "provision_vm_agent",
                "winrms": "winrm"
            },
            "azure:compute/ScaleSetOsProfileWindowsConfigAdditionalUnattendConfig:ScaleSetOsProfileWindowsConfigAdditionalUnattendConfig": {
                "settingName": "setting_name"
            },
            "azure:compute/ScaleSetOsProfileWindowsConfigWinrm:ScaleSetOsProfileWindowsConfigWinrm": {
                "certificateUrl": "certificate_url"
            },
            "azure:compute/ScaleSetPacketCaptureFilter:ScaleSetPacketCaptureFilter": {
                "localIpAddress": "local_ip_address",
                "localPort": "local_port",
                "remoteIpAddress": "remote_ip_address",
                "remotePort": "remote_port"
            },
            "azure:compute/ScaleSetPacketCaptureMachineScope:ScaleSetPacketCaptureMachineScope": {
                "excludeInstanceIds": "exclude_instance_ids",
                "includeInstanceIds": "include_instance_ids"
            },
            "azure:compute/ScaleSetPacketCaptureStorageLocation:ScaleSetPacketCaptureStorageLocation": {
                "filePath": "file_path",
                "storageAccountId": "storage_account_id",
                "storagePath": "storage_path"
            },
            "azure:compute/ScaleSetRollingUpgradePolicy:ScaleSetRollingUpgradePolicy": {
                "maxBatchInstancePercent": "max_batch_instance_percent",
                "maxUnhealthyInstancePercent": "max_unhealthy_instance_percent",
                "maxUnhealthyUpgradedInstancePercent": "max_unhealthy_upgraded_instance_percent",
                "pauseTimeBetweenBatches": "pause_time_between_batches"
            },
            "azure:compute/ScaleSetStorageProfileDataDisk:ScaleSetStorageProfileDataDisk": {
                "createOption": "create_option",
                "diskSizeGb": "disk_size_gb",
                "managedDiskType": "managed_disk_type"
            },
            "azure:compute/ScaleSetStorageProfileOsDisk:ScaleSetStorageProfileOsDisk": {
                "createOption": "create_option",
                "managedDiskType": "managed_disk_type",
                "osType": "os_type",
                "vhdContainers": "vhd_containers"
            },
            "azure:compute/SharedImageGallerySharing:SharedImageGallerySharing": {
                "communityGallery": "community_gallery"
            },
            "azure:compute/SharedImageGallerySharingCommunityGallery:SharedImageGallerySharingCommunityGallery": {
                "publisherEmail": "publisher_email",
                "publisherUri": "publisher_uri"
            },
            "azure:compute/SharedImageVersionTargetRegion:SharedImageVersionTargetRegion": {
                "diskEncryptionSetId": "disk_encryption_set_id",
                "excludeFromLatestEnabled": "exclude_from_latest_enabled",
                "regionalReplicaCount": "regional_replica_count",
                "storageAccountType": "storage_account_type"
            },
            "azure:compute/SnapshotEncryptionSettings:SnapshotEncryptionSettings": {
                "diskEncryptionKey": "disk_encryption_key",
                "keyEncryptionKey": "key_encryption_key"
            },
            "azure:compute/SnapshotEncryptionSettingsDiskEncryptionKey:SnapshotEncryptionSettingsDiskEncryptionKey": {
                "secretUrl": "secret_url",
                "sourceVaultId": "source_vault_id"
            },
            "azure:compute/SnapshotEncryptionSettingsKeyEncryptionKey:SnapshotEncryptionSettingsKeyEncryptionKey": {
                "keyUrl": "key_url",
                "sourceVaultId": "source_vault_id"
            },
            "azure:compute/VirtualMachineAdditionalCapabilities:VirtualMachineAdditionalCapabilities": {
                "ultraSsdEnabled": "ultra_ssd_enabled"
            },
            "azure:compute/VirtualMachineBootDiagnostics:VirtualMachineBootDiagnostics": {
                "storageUri": "storage_uri"
            },
            "azure:compute/VirtualMachineIdentity:VirtualMachineIdentity": {
                "identityIds": "identity_ids",
                "principalId": "principal_id"
            },
            "azure:compute/VirtualMachineOsProfile:VirtualMachineOsProfile": {
                "adminPassword": "admin_password",
                "adminUsername": "admin_username",
                "computerName": "computer_name",
                "customData": "custom_data"
            },
            "azure:compute/VirtualMachineOsProfileLinuxConfig:VirtualMachineOsProfileLinuxConfig": {
                "disablePasswordAuthentication": "disable_password_authentication",
                "sshKeys": "ssh_keys"
            },
            "azure:compute/VirtualMachineOsProfileLinuxConfigSshKey:VirtualMachineOsProfileLinuxConfigSshKey": {
                "keyData": "key_data"
            },
            "azure:compute/VirtualMachineOsProfileSecret:VirtualMachineOsProfileSecret": {
                "sourceVaultId": "source_vault_id",
                "vaultCertificates": "vault_certificates"
            },
            "azure:compute/VirtualMachineOsProfileSecretVaultCertificate:VirtualMachineOsProfileSecretVaultCertificate": {
                "certificateStore": "certificate_store",
                "certificateUrl": "certificate_url"
            },
            "azure:compute/VirtualMachineOsProfileWindowsConfig:VirtualMachineOsProfileWindowsConfig": {
                "additionalUnattendConfigs": "additional_unattend_config",
                "enableAutomaticUpgrades": "enable_automatic_upgrades",
                "provisionVmAgent": "provision_vm_agent",
                "winrms": "winrm"
            },
            "azure:compute/VirtualMachineOsProfileWindowsConfigAdditionalUnattendConfig:VirtualMachineOsProfileWindowsConfigAdditionalUnattendConfig": {
                "settingName": "setting_name"
            },
            "azure:compute/VirtualMachineOsProfileWindowsConfigWinrm:VirtualMachineOsProfileWindowsConfigWinrm": {
                "certificateUrl": "certificate_url"
            },
            "azure:compute/VirtualMachineScaleSetExtensionProtectedSettingsFromKeyVault:VirtualMachineScaleSetExtensionProtectedSettingsFromKeyVault": {
                "secretUrl": "secret_url",
                "sourceVaultId": "source_vault_id"
            },
            "azure:compute/VirtualMachineStorageDataDisk:VirtualMachineStorageDataDisk": {
                "createOption": "create_option",
                "diskSizeGb": "disk_size_gb",
                "managedDiskId": "managed_disk_id",
                "managedDiskType": "managed_disk_type",
                "vhdUri": "vhd_uri",
                "writeAcceleratorEnabled": "write_accelerator_enabled"
            },
            "azure:compute/VirtualMachineStorageOsDisk:VirtualMachineStorageOsDisk": {
                "createOption": "create_option",
                "diskSizeGb": "disk_size_gb",
                "imageUri": "image_uri",
                "managedDiskId": "managed_disk_id",
                "managedDiskType": "managed_disk_type",
                "osType": "os_type",
                "vhdUri": "vhd_uri",
                "writeAcceleratorEnabled": "write_accelerator_enabled"
            },
            "azure:compute/WindowsVirtualMachineAdditionalCapabilities:WindowsVirtualMachineAdditionalCapabilities": {
                "ultraSsdEnabled": "ultra_ssd_enabled"
            },
            "azure:compute/WindowsVirtualMachineBootDiagnostics:WindowsVirtualMachineBootDiagnostics": {
                "storageAccountUri": "storage_account_uri"
            },
            "azure:compute/WindowsVirtualMachineGalleryApplication:WindowsVirtualMachineGalleryApplication": {
                "configurationBlobUri": "configuration_blob_uri",
                "versionId": "version_id"
            },
            "azure:compute/WindowsVirtualMachineIdentity:WindowsVirtualMachineIdentity": {
                "identityIds": "identity_ids",
                "principalId": "principal_id",
                "tenantId": "tenant_id"
            },
            "azure:compute/WindowsVirtualMachineOsDisk:WindowsVirtualMachineOsDisk": {
                "diffDiskSettings": "diff_disk_settings",
                "diskEncryptionSetId": "disk_encryption_set_id",
                "diskSizeGb": "disk_size_gb",
                "secureVmDiskEncryptionSetId": "secure_vm_disk_encryption_set_id",
                "securityEncryptionType": "security_encryption_type",
                "storageAccountType": "storage_account_type",
                "writeAcceleratorEnabled": "write_accelerator_enabled"
            },
            "azure:compute/WindowsVirtualMachineScaleSetAdditionalCapabilities:WindowsVirtualMachineScaleSetAdditionalCapabilities": {
                "ultraSsdEnabled": "ultra_ssd_enabled"
            },
            "azure:compute/WindowsVirtualMachineScaleSetAutomaticInstanceRepair:WindowsVirtualMachineScaleSetAutomaticInstanceRepair": {
                "gracePeriod": "grace_period"
            },
            "azure:compute/WindowsVirtualMachineScaleSetAutomaticOsUpgradePolicy:WindowsVirtualMachineScaleSetAutomaticOsUpgradePolicy": {
                "disableAutomaticRollback": "disable_automatic_rollback",
                "enableAutomaticOsUpgrade": "enable_automatic_os_upgrade"
            },
            "azure:compute/WindowsVirtualMachineScaleSetBootDiagnostics:WindowsVirtualMachineScaleSetBootDiagnostics": {
                "storageAccountUri": "storage_account_uri"
            },
            "azure:compute/WindowsVirtualMachineScaleSetDataDisk:WindowsVirtualMachineScaleSetDataDisk": {
                "createOption": "create_option",
                "diskEncryptionSetId": "disk_encryption_set_id",
                "diskSizeGb": "disk_size_gb",
                "storageAccountType": "storage_account_type",
                "ultraSsdDiskIopsReadWrite": "ultra_ssd_disk_iops_read_write",
                "ultraSsdDiskMbpsReadWrite": "ultra_ssd_disk_mbps_read_write",
                "writeAcceleratorEnabled": "write_accelerator_enabled"
            },
            "azure:compute/WindowsVirtualMachineScaleSetExtension:WindowsVirtualMachineScaleSetExtension": {
                "autoUpgradeMinorVersion": "auto_upgrade_minor_version",
                "automaticUpgradeEnabled": "automatic_upgrade_enabled",
                "forceUpdateTag": "force_update_tag",
                "protectedSettings": "protected_settings",
                "protectedSettingsFromKeyVault": "protected_settings_from_key_vault",
                "provisionAfterExtensions": "provision_after_extensions",
                "typeHandlerVersion": "type_handler_version"
            },
            "azure:compute/WindowsVirtualMachineScaleSetExtensionProtectedSettingsFromKeyVault:WindowsVirtualMachineScaleSetExtensionProtectedSettingsFromKeyVault": {
                "secretUrl": "secret_url",
                "sourceVaultId": "source_vault_id"
            },
            "azure:compute/WindowsVirtualMachineScaleSetGalleryApplication:WindowsVirtualMachineScaleSetGalleryApplication": {
                "configurationBlobUri": "configuration_blob_uri",
                "configurationReferenceBlobUri": "configuration_reference_blob_uri",
                "packageReferenceId": "package_reference_id",
                "versionId": "version_id"
            },
            "azure:compute/WindowsVirtualMachineScaleSetIdentity:WindowsVirtualMachineScaleSetIdentity": {
                "identityIds": "identity_ids",
                "principalId": "principal_id",
                "tenantId": "tenant_id"
            },
            "azure:compute/WindowsVirtualMachineScaleSetNetworkInterface:WindowsVirtualMachineScaleSetNetworkInterface": {
                "dnsServers": "dns_servers",
                "enableAcceleratedNetworking": "enable_accelerated_networking",
                "enableIpForwarding": "enable_ip_forwarding",
                "ipConfigurations": "ip_configuration",
                "networkSecurityGroupId": "network_security_group_id"
            },
            "azure:compute/WindowsVirtualMachineScaleSetNetworkInterfaceIpConfiguration:WindowsVirtualMachineScaleSetNetworkInterfaceIpConfiguration": {
                "applicationGatewayBackendAddressPoolIds": "application_gateway_backend_address_pool_ids",
                "applicationSecurityGroupIds": "application_security_group_ids",
                "loadBalancerBackendAddressPoolIds": "load_balancer_backend_address_pool_ids",
                "loadBalancerInboundNatRulesIds": "load_balancer_inbound_nat_rules_ids",
                "publicIpAddresses": "public_ip_address",
                "subnetId": "subnet_id"
            },
            "azure:compute/WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddress:WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddress": {
                "domainNameLabel": "domain_name_label",
                "idleTimeoutInMinutes": "idle_timeout_in_minutes",
                "ipTags": "ip_tag",
                "publicIpPrefixId": "public_ip_prefix_id"
            },
            "azure:compute/WindowsVirtualMachineScaleSetOsDisk:WindowsVirtualMachineScaleSetOsDisk": {
                "diffDiskSettings": "diff_disk_settings",
                "diskEncryptionSetId": "disk_encryption_set_id",
                "diskSizeGb": "disk_size_gb",
                "secureVmDiskEncryptionSetId": "secure_vm_disk_encryption_set_id",
                "securityEncryptionType": "security_encryption_type",
                "storageAccountType": "storage_account_type",
                "writeAcceleratorEnabled": "write_accelerator_enabled"
            },
            "azure:compute/WindowsVirtualMachineScaleSetRollingUpgradePolicy:WindowsVirtualMachineScaleSetRollingUpgradePolicy": {
                "crossZoneUpgradesEnabled": "cross_zone_upgrades_enabled",
                "maxBatchInstancePercent": "max_batch_instance_percent",
                "maxUnhealthyInstancePercent": "max_unhealthy_instance_percent",
                "maxUnhealthyUpgradedInstancePercent": "max_unhealthy_upgraded_instance_percent",
                "pauseTimeBetweenBatches": "pause_time_between_batches",
                "prioritizeUnhealthyInstancesEnabled": "prioritize_unhealthy_instances_enabled"
            },
            "azure:compute/WindowsVirtualMachineScaleSetScaleIn:WindowsVirtualMachineScaleSetScaleIn": {
                "forceDeletionEnabled": "force_deletion_enabled"
            },
            "azure:compute/WindowsVirtualMachineScaleSetSecret:WindowsVirtualMachineScaleSetSecret": {
                "certificates": "certificate",
                "keyVaultId": "key_vault_id"
            },
            "azure:compute/WindowsVirtualMachineScaleSetWinrmListener:WindowsVirtualMachineScaleSetWinrmListener": {
                "certificateUrl": "certificate_url"
            },
            "azure:compute/WindowsVirtualMachineSecret:WindowsVirtualMachineSecret": {
                "certificates": "certificate",
                "keyVaultId": "key_vault_id"
            },
            "azure:compute/WindowsVirtualMachineWinrmListener:WindowsVirtualMachineWinrmListener": {
                "certificateUrl": "certificate_url"
            },
            "azure:compute/availabilitySet:AvailabilitySet": {
                "platformFaultDomainCount": "platform_fault_domain_count",
                "platformUpdateDomainCount": "platform_update_domain_count",
                "proximityPlacementGroupId": "proximity_placement_group_id",
                "resourceGroupName": "resource_group_name"
            },
            "azure:compute/bastionHost:BastionHost": {
                "copyPasteEnabled": "copy_paste_enabled",
                "dnsName": "dns_name",
                "fileCopyEnabled": "file_copy_enabled",
                "ipConfiguration": "ip_configuration",
                "ipConnectEnabled": "ip_connect_enabled",
                "resourceGroupName": "resource_group_name",
                "scaleUnits": "scale_units",
                "shareableLinkEnabled": "shareable_link_enabled",
                "tunnelingEnabled": "tunneling_enabled"
            },
            "azure:compute/capacityReservation:CapacityReservation": {
                "capacityReservationGroupId": "capacity_reservation_group_id"
            },
            "azure:compute/capacityReservationGroup:CapacityReservationGroup": {
                "resourceGroupName": "resource_group_name"
            },
            "azure:compute/dataDiskAttachment:DataDiskAttachment": {
                "createOption": "create_option",
                "managedDiskId": "managed_disk_id",
                "virtualMachineId": "virtual_machine_id",
                "writeAcceleratorEnabled": "write_accelerator_enabled"
            },
            "azure:compute/dedicatedHost:DedicatedHost": {
                "autoReplaceOnFailure": "auto_replace_on_failure",
                "dedicatedHostGroupId": "dedicated_host_group_id",
                "licenseType": "license_type",
                "platformFaultDomain": "platform_fault_domain",
                "skuName": "sku_name"
            },
            "azure:compute/dedicatedHostGroup:DedicatedHostGroup": {
                "automaticPlacementEnabled": "automatic_placement_enabled",
                "platformFaultDomainCount": "platform_fault_domain_count",
                "resourceGroupName": "resource_group_name"
            },
            "azure:compute/diskAccess:DiskAccess": {
                "resourceGroupName": "resource_group_name"
            },
            "azure:compute/diskEncryptionSet:DiskEncryptionSet": {
                "autoKeyRotationEnabled": "auto_key_rotation_enabled",
                "encryptionType": "encryption_type",
                "federatedClientId": "federated_client_id",
                "keyVaultKeyId": "key_vault_key_id",
                "keyVaultKeyUrl": "key_vault_key_url",
                "resourceGroupName": "resource_group_name"
            },
            "azure:compute/diskPool:DiskPool": {
                "resourceGroupName": "resource_group_name",
                "skuName": "sku_name",
                "subnetId": "subnet_id"
            },
            "azure:compute/diskPoolIscsiTarget:DiskPoolIscsiTarget": {
                "aclMode": "acl_mode",
                "disksPoolId": "disks_pool_id",
                "targetIqn": "target_iqn"
            },
            "azure:compute/diskPoolIscsiTargetLun:DiskPoolIscsiTargetLun": {
                "diskPoolManagedDiskAttachmentId": "disk_pool_managed_disk_attachment_id",
                "iscsiTargetId": "iscsi_target_id"
            },
            "azure:compute/diskPoolManagedDiskAttachment:DiskPoolManagedDiskAttachment": {
                "diskPoolId": "disk_pool_id",
                "managedDiskId": "managed_disk_id"
            },
            "azure:compute/extension:Extension": {
                "autoUpgradeMinorVersion": "auto_upgrade_minor_version",
                "automaticUpgradeEnabled": "automatic_upgrade_enabled",
                "failureSuppressionEnabled": "failure_suppression_enabled",
                "protectedSettings": "protected_settings",
                "protectedSettingsFromKeyVault": "protected_settings_from_key_vault",
                "provisionAfterExtensions": "provision_after_extensions",
                "typeHandlerVersion": "type_handler_version",
                "virtualMachineId": "virtual_machine_id"
            },
            "azure:compute/galleryApplication:GalleryApplication": {
                "endOfLifeDate": "end_of_life_date",
                "galleryId": "gallery_id",
                "privacyStatementUri": "privacy_statement_uri",
                "releaseNoteUri": "release_note_uri",
                "supportedOsType": "supported_os_type"
            },
            "azure:compute/galleryApplicationVersion:GalleryApplicationVersion": {
                "configFile": "config_file",
                "enableHealthCheck": "enable_health_check",
                "endOfLifeDate": "end_of_life_date",
                "excludeFromLatest": "exclude_from_latest",
                "galleryApplicationId": "gallery_application_id",
                "manageAction": "manage_action",
                "packageFile": "package_file",
                "targetRegions": "target_region"
            },
            "azure:compute/getAvailabilitySet:getAvailabilitySet": {
                "platformFaultDomainCount": "platform_fault_domain_count",
                "platformUpdateDomainCount": "platform_update_domain_count",
                "resourceGroupName": "resource_group_name"
            },
            "azure:compute/getBastionHost:getBastionHost": {
                "copyPasteEnabled": "copy_paste_enabled",
                "dnsName": "dns_name",
                "fileCopyEnabled": "file_copy_enabled",
                "ipConfigurations": "ip_configuration",
                "ipConnectEnabled": "ip_connect_enabled",
                "resourceGroupName": "resource_group_name",
                "scaleUnits": "scale_units",
                "shareableLinkEnabled": "shareable_link_enabled",
                "tunnelingEnabled": "tunneling_enabled"
            },
            "azure:compute/getBastionHostIpConfiguration:getBastionHostIpConfiguration": {
                "publicIpAddressId": "public_ip_address_id",
                "subnetId": "subnet_id"
            },
            "azure:compute/getConfidentialLedger:getConfidentialLedger": {
                "azureadBasedServicePrincipals": "azuread_based_service_principal",
                "certificateBasedSecurityPrincipals": "certificate_based_security_principal",
                "identityServiceEndpoint": "identity_service_endpoint",
                "ledgerEndpoint": "ledger_endpoint",
                "ledgerType": "ledger_type",
                "resourceGroupName": "resource_group_name"
            },
            "azure:compute/getConfidentialLedgerAzureadBasedServicePrincipal:getConfidentialLedgerAzureadBasedServicePrincipal": {
                "ledgerRoleName": "ledger_role_name",
                "principalId": "principal_id",
                "tenantId": "tenant_id"
            },
            "azure:compute/getConfidentialLedgerCertificateBasedSecurityPrincipal:getConfidentialLedgerCertificateBasedSecurityPrincipal": {
                "ledgerRoleName": "ledger_role_name",
                "pemPublicKey": "pem_public_key"
            },
            "azure:compute/getDedicatedHost:getDedicatedHost": {
                "dedicatedHostGroupName": "dedicated_host_group_name",
                "resourceGroupName": "resource_group_name"
            },
            "azure:compute/getDedicatedHostGroup:getDedicatedHostGroup": {
                "automaticPlacementEnabled": "automatic_placement_enabled",
                "platformFaultDomainCount": "platform_fault_domain_count",
                "resourceGroupName": "resource_group_name"
            },
            "azure:compute/getDiskAccess:getDiskAccess": {
                "resourceGroupName": "resource_group_name"
            },
            "azure:compute/getDiskEncryptionSet:getDiskEncryptionSet": {
                "autoKeyRotationEnabled": "auto_key_rotation_enabled",
                "identities": "identity",
                "keyVaultKeyUrl": "key_vault_key_url",
                "resourceGroupName": "resource_group_name"
            },
            "azure:compute/getDiskEncryptionSetIdentity:getDiskEncryptionSetIdentity": {
                "identityIds": "identity_ids",
                "principalId": "principal_id",
                "tenantId": "tenant_id"
            },
            "azure:compute/getImage:getImage": {
                "dataDisks": "data_disk",
                "nameRegex": "name_regex",
                "osDisks": "os_disk",
                "resourceGroupName": "resource_group_name",
                "sortDescending": "sort_descending",
                "zoneResilient": "zone_resilient"
            },
            "azure:compute/getImageDataDisk:getImageDataDisk": {
                "blobUri": "blob_uri",
                "managedDiskId": "managed_disk_id",
                "sizeGb": "size_gb"
            },
            "azure:compute/getImageOsDisk:getImageOsDisk": {
                "blobUri": "blob_uri",
                "managedDiskId": "managed_disk_id",
                "osState": "os_state",
                "osType": "os_type",
                "sizeGb": "size_gb"
            },
            "azure:compute/getImages:getImages": {
                "resourceGroupName": "resource_group_name",
                "tagsFilter": "tags_filter"
            },
            "azure:compute/getImagesImage:getImagesImage": {
                "dataDisks": "data_disk",
                "osDisks": "os_disk",
                "zoneResilient": "zone_resilient"
            },
            "azure:compute/getImagesImageDataDisk:getImagesImageDataDisk": {
                "blobUri": "blob_uri",
                "managedDiskId": "managed_disk_id",
                "sizeGb": "size_gb"
            },
            "azure:compute/getImagesImageOsDisk:getImagesImageOsDisk": {
                "blobUri": "blob_uri",
                "diskEncryptionSetId": "disk_encryption_set_id",
                "managedDiskId": "managed_disk_id",
                "osState": "os_state",
                "osType": "os_type",
                "sizeGb": "size_gb"
            },
            "azure:compute/getManagedDisk:getManagedDisk": {
                "createOption": "create_option",
                "diskAccessId": "disk_access_id",
                "diskEncryptionSetId": "disk_encryption_set_id",
                "diskIopsReadWrite": "disk_iops_read_write",
                "diskMbpsReadWrite": "disk_mbps_read_write",
                "diskSizeGb": "disk_size_gb",
                "encryptionSettings": "encryption_settings",
                "imageReferenceId": "image_reference_id",
                "networkAccessPolicy": "network_access_policy",
                "osType": "os_type",
                "resourceGroupName": "resource_group_name",
                "sourceResourceId": "source_resource_id",
                "sourceUri": "source_uri",
                "storageAccountId": "storage_account_id",
                "storageAccountType": "storage_account_type"
            },
            "azure:compute/getManagedDiskEncryptionSetting:getManagedDiskEncryptionSetting": {
                "diskEncryptionKeys": "disk_encryption_key",
                "keyEncryptionKeys": "key_encryption_key"
            },
            "azure:compute/getManagedDiskEncryptionSettingDiskEncryptionKey:getManagedDiskEncryptionSettingDiskEncryptionKey": {
                "secretUrl": "secret_url",
                "sourceVaultId": "source_vault_id"
            },
            "azure:compute/getManagedDiskEncryptionSettingKeyEncryptionKey:getManagedDiskEncryptionSettingKeyEncryptionKey": {
                "keyUrl": "key_url",
                "sourceVaultId": "source_vault_id"
            },
            "azure:compute/getOrchestratedVirtualMachineScaleSet:getOrchestratedVirtualMachineScaleSet": {
                "identities": "identity",
                "networkInterfaces": "network_interface",
                "resourceGroupName": "resource_group_name"
            },
            "azure:compute/getOrchestratedVirtualMachineScaleSetIdentity:getOrchestratedVirtualMachineScaleSetIdentity": {
                "identityIds": "identity_ids"
            },
            "azure:compute/getOrchestratedVirtualMachineScaleSetNetworkInterface:getOrchestratedVirtualMachineScaleSetNetworkInterface": {
                "acceleratedNetworkingEnabled": "accelerated_networking_enabled",
                "dnsServers": "dns_servers",
                "ipConfigurations": "ip_configuration",
                "ipForwardingEnabled": "ip_forwarding_enabled",
                "networkSecurityGroupId": "network_security_group_id"
            },
            "azure:compute/getOrchestratedVirtualMachineScaleSetNetworkInterfaceIpConfiguration:getOrchestratedVirtualMachineScaleSetNetworkInterfaceIpConfiguration": {
                "applicationGatewayBackendAddressPoolIds": "application_gateway_backend_address_pool_ids",
                "applicationSecurityGroupIds": "application_security_group_ids",
                "loadBalancerBackendAddressPoolIds": "load_balancer_backend_address_pool_ids",
                "loadBalancerInboundNatRulesIds": "load_balancer_inbound_nat_rules_ids",
                "publicIpAddresses": "public_ip_address",
                "subnetId": "subnet_id"
            },
            "azure:compute/getOrchestratedVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddress:getOrchestratedVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddress": {
                "domainNameLabel": "domain_name_label",
                "idleTimeoutInMinutes": "idle_timeout_in_minutes",
                "ipTags": "ip_tag",
                "publicIpPrefixId": "public_ip_prefix_id"
            },
            "azure:compute/getSharedImage:getSharedImage": {
                "galleryName": "gallery_name",
                "hyperVGeneration": "hyper_v_generation",
                "identifiers": "identifier",
                "osType": "os_type",
                "privacyStatementUri": "privacy_statement_uri",
                "purchasePlans": "purchase_plan",
                "releaseNoteUri": "release_note_uri",
                "resourceGroupName": "resource_group_name"
            },
            "azure:compute/getSharedImageGallery:getSharedImageGallery": {
                "resourceGroupName": "resource_group_name",
                "uniqueName": "unique_name"
            },
            "azure:compute/getSharedImageVersion:getSharedImageVersion": {
                "excludeFromLatest": "exclude_from_latest",
                "galleryName": "gallery_name",
                "imageName": "image_name",
                "managedImageId": "managed_image_id",
                "osDiskImageSizeGb": "os_disk_image_size_gb",
                "osDiskSnapshotId": "os_disk_snapshot_id",
                "resourceGroupName": "resource_group_name",
                "sortVersionsBySemver": "sort_versions_by_semver",
                "targetRegions": "target_region"
            },
            "azure:compute/getSharedImageVersionTargetRegion:getSharedImageVersionTargetRegion": {
                "regionalReplicaCount": "regional_replica_count",
                "storageAccountType": "storage_account_type"
            },
            "azure:compute/getSharedImageVersions:getSharedImageVersions": {
                "galleryName": "gallery_name",
                "imageName": "image_name",
                "resourceGroupName": "resource_group_name",
                "tagsFilter": "tags_filter"
            },
            "azure:compute/getSharedImageVersionsImage:getSharedImageVersionsImage": {
                "excludeFromLatest": "exclude_from_latest",
                "managedImageId": "managed_image_id",
                "targetRegions": "target_region"
            },
            "azure:compute/getSharedImageVersionsImageTargetRegion:getSharedImageVersionsImageTargetRegion": {
                "regionalReplicaCount": "regional_replica_count",
                "storageAccountType": "storage_account_type"
            },
            "azure:compute/getSnapshot:getSnapshot": {
                "creationOption": "creation_option",
                "diskSizeGb": "disk_size_gb",
                "encryptionSettings": "encryption_settings",
                "osType": "os_type",
                "resourceGroupName": "resource_group_name",
                "sourceResourceId": "source_resource_id",
                "sourceUri": "source_uri",
                "storageAccountId": "storage_account_id",
                "timeCreated": "time_created",
                "trustedLaunchEnabled": "trusted_launch_enabled"
            },
            "azure:compute/getSnapshotEncryptionSetting:getSnapshotEncryptionSetting": {
                "diskEncryptionKeys": "disk_encryption_key",
                "keyEncryptionKeys": "key_encryption_key"
            },
            "azure:compute/getSnapshotEncryptionSettingDiskEncryptionKey:getSnapshotEncryptionSettingDiskEncryptionKey": {
                "secretUrl": "secret_url",
                "sourceVaultId": "source_vault_id"
            },
            "azure:compute/getSnapshotEncryptionSettingKeyEncryptionKey:getSnapshotEncryptionSettingKeyEncryptionKey": {
                "keyUrl": "key_url",
                "sourceVaultId": "source_vault_id"
            },
            "azure:compute/getSshPublicKey:getSshPublicKey": {
                "publicKey": "public_key",
                "resourceGroupName": "resource_group_name"
            },
            "azure:compute/getVirtualMachine:getVirtualMachine": {
                "identities": "identity",
                "powerState": "power_state",
                "privateIpAddress": "private_ip_address",
                "privateIpAddresses": "private_ip_addresses",
                "publicIpAddress": "public_ip_address",
                "publicIpAddresses": "public_ip_addresses",
                "resourceGroupName": "resource_group_name"
            },
            "azure:compute/getVirtualMachineIdentity:getVirtualMachineIdentity": {
                "identityIds": "identity_ids",
                "principalId": "principal_id",
                "tenantId": "tenant_id"
            },
            "azure:compute/getVirtualMachineScaleSet:getVirtualMachineScaleSet": {
                "identities": "identity",
                "networkInterfaces": "network_interface",
                "resourceGroupName": "resource_group_name"
            },
            "azure:compute/getVirtualMachineScaleSetIdentity:getVirtualMachineScaleSetIdentity": {
                "identityIds": "identity_ids",
                "principalId": "principal_id",
                "tenantId": "tenant_id"
            },
            "azure:compute/getVirtualMachineScaleSetInstance:getVirtualMachineScaleSetInstance": {
                "computerName": "computer_name",
                "instanceId": "instance_id",
                "latestModelApplied": "latest_model_applied",
                "powerState": "power_state",
                "privateIpAddress": "private_ip_address",
                "privateIpAddresses": "private_ip_addresses",
                "publicIpAddress": "public_ip_address",
                "publicIpAddresses": "public_ip_addresses",
                "virtualMachineId": "virtual_machine_id"
            },
            "azure:compute/getVirtualMachineScaleSetNetworkInterface:getVirtualMachineScaleSetNetworkInterface": {
                "dnsServers": "dns_servers",
                "enableAcceleratedNetworking": "enable_accelerated_networking",
                "enableIpForwarding": "enable_ip_forwarding",
                "ipConfigurations": "ip_configuration",
                "networkSecurityGroupId": "network_security_group_id"
            },
            "azure:compute/getVirtualMachineScaleSetNetworkInterfaceIpConfiguration:getVirtualMachineScaleSetNetworkInterfaceIpConfiguration": {
                "applicationGatewayBackendAddressPoolIds": "application_gateway_backend_address_pool_ids",
                "applicationSecurityGroupIds": "application_security_group_ids",
                "loadBalancerBackendAddressPoolIds": "load_balancer_backend_address_pool_ids",
                "loadBalancerInboundNatRulesIds": "load_balancer_inbound_nat_rules_ids",
                "publicIpAddresses": "public_ip_address",
                "subnetId": "subnet_id"
            },
            "azure:compute/getVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddress:getVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddress": {
                "domainNameLabel": "domain_name_label",
                "idleTimeoutInMinutes": "idle_timeout_in_minutes",
                "ipTags": "ip_tag",
                "publicIpPrefixId": "public_ip_prefix_id"
            },
            "azure:compute/image:Image": {
                "dataDisks": "data_disk",
                "hyperVGeneration": "hyper_v_generation",
                "osDisk": "os_disk",
                "resourceGroupName": "resource_group_name",
                "sourceVirtualMachineId": "source_virtual_machine_id",
                "zoneResilient": "zone_resilient"
            },
            "azure:compute/linuxVirtualMachine:LinuxVirtualMachine": {
                "additionalCapabilities": "additional_capabilities",
                "adminPassword": "admin_password",
                "adminSshKeys": "admin_ssh_key",
                "adminUsername": "admin_username",
                "allowExtensionOperations": "allow_extension_operations",
                "availabilitySetId": "availability_set_id",
                "bootDiagnostics": "boot_diagnostics",
                "bypassPlatformSafetyChecksOnUserScheduleEnabled": "bypass_platform_safety_checks_on_user_schedule_enabled",
                "capacityReservationGroupId": "capacity_reservation_group_id",
                "computerName": "computer_name",
                "customData": "custom_data",
                "dedicatedHostGroupId": "dedicated_host_group_id",
                "dedicatedHostId": "dedicated_host_id",
                "disablePasswordAuthentication": "disable_password_authentication",
                "edgeZone": "edge_zone",
                "encryptionAtHostEnabled": "encryption_at_host_enabled",
                "evictionPolicy": "eviction_policy",
                "extensionsTimeBudget": "extensions_time_budget",
                "galleryApplications": "gallery_application",
                "licenseType": "license_type",
                "maxBidPrice": "max_bid_price",
                "networkInterfaceIds": "network_interface_ids",
                "osDisk": "os_disk",
                "patchAssessmentMode": "patch_assessment_mode",
                "patchMode": "patch_mode",
                "platformFaultDomain": "platform_fault_domain",
                "privateIpAddress": "private_ip_address",
                "privateIpAddresses": "private_ip_addresses",
                "provisionVmAgent": "provision_vm_agent",
                "proximityPlacementGroupId": "proximity_placement_group_id",
                "publicIpAddress": "public_ip_address",
                "publicIpAddresses": "public_ip_addresses",
                "rebootSetting": "reboot_setting",
                "resourceGroupName": "resource_group_name",
                "secrets": "secret",
                "secureBootEnabled": "secure_boot_enabled",
                "sourceImageId": "source_image_id",
                "sourceImageReference": "source_image_reference",
                "terminationNotification": "termination_notification",
                "userData": "user_data",
                "virtualMachineId": "virtual_machine_id",
                "virtualMachineScaleSetId": "virtual_machine_scale_set_id",
                "vtpmEnabled": "vtpm_enabled"
            },
            "azure:compute/linuxVirtualMachineScaleSet:LinuxVirtualMachineScaleSet": {
                "additionalCapabilities": "additional_capabilities",
                "adminPassword": "admin_password",
                "adminSshKeys": "admin_ssh_key",
                "adminUsername": "admin_username",
                "automaticInstanceRepair": "automatic_instance_repair",
                "automaticOsUpgradePolicy": "automatic_os_upgrade_policy",
                "bootDiagnostics": "boot_diagnostics",
                "capacityReservationGroupId": "capacity_reservation_group_id",
                "computerNamePrefix": "computer_name_prefix",
                "customData": "custom_data",
                "dataDisks": "data_disk",
                "disablePasswordAuthentication": "disable_password_authentication",
                "doNotRunExtensionsOnOverprovisionedMachines": "do_not_run_extensions_on_overprovisioned_machines",
                "edgeZone": "edge_zone",
                "encryptionAtHostEnabled": "encryption_at_host_enabled",
                "evictionPolicy": "eviction_policy",
                "extensionOperationsEnabled": "extension_operations_enabled",
                "extensions": "extension",
                "extensionsTimeBudget": "extensions_time_budget",
                "galleryApplication": "gallery_application",
                "galleryApplications": "gallery_applications",
                "healthProbeId": "health_probe_id",
                "hostGroupId": "host_group_id",
                "maxBidPrice": "max_bid_price",
                "networkInterfaces": "network_interface",
                "osDisk": "os_disk",
                "platformFaultDomainCount": "platform_fault_domain_count",
                "provisionVmAgent": "provision_vm_agent",
                "proximityPlacementGroupId": "proximity_placement_group_id",
                "resourceGroupName": "resource_group_name",
                "rollingUpgradePolicy": "rolling_upgrade_policy",
                "scaleIn": "scale_in",
                "scaleInPolicy": "scale_in_policy",
                "secrets": "secret",
                "secureBootEnabled": "secure_boot_enabled",
                "singlePlacementGroup": "single_placement_group",
                "sourceImageId": "source_image_id",
                "sourceImageReference": "source_image_reference",
                "spotRestore": "spot_restore",
                "terminateNotification": "terminate_notification",
                "terminationNotification": "termination_notification",
                "uniqueId": "unique_id",
                "upgradeMode": "upgrade_mode",
                "userData": "user_data",
                "vtpmEnabled": "vtpm_enabled",
                "zoneBalance": "zone_balance"
            },
            "azure:compute/managedDisk:ManagedDisk": {
                "createOption": "create_option",
                "diskAccessId": "disk_access_id",
                "diskEncryptionSetId": "disk_encryption_set_id",
                "diskIopsReadOnly": "disk_iops_read_only",
                "diskIopsReadWrite": "disk_iops_read_write",
                "diskMbpsReadOnly": "disk_mbps_read_only",
                "diskMbpsReadWrite": "disk_mbps_read_write",
                "diskSizeGb": "disk_size_gb",
                "edgeZone": "edge_zone",
                "encryptionSettings": "encryption_settings",
                "galleryImageReferenceId": "gallery_image_reference_id",
                "hyperVGeneration": "hyper_v_generation",
                "imageReferenceId": "image_reference_id",
                "logicalSectorSize": "logical_sector_size",
                "maxShares": "max_shares",
                "networkAccessPolicy": "network_access_policy",
                "onDemandBurstingEnabled": "on_demand_bursting_enabled",
                "optimizedFrequentAttachEnabled": "optimized_frequent_attach_enabled",
                "osType": "os_type",
                "performancePlusEnabled": "performance_plus_enabled",
                "publicNetworkAccessEnabled": "public_network_access_enabled",
                "resourceGroupName": "resource_group_name",
                "secureVmDiskEncryptionSetId": "secure_vm_disk_encryption_set_id",
                "securityType": "security_type",
                "sourceResourceId": "source_resource_id",
                "sourceUri": "source_uri",
                "storageAccountId": "storage_account_id",
                "storageAccountType": "storage_account_type",
                "trustedLaunchEnabled": "trusted_launch_enabled",
                "uploadSizeBytes": "upload_size_bytes"
            },
            "azure:compute/managedDiskSasToken:ManagedDiskSasToken": {
                "accessLevel": "access_level",
                "durationInSeconds": "duration_in_seconds",
                "managedDiskId": "managed_disk_id",
                "sasUrl": "sas_url"
            },
            "azure:compute/orchestratedVirtualMachineScaleSet:OrchestratedVirtualMachineScaleSet": {
                "additionalCapabilities": "additional_capabilities",
                "automaticInstanceRepair": "automatic_instance_repair",
                "bootDiagnostics": "boot_diagnostics",
                "capacityReservationGroupId": "capacity_reservation_group_id",
                "dataDisks": "data_disk",
                "encryptionAtHostEnabled": "encryption_at_host_enabled",
                "evictionPolicy": "eviction_policy",
                "extensionOperationsEnabled": "extension_operations_enabled",
                "extensions": "extension",
                "extensionsTimeBudget": "extensions_time_budget",
                "licenseType": "license_type",
                "maxBidPrice": "max_bid_price",
                "networkInterfaces": "network_interface",
                "osDisk": "os_disk",
                "osProfile": "os_profile",
                "platformFaultDomainCount": "platform_fault_domain_count",
                "priorityMix": "priority_mix",
                "proximityPlacementGroupId": "proximity_placement_group_id",
                "resourceGroupName": "resource_group_name",
                "singlePlacementGroup": "single_placement_group",
                "skuName": "sku_name",
                "sourceImageId": "source_image_id",
                "sourceImageReference": "source_image_reference",
                "terminationNotification": "termination_notification",
                "uniqueId": "unique_id",
                "userDataBase64": "user_data_base64",
                "zoneBalance": "zone_balance"
            },
            "azure:compute/packetCapture:PacketCapture": {
                "filters": "filter",
                "maximumBytesPerPacket": "maximum_bytes_per_packet",
                "maximumBytesPerSession": "maximum_bytes_per_session",
                "maximumCaptureDurationInSeconds": "maximum_capture_duration_in_seconds",
                "networkWatcherId": "network_watcher_id",
                "storageLocation": "storage_location",
                "virtualMachineId": "virtual_machine_id"
            },
            "azure:compute/scaleSet:ScaleSet": {
                "automaticOsUpgrade": "automatic_os_upgrade",
                "bootDiagnostics": "boot_diagnostics",
                "evictionPolicy": "eviction_policy",
                "extensions": "extension",
                "healthProbeId": "health_probe_id",
                "licenseType": "license_type",
                "networkProfiles": "network_profile",
                "osProfile": "os_profile",
                "osProfileLinuxConfig": "os_profile_linux_config",
                "osProfileSecrets": "os_profile_secrets",
                "osProfileWindowsConfig": "os_profile_windows_config",
                "proximityPlacementGroupId": "proximity_placement_group_id",
                "resourceGroupName": "resource_group_name",
                "rollingUpgradePolicy": "rolling_upgrade_policy",
                "singlePlacementGroup": "single_placement_group",
                "storageProfileDataDisks": "storage_profile_data_disk",
                "storageProfileImageReference": "storage_profile_image_reference",
                "storageProfileOsDisk": "storage_profile_os_disk",
                "upgradePolicyMode": "upgrade_policy_mode"
            },
            "azure:compute/scaleSetPacketCapture:ScaleSetPacketCapture": {
                "filters": "filter",
                "machineScope": "machine_scope",
                "maximumBytesPerPacket": "maximum_bytes_per_packet",
                "maximumBytesPerSession": "maximum_bytes_per_session",
                "maximumCaptureDurationInSeconds": "maximum_capture_duration_in_seconds",
                "networkWatcherId": "network_watcher_id",
                "storageLocation": "storage_location",
                "virtualMachineScaleSetId": "virtual_machine_scale_set_id"
            },
            "azure:compute/sharedImage:SharedImage": {
                "acceleratedNetworkSupportEnabled": "accelerated_network_support_enabled",
                "confidentialVmEnabled": "confidential_vm_enabled",
                "confidentialVmSupported": "confidential_vm_supported",
                "diskTypesNotAlloweds": "disk_types_not_allowed",
                "endOfLifeDate": "end_of_life_date",
                "galleryName": "gallery_name",
                "hyperVGeneration": "hyper_v_generation",
                "maxRecommendedMemoryInGb": "max_recommended_memory_in_gb",
                "maxRecommendedVcpuCount": "max_recommended_vcpu_count",
                "minRecommendedMemoryInGb": "min_recommended_memory_in_gb",
                "minRecommendedVcpuCount": "min_recommended_vcpu_count",
                "osType": "os_type",
                "privacyStatementUri": "privacy_statement_uri",
                "purchasePlan": "purchase_plan",
                "releaseNoteUri": "release_note_uri",
                "resourceGroupName": "resource_group_name",
                "trustedLaunchEnabled": "trusted_launch_enabled",
                "trustedLaunchSupported": "trusted_launch_supported"
            },
            "azure:compute/sharedImageGallery:SharedImageGallery": {
                "resourceGroupName": "resource_group_name",
                "uniqueName": "unique_name"
            },
            "azure:compute/sharedImageVersion:SharedImageVersion": {
                "blobUri": "blob_uri",
                "deletionOfReplicatedLocationsEnabled": "deletion_of_replicated_locations_enabled",
                "endOfLifeDate": "end_of_life_date",
                "excludeFromLatest": "exclude_from_latest",
                "galleryName": "gallery_name",
                "imageName": "image_name",
                "managedImageId": "managed_image_id",
                "osDiskSnapshotId": "os_disk_snapshot_id",
                "replicationMode": "replication_mode",
                "resourceGroupName": "resource_group_name",
                "storageAccountId": "storage_account_id",
                "targetRegions": "target_region"
            },
            "azure:compute/snapshot:Snapshot": {
                "createOption": "create_option",
                "diskSizeGb": "disk_size_gb",
                "encryptionSettings": "encryption_settings",
                "incrementalEnabled": "incremental_enabled",
                "resourceGroupName": "resource_group_name",
                "sourceResourceId": "source_resource_id",
                "sourceUri": "source_uri",
                "storageAccountId": "storage_account_id",
                "trustedLaunchEnabled": "trusted_launch_enabled"
            },
            "azure:compute/sshPublicKey:SshPublicKey": {
                "publicKey": "public_key",
                "resourceGroupName": "resource_group_name"
            },
            "azure:compute/virtualMachine:VirtualMachine": {
                "additionalCapabilities": "additional_capabilities",
                "availabilitySetId": "availability_set_id",
                "bootDiagnostics": "boot_diagnostics",
                "deleteDataDisksOnTermination": "delete_data_disks_on_termination",
                "deleteOsDiskOnTermination": "delete_os_disk_on_termination",
                "licenseType": "license_type",
                "networkInterfaceIds": "network_interface_ids",
                "osProfile": "os_profile",
                "osProfileLinuxConfig": "os_profile_linux_config",
                "osProfileSecrets": "os_profile_secrets",
                "osProfileWindowsConfig": "os_profile_windows_config",
                "primaryNetworkInterfaceId": "primary_network_interface_id",
                "proximityPlacementGroupId": "proximity_placement_group_id",
                "resourceGroupName": "resource_group_name",
                "storageDataDisks": "storage_data_disk",
                "storageImageReference": "storage_image_reference",
                "storageOsDisk": "storage_os_disk",
                "vmSize": "vm_size"
            },
            "azure:compute/virtualMachineScaleSetExtension:VirtualMachineScaleSetExtension": {
                "autoUpgradeMinorVersion": "auto_upgrade_minor_version",
                "automaticUpgradeEnabled": "automatic_upgrade_enabled",
                "failureSuppressionEnabled": "failure_suppression_enabled",
                "forceUpdateTag": "force_update_tag",
                "protectedSettings": "protected_settings",
                "protectedSettingsFromKeyVault": "protected_settings_from_key_vault",
                "provisionAfterExtensions": "provision_after_extensions",
                "typeHandlerVersion": "type_handler_version",
                "virtualMachineScaleSetId": "virtual_machine_scale_set_id"
            },
            "azure:compute/windowsVirtualMachine:WindowsVirtualMachine": {
                "additionalCapabilities": "additional_capabilities",
                "additionalUnattendContents": "additional_unattend_content",
                "adminPassword": "admin_password",
                "adminUsername": "admin_username",
                "allowExtensionOperations": "allow_extension_operations",
                "availabilitySetId": "availability_set_id",
                "bootDiagnostics": "boot_diagnostics",
                "bypassPlatformSafetyChecksOnUserScheduleEnabled": "bypass_platform_safety_checks_on_user_schedule_enabled",
                "capacityReservationGroupId": "capacity_reservation_group_id",
                "computerName": "computer_name",
                "customData": "custom_data",
                "dedicatedHostGroupId": "dedicated_host_group_id",
                "dedicatedHostId": "dedicated_host_id",
                "edgeZone": "edge_zone",
                "enableAutomaticUpdates": "enable_automatic_updates",
                "encryptionAtHostEnabled": "encryption_at_host_enabled",
                "evictionPolicy": "eviction_policy",
                "extensionsTimeBudget": "extensions_time_budget",
                "galleryApplications": "gallery_application",
                "hotpatchingEnabled": "hotpatching_enabled",
                "licenseType": "license_type",
                "maxBidPrice": "max_bid_price",
                "networkInterfaceIds": "network_interface_ids",
                "osDisk": "os_disk",
                "patchAssessmentMode": "patch_assessment_mode",
                "patchMode": "patch_mode",
                "platformFaultDomain": "platform_fault_domain",
                "privateIpAddress": "private_ip_address",
                "privateIpAddresses": "private_ip_addresses",
                "provisionVmAgent": "provision_vm_agent",
                "proximityPlacementGroupId": "proximity_placement_group_id",
                "publicIpAddress": "public_ip_address",
                "publicIpAddresses": "public_ip_addresses",
                "rebootSetting": "reboot_setting",
                "resourceGroupName": "resource_group_name",
                "secrets": "secret",
                "secureBootEnabled": "secure_boot_enabled",
                "sourceImageId": "source_image_id",
                "sourceImageReference": "source_image_reference",
                "terminationNotification": "termination_notification",
                "userData": "user_data",
                "virtualMachineId": "virtual_machine_id",
                "virtualMachineScaleSetId": "virtual_machine_scale_set_id",
                "vtpmEnabled": "vtpm_enabled",
                "winrmListeners": "winrm_listener"
            },
            "azure:compute/windowsVirtualMachineScaleSet:WindowsVirtualMachineScaleSet": {
                "additionalCapabilities": "additional_capabilities",
                "additionalUnattendContents": "additional_unattend_content",
                "adminPassword": "admin_password",
                "adminUsername": "admin_username",
                "automaticInstanceRepair": "automatic_instance_repair",
                "automaticOsUpgradePolicy": "automatic_os_upgrade_policy",
                "bootDiagnostics": "boot_diagnostics",
                "capacityReservationGroupId": "capacity_reservation_group_id",
                "computerNamePrefix": "computer_name_prefix",
                "customData": "custom_data",
                "dataDisks": "data_disk",
                "doNotRunExtensionsOnOverprovisionedMachines": "do_not_run_extensions_on_overprovisioned_machines",
                "edgeZone": "edge_zone",
                "enableAutomaticUpdates": "enable_automatic_updates",
                "encryptionAtHostEnabled": "encryption_at_host_enabled",
                "evictionPolicy": "eviction_policy",
                "extensionOperationsEnabled": "extension_operations_enabled",
                "extensions": "extension",
                "extensionsTimeBudget": "extensions_time_budget",
                "galleryApplication": "gallery_application",
                "galleryApplications": "gallery_applications",
                "healthProbeId": "health_probe_id",
                "hostGroupId": "host_group_id",
                "licenseType": "license_type",
                "maxBidPrice": "max_bid_price",
                "networkInterfaces": "network_interface",
                "osDisk": "os_disk",
                "platformFaultDomainCount": "platform_fault_domain_count",
                "provisionVmAgent": "provision_vm_agent",
                "proximityPlacementGroupId": "proximity_placement_group_id",
                "resourceGroupName": "resource_group_name",
                "rollingUpgradePolicy": "rolling_upgrade_policy",
                "scaleIn": "scale_in",
                "scaleInPolicy": "scale_in_policy",
                "secrets": "secret",
                "secureBootEnabled": "secure_boot_enabled",
                "singlePlacementGroup": "single_placement_group",
                "sourceImageId": "source_image_id",
                "sourceImageReference": "source_image_reference",
                "spotRestore": "spot_restore",
                "terminateNotification": "terminate_notification",
                "terminationNotification": "termination_notification",
                "uniqueId": "unique_id",
                "upgradeMode": "upgrade_mode",
                "userData": "user_data",
                "vtpmEnabled": "vtpm_enabled",
                "winrmListeners": "winrm_listener",
                "zoneBalance": "zone_balance"
            },
            "azure:confidentialledger/LedgerAzureadBasedServicePrincipal:LedgerAzureadBasedServicePrincipal": {
                "ledgerRoleName": "ledger_role_name",
                "principalId": "principal_id",
                "tenantId": "tenant_id"
            },
            "azure:confidentialledger/LedgerCertificateBasedSecurityPrincipal:LedgerCertificateBasedSecurityPrincipal": {
                "ledgerRoleName": "ledger_role_name",
                "pemPublicKey": "pem_public_key"
            },
            "azure:confidentialledger/ledger:Ledger": {
                "azureadBasedServicePrincipals": "azuread_based_service_principal",
                "certificateBasedSecurityPrincipals": "certificate_based_security_principal",
                "identityServiceEndpoint": "identity_service_endpoint",
                "ledgerEndpoint": "ledger_endpoint",
                "ledgerType": "ledger_type",
                "resourceGroupName": "resource_group_name"
            },
            "azure:config/features:features": {
                "apiManagement": "api_management",
                "appConfiguration": "app_configuration",
                "applicationInsights": "application_insights",
                "cognitiveAccount": "cognitive_account",
                "keyVault": "key_vault",
                "logAnalyticsWorkspace": "log_analytics_workspace",
                "managedDisk": "managed_disk",
                "resourceGroup": "resource_group",
                "templateDeployment": "template_deployment",
                "virtualMachine": "virtual_machine",
                "virtualMachineScaleSet": "virtual_machine_scale_set"
            },
            "azure:config/featuresApiManagement:featuresApiManagement": {
                "purgeSoftDeleteOnDestroy": "purge_soft_delete_on_destroy",
                "recoverSoftDeleted": "recover_soft_deleted"
            },
            "azure:config/featuresAppConfiguration:featuresAppConfiguration": {
                "purgeSoftDeleteOnDestroy": "purge_soft_delete_on_destroy",
                "recoverSoftDeleted": "recover_soft_deleted"
            },
            "azure:config/featuresApplicationInsights:featuresApplicationInsights": {
                "disableGeneratedRule": "disable_generated_rule"
            },
            "azure:config/featuresCognitiveAccount:featuresCognitiveAccount": {
                "purgeSoftDeleteOnDestroy": "purge_soft_delete_on_destroy"
            },
            "azure:config/featuresKeyVault:featuresKeyVault": {
                "purgeSoftDeleteOnDestroy": "purge_soft_delete_on_destroy",
                "purgeSoftDeletedCertificatesOnDestroy": "purge_soft_deleted_certificates_on_destroy",
                "purgeSoftDeletedHardwareSecurityModulesOnDestroy": "purge_soft_deleted_hardware_security_modules_on_destroy",
                "purgeSoftDeletedKeysOnDestroy": "purge_soft_deleted_keys_on_destroy",
                "purgeSoftDeletedSecretsOnDestroy": "purge_soft_deleted_secrets_on_destroy",
                "recoverSoftDeletedCertificates": "recover_soft_deleted_certificates",
                "recoverSoftDeletedKeyVaults": "recover_soft_deleted_key_vaults",
                "recoverSoftDeletedKeys": "recover_soft_deleted_keys",
                "recoverSoftDeletedSecrets": "recover_soft_deleted_secrets"
            },
            "azure:config/featuresLogAnalyticsWorkspace:featuresLogAnalyticsWorkspace": {
                "permanentlyDeleteOnDestroy": "permanently_delete_on_destroy"
            },
            "azure:config/featuresManagedDisk:featuresManagedDisk": {
                "expandWithoutDowntime": "expand_without_downtime"
            },
            "azure:config/featuresResourceGroup:featuresResourceGroup": {
                "preventDeletionIfContainsResources": "prevent_deletion_if_contains_resources"
            },
            "azure:config/featuresSubscription:featuresSubscription": {
                "preventCancellationOnDestroy": "prevent_cancellation_on_destroy"
            },
            "azure:config/featuresTemplateDeployment:featuresTemplateDeployment": {
                "deleteNestedItemsDuringDeletion": "delete_nested_items_during_deletion"
            },
            "azure:config/featuresVirtualMachine:featuresVirtualMachine": {
                "deleteOsDiskOnDeletion": "delete_os_disk_on_deletion",
                "gracefulShutdown": "graceful_shutdown",
                "skipShutdownAndForceDelete": "skip_shutdown_and_force_delete"
            },
            "azure:config/featuresVirtualMachineScaleSet:featuresVirtualMachineScaleSet": {
                "forceDelete": "force_delete",
                "rollInstancesWhenRequired": "roll_instances_when_required",
                "scaleToZeroBeforeDeletion": "scale_to_zero_before_deletion"
            },
            "azure:connections/apiConnection:ApiConnection": {
                "displayName": "display_name",
                "managedApiId": "managed_api_id",
                "parameterValues": "parameter_values",
                "resourceGroupName": "resource_group_name"
            },
            "azure:consumption/BudgetManagementGroupFilter:BudgetManagementGroupFilter": {
                "dimensions": "dimension",
                "tags": "tag"
            },
            "azure:consumption/BudgetManagementGroupNotification:BudgetManagementGroupNotification": {
                "contactEmails": "contact_emails",
                "thresholdType": "threshold_type"
            },
            "azure:consumption/BudgetManagementGroupTimePeriod:BudgetManagementGroupTimePeriod": {
                "endDate": "end_date",
                "startDate": "start_date"
            },
            "azure:consumption/BudgetResourceGroupFilter:BudgetResourceGroupFilter": {
                "dimensions": "dimension",
                "tags": "tag"
            },
            "azure:consumption/BudgetResourceGroupNotification:BudgetResourceGroupNotification": {
                "contactEmails": "contact_emails",
                "contactGroups": "contact_groups",
                "contactRoles": "contact_roles",
                "thresholdType": "threshold_type"
            },
            "azure:consumption/BudgetResourceGroupTimePeriod:BudgetResourceGroupTimePeriod": {
                "endDate": "end_date",
                "startDate": "start_date"
            },
            "azure:consumption/BudgetSubscriptionFilter:BudgetSubscriptionFilter": {
                "dimensions": "dimension",
                "tags": "tag"
            },
            "azure:consumption/BudgetSubscriptionNotification:BudgetSubscriptionNotification": {
                "contactEmails": "contact_emails",
                "contactGroups": "contact_groups",
                "contactRoles": "contact_roles",
                "thresholdType": "threshold_type"
            },
            "azure:consumption/BudgetSubscriptionTimePeriod:BudgetSubscriptionTimePeriod": {
                "endDate": "end_date",
                "startDate": "start_date"
            },
            "azure:consumption/budgetManagementGroup:BudgetManagementGroup": {
                "managementGroupId": "management_group_id",
                "notifications": "notification",
                "timeGrain": "time_grain",
                "timePeriod": "time_period"
            },
            "azure:consumption/budgetResourceGroup:BudgetResourceGroup": {
                "notifications": "notification",
                "resourceGroupId": "resource_group_id",
                "timeGrain": "time_grain",
                "timePeriod": "time_period"
            },
            "azure:consumption/budgetSubscription:BudgetSubscription": {
                "notifications": "notification",
                "subscriptionId": "subscription_id",
                "timeGrain": "time_grain",
                "timePeriod": "time_period"
            },
            "azure:consumption/getBudgetResourceGroup:getBudgetResourceGroup": {
                "filters": "filter",
                "notifications": "notification",
                "resourceGroupId": "resource_group_id",
                "timeGrain": "time_grain",
                "timePeriods": "time_period"
            },
            "azure:consumption/getBudgetResourceGroupFilter:getBudgetResourceGroupFilter": {
                "dimensions": "dimension",
                "nots": "not",
                "tags": "tag"
            },
            "azure:consumption/getBudgetResourceGroupFilterNot:getBudgetResourceGroupFilterNot": {
                "dimensions": "dimension",
                "tags": "tag"
            },
            "azure:consumption/getBudgetResourceGroupNotification:getBudgetResourceGroupNotification": {
                "contactEmails": "contact_emails",
                "contactGroups": "contact_groups",
                "contactRoles": "contact_roles",
                "thresholdType": "threshold_type"
            },
            "azure:consumption/getBudgetResourceGroupTimePeriod:getBudgetResourceGroupTimePeriod": {
                "endDate": "end_date",
                "startDate": "start_date"
            },
            "azure:consumption/getBudgetSubscription:getBudgetSubscription": {
                "filters": "filter",
                "notifications": "notification",
                "subscriptionId": "subscription_id",
                "timeGrain": "time_grain",
                "timePeriods": "time_period"
            },
            "azure:consumption/getBudgetSubscriptionFilter:getBudgetSubscriptionFilter": {
                "dimensions": "dimension",
                "nots": "not",
                "tags": "tag"
            },
            "azure:consumption/getBudgetSubscriptionFilterNot:getBudgetSubscriptionFilterNot": {
                "dimensions": "dimension",
                "tags": "tag"
            },
            "azure:consumption/getBudgetSubscriptionNotification:getBudgetSubscriptionNotification": {
                "contactEmails": "contact_emails",
                "contactGroups": "contact_groups",
                "contactRoles": "contact_roles",
                "thresholdType": "threshold_type"
            },
            "azure:consumption/getBudgetSubscriptionTimePeriod:getBudgetSubscriptionTimePeriod": {
                "endDate": "end_date",
                "startDate": "start_date"
            },
            "azure:containerapp/AppDapr:AppDapr": {
                "appId": "app_id",
                "appPort": "app_port",
                "appProtocol": "app_protocol"
            },
            "azure:containerapp/AppIdentity:AppIdentity": {
                "identityIds": "identity_ids",
                "principalId": "principal_id",
                "tenantId": "tenant_id"
            },
            "azure:containerapp/AppIngress:AppIngress": {
                "allowInsecureConnections": "allow_insecure_connections",
                "customDomain": "custom_domain",
                "exposedPort": "exposed_port",
                "externalEnabled": "external_enabled",
                "targetPort": "target_port",
                "trafficWeights": "traffic_weight"
            },
            "azure:containerapp/AppIngressCustomDomain:AppIngressCustomDomain": {
                "certificateBindingType": "certificate_binding_type",
                "certificateId": "certificate_id"
            },
            "azure:containerapp/AppIngressTrafficWeight:AppIngressTrafficWeight": {
                "latestRevision": "latest_revision",
                "revisionSuffix": "revision_suffix"
            },
            "azure:containerapp/AppRegistry:AppRegistry": {
                "passwordSecretName": "password_secret_name"
            },
            "azure:containerapp/AppTemplate:AppTemplate": {
                "azureQueueScaleRules": "azure_queue_scale_rule",
                "containers": "container",
                "customScaleRules": "custom_scale_rule",
                "httpScaleRules": "http_scale_rule",
                "maxReplicas": "max_replicas",
                "minReplicas": "min_replicas",
                "revisionSuffix": "revision_suffix",
                "tcpScaleRules": "tcp_scale_rule",
                "volumes": "volume"
            },
            "azure:containerapp/AppTemplateAzureQueueScaleRule:AppTemplateAzureQueueScaleRule": {
                "authentications": "authentication",
                "queueLength": "queue_length",
                "queueName": "queue_name"
            },
            "azure:containerapp/AppTemplateAzureQueueScaleRuleAuthentication:AppTemplateAzureQueueScaleRuleAuthentication": {
                "secretName": "secret_name",
                "triggerParameter": "trigger_parameter"
            },
            "azure:containerapp/AppTemplateContainer:AppTemplateContainer": {
                "commands": "command",
                "envs": "env",
                "ephemeralStorage": "ephemeral_storage",
                "livenessProbes": "liveness_probe",
                "readinessProbes": "readiness_probe",
                "startupProbes": "startup_probe",
                "volumeMounts": "volume_mounts"
            },
            "azure:containerapp/AppTemplateContainerEnv:AppTemplateContainerEnv": {
                "secretName": "secret_name"
            },
            "azure:containerapp/AppTemplateContainerLivenessProbe:AppTemplateContainerLivenessProbe": {
                "failureCountThreshold": "failure_count_threshold",
                "headers": "header",
                "initialDelay": "initial_delay",
                "intervalSeconds": "interval_seconds",
                "terminationGracePeriodSeconds": "termination_grace_period_seconds"
            },
            "azure:containerapp/AppTemplateContainerReadinessProbe:AppTemplateContainerReadinessProbe": {
                "failureCountThreshold": "failure_count_threshold",
                "headers": "header",
                "intervalSeconds": "interval_seconds",
                "successCountThreshold": "success_count_threshold"
            },
            "azure:containerapp/AppTemplateContainerStartupProbe:AppTemplateContainerStartupProbe": {
                "failureCountThreshold": "failure_count_threshold",
                "headers": "header",
                "intervalSeconds": "interval_seconds",
                "terminationGracePeriodSeconds": "termination_grace_period_seconds"
            },
            "azure:containerapp/AppTemplateCustomScaleRule:AppTemplateCustomScaleRule": {
                "authentications": "authentication",
                "customRuleType": "custom_rule_type"
            },
            "azure:containerapp/AppTemplateCustomScaleRuleAuthentication:AppTemplateCustomScaleRuleAuthentication": {
                "secretName": "secret_name",
                "triggerParameter": "trigger_parameter"
            },
            "azure:containerapp/AppTemplateHttpScaleRule:AppTemplateHttpScaleRule": {
                "authentications": "authentication",
                "concurrentRequests": "concurrent_requests"
            },
            "azure:containerapp/AppTemplateHttpScaleRuleAuthentication:AppTemplateHttpScaleRuleAuthentication": {
                "secretName": "secret_name",
                "triggerParameter": "trigger_parameter"
            },
            "azure:containerapp/AppTemplateTcpScaleRule:AppTemplateTcpScaleRule": {
                "authentications": "authentication",
                "concurrentRequests": "concurrent_requests"
            },
            "azure:containerapp/AppTemplateTcpScaleRuleAuthentication:AppTemplateTcpScaleRuleAuthentication": {
                "secretName": "secret_name",
                "triggerParameter": "trigger_parameter"
            },
            "azure:containerapp/AppTemplateVolume:AppTemplateVolume": {
                "storageName": "storage_name",
                "storageType": "storage_type"
            },
            "azure:containerapp/EnvironmentDaprComponentMetadata:EnvironmentDaprComponentMetadata": {
                "secretName": "secret_name"
            },
            "azure:containerapp/EnvironmentWorkloadProfile:EnvironmentWorkloadProfile": {
                "maximumCount": "maximum_count",
                "minimumCount": "minimum_count",
                "workloadProfileType": "workload_profile_type"
            },
            "azure:containerapp/app:App": {
                "containerAppEnvironmentId": "container_app_environment_id",
                "customDomainVerificationId": "custom_domain_verification_id",
                "latestRevisionFqdn": "latest_revision_fqdn",
                "latestRevisionName": "latest_revision_name",
                "outboundIpAddresses": "outbound_ip_addresses",
                "registries": "registry",
                "resourceGroupName": "resource_group_name",
                "revisionMode": "revision_mode",
                "secrets": "secret"
            },
            "azure:containerapp/environment:Environment": {
                "daprApplicationInsightsConnectionString": "dapr_application_insights_connection_string",
                "defaultDomain": "default_domain",
                "dockerBridgeCidr": "docker_bridge_cidr",
                "infrastructureSubnetId": "infrastructure_subnet_id",
                "internalLoadBalancerEnabled": "internal_load_balancer_enabled",
                "logAnalyticsWorkspaceId": "log_analytics_workspace_id",
                "platformReservedCidr": "platform_reserved_cidr",
                "platformReservedDnsIpAddress": "platform_reserved_dns_ip_address",
                "resourceGroupName": "resource_group_name",
                "staticIpAddress": "static_ip_address",
                "workloadProfiles": "workload_profile",
                "zoneRedundancyEnabled": "zone_redundancy_enabled"
            },
            "azure:containerapp/environmentCertificate:EnvironmentCertificate": {
                "certificateBlobBase64": "certificate_blob_base64",
                "certificatePassword": "certificate_password",
                "containerAppEnvironmentId": "container_app_environment_id",
                "expirationDate": "expiration_date",
                "issueDate": "issue_date",
                "subjectName": "subject_name"
            },
            "azure:containerapp/environmentDaprComponent:EnvironmentDaprComponent": {
                "componentType": "component_type",
                "containerAppEnvironmentId": "container_app_environment_id",
                "ignoreErrors": "ignore_errors",
                "initTimeout": "init_timeout",
                "metadatas": "metadata",
                "secrets": "secret"
            },
            "azure:containerapp/environmentStorage:EnvironmentStorage": {
                "accessKey": "access_key",
                "accessMode": "access_mode",
                "accountName": "account_name",
                "containerAppEnvironmentId": "container_app_environment_id",
                "shareName": "share_name"
            },
            "azure:containerapp/getApp:getApp": {
                "containerAppEnvironmentId": "container_app_environment_id",
                "customDomainVerificationId": "custom_domain_verification_id",
                "daprs": "dapr",
                "identities": "identity",
                "ingresses": "ingress",
                "latestRevisionFqdn": "latest_revision_fqdn",
                "latestRevisionName": "latest_revision_name",
                "outboundIpAddresses": "outbound_ip_addresses",
                "registries": "registry",
                "resourceGroupName": "resource_group_name",
                "revisionMode": "revision_mode",
                "secrets": "secret",
                "templates": "template"
            },
            "azure:containerapp/getAppDapr:getAppDapr": {
                "appId": "app_id",
                "appPort": "app_port",
                "appProtocol": "app_protocol"
            },
            "azure:containerapp/getAppIdentity:getAppIdentity": {
                "identityIds": "identity_ids",
                "principalId": "principal_id",
                "tenantId": "tenant_id"
            },
            "azure:containerapp/getAppIngress:getAppIngress": {
                "allowInsecureConnections": "allow_insecure_connections",
                "customDomains": "custom_domain",
                "exposedPort": "exposed_port",
                "externalEnabled": "external_enabled",
                "targetPort": "target_port",
                "trafficWeights": "traffic_weight"
            },
            "azure:containerapp/getAppIngressCustomDomain:getAppIngressCustomDomain": {
                "certificateBindingType": "certificate_binding_type",
                "certificateId": "certificate_id"
            },
            "azure:containerapp/getAppIngressTrafficWeight:getAppIngressTrafficWeight": {
                "latestRevision": "latest_revision",
                "revisionSuffix": "revision_suffix"
            },
            "azure:containerapp/getAppRegistry:getAppRegistry": {
                "passwordSecretName": "password_secret_name"
            },
            "azure:containerapp/getAppTemplate:getAppTemplate": {
                "azureQueueScaleRules": "azure_queue_scale_rule",
                "containers": "container",
                "customScaleRules": "custom_scale_rule",
                "httpScaleRules": "http_scale_rule",
                "maxReplicas": "max_replicas",
                "minReplicas": "min_replicas",
                "revisionSuffix": "revision_suffix",
                "tcpScaleRules": "tcp_scale_rule",
                "volumes": "volume"
            },
            "azure:containerapp/getAppTemplateAzureQueueScaleRule:getAppTemplateAzureQueueScaleRule": {
                "authentications": "authentication",
                "queueLength": "queue_length",
                "queueName": "queue_name"
            },
            "azure:containerapp/getAppTemplateAzureQueueScaleRuleAuthentication:getAppTemplateAzureQueueScaleRuleAuthentication": {
                "secretName": "secret_name",
                "triggerParameter": "trigger_parameter"
            },
            "azure:containerapp/getAppTemplateContainer:getAppTemplateContainer": {
                "commands": "command",
                "envs": "env",
                "ephemeralStorage": "ephemeral_storage",
                "livenessProbes": "liveness_probe",
                "readinessProbes": "readiness_probe",
                "startupProbes": "startup_probe",
                "volumeMounts": "volume_mounts"
            },
            "azure:containerapp/getAppTemplateContainerEnv:getAppTemplateContainerEnv": {
                "secretName": "secret_name"
            },
            "azure:containerapp/getAppTemplateContainerLivenessProbe:getAppTemplateContainerLivenessProbe": {
                "failureCountThreshold": "failure_count_threshold",
                "headers": "header",
                "initialDelay": "initial_delay",
                "intervalSeconds": "interval_seconds",
                "terminationGracePeriodSeconds": "termination_grace_period_seconds"
            },
            "azure:containerapp/getAppTemplateContainerReadinessProbe:getAppTemplateContainerReadinessProbe": {
                "failureCountThreshold": "failure_count_threshold",
                "headers": "header",
                "intervalSeconds": "interval_seconds",
                "successCountThreshold": "success_count_threshold"
            },
            "azure:containerapp/getAppTemplateContainerStartupProbe:getAppTemplateContainerStartupProbe": {
                "failureCountThreshold": "failure_count_threshold",
                "headers": "header",
                "intervalSeconds": "interval_seconds",
                "terminationGracePeriodSeconds": "termination_grace_period_seconds"
            },
            "azure:containerapp/getAppTemplateCustomScaleRule:getAppTemplateCustomScaleRule": {
                "authentications": "authentication",
                "customRuleType": "custom_rule_type"
            },
            "azure:containerapp/getAppTemplateCustomScaleRuleAuthentication:getAppTemplateCustomScaleRuleAuthentication": {
                "secretName": "secret_name",
                "triggerParameter": "trigger_parameter"
            },
            "azure:containerapp/getAppTemplateHttpScaleRule:getAppTemplateHttpScaleRule": {
                "authentications": "authentication",
                "concurrentRequests": "concurrent_requests"
            },
            "azure:containerapp/getAppTemplateHttpScaleRuleAuthentication:getAppTemplateHttpScaleRuleAuthentication": {
                "secretName": "secret_name",
                "triggerParameter": "trigger_parameter"
            },
            "azure:containerapp/getAppTemplateTcpScaleRule:getAppTemplateTcpScaleRule": {
                "authentications": "authentication",
                "concurrentRequests": "concurrent_requests"
            },
            "azure:containerapp/getAppTemplateTcpScaleRuleAuthentication:getAppTemplateTcpScaleRuleAuthentication": {
                "secretName": "secret_name",
                "triggerParameter": "trigger_parameter"
            },
            "azure:containerapp/getAppTemplateVolume:getAppTemplateVolume": {
                "storageName": "storage_name",
                "storageType": "storage_type"
            },
            "azure:containerapp/getEnvironment:getEnvironment": {
                "defaultDomain": "default_domain",
                "dockerBridgeCidr": "docker_bridge_cidr",
                "infrastructureSubnetId": "infrastructure_subnet_id",
                "internalLoadBalancerEnabled": "internal_load_balancer_enabled",
                "logAnalyticsWorkspaceName": "log_analytics_workspace_name",
                "platformReservedCidr": "platform_reserved_cidr",
                "platformReservedDnsIpAddress": "platform_reserved_dns_ip_address",
                "resourceGroupName": "resource_group_name",
                "staticIpAddress": "static_ip_address"
            },
            "azure:containerapp/getEnvironmentCertificate:getEnvironmentCertificate": {
                "containerAppEnvironmentId": "container_app_environment_id",
                "expirationDate": "expiration_date",
                "issueDate": "issue_date",
                "subjectName": "subject_name"
            },
            "azure:containerservice/FluxConfigurationBlobStorage:FluxConfigurationBlobStorage": {
                "accountKey": "account_key",
                "containerId": "container_id",
                "localAuthReference": "local_auth_reference",
                "managedIdentity": "managed_identity",
                "sasToken": "sas_token",
                "servicePrincipal": "service_principal",
                "syncIntervalInSeconds": "sync_interval_in_seconds",
                "timeoutInSeconds": "timeout_in_seconds"
            },
            "azure:containerservice/FluxConfigurationBlobStorageManagedIdentity:FluxConfigurationBlobStorageManagedIdentity": {
                "clientId": "client_id"
            },
            "azure:containerservice/FluxConfigurationBlobStorageServicePrincipal:FluxConfigurationBlobStorageServicePrincipal": {
                "clientCertificateBase64": "client_certificate_base64",
                "clientCertificatePassword": "client_certificate_password",
                "clientCertificateSendChain": "client_certificate_send_chain",
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "tenantId": "tenant_id"
            },
            "azure:containerservice/FluxConfigurationBucket:FluxConfigurationBucket": {
                "accessKey": "access_key",
                "bucketName": "bucket_name",
                "localAuthReference": "local_auth_reference",
                "secretKeyBase64": "secret_key_base64",
                "syncIntervalInSeconds": "sync_interval_in_seconds",
                "timeoutInSeconds": "timeout_in_seconds",
                "tlsEnabled": "tls_enabled"
            },
            "azure:containerservice/FluxConfigurationGitRepository:FluxConfigurationGitRepository": {
                "httpsCaCertBase64": "https_ca_cert_base64",
                "httpsKeyBase64": "https_key_base64",
                "httpsUser": "https_user",
                "localAuthReference": "local_auth_reference",
                "referenceType": "reference_type",
                "referenceValue": "reference_value",
                "sshKnownHostsBase64": "ssh_known_hosts_base64",
                "sshPrivateKeyBase64": "ssh_private_key_base64",
                "syncIntervalInSeconds": "sync_interval_in_seconds",
                "timeoutInSeconds": "timeout_in_seconds"
            },
            "azure:containerservice/FluxConfigurationKustomization:FluxConfigurationKustomization": {
                "dependsOns": "depends_on",
                "garbageCollectionEnabled": "garbage_collection_enabled",
                "recreatingEnabled": "recreating_enabled",
                "retryIntervalInSeconds": "retry_interval_in_seconds",
                "syncIntervalInSeconds": "sync_interval_in_seconds",
                "timeoutInSeconds": "timeout_in_seconds"
            },
            "azure:containerservice/GroupContainer:GroupContainer": {
                "cpuLimit": "cpu_limit",
                "environmentVariables": "environment_variables",
                "gpuLimit": "gpu_limit",
                "livenessProbe": "liveness_probe",
                "memoryLimit": "memory_limit",
                "readinessProbe": "readiness_probe",
                "secureEnvironmentVariables": "secure_environment_variables",
                "securities": "security",
                "volumes": "volume"
            },
            "azure:containerservice/GroupContainerLivenessProbe:GroupContainerLivenessProbe": {
                "execs": "exec",
                "failureThreshold": "failure_threshold",
                "httpGets": "http_get",
                "initialDelaySeconds": "initial_delay_seconds",
                "periodSeconds": "period_seconds",
                "successThreshold": "success_threshold",
                "timeoutSeconds": "timeout_seconds"
            },
            "azure:containerservice/GroupContainerLivenessProbeHttpGet:GroupContainerLivenessProbeHttpGet": {
                "httpHeaders": "http_headers"
            },
            "azure:containerservice/GroupContainerReadinessProbe:GroupContainerReadinessProbe": {
                "execs": "exec",
                "failureThreshold": "failure_threshold",
                "httpGets": "http_get",
                "initialDelaySeconds": "initial_delay_seconds",
                "periodSeconds": "period_seconds",
                "successThreshold": "success_threshold",
                "timeoutSeconds": "timeout_seconds"
            },
            "azure:containerservice/GroupContainerReadinessProbeHttpGet:GroupContainerReadinessProbeHttpGet": {
                "httpHeaders": "http_headers"
            },
            "azure:containerservice/GroupContainerSecurity:GroupContainerSecurity": {
                "privilegeEnabled": "privilege_enabled"
            },
            "azure:containerservice/GroupContainerVolume:GroupContainerVolume": {
                "emptyDir": "empty_dir",
                "gitRepo": "git_repo",
                "mountPath": "mount_path",
                "readOnly": "read_only",
                "shareName": "share_name",
                "storageAccountKey": "storage_account_key",
                "storageAccountName": "storage_account_name"
            },
            "azure:containerservice/GroupDiagnostics:GroupDiagnostics": {
                "logAnalytics": "log_analytics"
            },
            "azure:containerservice/GroupDiagnosticsLogAnalytics:GroupDiagnosticsLogAnalytics": {
                "logType": "log_type",
                "workspaceId": "workspace_id",
                "workspaceKey": "workspace_key"
            },
            "azure:containerservice/GroupDnsConfig:GroupDnsConfig": {
                "searchDomains": "search_domains"
            },
            "azure:containerservice/GroupIdentity:GroupIdentity": {
                "identityIds": "identity_ids",
                "principalId": "principal_id",
                "tenantId": "tenant_id"
            },
            "azure:containerservice/GroupImageRegistryCredential:GroupImageRegistryCredential": {
                "userAssignedIdentityId": "user_assigned_identity_id"
            },
            "azure:containerservice/GroupInitContainer:GroupInitContainer": {
                "environmentVariables": "environment_variables",
                "secureEnvironmentVariables": "secure_environment_variables",
                "securities": "security",
                "volumes": "volume"
            },
            "azure:containerservice/GroupInitContainerSecurity:GroupInitContainerSecurity": {
                "privilegeEnabled": "privilege_enabled"
            },
            "azure:containerservice/GroupInitContainerVolume:GroupInitContainerVolume": {
                "emptyDir": "empty_dir",
                "gitRepo": "git_repo",
                "mountPath": "mount_path",
                "readOnly": "read_only",
                "shareName": "share_name",
                "storageAccountKey": "storage_account_key",
                "storageAccountName": "storage_account_name"
            },
            "azure:containerservice/KubernetesClusterAciConnectorLinux:KubernetesClusterAciConnectorLinux": {
                "connectorIdentities": "connector_identity",
                "subnetName": "subnet_name"
            },
            "azure:containerservice/KubernetesClusterAciConnectorLinuxConnectorIdentity:KubernetesClusterAciConnectorLinuxConnectorIdentity": {
                "clientId": "client_id",
                "objectId": "object_id",
                "userAssignedIdentityId": "user_assigned_identity_id"
            },
            "azure:containerservice/KubernetesClusterApiServerAccessProfile:KubernetesClusterApiServerAccessProfile": {
                "authorizedIpRanges": "authorized_ip_ranges",
                "subnetId": "subnet_id",
                "vnetIntegrationEnabled": "vnet_integration_enabled"
            },
            "azure:containerservice/KubernetesClusterAutoScalerProfile:KubernetesClusterAutoScalerProfile": {
                "balanceSimilarNodeGroups": "balance_similar_node_groups",
                "emptyBulkDeleteMax": "empty_bulk_delete_max",
                "maxGracefulTerminationSec": "max_graceful_termination_sec",
                "maxNodeProvisioningTime": "max_node_provisioning_time",
                "maxUnreadyNodes": "max_unready_nodes",
                "maxUnreadyPercentage": "max_unready_percentage",
                "newPodScaleUpDelay": "new_pod_scale_up_delay",
                "scaleDownDelayAfterAdd": "scale_down_delay_after_add",
                "scaleDownDelayAfterDelete": "scale_down_delay_after_delete",
                "scaleDownDelayAfterFailure": "scale_down_delay_after_failure",
                "scaleDownUnneeded": "scale_down_unneeded",
                "scaleDownUnready": "scale_down_unready",
                "scaleDownUtilizationThreshold": "scale_down_utilization_threshold",
                "scanInterval": "scan_interval",
                "skipNodesWithLocalStorage": "skip_nodes_with_local_storage",
                "skipNodesWithSystemPods": "skip_nodes_with_system_pods"
            },
            "azure:containerservice/KubernetesClusterAzureActiveDirectoryRoleBasedAccessControl:KubernetesClusterAzureActiveDirectoryRoleBasedAccessControl": {
                "adminGroupObjectIds": "admin_group_object_ids",
                "azureRbacEnabled": "azure_rbac_enabled",
                "clientAppId": "client_app_id",
                "serverAppId": "server_app_id",
                "serverAppSecret": "server_app_secret",
                "tenantId": "tenant_id"
            },
            "azure:containerservice/KubernetesClusterConfidentialComputing:KubernetesClusterConfidentialComputing": {
                "sgxQuoteHelperEnabled": "sgx_quote_helper_enabled"
            },
            "azure:containerservice/KubernetesClusterDefaultNodePool:KubernetesClusterDefaultNodePool": {
                "capacityReservationGroupId": "capacity_reservation_group_id",
                "customCaTrustEnabled": "custom_ca_trust_enabled",
                "enableAutoScaling": "enable_auto_scaling",
                "enableHostEncryption": "enable_host_encryption",
                "enableNodePublicIp": "enable_node_public_ip",
                "fipsEnabled": "fips_enabled",
                "gpuInstance": "gpu_instance",
                "hostGroupId": "host_group_id",
                "kubeletConfig": "kubelet_config",
                "kubeletDiskType": "kubelet_disk_type",
                "linuxOsConfig": "linux_os_config",
                "maxCount": "max_count",
                "maxPods": "max_pods",
                "messageOfTheDay": "message_of_the_day",
                "minCount": "min_count",
                "nodeCount": "node_count",
                "nodeLabels": "node_labels",
                "nodeNetworkProfile": "node_network_profile",
                "nodePublicIpPrefixId": "node_public_ip_prefix_id",
                "nodeTaints": "node_taints",
                "onlyCriticalAddonsEnabled": "only_critical_addons_enabled",
                "orchestratorVersion": "orchestrator_version",
                "osDiskSizeGb": "os_disk_size_gb",
                "osDiskType": "os_disk_type",
                "osSku": "os_sku",
                "podSubnetId": "pod_subnet_id",
                "proximityPlacementGroupId": "proximity_placement_group_id",
                "scaleDownMode": "scale_down_mode",
                "snapshotId": "snapshot_id",
                "temporaryNameForRotation": "temporary_name_for_rotation",
                "ultraSsdEnabled": "ultra_ssd_enabled",
                "upgradeSettings": "upgrade_settings",
                "vmSize": "vm_size",
                "vnetSubnetId": "vnet_subnet_id",
                "workloadRuntime": "workload_runtime"
            },
            "azure:containerservice/KubernetesClusterDefaultNodePoolKubeletConfig:KubernetesClusterDefaultNodePoolKubeletConfig": {
                "allowedUnsafeSysctls": "allowed_unsafe_sysctls",
                "containerLogMaxLine": "container_log_max_line",
                "containerLogMaxSizeMb": "container_log_max_size_mb",
                "cpuCfsQuotaEnabled": "cpu_cfs_quota_enabled",
                "cpuCfsQuotaPeriod": "cpu_cfs_quota_period",
                "cpuManagerPolicy": "cpu_manager_policy",
                "imageGcHighThreshold": "image_gc_high_threshold",
                "imageGcLowThreshold": "image_gc_low_threshold",
                "podMaxPid": "pod_max_pid",
                "topologyManagerPolicy": "topology_manager_policy"
            },
            "azure:containerservice/KubernetesClusterDefaultNodePoolLinuxOsConfig:KubernetesClusterDefaultNodePoolLinuxOsConfig": {
                "swapFileSizeMb": "swap_file_size_mb",
                "sysctlConfig": "sysctl_config",
                "transparentHugePageDefrag": "transparent_huge_page_defrag",
                "transparentHugePageEnabled": "transparent_huge_page_enabled"
            },
            "azure:containerservice/KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfig:KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfig": {
                "fsAioMaxNr": "fs_aio_max_nr",
                "fsFileMax": "fs_file_max",
                "fsInotifyMaxUserWatches": "fs_inotify_max_user_watches",
                "fsNrOpen": "fs_nr_open",
                "kernelThreadsMax": "kernel_threads_max",
                "netCoreNetdevMaxBacklog": "net_core_netdev_max_backlog",
                "netCoreOptmemMax": "net_core_optmem_max",
                "netCoreRmemDefault": "net_core_rmem_default",
                "netCoreRmemMax": "net_core_rmem_max",
                "netCoreSomaxconn": "net_core_somaxconn",
                "netCoreWmemDefault": "net_core_wmem_default",
                "netCoreWmemMax": "net_core_wmem_max",
                "netIpv4IpLocalPortRangeMax": "net_ipv4_ip_local_port_range_max",
                "netIpv4IpLocalPortRangeMin": "net_ipv4_ip_local_port_range_min",
                "netIpv4NeighDefaultGcThresh1": "net_ipv4_neigh_default_gc_thresh1",
                "netIpv4NeighDefaultGcThresh2": "net_ipv4_neigh_default_gc_thresh2",
                "netIpv4NeighDefaultGcThresh3": "net_ipv4_neigh_default_gc_thresh3",
                "netIpv4TcpFinTimeout": "net_ipv4_tcp_fin_timeout",
                "netIpv4TcpKeepaliveIntvl": "net_ipv4_tcp_keepalive_intvl",
                "netIpv4TcpKeepaliveProbes": "net_ipv4_tcp_keepalive_probes",
                "netIpv4TcpKeepaliveTime": "net_ipv4_tcp_keepalive_time",
                "netIpv4TcpMaxSynBacklog": "net_ipv4_tcp_max_syn_backlog",
                "netIpv4TcpMaxTwBuckets": "net_ipv4_tcp_max_tw_buckets",
                "netIpv4TcpTwReuse": "net_ipv4_tcp_tw_reuse",
                "netNetfilterNfConntrackBuckets": "net_netfilter_nf_conntrack_buckets",
                "netNetfilterNfConntrackMax": "net_netfilter_nf_conntrack_max",
                "vmMaxMapCount": "vm_max_map_count",
                "vmSwappiness": "vm_swappiness",
                "vmVfsCachePressure": "vm_vfs_cache_pressure"
            },
            "azure:containerservice/KubernetesClusterDefaultNodePoolNodeNetworkProfile:KubernetesClusterDefaultNodePoolNodeNetworkProfile": {
                "nodePublicIpTags": "node_public_ip_tags"
            },
            "azure:containerservice/KubernetesClusterDefaultNodePoolUpgradeSettings:KubernetesClusterDefaultNodePoolUpgradeSettings": {
                "maxSurge": "max_surge"
            },
            "azure:containerservice/KubernetesClusterExtensionAksAssignedIdentity:KubernetesClusterExtensionAksAssignedIdentity": {
                "principalId": "principal_id",
                "tenantId": "tenant_id"
            },
            "azure:containerservice/KubernetesClusterExtensionPlan:KubernetesClusterExtensionPlan": {
                "promotionCode": "promotion_code"
            },
            "azure:containerservice/KubernetesClusterHttpProxyConfig:KubernetesClusterHttpProxyConfig": {
                "httpProxy": "http_proxy",
                "httpsProxy": "https_proxy",
                "noProxies": "no_proxy",
                "trustedCa": "trusted_ca"
            },
            "azure:containerservice/KubernetesClusterIdentity:KubernetesClusterIdentity": {
                "identityIds": "identity_ids",
                "principalId": "principal_id",
                "tenantId": "tenant_id"
            },
            "azure:containerservice/KubernetesClusterIngressApplicationGateway:KubernetesClusterIngressApplicationGateway": {
                "effectiveGatewayId": "effective_gateway_id",
                "gatewayId": "gateway_id",
                "gatewayName": "gateway_name",
                "ingressApplicationGatewayIdentities": "ingress_application_gateway_identity",
                "subnetCidr": "subnet_cidr",
                "subnetId": "subnet_id"
            },
            "azure:containerservice/KubernetesClusterIngressApplicationGatewayIngressApplicationGatewayIdentity:KubernetesClusterIngressApplicationGatewayIngressApplicationGatewayIdentity": {
                "clientId": "client_id",
                "objectId": "object_id",
                "userAssignedIdentityId": "user_assigned_identity_id"
            },
            "azure:containerservice/KubernetesClusterKeyManagementService:KubernetesClusterKeyManagementService": {
                "keyVaultKeyId": "key_vault_key_id",
                "keyVaultNetworkAccess": "key_vault_network_access"
            },
            "azure:containerservice/KubernetesClusterKeyVaultSecretsProvider:KubernetesClusterKeyVaultSecretsProvider": {
                "secretIdentities": "secret_identity",
                "secretRotationEnabled": "secret_rotation_enabled",
                "secretRotationInterval": "secret_rotation_interval"
            },
            "azure:containerservice/KubernetesClusterKeyVaultSecretsProviderSecretIdentity:KubernetesClusterKeyVaultSecretsProviderSecretIdentity": {
                "clientId": "client_id",
                "objectId": "object_id",
                "userAssignedIdentityId": "user_assigned_identity_id"
            },
            "azure:containerservice/KubernetesClusterKubeAdminConfig:KubernetesClusterKubeAdminConfig": {
                "clientCertificate": "client_certificate",
                "clientKey": "client_key",
                "clusterCaCertificate": "cluster_ca_certificate"
            },
            "azure:containerservice/KubernetesClusterKubeConfig:KubernetesClusterKubeConfig": {
                "clientCertificate": "client_certificate",
                "clientKey": "client_key",
                "clusterCaCertificate": "cluster_ca_certificate"
            },
            "azure:containerservice/KubernetesClusterKubeletIdentity:KubernetesClusterKubeletIdentity": {
                "clientId": "client_id",
                "objectId": "object_id",
                "userAssignedIdentityId": "user_assigned_identity_id"
            },
            "azure:containerservice/KubernetesClusterLinuxProfile:KubernetesClusterLinuxProfile": {
                "adminUsername": "admin_username",
                "sshKey": "ssh_key"
            },
            "azure:containerservice/KubernetesClusterLinuxProfileSshKey:KubernetesClusterLinuxProfileSshKey": {
                "keyData": "key_data"
            },
            "azure:containerservice/KubernetesClusterMaintenanceWindow:KubernetesClusterMaintenanceWindow": {
                "alloweds": "allowed",
                "notAlloweds": "not_allowed"
            },
            "azure:containerservice/KubernetesClusterMaintenanceWindowAutoUpgrade:KubernetesClusterMaintenanceWindowAutoUpgrade": {
                "dayOfMonth": "day_of_month",
                "dayOfWeek": "day_of_week",
                "notAlloweds": "not_allowed",
                "startDate": "start_date",
                "startTime": "start_time",
                "utcOffset": "utc_offset",
                "weekIndex": "week_index"
            },
            "azure:containerservice/KubernetesClusterMaintenanceWindowNodeOs:KubernetesClusterMaintenanceWindowNodeOs": {
                "dayOfMonth": "day_of_month",
                "dayOfWeek": "day_of_week",
                "notAlloweds": "not_allowed",
                "startDate": "start_date",
                "startTime": "start_time",
                "utcOffset": "utc_offset",
                "weekIndex": "week_index"
            },
            "azure:containerservice/KubernetesClusterMicrosoftDefender:KubernetesClusterMicrosoftDefender": {
                "logAnalyticsWorkspaceId": "log_analytics_workspace_id"
            },
            "azure:containerservice/KubernetesClusterMonitorMetrics:KubernetesClusterMonitorMetrics": {
                "annotationsAllowed": "annotations_allowed",
                "labelsAllowed": "labels_allowed"
            },
            "azure:containerservice/KubernetesClusterNetworkProfile:KubernetesClusterNetworkProfile": {
                "dnsServiceIp": "dns_service_ip",
                "dockerBridgeCidr": "docker_bridge_cidr",
                "ebpfDataPlane": "ebpf_data_plane",
                "ipVersions": "ip_versions",
                "loadBalancerProfile": "load_balancer_profile",
                "loadBalancerSku": "load_balancer_sku",
                "natGatewayProfile": "nat_gateway_profile",
                "networkMode": "network_mode",
                "networkPlugin": "network_plugin",
                "networkPluginMode": "network_plugin_mode",
                "networkPolicy": "network_policy",
                "outboundType": "outbound_type",
                "podCidr": "pod_cidr",
                "podCidrs": "pod_cidrs",
                "serviceCidr": "service_cidr",
                "serviceCidrs": "service_cidrs"
            },
            "azure:containerservice/KubernetesClusterNetworkProfileLoadBalancerProfile:KubernetesClusterNetworkProfileLoadBalancerProfile": {
                "effectiveOutboundIps": "effective_outbound_ips",
                "idleTimeoutInMinutes": "idle_timeout_in_minutes",
                "managedOutboundIpCount": "managed_outbound_ip_count",
                "managedOutboundIpv6Count": "managed_outbound_ipv6_count",
                "outboundIpAddressIds": "outbound_ip_address_ids",
                "outboundIpPrefixIds": "outbound_ip_prefix_ids",
                "outboundPortsAllocated": "outbound_ports_allocated"
            },
            "azure:containerservice/KubernetesClusterNetworkProfileNatGatewayProfile:KubernetesClusterNetworkProfileNatGatewayProfile": {
                "effectiveOutboundIps": "effective_outbound_ips",
                "idleTimeoutInMinutes": "idle_timeout_in_minutes",
                "managedOutboundIpCount": "managed_outbound_ip_count"
            },
            "azure:containerservice/KubernetesClusterNodePoolKubeletConfig:KubernetesClusterNodePoolKubeletConfig": {
                "allowedUnsafeSysctls": "allowed_unsafe_sysctls",
                "containerLogMaxLine": "container_log_max_line",
                "containerLogMaxSizeMb": "container_log_max_size_mb",
                "cpuCfsQuotaEnabled": "cpu_cfs_quota_enabled",
                "cpuCfsQuotaPeriod": "cpu_cfs_quota_period",
                "cpuManagerPolicy": "cpu_manager_policy",
                "imageGcHighThreshold": "image_gc_high_threshold",
                "imageGcLowThreshold": "image_gc_low_threshold",
                "podMaxPid": "pod_max_pid",
                "topologyManagerPolicy": "topology_manager_policy"
            },
            "azure:containerservice/KubernetesClusterNodePoolLinuxOsConfig:KubernetesClusterNodePoolLinuxOsConfig": {
                "swapFileSizeMb": "swap_file_size_mb",
                "sysctlConfig": "sysctl_config",
                "transparentHugePageDefrag": "transparent_huge_page_defrag",
                "transparentHugePageEnabled": "transparent_huge_page_enabled"
            },
            "azure:containerservice/KubernetesClusterNodePoolLinuxOsConfigSysctlConfig:KubernetesClusterNodePoolLinuxOsConfigSysctlConfig": {
                "fsAioMaxNr": "fs_aio_max_nr",
                "fsFileMax": "fs_file_max",
                "fsInotifyMaxUserWatches": "fs_inotify_max_user_watches",
                "fsNrOpen": "fs_nr_open",
                "kernelThreadsMax": "kernel_threads_max",
                "netCoreNetdevMaxBacklog": "net_core_netdev_max_backlog",
                "netCoreOptmemMax": "net_core_optmem_max",
                "netCoreRmemDefault": "net_core_rmem_default",
                "netCoreRmemMax": "net_core_rmem_max",
                "netCoreSomaxconn": "net_core_somaxconn",
                "netCoreWmemDefault": "net_core_wmem_default",
                "netCoreWmemMax": "net_core_wmem_max",
                "netIpv4IpLocalPortRangeMax": "net_ipv4_ip_local_port_range_max",
                "netIpv4IpLocalPortRangeMin": "net_ipv4_ip_local_port_range_min",
                "netIpv4NeighDefaultGcThresh1": "net_ipv4_neigh_default_gc_thresh1",
                "netIpv4NeighDefaultGcThresh2": "net_ipv4_neigh_default_gc_thresh2",
                "netIpv4NeighDefaultGcThresh3": "net_ipv4_neigh_default_gc_thresh3",
                "netIpv4TcpFinTimeout": "net_ipv4_tcp_fin_timeout",
                "netIpv4TcpKeepaliveIntvl": "net_ipv4_tcp_keepalive_intvl",
                "netIpv4TcpKeepaliveProbes": "net_ipv4_tcp_keepalive_probes",
                "netIpv4TcpKeepaliveTime": "net_ipv4_tcp_keepalive_time",
                "netIpv4TcpMaxSynBacklog": "net_ipv4_tcp_max_syn_backlog",
                "netIpv4TcpMaxTwBuckets": "net_ipv4_tcp_max_tw_buckets",
                "netIpv4TcpTwReuse": "net_ipv4_tcp_tw_reuse",
                "netNetfilterNfConntrackBuckets": "net_netfilter_nf_conntrack_buckets",
                "netNetfilterNfConntrackMax": "net_netfilter_nf_conntrack_max",
                "vmMaxMapCount": "vm_max_map_count",
                "vmSwappiness": "vm_swappiness",
                "vmVfsCachePressure": "vm_vfs_cache_pressure"
            },
            "azure:containerservice/KubernetesClusterNodePoolNodeNetworkProfile:KubernetesClusterNodePoolNodeNetworkProfile": {
                "nodePublicIpTags": "node_public_ip_tags"
            },
            "azure:containerservice/KubernetesClusterNodePoolUpgradeSettings:KubernetesClusterNodePoolUpgradeSettings": {
                "maxSurge": "max_surge"
            },
            "azure:containerservice/KubernetesClusterNodePoolWindowsProfile:KubernetesClusterNodePoolWindowsProfile": {
                "outboundNatEnabled": "outbound_nat_enabled"
            },
            "azure:containerservice/KubernetesClusterOmsAgent:KubernetesClusterOmsAgent": {
                "logAnalyticsWorkspaceId": "log_analytics_workspace_id",
                "msiAuthForMonitoringEnabled": "msi_auth_for_monitoring_enabled",
                "omsAgentIdentities": "oms_agent_identity"
            },
            "azure:containerservice/KubernetesClusterOmsAgentOmsAgentIdentity:KubernetesClusterOmsAgentOmsAgentIdentity": {
                "clientId": "client_id",
                "objectId": "object_id",
                "userAssignedIdentityId": "user_assigned_identity_id"
            },
            "azure:containerservice/KubernetesClusterServiceMeshProfile:KubernetesClusterServiceMeshProfile": {
                "externalIngressGatewayEnabled": "external_ingress_gateway_enabled",
                "internalIngressGatewayEnabled": "internal_ingress_gateway_enabled"
            },
            "azure:containerservice/KubernetesClusterServicePrincipal:KubernetesClusterServicePrincipal": {
                "clientId": "client_id",
                "clientSecret": "client_secret"
            },
            "azure:containerservice/KubernetesClusterStorageProfile:KubernetesClusterStorageProfile": {
                "blobDriverEnabled": "blob_driver_enabled",
                "diskDriverEnabled": "disk_driver_enabled",
                "diskDriverVersion": "disk_driver_version",
                "fileDriverEnabled": "file_driver_enabled",
                "snapshotControllerEnabled": "snapshot_controller_enabled"
            },
            "azure:containerservice/KubernetesClusterWebAppRouting:KubernetesClusterWebAppRouting": {
                "dnsZoneId": "dns_zone_id",
                "webAppRoutingIdentities": "web_app_routing_identity"
            },
            "azure:containerservice/KubernetesClusterWebAppRoutingWebAppRoutingIdentity:KubernetesClusterWebAppRoutingWebAppRoutingIdentity": {
                "clientId": "client_id",
                "objectId": "object_id",
                "userAssignedIdentityId": "user_assigned_identity_id"
            },
            "azure:containerservice/KubernetesClusterWindowsProfile:KubernetesClusterWindowsProfile": {
                "adminPassword": "admin_password",
                "adminUsername": "admin_username"
            },
            "azure:containerservice/KubernetesClusterWindowsProfileGmsa:KubernetesClusterWindowsProfileGmsa": {
                "dnsServer": "dns_server",
                "rootDomain": "root_domain"
            },
            "azure:containerservice/KubernetesClusterWorkloadAutoscalerProfile:KubernetesClusterWorkloadAutoscalerProfile": {
                "kedaEnabled": "keda_enabled",
                "verticalPodAutoscalerControlledValues": "vertical_pod_autoscaler_controlled_values",
                "verticalPodAutoscalerEnabled": "vertical_pod_autoscaler_enabled",
                "verticalPodAutoscalerUpdateMode": "vertical_pod_autoscaler_update_mode"
            },
            "azure:containerservice/KubernetesFleetManagerHubProfile:KubernetesFleetManagerHubProfile": {
                "dnsPrefix": "dns_prefix",
                "kubernetesVersion": "kubernetes_version"
            },
            "azure:containerservice/RegistryEncryption:RegistryEncryption": {
                "identityClientId": "identity_client_id",
                "keyVaultKeyId": "key_vault_key_id"
            },
            "azure:containerservice/RegistryGeoreplication:RegistryGeoreplication": {
                "regionalEndpointEnabled": "regional_endpoint_enabled",
                "zoneRedundancyEnabled": "zone_redundancy_enabled"
            },
            "azure:containerservice/RegistryIdentity:RegistryIdentity": {
                "identityIds": "identity_ids",
                "principalId": "principal_id",
                "tenantId": "tenant_id"
            },
            "azure:containerservice/RegistryNetworkRuleSet:RegistryNetworkRuleSet": {
                "defaultAction": "default_action",
                "ipRules": "ip_rule",
                "virtualNetworks": "virtual_network"
            },
            "azure:containerservice/RegistryNetworkRuleSetIpRule:RegistryNetworkRuleSetIpRule": {
                "ipRange": "ip_range"
            },
            "azure:containerservice/RegistryNetworkRuleSetVirtualNetwork:RegistryNetworkRuleSetVirtualNetwork": {
                "subnetId": "subnet_id"
            },
            "azure:containerservice/RegistryTaskBaseImageTrigger:RegistryTaskBaseImageTrigger": {
                "updateTriggerEndpoint": "update_trigger_endpoint",
                "updateTriggerPayloadType": "update_trigger_payload_type"
            },
            "azure:containerservice/RegistryTaskDockerStep:RegistryTaskDockerStep": {
                "cacheEnabled": "cache_enabled",
                "contextAccessToken": "context_access_token",
                "contextPath": "context_path",
                "dockerfilePath": "dockerfile_path",
                "imageNames": "image_names",
                "pushEnabled": "push_enabled",
                "secretArguments": "secret_arguments"
            },
            "azure:containerservice/RegistryTaskEncodedStep:RegistryTaskEncodedStep": {
                "contextAccessToken": "context_access_token",
                "contextPath": "context_path",
                "secretValues": "secret_values",
                "taskContent": "task_content",
                "valueContent": "value_content"
            },
            "azure:containerservice/RegistryTaskFileStep:RegistryTaskFileStep": {
                "contextAccessToken": "context_access_token",
                "contextPath": "context_path",
                "secretValues": "secret_values",
                "taskFilePath": "task_file_path",
                "valueFilePath": "value_file_path"
            },
            "azure:containerservice/RegistryTaskIdentity:RegistryTaskIdentity": {
                "identityIds": "identity_ids",
                "principalId": "principal_id",
                "tenantId": "tenant_id"
            },
            "azure:containerservice/RegistryTaskRegistryCredential:RegistryTaskRegistryCredential": {
                "customs": "custom"
            },
            "azure:containerservice/RegistryTaskRegistryCredentialCustom:RegistryTaskRegistryCredentialCustom": {
                "loginServer": "login_server"
            },
            "azure:containerservice/RegistryTaskRegistryCredentialSource:RegistryTaskRegistryCredentialSource": {
                "loginMode": "login_mode"
            },
            "azure:containerservice/RegistryTaskSourceTrigger:RegistryTaskSourceTrigger": {
                "repositoryUrl": "repository_url",
                "sourceType": "source_type"
            },
            "azure:containerservice/RegistryTaskSourceTriggerAuthentication:RegistryTaskSourceTriggerAuthentication": {
                "expireInSeconds": "expire_in_seconds",
                "refreshToken": "refresh_token",
                "tokenType": "token_type"
            },
            "azure:containerservice/clusterTrustedAccessRoleBinding:ClusterTrustedAccessRoleBinding": {
                "kubernetesClusterId": "kubernetes_cluster_id",
                "sourceResourceId": "source_resource_id"
            },
            "azure:containerservice/connectedRegistry:ConnectedRegistry": {
                "auditLogEnabled": "audit_log_enabled",
                "clientTokenIds": "client_token_ids",
                "containerRegistryId": "container_registry_id",
                "logLevel": "log_level",
                "notifications": "notification",
                "parentRegistryId": "parent_registry_id",
                "syncMessageTtl": "sync_message_ttl",
                "syncSchedule": "sync_schedule",
                "syncTokenId": "sync_token_id",
                "syncWindow": "sync_window"
            },
            "azure:containerservice/fluxConfiguration:FluxConfiguration": {
                "blobStorage": "blob_storage",
                "clusterId": "cluster_id",
                "continuousReconciliationEnabled": "continuous_reconciliation_enabled",
                "gitRepository": "git_repository"
            },
            "azure:containerservice/getClusterNodePool:getClusterNodePool": {
                "enableAutoScaling": "enable_auto_scaling",
                "enableNodePublicIp": "enable_node_public_ip",
                "evictionPolicy": "eviction_policy",
                "kubernetesClusterName": "kubernetes_cluster_name",
                "maxCount": "max_count",
                "maxPods": "max_pods",
                "minCount": "min_count",
                "nodeCount": "node_count",
                "nodeLabels": "node_labels",
                "nodePublicIpPrefixId": "node_public_ip_prefix_id",
                "nodeTaints": "node_taints",
                "orchestratorVersion": "orchestrator_version",
                "osDiskSizeGb": "os_disk_size_gb",
                "osDiskType": "os_disk_type",
                "osType": "os_type",
                "proximityPlacementGroupId": "proximity_placement_group_id",
                "resourceGroupName": "resource_group_name",
                "spotMaxPrice": "spot_max_price",
                "upgradeSettings": "upgrade_settings",
                "vmSize": "vm_size",
                "vnetSubnetId": "vnet_subnet_id"
            },
            "azure:containerservice/getClusterNodePoolUpgradeSetting:getClusterNodePoolUpgradeSetting": {
                "maxSurge": "max_surge"
            },
            "azure:containerservice/getGroup:getGroup": {
                "identities": "identity",
                "ipAddress": "ip_address",
                "resourceGroupName": "resource_group_name",
                "subnetIds": "subnet_ids"
            },
            "azure:containerservice/getGroupIdentity:getGroupIdentity": {
                "identityIds": "identity_ids",
                "principalId": "principal_id",
                "tenantId": "tenant_id"
            },
            "azure:containerservice/getKubernetesCluster:getKubernetesCluster": {
                "aciConnectorLinuxes": "aci_connector_linux",
                "agentPoolProfiles": "agent_pool_profile",
                "apiServerAuthorizedIpRanges": "api_server_authorized_ip_ranges",
                "azureActiveDirectoryRoleBasedAccessControls": "azure_active_directory_role_based_access_control",
                "azurePolicyEnabled": "azure_policy_enabled",
                "currentKubernetesVersion": "current_kubernetes_version",
                "customCaTrustCertificatesBase64s": "custom_ca_trust_certificates_base64",
                "diskEncryptionSetId": "disk_encryption_set_id",
                "dnsPrefix": "dns_prefix",
                "httpApplicationRoutingEnabled": "http_application_routing_enabled",
                "httpApplicationRoutingZoneName": "http_application_routing_zone_name",
                "identities": "identity",
                "ingressApplicationGateways": "ingress_application_gateway",
                "keyManagementServices": "key_management_service",
                "keyVaultSecretsProviders": "key_vault_secrets_provider",
                "kubeAdminConfigRaw": "kube_admin_config_raw",
                "kubeAdminConfigs": "kube_admin_config",
                "kubeConfigRaw": "kube_config_raw",
                "kubeConfigs": "kube_config",
                "kubeletIdentities": "kubelet_identity",
                "kubernetesVersion": "kubernetes_version",
                "linuxProfiles": "linux_profile",
                "microsoftDefenders": "microsoft_defender",
                "networkProfiles": "network_profile",
                "nodeResourceGroup": "node_resource_group",
                "nodeResourceGroupId": "node_resource_group_id",
                "oidcIssuerEnabled": "oidc_issuer_enabled",
                "oidcIssuerUrl": "oidc_issuer_url",
                "omsAgents": "oms_agent",
                "openServiceMeshEnabled": "open_service_mesh_enabled",
                "privateClusterEnabled": "private_cluster_enabled",
                "privateFqdn": "private_fqdn",
                "resourceGroupName": "resource_group_name",
                "roleBasedAccessControlEnabled": "role_based_access_control_enabled",
                "serviceMeshProfiles": "service_mesh_profile",
                "servicePrincipals": "service_principal",
                "storageProfiles": "storage_profile",
                "windowsProfiles": "windows_profile"
            },
            "azure:containerservice/getKubernetesClusterAciConnectorLinux:getKubernetesClusterAciConnectorLinux": {
                "subnetName": "subnet_name"
            },
            "azure:containerservice/getKubernetesClusterAgentPoolProfile:getKubernetesClusterAgentPoolProfile": {
                "enableAutoScaling": "enable_auto_scaling",
                "enableNodePublicIp": "enable_node_public_ip",
                "maxCount": "max_count",
                "maxPods": "max_pods",
                "minCount": "min_count",
                "nodeLabels": "node_labels",
                "nodePublicIpPrefixId": "node_public_ip_prefix_id",
                "nodeTaints": "node_taints",
                "orchestratorVersion": "orchestrator_version",
                "osDiskSizeGb": "os_disk_size_gb",
                "osType": "os_type",
                "upgradeSettings": "upgrade_settings",
                "vmSize": "vm_size",
                "vnetSubnetId": "vnet_subnet_id"
            },
            "azure:containerservice/getKubernetesClusterAgentPoolProfileUpgradeSetting:getKubernetesClusterAgentPoolProfileUpgradeSetting": {
                "maxSurge": "max_surge"
            },
            "azure:containerservice/getKubernetesClusterAzureActiveDirectoryRoleBasedAccessControl:getKubernetesClusterAzureActiveDirectoryRoleBasedAccessControl": {
                "adminGroupObjectIds": "admin_group_object_ids",
                "azureRbacEnabled": "azure_rbac_enabled",
                "clientAppId": "client_app_id",
                "serverAppId": "server_app_id",
                "tenantId": "tenant_id"
            },
            "azure:containerservice/getKubernetesClusterIdentity:getKubernetesClusterIdentity": {
                "identityIds": "identity_ids",
                "principalId": "principal_id",
                "tenantId": "tenant_id"
            },
            "azure:containerservice/getKubernetesClusterIngressApplicationGateway:getKubernetesClusterIngressApplicationGateway": {
                "effectiveGatewayId": "effective_gateway_id",
                "gatewayId": "gateway_id",
                "gatewayName": "gateway_name",
                "ingressApplicationGatewayIdentities": "ingress_application_gateway_identity",
                "subnetCidr": "subnet_cidr",
                "subnetId": "subnet_id"
            },
            "azure:containerservice/getKubernetesClusterIngressApplicationGatewayIngressApplicationGatewayIdentity:getKubernetesClusterIngressApplicationGatewayIngressApplicationGatewayIdentity": {
                "clientId": "client_id",
                "objectId": "object_id",
                "userAssignedIdentityId": "user_assigned_identity_id"
            },
            "azure:containerservice/getKubernetesClusterKeyManagementService:getKubernetesClusterKeyManagementService": {
                "keyVaultKeyId": "key_vault_key_id",
                "keyVaultNetworkAccess": "key_vault_network_access"
            },
            "azure:containerservice/getKubernetesClusterKeyVaultSecretsProvider:getKubernetesClusterKeyVaultSecretsProvider": {
                "secretIdentities": "secret_identity",
                "secretRotationEnabled": "secret_rotation_enabled",
                "secretRotationInterval": "secret_rotation_interval"
            },
            "azure:containerservice/getKubernetesClusterKeyVaultSecretsProviderSecretIdentity:getKubernetesClusterKeyVaultSecretsProviderSecretIdentity": {
                "clientId": "client_id",
                "objectId": "object_id",
                "userAssignedIdentityId": "user_assigned_identity_id"
            },
            "azure:containerservice/getKubernetesClusterKubeAdminConfig:getKubernetesClusterKubeAdminConfig": {
                "clientCertificate": "client_certificate",
                "clientKey": "client_key",
                "clusterCaCertificate": "cluster_ca_certificate"
            },
            "azure:containerservice/getKubernetesClusterKubeConfig:getKubernetesClusterKubeConfig": {
                "clientCertificate": "client_certificate",
                "clientKey": "client_key",
                "clusterCaCertificate": "cluster_ca_certificate"
            },
            "azure:containerservice/getKubernetesClusterKubeletIdentity:getKubernetesClusterKubeletIdentity": {
                "clientId": "client_id",
                "objectId": "object_id",
                "userAssignedIdentityId": "user_assigned_identity_id"
            },
            "azure:containerservice/getKubernetesClusterLinuxProfile:getKubernetesClusterLinuxProfile": {
                "adminUsername": "admin_username",
                "sshKeys": "ssh_key"
            },
            "azure:containerservice/getKubernetesClusterLinuxProfileSshKey:getKubernetesClusterLinuxProfileSshKey": {
                "keyData": "key_data"
            },
            "azure:containerservice/getKubernetesClusterMicrosoftDefender:getKubernetesClusterMicrosoftDefender": {
                "logAnalyticsWorkspaceId": "log_analytics_workspace_id"
            },
            "azure:containerservice/getKubernetesClusterNetworkProfile:getKubernetesClusterNetworkProfile": {
                "dnsServiceIp": "dns_service_ip",
                "dockerBridgeCidr": "docker_bridge_cidr",
                "loadBalancerSku": "load_balancer_sku",
                "networkPlugin": "network_plugin",
                "networkPolicy": "network_policy",
                "podCidr": "pod_cidr",
                "serviceCidr": "service_cidr"
            },
            "azure:containerservice/getKubernetesClusterOmsAgent:getKubernetesClusterOmsAgent": {
                "logAnalyticsWorkspaceId": "log_analytics_workspace_id",
                "msiAuthForMonitoringEnabled": "msi_auth_for_monitoring_enabled",
                "omsAgentIdentities": "oms_agent_identity"
            },
            "azure:containerservice/getKubernetesClusterOmsAgentOmsAgentIdentity:getKubernetesClusterOmsAgentOmsAgentIdentity": {
                "clientId": "client_id",
                "objectId": "object_id",
                "userAssignedIdentityId": "user_assigned_identity_id"
            },
            "azure:containerservice/getKubernetesClusterServiceMeshProfile:getKubernetesClusterServiceMeshProfile": {
                "externalIngressGatewayEnabled": "external_ingress_gateway_enabled",
                "internalIngressGatewayEnabled": "internal_ingress_gateway_enabled"
            },
            "azure:containerservice/getKubernetesClusterServicePrincipal:getKubernetesClusterServicePrincipal": {
                "clientId": "client_id"
            },
            "azure:containerservice/getKubernetesClusterStorageProfile:getKubernetesClusterStorageProfile": {
                "blobDriverEnabled": "blob_driver_enabled",
                "diskDriverEnabled": "disk_driver_enabled",
                "diskDriverVersion": "disk_driver_version",
                "fileDriverEnabled": "file_driver_enabled",
                "snapshotControllerEnabled": "snapshot_controller_enabled"
            },
            "azure:containerservice/getKubernetesClusterWindowsProfile:getKubernetesClusterWindowsProfile": {
                "adminUsername": "admin_username"
            },
            "azure:containerservice/getKubernetesNodePoolSnapshot:getKubernetesNodePoolSnapshot": {
                "resourceGroupName": "resource_group_name",
                "sourceNodePoolId": "source_node_pool_id"
            },
            "azure:containerservice/getKubernetesServiceVersions:getKubernetesServiceVersions": {
                "includePreview": "include_preview",
                "latestVersion": "latest_version",
                "versionPrefix": "version_prefix"
            },
            "azure:containerservice/getRegistry:getRegistry": {
                "adminEnabled": "admin_enabled",
                "adminPassword": "admin_password",
                "adminUsername": "admin_username",
                "dataEndpointEnabled": "data_endpoint_enabled",
                "loginServer": "login_server",
                "resourceGroupName": "resource_group_name"
            },
            "azure:containerservice/getRegistryScopeMap:getRegistryScopeMap": {
                "containerRegistryName": "container_registry_name",
                "resourceGroupName": "resource_group_name"
            },
            "azure:containerservice/getRegistryToken:getRegistryToken": {
                "containerRegistryName": "container_registry_name",
                "resourceGroupName": "resource_group_name",
                "scopeMapId": "scope_map_id"
            },
            "azure:containerservice/group:Group": {
                "containers": "container",
                "dnsConfig": "dns_config",
                "dnsNameLabel": "dns_name_label",
                "dnsNameLabelReusePolicy": "dns_name_label_reuse_policy",
                "exposedPorts": "exposed_port",
                "imageRegistryCredentials": "image_registry_credential",
                "initContainers": "init_container",
                "ipAddress": "ip_address",
                "ipAddressType": "ip_address_type",
                "keyVaultKeyId": "key_vault_key_id",
                "keyVaultUserAssignedIdentityId": "key_vault_user_assigned_identity_id",
                "networkProfileId": "network_profile_id",
                "osType": "os_type",
                "resourceGroupName": "resource_group_name",
                "restartPolicy": "restart_policy",
                "subnetIds": "subnet_ids"
            },
            "azure:containerservice/kubernetesCluster:KubernetesCluster": {
                "aciConnectorLinux": "aci_connector_linux",
                "apiServerAccessProfile": "api_server_access_profile",
                "apiServerAuthorizedIpRanges": "api_server_authorized_ip_ranges",
                "autoScalerProfile": "auto_scaler_profile",
                "automaticChannelUpgrade": "automatic_channel_upgrade",
                "azureActiveDirectoryRoleBasedAccessControl": "azure_active_directory_role_based_access_control",
                "azurePolicyEnabled": "azure_policy_enabled",
                "confidentialComputing": "confidential_computing",
                "customCaTrustCertificatesBase64s": "custom_ca_trust_certificates_base64",
                "defaultNodePool": "default_node_pool",
                "diskEncryptionSetId": "disk_encryption_set_id",
                "dnsPrefix": "dns_prefix",
                "dnsPrefixPrivateCluster": "dns_prefix_private_cluster",
                "edgeZone": "edge_zone",
                "enablePodSecurityPolicy": "enable_pod_security_policy",
                "httpApplicationRoutingEnabled": "http_application_routing_enabled",
                "httpApplicationRoutingZoneName": "http_application_routing_zone_name",
                "httpProxyConfig": "http_proxy_config",
                "imageCleanerEnabled": "image_cleaner_enabled",
                "imageCleanerIntervalHours": "image_cleaner_interval_hours",
                "ingressApplicationGateway": "ingress_application_gateway",
                "keyManagementService": "key_management_service",
                "keyVaultSecretsProvider": "key_vault_secrets_provider",
                "kubeAdminConfigRaw": "kube_admin_config_raw",
                "kubeAdminConfigs": "kube_admin_config",
                "kubeConfigRaw": "kube_config_raw",
                "kubeConfigs": "kube_config",
                "kubeletIdentity": "kubelet_identity",
                "kubernetesVersion": "kubernetes_version",
                "linuxProfile": "linux_profile",
                "localAccountDisabled": "local_account_disabled",
                "maintenanceWindow": "maintenance_window",
                "maintenanceWindowAutoUpgrade": "maintenance_window_auto_upgrade",
                "maintenanceWindowNodeOs": "maintenance_window_node_os",
                "microsoftDefender": "microsoft_defender",
                "monitorMetrics": "monitor_metrics",
                "networkProfile": "network_profile",
                "nodeOsChannelUpgrade": "node_os_channel_upgrade",
                "nodeResourceGroup": "node_resource_group",
                "nodeResourceGroupId": "node_resource_group_id",
                "oidcIssuerEnabled": "oidc_issuer_enabled",
                "oidcIssuerUrl": "oidc_issuer_url",
                "omsAgent": "oms_agent",
                "openServiceMeshEnabled": "open_service_mesh_enabled",
                "portalFqdn": "portal_fqdn",
                "privateClusterEnabled": "private_cluster_enabled",
                "privateClusterPublicFqdnEnabled": "private_cluster_public_fqdn_enabled",
                "privateDnsZoneId": "private_dns_zone_id",
                "privateFqdn": "private_fqdn",
                "publicNetworkAccessEnabled": "public_network_access_enabled",
                "resourceGroupName": "resource_group_name",
                "roleBasedAccessControlEnabled": "role_based_access_control_enabled",
                "runCommandEnabled": "run_command_enabled",
                "serviceMeshProfile": "service_mesh_profile",
                "servicePrincipal": "service_principal",
                "skuTier": "sku_tier",
                "storageProfile": "storage_profile",
                "supportPlan": "support_plan",
                "webAppRouting": "web_app_routing",
                "windowsProfile": "windows_profile",
                "workloadAutoscalerProfile": "workload_autoscaler_profile",
                "workloadIdentityEnabled": "workload_identity_enabled"
            },
            "azure:containerservice/kubernetesClusterExtension:KubernetesClusterExtension": {
                "aksAssignedIdentities": "aks_assigned_identity",
                "clusterId": "cluster_id",
                "configurationProtectedSettings": "configuration_protected_settings",
                "configurationSettings": "configuration_settings",
                "currentVersion": "current_version",
                "extensionType": "extension_type",
                "releaseNamespace": "release_namespace",
                "releaseTrain": "release_train",
                "targetNamespace": "target_namespace"
            },
            "azure:containerservice/kubernetesClusterNodePool:KubernetesClusterNodePool": {
                "capacityReservationGroupId": "capacity_reservation_group_id",
                "customCaTrustEnabled": "custom_ca_trust_enabled",
                "enableAutoScaling": "enable_auto_scaling",
                "enableHostEncryption": "enable_host_encryption",
                "enableNodePublicIp": "enable_node_public_ip",
                "evictionPolicy": "eviction_policy",
                "fipsEnabled": "fips_enabled",
                "gpuInstance": "gpu_instance",
                "hostGroupId": "host_group_id",
                "kubeletConfig": "kubelet_config",
                "kubeletDiskType": "kubelet_disk_type",
                "kubernetesClusterId": "kubernetes_cluster_id",
                "linuxOsConfig": "linux_os_config",
                "maxCount": "max_count",
                "maxPods": "max_pods",
                "messageOfTheDay": "message_of_the_day",
                "minCount": "min_count",
                "nodeCount": "node_count",
                "nodeLabels": "node_labels",
                "nodeNetworkProfile": "node_network_profile",
                "nodePublicIpPrefixId": "node_public_ip_prefix_id",
                "nodeTaints": "node_taints",
                "orchestratorVersion": "orchestrator_version",
                "osDiskSizeGb": "os_disk_size_gb",
                "osDiskType": "os_disk_type",
                "osSku": "os_sku",
                "osType": "os_type",
                "podSubnetId": "pod_subnet_id",
                "proximityPlacementGroupId": "proximity_placement_group_id",
                "scaleDownMode": "scale_down_mode",
                "snapshotId": "snapshot_id",
                "spotMaxPrice": "spot_max_price",
                "ultraSsdEnabled": "ultra_ssd_enabled",
                "upgradeSettings": "upgrade_settings",
                "vmSize": "vm_size",
                "vnetSubnetId": "vnet_subnet_id",
                "windowsProfile": "windows_profile",
                "workloadRuntime": "workload_runtime"
            },
            "azure:containerservice/kubernetesFleetManager:KubernetesFleetManager": {
                "hubProfile": "hub_profile",
                "resourceGroupName": "resource_group_name"
            },
            "azure:containerservice/registry:Registry": {
                "adminEnabled": "admin_enabled",
                "adminPassword": "admin_password",
                "adminUsername": "admin_username",
                "anonymousPullEnabled": "anonymous_pull_enabled",
                "dataEndpointEnabled": "data_endpoint_enabled",
                "exportPolicyEnabled": "export_policy_enabled",
                "loginServer": "login_server",
                "networkRuleBypassOption": "network_rule_bypass_option",
                "networkRuleSet": "network_rule_set",
                "publicNetworkAccessEnabled": "public_network_access_enabled",
                "quarantinePolicyEnabled": "quarantine_policy_enabled",
                "resourceGroupName": "resource_group_name",
                "retentionPolicy": "retention_policy",
                "trustPolicy": "trust_policy",
                "zoneRedundancyEnabled": "zone_redundancy_enabled"
            },
            "azure:containerservice/registryAgentPool:RegistryAgentPool": {
                "containerRegistryName": "container_registry_name",
                "instanceCount": "instance_count",
                "resourceGroupName": "resource_group_name",
                "virtualNetworkSubnetId": "virtual_network_subnet_id"
            },
            "azure:containerservice/registryScopeMap:RegistryScopeMap": {
                "containerRegistryName": "container_registry_name",
                "resourceGroupName": "resource_group_name"
            },
            "azure:containerservice/registryTask:RegistryTask": {
                "agentPoolName": "agent_pool_name",
                "agentSetting": "agent_setting",
                "baseImageTrigger": "base_image_trigger",
                "containerRegistryId": "container_registry_id",
                "dockerStep": "docker_step",
                "encodedStep": "encoded_step",
                "fileStep": "file_step",
                "isSystemTask": "is_system_task",
                "logTemplate": "log_template",
                "registryCredential": "registry_credential",
                "sourceTriggers": "source_trigger",
                "timeoutInSeconds": "timeout_in_seconds",
                "timerTriggers": "timer_trigger"
            },
            "azure:containerservice/registryTaskScheduleRunNow:RegistryTaskScheduleRunNow": {
                "containerRegistryTaskId": "container_registry_task_id"
            },
            "azure:containerservice/registryToken:RegistryToken": {
                "containerRegistryName": "container_registry_name",
                "resourceGroupName": "resource_group_name",
                "scopeMapId": "scope_map_id"
            },
            "azure:containerservice/registryWebhook:RegistryWebhook": {
                "customHeaders": "custom_headers",
                "registryName": "registry_name",
                "resourceGroupName": "resource_group_name",
                "serviceUri": "service_uri"
            },
            "azure:containerservice/registryWebook:RegistryWebook": {
                "customHeaders": "custom_headers",
                "registryName": "registry_name",
                "resourceGroupName": "resource_group_name",
                "serviceUri": "service_uri"
            },
            "azure:containerservice/tokenPassword:TokenPassword": {
                "containerRegistryTokenId": "container_registry_token_id"
            },
            "azure:core/CustomProviderResourceType:CustomProviderResourceType": {
                "routingType": "routing_type"
            },
            "azure:core/ResourceDeploymentScriptAzureCliContainer:ResourceDeploymentScriptAzureCliContainer": {
                "containerGroupName": "container_group_name"
            },
            "azure:core/ResourceDeploymentScriptAzureCliEnvironmentVariable:ResourceDeploymentScriptAzureCliEnvironmentVariable": {
                "secureValue": "secure_value"
            },
            "azure:core/ResourceDeploymentScriptAzureCliIdentity:ResourceDeploymentScriptAzureCliIdentity": {
                "identityIds": "identity_ids"
            },
            "azure:core/ResourceDeploymentScriptPowerShellContainer:ResourceDeploymentScriptPowerShellContainer": {
                "containerGroupName": "container_group_name"
            },
            "azure:core/ResourceDeploymentScriptPowerShellEnvironmentVariable:ResourceDeploymentScriptPowerShellEnvironmentVariable": {
                "secureValue": "secure_value"
            },
            "azure:core/ResourceDeploymentScriptPowerShellIdentity:ResourceDeploymentScriptPowerShellIdentity": {
                "identityIds": "identity_ids"
            },
            "azure:core/ResourceGroupCostManagementExportExportDataOptions:ResourceGroupCostManagementExportExportDataOptions": {
                "timeFrame": "time_frame"
            },
            "azure:core/ResourceGroupCostManagementExportExportDataStorageLocation:ResourceGroupCostManagementExportExportDataStorageLocation": {
                "containerId": "container_id",
                "rootFolderPath": "root_folder_path"
            },
            "azure:core/ResourceGroupCostManagementViewDataset:ResourceGroupCostManagementViewDataset": {
                "aggregations": "aggregation",
                "groupings": "grouping",
                "sortings": "sorting"
            },
            "azure:core/ResourceGroupCostManagementViewDatasetAggregation:ResourceGroupCostManagementViewDatasetAggregation": {
                "columnName": "column_name"
            },
            "azure:core/ResourceGroupPolicyAssignmentIdentity:ResourceGroupPolicyAssignmentIdentity": {
                "identityIds": "identity_ids",
                "principalId": "principal_id",
                "tenantId": "tenant_id"
            },
            "azure:core/ResourceGroupPolicyAssignmentNonComplianceMessage:ResourceGroupPolicyAssignmentNonComplianceMessage": {
                "policyDefinitionReferenceId": "policy_definition_reference_id"
            },
            "azure:core/ResourceGroupPolicyAssignmentOverrideSelector:ResourceGroupPolicyAssignmentOverrideSelector": {
                "ins": "in",
                "notIns": "not_in"
            },
            "azure:core/ResourceGroupPolicyAssignmentResourceSelectorSelector:ResourceGroupPolicyAssignmentResourceSelectorSelector": {
                "ins": "in",
                "notIns": "not_in"
            },
            "azure:core/ResourcePolicyAssignmentIdentity:ResourcePolicyAssignmentIdentity": {
                "identityIds": "identity_ids",
                "principalId": "principal_id",
                "tenantId": "tenant_id"
            },
            "azure:core/ResourcePolicyAssignmentNonComplianceMessage:ResourcePolicyAssignmentNonComplianceMessage": {
                "policyDefinitionReferenceId": "policy_definition_reference_id"
            },
            "azure:core/ResourcePolicyAssignmentOverrideSelector:ResourcePolicyAssignmentOverrideSelector": {
                "ins": "in",
                "notIns": "not_in"
            },
            "azure:core/ResourcePolicyAssignmentResourceSelectorSelector:ResourcePolicyAssignmentResourceSelectorSelector": {
                "ins": "in",
                "notIns": "not_in"
            },
            "azure:core/SubscriptionCostManagementExportExportDataOptions:SubscriptionCostManagementExportExportDataOptions": {
                "timeFrame": "time_frame"
            },
            "azure:core/SubscriptionCostManagementExportExportDataStorageLocation:SubscriptionCostManagementExportExportDataStorageLocation": {
                "containerId": "container_id",
                "rootFolderPath": "root_folder_path"
            },
            "azure:core/SubscriptionCostManagementViewDataset:SubscriptionCostManagementViewDataset": {
                "aggregations": "aggregation",
                "groupings": "grouping",
                "sortings": "sorting"
            },
            "azure:core/SubscriptionCostManagementViewDatasetAggregation:SubscriptionCostManagementViewDatasetAggregation": {
                "columnName": "column_name"
            },
            "azure:core/SubscriptionPolicyAssignmentIdentity:SubscriptionPolicyAssignmentIdentity": {
                "identityIds": "identity_ids",
                "principalId": "principal_id",
                "tenantId": "tenant_id"
            },
            "azure:core/SubscriptionPolicyAssignmentNonComplianceMessage:SubscriptionPolicyAssignmentNonComplianceMessage": {
                "policyDefinitionReferenceId": "policy_definition_reference_id"
            },
            "azure:core/SubscriptionPolicyAssignmentOverrideSelector:SubscriptionPolicyAssignmentOverrideSelector": {
                "ins": "in",
                "notIns": "not_in"
            },
            "azure:core/SubscriptionPolicyAssignmentResourceSelectorSelector:SubscriptionPolicyAssignmentResourceSelectorSelector": {
                "ins": "in",
                "notIns": "not_in"
            },
            "azure:core/customProvider:CustomProvider": {
                "actions": "action",
                "resourceGroupName": "resource_group_name",
                "resourceTypes": "resource_type",
                "validations": "validation"
            },
            "azure:core/getClientConfig:getClientConfig": {
                "clientId": "client_id",
                "objectId": "object_id",
                "subscriptionId": "subscription_id",
                "tenantId": "tenant_id"
            },
            "azure:core/getExtendedLocations:getExtendedLocations": {
                "extendedLocations": "extended_locations"
            },
            "azure:core/getResourceGroup:getResourceGroup": {
                "managedBy": "managed_by"
            },
            "azure:core/getResourceGroupTemplateDeployment:getResourceGroupTemplateDeployment": {
                "outputContent": "output_content",
                "resourceGroupName": "resource_group_name"
            },
            "azure:core/getResources:getResources": {
                "requiredTags": "required_tags",
                "resourceGroupName": "resource_group_name"
            },
            "azure:core/getResourcesResource:getResourcesResource": {
                "resourceGroupName": "resource_group_name"
            },
            "azure:core/getSubscription:getSubscription": {
                "displayName": "display_name",
                "locationPlacementId": "location_placement_id",
                "quotaId": "quota_id",
                "spendingLimit": "spending_limit",
                "subscriptionId": "subscription_id",
                "tenantId": "tenant_id"
            },
            "azure:core/getSubscriptionTemplateDeployment:getSubscriptionTemplateDeployment": {
                "outputContent": "output_content"
            },
            "azure:core/getSubscriptions:getSubscriptions": {
                "displayNameContains": "display_name_contains",
                "displayNamePrefix": "display_name_prefix"
            },
            "azure:core/getSubscriptionsSubscription:getSubscriptionsSubscription": {
                "displayName": "display_name",
                "locationPlacementId": "location_placement_id",
                "quotaId": "quota_id",
                "spendingLimit": "spending_limit",
                "subscriptionId": "subscription_id",
                "tenantId": "tenant_id"
            },
            "azure:core/getTemplateSpecVersion:getTemplateSpecVersion": {
                "resourceGroupName": "resource_group_name",
                "templateBody": "template_body"
            },
            "azure:core/getTenantTemplateDeployment:getTenantTemplateDeployment": {
                "outputContent": "output_content"
            },
            "azure:core/getUserAssignedIdentity:getUserAssignedIdentity": {
                "clientId": "client_id",
                "principalId": "principal_id",
                "resourceGroupName": "resource_group_name",
                "tenantId": "tenant_id"
            },
            "azure:core/portalTenantConfiguration:PortalTenantConfiguration": {
                "privateMarkdownStorageEnforced": "private_markdown_storage_enforced"
            },
            "azure:core/resourceDeploymentScriptAzureCli:ResourceDeploymentScriptAzureCli": {
                "cleanupPreference": "cleanup_preference",
                "commandLine": "command_line",
                "environmentVariables": "environment_variable",
                "forceUpdateTag": "force_update_tag",
                "primaryScriptUri": "primary_script_uri",
                "resourceGroupName": "resource_group_name",
                "retentionInterval": "retention_interval",
                "scriptContent": "script_content",
                "storageAccount": "storage_account",
                "supportingScriptUris": "supporting_script_uris"
            },
            "azure:core/resourceDeploymentScriptPowerShell:ResourceDeploymentScriptPowerShell": {
                "cleanupPreference": "cleanup_preference",
                "commandLine": "command_line",
                "environmentVariables": "environment_variable",
                "forceUpdateTag": "force_update_tag",
                "primaryScriptUri": "primary_script_uri",
                "resourceGroupName": "resource_group_name",
                "retentionInterval": "retention_interval",
                "scriptContent": "script_content",
                "storageAccount": "storage_account",
                "supportingScriptUris": "supporting_script_uris"
            },
            "azure:core/resourceGroup:ResourceGroup": {
                "managedBy": "managed_by"
            },
            "azure:core/resourceGroupCostManagementExport:ResourceGroupCostManagementExport": {
                "exportDataOptions": "export_data_options",
                "exportDataStorageLocation": "export_data_storage_location",
                "recurrencePeriodEndDate": "recurrence_period_end_date",
                "recurrencePeriodStartDate": "recurrence_period_start_date",
                "recurrenceType": "recurrence_type",
                "resourceGroupId": "resource_group_id"
            },
            "azure:core/resourceGroupCostManagementView:ResourceGroupCostManagementView": {
                "chartType": "chart_type",
                "displayName": "display_name",
                "kpis": "kpi",
                "pivots": "pivot",
                "reportType": "report_type",
                "resourceGroupId": "resource_group_id"
            },
            "azure:core/resourceGroupPolicyAssignment:ResourceGroupPolicyAssignment": {
                "displayName": "display_name",
                "nonComplianceMessages": "non_compliance_message",
                "notScopes": "not_scopes",
                "policyDefinitionId": "policy_definition_id",
                "resourceGroupId": "resource_group_id",
                "resourceSelectors": "resource_selectors"
            },
            "azure:core/resourceGroupPolicyExemption:ResourceGroupPolicyExemption": {
                "displayName": "display_name",
                "exemptionCategory": "exemption_category",
                "expiresOn": "expires_on",
                "policyAssignmentId": "policy_assignment_id",
                "policyDefinitionReferenceIds": "policy_definition_reference_ids",
                "resourceGroupId": "resource_group_id"
            },
            "azure:core/resourceGroupPolicyRemediation:ResourceGroupPolicyRemediation": {
                "failurePercentage": "failure_percentage",
                "locationFilters": "location_filters",
                "parallelDeployments": "parallel_deployments",
                "policyAssignmentId": "policy_assignment_id",
                "policyDefinitionId": "policy_definition_id",
                "policyDefinitionReferenceId": "policy_definition_reference_id",
                "resourceCount": "resource_count",
                "resourceDiscoveryMode": "resource_discovery_mode",
                "resourceGroupId": "resource_group_id"
            },
            "azure:core/resourceGroupTemplateDeployment:ResourceGroupTemplateDeployment": {
                "debugLevel": "debug_level",
                "deploymentMode": "deployment_mode",
                "outputContent": "output_content",
                "parametersContent": "parameters_content",
                "resourceGroupName": "resource_group_name",
                "templateContent": "template_content",
                "templateSpecVersionId": "template_spec_version_id"
            },
            "azure:core/resourcePolicyAssignment:ResourcePolicyAssignment": {
                "displayName": "display_name",
                "nonComplianceMessages": "non_compliance_message",
                "notScopes": "not_scopes",
                "policyDefinitionId": "policy_definition_id",
                "resourceId": "resource_id",
                "resourceSelectors": "resource_selectors"
            },
            "azure:core/resourcePolicyExemption:ResourcePolicyExemption": {
                "displayName": "display_name",
                "exemptionCategory": "exemption_category",
                "expiresOn": "expires_on",
                "policyAssignmentId": "policy_assignment_id",
                "policyDefinitionReferenceIds": "policy_definition_reference_ids",
                "resourceId": "resource_id"
            },
            "azure:core/resourcePolicyRemediation:ResourcePolicyRemediation": {
                "failurePercentage": "failure_percentage",
                "locationFilters": "location_filters",
                "parallelDeployments": "parallel_deployments",
                "policyAssignmentId": "policy_assignment_id",
                "policyDefinitionId": "policy_definition_id",
                "policyDefinitionReferenceId": "policy_definition_reference_id",
                "resourceCount": "resource_count",
                "resourceDiscoveryMode": "resource_discovery_mode",
                "resourceId": "resource_id"
            },
            "azure:core/resourceProviderRegistration:ResourceProviderRegistration": {
                "features": "feature"
            },
            "azure:core/subscription:Subscription": {
                "billingScopeId": "billing_scope_id",
                "subscriptionId": "subscription_id",
                "subscriptionName": "subscription_name",
                "tenantId": "tenant_id"
            },
            "azure:core/subscriptionCostManagementExport:SubscriptionCostManagementExport": {
                "exportDataOptions": "export_data_options",
                "exportDataStorageLocation": "export_data_storage_location",
                "recurrencePeriodEndDate": "recurrence_period_end_date",
                "recurrencePeriodStartDate": "recurrence_period_start_date",
                "recurrenceType": "recurrence_type",
                "subscriptionId": "subscription_id"
            },
            "azure:core/subscriptionCostManagementView:SubscriptionCostManagementView": {
                "chartType": "chart_type",
                "displayName": "display_name",
                "kpis": "kpi",
                "pivots": "pivot",
                "reportType": "report_type",
                "subscriptionId": "subscription_id"
            },
            "azure:core/subscriptionPolicyAssignment:SubscriptionPolicyAssignment": {
                "displayName": "display_name",
                "nonComplianceMessages": "non_compliance_message",
                "notScopes": "not_scopes",
                "policyDefinitionId": "policy_definition_id",
                "resourceSelectors": "resource_selectors",
                "subscriptionId": "subscription_id"
            },
            "azure:core/subscriptionPolicyExemption:SubscriptionPolicyExemption": {
                "displayName": "display_name",
                "exemptionCategory": "exemption_category",
                "expiresOn": "expires_on",
                "policyAssignmentId": "policy_assignment_id",
                "policyDefinitionReferenceIds": "policy_definition_reference_ids",
                "subscriptionId": "subscription_id"
            },
            "azure:core/subscriptionPolicyRemediation:SubscriptionPolicyRemediation": {
                "failurePercentage": "failure_percentage",
                "locationFilters": "location_filters",
                "parallelDeployments": "parallel_deployments",
                "policyAssignmentId": "policy_assignment_id",
                "policyDefinitionId": "policy_definition_id",
                "policyDefinitionReferenceId": "policy_definition_reference_id",
                "resourceCount": "resource_count",
                "resourceDiscoveryMode": "resource_discovery_mode",
                "subscriptionId": "subscription_id"
            },
            "azure:core/subscriptionTemplateDeployment:SubscriptionTemplateDeployment": {
                "debugLevel": "debug_level",
                "outputContent": "output_content",
                "parametersContent": "parameters_content",
                "templateContent": "template_content",
                "templateSpecVersionId": "template_spec_version_id"
            },
            "azure:core/templateDeployment:TemplateDeployment": {
                "deploymentMode": "deployment_mode",
                "parametersBody": "parameters_body",
                "resourceGroupName": "resource_group_name",
                "templateBody": "template_body"
            },
            "azure:core/tenantTemplateDeployment:TenantTemplateDeployment": {
                "debugLevel": "debug_level",
                "outputContent": "output_content",
                "parametersContent": "parameters_content",
                "templateContent": "template_content",
                "templateSpecVersionId": "template_spec_version_id"
            },
            "azure:cosmosdb/AccountAnalyticalStorage:AccountAnalyticalStorage": {
                "schemaType": "schema_type"
            },
            "azure:cosmosdb/AccountBackup:AccountBackup": {
                "intervalInMinutes": "interval_in_minutes",
                "retentionInHours": "retention_in_hours",
                "storageRedundancy": "storage_redundancy"
            },
            "azure:cosmosdb/AccountCapacity:AccountCapacity": {
                "totalThroughputLimit": "total_throughput_limit"
            },
            "azure:cosmosdb/AccountConsistencyPolicy:AccountConsistencyPolicy": {
                "consistencyLevel": "consistency_level",
                "maxIntervalInSeconds": "max_interval_in_seconds",
                "maxStalenessPrefix": "max_staleness_prefix"
            },
            "azure:cosmosdb/AccountCorsRule:AccountCorsRule": {
                "allowedHeaders": "allowed_headers",
                "allowedMethods": "allowed_methods",
                "allowedOrigins": "allowed_origins",
                "exposedHeaders": "exposed_headers",
                "maxAgeInSeconds": "max_age_in_seconds"
            },
            "azure:cosmosdb/AccountGeoLocation:AccountGeoLocation": {
                "failoverPriority": "failover_priority",
                "zoneRedundant": "zone_redundant"
            },
            "azure:cosmosdb/AccountIdentity:AccountIdentity": {
                "identityIds": "identity_ids",
                "principalId": "principal_id",
                "tenantId": "tenant_id"
            },
            "azure:cosmosdb/AccountRestore:AccountRestore": {
                "databases": "database",
                "restoreTimestampInUtc": "restore_timestamp_in_utc",
                "sourceCosmosdbAccountId": "source_cosmosdb_account_id"
            },
            "azure:cosmosdb/AccountRestoreDatabase:AccountRestoreDatabase": {
                "collectionNames": "collection_names"
            },
            "azure:cosmosdb/AccountVirtualNetworkRule:AccountVirtualNetworkRule": {
                "ignoreMissingVnetServiceEndpoint": "ignore_missing_vnet_service_endpoint"
            },
            "azure:cosmosdb/CassandraClusterIdentity:CassandraClusterIdentity": {
                "principalId": "principal_id",
                "tenantId": "tenant_id"
            },
            "azure:cosmosdb/CassandraKeyspaceAutoscaleSettings:CassandraKeyspaceAutoscaleSettings": {
                "maxThroughput": "max_throughput"
            },
            "azure:cosmosdb/CassandraTableAutoscaleSettings:CassandraTableAutoscaleSettings": {
                "maxThroughput": "max_throughput"
            },
            "azure:cosmosdb/CassandraTableSchema:CassandraTableSchema": {
                "clusterKeys": "cluster_key",
                "columns": "column",
                "partitionKeys": "partition_key"
            },
            "azure:cosmosdb/CassandraTableSchemaClusterKey:CassandraTableSchemaClusterKey": {
                "orderBy": "order_by"
            },
            "azure:cosmosdb/GremlinDatabaseAutoscaleSettings:GremlinDatabaseAutoscaleSettings": {
                "maxThroughput": "max_throughput"
            },
            "azure:cosmosdb/GremlinGraphAutoscaleSettings:GremlinGraphAutoscaleSettings": {
                "maxThroughput": "max_throughput"
            },
            "azure:cosmosdb/GremlinGraphConflictResolutionPolicy:GremlinGraphConflictResolutionPolicy": {
                "conflictResolutionPath": "conflict_resolution_path",
                "conflictResolutionProcedure": "conflict_resolution_procedure"
            },
            "azure:cosmosdb/GremlinGraphIndexPolicy:GremlinGraphIndexPolicy": {
                "compositeIndices": "composite_index",
                "excludedPaths": "excluded_paths",
                "includedPaths": "included_paths",
                "indexingMode": "indexing_mode",
                "spatialIndices": "spatial_index"
            },
            "azure:cosmosdb/GremlinGraphIndexPolicyCompositeIndex:GremlinGraphIndexPolicyCompositeIndex": {
                "indices": "index"
            },
            "azure:cosmosdb/MongoCollectionAutoscaleSettings:MongoCollectionAutoscaleSettings": {
                "maxThroughput": "max_throughput"
            },
            "azure:cosmosdb/MongoDatabaseAutoscaleSettings:MongoDatabaseAutoscaleSettings": {
                "maxThroughput": "max_throughput"
            },
            "azure:cosmosdb/MongoRoleDefinitionPrivilegeResource:MongoRoleDefinitionPrivilegeResource": {
                "collectionName": "collection_name",
                "dbName": "db_name"
            },
            "azure:cosmosdb/PostgresqlClusterMaintenanceWindow:PostgresqlClusterMaintenanceWindow": {
                "dayOfWeek": "day_of_week",
                "startHour": "start_hour",
                "startMinute": "start_minute"
            },
            "azure:cosmosdb/SqlContainerAutoscaleSettings:SqlContainerAutoscaleSettings": {
                "maxThroughput": "max_throughput"
            },
            "azure:cosmosdb/SqlContainerConflictResolutionPolicy:SqlContainerConflictResolutionPolicy": {
                "conflictResolutionPath": "conflict_resolution_path",
                "conflictResolutionProcedure": "conflict_resolution_procedure"
            },
            "azure:cosmosdb/SqlContainerIndexingPolicy:SqlContainerIndexingPolicy": {
                "compositeIndices": "composite_index",
                "excludedPaths": "excluded_path",
                "includedPaths": "included_path",
                "indexingMode": "indexing_mode",
                "spatialIndices": "spatial_index"
            },
            "azure:cosmosdb/SqlContainerIndexingPolicyCompositeIndex:SqlContainerIndexingPolicyCompositeIndex": {
                "indices": "index"
            },
            "azure:cosmosdb/SqlDatabaseAutoscaleSettings:SqlDatabaseAutoscaleSettings": {
                "maxThroughput": "max_throughput"
            },
            "azure:cosmosdb/SqlRoleDefinitionPermission:SqlRoleDefinitionPermission": {
                "dataActions": "data_actions"
            },
            "azure:cosmosdb/TableAutoscaleSettings:TableAutoscaleSettings": {
                "maxThroughput": "max_throughput"
            },
            "azure:cosmosdb/account:Account": {
                "accessKeyMetadataWritesEnabled": "access_key_metadata_writes_enabled",
                "analyticalStorage": "analytical_storage",
                "analyticalStorageEnabled": "analytical_storage_enabled",
                "connectionStrings": "connection_strings",
                "consistencyPolicy": "consistency_policy",
                "corsRule": "cors_rule",
                "createMode": "create_mode",
                "defaultIdentityType": "default_identity_type",
                "enableAutomaticFailover": "enable_automatic_failover",
                "enableFreeTier": "enable_free_tier",
                "enableMultipleWriteLocations": "enable_multiple_write_locations",
                "geoLocations": "geo_location",
                "ipRangeFilter": "ip_range_filter",
                "isVirtualNetworkFilterEnabled": "is_virtual_network_filter_enabled",
                "keyVaultKeyId": "key_vault_key_id",
                "localAuthenticationDisabled": "local_authentication_disabled",
                "mongoServerVersion": "mongo_server_version",
                "networkAclBypassForAzureServices": "network_acl_bypass_for_azure_services",
                "networkAclBypassIds": "network_acl_bypass_ids",
                "offerType": "offer_type",
                "primaryKey": "primary_key",
                "primaryMongodbConnectionString": "primary_mongodb_connection_string",
                "primaryReadonlyKey": "primary_readonly_key",
                "primaryReadonlyMongodbConnectionString": "primary_readonly_mongodb_connection_string",
                "primaryReadonlySqlConnectionString": "primary_readonly_sql_connection_string",
                "primarySqlConnectionString": "primary_sql_connection_string",
                "publicNetworkAccessEnabled": "public_network_access_enabled",
                "readEndpoints": "read_endpoints",
                "resourceGroupName": "resource_group_name",
                "secondaryKey": "secondary_key",
                "secondaryMongodbConnectionString": "secondary_mongodb_connection_string",
                "secondaryReadonlyKey": "secondary_readonly_key",
                "secondaryReadonlyMongodbConnectionString": "secondary_readonly_mongodb_connection_string",
                "secondaryReadonlySqlConnectionString": "secondary_readonly_sql_connection_string",
                "secondarySqlConnectionString": "secondary_sql_connection_string",
                "virtualNetworkRules": "virtual_network_rule",
                "writeEndpoints": "write_endpoints"
            },
            "azure:cosmosdb/cassandraCluster:CassandraCluster": {
                "authenticationMethod": "authentication_method",
                "clientCertificatePems": "client_certificate_pems",
                "defaultAdminPassword": "default_admin_password",
                "delegatedManagementSubnetId": "delegated_management_subnet_id",
                "externalGossipCertificatePems": "external_gossip_certificate_pems",
                "externalSeedNodeIpAddresses": "external_seed_node_ip_addresses",
                "hoursBetweenBackups": "hours_between_backups",
                "repairEnabled": "repair_enabled",
                "resourceGroupName": "resource_group_name"
            },
            "azure:cosmosdb/cassandraDatacenter:CassandraDatacenter": {
                "availabilityZonesEnabled": "availability_zones_enabled",
                "backupStorageCustomerKeyUri": "backup_storage_customer_key_uri",
                "base64EncodedYamlFragment": "base64_encoded_yaml_fragment",
                "cassandraClusterId": "cassandra_cluster_id",
                "delegatedManagementSubnetId": "delegated_management_subnet_id",
                "diskCount": "disk_count",
                "diskSku": "disk_sku",
                "managedDiskCustomerKeyUri": "managed_disk_customer_key_uri",
                "nodeCount": "node_count",
                "seedNodeIpAddresses": "seed_node_ip_addresses",
                "skuName": "sku_name"
            },
            "azure:cosmosdb/cassandraKeyspace:CassandraKeyspace": {
                "accountName": "account_name",
                "autoscaleSettings": "autoscale_settings",
                "resourceGroupName": "resource_group_name"
            },
            "azure:cosmosdb/cassandraTable:CassandraTable": {
                "analyticalStorageTtl": "analytical_storage_ttl",
                "autoscaleSettings": "autoscale_settings",
                "cassandraKeyspaceId": "cassandra_keyspace_id",
                "defaultTtl": "default_ttl"
            },
            "azure:cosmosdb/getAccount:getAccount": {
                "connectionStrings": "connection_strings",
                "consistencyPolicies": "consistency_policy",
                "enableAutomaticFailover": "enable_automatic_failover",
                "enableFreeTier": "enable_free_tier",
                "enableMultipleWriteLocations": "enable_multiple_write_locations",
                "geoLocations": "geo_location",
                "ipRangeFilter": "ip_range_filter",
                "isVirtualNetworkFilterEnabled": "is_virtual_network_filter_enabled",
                "keyVaultKeyId": "key_vault_key_id",
                "offerType": "offer_type",
                "primaryKey": "primary_key",
                "primaryMongodbConnectionString": "primary_mongodb_connection_string",
                "primaryReadonlyKey": "primary_readonly_key",
                "primaryReadonlyMongodbConnectionString": "primary_readonly_mongodb_connection_string",
                "primaryReadonlySqlConnectionString": "primary_readonly_sql_connection_string",
                "primarySqlConnectionString": "primary_sql_connection_string",
                "readEndpoints": "read_endpoints",
                "resourceGroupName": "resource_group_name",
                "secondaryKey": "secondary_key",
                "secondaryMongodbConnectionString": "secondary_mongodb_connection_string",
                "secondaryReadonlyKey": "secondary_readonly_key",
                "secondaryReadonlyMongodbConnectionString": "secondary_readonly_mongodb_connection_string",
                "secondaryReadonlySqlConnectionString": "secondary_readonly_sql_connection_string",
                "secondarySqlConnectionString": "secondary_sql_connection_string",
                "virtualNetworkRules": "virtual_network_rule",
                "writeEndpoints": "write_endpoints"
            },
            "azure:cosmosdb/getAccountConsistencyPolicy:getAccountConsistencyPolicy": {
                "consistencyLevel": "consistency_level",
                "maxIntervalInSeconds": "max_interval_in_seconds",
                "maxStalenessPrefix": "max_staleness_prefix"
            },
            "azure:cosmosdb/getAccountGeoLocation:getAccountGeoLocation": {
                "failoverPriority": "failover_priority"
            },
            "azure:cosmosdb/getMongoDatabase:getMongoDatabase": {
                "accountName": "account_name",
                "resourceGroupName": "resource_group_name"
            },
            "azure:cosmosdb/getRestorableDatabaseAccountsAccount:getRestorableDatabaseAccountsAccount": {
                "apiType": "api_type",
                "creationTime": "creation_time",
                "deletionTime": "deletion_time",
                "restorableLocations": "restorable_locations"
            },
            "azure:cosmosdb/getRestorableDatabaseAccountsAccountRestorableLocation:getRestorableDatabaseAccountsAccountRestorableLocation": {
                "creationTime": "creation_time",
                "deletionTime": "deletion_time",
                "regionalDatabaseAccountInstanceId": "regional_database_account_instance_id"
            },
            "azure:cosmosdb/getSqlDatabase:getSqlDatabase": {
                "accountName": "account_name",
                "autoscaleSettings": "autoscale_settings",
                "resourceGroupName": "resource_group_name"
            },
            "azure:cosmosdb/getSqlDatabaseAutoscaleSetting:getSqlDatabaseAutoscaleSetting": {
                "maxThroughput": "max_throughput"
            },
            "azure:cosmosdb/getSqlRoleDefinition:getSqlRoleDefinition": {
                "accountName": "account_name",
                "assignableScopes": "assignable_scopes",
                "resourceGroupName": "resource_group_name",
                "roleDefinitionId": "role_definition_id"
            },
            "azure:cosmosdb/getSqlRoleDefinitionPermission:getSqlRoleDefinitionPermission": {
                "dataActions": "data_actions"
            },
            "azure:cosmosdb/gremlinDatabase:GremlinDatabase": {
                "accountName": "account_name",
                "autoscaleSettings": "autoscale_settings",
                "resourceGroupName": "resource_group_name"
            },
            "azure:cosmosdb/gremlinGraph:GremlinGraph": {
                "accountName": "account_name",
                "analyticalStorageTtl": "analytical_storage_ttl",
                "autoscaleSettings": "autoscale_settings",
                "conflictResolutionPolicy": "conflict_resolution_policy",
                "databaseName": "database_name",
                "defaultTtl": "default_ttl",
                "indexPolicy": "index_policy",
                "partitionKeyPath": "partition_key_path",
                "partitionKeyVersion": "partition_key_version",
                "resourceGroupName": "resource_group_name",
                "uniqueKeys": "unique_key"
            },
            "azure:cosmosdb/mongoCollection:MongoCollection": {
                "accountName": "account_name",
                "analyticalStorageTtl": "analytical_storage_ttl",
                "autoscaleSettings": "autoscale_settings",
                "databaseName": "database_name",
                "defaultTtlSeconds": "default_ttl_seconds",
                "indices": "index",
                "resourceGroupName": "resource_group_name",
                "shardKey": "shard_key",
                "systemIndexes": "system_indexes"
            },
            "azure:cosmosdb/mongoDatabase:MongoDatabase": {
                "accountName": "account_name",
                "autoscaleSettings": "autoscale_settings",
                "resourceGroupName": "resource_group_name"
            },
            "azure:cosmosdb/mongoRoleDefinition:MongoRoleDefinition": {
                "cosmosMongoDatabaseId": "cosmos_mongo_database_id",
                "inheritedRoleNames": "inherited_role_names",
                "privileges": "privilege",
                "roleName": "role_name"
            },
            "azure:cosmosdb/mongoUserDefinition:MongoUserDefinition": {
                "cosmosMongoDatabaseId": "cosmos_mongo_database_id",
                "inheritedRoleNames": "inherited_role_names"
            },
            "azure:cosmosdb/notebookWorkspace:NotebookWorkspace": {
                "accountName": "account_name",
                "resourceGroupName": "resource_group_name",
                "serverEndpoint": "server_endpoint"
            },
            "azure:cosmosdb/postgresqlCluster:PostgresqlCluster": {
                "administratorLoginPassword": "administrator_login_password",
                "citusVersion": "citus_version",
                "coordinatorPublicIpAccessEnabled": "coordinator_public_ip_access_enabled",
                "coordinatorServerEdition": "coordinator_server_edition",
                "coordinatorStorageQuotaInMb": "coordinator_storage_quota_in_mb",
                "coordinatorVcoreCount": "coordinator_vcore_count",
                "earliestRestoreTime": "earliest_restore_time",
                "haEnabled": "ha_enabled",
                "maintenanceWindow": "maintenance_window",
                "nodeCount": "node_count",
                "nodePublicIpAccessEnabled": "node_public_ip_access_enabled",
                "nodeServerEdition": "node_server_edition",
                "nodeStorageQuotaInMb": "node_storage_quota_in_mb",
                "nodeVcores": "node_vcores",
                "pointInTimeInUtc": "point_in_time_in_utc",
                "preferredPrimaryZone": "preferred_primary_zone",
                "resourceGroupName": "resource_group_name",
                "shardsOnCoordinatorEnabled": "shards_on_coordinator_enabled",
                "sourceLocation": "source_location",
                "sourceResourceId": "source_resource_id",
                "sqlVersion": "sql_version"
            },
            "azure:cosmosdb/postgresqlCoordinatorConfiguration:PostgresqlCoordinatorConfiguration": {
                "clusterId": "cluster_id"
            },
            "azure:cosmosdb/postgresqlFirewallRule:PostgresqlFirewallRule": {
                "clusterId": "cluster_id",
                "endIpAddress": "end_ip_address",
                "startIpAddress": "start_ip_address"
            },
            "azure:cosmosdb/postgresqlNodeConfiguration:PostgresqlNodeConfiguration": {
                "clusterId": "cluster_id"
            },
            "azure:cosmosdb/postgresqlRole:PostgresqlRole": {
                "clusterId": "cluster_id"
            },
            "azure:cosmosdb/sqlContainer:SqlContainer": {
                "accountName": "account_name",
                "analyticalStorageTtl": "analytical_storage_ttl",
                "autoscaleSettings": "autoscale_settings",
                "conflictResolutionPolicy": "conflict_resolution_policy",
                "databaseName": "database_name",
                "defaultTtl": "default_ttl",
                "indexingPolicy": "indexing_policy",
                "partitionKeyPath": "partition_key_path",
                "partitionKeyVersion": "partition_key_version",
                "resourceGroupName": "resource_group_name",
                "uniqueKeys": "unique_key"
            },
            "azure:cosmosdb/sqlDatabase:SqlDatabase": {
                "accountName": "account_name",
                "autoscaleSettings": "autoscale_settings",
                "resourceGroupName": "resource_group_name"
            },
            "azure:cosmosdb/sqlDedicatedGateway:SqlDedicatedGateway": {
                "cosmosdbAccountId": "cosmosdb_account_id",
                "instanceCount": "instance_count",
                "instanceSize": "instance_size"
            },
            "azure:cosmosdb/sqlFunction:SqlFunction": {
                "containerId": "container_id"
            },
            "azure:cosmosdb/sqlRoleAssignment:SqlRoleAssignment": {
                "accountName": "account_name",
                "principalId": "principal_id",
                "resourceGroupName": "resource_group_name",
                "roleDefinitionId": "role_definition_id"
            },
            "azure:cosmosdb/sqlRoleDefinition:SqlRoleDefinition": {
                "accountName": "account_name",
                "assignableScopes": "assignable_scopes",
                "resourceGroupName": "resource_group_name",
                "roleDefinitionId": "role_definition_id"
            },
            "azure:cosmosdb/sqlStoredProcedure:SqlStoredProcedure": {
                "accountName": "account_name",
                "containerName": "container_name",
                "databaseName": "database_name",
                "resourceGroupName": "resource_group_name"
            },
            "azure:cosmosdb/sqlTrigger:SqlTrigger": {
                "containerId": "container_id"
            },
            "azure:cosmosdb/table:Table": {
                "accountName": "account_name",
                "autoscaleSettings": "autoscale_settings",
                "resourceGroupName": "resource_group_name"
            },
            "azure:costmanagement/anomalyAlert:AnomalyAlert": {
                "displayName": "display_name",
                "emailAddresses": "email_addresses",
                "emailSubject": "email_subject"
            },
            "azure:costmanagement/scheduledAction:ScheduledAction": {
                "dayOfMonth": "day_of_month",
                "daysOfWeeks": "days_of_week",
                "displayName": "display_name",
                "emailAddressSender": "email_address_sender",
                "emailAddresses": "email_addresses",
                "emailSubject": "email_subject",
                "endDate": "end_date",
                "hourOfDay": "hour_of_day",
                "startDate": "start_date",
                "viewId": "view_id",
                "weeksOfMonths": "weeks_of_month"
            },
            "azure:customip/prefix:Prefix": {
                "commissioningEnabled": "commissioning_enabled",
                "internetAdvertisingDisabled": "internet_advertising_disabled",
                "parentCustomIpPrefixId": "parent_custom_ip_prefix_id",
                "resourceGroupName": "resource_group_name",
                "roaValidityEndDate": "roa_validity_end_date",
                "wanValidationSignedMessage": "wan_validation_signed_message"
            },
            "azure:dashboard/GrafanaAzureMonitorWorkspaceIntegration:GrafanaAzureMonitorWorkspaceIntegration": {
                "resourceId": "resource_id"
            },
            "azure:dashboard/GrafanaIdentity:GrafanaIdentity": {
                "identityIds": "identity_ids",
                "principalId": "principal_id",
                "tenantId": "tenant_id"
            },
            "azure:dashboard/azurerm_portal_dashboard:azurerm_portal_dashboard": {
                "dashboardProperties": "dashboard_properties",
                "displayName": "display_name",
                "resourceGroupName": "resource_group_name"
            },
            "azure:dashboard/dashboard:Dashboard": {
                "dashboardProperties": "dashboard_properties",
                "resourceGroupName": "resource_group_name"
            },
            "azure:dashboard/grafana:Grafana": {
                "apiKeyEnabled": "api_key_enabled",
                "autoGeneratedDomainNameLabelScope": "auto_generated_domain_name_label_scope",
                "azureMonitorWorkspaceIntegrations": "azure_monitor_workspace_integrations",
                "deterministicOutboundIpEnabled": "deterministic_outbound_ip_enabled",
                "grafanaMajorVersion": "grafana_major_version",
                "grafanaVersion": "grafana_version",
                "outboundIps": "outbound_ip",
                "publicNetworkAccessEnabled": "public_network_access_enabled",
                "resourceGroupName": "resource_group_name",
                "zoneRedundancyEnabled": "zone_redundancy_enabled"
            },
            "azure:databasemigration/getProject:getProject": {
                "resourceGroupName": "resource_group_name",
                "serviceName": "service_name",
                "sourcePlatform": "source_platform",
                "targetPlatform": "target_platform"
            },
            "azure:databasemigration/getService:getService": {
                "resourceGroupName": "resource_group_name",
                "skuName": "sku_name",
                "subnetId": "subnet_id"
            },
            "azure:databasemigration/project:Project": {
                "resourceGroupName": "resource_group_name",
                "serviceName": "service_name",
                "sourcePlatform": "source_platform",
                "targetPlatform": "target_platform"
            },
            "azure:databasemigration/service:Service": {
                "resourceGroupName": "resource_group_name",
                "skuName": "sku_name",
                "subnetId": "subnet_id"
            },
            "azure:databoxedge/DeviceDeviceProperty:DeviceDeviceProperty": {
                "configuredRoleTypes": "configured_role_types",
                "hcsVersion": "hcs_version",
                "nodeCount": "node_count",
                "serialNumber": "serial_number",
                "softwareVersion": "software_version",
                "timeZone": "time_zone"
            },
            "azure:databoxedge/OrderContact:OrderContact": {
                "companyName": "company_name",
                "phoneNumber": "phone_number"
            },
            "azure:databoxedge/OrderReturnTracking:OrderReturnTracking": {
                "carrierName": "carrier_name",
                "serialNumber": "serial_number",
                "trackingId": "tracking_id",
                "trackingUrl": "tracking_url"
            },
            "azure:databoxedge/OrderShipmentAddress:OrderShipmentAddress": {
                "addresses": "address",
                "postalCode": "postal_code"
            },
            "azure:databoxedge/OrderShipmentHistory:OrderShipmentHistory": {
                "additionalDetails": "additional_details",
                "lastUpdate": "last_update"
            },
            "azure:databoxedge/OrderShipmentTracking:OrderShipmentTracking": {
                "carrierName": "carrier_name",
                "serialNumber": "serial_number",
                "trackingId": "tracking_id",
                "trackingUrl": "tracking_url"
            },
            "azure:databoxedge/OrderStatus:OrderStatus": {
                "additionalDetails": "additional_details",
                "lastUpdate": "last_update"
            },
            "azure:databoxedge/device:Device": {
                "deviceProperties": "device_properties",
                "resourceGroupName": "resource_group_name",
                "skuName": "sku_name"
            },
            "azure:databoxedge/getDevice:getDevice": {
                "deviceProperties": "device_properties",
                "resourceGroupName": "resource_group_name",
                "skuName": "sku_name"
            },
            "azure:databoxedge/getDeviceDeviceProperty:getDeviceDeviceProperty": {
                "configuredRoleTypes": "configured_role_types",
                "hcsVersion": "hcs_version",
                "nodeCount": "node_count",
                "serialNumber": "serial_number",
                "softwareVersion": "software_version",
                "timeZone": "time_zone"
            },
            "azure:databoxedge/order:Order": {
                "deviceName": "device_name",
                "resourceGroupName": "resource_group_name",
                "returnTrackings": "return_tracking",
                "serialNumber": "serial_number",
                "shipmentAddress": "shipment_address",
                "shipmentHistories": "shipment_history",
                "shipmentTrackings": "shipment_tracking",
                "statuses": "status"
            },
            "azure:databricks/AccessConnectorIdentity:AccessConnectorIdentity": {
                "identityIds": "identity_ids",
                "principalId": "principal_id",
                "tenantId": "tenant_id"
            },
            "azure:databricks/WorkspaceCustomParameters:WorkspaceCustomParameters": {
                "machineLearningWorkspaceId": "machine_learning_workspace_id",
                "natGatewayName": "nat_gateway_name",
                "noPublicIp": "no_public_ip",
                "privateSubnetName": "private_subnet_name",
                "privateSubnetNetworkSecurityGroupAssociationId": "private_subnet_network_security_group_association_id",
                "publicIpName": "public_ip_name",
                "publicSubnetName": "public_subnet_name",
                "publicSubnetNetworkSecurityGroupAssociationId": "public_subnet_network_security_group_association_id",
                "storageAccountName": "storage_account_name",
                "storageAccountSkuName": "storage_account_sku_name",
                "virtualNetworkId": "virtual_network_id",
                "vnetAddressPrefix": "vnet_address_prefix"
            },
            "azure:databricks/WorkspaceManagedDiskIdentity:WorkspaceManagedDiskIdentity": {
                "principalId": "principal_id",
                "tenantId": "tenant_id"
            },
            "azure:databricks/WorkspaceStorageAccountIdentity:WorkspaceStorageAccountIdentity": {
                "principalId": "principal_id",
                "tenantId": "tenant_id"
            },
            "azure:databricks/accessConnector:AccessConnector": {
                "resourceGroupName": "resource_group_name"
            },
            "azure:databricks/getWorkspace:getWorkspace": {
                "managedDiskIdentities": "managed_disk_identity",
                "resourceGroupName": "resource_group_name",
                "storageAccountIdentities": "storage_account_identity",
                "workspaceId": "workspace_id",
                "workspaceUrl": "workspace_url"
            },
            "azure:databricks/getWorkspaceManagedDiskIdentity:getWorkspaceManagedDiskIdentity": {
                "principalId": "principal_id",
                "tenantId": "tenant_id"
            },
            "azure:databricks/getWorkspacePrivateEndpointConnection:getWorkspacePrivateEndpointConnection": {
                "privateEndpointId": "private_endpoint_id",
                "workspaceId": "workspace_id"
            },
            "azure:databricks/getWorkspacePrivateEndpointConnectionConnection:getWorkspacePrivateEndpointConnectionConnection": {
                "actionRequired": "action_required",
                "workspacePrivateEndpointId": "workspace_private_endpoint_id"
            },
            "azure:databricks/getWorkspaceStorageAccountIdentity:getWorkspaceStorageAccountIdentity": {
                "principalId": "principal_id",
                "tenantId": "tenant_id"
            },
            "azure:databricks/virtualNetworkPeering:VirtualNetworkPeering": {
                "addressSpacePrefixes": "address_space_prefixes",
                "allowForwardedTraffic": "allow_forwarded_traffic",
                "allowGatewayTransit": "allow_gateway_transit",
                "allowVirtualNetworkAccess": "allow_virtual_network_access",
                "remoteAddressSpacePrefixes": "remote_address_space_prefixes",
                "remoteVirtualNetworkId": "remote_virtual_network_id",
                "resourceGroupName": "resource_group_name",
                "useRemoteGateways": "use_remote_gateways",
                "virtualNetworkId": "virtual_network_id",
                "workspaceId": "workspace_id"
            },
            "azure:databricks/workspace:Workspace": {
                "customParameters": "custom_parameters",
                "customerManagedKeyEnabled": "customer_managed_key_enabled",
                "diskEncryptionSetId": "disk_encryption_set_id",
                "infrastructureEncryptionEnabled": "infrastructure_encryption_enabled",
                "loadBalancerBackendAddressPoolId": "load_balancer_backend_address_pool_id",
                "managedDiskCmkKeyVaultKeyId": "managed_disk_cmk_key_vault_key_id",
                "managedDiskCmkRotationToLatestVersionEnabled": "managed_disk_cmk_rotation_to_latest_version_enabled",
                "managedDiskIdentities": "managed_disk_identity",
                "managedResourceGroupId": "managed_resource_group_id",
                "managedResourceGroupName": "managed_resource_group_name",
                "managedServicesCmkKeyVaultKeyId": "managed_services_cmk_key_vault_key_id",
                "networkSecurityGroupRulesRequired": "network_security_group_rules_required",
                "publicNetworkAccessEnabled": "public_network_access_enabled",
                "resourceGroupName": "resource_group_name",
                "storageAccountIdentities": "storage_account_identity",
                "workspaceId": "workspace_id",
                "workspaceUrl": "workspace_url"
            },
            "azure:databricks/workspaceCustomerManagedKey:WorkspaceCustomerManagedKey": {
                "keyVaultKeyId": "key_vault_key_id",
                "workspaceId": "workspace_id"
            },
            "azure:databricks/workspaceRootDbfsCustomerManagedKey:WorkspaceRootDbfsCustomerManagedKey": {
                "keyVaultKeyId": "key_vault_key_id",
                "workspaceId": "workspace_id"
            },
            "azure:datadog/MonitorDatadogOrganization:MonitorDatadogOrganization": {
                "apiKey": "api_key",
                "applicationKey": "application_key",
                "enterpriseAppId": "enterprise_app_id",
                "linkingAuthCode": "linking_auth_code",
                "linkingClientId": "linking_client_id",
                "redirectUri": "redirect_uri"
            },
            "azure:datadog/MonitorIdentity:MonitorIdentity": {
                "principalId": "principal_id",
                "tenantId": "tenant_id"
            },
            "azure:datadog/MonitorTagRuleLog:MonitorTagRuleLog": {
                "aadLogEnabled": "aad_log_enabled",
                "filters": "filter",
                "resourceLogEnabled": "resource_log_enabled",
                "subscriptionLogEnabled": "subscription_log_enabled"
            },
            "azure:datadog/MonitorTagRuleMetric:MonitorTagRuleMetric": {
                "filters": "filter"
            },
            "azure:datadog/MonitorUser:MonitorUser": {
                "phoneNumber": "phone_number"
            },
            "azure:datadog/monitor:Monitor": {
                "datadogOrganization": "datadog_organization",
                "marketplaceSubscriptionStatus": "marketplace_subscription_status",
                "monitoringEnabled": "monitoring_enabled",
                "resourceGroupName": "resource_group_name",
                "skuName": "sku_name"
            },
            "azure:datadog/monitorSsoConfiguration:MonitorSsoConfiguration": {
                "datadogMonitorId": "datadog_monitor_id",
                "enterpriseApplicationId": "enterprise_application_id",
                "loginUrl": "login_url",
                "singleSignOnEnabled": "single_sign_on_enabled"
            },
            "azure:datadog/monitorTagRule:MonitorTagRule": {
                "datadogMonitorId": "datadog_monitor_id",
                "logs": "log",
                "metrics": "metric"
            },
            "azure:datafactory/DataFlowSink:DataFlowSink": {
                "linkedService": "linked_service",
                "rejectedLinkedService": "rejected_linked_service",
                "schemaLinkedService": "schema_linked_service"
            },
            "azure:datafactory/DataFlowSinkFlowlet:DataFlowSinkFlowlet": {
                "datasetParameters": "dataset_parameters"
            },
            "azure:datafactory/DataFlowSource:DataFlowSource": {
                "linkedService": "linked_service",
                "rejectedLinkedService": "rejected_linked_service",
                "schemaLinkedService": "schema_linked_service"
            },
            "azure:datafactory/DataFlowSourceFlowlet:DataFlowSourceFlowlet": {
                "datasetParameters": "dataset_parameters"
            },
            "azure:datafactory/DataFlowTransformation:DataFlowTransformation": {
                "linkedService": "linked_service"
            },
            "azure:datafactory/DataFlowTransformationFlowlet:DataFlowTransformationFlowlet": {
                "datasetParameters": "dataset_parameters"
            },
            "azure:datafactory/DatasetBinaryAzureBlobStorageLocation:DatasetBinaryAzureBlobStorageLocation": {
                "dynamicContainerEnabled": "dynamic_container_enabled",
                "dynamicFilenameEnabled": "dynamic_filename_enabled",
                "dynamicPathEnabled": "dynamic_path_enabled"
            },
            "azure:datafactory/DatasetBinaryHttpServerLocation:DatasetBinaryHttpServerLocation": {
                "dynamicFilenameEnabled": "dynamic_filename_enabled",
                "dynamicPathEnabled": "dynamic_path_enabled",
                "relativeUrl": "relative_url"
            },
            "azure:datafactory/DatasetBinarySftpServerLocation:DatasetBinarySftpServerLocation": {
                "dynamicFilenameEnabled": "dynamic_filename_enabled",
                "dynamicPathEnabled": "dynamic_path_enabled"
            },
            "azure:datafactory/DatasetDelimitedTextAzureBlobFsLocation:DatasetDelimitedTextAzureBlobFsLocation": {
                "dynamicFileSystemEnabled": "dynamic_file_system_enabled",
                "dynamicFilenameEnabled": "dynamic_filename_enabled",
                "dynamicPathEnabled": "dynamic_path_enabled",
                "fileSystem": "file_system"
            },
            "azure:datafactory/DatasetDelimitedTextAzureBlobStorageLocation:DatasetDelimitedTextAzureBlobStorageLocation": {
                "dynamicContainerEnabled": "dynamic_container_enabled",
                "dynamicFilenameEnabled": "dynamic_filename_enabled",
                "dynamicPathEnabled": "dynamic_path_enabled"
            },
            "azure:datafactory/DatasetDelimitedTextHttpServerLocation:DatasetDelimitedTextHttpServerLocation": {
                "dynamicFilenameEnabled": "dynamic_filename_enabled",
                "dynamicPathEnabled": "dynamic_path_enabled",
                "relativeUrl": "relative_url"
            },
            "azure:datafactory/DatasetJsonAzureBlobStorageLocation:DatasetJsonAzureBlobStorageLocation": {
                "dynamicContainerEnabled": "dynamic_container_enabled",
                "dynamicFilenameEnabled": "dynamic_filename_enabled",
                "dynamicPathEnabled": "dynamic_path_enabled"
            },
            "azure:datafactory/DatasetJsonHttpServerLocation:DatasetJsonHttpServerLocation": {
                "dynamicFilenameEnabled": "dynamic_filename_enabled",
                "dynamicPathEnabled": "dynamic_path_enabled",
                "relativeUrl": "relative_url"
            },
            "azure:datafactory/DatasetParquetAzureBlobFsLocation:DatasetParquetAzureBlobFsLocation": {
                "dynamicFileSystemEnabled": "dynamic_file_system_enabled",
                "dynamicFilenameEnabled": "dynamic_filename_enabled",
                "dynamicPathEnabled": "dynamic_path_enabled",
                "fileSystem": "file_system"
            },
            "azure:datafactory/DatasetParquetAzureBlobStorageLocation:DatasetParquetAzureBlobStorageLocation": {
                "dynamicContainerEnabled": "dynamic_container_enabled",
                "dynamicFilenameEnabled": "dynamic_filename_enabled",
                "dynamicPathEnabled": "dynamic_path_enabled"
            },
            "azure:datafactory/DatasetParquetHttpServerLocation:DatasetParquetHttpServerLocation": {
                "dynamicFilenameEnabled": "dynamic_filename_enabled",
                "dynamicPathEnabled": "dynamic_path_enabled",
                "relativeUrl": "relative_url"
            },
            "azure:datafactory/FactoryGithubConfiguration:FactoryGithubConfiguration": {
                "accountName": "account_name",
                "branchName": "branch_name",
                "gitUrl": "git_url",
                "publishingEnabled": "publishing_enabled",
                "repositoryName": "repository_name",
                "rootFolder": "root_folder"
            },
            "azure:datafactory/FactoryIdentity:FactoryIdentity": {
                "identityIds": "identity_ids",
                "principalId": "principal_id",
                "tenantId": "tenant_id"
            },
            "azure:datafactory/FactoryVstsConfiguration:FactoryVstsConfiguration": {
                "accountName": "account_name",
                "branchName": "branch_name",
                "projectName": "project_name",
                "publishingEnabled": "publishing_enabled",
                "repositoryName": "repository_name",
                "rootFolder": "root_folder",
                "tenantId": "tenant_id"
            },
            "azure:datafactory/FlowletDataFlowSink:FlowletDataFlowSink": {
                "linkedService": "linked_service",
                "rejectedLinkedService": "rejected_linked_service",
                "schemaLinkedService": "schema_linked_service"
            },
            "azure:datafactory/FlowletDataFlowSinkFlowlet:FlowletDataFlowSinkFlowlet": {
                "datasetParameters": "dataset_parameters"
            },
            "azure:datafactory/FlowletDataFlowSource:FlowletDataFlowSource": {
                "linkedService": "linked_service",
                "rejectedLinkedService": "rejected_linked_service",
                "schemaLinkedService": "schema_linked_service"
            },
            "azure:datafactory/FlowletDataFlowSourceFlowlet:FlowletDataFlowSourceFlowlet": {
                "datasetParameters": "dataset_parameters"
            },
            "azure:datafactory/FlowletDataFlowTransformation:FlowletDataFlowTransformation": {
                "linkedService": "linked_service"
            },
            "azure:datafactory/FlowletDataFlowTransformationFlowlet:FlowletDataFlowTransformationFlowlet": {
                "datasetParameters": "dataset_parameters"
            },
            "azure:datafactory/IntegrationRuntimeManagedCatalogInfo:IntegrationRuntimeManagedCatalogInfo": {
                "administratorLogin": "administrator_login",
                "administratorPassword": "administrator_password",
                "pricingTier": "pricing_tier",
                "serverEndpoint": "server_endpoint"
            },
            "azure:datafactory/IntegrationRuntimeManagedCustomSetupScript:IntegrationRuntimeManagedCustomSetupScript": {
                "blobContainerUri": "blob_container_uri",
                "sasToken": "sas_token"
            },
            "azure:datafactory/IntegrationRuntimeManagedVnetIntegration:IntegrationRuntimeManagedVnetIntegration": {
                "subnetName": "subnet_name",
                "vnetId": "vnet_id"
            },
            "azure:datafactory/IntegrationRuntimeSelfHostedRbacAuthorization:IntegrationRuntimeSelfHostedRbacAuthorization": {
                "resourceId": "resource_id"
            },
            "azure:datafactory/IntegrationRuntimeSsisCatalogInfo:IntegrationRuntimeSsisCatalogInfo": {
                "administratorLogin": "administrator_login",
                "administratorPassword": "administrator_password",
                "dualStandbyPairName": "dual_standby_pair_name",
                "elasticPoolName": "elastic_pool_name",
                "pricingTier": "pricing_tier",
                "serverEndpoint": "server_endpoint"
            },
            "azure:datafactory/IntegrationRuntimeSsisCustomSetupScript:IntegrationRuntimeSsisCustomSetupScript": {
                "blobContainerUri": "blob_container_uri",
                "sasToken": "sas_token"
            },
            "azure:datafactory/IntegrationRuntimeSsisExpressCustomSetup:IntegrationRuntimeSsisExpressCustomSetup": {
                "commandKeys": "command_key",
                "components": "component",
                "powershellVersion": "powershell_version"
            },
            "azure:datafactory/IntegrationRuntimeSsisExpressCustomSetupCommandKey:IntegrationRuntimeSsisExpressCustomSetupCommandKey": {
                "keyVaultPassword": "key_vault_password",
                "targetName": "target_name",
                "userName": "user_name"
            },
            "azure:datafactory/IntegrationRuntimeSsisExpressCustomSetupCommandKeyKeyVaultPassword:IntegrationRuntimeSsisExpressCustomSetupCommandKeyKeyVaultPassword": {
                "linkedServiceName": "linked_service_name",
                "secretName": "secret_name",
                "secretVersion": "secret_version"
            },
            "azure:datafactory/IntegrationRuntimeSsisExpressCustomSetupComponent:IntegrationRuntimeSsisExpressCustomSetupComponent": {
                "keyVaultLicense": "key_vault_license"
            },
            "azure:datafactory/IntegrationRuntimeSsisExpressCustomSetupComponentKeyVaultLicense:IntegrationRuntimeSsisExpressCustomSetupComponentKeyVaultLicense": {
                "linkedServiceName": "linked_service_name",
                "secretName": "secret_name",
                "secretVersion": "secret_version"
            },
            "azure:datafactory/IntegrationRuntimeSsisExpressVnetIntegration:IntegrationRuntimeSsisExpressVnetIntegration": {
                "subnetId": "subnet_id"
            },
            "azure:datafactory/IntegrationRuntimeSsisPackageStore:IntegrationRuntimeSsisPackageStore": {
                "linkedServiceName": "linked_service_name"
            },
            "azure:datafactory/IntegrationRuntimeSsisProxy:IntegrationRuntimeSsisProxy": {
                "selfHostedIntegrationRuntimeName": "self_hosted_integration_runtime_name",
                "stagingStorageLinkedServiceName": "staging_storage_linked_service_name"
            },
            "azure:datafactory/IntegrationRuntimeSsisVnetIntegration:IntegrationRuntimeSsisVnetIntegration": {
                "publicIps": "public_ips",
                "subnetId": "subnet_id",
                "subnetName": "subnet_name",
                "vnetId": "vnet_id"
            },
            "azure:datafactory/LinkedServiceAzureBlobStorageKeyVaultSasToken:LinkedServiceAzureBlobStorageKeyVaultSasToken": {
                "linkedServiceName": "linked_service_name",
                "secretName": "secret_name"
            },
            "azure:datafactory/LinkedServiceAzureBlobStorageServicePrincipalLinkedKeyVaultKey:LinkedServiceAzureBlobStorageServicePrincipalLinkedKeyVaultKey": {
                "linkedServiceName": "linked_service_name",
                "secretName": "secret_name"
            },
            "azure:datafactory/LinkedServiceAzureDatabricksInstancePool:LinkedServiceAzureDatabricksInstancePool": {
                "clusterVersion": "cluster_version",
                "instancePoolId": "instance_pool_id",
                "maxNumberOfWorkers": "max_number_of_workers",
                "minNumberOfWorkers": "min_number_of_workers"
            },
            "azure:datafactory/LinkedServiceAzureDatabricksKeyVaultPassword:LinkedServiceAzureDatabricksKeyVaultPassword": {
                "linkedServiceName": "linked_service_name",
                "secretName": "secret_name"
            },
            "azure:datafactory/LinkedServiceAzureDatabricksNewClusterConfig:LinkedServiceAzureDatabricksNewClusterConfig": {
                "clusterVersion": "cluster_version",
                "customTags": "custom_tags",
                "driverNodeType": "driver_node_type",
                "initScripts": "init_scripts",
                "logDestination": "log_destination",
                "maxNumberOfWorkers": "max_number_of_workers",
                "minNumberOfWorkers": "min_number_of_workers",
                "nodeType": "node_type",
                "sparkConfig": "spark_config",
                "sparkEnvironmentVariables": "spark_environment_variables"
            },
            "azure:datafactory/LinkedServiceAzureFileStorageKeyVaultPassword:LinkedServiceAzureFileStorageKeyVaultPassword": {
                "linkedServiceName": "linked_service_name",
                "secretName": "secret_name"
            },
            "azure:datafactory/LinkedServiceAzureFunctionKeyVaultKey:LinkedServiceAzureFunctionKeyVaultKey": {
                "linkedServiceName": "linked_service_name",
                "secretName": "secret_name"
            },
            "azure:datafactory/LinkedServiceAzureSqlDatabaseKeyVaultConnectionString:LinkedServiceAzureSqlDatabaseKeyVaultConnectionString": {
                "linkedServiceName": "linked_service_name",
                "secretName": "secret_name"
            },
            "azure:datafactory/LinkedServiceAzureSqlDatabaseKeyVaultPassword:LinkedServiceAzureSqlDatabaseKeyVaultPassword": {
                "linkedServiceName": "linked_service_name",
                "secretName": "secret_name"
            },
            "azure:datafactory/LinkedServiceSnowflakeKeyVaultPassword:LinkedServiceSnowflakeKeyVaultPassword": {
                "linkedServiceName": "linked_service_name",
                "secretName": "secret_name"
            },
            "azure:datafactory/LinkedServiceSqlServerKeyVaultConnectionString:LinkedServiceSqlServerKeyVaultConnectionString": {
                "linkedServiceName": "linked_service_name",
                "secretName": "secret_name"
            },
            "azure:datafactory/LinkedServiceSqlServerKeyVaultPassword:LinkedServiceSqlServerKeyVaultPassword": {
                "linkedServiceName": "linked_service_name",
                "secretName": "secret_name"
            },
            "azure:datafactory/LinkedServiceSynapseKeyVaultPassword:LinkedServiceSynapseKeyVaultPassword": {
                "linkedServiceName": "linked_service_name",
                "secretName": "secret_name"
            },
            "azure:datafactory/TriggerScheduleSchedule:TriggerScheduleSchedule": {
                "daysOfMonths": "days_of_month",
                "daysOfWeeks": "days_of_week",
                "monthlies": "monthly"
            },
            "azure:datafactory/TriggerTumblingWindowTriggerDependency:TriggerTumblingWindowTriggerDependency": {
                "triggerName": "trigger_name"
            },
            "azure:datafactory/customDataset:CustomDataset": {
                "additionalProperties": "additional_properties",
                "dataFactoryId": "data_factory_id",
                "linkedService": "linked_service",
                "schemaJson": "schema_json",
                "typePropertiesJson": "type_properties_json"
            },
            "azure:datafactory/dataFlow:DataFlow": {
                "dataFactoryId": "data_factory_id",
                "scriptLines": "script_lines",
                "sinks": "sink",
                "sources": "source",
                "transformations": "transformation"
            },
            "azure:datafactory/datasetAzureBlob:DatasetAzureBlob": {
                "additionalProperties": "additional_properties",
                "dataFactoryId": "data_factory_id",
                "dynamicFilenameEnabled": "dynamic_filename_enabled",
                "dynamicPathEnabled": "dynamic_path_enabled",
                "linkedServiceName": "linked_service_name",
                "schemaColumns": "schema_column"
            },
            "azure:datafactory/datasetAzureSqlTable:DatasetAzureSqlTable": {
                "additionalProperties": "additional_properties",
                "dataFactoryId": "data_factory_id",
                "linkedServiceId": "linked_service_id",
                "schemaColumns": "schema_column"
            },
            "azure:datafactory/datasetBinary:DatasetBinary": {
                "additionalProperties": "additional_properties",
                "azureBlobStorageLocation": "azure_blob_storage_location",
                "dataFactoryId": "data_factory_id",
                "httpServerLocation": "http_server_location",
                "linkedServiceName": "linked_service_name",
                "sftpServerLocation": "sftp_server_location"
            },
            "azure:datafactory/datasetCosmosDBApi:DatasetCosmosDBApi": {
                "additionalProperties": "additional_properties",
                "collectionName": "collection_name",
                "dataFactoryId": "data_factory_id",
                "linkedServiceName": "linked_service_name",
                "schemaColumns": "schema_column"
            },
            "azure:datafactory/datasetDelimitedText:DatasetDelimitedText": {
                "additionalProperties": "additional_properties",
                "azureBlobFsLocation": "azure_blob_fs_location",
                "azureBlobStorageLocation": "azure_blob_storage_location",
                "columnDelimiter": "column_delimiter",
                "compressionCodec": "compression_codec",
                "compressionLevel": "compression_level",
                "dataFactoryId": "data_factory_id",
                "escapeCharacter": "escape_character",
                "firstRowAsHeader": "first_row_as_header",
                "httpServerLocation": "http_server_location",
                "linkedServiceName": "linked_service_name",
                "nullValue": "null_value",
                "quoteCharacter": "quote_character",
                "rowDelimiter": "row_delimiter",
                "schemaColumns": "schema_column"
            },
            "azure:datafactory/datasetHttp:DatasetHttp": {
                "additionalProperties": "additional_properties",
                "dataFactoryId": "data_factory_id",
                "linkedServiceName": "linked_service_name",
                "relativeUrl": "relative_url",
                "requestBody": "request_body",
                "requestMethod": "request_method",
                "schemaColumns": "schema_column"
            },
            "azure:datafactory/datasetJson:DatasetJson": {
                "additionalProperties": "additional_properties",
                "azureBlobStorageLocation": "azure_blob_storage_location",
                "dataFactoryId": "data_factory_id",
                "httpServerLocation": "http_server_location",
                "linkedServiceName": "linked_service_name",
                "schemaColumns": "schema_column"
            },
            "azure:datafactory/datasetMysql:DatasetMysql": {
                "additionalProperties": "additional_properties",
                "dataFactoryId": "data_factory_id",
                "linkedServiceName": "linked_service_name",
                "schemaColumns": "schema_column",
                "tableName": "table_name"
            },
            "azure:datafactory/datasetParquet:DatasetParquet": {
                "additionalProperties": "additional_properties",
                "azureBlobFsLocation": "azure_blob_fs_location",
                "azureBlobStorageLocation": "azure_blob_storage_location",
                "compressionCodec": "compression_codec",
                "compressionLevel": "compression_level",
                "dataFactoryId": "data_factory_id",
                "httpServerLocation": "http_server_location",
                "linkedServiceName": "linked_service_name",
                "schemaColumns": "schema_column"
            },
            "azure:datafactory/datasetPostgresql:DatasetPostgresql": {
                "additionalProperties": "additional_properties",
                "dataFactoryId": "data_factory_id",
                "linkedServiceName": "linked_service_name",
                "schemaColumns": "schema_column",
                "tableName": "table_name"
            },
            "azure:datafactory/datasetSnowflake:DatasetSnowflake": {
                "additionalProperties": "additional_properties",
                "dataFactoryId": "data_factory_id",
                "linkedServiceName": "linked_service_name",
                "schemaColumns": "schema_column",
                "schemaName": "schema_name",
                "tableName": "table_name"
            },
            "azure:datafactory/datasetSqlServerTable:DatasetSqlServerTable": {
                "additionalProperties": "additional_properties",
                "dataFactoryId": "data_factory_id",
                "linkedServiceName": "linked_service_name",
                "schemaColumns": "schema_column",
                "tableName": "table_name"
            },
            "azure:datafactory/factory:Factory": {
                "customerManagedKeyId": "customer_managed_key_id",
                "customerManagedKeyIdentityId": "customer_managed_key_identity_id",
                "githubConfiguration": "github_configuration",
                "globalParameters": "global_parameter",
                "managedVirtualNetworkEnabled": "managed_virtual_network_enabled",
                "publicNetworkEnabled": "public_network_enabled",
                "purviewId": "purview_id",
                "resourceGroupName": "resource_group_name",
                "vstsConfiguration": "vsts_configuration"
            },
            "azure:datafactory/flowletDataFlow:FlowletDataFlow": {
                "dataFactoryId": "data_factory_id",
                "scriptLines": "script_lines",
                "sinks": "sink",
                "sources": "source",
                "transformations": "transformation"
            },
            "azure:datafactory/getFactory:getFactory": {
                "githubConfigurations": "github_configuration",
                "identities": "identity",
                "resourceGroupName": "resource_group_name",
                "vstsConfigurations": "vsts_configuration"
            },
            "azure:datafactory/getFactoryGithubConfiguration:getFactoryGithubConfiguration": {
                "accountName": "account_name",
                "branchName": "branch_name",
                "gitUrl": "git_url",
                "repositoryName": "repository_name",
                "rootFolder": "root_folder"
            },
            "azure:datafactory/getFactoryIdentity:getFactoryIdentity": {
                "identityIds": "identity_ids",
                "principalId": "principal_id",
                "tenantId": "tenant_id"
            },
            "azure:datafactory/getFactoryVstsConfiguration:getFactoryVstsConfiguration": {
                "accountName": "account_name",
                "branchName": "branch_name",
                "projectName": "project_name",
                "repositoryName": "repository_name",
                "rootFolder": "root_folder",
                "tenantId": "tenant_id"
            },
            "azure:datafactory/integrationRuntimeManaged:IntegrationRuntimeManaged": {
                "catalogInfo": "catalog_info",
                "customSetupScript": "custom_setup_script",
                "dataFactoryId": "data_factory_id",
                "licenseType": "license_type",
                "maxParallelExecutionsPerNode": "max_parallel_executions_per_node",
                "nodeSize": "node_size",
                "numberOfNodes": "number_of_nodes",
                "vnetIntegration": "vnet_integration"
            },
            "azure:datafactory/integrationRuntimeRule:IntegrationRuntimeRule": {
                "cleanupEnabled": "cleanup_enabled",
                "computeType": "compute_type",
                "coreCount": "core_count",
                "dataFactoryId": "data_factory_id",
                "timeToLiveMin": "time_to_live_min",
                "virtualNetworkEnabled": "virtual_network_enabled"
            },
            "azure:datafactory/integrationRuntimeSelfHosted:IntegrationRuntimeSelfHosted": {
                "dataFactoryId": "data_factory_id",
                "primaryAuthorizationKey": "primary_authorization_key",
                "rbacAuthorizations": "rbac_authorization",
                "secondaryAuthorizationKey": "secondary_authorization_key"
            },
            "azure:datafactory/integrationRuntimeSsis:IntegrationRuntimeSsis": {
                "catalogInfo": "catalog_info",
                "customSetupScript": "custom_setup_script",
                "dataFactoryId": "data_factory_id",
                "expressCustomSetup": "express_custom_setup",
                "expressVnetIntegration": "express_vnet_integration",
                "licenseType": "license_type",
                "maxParallelExecutionsPerNode": "max_parallel_executions_per_node",
                "nodeSize": "node_size",
                "numberOfNodes": "number_of_nodes",
                "packageStores": "package_store",
                "vnetIntegration": "vnet_integration"
            },
            "azure:datafactory/linkedCustomService:LinkedCustomService": {
                "additionalProperties": "additional_properties",
                "dataFactoryId": "data_factory_id",
                "integrationRuntime": "integration_runtime",
                "typePropertiesJson": "type_properties_json"
            },
            "azure:datafactory/linkedServiceAzureBlobStorage:LinkedServiceAzureBlobStorage": {
                "additionalProperties": "additional_properties",
                "connectionString": "connection_string",
                "connectionStringInsecure": "connection_string_insecure",
                "dataFactoryId": "data_factory_id",
                "integrationRuntimeName": "integration_runtime_name",
                "keyVaultSasToken": "key_vault_sas_token",
                "sasUri": "sas_uri",
                "serviceEndpoint": "service_endpoint",
                "servicePrincipalId": "service_principal_id",
                "servicePrincipalKey": "service_principal_key",
                "servicePrincipalLinkedKeyVaultKey": "service_principal_linked_key_vault_key",
                "storageKind": "storage_kind",
                "tenantId": "tenant_id",
                "useManagedIdentity": "use_managed_identity"
            },
            "azure:datafactory/linkedServiceAzureDatabricks:LinkedServiceAzureDatabricks": {
                "accessToken": "access_token",
                "adbDomain": "adb_domain",
                "additionalProperties": "additional_properties",
                "dataFactoryId": "data_factory_id",
                "existingClusterId": "existing_cluster_id",
                "instancePool": "instance_pool",
                "integrationRuntimeName": "integration_runtime_name",
                "keyVaultPassword": "key_vault_password",
                "msiWorkSpaceResourceId": "msi_work_space_resource_id",
                "newClusterConfig": "new_cluster_config"
            },
            "azure:datafactory/linkedServiceAzureFileStorage:LinkedServiceAzureFileStorage": {
                "additionalProperties": "additional_properties",
                "connectionString": "connection_string",
                "dataFactoryId": "data_factory_id",
                "fileShare": "file_share",
                "integrationRuntimeName": "integration_runtime_name",
                "keyVaultPassword": "key_vault_password",
                "userId": "user_id"
            },
            "azure:datafactory/linkedServiceAzureFunction:LinkedServiceAzureFunction": {
                "additionalProperties": "additional_properties",
                "dataFactoryId": "data_factory_id",
                "integrationRuntimeName": "integration_runtime_name",
                "keyVaultKey": "key_vault_key"
            },
            "azure:datafactory/linkedServiceAzureSearch:LinkedServiceAzureSearch": {
                "additionalProperties": "additional_properties",
                "dataFactoryId": "data_factory_id",
                "encryptedCredential": "encrypted_credential",
                "integrationRuntimeName": "integration_runtime_name",
                "searchServiceKey": "search_service_key"
            },
            "azure:datafactory/linkedServiceAzureSqlDatabase:LinkedServiceAzureSqlDatabase": {
                "additionalProperties": "additional_properties",
                "connectionString": "connection_string",
                "dataFactoryId": "data_factory_id",
                "integrationRuntimeName": "integration_runtime_name",
                "keyVaultConnectionString": "key_vault_connection_string",
                "keyVaultPassword": "key_vault_password",
                "servicePrincipalId": "service_principal_id",
                "servicePrincipalKey": "service_principal_key",
                "tenantId": "tenant_id",
                "useManagedIdentity": "use_managed_identity"
            },
            "azure:datafactory/linkedServiceAzureTableStorage:LinkedServiceAzureTableStorage": {
                "additionalProperties": "additional_properties",
                "connectionString": "connection_string",
                "dataFactoryId": "data_factory_id",
                "integrationRuntimeName": "integration_runtime_name"
            },
            "azure:datafactory/linkedServiceCosmosDb:LinkedServiceCosmosDb": {
                "accountEndpoint": "account_endpoint",
                "accountKey": "account_key",
                "additionalProperties": "additional_properties",
                "connectionString": "connection_string",
                "dataFactoryId": "data_factory_id",
                "integrationRuntimeName": "integration_runtime_name"
            },
            "azure:datafactory/linkedServiceCosmosDbMongoApi:LinkedServiceCosmosDbMongoApi": {
                "additionalProperties": "additional_properties",
                "connectionString": "connection_string",
                "dataFactoryId": "data_factory_id",
                "integrationRuntimeName": "integration_runtime_name",
                "serverVersionIs32OrHigher": "server_version_is_32_or_higher"
            },
            "azure:datafactory/linkedServiceDataLakeStorageGen2:LinkedServiceDataLakeStorageGen2": {
                "additionalProperties": "additional_properties",
                "dataFactoryId": "data_factory_id",
                "integrationRuntimeName": "integration_runtime_name",
                "servicePrincipalId": "service_principal_id",
                "servicePrincipalKey": "service_principal_key",
                "storageAccountKey": "storage_account_key",
                "useManagedIdentity": "use_managed_identity"
            },
            "azure:datafactory/linkedServiceKeyVault:LinkedServiceKeyVault": {
                "additionalProperties": "additional_properties",
                "dataFactoryId": "data_factory_id",
                "integrationRuntimeName": "integration_runtime_name",
                "keyVaultId": "key_vault_id"
            },
            "azure:datafactory/linkedServiceKusto:LinkedServiceKusto": {
                "additionalProperties": "additional_properties",
                "dataFactoryId": "data_factory_id",
                "integrationRuntimeName": "integration_runtime_name",
                "kustoDatabaseName": "kusto_database_name",
                "kustoEndpoint": "kusto_endpoint",
                "servicePrincipalId": "service_principal_id",
                "servicePrincipalKey": "service_principal_key",
                "useManagedIdentity": "use_managed_identity"
            },
            "azure:datafactory/linkedServiceMysql:LinkedServiceMysql": {
                "additionalProperties": "additional_properties",
                "connectionString": "connection_string",
                "dataFactoryId": "data_factory_id",
                "integrationRuntimeName": "integration_runtime_name"
            },
            "azure:datafactory/linkedServiceOdata:LinkedServiceOdata": {
                "additionalProperties": "additional_properties",
                "basicAuthentication": "basic_authentication",
                "dataFactoryId": "data_factory_id",
                "integrationRuntimeName": "integration_runtime_name"
            },
            "azure:datafactory/linkedServiceOdbc:LinkedServiceOdbc": {
                "additionalProperties": "additional_properties",
                "basicAuthentication": "basic_authentication",
                "connectionString": "connection_string",
                "dataFactoryId": "data_factory_id",
                "integrationRuntimeName": "integration_runtime_name"
            },
            "azure:datafactory/linkedServicePostgresql:LinkedServicePostgresql": {
                "additionalProperties": "additional_properties",
                "connectionString": "connection_string",
                "dataFactoryId": "data_factory_id",
                "integrationRuntimeName": "integration_runtime_name"
            },
            "azure:datafactory/linkedServiceSftp:LinkedServiceSftp": {
                "additionalProperties": "additional_properties",
                "authenticationType": "authentication_type",
                "dataFactoryId": "data_factory_id",
                "hostKeyFingerprint": "host_key_fingerprint",
                "integrationRuntimeName": "integration_runtime_name",
                "skipHostKeyValidation": "skip_host_key_validation"
            },
            "azure:datafactory/linkedServiceSnowflake:LinkedServiceSnowflake": {
                "additionalProperties": "additional_properties",
                "connectionString": "connection_string",
                "dataFactoryId": "data_factory_id",
                "integrationRuntimeName": "integration_runtime_name",
                "keyVaultPassword": "key_vault_password"
            },
            "azure:datafactory/linkedServiceSqlServer:LinkedServiceSqlServer": {
                "additionalProperties": "additional_properties",
                "connectionString": "connection_string",
                "dataFactoryId": "data_factory_id",
                "integrationRuntimeName": "integration_runtime_name",
                "keyVaultConnectionString": "key_vault_connection_string",
                "keyVaultPassword": "key_vault_password",
                "userName": "user_name"
            },
            "azure:datafactory/linkedServiceSynapse:LinkedServiceSynapse": {
                "additionalProperties": "additional_properties",
                "connectionString": "connection_string",
                "dataFactoryId": "data_factory_id",
                "integrationRuntimeName": "integration_runtime_name",
                "keyVaultPassword": "key_vault_password"
            },
            "azure:datafactory/linkedServiceWeb:LinkedServiceWeb": {
                "additionalProperties": "additional_properties",
                "authenticationType": "authentication_type",
                "dataFactoryId": "data_factory_id",
                "integrationRuntimeName": "integration_runtime_name"
            },
            "azure:datafactory/managedPrivateEndpoint:ManagedPrivateEndpoint": {
                "dataFactoryId": "data_factory_id",
                "subresourceName": "subresource_name",
                "targetResourceId": "target_resource_id"
            },
            "azure:datafactory/pipeline:Pipeline": {
                "activitiesJson": "activities_json",
                "dataFactoryId": "data_factory_id",
                "moniterMetricsAfterDuration": "moniter_metrics_after_duration"
            },
            "azure:datafactory/triggerBlobEvent:TriggerBlobEvent": {
                "additionalProperties": "additional_properties",
                "blobPathBeginsWith": "blob_path_begins_with",
                "blobPathEndsWith": "blob_path_ends_with",
                "dataFactoryId": "data_factory_id",
                "ignoreEmptyBlobs": "ignore_empty_blobs",
                "pipelines": "pipeline",
                "storageAccountId": "storage_account_id"
            },
            "azure:datafactory/triggerCustomEvent:TriggerCustomEvent": {
                "additionalProperties": "additional_properties",
                "dataFactoryId": "data_factory_id",
                "eventgridTopicId": "eventgrid_topic_id",
                "pipelines": "pipeline",
                "subjectBeginsWith": "subject_begins_with",
                "subjectEndsWith": "subject_ends_with"
            },
            "azure:datafactory/triggerSchedule:TriggerSchedule": {
                "dataFactoryId": "data_factory_id",
                "endTime": "end_time",
                "pipelineName": "pipeline_name",
                "pipelineParameters": "pipeline_parameters",
                "pipelines": "pipeline",
                "startTime": "start_time",
                "timeZone": "time_zone"
            },
            "azure:datafactory/triggerTumblingWindow:TriggerTumblingWindow": {
                "additionalProperties": "additional_properties",
                "dataFactoryId": "data_factory_id",
                "endTime": "end_time",
                "maxConcurrency": "max_concurrency",
                "startTime": "start_time",
                "triggerDependencies": "trigger_dependency"
            },
            "azure:dataprotection/BackupPolicyDiskRetentionRuleCriteria:BackupPolicyDiskRetentionRuleCriteria": {
                "absoluteCriteria": "absolute_criteria"
            },
            "azure:dataprotection/BackupPolicyPostgresqlRetentionRuleCriteria:BackupPolicyPostgresqlRetentionRuleCriteria": {
                "absoluteCriteria": "absolute_criteria",
                "daysOfWeeks": "days_of_week",
                "monthsOfYears": "months_of_year",
                "scheduledBackupTimes": "scheduled_backup_times",
                "weeksOfMonths": "weeks_of_month"
            },
            "azure:dataprotection/BackupVaultIdentity:BackupVaultIdentity": {
                "principalId": "principal_id",
                "tenantId": "tenant_id"
            },
            "azure:dataprotection/backupInstanceBlogStorage:BackupInstanceBlogStorage": {
                "backupPolicyId": "backup_policy_id",
                "storageAccountId": "storage_account_id",
                "vaultId": "vault_id"
            },
            "azure:dataprotection/backupInstanceDisk:BackupInstanceDisk": {
                "backupPolicyId": "backup_policy_id",
                "diskId": "disk_id",
                "snapshotResourceGroupName": "snapshot_resource_group_name",
                "vaultId": "vault_id"
            },
            "azure:dataprotection/backupInstancePostgresql:BackupInstancePostgresql": {
                "backupPolicyId": "backup_policy_id",
                "databaseCredentialKeyVaultSecretId": "database_credential_key_vault_secret_id",
                "databaseId": "database_id",
                "vaultId": "vault_id"
            },
            "azure:dataprotection/backupPolicyBlobStorage:BackupPolicyBlobStorage": {
                "retentionDuration": "retention_duration",
                "vaultId": "vault_id"
            },
            "azure:dataprotection/backupPolicyDisk:BackupPolicyDisk": {
                "backupRepeatingTimeIntervals": "backup_repeating_time_intervals",
                "defaultRetentionDuration": "default_retention_duration",
                "retentionRules": "retention_rule",
                "vaultId": "vault_id"
            },
            "azure:dataprotection/backupPolicyPostgresql:BackupPolicyPostgresql": {
                "backupRepeatingTimeIntervals": "backup_repeating_time_intervals",
                "defaultRetentionDuration": "default_retention_duration",
                "resourceGroupName": "resource_group_name",
                "retentionRules": "retention_rule",
                "vaultName": "vault_name"
            },
            "azure:dataprotection/backupVault:BackupVault": {
                "datastoreType": "datastore_type",
                "resourceGroupName": "resource_group_name"
            },
            "azure:dataprotection/getBackupVault:getBackupVault": {
                "datastoreType": "datastore_type",
                "identities": "identity",
                "resourceGroupName": "resource_group_name"
            },
            "azure:dataprotection/getBackupVaultIdentity:getBackupVaultIdentity": {
                "principalId": "principal_id",
                "tenantId": "tenant_id"
            },
            "azure:dataprotection/resourceGuard:ResourceGuard": {
                "resourceGroupName": "resource_group_name",
                "vaultCriticalOperationExclusionLists": "vault_critical_operation_exclusion_list"
            },
            "azure:datashare/AccountIdentity:AccountIdentity": {
                "principalId": "principal_id",
                "tenantId": "tenant_id"
            },
            "azure:datashare/DatasetBlobStorageStorageAccount:DatasetBlobStorageStorageAccount": {
                "resourceGroupName": "resource_group_name",
                "subscriptionId": "subscription_id"
            },
            "azure:datashare/ShareSnapshotSchedule:ShareSnapshotSchedule": {
                "startTime": "start_time"
            },
            "azure:datashare/account:Account": {
                "resourceGroupName": "resource_group_name"
            },
            "azure:datashare/datasetBlobStorage:DatasetBlobStorage": {
                "containerName": "container_name",
                "dataShareId": "data_share_id",
                "displayName": "display_name",
                "filePath": "file_path",
                "folderPath": "folder_path",
                "storageAccount": "storage_account"
            },
            "azure:datashare/datasetDataLakeGen2:DatasetDataLakeGen2": {
                "displayName": "display_name",
                "filePath": "file_path",
                "fileSystemName": "file_system_name",
                "folderPath": "folder_path",
                "shareId": "share_id",
                "storageAccountId": "storage_account_id"
            },
            "azure:datashare/datasetKustoCluster:DatasetKustoCluster": {
                "displayName": "display_name",
                "kustoClusterId": "kusto_cluster_id",
                "kustoClusterLocation": "kusto_cluster_location",
                "shareId": "share_id"
            },
            "azure:datashare/datasetKustoDatabase:DatasetKustoDatabase": {
                "displayName": "display_name",
                "kustoClusterLocation": "kusto_cluster_location",
                "kustoDatabaseId": "kusto_database_id",
                "shareId": "share_id"
            },
            "azure:datashare/getAccount:getAccount": {
                "identities": "identity",
                "resourceGroupName": "resource_group_name"
            },
            "azure:datashare/getAccountIdentity:getAccountIdentity": {
                "principalId": "principal_id",
                "tenantId": "tenant_id"
            },
            "azure:datashare/getDatasetBlobStorage:getDatasetBlobStorage": {
                "containerName": "container_name",
                "dataShareId": "data_share_id",
                "displayName": "display_name",
                "filePath": "file_path",
                "folderPath": "folder_path",
                "storageAccounts": "storage_account"
            },
            "azure:datashare/getDatasetBlobStorageStorageAccount:getDatasetBlobStorageStorageAccount": {
                "resourceGroupName": "resource_group_name",
                "subscriptionId": "subscription_id"
            },
            "azure:datashare/getDatasetDataLakeGen2:getDatasetDataLakeGen2": {
                "displayName": "display_name",
                "filePath": "file_path",
                "fileSystemName": "file_system_name",
                "folderPath": "folder_path",
                "shareId": "share_id",
                "storageAccountId": "storage_account_id"
            },
            "azure:datashare/getDatasetKustoCluster:getDatasetKustoCluster": {
                "displayName": "display_name",
                "kustoClusterId": "kusto_cluster_id",
                "kustoClusterLocation": "kusto_cluster_location",
                "shareId": "share_id"
            },
            "azure:datashare/getDatasetKustoDatabase:getDatasetKustoDatabase": {
                "displayName": "display_name",
                "kustoClusterLocation": "kusto_cluster_location",
                "kustoDatabaseId": "kusto_database_id",
                "shareId": "share_id"
            },
            "azure:datashare/getShare:getShare": {
                "accountId": "account_id",
                "snapshotSchedules": "snapshot_schedule"
            },
            "azure:datashare/getShareSnapshotSchedule:getShareSnapshotSchedule": {
                "startTime": "start_time"
            },
            "azure:datashare/share:Share": {
                "accountId": "account_id",
                "snapshotSchedule": "snapshot_schedule"
            },
            "azure:desktopvirtualization/HostPoolScheduledAgentUpdates:HostPoolScheduledAgentUpdates": {
                "schedules": "schedule",
                "useSessionHostTimezone": "use_session_host_timezone"
            },
            "azure:desktopvirtualization/HostPoolScheduledAgentUpdatesSchedule:HostPoolScheduledAgentUpdatesSchedule": {
                "dayOfWeek": "day_of_week",
                "hourOfDay": "hour_of_day"
            },
            "azure:desktopvirtualization/ScalingPlanHostPool:ScalingPlanHostPool": {
                "hostpoolId": "hostpool_id",
                "scalingPlanEnabled": "scaling_plan_enabled"
            },
            "azure:desktopvirtualization/ScalingPlanSchedule:ScalingPlanSchedule": {
                "daysOfWeeks": "days_of_week",
                "offPeakLoadBalancingAlgorithm": "off_peak_load_balancing_algorithm",
                "offPeakStartTime": "off_peak_start_time",
                "peakLoadBalancingAlgorithm": "peak_load_balancing_algorithm",
                "peakStartTime": "peak_start_time",
                "rampDownCapacityThresholdPercent": "ramp_down_capacity_threshold_percent",
                "rampDownForceLogoffUsers": "ramp_down_force_logoff_users",
                "rampDownLoadBalancingAlgorithm": "ramp_down_load_balancing_algorithm",
                "rampDownMinimumHostsPercent": "ramp_down_minimum_hosts_percent",
                "rampDownNotificationMessage": "ramp_down_notification_message",
                "rampDownStartTime": "ramp_down_start_time",
                "rampDownStopHostsWhen": "ramp_down_stop_hosts_when",
                "rampDownWaitTimeMinutes": "ramp_down_wait_time_minutes",
                "rampUpCapacityThresholdPercent": "ramp_up_capacity_threshold_percent",
                "rampUpLoadBalancingAlgorithm": "ramp_up_load_balancing_algorithm",
                "rampUpMinimumHostsPercent": "ramp_up_minimum_hosts_percent",
                "rampUpStartTime": "ramp_up_start_time"
            },
            "azure:desktopvirtualization/application:Application": {
                "applicationGroupId": "application_group_id",
                "commandLineArgumentPolicy": "command_line_argument_policy",
                "commandLineArguments": "command_line_arguments",
                "friendlyName": "friendly_name",
                "iconIndex": "icon_index",
                "iconPath": "icon_path",
                "showInPortal": "show_in_portal"
            },
            "azure:desktopvirtualization/applicationGroup:ApplicationGroup": {
                "defaultDesktopDisplayName": "default_desktop_display_name",
                "friendlyName": "friendly_name",
                "hostPoolId": "host_pool_id",
                "resourceGroupName": "resource_group_name"
            },
            "azure:desktopvirtualization/getHostPool:getHostPool": {
                "customRdpProperties": "custom_rdp_properties",
                "friendlyName": "friendly_name",
                "loadBalancerType": "load_balancer_type",
                "maximumSessionsAllowed": "maximum_sessions_allowed",
                "personalDesktopAssignmentType": "personal_desktop_assignment_type",
                "preferredAppGroupType": "preferred_app_group_type",
                "resourceGroupName": "resource_group_name",
                "scheduledAgentUpdates": "scheduled_agent_updates",
                "startVmOnConnect": "start_vm_on_connect",
                "validateEnvironment": "validate_environment"
            },
            "azure:desktopvirtualization/getHostPoolRegistrationInfo:getHostPoolRegistrationInfo": {
                "expirationDate": "expiration_date",
                "hostpoolId": "hostpool_id"
            },
            "azure:desktopvirtualization/getHostPoolScheduledAgentUpdate:getHostPoolScheduledAgentUpdate": {
                "schedules": "schedule",
                "useSessionHostTimezone": "use_session_host_timezone"
            },
            "azure:desktopvirtualization/getHostPoolScheduledAgentUpdateSchedule:getHostPoolScheduledAgentUpdateSchedule": {
                "dayOfWeek": "day_of_week",
                "hourOfDay": "hour_of_day"
            },
            "azure:desktopvirtualization/hostPool:HostPool": {
                "customRdpProperties": "custom_rdp_properties",
                "friendlyName": "friendly_name",
                "loadBalancerType": "load_balancer_type",
                "maximumSessionsAllowed": "maximum_sessions_allowed",
                "personalDesktopAssignmentType": "personal_desktop_assignment_type",
                "preferredAppGroupType": "preferred_app_group_type",
                "resourceGroupName": "resource_group_name",
                "scheduledAgentUpdates": "scheduled_agent_updates",
                "startVmOnConnect": "start_vm_on_connect",
                "validateEnvironment": "validate_environment"
            },
            "azure:desktopvirtualization/scalingPlan:ScalingPlan": {
                "exclusionTag": "exclusion_tag",
                "friendlyName": "friendly_name",
                "hostPools": "host_pool",
                "resourceGroupName": "resource_group_name",
                "schedules": "schedule",
                "timeZone": "time_zone"
            },
            "azure:desktopvirtualization/workspace:Workspace": {
                "friendlyName": "friendly_name",
                "publicNetworkAccessEnabled": "public_network_access_enabled",
                "resourceGroupName": "resource_group_name"
            },
            "azure:desktopvirtualization/workspaceApplicationGroupAssociation:WorkspaceApplicationGroupAssociation": {
                "applicationGroupId": "application_group_id",
                "workspaceId": "workspace_id"
            },
            "azure:devcenter/DevCenterIdentity:DevCenterIdentity": {
                "identityIds": "identity_ids",
                "principalId": "principal_id",
                "tenantId": "tenant_id"
            },
            "azure:devcenter/devCenter:DevCenter": {
                "devCenterUri": "dev_center_uri",
                "resourceGroupName": "resource_group_name"
            },
            "azure:devcenter/project:Project": {
                "devCenterId": "dev_center_id",
                "devCenterUri": "dev_center_uri",
                "maximumDevBoxesPerUser": "maximum_dev_boxes_per_user",
                "resourceGroupName": "resource_group_name"
            },
            "azure:devtest/GlobalVMShutdownScheduleNotificationSettings:GlobalVMShutdownScheduleNotificationSettings": {
                "timeInMinutes": "time_in_minutes",
                "webhookUrl": "webhook_url"
            },
            "azure:devtest/LinuxVirtualMachineInboundNatRule:LinuxVirtualMachineInboundNatRule": {
                "backendPort": "backend_port",
                "frontendPort": "frontend_port"
            },
            "azure:devtest/ScheduleNotificationSettings:ScheduleNotificationSettings": {
                "timeInMinutes": "time_in_minutes",
                "webhookUrl": "webhook_url"
            },
            "azure:devtest/ScheduleWeeklyRecurrence:ScheduleWeeklyRecurrence": {
                "weekDays": "week_days"
            },
            "azure:devtest/VirtualNetworkSubnet:VirtualNetworkSubnet": {
                "useInVirtualMachineCreation": "use_in_virtual_machine_creation",
                "usePublicIpAddress": "use_public_ip_address"
            },
            "azure:devtest/WindowsVirtualMachineInboundNatRule:WindowsVirtualMachineInboundNatRule": {
                "backendPort": "backend_port",
                "frontendPort": "frontend_port"
            },
            "azure:devtest/getLab:getLab": {
                "artifactsStorageAccountId": "artifacts_storage_account_id",
                "defaultPremiumStorageAccountId": "default_premium_storage_account_id",
                "defaultStorageAccountId": "default_storage_account_id",
                "keyVaultId": "key_vault_id",
                "premiumDataDiskStorageAccountId": "premium_data_disk_storage_account_id",
                "resourceGroupName": "resource_group_name",
                "storageType": "storage_type",
                "uniqueIdentifier": "unique_identifier"
            },
            "azure:devtest/getVirtualNetwork:getVirtualNetwork": {
                "allowedSubnets": "allowed_subnets",
                "labName": "lab_name",
                "resourceGroupName": "resource_group_name",
                "subnetOverrides": "subnet_overrides",
                "uniqueIdentifier": "unique_identifier"
            },
            "azure:devtest/getVirtualNetworkAllowedSubnet:getVirtualNetworkAllowedSubnet": {
                "allowPublicIp": "allow_public_ip",
                "labSubnetName": "lab_subnet_name",
                "resourceId": "resource_id"
            },
            "azure:devtest/getVirtualNetworkSubnetOverride:getVirtualNetworkSubnetOverride": {
                "labSubnetName": "lab_subnet_name",
                "resourceId": "resource_id",
                "useInVmCreationPermission": "use_in_vm_creation_permission",
                "usePublicIpAddressPermission": "use_public_ip_address_permission",
                "virtualNetworkPoolName": "virtual_network_pool_name"
            },
            "azure:devtest/globalVMShutdownSchedule:GlobalVMShutdownSchedule": {
                "dailyRecurrenceTime": "daily_recurrence_time",
                "notificationSettings": "notification_settings",
                "virtualMachineId": "virtual_machine_id"
            },
            "azure:devtest/lab:Lab": {
                "artifactsStorageAccountId": "artifacts_storage_account_id",
                "defaultPremiumStorageAccountId": "default_premium_storage_account_id",
                "defaultStorageAccountId": "default_storage_account_id",
                "keyVaultId": "key_vault_id",
                "premiumDataDiskStorageAccountId": "premium_data_disk_storage_account_id",
                "resourceGroupName": "resource_group_name",
                "storageType": "storage_type",
                "uniqueIdentifier": "unique_identifier"
            },
            "azure:devtest/linuxVirtualMachine:LinuxVirtualMachine": {
                "allowClaim": "allow_claim",
                "disallowPublicIpAddress": "disallow_public_ip_address",
                "galleryImageReference": "gallery_image_reference",
                "inboundNatRules": "inbound_nat_rule",
                "labName": "lab_name",
                "labSubnetName": "lab_subnet_name",
                "labVirtualNetworkId": "lab_virtual_network_id",
                "resourceGroupName": "resource_group_name",
                "sshKey": "ssh_key",
                "storageType": "storage_type",
                "uniqueIdentifier": "unique_identifier"
            },
            "azure:devtest/policy:Policy": {
                "evaluatorType": "evaluator_type",
                "factData": "fact_data",
                "labName": "lab_name",
                "policySetName": "policy_set_name",
                "resourceGroupName": "resource_group_name"
            },
            "azure:devtest/schedule:Schedule": {
                "dailyRecurrence": "daily_recurrence",
                "hourlyRecurrence": "hourly_recurrence",
                "labName": "lab_name",
                "notificationSettings": "notification_settings",
                "resourceGroupName": "resource_group_name",
                "taskType": "task_type",
                "timeZoneId": "time_zone_id",
                "weeklyRecurrence": "weekly_recurrence"
            },
            "azure:devtest/virtualNetwork:VirtualNetwork": {
                "labName": "lab_name",
                "resourceGroupName": "resource_group_name",
                "uniqueIdentifier": "unique_identifier"
            },
            "azure:devtest/windowsVirtualMachine:WindowsVirtualMachine": {
                "allowClaim": "allow_claim",
                "disallowPublicIpAddress": "disallow_public_ip_address",
                "galleryImageReference": "gallery_image_reference",
                "inboundNatRules": "inbound_nat_rule",
                "labName": "lab_name",
                "labSubnetName": "lab_subnet_name",
                "labVirtualNetworkId": "lab_virtual_network_id",
                "resourceGroupName": "resource_group_name",
                "storageType": "storage_type",
                "uniqueIdentifier": "unique_identifier"
            },
            "azure:digitaltwins/InstanceIdentity:InstanceIdentity": {
                "identityIds": "identity_ids",
                "principalId": "principal_id",
                "tenantId": "tenant_id"
            },
            "azure:digitaltwins/endpointEventGrid:EndpointEventGrid": {
                "deadLetterStorageSecret": "dead_letter_storage_secret",
                "digitalTwinsId": "digital_twins_id",
                "eventgridTopicEndpoint": "eventgrid_topic_endpoint",
                "eventgridTopicPrimaryAccessKey": "eventgrid_topic_primary_access_key",
                "eventgridTopicSecondaryAccessKey": "eventgrid_topic_secondary_access_key"
            },
            "azure:digitaltwins/endpointEventHub:EndpointEventHub": {
                "deadLetterStorageSecret": "dead_letter_storage_secret",
                "digitalTwinsId": "digital_twins_id",
                "eventhubPrimaryConnectionString": "eventhub_primary_connection_string",
                "eventhubSecondaryConnectionString": "eventhub_secondary_connection_string"
            },
            "azure:digitaltwins/endpointServicebus:EndpointServicebus": {
                "deadLetterStorageSecret": "dead_letter_storage_secret",
                "digitalTwinsId": "digital_twins_id",
                "servicebusPrimaryConnectionString": "servicebus_primary_connection_string",
                "servicebusSecondaryConnectionString": "servicebus_secondary_connection_string"
            },
            "azure:digitaltwins/getInstance:getInstance": {
                "hostName": "host_name",
                "resourceGroupName": "resource_group_name"
            },
            "azure:digitaltwins/instance:Instance": {
                "hostName": "host_name",
                "resourceGroupName": "resource_group_name"
            },
            "azure:digitaltwins/timeSeriesDatabaseConnection:TimeSeriesDatabaseConnection": {
                "digitalTwinsId": "digital_twins_id",
                "eventhubConsumerGroupName": "eventhub_consumer_group_name",
                "eventhubName": "eventhub_name",
                "eventhubNamespaceEndpointUri": "eventhub_namespace_endpoint_uri",
                "eventhubNamespaceId": "eventhub_namespace_id",
                "kustoClusterId": "kusto_cluster_id",
                "kustoClusterUri": "kusto_cluster_uri",
                "kustoDatabaseName": "kusto_database_name",
                "kustoTableName": "kusto_table_name"
            },
            "azure:dns/ZoneSoaRecord:ZoneSoaRecord": {
                "expireTime": "expire_time",
                "hostName": "host_name",
                "minimumTtl": "minimum_ttl",
                "refreshTime": "refresh_time",
                "retryTime": "retry_time",
                "serialNumber": "serial_number"
            },
            "azure:dns/aRecord:ARecord": {
                "resourceGroupName": "resource_group_name",
                "targetResourceId": "target_resource_id",
                "zoneName": "zone_name"
            },
            "azure:dns/aaaaRecord:AaaaRecord": {
                "resourceGroupName": "resource_group_name",
                "targetResourceId": "target_resource_id",
                "zoneName": "zone_name"
            },
            "azure:dns/cNameRecord:CNameRecord": {
                "resourceGroupName": "resource_group_name",
                "targetResourceId": "target_resource_id",
                "zoneName": "zone_name"
            },
            "azure:dns/caaRecord:CaaRecord": {
                "records": "record",
                "resourceGroupName": "resource_group_name",
                "zoneName": "zone_name"
            },
            "azure:dns/getAAAARecord:getAAAARecord": {
                "resourceGroupName": "resource_group_name",
                "targetResourceId": "target_resource_id",
                "zoneName": "zone_name"
            },
            "azure:dns/getARecord:getARecord": {
                "resourceGroupName": "resource_group_name",
                "targetResourceId": "target_resource_id",
                "zoneName": "zone_name"
            },
            "azure:dns/getCAARecord:getCAARecord": {
                "records": "record",
                "resourceGroupName": "resource_group_name",
                "zoneName": "zone_name"
            },
            "azure:dns/getCnameRecord:getCnameRecord": {
                "resourceGroupName": "resource_group_name",
                "targetResourceId": "target_resource_id",
                "zoneName": "zone_name"
            },
            "azure:dns/getMxRecord:getMxRecord": {
                "records": "record",
                "resourceGroupName": "resource_group_name",
                "zoneName": "zone_name"
            },
            "azure:dns/getNsRecord:getNsRecord": {
                "resourceGroupName": "resource_group_name",
                "zoneName": "zone_name"
            },
            "azure:dns/getPtrRecord:getPtrRecord": {
                "resourceGroupName": "resource_group_name",
                "zoneName": "zone_name"
            },
            "azure:dns/getSoaRecord:getSoaRecord": {
                "expireTime": "expire_time",
                "hostName": "host_name",
                "minimumTtl": "minimum_ttl",
                "refreshTime": "refresh_time",
                "resourceGroupName": "resource_group_name",
                "retryTime": "retry_time",
                "serialNumber": "serial_number",
                "zoneName": "zone_name"
            },
            "azure:dns/getSrvRecord:getSrvRecord": {
                "records": "record",
                "resourceGroupName": "resource_group_name",
                "zoneName": "zone_name"
            },
            "azure:dns/getTxtRecord:getTxtRecord": {
                "records": "record",
                "resourceGroupName": "resource_group_name",
                "zoneName": "zone_name"
            },
            "azure:dns/getZone:getZone": {
                "maxNumberOfRecordSets": "max_number_of_record_sets",
                "nameServers": "name_servers",
                "numberOfRecordSets": "number_of_record_sets",
                "resourceGroupName": "resource_group_name"
            },
            "azure:dns/mxRecord:MxRecord": {
                "records": "record",
                "resourceGroupName": "resource_group_name",
                "zoneName": "zone_name"
            },
            "azure:dns/nsRecord:NsRecord": {
                "resourceGroupName": "resource_group_name",
                "zoneName": "zone_name"
            },
            "azure:dns/ptrRecord:PtrRecord": {
                "resourceGroupName": "resource_group_name",
                "zoneName": "zone_name"
            },
            "azure:dns/srvRecord:SrvRecord": {
                "records": "record",
                "resourceGroupName": "resource_group_name",
                "zoneName": "zone_name"
            },
            "azure:dns/txtRecord:TxtRecord": {
                "records": "record",
                "resourceGroupName": "resource_group_name",
                "zoneName": "zone_name"
            },
            "azure:dns/zone:Zone": {
                "maxNumberOfRecordSets": "max_number_of_record_sets",
                "nameServers": "name_servers",
                "numberOfRecordSets": "number_of_record_sets",
                "resourceGroupName": "resource_group_name",
                "soaRecord": "soa_record"
            },
            "azure:domainservices/ServiceInitialReplicaSet:ServiceInitialReplicaSet": {
                "domainControllerIpAddresses": "domain_controller_ip_addresses",
                "externalAccessIpAddress": "external_access_ip_address",
                "serviceStatus": "service_status",
                "subnetId": "subnet_id"
            },
            "azure:domainservices/ServiceNotifications:ServiceNotifications": {
                "additionalRecipients": "additional_recipients",
                "notifyDcAdmins": "notify_dc_admins",
                "notifyGlobalAdmins": "notify_global_admins"
            },
            "azure:domainservices/ServiceSecureLdap:ServiceSecureLdap": {
                "certificateExpiry": "certificate_expiry",
                "certificateThumbprint": "certificate_thumbprint",
                "externalAccessEnabled": "external_access_enabled",
                "pfxCertificate": "pfx_certificate",
                "pfxCertificatePassword": "pfx_certificate_password",
                "publicCertificate": "public_certificate"
            },
            "azure:domainservices/ServiceSecurity:ServiceSecurity": {
                "kerberosArmoringEnabled": "kerberos_armoring_enabled",
                "kerberosRc4EncryptionEnabled": "kerberos_rc4_encryption_enabled",
                "ntlmV1Enabled": "ntlm_v1_enabled",
                "syncKerberosPasswords": "sync_kerberos_passwords",
                "syncNtlmPasswords": "sync_ntlm_passwords",
                "syncOnPremPasswords": "sync_on_prem_passwords",
                "tlsV1Enabled": "tls_v1_enabled"
            },
            "azure:domainservices/getService:getService": {
                "deploymentId": "deployment_id",
                "domainConfigurationType": "domain_configuration_type",
                "domainName": "domain_name",
                "filteredSyncEnabled": "filtered_sync_enabled",
                "replicaSets": "replica_sets",
                "resourceGroupName": "resource_group_name",
                "resourceId": "resource_id",
                "secureLdaps": "secure_ldap",
                "securities": "security",
                "syncOwner": "sync_owner",
                "tenantId": "tenant_id"
            },
            "azure:domainservices/getServiceNotification:getServiceNotification": {
                "additionalRecipients": "additional_recipients",
                "notifyDcAdmins": "notify_dc_admins",
                "notifyGlobalAdmins": "notify_global_admins"
            },
            "azure:domainservices/getServiceReplicaSet:getServiceReplicaSet": {
                "domainControllerIpAddresses": "domain_controller_ip_addresses",
                "externalAccessIpAddress": "external_access_ip_address",
                "serviceStatus": "service_status",
                "subnetId": "subnet_id"
            },
            "azure:domainservices/getServiceSecureLdap:getServiceSecureLdap": {
                "certificateExpiry": "certificate_expiry",
                "certificateThumbprint": "certificate_thumbprint",
                "externalAccessEnabled": "external_access_enabled",
                "publicCertificate": "public_certificate"
            },
            "azure:domainservices/getServiceSecurity:getServiceSecurity": {
                "kerberosArmoringEnabled": "kerberos_armoring_enabled",
                "kerberosRc4EncryptionEnabled": "kerberos_rc4_encryption_enabled",
                "ntlmV1Enabled": "ntlm_v1_enabled",
                "syncKerberosPasswords": "sync_kerberos_passwords",
                "syncNtlmPasswords": "sync_ntlm_passwords",
                "syncOnPremPasswords": "sync_on_prem_passwords",
                "tlsV1Enabled": "tls_v1_enabled"
            },
            "azure:domainservices/replicaSet:ReplicaSet": {
                "domainControllerIpAddresses": "domain_controller_ip_addresses",
                "domainServiceId": "domain_service_id",
                "externalAccessIpAddress": "external_access_ip_address",
                "serviceStatus": "service_status",
                "subnetId": "subnet_id"
            },
            "azure:domainservices/service:Service": {
                "deploymentId": "deployment_id",
                "domainConfigurationType": "domain_configuration_type",
                "domainName": "domain_name",
                "filteredSyncEnabled": "filtered_sync_enabled",
                "initialReplicaSet": "initial_replica_set",
                "resourceGroupName": "resource_group_name",
                "resourceId": "resource_id",
                "secureLdap": "secure_ldap",
                "syncOwner": "sync_owner",
                "tenantId": "tenant_id"
            },
            "azure:domainservices/serviceTrust:ServiceTrust": {
                "domainServiceId": "domain_service_id",
                "trustedDomainDnsIps": "trusted_domain_dns_ips",
                "trustedDomainFqdn": "trusted_domain_fqdn"
            },
            "azure:elasticcloud/ElasticsearchLogs:ElasticsearchLogs": {
                "filteringTags": "filtering_tag",
                "sendActivityLogs": "send_activity_logs",
                "sendAzureadLogs": "send_azuread_logs",
                "sendSubscriptionLogs": "send_subscription_logs"
            },
            "azure:elasticcloud/elasticsearch:Elasticsearch": {
                "elasticCloudDeploymentId": "elastic_cloud_deployment_id",
                "elasticCloudEmailAddress": "elastic_cloud_email_address",
                "elasticCloudSsoDefaultUrl": "elastic_cloud_sso_default_url",
                "elasticCloudUserId": "elastic_cloud_user_id",
                "elasticsearchServiceUrl": "elasticsearch_service_url",
                "kibanaServiceUrl": "kibana_service_url",
                "kibanaSsoUri": "kibana_sso_uri",
                "monitoringEnabled": "monitoring_enabled",
                "resourceGroupName": "resource_group_name",
                "skuName": "sku_name"
            },
            "azure:elasticcloud/getElasticsearch:getElasticsearch": {
                "elasticCloudDeploymentId": "elastic_cloud_deployment_id",
                "elasticCloudEmailAddress": "elastic_cloud_email_address",
                "elasticCloudSsoDefaultUrl": "elastic_cloud_sso_default_url",
                "elasticCloudUserId": "elastic_cloud_user_id",
                "elasticsearchServiceUrl": "elasticsearch_service_url",
                "kibanaServiceUrl": "kibana_service_url",
                "kibanaSsoUri": "kibana_sso_uri",
                "monitoringEnabled": "monitoring_enabled",
                "resourceGroupName": "resource_group_name",
                "skuName": "sku_name"
            },
            "azure:elasticcloud/getElasticsearchLog:getElasticsearchLog": {
                "filteringTags": "filtering_tag",
                "sendActivityLogs": "send_activity_logs",
                "sendAzureadLogs": "send_azuread_logs",
                "sendSubscriptionLogs": "send_subscription_logs"
            },
            "azure:elasticsan/elasticSan:ElasticSan": {
                "baseSizeInTib": "base_size_in_tib",
                "extendedSizeInTib": "extended_size_in_tib",
                "resourceGroupName": "resource_group_name",
                "totalIops": "total_iops",
                "totalMbps": "total_mbps",
                "totalSizeInTib": "total_size_in_tib",
                "totalVolumeSizeInGib": "total_volume_size_in_gib",
                "volumeGroupCount": "volume_group_count"
            },
            "azure:eventgrid/DomainIdentity:DomainIdentity": {
                "identityIds": "identity_ids",
                "principalId": "principal_id",
                "tenantId": "tenant_id"
            },
            "azure:eventgrid/DomainInboundIpRule:DomainInboundIpRule": {
                "ipMask": "ip_mask"
            },
            "azure:eventgrid/DomainInputMappingDefaultValues:DomainInputMappingDefaultValues": {
                "dataVersion": "data_version",
                "eventType": "event_type"
            },
            "azure:eventgrid/DomainInputMappingFields:DomainInputMappingFields": {
                "dataVersion": "data_version",
                "eventTime": "event_time",
                "eventType": "event_type"
            },
            "azure:eventgrid/EventSubscriptionAdvancedFilter:EventSubscriptionAdvancedFilter": {
                "boolEquals": "bool_equals",
                "isNotNulls": "is_not_null",
                "isNullOrUndefineds": "is_null_or_undefined",
                "numberGreaterThanOrEquals": "number_greater_than_or_equals",
                "numberGreaterThans": "number_greater_than",
                "numberInRanges": "number_in_range",
                "numberIns": "number_in",
                "numberLessThanOrEquals": "number_less_than_or_equals",
                "numberLessThans": "number_less_than",
                "numberNotInRanges": "number_not_in_range",
                "numberNotIns": "number_not_in",
                "stringBeginsWiths": "string_begins_with",
                "stringContains": "string_contains",
                "stringEndsWiths": "string_ends_with",
                "stringIns": "string_in",
                "stringNotBeginsWiths": "string_not_begins_with",
                "stringNotContains": "string_not_contains",
                "stringNotEndsWiths": "string_not_ends_with",
                "stringNotIns": "string_not_in"
            },
            "azure:eventgrid/EventSubscriptionAzureFunctionEndpoint:EventSubscriptionAzureFunctionEndpoint": {
                "functionId": "function_id",
                "maxEventsPerBatch": "max_events_per_batch",
                "preferredBatchSizeInKilobytes": "preferred_batch_size_in_kilobytes"
            },
            "azure:eventgrid/EventSubscriptionDeadLetterIdentity:EventSubscriptionDeadLetterIdentity": {
                "userAssignedIdentity": "user_assigned_identity"
            },
            "azure:eventgrid/EventSubscriptionDeliveryIdentity:EventSubscriptionDeliveryIdentity": {
                "userAssignedIdentity": "user_assigned_identity"
            },
            "azure:eventgrid/EventSubscriptionDeliveryProperty:EventSubscriptionDeliveryProperty": {
                "headerName": "header_name",
                "sourceField": "source_field"
            },
            "azure:eventgrid/EventSubscriptionRetryPolicy:EventSubscriptionRetryPolicy": {
                "eventTimeToLive": "event_time_to_live",
                "maxDeliveryAttempts": "max_delivery_attempts"
            },
            "azure:eventgrid/EventSubscriptionStorageBlobDeadLetterDestination:EventSubscriptionStorageBlobDeadLetterDestination": {
                "storageAccountId": "storage_account_id",
                "storageBlobContainerName": "storage_blob_container_name"
            },
            "azure:eventgrid/EventSubscriptionStorageQueueEndpoint:EventSubscriptionStorageQueueEndpoint": {
                "queueMessageTimeToLiveInSeconds": "queue_message_time_to_live_in_seconds",
                "queueName": "queue_name",
                "storageAccountId": "storage_account_id"
            },
            "azure:eventgrid/EventSubscriptionSubjectFilter:EventSubscriptionSubjectFilter": {
                "caseSensitive": "case_sensitive",
                "subjectBeginsWith": "subject_begins_with",
                "subjectEndsWith": "subject_ends_with"
            },
            "azure:eventgrid/EventSubscriptionWebhookEndpoint:EventSubscriptionWebhookEndpoint": {
                "activeDirectoryAppIdOrUri": "active_directory_app_id_or_uri",
                "activeDirectoryTenantId": "active_directory_tenant_id",
                "baseUrl": "base_url",
                "maxEventsPerBatch": "max_events_per_batch",
                "preferredBatchSizeInKilobytes": "preferred_batch_size_in_kilobytes"
            },
            "azure:eventgrid/SystemTopicEventSubscriptionAdvancedFilter:SystemTopicEventSubscriptionAdvancedFilter": {
                "boolEquals": "bool_equals",
                "isNotNulls": "is_not_null",
                "isNullOrUndefineds": "is_null_or_undefined",
                "numberGreaterThanOrEquals": "number_greater_than_or_equals",
                "numberGreaterThans": "number_greater_than",
                "numberInRanges": "number_in_range",
                "numberIns": "number_in",
                "numberLessThanOrEquals": "number_less_than_or_equals",
                "numberLessThans": "number_less_than",
                "numberNotInRanges": "number_not_in_range",
                "numberNotIns": "number_not_in",
                "stringBeginsWiths": "string_begins_with",
                "stringContains": "string_contains",
                "stringEndsWiths": "string_ends_with",
                "stringIns": "string_in",
                "stringNotBeginsWiths": "string_not_begins_with",
                "stringNotContains": "string_not_contains",
                "stringNotEndsWiths": "string_not_ends_with",
                "stringNotIns": "string_not_in"
            },
            "azure:eventgrid/SystemTopicEventSubscriptionAzureFunctionEndpoint:SystemTopicEventSubscriptionAzureFunctionEndpoint": {
                "functionId": "function_id",
                "maxEventsPerBatch": "max_events_per_batch",
                "preferredBatchSizeInKilobytes": "preferred_batch_size_in_kilobytes"
            },
            "azure:eventgrid/SystemTopicEventSubscriptionDeadLetterIdentity:SystemTopicEventSubscriptionDeadLetterIdentity": {
                "userAssignedIdentity": "user_assigned_identity"
            },
            "azure:eventgrid/SystemTopicEventSubscriptionDeliveryIdentity:SystemTopicEventSubscriptionDeliveryIdentity": {
                "userAssignedIdentity": "user_assigned_identity"
            },
            "azure:eventgrid/SystemTopicEventSubscriptionDeliveryProperty:SystemTopicEventSubscriptionDeliveryProperty": {
                "headerName": "header_name",
                "sourceField": "source_field"
            },
            "azure:eventgrid/SystemTopicEventSubscriptionRetryPolicy:SystemTopicEventSubscriptionRetryPolicy": {
                "eventTimeToLive": "event_time_to_live",
                "maxDeliveryAttempts": "max_delivery_attempts"
            },
            "azure:eventgrid/SystemTopicEventSubscriptionStorageBlobDeadLetterDestination:SystemTopicEventSubscriptionStorageBlobDeadLetterDestination": {
                "storageAccountId": "storage_account_id",
                "storageBlobContainerName": "storage_blob_container_name"
            },
            "azure:eventgrid/SystemTopicEventSubscriptionStorageQueueEndpoint:SystemTopicEventSubscriptionStorageQueueEndpoint": {
                "queueMessageTimeToLiveInSeconds": "queue_message_time_to_live_in_seconds",
                "queueName": "queue_name",
                "storageAccountId": "storage_account_id"
            },
            "azure:eventgrid/SystemTopicEventSubscriptionSubjectFilter:SystemTopicEventSubscriptionSubjectFilter": {
                "caseSensitive": "case_sensitive",
                "subjectBeginsWith": "subject_begins_with",
                "subjectEndsWith": "subject_ends_with"
            },
            "azure:eventgrid/SystemTopicEventSubscriptionWebhookEndpoint:SystemTopicEventSubscriptionWebhookEndpoint": {
                "activeDirectoryAppIdOrUri": "active_directory_app_id_or_uri",
                "activeDirectoryTenantId": "active_directory_tenant_id",
                "baseUrl": "base_url",
                "maxEventsPerBatch": "max_events_per_batch",
                "preferredBatchSizeInKilobytes": "preferred_batch_size_in_kilobytes"
            },
            "azure:eventgrid/SystemTopicIdentity:SystemTopicIdentity": {
                "identityIds": "identity_ids",
                "principalId": "principal_id",
                "tenantId": "tenant_id"
            },
            "azure:eventgrid/TopicIdentity:TopicIdentity": {
                "identityIds": "identity_ids",
                "principalId": "principal_id",
                "tenantId": "tenant_id"
            },
            "azure:eventgrid/TopicInboundIpRule:TopicInboundIpRule": {
                "ipMask": "ip_mask"
            },
            "azure:eventgrid/TopicInputMappingDefaultValues:TopicInputMappingDefaultValues": {
                "dataVersion": "data_version",
                "eventType": "event_type"
            },
            "azure:eventgrid/TopicInputMappingFields:TopicInputMappingFields": {
                "dataVersion": "data_version",
                "eventTime": "event_time",
                "eventType": "event_type"
            },
            "azure:eventgrid/domain:Domain": {
                "autoCreateTopicWithFirstSubscription": "auto_create_topic_with_first_subscription",
                "autoDeleteTopicWithLastSubscription": "auto_delete_topic_with_last_subscription",
                "inboundIpRules": "inbound_ip_rule",
                "inputMappingDefaultValues": "input_mapping_default_values",
                "inputMappingFields": "input_mapping_fields",
                "inputSchema": "input_schema",
                "localAuthEnabled": "local_auth_enabled",
                "primaryAccessKey": "primary_access_key",
                "publicNetworkAccessEnabled": "public_network_access_enabled",
                "resourceGroupName": "resource_group_name",
                "secondaryAccessKey": "secondary_access_key"
            },
            "azure:eventgrid/domainTopic:DomainTopic": {
                "domainName": "domain_name",
                "resourceGroupName": "resource_group_name"
            },
            "azure:eventgrid/eventSubscription:EventSubscription": {
                "advancedFilter": "advanced_filter",
                "advancedFilteringOnArraysEnabled": "advanced_filtering_on_arrays_enabled",
                "azureFunctionEndpoint": "azure_function_endpoint",
                "deadLetterIdentity": "dead_letter_identity",
                "deliveryIdentity": "delivery_identity",
                "deliveryProperties": "delivery_property",
                "eventDeliverySchema": "event_delivery_schema",
                "eventhubEndpointId": "eventhub_endpoint_id",
                "expirationTimeUtc": "expiration_time_utc",
                "hybridConnectionEndpointId": "hybrid_connection_endpoint_id",
                "includedEventTypes": "included_event_types",
                "retryPolicy": "retry_policy",
                "serviceBusQueueEndpointId": "service_bus_queue_endpoint_id",
                "serviceBusTopicEndpointId": "service_bus_topic_endpoint_id",
                "storageBlobDeadLetterDestination": "storage_blob_dead_letter_destination",
                "storageQueueEndpoint": "storage_queue_endpoint",
                "subjectFilter": "subject_filter",
                "webhookEndpoint": "webhook_endpoint"
            },
            "azure:eventgrid/getDomain:getDomain": {
                "identities": "identity",
                "inboundIpRules": "inbound_ip_rule",
                "inputMappingDefaultValues": "input_mapping_default_values",
                "inputMappingFields": "input_mapping_fields",
                "inputSchema": "input_schema",
                "primaryAccessKey": "primary_access_key",
                "publicNetworkAccessEnabled": "public_network_access_enabled",
                "resourceGroupName": "resource_group_name",
                "secondaryAccessKey": "secondary_access_key"
            },
            "azure:eventgrid/getDomainIdentity:getDomainIdentity": {
                "identityIds": "identity_ids",
                "principalId": "principal_id",
                "tenantId": "tenant_id"
            },
            "azure:eventgrid/getDomainInboundIpRule:getDomainInboundIpRule": {
                "ipMask": "ip_mask"
            },
            "azure:eventgrid/getDomainInputMappingDefaultValue:getDomainInputMappingDefaultValue": {
                "dataVersion": "data_version",
                "eventType": "event_type"
            },
            "azure:eventgrid/getDomainInputMappingField:getDomainInputMappingField": {
                "dataVersion": "data_version",
                "eventTime": "event_time",
                "eventType": "event_type"
            },
            "azure:eventgrid/getDomainTopic:getDomainTopic": {
                "domainName": "domain_name",
                "resourceGroupName": "resource_group_name"
            },
            "azure:eventgrid/getSystemTopic:getSystemTopic": {
                "identities": "identity",
                "metricArmResourceId": "metric_arm_resource_id",
                "resourceGroupName": "resource_group_name",
                "sourceArmResourceId": "source_arm_resource_id",
                "topicType": "topic_type"
            },
            "azure:eventgrid/getSystemTopicIdentity:getSystemTopicIdentity": {
                "identityIds": "identity_ids",
                "principalId": "principal_id",
                "tenantId": "tenant_id"
            },
            "azure:eventgrid/getTopic:getTopic": {
                "primaryAccessKey": "primary_access_key",
                "resourceGroupName": "resource_group_name",
                "secondaryAccessKey": "secondary_access_key"
            },
            "azure:eventgrid/systemTopic:SystemTopic": {
                "metricArmResourceId": "metric_arm_resource_id",
                "resourceGroupName": "resource_group_name",
                "sourceArmResourceId": "source_arm_resource_id",
                "topicType": "topic_type"
            },
            "azure:eventgrid/systemTopicEventSubscription:SystemTopicEventSubscription": {
                "advancedFilter": "advanced_filter",
                "advancedFilteringOnArraysEnabled": "advanced_filtering_on_arrays_enabled",
                "azureFunctionEndpoint": "azure_function_endpoint",
                "deadLetterIdentity": "dead_letter_identity",
                "deliveryIdentity": "delivery_identity",
                "deliveryProperties": "delivery_property",
                "eventDeliverySchema": "event_delivery_schema",
                "eventhubEndpointId": "eventhub_endpoint_id",
                "expirationTimeUtc": "expiration_time_utc",
                "hybridConnectionEndpointId": "hybrid_connection_endpoint_id",
                "includedEventTypes": "included_event_types",
                "resourceGroupName": "resource_group_name",
                "retryPolicy": "retry_policy",
                "serviceBusQueueEndpointId": "service_bus_queue_endpoint_id",
                "serviceBusTopicEndpointId": "service_bus_topic_endpoint_id",
                "storageBlobDeadLetterDestination": "storage_blob_dead_letter_destination",
                "storageQueueEndpoint": "storage_queue_endpoint",
                "subjectFilter": "subject_filter",
                "systemTopic": "system_topic",
                "webhookEndpoint": "webhook_endpoint"
            },
            "azure:eventgrid/topic:Topic": {
                "inboundIpRules": "inbound_ip_rule",
                "inputMappingDefaultValues": "input_mapping_default_values",
                "inputMappingFields": "input_mapping_fields",
                "inputSchema": "input_schema",
                "localAuthEnabled": "local_auth_enabled",
                "primaryAccessKey": "primary_access_key",
                "publicNetworkAccessEnabled": "public_network_access_enabled",
                "resourceGroupName": "resource_group_name",
                "secondaryAccessKey": "secondary_access_key"
            },
            "azure:eventhub/DomainIdentity:DomainIdentity": {
                "identityIds": "identity_ids",
                "principalId": "principal_id",
                "tenantId": "tenant_id"
            },
            "azure:eventhub/DomainInboundIpRule:DomainInboundIpRule": {
                "ipMask": "ip_mask"
            },
            "azure:eventhub/DomainInputMappingDefaultValues:DomainInputMappingDefaultValues": {
                "dataVersion": "data_version",
                "eventType": "event_type"
            },
            "azure:eventhub/DomainInputMappingFields:DomainInputMappingFields": {
                "dataVersion": "data_version",
                "eventTime": "event_time",
                "eventType": "event_type"
            },
            "azure:eventhub/EventGridTopicIdentity:EventGridTopicIdentity": {
                "identityIds": "identity_ids",
                "principalId": "principal_id",
                "tenantId": "tenant_id"
            },
            "azure:eventhub/EventGridTopicInboundIpRule:EventGridTopicInboundIpRule": {
                "ipMask": "ip_mask"
            },
            "azure:eventhub/EventGridTopicInputMappingDefaultValues:EventGridTopicInputMappingDefaultValues": {
                "dataVersion": "data_version",
                "eventType": "event_type"
            },
            "azure:eventhub/EventGridTopicInputMappingFields:EventGridTopicInputMappingFields": {
                "dataVersion": "data_version",
                "eventTime": "event_time",
                "eventType": "event_type"
            },
            "azure:eventhub/EventHubCaptureDescription:EventHubCaptureDescription": {
                "intervalInSeconds": "interval_in_seconds",
                "sizeLimitInBytes": "size_limit_in_bytes",
                "skipEmptyArchives": "skip_empty_archives"
            },
            "azure:eventhub/EventHubCaptureDescriptionDestination:EventHubCaptureDescriptionDestination": {
                "archiveNameFormat": "archive_name_format",
                "blobContainerName": "blob_container_name",
                "storageAccountId": "storage_account_id"
            },
            "azure:eventhub/EventHubNamespaceIdentity:EventHubNamespaceIdentity": {
                "identityIds": "identity_ids",
                "principalId": "principal_id",
                "tenantId": "tenant_id"
            },
            "azure:eventhub/EventHubNamespaceNetworkRulesets:EventHubNamespaceNetworkRulesets": {
                "defaultAction": "default_action",
                "ipRules": "ip_rule",
                "publicNetworkAccessEnabled": "public_network_access_enabled",
                "trustedServiceAccessEnabled": "trusted_service_access_enabled",
                "virtualNetworkRules": "virtual_network_rule"
            },
            "azure:eventhub/EventHubNamespaceNetworkRulesetsIpRule:EventHubNamespaceNetworkRulesetsIpRule": {
                "ipMask": "ip_mask"
            },
            "azure:eventhub/EventHubNamespaceNetworkRulesetsVirtualNetworkRule:EventHubNamespaceNetworkRulesetsVirtualNetworkRule": {
                "ignoreMissingVirtualNetworkServiceEndpoint": "ignore_missing_virtual_network_service_endpoint",
                "subnetId": "subnet_id"
            },
            "azure:eventhub/EventSubscriptionAdvancedFilter:EventSubscriptionAdvancedFilter": {
                "boolEquals": "bool_equals",
                "isNotNulls": "is_not_null",
                "isNullOrUndefineds": "is_null_or_undefined",
                "numberGreaterThanOrEquals": "number_greater_than_or_equals",
                "numberGreaterThans": "number_greater_than",
                "numberInRanges": "number_in_range",
                "numberIns": "number_in",
                "numberLessThanOrEquals": "number_less_than_or_equals",
                "numberLessThans": "number_less_than",
                "numberNotInRanges": "number_not_in_range",
                "numberNotIns": "number_not_in",
                "stringBeginsWiths": "string_begins_with",
                "stringContains": "string_contains",
                "stringEndsWiths": "string_ends_with",
                "stringIns": "string_in",
                "stringNotBeginsWiths": "string_not_begins_with",
                "stringNotContains": "string_not_contains",
                "stringNotEndsWiths": "string_not_ends_with",
                "stringNotIns": "string_not_in"
            },
            "azure:eventhub/EventSubscriptionAzureFunctionEndpoint:EventSubscriptionAzureFunctionEndpoint": {
                "functionId": "function_id",
                "maxEventsPerBatch": "max_events_per_batch",
                "preferredBatchSizeInKilobytes": "preferred_batch_size_in_kilobytes"
            },
            "azure:eventhub/EventSubscriptionDeadLetterIdentity:EventSubscriptionDeadLetterIdentity": {
                "userAssignedIdentity": "user_assigned_identity"
            },
            "azure:eventhub/EventSubscriptionDeliveryIdentity:EventSubscriptionDeliveryIdentity": {
                "userAssignedIdentity": "user_assigned_identity"
            },
            "azure:eventhub/EventSubscriptionDeliveryProperty:EventSubscriptionDeliveryProperty": {
                "headerName": "header_name",
                "sourceField": "source_field"
            },
            "azure:eventhub/EventSubscriptionRetryPolicy:EventSubscriptionRetryPolicy": {
                "eventTimeToLive": "event_time_to_live",
                "maxDeliveryAttempts": "max_delivery_attempts"
            },
            "azure:eventhub/EventSubscriptionStorageBlobDeadLetterDestination:EventSubscriptionStorageBlobDeadLetterDestination": {
                "storageAccountId": "storage_account_id",
                "storageBlobContainerName": "storage_blob_container_name"
            },
            "azure:eventhub/EventSubscriptionStorageQueueEndpoint:EventSubscriptionStorageQueueEndpoint": {
                "queueMessageTimeToLiveInSeconds": "queue_message_time_to_live_in_seconds",
                "queueName": "queue_name",
                "storageAccountId": "storage_account_id"
            },
            "azure:eventhub/EventSubscriptionSubjectFilter:EventSubscriptionSubjectFilter": {
                "caseSensitive": "case_sensitive",
                "subjectBeginsWith": "subject_begins_with",
                "subjectEndsWith": "subject_ends_with"
            },
            "azure:eventhub/EventSubscriptionWebhookEndpoint:EventSubscriptionWebhookEndpoint": {
                "activeDirectoryAppIdOrUri": "active_directory_app_id_or_uri",
                "activeDirectoryTenantId": "active_directory_tenant_id",
                "baseUrl": "base_url",
                "maxEventsPerBatch": "max_events_per_batch",
                "preferredBatchSizeInKilobytes": "preferred_batch_size_in_kilobytes"
            },
            "azure:eventhub/NamespaceCustomerManagedKey:NamespaceCustomerManagedKey": {
                "identityId": "identity_id",
                "infrastructureEncryptionEnabled": "infrastructure_encryption_enabled",
                "keyVaultKeyId": "key_vault_key_id"
            },
            "azure:eventhub/NamespaceIdentity:NamespaceIdentity": {
                "identityIds": "identity_ids",
                "principalId": "principal_id",
                "tenantId": "tenant_id"
            },
            "azure:eventhub/NamespaceNetworkRuleSet:NamespaceNetworkRuleSet": {
                "defaultAction": "default_action",
                "ipRules": "ip_rules",
                "networkRules": "network_rules",
                "publicNetworkAccessEnabled": "public_network_access_enabled",
                "trustedServicesAllowed": "trusted_services_allowed"
            },
            "azure:eventhub/NamespaceNetworkRuleSetNetworkRule:NamespaceNetworkRuleSetNetworkRule": {
                "ignoreMissingVnetServiceEndpoint": "ignore_missing_vnet_service_endpoint",
                "subnetId": "subnet_id"
            },
            "azure:eventhub/SubscriptionClientScopedSubscription:SubscriptionClientScopedSubscription": {
                "clientId": "client_id",
                "isClientScopedSubscriptionDurable": "is_client_scoped_subscription_durable",
                "isClientScopedSubscriptionShareable": "is_client_scoped_subscription_shareable"
            },
            "azure:eventhub/SubscriptionRuleCorrelationFilter:SubscriptionRuleCorrelationFilter": {
                "contentType": "content_type",
                "correlationId": "correlation_id",
                "messageId": "message_id",
                "replyTo": "reply_to",
                "replyToSessionId": "reply_to_session_id",
                "sessionId": "session_id"
            },
            "azure:eventhub/authorizationRule:AuthorizationRule": {
                "eventhubName": "eventhub_name",
                "namespaceName": "namespace_name",
                "primaryConnectionString": "primary_connection_string",
                "primaryConnectionStringAlias": "primary_connection_string_alias",
                "primaryKey": "primary_key",
                "resourceGroupName": "resource_group_name",
                "secondaryConnectionString": "secondary_connection_string",
                "secondaryConnectionStringAlias": "secondary_connection_string_alias",
                "secondaryKey": "secondary_key"
            },
            "azure:eventhub/cluster:Cluster": {
                "resourceGroupName": "resource_group_name",
                "skuName": "sku_name"
            },
            "azure:eventhub/consumerGroup:ConsumerGroup": {
                "eventhubName": "eventhub_name",
                "namespaceName": "namespace_name",
                "resourceGroupName": "resource_group_name",
                "userMetadata": "user_metadata"
            },
            "azure:eventhub/domain:Domain": {
                "autoCreateTopicWithFirstSubscription": "auto_create_topic_with_first_subscription",
                "autoDeleteTopicWithLastSubscription": "auto_delete_topic_with_last_subscription",
                "inboundIpRules": "inbound_ip_rule",
                "inputMappingDefaultValues": "input_mapping_default_values",
                "inputMappingFields": "input_mapping_fields",
                "inputSchema": "input_schema",
                "localAuthEnabled": "local_auth_enabled",
                "primaryAccessKey": "primary_access_key",
                "publicNetworkAccessEnabled": "public_network_access_enabled",
                "resourceGroupName": "resource_group_name",
                "secondaryAccessKey": "secondary_access_key"
            },
            "azure:eventhub/eventGridTopic:EventGridTopic": {
                "inboundIpRules": "inbound_ip_rule",
                "inputMappingDefaultValues": "input_mapping_default_values",
                "inputMappingFields": "input_mapping_fields",
                "inputSchema": "input_schema",
                "localAuthEnabled": "local_auth_enabled",
                "primaryAccessKey": "primary_access_key",
                "publicNetworkAccessEnabled": "public_network_access_enabled",
                "resourceGroupName": "resource_group_name",
                "secondaryAccessKey": "secondary_access_key"
            },
            "azure:eventhub/eventHub:EventHub": {
                "captureDescription": "capture_description",
                "messageRetention": "message_retention",
                "namespaceName": "namespace_name",
                "partitionCount": "partition_count",
                "partitionIds": "partition_ids",
                "resourceGroupName": "resource_group_name"
            },
            "azure:eventhub/eventHubAuthorizationRule:EventHubAuthorizationRule": {
                "eventhubName": "eventhub_name",
                "namespaceName": "namespace_name",
                "primaryConnectionString": "primary_connection_string",
                "primaryConnectionStringAlias": "primary_connection_string_alias",
                "primaryKey": "primary_key",
                "resourceGroupName": "resource_group_name",
                "secondaryConnectionString": "secondary_connection_string",
                "secondaryConnectionStringAlias": "secondary_connection_string_alias",
                "secondaryKey": "secondary_key"
            },
            "azure:eventhub/eventHubConsumerGroup:EventHubConsumerGroup": {
                "eventhubName": "eventhub_name",
                "namespaceName": "namespace_name",
                "resourceGroupName": "resource_group_name",
                "userMetadata": "user_metadata"
            },
            "azure:eventhub/eventHubNamespace:EventHubNamespace": {
                "autoInflateEnabled": "auto_inflate_enabled",
                "dedicatedClusterId": "dedicated_cluster_id",
                "defaultPrimaryConnectionString": "default_primary_connection_string",
                "defaultPrimaryConnectionStringAlias": "default_primary_connection_string_alias",
                "defaultPrimaryKey": "default_primary_key",
                "defaultSecondaryConnectionString": "default_secondary_connection_string",
                "defaultSecondaryConnectionStringAlias": "default_secondary_connection_string_alias",
                "defaultSecondaryKey": "default_secondary_key",
                "localAuthenticationEnabled": "local_authentication_enabled",
                "maximumThroughputUnits": "maximum_throughput_units",
                "minimumTlsVersion": "minimum_tls_version",
                "networkRulesets": "network_rulesets",
                "publicNetworkAccessEnabled": "public_network_access_enabled",
                "resourceGroupName": "resource_group_name",
                "zoneRedundant": "zone_redundant"
            },
            "azure:eventhub/eventHubNamespaceAuthorizationRule:EventHubNamespaceAuthorizationRule": {
                "namespaceName": "namespace_name",
                "primaryConnectionString": "primary_connection_string",
                "primaryConnectionStringAlias": "primary_connection_string_alias",
                "primaryKey": "primary_key",
                "resourceGroupName": "resource_group_name",
                "secondaryConnectionString": "secondary_connection_string",
                "secondaryConnectionStringAlias": "secondary_connection_string_alias",
                "secondaryKey": "secondary_key"
            },
            "azure:eventhub/eventSubscription:EventSubscription": {
                "advancedFilter": "advanced_filter",
                "advancedFilteringOnArraysEnabled": "advanced_filtering_on_arrays_enabled",
                "azureFunctionEndpoint": "azure_function_endpoint",
                "deadLetterIdentity": "dead_letter_identity",
                "deliveryIdentity": "delivery_identity",
                "deliveryProperties": "delivery_property",
                "eventDeliverySchema": "event_delivery_schema",
                "eventhubEndpointId": "eventhub_endpoint_id",
                "expirationTimeUtc": "expiration_time_utc",
                "hybridConnectionEndpointId": "hybrid_connection_endpoint_id",
                "includedEventTypes": "included_event_types",
                "retryPolicy": "retry_policy",
                "serviceBusQueueEndpointId": "service_bus_queue_endpoint_id",
                "serviceBusTopicEndpointId": "service_bus_topic_endpoint_id",
                "storageBlobDeadLetterDestination": "storage_blob_dead_letter_destination",
                "storageQueueEndpoint": "storage_queue_endpoint",
                "subjectFilter": "subject_filter",
                "webhookEndpoint": "webhook_endpoint"
            },
            "azure:eventhub/eventhubNamespaceDisasterRecoveryConfig:EventhubNamespaceDisasterRecoveryConfig": {
                "namespaceName": "namespace_name",
                "partnerNamespaceId": "partner_namespace_id",
                "resourceGroupName": "resource_group_name"
            },
            "azure:eventhub/getAuthorizationRule:getAuthorizationRule": {
                "eventhubName": "eventhub_name",
                "namespaceName": "namespace_name",
                "primaryConnectionString": "primary_connection_string",
                "primaryConnectionStringAlias": "primary_connection_string_alias",
                "primaryKey": "primary_key",
                "resourceGroupName": "resource_group_name",
                "secondaryConnectionString": "secondary_connection_string",
                "secondaryConnectionStringAlias": "secondary_connection_string_alias",
                "secondaryKey": "secondary_key"
            },
            "azure:eventhub/getCluster:getCluster": {
                "resourceGroupName": "resource_group_name",
                "skuName": "sku_name"
            },
            "azure:eventhub/getConsumeGroup:getConsumeGroup": {
                "eventhubName": "eventhub_name",
                "namespaceName": "namespace_name",
                "resourceGroupName": "resource_group_name",
                "userMetadata": "user_metadata"
            },
            "azure:eventhub/getEventHub:getEventHub": {
                "namespaceName": "namespace_name",
                "partitionCount": "partition_count",
                "partitionIds": "partition_ids",
                "resourceGroupName": "resource_group_name"
            },
            "azure:eventhub/getEventhubNamespace:getEventhubNamespace": {
                "autoInflateEnabled": "auto_inflate_enabled",
                "dedicatedClusterId": "dedicated_cluster_id",
                "defaultPrimaryConnectionString": "default_primary_connection_string",
                "defaultPrimaryConnectionStringAlias": "default_primary_connection_string_alias",
                "defaultPrimaryKey": "default_primary_key",
                "defaultSecondaryConnectionString": "default_secondary_connection_string",
                "defaultSecondaryConnectionStringAlias": "default_secondary_connection_string_alias",
                "defaultSecondaryKey": "default_secondary_key",
                "kafkaEnabled": "kafka_enabled",
                "maximumThroughputUnits": "maximum_throughput_units",
                "resourceGroupName": "resource_group_name",
                "zoneRedundant": "zone_redundant"
            },
            "azure:eventhub/getNamespace:getNamespace": {
                "autoInflateEnabled": "auto_inflate_enabled",
                "dedicatedClusterId": "dedicated_cluster_id",
                "defaultPrimaryConnectionString": "default_primary_connection_string",
                "defaultPrimaryConnectionStringAlias": "default_primary_connection_string_alias",
                "defaultPrimaryKey": "default_primary_key",
                "defaultSecondaryConnectionString": "default_secondary_connection_string",
                "defaultSecondaryConnectionStringAlias": "default_secondary_connection_string_alias",
                "defaultSecondaryKey": "default_secondary_key",
                "kafkaEnabled": "kafka_enabled",
                "maximumThroughputUnits": "maximum_throughput_units",
                "resourceGroupName": "resource_group_name",
                "zoneRedundant": "zone_redundant"
            },
            "azure:eventhub/getNamespaceAuthorizationRule:getNamespaceAuthorizationRule": {
                "namespaceName": "namespace_name",
                "primaryConnectionString": "primary_connection_string",
                "primaryConnectionStringAlias": "primary_connection_string_alias",
                "primaryKey": "primary_key",
                "resourceGroupName": "resource_group_name",
                "secondaryConnectionString": "secondary_connection_string",
                "secondaryConnectionStringAlias": "secondary_connection_string_alias",
                "secondaryKey": "secondary_key"
            },
            "azure:eventhub/getSas:getSas": {
                "connectionString": "connection_string"
            },
            "azure:eventhub/getServiceBusNamespace:getServiceBusNamespace": {
                "defaultPrimaryConnectionString": "default_primary_connection_string",
                "defaultPrimaryKey": "default_primary_key",
                "defaultSecondaryConnectionString": "default_secondary_connection_string",
                "defaultSecondaryKey": "default_secondary_key",
                "resourceGroupName": "resource_group_name",
                "zoneRedundant": "zone_redundant"
            },
            "azure:eventhub/namespace:Namespace": {
                "customerManagedKey": "customer_managed_key",
                "defaultPrimaryConnectionString": "default_primary_connection_string",
                "defaultPrimaryKey": "default_primary_key",
                "defaultSecondaryConnectionString": "default_secondary_connection_string",
                "defaultSecondaryKey": "default_secondary_key",
                "localAuthEnabled": "local_auth_enabled",
                "minimumTlsVersion": "minimum_tls_version",
                "networkRuleSet": "network_rule_set",
                "publicNetworkAccessEnabled": "public_network_access_enabled",
                "resourceGroupName": "resource_group_name",
                "zoneRedundant": "zone_redundant"
            },
            "azure:eventhub/namespaceAuthorizationRule:NamespaceAuthorizationRule": {
                "namespaceId": "namespace_id",
                "primaryConnectionString": "primary_connection_string",
                "primaryConnectionStringAlias": "primary_connection_string_alias",
                "primaryKey": "primary_key",
                "secondaryConnectionString": "secondary_connection_string",
                "secondaryConnectionStringAlias": "secondary_connection_string_alias",
                "secondaryKey": "secondary_key"
            },
            "azure:eventhub/namespaceCustomerManagedKey:NamespaceCustomerManagedKey": {
                "eventhubNamespaceId": "eventhub_namespace_id",
                "infrastructureEncryptionEnabled": "infrastructure_encryption_enabled",
                "keyVaultKeyIds": "key_vault_key_ids",
                "userAssignedIdentityId": "user_assigned_identity_id"
            },
            "azure:eventhub/namespaceSchemaGroup:NamespaceSchemaGroup": {
                "namespaceId": "namespace_id",
                "schemaCompatibility": "schema_compatibility",
                "schemaType": "schema_type"
            },
            "azure:eventhub/queue:Queue": {
                "autoDeleteOnIdle": "auto_delete_on_idle",
                "deadLetteringOnMessageExpiration": "dead_lettering_on_message_expiration",
                "defaultMessageTtl": "default_message_ttl",
                "duplicateDetectionHistoryTimeWindow": "duplicate_detection_history_time_window",
                "enableBatchedOperations": "enable_batched_operations",
                "enableExpress": "enable_express",
                "enablePartitioning": "enable_partitioning",
                "forwardDeadLetteredMessagesTo": "forward_dead_lettered_messages_to",
                "forwardTo": "forward_to",
                "lockDuration": "lock_duration",
                "maxDeliveryCount": "max_delivery_count",
                "maxMessageSizeInKilobytes": "max_message_size_in_kilobytes",
                "maxSizeInMegabytes": "max_size_in_megabytes",
                "namespaceId": "namespace_id",
                "namespaceName": "namespace_name",
                "requiresDuplicateDetection": "requires_duplicate_detection",
                "requiresSession": "requires_session",
                "resourceGroupName": "resource_group_name"
            },
            "azure:eventhub/queueAuthorizationRule:QueueAuthorizationRule": {
                "primaryConnectionString": "primary_connection_string",
                "primaryConnectionStringAlias": "primary_connection_string_alias",
                "primaryKey": "primary_key",
                "queueId": "queue_id",
                "secondaryConnectionString": "secondary_connection_string",
                "secondaryConnectionStringAlias": "secondary_connection_string_alias",
                "secondaryKey": "secondary_key"
            },
            "azure:eventhub/subscription:Subscription": {
                "autoDeleteOnIdle": "auto_delete_on_idle",
                "clientScopedSubscription": "client_scoped_subscription",
                "clientScopedSubscriptionEnabled": "client_scoped_subscription_enabled",
                "deadLetteringOnFilterEvaluationError": "dead_lettering_on_filter_evaluation_error",
                "deadLetteringOnMessageExpiration": "dead_lettering_on_message_expiration",
                "defaultMessageTtl": "default_message_ttl",
                "enableBatchedOperations": "enable_batched_operations",
                "forwardDeadLetteredMessagesTo": "forward_dead_lettered_messages_to",
                "forwardTo": "forward_to",
                "lockDuration": "lock_duration",
                "maxDeliveryCount": "max_delivery_count",
                "requiresSession": "requires_session",
                "topicId": "topic_id"
            },
            "azure:eventhub/subscriptionRule:SubscriptionRule": {
                "correlationFilter": "correlation_filter",
                "filterType": "filter_type",
                "sqlFilter": "sql_filter",
                "sqlFilterCompatibilityLevel": "sql_filter_compatibility_level",
                "subscriptionId": "subscription_id"
            },
            "azure:eventhub/topic:Topic": {
                "autoDeleteOnIdle": "auto_delete_on_idle",
                "defaultMessageTtl": "default_message_ttl",
                "duplicateDetectionHistoryTimeWindow": "duplicate_detection_history_time_window",
                "enableBatchedOperations": "enable_batched_operations",
                "enableExpress": "enable_express",
                "enablePartitioning": "enable_partitioning",
                "maxMessageSizeInKilobytes": "max_message_size_in_kilobytes",
                "maxSizeInMegabytes": "max_size_in_megabytes",
                "namespaceId": "namespace_id",
                "namespaceName": "namespace_name",
                "requiresDuplicateDetection": "requires_duplicate_detection",
                "resourceGroupName": "resource_group_name",
                "supportOrdering": "support_ordering"
            },
            "azure:eventhub/topicAuthorizationRule:TopicAuthorizationRule": {
                "primaryConnectionString": "primary_connection_string",
                "primaryConnectionStringAlias": "primary_connection_string_alias",
                "primaryKey": "primary_key",
                "secondaryConnectionString": "secondary_connection_string",
                "secondaryConnectionStringAlias": "secondary_connection_string_alias",
                "secondaryKey": "secondary_key",
                "topicId": "topic_id"
            },
            "azure:fluidrelay/ServerIdentity:ServerIdentity": {
                "identityIds": "identity_ids",
                "principalId": "principal_id",
                "tenantId": "tenant_id"
            },
            "azure:fluidrelay/server:Server": {
                "frsTenantId": "frs_tenant_id",
                "ordererEndpoints": "orderer_endpoints",
                "primaryKey": "primary_key",
                "resourceGroupName": "resource_group_name",
                "secondaryKey": "secondary_key",
                "serviceEndpoints": "service_endpoints",
                "storageEndpoints": "storage_endpoints",
                "storageSku": "storage_sku"
            },
            "azure:frontdoor/CustomHttpsConfigurationCustomHttpsConfiguration:CustomHttpsConfigurationCustomHttpsConfiguration": {
                "azureKeyVaultCertificateSecretName": "azure_key_vault_certificate_secret_name",
                "azureKeyVaultCertificateSecretVersion": "azure_key_vault_certificate_secret_version",
                "azureKeyVaultCertificateVaultId": "azure_key_vault_certificate_vault_id",
                "certificateSource": "certificate_source",
                "minimumTlsVersion": "minimum_tls_version",
                "provisioningState": "provisioning_state",
                "provisioningSubstate": "provisioning_substate"
            },
            "azure:frontdoor/FirewallPolicyCustomRule:FirewallPolicyCustomRule": {
                "matchConditions": "match_condition",
                "rateLimitDurationInMinutes": "rate_limit_duration_in_minutes",
                "rateLimitThreshold": "rate_limit_threshold"
            },
            "azure:frontdoor/FirewallPolicyCustomRuleMatchCondition:FirewallPolicyCustomRuleMatchCondition": {
                "matchValues": "match_values",
                "matchVariable": "match_variable",
                "negationCondition": "negation_condition"
            },
            "azure:frontdoor/FirewallPolicyManagedRule:FirewallPolicyManagedRule": {
                "exclusions": "exclusion",
                "overrides": "override"
            },
            "azure:frontdoor/FirewallPolicyManagedRuleExclusion:FirewallPolicyManagedRuleExclusion": {
                "matchVariable": "match_variable"
            },
            "azure:frontdoor/FirewallPolicyManagedRuleOverride:FirewallPolicyManagedRuleOverride": {
                "exclusions": "exclusion",
                "ruleGroupName": "rule_group_name",
                "rules": "rule"
            },
            "azure:frontdoor/FirewallPolicyManagedRuleOverrideExclusion:FirewallPolicyManagedRuleOverrideExclusion": {
                "matchVariable": "match_variable"
            },
            "azure:frontdoor/FirewallPolicyManagedRuleOverrideRule:FirewallPolicyManagedRuleOverrideRule": {
                "exclusions": "exclusion",
                "ruleId": "rule_id"
            },
            "azure:frontdoor/FirewallPolicyManagedRuleOverrideRuleExclusion:FirewallPolicyManagedRuleOverrideRuleExclusion": {
                "matchVariable": "match_variable"
            },
            "azure:frontdoor/FrontdoorBackendPool:FrontdoorBackendPool": {
                "backends": "backend",
                "healthProbeName": "health_probe_name",
                "loadBalancingName": "load_balancing_name"
            },
            "azure:frontdoor/FrontdoorBackendPoolBackend:FrontdoorBackendPoolBackend": {
                "hostHeader": "host_header",
                "httpPort": "http_port",
                "httpsPort": "https_port"
            },
            "azure:frontdoor/FrontdoorBackendPoolHealthProbe:FrontdoorBackendPoolHealthProbe": {
                "intervalInSeconds": "interval_in_seconds",
                "probeMethod": "probe_method"
            },
            "azure:frontdoor/FrontdoorBackendPoolLoadBalancing:FrontdoorBackendPoolLoadBalancing": {
                "additionalLatencyMilliseconds": "additional_latency_milliseconds",
                "sampleSize": "sample_size",
                "successfulSamplesRequired": "successful_samples_required"
            },
            "azure:frontdoor/FrontdoorBackendPoolSetting:FrontdoorBackendPoolSetting": {
                "backendPoolsSendReceiveTimeoutSeconds": "backend_pools_send_receive_timeout_seconds",
                "enforceBackendPoolsCertificateNameCheck": "enforce_backend_pools_certificate_name_check"
            },
            "azure:frontdoor/FrontdoorExplicitResourceOrder:FrontdoorExplicitResourceOrder": {
                "backendPoolHealthProbeIds": "backend_pool_health_probe_ids",
                "backendPoolIds": "backend_pool_ids",
                "backendPoolLoadBalancingIds": "backend_pool_load_balancing_ids",
                "frontendEndpointIds": "frontend_endpoint_ids",
                "routingRuleIds": "routing_rule_ids"
            },
            "azure:frontdoor/FrontdoorFrontendEndpoint:FrontdoorFrontendEndpoint": {
                "hostName": "host_name",
                "sessionAffinityEnabled": "session_affinity_enabled",
                "sessionAffinityTtlSeconds": "session_affinity_ttl_seconds",
                "webApplicationFirewallPolicyLinkId": "web_application_firewall_policy_link_id"
            },
            "azure:frontdoor/FrontdoorRoutingRule:FrontdoorRoutingRule": {
                "acceptedProtocols": "accepted_protocols",
                "forwardingConfiguration": "forwarding_configuration",
                "frontendEndpoints": "frontend_endpoints",
                "patternsToMatches": "patterns_to_match",
                "redirectConfiguration": "redirect_configuration"
            },
            "azure:frontdoor/FrontdoorRoutingRuleForwardingConfiguration:FrontdoorRoutingRuleForwardingConfiguration": {
                "backendPoolName": "backend_pool_name",
                "cacheDuration": "cache_duration",
                "cacheEnabled": "cache_enabled",
                "cacheQueryParameterStripDirective": "cache_query_parameter_strip_directive",
                "cacheQueryParameters": "cache_query_parameters",
                "cacheUseDynamicCompression": "cache_use_dynamic_compression",
                "customForwardingPath": "custom_forwarding_path",
                "forwardingProtocol": "forwarding_protocol"
            },
            "azure:frontdoor/FrontdoorRoutingRuleRedirectConfiguration:FrontdoorRoutingRuleRedirectConfiguration": {
                "customFragment": "custom_fragment",
                "customHost": "custom_host",
                "customPath": "custom_path",
                "customQueryString": "custom_query_string",
                "redirectProtocol": "redirect_protocol",
                "redirectType": "redirect_type"
            },
            "azure:frontdoor/RulesEngineRule:RulesEngineRule": {
                "matchConditions": "match_condition"
            },
            "azure:frontdoor/RulesEngineRuleAction:RulesEngineRuleAction": {
                "requestHeaders": "request_header",
                "responseHeaders": "response_header"
            },
            "azure:frontdoor/RulesEngineRuleActionRequestHeader:RulesEngineRuleActionRequestHeader": {
                "headerActionType": "header_action_type",
                "headerName": "header_name"
            },
            "azure:frontdoor/RulesEngineRuleActionResponseHeader:RulesEngineRuleActionResponseHeader": {
                "headerActionType": "header_action_type",
                "headerName": "header_name"
            },
            "azure:frontdoor/RulesEngineRuleMatchCondition:RulesEngineRuleMatchCondition": {
                "negateCondition": "negate_condition",
                "transforms": "transform",
                "values": "value"
            },
            "azure:frontdoor/customHttpsConfiguration:CustomHttpsConfiguration": {
                "customHttpsConfiguration": "custom_https_configuration",
                "customHttpsProvisioningEnabled": "custom_https_provisioning_enabled",
                "frontendEndpointId": "frontend_endpoint_id"
            },
            "azure:frontdoor/firewallPolicy:FirewallPolicy": {
                "customBlockResponseBody": "custom_block_response_body",
                "customBlockResponseStatusCode": "custom_block_response_status_code",
                "customRules": "custom_rule",
                "frontendEndpointIds": "frontend_endpoint_ids",
                "managedRules": "managed_rule",
                "redirectUrl": "redirect_url",
                "resourceGroupName": "resource_group_name"
            },
            "azure:frontdoor/frontdoor:Frontdoor": {
                "backendPoolHealthProbes": "backend_pool_health_probe",
                "backendPoolHealthProbesMap": "backend_pool_health_probes",
                "backendPoolLoadBalancingSettingsMap": "backend_pool_load_balancing_settings",
                "backendPoolLoadBalancings": "backend_pool_load_balancing",
                "backendPoolSettings": "backend_pool_settings",
                "backendPools": "backend_pool",
                "backendPoolsMap": "backend_pools",
                "explicitResourceOrders": "explicit_resource_order",
                "friendlyName": "friendly_name",
                "frontendEndpoints": "frontend_endpoint",
                "frontendEndpointsMap": "frontend_endpoints",
                "headerFrontdoorId": "header_frontdoor_id",
                "loadBalancerEnabled": "load_balancer_enabled",
                "resourceGroupName": "resource_group_name",
                "routingRules": "routing_rule",
                "routingRulesMap": "routing_rules"
            },
            "azure:frontdoor/rulesEngine:RulesEngine": {
                "frontdoorName": "frontdoor_name",
                "resourceGroupName": "resource_group_name",
                "rules": "rule"
            },
            "azure:graph/account:Account": {
                "applicationId": "application_id",
                "billingPlanId": "billing_plan_id",
                "resourceGroupName": "resource_group_name"
            },
            "azure:graph/servicesAccount:ServicesAccount": {
                "applicationId": "application_id",
                "billingPlanId": "billing_plan_id",
                "resourceGroupName": "resource_group_name"
            },
            "azure:hdinsight/HBaseClusterComputeIsolation:HBaseClusterComputeIsolation": {
                "computeIsolationEnabled": "compute_isolation_enabled",
                "hostSku": "host_sku"
            },
            "azure:hdinsight/HBaseClusterDiskEncryption:HBaseClusterDiskEncryption": {
                "encryptionAlgorithm": "encryption_algorithm",
                "encryptionAtHostEnabled": "encryption_at_host_enabled",
                "keyVaultKeyId": "key_vault_key_id",
                "keyVaultManagedIdentityId": "key_vault_managed_identity_id"
            },
            "azure:hdinsight/HBaseClusterExtension:HBaseClusterExtension": {
                "logAnalyticsWorkspaceId": "log_analytics_workspace_id",
                "primaryKey": "primary_key"
            },
            "azure:hdinsight/HBaseClusterMetastoresAmbari:HBaseClusterMetastoresAmbari": {
                "databaseName": "database_name"
            },
            "azure:hdinsight/HBaseClusterMetastoresHive:HBaseClusterMetastoresHive": {
                "databaseName": "database_name"
            },
            "azure:hdinsight/HBaseClusterMetastoresOozie:HBaseClusterMetastoresOozie": {
                "databaseName": "database_name"
            },
            "azure:hdinsight/HBaseClusterMonitor:HBaseClusterMonitor": {
                "logAnalyticsWorkspaceId": "log_analytics_workspace_id",
                "primaryKey": "primary_key"
            },
            "azure:hdinsight/HBaseClusterNetwork:HBaseClusterNetwork": {
                "connectionDirection": "connection_direction",
                "privateLinkEnabled": "private_link_enabled"
            },
            "azure:hdinsight/HBaseClusterRoles:HBaseClusterRoles": {
                "headNode": "head_node",
                "workerNode": "worker_node",
                "zookeeperNode": "zookeeper_node"
            },
            "azure:hdinsight/HBaseClusterRolesHeadNode:HBaseClusterRolesHeadNode": {
                "scriptActions": "script_actions",
                "sshKeys": "ssh_keys",
                "subnetId": "subnet_id",
                "virtualNetworkId": "virtual_network_id",
                "vmSize": "vm_size"
            },
            "azure:hdinsight/HBaseClusterRolesWorkerNode:HBaseClusterRolesWorkerNode": {
                "scriptActions": "script_actions",
                "sshKeys": "ssh_keys",
                "subnetId": "subnet_id",
                "targetInstanceCount": "target_instance_count",
                "virtualNetworkId": "virtual_network_id",
                "vmSize": "vm_size"
            },
            "azure:hdinsight/HBaseClusterRolesWorkerNodeAutoscaleRecurrence:HBaseClusterRolesWorkerNodeAutoscaleRecurrence": {
                "schedules": "schedule"
            },
            "azure:hdinsight/HBaseClusterRolesWorkerNodeAutoscaleRecurrenceSchedule:HBaseClusterRolesWorkerNodeAutoscaleRecurrenceSchedule": {
                "targetInstanceCount": "target_instance_count"
            },
            "azure:hdinsight/HBaseClusterRolesZookeeperNode:HBaseClusterRolesZookeeperNode": {
                "scriptActions": "script_actions",
                "sshKeys": "ssh_keys",
                "subnetId": "subnet_id",
                "virtualNetworkId": "virtual_network_id",
                "vmSize": "vm_size"
            },
            "azure:hdinsight/HBaseClusterSecurityProfile:HBaseClusterSecurityProfile": {
                "aaddsResourceId": "aadds_resource_id",
                "clusterUsersGroupDns": "cluster_users_group_dns",
                "domainName": "domain_name",
                "domainUserPassword": "domain_user_password",
                "domainUsername": "domain_username",
                "ldapsUrls": "ldaps_urls",
                "msiResourceId": "msi_resource_id"
            },
            "azure:hdinsight/HBaseClusterStorageAccount:HBaseClusterStorageAccount": {
                "isDefault": "is_default",
                "storageAccountKey": "storage_account_key",
                "storageContainerId": "storage_container_id",
                "storageResourceId": "storage_resource_id"
            },
            "azure:hdinsight/HBaseClusterStorageAccountGen2:HBaseClusterStorageAccountGen2": {
                "filesystemId": "filesystem_id",
                "isDefault": "is_default",
                "managedIdentityResourceId": "managed_identity_resource_id",
                "storageResourceId": "storage_resource_id"
            },
            "azure:hdinsight/HadoopClusterComputeIsolation:HadoopClusterComputeIsolation": {
                "computeIsolationEnabled": "compute_isolation_enabled",
                "hostSku": "host_sku"
            },
            "azure:hdinsight/HadoopClusterDiskEncryption:HadoopClusterDiskEncryption": {
                "encryptionAlgorithm": "encryption_algorithm",
                "encryptionAtHostEnabled": "encryption_at_host_enabled",
                "keyVaultKeyId": "key_vault_key_id",
                "keyVaultManagedIdentityId": "key_vault_managed_identity_id"
            },
            "azure:hdinsight/HadoopClusterExtension:HadoopClusterExtension": {
                "logAnalyticsWorkspaceId": "log_analytics_workspace_id",
                "primaryKey": "primary_key"
            },
            "azure:hdinsight/HadoopClusterMetastoresAmbari:HadoopClusterMetastoresAmbari": {
                "databaseName": "database_name"
            },
            "azure:hdinsight/HadoopClusterMetastoresHive:HadoopClusterMetastoresHive": {
                "databaseName": "database_name"
            },
            "azure:hdinsight/HadoopClusterMetastoresOozie:HadoopClusterMetastoresOozie": {
                "databaseName": "database_name"
            },
            "azure:hdinsight/HadoopClusterMonitor:HadoopClusterMonitor": {
                "logAnalyticsWorkspaceId": "log_analytics_workspace_id",
                "primaryKey": "primary_key"
            },
            "azure:hdinsight/HadoopClusterNetwork:HadoopClusterNetwork": {
                "connectionDirection": "connection_direction",
                "privateLinkEnabled": "private_link_enabled"
            },
            "azure:hdinsight/HadoopClusterRoles:HadoopClusterRoles": {
                "edgeNode": "edge_node",
                "headNode": "head_node",
                "workerNode": "worker_node",
                "zookeeperNode": "zookeeper_node"
            },
            "azure:hdinsight/HadoopClusterRolesEdgeNode:HadoopClusterRolesEdgeNode": {
                "httpsEndpoints": "https_endpoints",
                "installScriptActions": "install_script_action",
                "targetInstanceCount": "target_instance_count",
                "uninstallScriptActions": "uninstall_script_actions",
                "vmSize": "vm_size"
            },
            "azure:hdinsight/HadoopClusterRolesEdgeNodeHttpsEndpoint:HadoopClusterRolesEdgeNodeHttpsEndpoint": {
                "accessModes": "access_modes",
                "destinationPort": "destination_port",
                "disableGatewayAuth": "disable_gateway_auth",
                "privateIpAddress": "private_ip_address",
                "subDomainSuffix": "sub_domain_suffix"
            },
            "azure:hdinsight/HadoopClusterRolesHeadNode:HadoopClusterRolesHeadNode": {
                "scriptActions": "script_actions",
                "sshKeys": "ssh_keys",
                "subnetId": "subnet_id",
                "virtualNetworkId": "virtual_network_id",
                "vmSize": "vm_size"
            },
            "azure:hdinsight/HadoopClusterRolesWorkerNode:HadoopClusterRolesWorkerNode": {
                "scriptActions": "script_actions",
                "sshKeys": "ssh_keys",
                "subnetId": "subnet_id",
                "targetInstanceCount": "target_instance_count",
                "virtualNetworkId": "virtual_network_id",
                "vmSize": "vm_size"
            },
            "azure:hdinsight/HadoopClusterRolesWorkerNodeAutoscaleCapacity:HadoopClusterRolesWorkerNodeAutoscaleCapacity": {
                "maxInstanceCount": "max_instance_count",
                "minInstanceCount": "min_instance_count"
            },
            "azure:hdinsight/HadoopClusterRolesWorkerNodeAutoscaleRecurrence:HadoopClusterRolesWorkerNodeAutoscaleRecurrence": {
                "schedules": "schedule"
            },
            "azure:hdinsight/HadoopClusterRolesWorkerNodeAutoscaleRecurrenceSchedule:HadoopClusterRolesWorkerNodeAutoscaleRecurrenceSchedule": {
                "targetInstanceCount": "target_instance_count"
            },
            "azure:hdinsight/HadoopClusterRolesZookeeperNode:HadoopClusterRolesZookeeperNode": {
                "scriptActions": "script_actions",
                "sshKeys": "ssh_keys",
                "subnetId": "subnet_id",
                "virtualNetworkId": "virtual_network_id",
                "vmSize": "vm_size"
            },
            "azure:hdinsight/HadoopClusterSecurityProfile:HadoopClusterSecurityProfile": {
                "aaddsResourceId": "aadds_resource_id",
                "clusterUsersGroupDns": "cluster_users_group_dns",
                "domainName": "domain_name",
                "domainUserPassword": "domain_user_password",
                "domainUsername": "domain_username",
                "ldapsUrls": "ldaps_urls",
                "msiResourceId": "msi_resource_id"
            },
            "azure:hdinsight/HadoopClusterStorageAccount:HadoopClusterStorageAccount": {
                "isDefault": "is_default",
                "storageAccountKey": "storage_account_key",
                "storageContainerId": "storage_container_id",
                "storageResourceId": "storage_resource_id"
            },
            "azure:hdinsight/HadoopClusterStorageAccountGen2:HadoopClusterStorageAccountGen2": {
                "filesystemId": "filesystem_id",
                "isDefault": "is_default",
                "managedIdentityResourceId": "managed_identity_resource_id",
                "storageResourceId": "storage_resource_id"
            },
            "azure:hdinsight/InteractiveQueryClusterComponentVersion:InteractiveQueryClusterComponentVersion": {
                "interactiveHive": "interactive_hive"
            },
            "azure:hdinsight/InteractiveQueryClusterComputeIsolation:InteractiveQueryClusterComputeIsolation": {
                "computeIsolationEnabled": "compute_isolation_enabled",
                "hostSku": "host_sku"
            },
            "azure:hdinsight/InteractiveQueryClusterDiskEncryption:InteractiveQueryClusterDiskEncryption": {
                "encryptionAlgorithm": "encryption_algorithm",
                "encryptionAtHostEnabled": "encryption_at_host_enabled",
                "keyVaultKeyId": "key_vault_key_id",
                "keyVaultManagedIdentityId": "key_vault_managed_identity_id"
            },
            "azure:hdinsight/InteractiveQueryClusterExtension:InteractiveQueryClusterExtension": {
                "logAnalyticsWorkspaceId": "log_analytics_workspace_id",
                "primaryKey": "primary_key"
            },
            "azure:hdinsight/InteractiveQueryClusterMetastoresAmbari:InteractiveQueryClusterMetastoresAmbari": {
                "databaseName": "database_name"
            },
            "azure:hdinsight/InteractiveQueryClusterMetastoresHive:InteractiveQueryClusterMetastoresHive": {
                "databaseName": "database_name"
            },
            "azure:hdinsight/InteractiveQueryClusterMetastoresOozie:InteractiveQueryClusterMetastoresOozie": {
                "databaseName": "database_name"
            },
            "azure:hdinsight/InteractiveQueryClusterMonitor:InteractiveQueryClusterMonitor": {
                "logAnalyticsWorkspaceId": "log_analytics_workspace_id",
                "primaryKey": "primary_key"
            },
            "azure:hdinsight/InteractiveQueryClusterNetwork:InteractiveQueryClusterNetwork": {
                "connectionDirection": "connection_direction",
                "privateLinkEnabled": "private_link_enabled"
            },
            "azure:hdinsight/InteractiveQueryClusterRoles:InteractiveQueryClusterRoles": {
                "headNode": "head_node",
                "workerNode": "worker_node",
                "zookeeperNode": "zookeeper_node"
            },
            "azure:hdinsight/InteractiveQueryClusterRolesHeadNode:InteractiveQueryClusterRolesHeadNode": {
                "scriptActions": "script_actions",
                "sshKeys": "ssh_keys",
                "subnetId": "subnet_id",
                "virtualNetworkId": "virtual_network_id",
                "vmSize": "vm_size"
            },
            "azure:hdinsight/InteractiveQueryClusterRolesWorkerNode:InteractiveQueryClusterRolesWorkerNode": {
                "scriptActions": "script_actions",
                "sshKeys": "ssh_keys",
                "subnetId": "subnet_id",
                "targetInstanceCount": "target_instance_count",
                "virtualNetworkId": "virtual_network_id",
                "vmSize": "vm_size"
            },
            "azure:hdinsight/InteractiveQueryClusterRolesWorkerNodeAutoscaleCapacity:InteractiveQueryClusterRolesWorkerNodeAutoscaleCapacity": {
                "maxInstanceCount": "max_instance_count",
                "minInstanceCount": "min_instance_count"
            },
            "azure:hdinsight/InteractiveQueryClusterRolesWorkerNodeAutoscaleRecurrence:InteractiveQueryClusterRolesWorkerNodeAutoscaleRecurrence": {
                "schedules": "schedule"
            },
            "azure:hdinsight/InteractiveQueryClusterRolesWorkerNodeAutoscaleRecurrenceSchedule:InteractiveQueryClusterRolesWorkerNodeAutoscaleRecurrenceSchedule": {
                "targetInstanceCount": "target_instance_count"
            },
            "azure:hdinsight/InteractiveQueryClusterRolesZookeeperNode:InteractiveQueryClusterRolesZookeeperNode": {
                "scriptActions": "script_actions",
                "sshKeys": "ssh_keys",
                "subnetId": "subnet_id",
                "virtualNetworkId": "virtual_network_id",
                "vmSize": "vm_size"
            },
            "azure:hdinsight/InteractiveQueryClusterSecurityProfile:InteractiveQueryClusterSecurityProfile": {
                "aaddsResourceId": "aadds_resource_id",
                "clusterUsersGroupDns": "cluster_users_group_dns",
                "domainName": "domain_name",
                "domainUserPassword": "domain_user_password",
                "domainUsername": "domain_username",
                "ldapsUrls": "ldaps_urls",
                "msiResourceId": "msi_resource_id"
            },
            "azure:hdinsight/InteractiveQueryClusterStorageAccount:InteractiveQueryClusterStorageAccount": {
                "isDefault": "is_default",
                "storageAccountKey": "storage_account_key",
                "storageContainerId": "storage_container_id",
                "storageResourceId": "storage_resource_id"
            },
            "azure:hdinsight/InteractiveQueryClusterStorageAccountGen2:InteractiveQueryClusterStorageAccountGen2": {
                "filesystemId": "filesystem_id",
                "isDefault": "is_default",
                "managedIdentityResourceId": "managed_identity_resource_id",
                "storageResourceId": "storage_resource_id"
            },
            "azure:hdinsight/KafkaClusterComputeIsolation:KafkaClusterComputeIsolation": {
                "computeIsolationEnabled": "compute_isolation_enabled",
                "hostSku": "host_sku"
            },
            "azure:hdinsight/KafkaClusterDiskEncryption:KafkaClusterDiskEncryption": {
                "encryptionAlgorithm": "encryption_algorithm",
                "encryptionAtHostEnabled": "encryption_at_host_enabled",
                "keyVaultKeyId": "key_vault_key_id",
                "keyVaultManagedIdentityId": "key_vault_managed_identity_id"
            },
            "azure:hdinsight/KafkaClusterExtension:KafkaClusterExtension": {
                "logAnalyticsWorkspaceId": "log_analytics_workspace_id",
                "primaryKey": "primary_key"
            },
            "azure:hdinsight/KafkaClusterMetastoresAmbari:KafkaClusterMetastoresAmbari": {
                "databaseName": "database_name"
            },
            "azure:hdinsight/KafkaClusterMetastoresHive:KafkaClusterMetastoresHive": {
                "databaseName": "database_name"
            },
            "azure:hdinsight/KafkaClusterMetastoresOozie:KafkaClusterMetastoresOozie": {
                "databaseName": "database_name"
            },
            "azure:hdinsight/KafkaClusterMonitor:KafkaClusterMonitor": {
                "logAnalyticsWorkspaceId": "log_analytics_workspace_id",
                "primaryKey": "primary_key"
            },
            "azure:hdinsight/KafkaClusterNetwork:KafkaClusterNetwork": {
                "connectionDirection": "connection_direction",
                "privateLinkEnabled": "private_link_enabled"
            },
            "azure:hdinsight/KafkaClusterRestProxy:KafkaClusterRestProxy": {
                "securityGroupId": "security_group_id",
                "securityGroupName": "security_group_name"
            },
            "azure:hdinsight/KafkaClusterRoles:KafkaClusterRoles": {
                "headNode": "head_node",
                "kafkaManagementNode": "kafka_management_node",
                "workerNode": "worker_node",
                "zookeeperNode": "zookeeper_node"
            },
            "azure:hdinsight/KafkaClusterRolesHeadNode:KafkaClusterRolesHeadNode": {
                "scriptActions": "script_actions",
                "sshKeys": "ssh_keys",
                "subnetId": "subnet_id",
                "virtualNetworkId": "virtual_network_id",
                "vmSize": "vm_size"
            },
            "azure:hdinsight/KafkaClusterRolesKafkaManagementNode:KafkaClusterRolesKafkaManagementNode": {
                "scriptActions": "script_actions",
                "sshKeys": "ssh_keys",
                "subnetId": "subnet_id",
                "virtualNetworkId": "virtual_network_id",
                "vmSize": "vm_size"
            },
            "azure:hdinsight/KafkaClusterRolesWorkerNode:KafkaClusterRolesWorkerNode": {
                "numberOfDisksPerNode": "number_of_disks_per_node",
                "scriptActions": "script_actions",
                "sshKeys": "ssh_keys",
                "subnetId": "subnet_id",
                "targetInstanceCount": "target_instance_count",
                "virtualNetworkId": "virtual_network_id",
                "vmSize": "vm_size"
            },
            "azure:hdinsight/KafkaClusterRolesZookeeperNode:KafkaClusterRolesZookeeperNode": {
                "scriptActions": "script_actions",
                "sshKeys": "ssh_keys",
                "subnetId": "subnet_id",
                "virtualNetworkId": "virtual_network_id",
                "vmSize": "vm_size"
            },
            "azure:hdinsight/KafkaClusterSecurityProfile:KafkaClusterSecurityProfile": {
                "aaddsResourceId": "aadds_resource_id",
                "clusterUsersGroupDns": "cluster_users_group_dns",
                "domainName": "domain_name",
                "domainUserPassword": "domain_user_password",
                "domainUsername": "domain_username",
                "ldapsUrls": "ldaps_urls",
                "msiResourceId": "msi_resource_id"
            },
            "azure:hdinsight/KafkaClusterStorageAccount:KafkaClusterStorageAccount": {
                "isDefault": "is_default",
                "storageAccountKey": "storage_account_key",
                "storageContainerId": "storage_container_id",
                "storageResourceId": "storage_resource_id"
            },
            "azure:hdinsight/KafkaClusterStorageAccountGen2:KafkaClusterStorageAccountGen2": {
                "filesystemId": "filesystem_id",
                "isDefault": "is_default",
                "managedIdentityResourceId": "managed_identity_resource_id",
                "storageResourceId": "storage_resource_id"
            },
            "azure:hdinsight/SparkClusterComputeIsolation:SparkClusterComputeIsolation": {
                "computeIsolationEnabled": "compute_isolation_enabled",
                "hostSku": "host_sku"
            },
            "azure:hdinsight/SparkClusterDiskEncryption:SparkClusterDiskEncryption": {
                "encryptionAlgorithm": "encryption_algorithm",
                "encryptionAtHostEnabled": "encryption_at_host_enabled",
                "keyVaultKeyId": "key_vault_key_id",
                "keyVaultManagedIdentityId": "key_vault_managed_identity_id"
            },
            "azure:hdinsight/SparkClusterExtension:SparkClusterExtension": {
                "logAnalyticsWorkspaceId": "log_analytics_workspace_id",
                "primaryKey": "primary_key"
            },
            "azure:hdinsight/SparkClusterMetastoresAmbari:SparkClusterMetastoresAmbari": {
                "databaseName": "database_name"
            },
            "azure:hdinsight/SparkClusterMetastoresHive:SparkClusterMetastoresHive": {
                "databaseName": "database_name"
            },
            "azure:hdinsight/SparkClusterMetastoresOozie:SparkClusterMetastoresOozie": {
                "databaseName": "database_name"
            },
            "azure:hdinsight/SparkClusterMonitor:SparkClusterMonitor": {
                "logAnalyticsWorkspaceId": "log_analytics_workspace_id",
                "primaryKey": "primary_key"
            },
            "azure:hdinsight/SparkClusterNetwork:SparkClusterNetwork": {
                "connectionDirection": "connection_direction",
                "privateLinkEnabled": "private_link_enabled"
            },
            "azure:hdinsight/SparkClusterRoles:SparkClusterRoles": {
                "headNode": "head_node",
                "workerNode": "worker_node",
                "zookeeperNode": "zookeeper_node"
            },
            "azure:hdinsight/SparkClusterRolesHeadNode:SparkClusterRolesHeadNode": {
                "scriptActions": "script_actions",
                "sshKeys": "ssh_keys",
                "subnetId": "subnet_id",
                "virtualNetworkId": "virtual_network_id",
                "vmSize": "vm_size"
            },
            "azure:hdinsight/SparkClusterRolesWorkerNode:SparkClusterRolesWorkerNode": {
                "scriptActions": "script_actions",
                "sshKeys": "ssh_keys",
                "subnetId": "subnet_id",
                "targetInstanceCount": "target_instance_count",
                "virtualNetworkId": "virtual_network_id",
                "vmSize": "vm_size"
            },
            "azure:hdinsight/SparkClusterRolesWorkerNodeAutoscaleCapacity:SparkClusterRolesWorkerNodeAutoscaleCapacity": {
                "maxInstanceCount": "max_instance_count",
                "minInstanceCount": "min_instance_count"
            },
            "azure:hdinsight/SparkClusterRolesWorkerNodeAutoscaleRecurrence:SparkClusterRolesWorkerNodeAutoscaleRecurrence": {
                "schedules": "schedule"
            },
            "azure:hdinsight/SparkClusterRolesWorkerNodeAutoscaleRecurrenceSchedule:SparkClusterRolesWorkerNodeAutoscaleRecurrenceSchedule": {
                "targetInstanceCount": "target_instance_count"
            },
            "azure:hdinsight/SparkClusterRolesZookeeperNode:SparkClusterRolesZookeeperNode": {
                "scriptActions": "script_actions",
                "sshKeys": "ssh_keys",
                "subnetId": "subnet_id",
                "virtualNetworkId": "virtual_network_id",
                "vmSize": "vm_size"
            },
            "azure:hdinsight/SparkClusterSecurityProfile:SparkClusterSecurityProfile": {
                "aaddsResourceId": "aadds_resource_id",
                "clusterUsersGroupDns": "cluster_users_group_dns",
                "domainName": "domain_name",
                "domainUserPassword": "domain_user_password",
                "domainUsername": "domain_username",
                "ldapsUrls": "ldaps_urls",
                "msiResourceId": "msi_resource_id"
            },
            "azure:hdinsight/SparkClusterStorageAccount:SparkClusterStorageAccount": {
                "isDefault": "is_default",
                "storageAccountKey": "storage_account_key",
                "storageContainerId": "storage_container_id",
                "storageResourceId": "storage_resource_id"
            },
            "azure:hdinsight/SparkClusterStorageAccountGen2:SparkClusterStorageAccountGen2": {
                "filesystemId": "filesystem_id",
                "isDefault": "is_default",
                "managedIdentityResourceId": "managed_identity_resource_id",
                "storageResourceId": "storage_resource_id"
            },
            "azure:hdinsight/getCluster:getCluster": {
                "clusterVersion": "cluster_version",
                "componentVersions": "component_versions",
                "edgeSshEndpoint": "edge_ssh_endpoint",
                "gateways": "gateway",
                "httpsEndpoint": "https_endpoint",
                "kafkaRestProxyEndpoint": "kafka_rest_proxy_endpoint",
                "resourceGroupName": "resource_group_name",
                "sshEndpoint": "ssh_endpoint",
                "tlsMinVersion": "tls_min_version"
            },
            "azure:hdinsight/hBaseCluster:HBaseCluster": {
                "clusterVersion": "cluster_version",
                "componentVersion": "component_version",
                "computeIsolation": "compute_isolation",
                "diskEncryptions": "disk_encryption",
                "httpsEndpoint": "https_endpoint",
                "resourceGroupName": "resource_group_name",
                "securityProfile": "security_profile",
                "sshEndpoint": "ssh_endpoint",
                "storageAccountGen2": "storage_account_gen2",
                "storageAccounts": "storage_account",
                "tlsMinVersion": "tls_min_version"
            },
            "azure:hdinsight/hadoopCluster:HadoopCluster": {
                "clusterVersion": "cluster_version",
                "componentVersion": "component_version",
                "computeIsolation": "compute_isolation",
                "diskEncryptions": "disk_encryption",
                "httpsEndpoint": "https_endpoint",
                "resourceGroupName": "resource_group_name",
                "securityProfile": "security_profile",
                "sshEndpoint": "ssh_endpoint",
                "storageAccountGen2": "storage_account_gen2",
                "storageAccounts": "storage_account",
                "tlsMinVersion": "tls_min_version"
            },
            "azure:hdinsight/interactiveQueryCluster:InteractiveQueryCluster": {
                "clusterVersion": "cluster_version",
                "componentVersion": "component_version",
                "computeIsolation": "compute_isolation",
                "diskEncryptions": "disk_encryption",
                "encryptionInTransitEnabled": "encryption_in_transit_enabled",
                "httpsEndpoint": "https_endpoint",
                "resourceGroupName": "resource_group_name",
                "securityProfile": "security_profile",
                "sshEndpoint": "ssh_endpoint",
                "storageAccountGen2": "storage_account_gen2",
                "storageAccounts": "storage_account",
                "tlsMinVersion": "tls_min_version"
            },
            "azure:hdinsight/kafkaCluster:KafkaCluster": {
                "clusterVersion": "cluster_version",
                "componentVersion": "component_version",
                "computeIsolation": "compute_isolation",
                "diskEncryptions": "disk_encryption",
                "encryptionInTransitEnabled": "encryption_in_transit_enabled",
                "httpsEndpoint": "https_endpoint",
                "kafkaRestProxyEndpoint": "kafka_rest_proxy_endpoint",
                "resourceGroupName": "resource_group_name",
                "restProxy": "rest_proxy",
                "securityProfile": "security_profile",
                "sshEndpoint": "ssh_endpoint",
                "storageAccountGen2": "storage_account_gen2",
                "storageAccounts": "storage_account",
                "tlsMinVersion": "tls_min_version"
            },
            "azure:hdinsight/sparkCluster:SparkCluster": {
                "clusterVersion": "cluster_version",
                "componentVersion": "component_version",
                "computeIsolation": "compute_isolation",
                "diskEncryptions": "disk_encryption",
                "encryptionInTransitEnabled": "encryption_in_transit_enabled",
                "httpsEndpoint": "https_endpoint",
                "resourceGroupName": "resource_group_name",
                "securityProfile": "security_profile",
                "sshEndpoint": "ssh_endpoint",
                "storageAccountGen2": "storage_account_gen2",
                "storageAccounts": "storage_account",
                "tlsMinVersion": "tls_min_version"
            },
            "azure:healthcare/DicomServiceAuthentication:DicomServiceAuthentication": {
                "audiences": "audience"
            },
            "azure:healthcare/DicomServiceIdentity:DicomServiceIdentity": {
                "identityIds": "identity_ids",
                "principalId": "principal_id",
                "tenantId": "tenant_id"
            },
            "azure:healthcare/FhirServiceAuthentication:FhirServiceAuthentication": {
                "smartProxyEnabled": "smart_proxy_enabled"
            },
            "azure:healthcare/FhirServiceCors:FhirServiceCors": {
                "allowedHeaders": "allowed_headers",
                "allowedMethods": "allowed_methods",
                "allowedOrigins": "allowed_origins",
                "credentialsAllowed": "credentials_allowed",
                "maxAgeInSeconds": "max_age_in_seconds"
            },
            "azure:healthcare/FhirServiceIdentity:FhirServiceIdentity": {
                "identityIds": "identity_ids",
                "principalId": "principal_id",
                "tenantId": "tenant_id"
            },
            "azure:healthcare/FhirServiceOciArtifact:FhirServiceOciArtifact": {
                "imageName": "image_name",
                "loginServer": "login_server"
            },
            "azure:healthcare/MedtechServiceIdentity:MedtechServiceIdentity": {
                "identityIds": "identity_ids",
                "principalId": "principal_id",
                "tenantId": "tenant_id"
            },
            "azure:healthcare/ServiceAuthenticationConfiguration:ServiceAuthenticationConfiguration": {
                "smartProxyEnabled": "smart_proxy_enabled"
            },
            "azure:healthcare/ServiceCorsConfiguration:ServiceCorsConfiguration": {
                "allowCredentials": "allow_credentials",
                "allowedHeaders": "allowed_headers",
                "allowedMethods": "allowed_methods",
                "allowedOrigins": "allowed_origins",
                "maxAgeInSeconds": "max_age_in_seconds"
            },
            "azure:healthcare/dicomService:DicomService": {
                "authentications": "authentication",
                "privateEndpoints": "private_endpoint",
                "publicNetworkAccessEnabled": "public_network_access_enabled",
                "serviceUrl": "service_url",
                "workspaceId": "workspace_id"
            },
            "azure:healthcare/fhirService:FhirService": {
                "accessPolicyObjectIds": "access_policy_object_ids",
                "configurationExportStorageAccountName": "configuration_export_storage_account_name",
                "containerRegistryLoginServerUrls": "container_registry_login_server_url",
                "ociArtifacts": "oci_artifact",
                "publicNetworkAccessEnabled": "public_network_access_enabled",
                "resourceGroupName": "resource_group_name",
                "workspaceId": "workspace_id"
            },
            "azure:healthcare/getDicomService:getDicomService": {
                "authentications": "authentication",
                "identities": "identity",
                "privateEndpoints": "private_endpoint",
                "serviceUrl": "service_url",
                "workspaceId": "workspace_id"
            },
            "azure:healthcare/getDicomServiceAuthentication:getDicomServiceAuthentication": {
                "audiences": "audience"
            },
            "azure:healthcare/getDicomServiceIdentity:getDicomServiceIdentity": {
                "identityIds": "identity_ids",
                "principalId": "principal_id",
                "tenantId": "tenant_id"
            },
            "azure:healthcare/getFhirService:getFhirService": {
                "accessPolicyObjectIds": "access_policy_object_ids",
                "authentications": "authentication",
                "configurationExportStorageAccountName": "configuration_export_storage_account_name",
                "containerRegistryLoginServerUrls": "container_registry_login_server_url",
                "identities": "identity",
                "workspaceId": "workspace_id"
            },
            "azure:healthcare/getFhirServiceAuthentication:getFhirServiceAuthentication": {
                "smartProxyEnabled": "smart_proxy_enabled"
            },
            "azure:healthcare/getFhirServiceCor:getFhirServiceCor": {
                "allowedHeaders": "allowed_headers",
                "allowedMethods": "allowed_methods",
                "allowedOrigins": "allowed_origins",
                "credentialsAllowed": "credentials_allowed",
                "maxAgeInSeconds": "max_age_in_seconds"
            },
            "azure:healthcare/getFhirServiceIdentity:getFhirServiceIdentity": {
                "identityIds": "identity_ids",
                "principalId": "principal_id",
                "tenantId": "tenant_id"
            },
            "azure:healthcare/getMedtechService:getMedtechService": {
                "deviceMappingJson": "device_mapping_json",
                "eventhubConsumerGroupName": "eventhub_consumer_group_name",
                "eventhubName": "eventhub_name",
                "eventhubNamespaceName": "eventhub_namespace_name",
                "identities": "identity",
                "workspaceId": "workspace_id"
            },
            "azure:healthcare/getMedtechServiceIdentity:getMedtechServiceIdentity": {
                "identityIds": "identity_ids",
                "principalId": "principal_id",
                "tenantId": "tenant_id"
            },
            "azure:healthcare/getService:getService": {
                "accessPolicyObjectIds": "access_policy_object_ids",
                "authenticationConfigurations": "authentication_configuration",
                "corsConfigurations": "cors_configuration",
                "cosmosdbKeyVaultKeyVersionlessId": "cosmosdb_key_vault_key_versionless_id",
                "cosmosdbThroughput": "cosmosdb_throughput",
                "resourceGroupName": "resource_group_name"
            },
            "azure:healthcare/getServiceAuthenticationConfiguration:getServiceAuthenticationConfiguration": {
                "smartProxyEnabled": "smart_proxy_enabled"
            },
            "azure:healthcare/getServiceCorsConfiguration:getServiceCorsConfiguration": {
                "allowCredentials": "allow_credentials",
                "allowedHeaders": "allowed_headers",
                "allowedMethods": "allowed_methods",
                "allowedOrigins": "allowed_origins",
                "maxAgeInSeconds": "max_age_in_seconds"
            },
            "azure:healthcare/getWorkspace:getWorkspace": {
                "resourceGroupName": "resource_group_name"
            },
            "azure:healthcare/medtechService:MedtechService": {
                "deviceMappingJson": "device_mapping_json",
                "eventhubConsumerGroupName": "eventhub_consumer_group_name",
                "eventhubName": "eventhub_name",
                "eventhubNamespaceName": "eventhub_namespace_name",
                "workspaceId": "workspace_id"
            },
            "azure:healthcare/medtechServiceFhirDestination:MedtechServiceFhirDestination": {
                "destinationFhirMappingJson": "destination_fhir_mapping_json",
                "destinationFhirServiceId": "destination_fhir_service_id",
                "destinationIdentityResolutionType": "destination_identity_resolution_type",
                "medtechServiceId": "medtech_service_id"
            },
            "azure:healthcare/service:Service": {
                "accessPolicyObjectIds": "access_policy_object_ids",
                "authenticationConfiguration": "authentication_configuration",
                "corsConfiguration": "cors_configuration",
                "cosmosdbKeyVaultKeyVersionlessId": "cosmosdb_key_vault_key_versionless_id",
                "cosmosdbThroughput": "cosmosdb_throughput",
                "publicNetworkAccessEnabled": "public_network_access_enabled",
                "resourceGroupName": "resource_group_name"
            },
            "azure:healthcare/workspace:Workspace": {
                "privateEndpointConnections": "private_endpoint_connection",
                "resourceGroupName": "resource_group_name"
            },
            "azure:hpc/CacheAccessPolicyAccessRule:CacheAccessPolicyAccessRule": {
                "anonymousGid": "anonymous_gid",
                "anonymousUid": "anonymous_uid",
                "rootSquashEnabled": "root_squash_enabled",
                "submountAccessEnabled": "submount_access_enabled",
                "suidEnabled": "suid_enabled"
            },
            "azure:hpc/CacheDefaultAccessPolicy:CacheDefaultAccessPolicy": {
                "accessRules": "access_rule"
            },
            "azure:hpc/CacheDefaultAccessPolicyAccessRule:CacheDefaultAccessPolicyAccessRule": {
                "anonymousGid": "anonymous_gid",
                "anonymousUid": "anonymous_uid",
                "rootSquashEnabled": "root_squash_enabled",
                "submountAccessEnabled": "submount_access_enabled",
                "suidEnabled": "suid_enabled"
            },
            "azure:hpc/CacheDirectoryActiveDirectory:CacheDirectoryActiveDirectory": {
                "cacheNetbiosName": "cache_netbios_name",
                "dnsPrimaryIp": "dns_primary_ip",
                "dnsSecondaryIp": "dns_secondary_ip",
                "domainName": "domain_name",
                "domainNetbiosName": "domain_netbios_name"
            },
            "azure:hpc/CacheDirectoryFlatFile:CacheDirectoryFlatFile": {
                "groupFileUri": "group_file_uri",
                "passwordFileUri": "password_file_uri"
            },
            "azure:hpc/CacheDirectoryLdap:CacheDirectoryLdap": {
                "baseDn": "base_dn",
                "certificateValidationUri": "certificate_validation_uri",
                "downloadCertificateAutomatically": "download_certificate_automatically"
            },
            "azure:hpc/CacheDns:CacheDns": {
                "searchDomain": "search_domain"
            },
            "azure:hpc/CacheIdentity:CacheIdentity": {
                "identityIds": "identity_ids",
                "principalId": "principal_id",
                "tenantId": "tenant_id"
            },
            "azure:hpc/CacheNfsTargetNamespaceJunction:CacheNfsTargetNamespaceJunction": {
                "accessPolicyName": "access_policy_name",
                "namespacePath": "namespace_path",
                "nfsExport": "nfs_export",
                "targetPath": "target_path"
            },
            "azure:hpc/cache:Cache": {
                "automaticallyRotateKeyToLatestEnabled": "automatically_rotate_key_to_latest_enabled",
                "cacheSizeInGb": "cache_size_in_gb",
                "defaultAccessPolicy": "default_access_policy",
                "directoryActiveDirectory": "directory_active_directory",
                "directoryFlatFile": "directory_flat_file",
                "directoryLdap": "directory_ldap",
                "keyVaultKeyId": "key_vault_key_id",
                "mountAddresses": "mount_addresses",
                "ntpServer": "ntp_server",
                "resourceGroupName": "resource_group_name",
                "skuName": "sku_name",
                "subnetId": "subnet_id"
            },
            "azure:hpc/cacheAccessPolicy:CacheAccessPolicy": {
                "accessRules": "access_rule",
                "hpcCacheId": "hpc_cache_id"
            },
            "azure:hpc/cacheBlobNfsTarget:CacheBlobNfsTarget": {
                "accessPolicyName": "access_policy_name",
                "cacheName": "cache_name",
                "namespacePath": "namespace_path",
                "resourceGroupName": "resource_group_name",
                "storageContainerId": "storage_container_id",
                "usageModel": "usage_model"
            },
            "azure:hpc/cacheBlobTarget:CacheBlobTarget": {
                "accessPolicyName": "access_policy_name",
                "cacheName": "cache_name",
                "namespacePath": "namespace_path",
                "resourceGroupName": "resource_group_name",
                "storageContainerId": "storage_container_id"
            },
            "azure:hpc/cacheNfsTarget:CacheNfsTarget": {
                "cacheName": "cache_name",
                "namespaceJunctions": "namespace_junction",
                "resourceGroupName": "resource_group_name",
                "targetHostName": "target_host_name",
                "usageModel": "usage_model"
            },
            "azure:hsm/ModuleManagementNetworkProfile:ModuleManagementNetworkProfile": {
                "networkInterfacePrivateIpAddresses": "network_interface_private_ip_addresses",
                "subnetId": "subnet_id"
            },
            "azure:hsm/ModuleNetworkProfile:ModuleNetworkProfile": {
                "networkInterfacePrivateIpAddresses": "network_interface_private_ip_addresses",
                "subnetId": "subnet_id"
            },
            "azure:hsm/module:Module": {
                "managementNetworkProfile": "management_network_profile",
                "networkProfile": "network_profile",
                "resourceGroupName": "resource_group_name",
                "skuName": "sku_name",
                "stampId": "stamp_id"
            },
            "azure:hybrid/getComputeMachine:getComputeMachine": {
                "adFqdn": "ad_fqdn",
                "agentConfigurations": "agent_configuration",
                "agentVersion": "agent_version",
                "clientPublicKey": "client_public_key",
                "cloudMetadatas": "cloud_metadata",
                "detectedProperties": "detected_properties",
                "displayName": "display_name",
                "dnsFqdn": "dns_fqdn",
                "domainName": "domain_name",
                "errorDetails": "error_details",
                "identities": "identity",
                "lastStatusChange": "last_status_change",
                "locationDatas": "location_data",
                "machineFqdn": "machine_fqdn",
                "mssqlDiscovered": "mssql_discovered",
                "osName": "os_name",
                "osProfiles": "os_profile",
                "osSku": "os_sku",
                "osType": "os_type",
                "osVersion": "os_version",
                "parentClusterResourceId": "parent_cluster_resource_id",
                "privateLinkScopeResourceId": "private_link_scope_resource_id",
                "resourceGroupName": "resource_group_name",
                "serviceStatuses": "service_status",
                "vmId": "vm_id",
                "vmUuid": "vm_uuid"
            },
            "azure:hybrid/getComputeMachineAgentConfiguration:getComputeMachineAgentConfiguration": {
                "extensionsAllowLists": "extensions_allow_list",
                "extensionsBlockLists": "extensions_block_list",
                "extensionsEnabled": "extensions_enabled",
                "guestConfigurationEnabled": "guest_configuration_enabled",
                "incomingConnectionsPorts": "incoming_connections_ports",
                "proxyBypasses": "proxy_bypass",
                "proxyUrl": "proxy_url"
            },
            "azure:hybrid/getComputeMachineErrorDetail:getComputeMachineErrorDetail": {
                "additionalInfos": "additional_info"
            },
            "azure:hybrid/getComputeMachineIdentity:getComputeMachineIdentity": {
                "principalId": "principal_id",
                "tenantId": "tenant_id"
            },
            "azure:hybrid/getComputeMachineLocationData:getComputeMachineLocationData": {
                "countryOrRegion": "country_or_region"
            },
            "azure:hybrid/getComputeMachineOsProfile:getComputeMachineOsProfile": {
                "computerName": "computer_name",
                "linuxConfigurations": "linux_configuration",
                "windowsConfigurations": "windows_configuration"
            },
            "azure:hybrid/getComputeMachineOsProfileLinuxConfiguration:getComputeMachineOsProfileLinuxConfiguration": {
                "patchSettings": "patch_settings"
            },
            "azure:hybrid/getComputeMachineOsProfileLinuxConfigurationPatchSetting:getComputeMachineOsProfileLinuxConfigurationPatchSetting": {
                "assessmentMode": "assessment_mode",
                "patchMode": "patch_mode"
            },
            "azure:hybrid/getComputeMachineOsProfileWindowsConfiguration:getComputeMachineOsProfileWindowsConfiguration": {
                "patchSettings": "patch_settings"
            },
            "azure:hybrid/getComputeMachineOsProfileWindowsConfigurationPatchSetting:getComputeMachineOsProfileWindowsConfigurationPatchSetting": {
                "assessmentMode": "assessment_mode",
                "patchMode": "patch_mode"
            },
            "azure:hybrid/getComputeMachineServiceStatus:getComputeMachineServiceStatus": {
                "extensionServices": "extension_service",
                "guestConfigurationServices": "guest_configuration_service"
            },
            "azure:hybrid/getComputeMachineServiceStatusExtensionService:getComputeMachineServiceStatusExtensionService": {
                "startupType": "startup_type"
            },
            "azure:hybrid/getComputeMachineServiceStatusGuestConfigurationService:getComputeMachineServiceStatusGuestConfigurationService": {
                "startupType": "startup_type"
            },
            "azure:index/ProviderFeatures:ProviderFeatures": {
                "apiManagement": "api_management",
                "appConfiguration": "app_configuration",
                "applicationInsights": "application_insights",
                "cognitiveAccount": "cognitive_account",
                "keyVault": "key_vault",
                "logAnalyticsWorkspace": "log_analytics_workspace",
                "managedDisk": "managed_disk",
                "resourceGroup": "resource_group",
                "templateDeployment": "template_deployment",
                "virtualMachine": "virtual_machine",
                "virtualMachineScaleSet": "virtual_machine_scale_set"
            },
            "azure:index/ProviderFeaturesApiManagement:ProviderFeaturesApiManagement": {
                "purgeSoftDeleteOnDestroy": "purge_soft_delete_on_destroy",
                "recoverSoftDeleted": "recover_soft_deleted"
            },
            "azure:index/ProviderFeaturesAppConfiguration:ProviderFeaturesAppConfiguration": {
                "purgeSoftDeleteOnDestroy": "purge_soft_delete_on_destroy",
                "recoverSoftDeleted": "recover_soft_deleted"
            },
            "azure:index/ProviderFeaturesApplicationInsights:ProviderFeaturesApplicationInsights": {
                "disableGeneratedRule": "disable_generated_rule"
            },
            "azure:index/ProviderFeaturesCognitiveAccount:ProviderFeaturesCognitiveAccount": {
                "purgeSoftDeleteOnDestroy": "purge_soft_delete_on_destroy"
            },
            "azure:index/ProviderFeaturesKeyVault:ProviderFeaturesKeyVault": {
                "purgeSoftDeleteOnDestroy": "purge_soft_delete_on_destroy",
                "purgeSoftDeletedCertificatesOnDestroy": "purge_soft_deleted_certificates_on_destroy",
                "purgeSoftDeletedHardwareSecurityModulesOnDestroy": "purge_soft_deleted_hardware_security_modules_on_destroy",
                "purgeSoftDeletedKeysOnDestroy": "purge_soft_deleted_keys_on_destroy",
                "purgeSoftDeletedSecretsOnDestroy": "purge_soft_deleted_secrets_on_destroy",
                "recoverSoftDeletedCertificates": "recover_soft_deleted_certificates",
                "recoverSoftDeletedKeyVaults": "recover_soft_deleted_key_vaults",
                "recoverSoftDeletedKeys": "recover_soft_deleted_keys",
                "recoverSoftDeletedSecrets": "recover_soft_deleted_secrets"
            },
            "azure:index/ProviderFeaturesLogAnalyticsWorkspace:ProviderFeaturesLogAnalyticsWorkspace": {
                "permanentlyDeleteOnDestroy": "permanently_delete_on_destroy"
            },
            "azure:index/ProviderFeaturesManagedDisk:ProviderFeaturesManagedDisk": {
                "expandWithoutDowntime": "expand_without_downtime"
            },
            "azure:index/ProviderFeaturesResourceGroup:ProviderFeaturesResourceGroup": {
                "preventDeletionIfContainsResources": "prevent_deletion_if_contains_resources"
            },
            "azure:index/ProviderFeaturesSubscription:ProviderFeaturesSubscription": {
                "preventCancellationOnDestroy": "prevent_cancellation_on_destroy"
            },
            "azure:index/ProviderFeaturesTemplateDeployment:ProviderFeaturesTemplateDeployment": {
                "deleteNestedItemsDuringDeletion": "delete_nested_items_during_deletion"
            },
            "azure:index/ProviderFeaturesVirtualMachine:ProviderFeaturesVirtualMachine": {
                "deleteOsDiskOnDeletion": "delete_os_disk_on_deletion",
                "gracefulShutdown": "graceful_shutdown",
                "skipShutdownAndForceDelete": "skip_shutdown_and_force_delete"
            },
            "azure:index/ProviderFeaturesVirtualMachineScaleSet:ProviderFeaturesVirtualMachineScaleSet": {
                "forceDelete": "force_delete",
                "rollInstancesWhenRequired": "roll_instances_when_required",
                "scaleToZeroBeforeDeletion": "scale_to_zero_before_deletion"
            },
            "azure:index:Provider": {
                "auxiliaryTenantIds": "auxiliary_tenant_ids",
                "clientCertificate": "client_certificate",
                "clientCertificatePassword": "client_certificate_password",
                "clientCertificatePath": "client_certificate_path",
                "clientId": "client_id",
                "clientIdFilePath": "client_id_file_path",
                "clientSecret": "client_secret",
                "clientSecretFilePath": "client_secret_file_path",
                "disableCorrelationRequestId": "disable_correlation_request_id",
                "disableTerraformPartnerId": "disable_terraform_partner_id",
                "metadataHost": "metadata_host",
                "msiEndpoint": "msi_endpoint",
                "oidcRequestToken": "oidc_request_token",
                "oidcRequestUrl": "oidc_request_url",
                "oidcToken": "oidc_token",
                "oidcTokenFilePath": "oidc_token_file_path",
                "partnerId": "partner_id",
                "skipProviderRegistration": "skip_provider_registration",
                "storageUseAzuread": "storage_use_azuread",
                "subscriptionId": "subscription_id",
                "tenantId": "tenant_id",
                "useCli": "use_cli",
                "useMsi": "use_msi",
                "useOidc": "use_oidc"
            },
            "azure:iot/IoTHubCloudToDevice:IoTHubCloudToDevice": {
                "defaultTtl": "default_ttl",
                "feedbacks": "feedback",
                "maxDeliveryCount": "max_delivery_count"
            },
            "azure:iot/IoTHubCloudToDeviceFeedback:IoTHubCloudToDeviceFeedback": {
                "lockDuration": "lock_duration",
                "maxDeliveryCount": "max_delivery_count",
                "timeToLive": "time_to_live"
            },
            "azure:iot/IoTHubEndpoint:IoTHubEndpoint": {
                "authenticationType": "authentication_type",
                "batchFrequencyInSeconds": "batch_frequency_in_seconds",
                "connectionString": "connection_string",
                "containerName": "container_name",
                "endpointUri": "endpoint_uri",
                "entityPath": "entity_path",
                "fileNameFormat": "file_name_format",
                "identityId": "identity_id",
                "maxChunkSizeInBytes": "max_chunk_size_in_bytes",
                "resourceGroupName": "resource_group_name"
            },
            "azure:iot/IoTHubEnrichment:IoTHubEnrichment": {
                "endpointNames": "endpoint_names"
            },
            "azure:iot/IoTHubFallbackRoute:IoTHubFallbackRoute": {
                "endpointNames": "endpoint_names"
            },
            "azure:iot/IoTHubFileUpload:IoTHubFileUpload": {
                "authenticationType": "authentication_type",
                "connectionString": "connection_string",
                "containerName": "container_name",
                "defaultTtl": "default_ttl",
                "identityId": "identity_id",
                "lockDuration": "lock_duration",
                "maxDeliveryCount": "max_delivery_count",
                "sasTtl": "sas_ttl"
            },
            "azure:iot/IoTHubIdentity:IoTHubIdentity": {
                "identityIds": "identity_ids",
                "principalId": "principal_id",
                "tenantId": "tenant_id"
            },
            "azure:iot/IoTHubNetworkRuleSet:IoTHubNetworkRuleSet": {
                "applyToBuiltinEventhubEndpoint": "apply_to_builtin_eventhub_endpoint",
                "defaultAction": "default_action",
                "ipRules": "ip_rule"
            },
            "azure:iot/IoTHubNetworkRuleSetIpRule:IoTHubNetworkRuleSetIpRule": {
                "ipMask": "ip_mask"
            },
            "azure:iot/IoTHubRoute:IoTHubRoute": {
                "endpointNames": "endpoint_names"
            },
            "azure:iot/IoTHubSharedAccessPolicy:IoTHubSharedAccessPolicy": {
                "keyName": "key_name",
                "primaryKey": "primary_key",
                "secondaryKey": "secondary_key"
            },
            "azure:iot/IotHubDeviceUpdateAccountIdentity:IotHubDeviceUpdateAccountIdentity": {
                "identityIds": "identity_ids",
                "principalId": "principal_id",
                "tenantId": "tenant_id"
            },
            "azure:iot/IotHubDeviceUpdateInstanceDiagnosticStorageAccount:IotHubDeviceUpdateInstanceDiagnosticStorageAccount": {
                "connectionString": "connection_string"
            },
            "azure:iot/IotHubDpsIpFilterRule:IotHubDpsIpFilterRule": {
                "ipMask": "ip_mask"
            },
            "azure:iot/IotHubDpsLinkedHub:IotHubDpsLinkedHub": {
                "allocationWeight": "allocation_weight",
                "applyAllocationPolicy": "apply_allocation_policy",
                "connectionString": "connection_string"
            },
            "azure:iot/SecurityDeviceGroupAllowRule:SecurityDeviceGroupAllowRule": {
                "connectionFromIpsNotAlloweds": "connection_from_ips_not_allowed",
                "connectionToIpsNotAlloweds": "connection_to_ips_not_allowed",
                "localUsersNotAlloweds": "local_users_not_allowed",
                "processesNotAlloweds": "processes_not_allowed"
            },
            "azure:iot/SecuritySolutionAdditionalWorkspace:SecuritySolutionAdditionalWorkspace": {
                "dataTypes": "data_types",
                "workspaceId": "workspace_id"
            },
            "azure:iot/SecuritySolutionRecommendationsEnabled:SecuritySolutionRecommendationsEnabled": {
                "acrAuthentication": "acr_authentication",
                "agentSendUnutilizedMsg": "agent_send_unutilized_msg",
                "edgeHubMemOptimize": "edge_hub_mem_optimize",
                "edgeLoggingOption": "edge_logging_option",
                "inconsistentModuleSettings": "inconsistent_module_settings",
                "installAgent": "install_agent",
                "ipFilterDenyAll": "ip_filter_deny_all",
                "ipFilterPermissiveRule": "ip_filter_permissive_rule",
                "openPorts": "open_ports",
                "permissiveFirewallPolicy": "permissive_firewall_policy",
                "permissiveInputFirewallRules": "permissive_input_firewall_rules",
                "permissiveOutputFirewallRules": "permissive_output_firewall_rules",
                "privilegedDockerOptions": "privileged_docker_options",
                "sharedCredentials": "shared_credentials",
                "vulnerableTlsCipherSuite": "vulnerable_tls_cipher_suite"
            },
            "azure:iot/certificate:Certificate": {
                "certificateContent": "certificate_content",
                "iothubName": "iothub_name",
                "isVerified": "is_verified",
                "resourceGroupName": "resource_group_name"
            },
            "azure:iot/consumerGroup:ConsumerGroup": {
                "eventhubEndpointName": "eventhub_endpoint_name",
                "iothubName": "iothub_name",
                "resourceGroupName": "resource_group_name"
            },
            "azure:iot/dpsSharedAccessPolicy:DpsSharedAccessPolicy": {
                "enrollmentRead": "enrollment_read",
                "enrollmentWrite": "enrollment_write",
                "iothubDpsName": "iothub_dps_name",
                "primaryConnectionString": "primary_connection_string",
                "primaryKey": "primary_key",
                "registrationRead": "registration_read",
                "registrationWrite": "registration_write",
                "resourceGroupName": "resource_group_name",
                "secondaryConnectionString": "secondary_connection_string",
                "secondaryKey": "secondary_key",
                "serviceConfig": "service_config"
            },
            "azure:iot/endpointCosmosdbAccount:EndpointCosmosdbAccount": {
                "authenticationType": "authentication_type",
                "containerName": "container_name",
                "databaseName": "database_name",
                "endpointUri": "endpoint_uri",
                "identityId": "identity_id",
                "iothubId": "iothub_id",
                "partitionKeyName": "partition_key_name",
                "partitionKeyTemplate": "partition_key_template",
                "primaryKey": "primary_key",
                "resourceGroupName": "resource_group_name",
                "secondaryKey": "secondary_key"
            },
            "azure:iot/endpointEventhub:EndpointEventhub": {
                "authenticationType": "authentication_type",
                "connectionString": "connection_string",
                "endpointUri": "endpoint_uri",
                "entityPath": "entity_path",
                "identityId": "identity_id",
                "iothubId": "iothub_id",
                "resourceGroupName": "resource_group_name"
            },
            "azure:iot/endpointServicebusQueue:EndpointServicebusQueue": {
                "authenticationType": "authentication_type",
                "connectionString": "connection_string",
                "endpointUri": "endpoint_uri",
                "entityPath": "entity_path",
                "identityId": "identity_id",
                "iothubId": "iothub_id",
                "resourceGroupName": "resource_group_name"
            },
            "azure:iot/endpointServicebusTopic:EndpointServicebusTopic": {
                "authenticationType": "authentication_type",
                "connectionString": "connection_string",
                "endpointUri": "endpoint_uri",
                "entityPath": "entity_path",
                "identityId": "identity_id",
                "iothubId": "iothub_id",
                "resourceGroupName": "resource_group_name"
            },
            "azure:iot/endpointStorageContainer:EndpointStorageContainer": {
                "authenticationType": "authentication_type",
                "batchFrequencyInSeconds": "batch_frequency_in_seconds",
                "connectionString": "connection_string",
                "containerName": "container_name",
                "endpointUri": "endpoint_uri",
                "fileNameFormat": "file_name_format",
                "identityId": "identity_id",
                "iothubId": "iothub_id",
                "maxChunkSizeInBytes": "max_chunk_size_in_bytes",
                "resourceGroupName": "resource_group_name"
            },
            "azure:iot/enrichment:Enrichment": {
                "endpointNames": "endpoint_names",
                "iothubName": "iothub_name",
                "resourceGroupName": "resource_group_name"
            },
            "azure:iot/fallbackRoute:FallbackRoute": {
                "endpointNames": "endpoint_names",
                "iothubName": "iothub_name",
                "resourceGroupName": "resource_group_name"
            },
            "azure:iot/fileUpload:FileUpload": {
                "authenticationType": "authentication_type",
                "connectionString": "connection_string",
                "containerName": "container_name",
                "defaultTtl": "default_ttl",
                "identityId": "identity_id",
                "iothubId": "iothub_id",
                "lockDuration": "lock_duration",
                "maxDeliveryCount": "max_delivery_count",
                "notificationsEnabled": "notifications_enabled",
                "sasTtl": "sas_ttl"
            },
            "azure:iot/getDps:getDps": {
                "allocationPolicy": "allocation_policy",
                "deviceProvisioningHostName": "device_provisioning_host_name",
                "idScope": "id_scope",
                "resourceGroupName": "resource_group_name",
                "serviceOperationsHostName": "service_operations_host_name"
            },
            "azure:iot/getDpsSharedAccessPolicy:getDpsSharedAccessPolicy": {
                "iothubDpsName": "iothub_dps_name",
                "primaryConnectionString": "primary_connection_string",
                "primaryKey": "primary_key",
                "resourceGroupName": "resource_group_name",
                "secondaryConnectionString": "secondary_connection_string",
                "secondaryKey": "secondary_key"
            },
            "azure:iot/getIotHub:getIotHub": {
                "identities": "identity",
                "resourceGroupName": "resource_group_name"
            },
            "azure:iot/getIotHubIdentity:getIotHubIdentity": {
                "identityIds": "identity_ids",
                "principalId": "principal_id",
                "tenantId": "tenant_id"
            },
            "azure:iot/getSharedAccessPolicy:getSharedAccessPolicy": {
                "iothubName": "iothub_name",
                "primaryConnectionString": "primary_connection_string",
                "primaryKey": "primary_key",
                "resourceGroupName": "resource_group_name",
                "secondaryConnectionString": "secondary_connection_string",
                "secondaryKey": "secondary_key"
            },
            "azure:iot/ioTHub:IoTHub": {
                "cloudToDevice": "cloud_to_device",
                "endpoints": "endpoint",
                "enrichments": "enrichment",
                "eventHubEventsEndpoint": "event_hub_events_endpoint",
                "eventHubEventsNamespace": "event_hub_events_namespace",
                "eventHubEventsPath": "event_hub_events_path",
                "eventHubOperationsEndpoint": "event_hub_operations_endpoint",
                "eventHubOperationsPath": "event_hub_operations_path",
                "eventHubPartitionCount": "event_hub_partition_count",
                "eventHubRetentionInDays": "event_hub_retention_in_days",
                "fallbackRoute": "fallback_route",
                "fileUpload": "file_upload",
                "localAuthenticationEnabled": "local_authentication_enabled",
                "minTlsVersion": "min_tls_version",
                "networkRuleSets": "network_rule_set",
                "publicNetworkAccessEnabled": "public_network_access_enabled",
                "resourceGroupName": "resource_group_name",
                "routes": "route",
                "sharedAccessPolicies": "shared_access_policy"
            },
            "azure:iot/iotHubCertificate:IotHubCertificate": {
                "certificateContent": "certificate_content",
                "iotDpsName": "iot_dps_name",
                "isVerified": "is_verified",
                "resourceGroupName": "resource_group_name"
            },
            "azure:iot/iotHubDeviceUpdateAccount:IotHubDeviceUpdateAccount": {
                "hostName": "host_name",
                "publicNetworkAccessEnabled": "public_network_access_enabled",
                "resourceGroupName": "resource_group_name"
            },
            "azure:iot/iotHubDeviceUpdateInstance:IotHubDeviceUpdateInstance": {
                "deviceUpdateAccountId": "device_update_account_id",
                "diagnosticEnabled": "diagnostic_enabled",
                "diagnosticStorageAccount": "diagnostic_storage_account",
                "iothubId": "iothub_id"
            },
            "azure:iot/iotHubDps:IotHubDps": {
                "allocationPolicy": "allocation_policy",
                "dataResidencyEnabled": "data_residency_enabled",
                "deviceProvisioningHostName": "device_provisioning_host_name",
                "idScope": "id_scope",
                "ipFilterRules": "ip_filter_rule",
                "linkedHubs": "linked_hub",
                "publicNetworkAccessEnabled": "public_network_access_enabled",
                "resourceGroupName": "resource_group_name",
                "serviceOperationsHostName": "service_operations_host_name"
            },
            "azure:iot/route:Route": {
                "endpointNames": "endpoint_names",
                "iothubName": "iothub_name",
                "resourceGroupName": "resource_group_name"
            },
            "azure:iot/securityDeviceGroup:SecurityDeviceGroup": {
                "allowRule": "allow_rule",
                "iothubId": "iothub_id",
                "rangeRules": "range_rule"
            },
            "azure:iot/securitySolution:SecuritySolution": {
                "additionalWorkspaces": "additional_workspace",
                "disabledDataSources": "disabled_data_sources",
                "displayName": "display_name",
                "eventsToExports": "events_to_export",
                "iothubIds": "iothub_ids",
                "logAnalyticsWorkspaceId": "log_analytics_workspace_id",
                "logUnmaskedIpsEnabled": "log_unmasked_ips_enabled",
                "queryForResources": "query_for_resources",
                "querySubscriptionIds": "query_subscription_ids",
                "recommendationsEnabled": "recommendations_enabled",
                "resourceGroupName": "resource_group_name"
            },
            "azure:iot/sharedAccessPolicy:SharedAccessPolicy": {
                "deviceConnect": "device_connect",
                "iothubName": "iothub_name",
                "primaryConnectionString": "primary_connection_string",
                "primaryKey": "primary_key",
                "registryRead": "registry_read",
                "registryWrite": "registry_write",
                "resourceGroupName": "resource_group_name",
                "secondaryConnectionString": "secondary_connection_string",
                "secondaryKey": "secondary_key",
                "serviceConnect": "service_connect"
            },
            "azure:iot/timeSeriesInsightsAccessPolicy:TimeSeriesInsightsAccessPolicy": {
                "principalObjectId": "principal_object_id",
                "timeSeriesInsightsEnvironmentId": "time_series_insights_environment_id"
            },
            "azure:iot/timeSeriesInsightsEventSourceEventhub:TimeSeriesInsightsEventSourceEventhub": {
                "consumerGroupName": "consumer_group_name",
                "environmentId": "environment_id",
                "eventSourceResourceId": "event_source_resource_id",
                "eventhubName": "eventhub_name",
                "namespaceName": "namespace_name",
                "sharedAccessKey": "shared_access_key",
                "sharedAccessKeyName": "shared_access_key_name",
                "timestampPropertyName": "timestamp_property_name"
            },
            "azure:iot/timeSeriesInsightsEventSourceIothub:TimeSeriesInsightsEventSourceIothub": {
                "consumerGroupName": "consumer_group_name",
                "environmentId": "environment_id",
                "eventSourceResourceId": "event_source_resource_id",
                "iothubName": "iothub_name",
                "sharedAccessKey": "shared_access_key",
                "sharedAccessKeyName": "shared_access_key_name",
                "timestampPropertyName": "timestamp_property_name"
            },
            "azure:iot/timeSeriesInsightsGen2Environment:TimeSeriesInsightsGen2Environment": {
                "dataAccessFqdn": "data_access_fqdn",
                "idProperties": "id_properties",
                "resourceGroupName": "resource_group_name",
                "skuName": "sku_name",
                "warmStoreDataRetentionTime": "warm_store_data_retention_time"
            },
            "azure:iot/timeSeriesInsightsReferenceDataSet:TimeSeriesInsightsReferenceDataSet": {
                "dataStringComparisonBehavior": "data_string_comparison_behavior",
                "keyProperties": "key_property",
                "timeSeriesInsightsEnvironmentId": "time_series_insights_environment_id"
            },
            "azure:iot/timeSeriesInsightsStandardEnvironment:TimeSeriesInsightsStandardEnvironment": {
                "dataRetentionTime": "data_retention_time",
                "partitionKey": "partition_key",
                "resourceGroupName": "resource_group_name",
                "skuName": "sku_name",
                "storageLimitExceededBehavior": "storage_limit_exceeded_behavior"
            },
            "azure:iotcentral/ApplicationIdentity:ApplicationIdentity": {
                "principalId": "principal_id",
                "tenantId": "tenant_id"
            },
            "azure:iotcentral/ApplicationNetworkRuleSetIpRule:ApplicationNetworkRuleSetIpRule": {
                "ipMask": "ip_mask"
            },
            "azure:iotcentral/application:Application": {
                "displayName": "display_name",
                "publicNetworkAccessEnabled": "public_network_access_enabled",
                "resourceGroupName": "resource_group_name",
                "subDomain": "sub_domain"
            },
            "azure:iotcentral/applicationNetworkRuleSet:ApplicationNetworkRuleSet": {
                "applyToDevice": "apply_to_device",
                "defaultAction": "default_action",
                "iotcentralApplicationId": "iotcentral_application_id",
                "ipRules": "ip_rule"
            },
            "azure:keyvault/CertifiateCertificateAttribute:CertifiateCertificateAttribute": {
                "notBefore": "not_before",
                "recoveryLevel": "recovery_level"
            },
            "azure:keyvault/CertifiateCertificatePolicy:CertifiateCertificatePolicy": {
                "issuerParameters": "issuer_parameters",
                "keyProperties": "key_properties",
                "lifetimeActions": "lifetime_action",
                "secretProperties": "secret_properties",
                "x509CertificateProperties": "x509_certificate_properties"
            },
            "azure:keyvault/CertifiateCertificatePolicyKeyProperties:CertifiateCertificatePolicyKeyProperties": {
                "keySize": "key_size",
                "keyType": "key_type",
                "reuseKey": "reuse_key"
            },
            "azure:keyvault/CertifiateCertificatePolicyLifetimeActionAction:CertifiateCertificatePolicyLifetimeActionAction": {
                "actionType": "action_type"
            },
            "azure:keyvault/CertifiateCertificatePolicyLifetimeActionTrigger:CertifiateCertificatePolicyLifetimeActionTrigger": {
                "daysBeforeExpiry": "days_before_expiry",
                "lifetimePercentage": "lifetime_percentage"
            },
            "azure:keyvault/CertifiateCertificatePolicySecretProperties:CertifiateCertificatePolicySecretProperties": {
                "contentType": "content_type"
            },
            "azure:keyvault/CertifiateCertificatePolicyX509CertificateProperties:CertifiateCertificatePolicyX509CertificateProperties": {
                "extendedKeyUsages": "extended_key_usage",
                "keyUsages": "key_usage",
                "subjectAlternativeNames": "subject_alternative_names",
                "validityInMonths": "validity_in_months"
            },
            "azure:keyvault/CertifiateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNames:CertifiateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNames": {
                "dnsNames": "dns_names"
            },
            "azure:keyvault/CertificateCertificateAttribute:CertificateCertificateAttribute": {
                "notBefore": "not_before",
                "recoveryLevel": "recovery_level"
            },
            "azure:keyvault/CertificateCertificatePolicy:CertificateCertificatePolicy": {
                "issuerParameters": "issuer_parameters",
                "keyProperties": "key_properties",
                "lifetimeActions": "lifetime_action",
                "secretProperties": "secret_properties",
                "x509CertificateProperties": "x509_certificate_properties"
            },
            "azure:keyvault/CertificateCertificatePolicyKeyProperties:CertificateCertificatePolicyKeyProperties": {
                "keySize": "key_size",
                "keyType": "key_type",
                "reuseKey": "reuse_key"
            },
            "azure:keyvault/CertificateCertificatePolicyLifetimeActionAction:CertificateCertificatePolicyLifetimeActionAction": {
                "actionType": "action_type"
            },
            "azure:keyvault/CertificateCertificatePolicyLifetimeActionTrigger:CertificateCertificatePolicyLifetimeActionTrigger": {
                "daysBeforeExpiry": "days_before_expiry",
                "lifetimePercentage": "lifetime_percentage"
            },
            "azure:keyvault/CertificateCertificatePolicySecretProperties:CertificateCertificatePolicySecretProperties": {
                "contentType": "content_type"
            },
            "azure:keyvault/CertificateCertificatePolicyX509CertificateProperties:CertificateCertificatePolicyX509CertificateProperties": {
                "extendedKeyUsages": "extended_key_usage",
                "keyUsages": "key_usage",
                "subjectAlternativeNames": "subject_alternative_names",
                "validityInMonths": "validity_in_months"
            },
            "azure:keyvault/CertificateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNames:CertificateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNames": {
                "dnsNames": "dns_names"
            },
            "azure:keyvault/CertificateIssuerAdmin:CertificateIssuerAdmin": {
                "emailAddress": "email_address",
                "firstName": "first_name",
                "lastName": "last_name"
            },
            "azure:keyvault/KeyRotationPolicy:KeyRotationPolicy": {
                "expireAfter": "expire_after",
                "notifyBeforeExpiry": "notify_before_expiry"
            },
            "azure:keyvault/KeyRotationPolicyAutomatic:KeyRotationPolicyAutomatic": {
                "timeAfterCreation": "time_after_creation",
                "timeBeforeExpiry": "time_before_expiry"
            },
            "azure:keyvault/KeyVaultAccessPolicy:KeyVaultAccessPolicy": {
                "applicationId": "application_id",
                "certificatePermissions": "certificate_permissions",
                "keyPermissions": "key_permissions",
                "objectId": "object_id",
                "secretPermissions": "secret_permissions",
                "storagePermissions": "storage_permissions",
                "tenantId": "tenant_id"
            },
            "azure:keyvault/KeyVaultNetworkAcls:KeyVaultNetworkAcls": {
                "defaultAction": "default_action",
                "ipRules": "ip_rules",
                "virtualNetworkSubnetIds": "virtual_network_subnet_ids"
            },
            "azure:keyvault/ManagedHardwareSecurityModuleNetworkAcls:ManagedHardwareSecurityModuleNetworkAcls": {
                "defaultAction": "default_action"
            },
            "azure:keyvault/ManagedHardwareSecurityModuleRoleDefinitionPermission:ManagedHardwareSecurityModuleRoleDefinitionPermission": {
                "dataActions": "data_actions",
                "notActions": "not_actions",
                "notDataActions": "not_data_actions"
            },
            "azure:keyvault/accessPolicy:AccessPolicy": {
                "applicationId": "application_id",
                "certificatePermissions": "certificate_permissions",
                "keyPermissions": "key_permissions",
                "keyVaultId": "key_vault_id",
                "objectId": "object_id",
                "secretPermissions": "secret_permissions",
                "storagePermissions": "storage_permissions",
                "tenantId": "tenant_id"
            },
            "azure:keyvault/certifiate:Certifiate": {
                "certificateAttributes": "certificate_attribute",
                "certificateData": "certificate_data",
                "certificateDataBase64": "certificate_data_base64",
                "certificatePolicy": "certificate_policy",
                "keyVaultId": "key_vault_id",
                "resourceManagerId": "resource_manager_id",
                "resourceManagerVersionlessId": "resource_manager_versionless_id",
                "secretId": "secret_id",
                "versionlessId": "versionless_id",
                "versionlessSecretId": "versionless_secret_id"
            },
            "azure:keyvault/certificate:Certificate": {
                "certificateAttributes": "certificate_attribute",
                "certificateData": "certificate_data",
                "certificateDataBase64": "certificate_data_base64",
                "certificatePolicy": "certificate_policy",
                "keyVaultId": "key_vault_id",
                "resourceManagerId": "resource_manager_id",
                "resourceManagerVersionlessId": "resource_manager_versionless_id",
                "secretId": "secret_id",
                "versionlessId": "versionless_id",
                "versionlessSecretId": "versionless_secret_id"
            },
            "azure:keyvault/certificateContacts:CertificateContacts": {
                "contacts": "contact",
                "keyVaultId": "key_vault_id"
            },
            "azure:keyvault/certificateIssuer:CertificateIssuer": {
                "accountId": "account_id",
                "admins": "admin",
                "keyVaultId": "key_vault_id",
                "orgId": "org_id",
                "providerName": "provider_name"
            },
            "azure:keyvault/getAccessPolicy:getAccessPolicy": {
                "certificatePermissions": "certificate_permissions",
                "keyPermissions": "key_permissions",
                "secretPermissions": "secret_permissions"
            },
            "azure:keyvault/getCertificate:getCertificate": {
                "certificateData": "certificate_data",
                "certificateDataBase64": "certificate_data_base64",
                "certificatePolicies": "certificate_policy",
                "keyVaultId": "key_vault_id",
                "notBefore": "not_before",
                "resourceManagerId": "resource_manager_id",
                "resourceManagerVersionlessId": "resource_manager_versionless_id",
                "secretId": "secret_id",
                "versionlessId": "versionless_id",
                "versionlessSecretId": "versionless_secret_id"
            },
            "azure:keyvault/getCertificateCertificatePolicy:getCertificateCertificatePolicy": {
                "issuerParameters": "issuer_parameters",
                "keyProperties": "key_properties",
                "lifetimeActions": "lifetime_action",
                "secretProperties": "secret_properties",
                "x509CertificateProperties": "x509_certificate_properties"
            },
            "azure:keyvault/getCertificateCertificatePolicyKeyProperty:getCertificateCertificatePolicyKeyProperty": {
                "keySize": "key_size",
                "keyType": "key_type",
                "reuseKey": "reuse_key"
            },
            "azure:keyvault/getCertificateCertificatePolicyLifetimeAction:getCertificateCertificatePolicyLifetimeAction": {
                "actions": "action",
                "triggers": "trigger"
            },
            "azure:keyvault/getCertificateCertificatePolicyLifetimeActionAction:getCertificateCertificatePolicyLifetimeActionAction": {
                "actionType": "action_type"
            },
            "azure:keyvault/getCertificateCertificatePolicyLifetimeActionTrigger:getCertificateCertificatePolicyLifetimeActionTrigger": {
                "daysBeforeExpiry": "days_before_expiry",
                "lifetimePercentage": "lifetime_percentage"
            },
            "azure:keyvault/getCertificateCertificatePolicySecretProperty:getCertificateCertificatePolicySecretProperty": {
                "contentType": "content_type"
            },
            "azure:keyvault/getCertificateCertificatePolicyX509CertificateProperty:getCertificateCertificatePolicyX509CertificateProperty": {
                "extendedKeyUsages": "extended_key_usage",
                "keyUsages": "key_usage",
                "subjectAlternativeNames": "subject_alternative_names",
                "validityInMonths": "validity_in_months"
            },
            "azure:keyvault/getCertificateCertificatePolicyX509CertificatePropertySubjectAlternativeName:getCertificateCertificatePolicyX509CertificatePropertySubjectAlternativeName": {
                "dnsNames": "dns_names"
            },
            "azure:keyvault/getCertificateData:getCertificateData": {
                "certificatesCount": "certificates_count",
                "keyVaultId": "key_vault_id",
                "notBefore": "not_before"
            },
            "azure:keyvault/getCertificateIssuer:getCertificateIssuer": {
                "accountId": "account_id",
                "admins": "admin",
                "keyVaultId": "key_vault_id",
                "orgId": "org_id",
                "providerName": "provider_name"
            },
            "azure:keyvault/getCertificateIssuerAdmin:getCertificateIssuerAdmin": {
                "emailAddress": "email_address",
                "firstName": "first_name",
                "lastName": "last_name"
            },
            "azure:keyvault/getCertificates:getCertificates": {
                "includePending": "include_pending",
                "keyVaultId": "key_vault_id"
            },
            "azure:keyvault/getEncryptedValue:getEncryptedValue": {
                "decodedPlainTextValue": "decoded_plain_text_value",
                "encryptedData": "encrypted_data",
                "keyVaultKeyId": "key_vault_key_id",
                "plainTextValue": "plain_text_value"
            },
            "azure:keyvault/getKey:getKey": {
                "keyOpts": "key_opts",
                "keySize": "key_size",
                "keyType": "key_type",
                "keyVaultId": "key_vault_id",
                "publicKeyOpenssh": "public_key_openssh",
                "publicKeyPem": "public_key_pem",
                "resourceId": "resource_id",
                "resourceVersionlessId": "resource_versionless_id",
                "versionlessId": "versionless_id"
            },
            "azure:keyvault/getKeyVault:getKeyVault": {
                "accessPolicies": "access_policy",
                "enableRbacAuthorization": "enable_rbac_authorization",
                "enabledForDeployment": "enabled_for_deployment",
                "enabledForDiskEncryption": "enabled_for_disk_encryption",
                "enabledForTemplateDeployment": "enabled_for_template_deployment",
                "networkAcls": "network_acls",
                "publicNetworkAccessEnabled": "public_network_access_enabled",
                "purgeProtectionEnabled": "purge_protection_enabled",
                "resourceGroupName": "resource_group_name",
                "skuName": "sku_name",
                "tenantId": "tenant_id",
                "vaultUri": "vault_uri"
            },
            "azure:keyvault/getKeyVaultAccessPolicy:getKeyVaultAccessPolicy": {
                "applicationId": "application_id",
                "certificatePermissions": "certificate_permissions",
                "keyPermissions": "key_permissions",
                "objectId": "object_id",
                "secretPermissions": "secret_permissions",
                "storagePermissions": "storage_permissions",
                "tenantId": "tenant_id"
            },
            "azure:keyvault/getKeyVaultNetworkAcl:getKeyVaultNetworkAcl": {
                "defaultAction": "default_action",
                "ipRules": "ip_rules",
                "virtualNetworkSubnetIds": "virtual_network_subnet_ids"
            },
            "azure:keyvault/getManagedHardwareSecurityModule:getManagedHardwareSecurityModule": {
                "adminObjectIds": "admin_object_ids",
                "hsmUri": "hsm_uri",
                "purgeProtectionEnabled": "purge_protection_enabled",
                "resourceGroupName": "resource_group_name",
                "skuName": "sku_name",
                "softDeleteRetentionDays": "soft_delete_retention_days",
                "tenantId": "tenant_id"
            },
            "azure:keyvault/getManagedHardwareSecurityModuleRoleDefinition:getManagedHardwareSecurityModuleRoleDefinition": {
                "assignableScopes": "assignable_scopes",
                "permissions": "permission",
                "resourceManagerId": "resource_manager_id",
                "roleName": "role_name",
                "roleType": "role_type",
                "vaultBaseUrl": "vault_base_url"
            },
            "azure:keyvault/getManagedHardwareSecurityModuleRoleDefinitionPermission:getManagedHardwareSecurityModuleRoleDefinitionPermission": {
                "dataActions": "data_actions",
                "notActions": "not_actions",
                "notDataActions": "not_data_actions"
            },
            "azure:keyvault/getSecret:getSecret": {
                "contentType": "content_type",
                "expirationDate": "expiration_date",
                "keyVaultId": "key_vault_id",
                "notBeforeDate": "not_before_date",
                "resourceId": "resource_id",
                "resourceVersionlessId": "resource_versionless_id",
                "versionlessId": "versionless_id"
            },
            "azure:keyvault/getSecrets:getSecrets": {
                "keyVaultId": "key_vault_id"
            },
            "azure:keyvault/key:Key": {
                "expirationDate": "expiration_date",
                "keyOpts": "key_opts",
                "keySize": "key_size",
                "keyType": "key_type",
                "keyVaultId": "key_vault_id",
                "notBeforeDate": "not_before_date",
                "publicKeyOpenssh": "public_key_openssh",
                "publicKeyPem": "public_key_pem",
                "resourceId": "resource_id",
                "resourceVersionlessId": "resource_versionless_id",
                "rotationPolicy": "rotation_policy",
                "versionlessId": "versionless_id"
            },
            "azure:keyvault/keyVault:KeyVault": {
                "accessPolicies": "access_policy",
                "contacts": "contact",
                "enableRbacAuthorization": "enable_rbac_authorization",
                "enabledForDeployment": "enabled_for_deployment",
                "enabledForDiskEncryption": "enabled_for_disk_encryption",
                "enabledForTemplateDeployment": "enabled_for_template_deployment",
                "networkAcls": "network_acls",
                "publicNetworkAccessEnabled": "public_network_access_enabled",
                "purgeProtectionEnabled": "purge_protection_enabled",
                "resourceGroupName": "resource_group_name",
                "skuName": "sku_name",
                "softDeleteRetentionDays": "soft_delete_retention_days",
                "tenantId": "tenant_id",
                "vaultUri": "vault_uri"
            },
            "azure:keyvault/managedHardwareSecurityModule:ManagedHardwareSecurityModule": {
                "adminObjectIds": "admin_object_ids",
                "hsmUri": "hsm_uri",
                "networkAcls": "network_acls",
                "publicNetworkAccessEnabled": "public_network_access_enabled",
                "purgeProtectionEnabled": "purge_protection_enabled",
                "resourceGroupName": "resource_group_name",
                "securityDomainEncryptedData": "security_domain_encrypted_data",
                "securityDomainKeyVaultCertificateIds": "security_domain_key_vault_certificate_ids",
                "securityDomainQuorum": "security_domain_quorum",
                "skuName": "sku_name",
                "softDeleteRetentionDays": "soft_delete_retention_days",
                "tenantId": "tenant_id"
            },
            "azure:keyvault/managedHardwareSecurityModuleRoleAssignment:ManagedHardwareSecurityModuleRoleAssignment": {
                "principalId": "principal_id",
                "resourceId": "resource_id",
                "roleDefinitionId": "role_definition_id",
                "vaultBaseUrl": "vault_base_url"
            },
            "azure:keyvault/managedHardwareSecurityModuleRoleDefinition:ManagedHardwareSecurityModuleRoleDefinition": {
                "permissions": "permission",
                "resourceManagerId": "resource_manager_id",
                "roleName": "role_name",
                "roleType": "role_type",
                "vaultBaseUrl": "vault_base_url"
            },
            "azure:keyvault/managedStorageAccount:ManagedStorageAccount": {
                "keyVaultId": "key_vault_id",
                "regenerateKeyAutomatically": "regenerate_key_automatically",
                "regenerationPeriod": "regeneration_period",
                "storageAccountId": "storage_account_id",
                "storageAccountKey": "storage_account_key"
            },
            "azure:keyvault/managedStorageAccountSasTokenDefinition:ManagedStorageAccountSasTokenDefinition": {
                "managedStorageAccountId": "managed_storage_account_id",
                "sasTemplateUri": "sas_template_uri",
                "sasType": "sas_type",
                "secretId": "secret_id",
                "validityPeriod": "validity_period"
            },
            "azure:keyvault/secret:Secret": {
                "contentType": "content_type",
                "expirationDate": "expiration_date",
                "keyVaultId": "key_vault_id",
                "notBeforeDate": "not_before_date",
                "resourceId": "resource_id",
                "resourceVersionlessId": "resource_versionless_id",
                "versionlessId": "versionless_id"
            },
            "azure:kusto/AttachedDatabaseConfigurationSharing:AttachedDatabaseConfigurationSharing": {
                "externalTablesToExcludes": "external_tables_to_exclude",
                "externalTablesToIncludes": "external_tables_to_include",
                "materializedViewsToExcludes": "materialized_views_to_exclude",
                "materializedViewsToIncludes": "materialized_views_to_include",
                "tablesToExcludes": "tables_to_exclude",
                "tablesToIncludes": "tables_to_include"
            },
            "azure:kusto/ClusterIdentity:ClusterIdentity": {
                "identityIds": "identity_ids",
                "principalId": "principal_id",
                "tenantId": "tenant_id"
            },
            "azure:kusto/ClusterOptimizedAutoScale:ClusterOptimizedAutoScale": {
                "maximumInstances": "maximum_instances",
                "minimumInstances": "minimum_instances"
            },
            "azure:kusto/ClusterVirtualNetworkConfiguration:ClusterVirtualNetworkConfiguration": {
                "dataManagementPublicIpId": "data_management_public_ip_id",
                "enginePublicIpId": "engine_public_ip_id",
                "subnetId": "subnet_id"
            },
            "azure:kusto/attachedDatabaseConfiguration:AttachedDatabaseConfiguration": {
                "attachedDatabaseNames": "attached_database_names",
                "clusterName": "cluster_name",
                "clusterResourceId": "cluster_resource_id",
                "databaseName": "database_name",
                "defaultPrincipalModificationKind": "default_principal_modification_kind",
                "resourceGroupName": "resource_group_name"
            },
            "azure:kusto/cluster:Cluster": {
                "allowedFqdns": "allowed_fqdns",
                "allowedIpRanges": "allowed_ip_ranges",
                "autoStopEnabled": "auto_stop_enabled",
                "dataIngestionUri": "data_ingestion_uri",
                "diskEncryptionEnabled": "disk_encryption_enabled",
                "doubleEncryptionEnabled": "double_encryption_enabled",
                "languageExtensions": "language_extensions",
                "optimizedAutoScale": "optimized_auto_scale",
                "outboundNetworkAccessRestricted": "outbound_network_access_restricted",
                "publicIpType": "public_ip_type",
                "publicNetworkAccessEnabled": "public_network_access_enabled",
                "purgeEnabled": "purge_enabled",
                "resourceGroupName": "resource_group_name",
                "streamingIngestionEnabled": "streaming_ingestion_enabled",
                "trustedExternalTenants": "trusted_external_tenants",
                "virtualNetworkConfiguration": "virtual_network_configuration"
            },
            "azure:kusto/clusterCustomerManagedKey:ClusterCustomerManagedKey": {
                "clusterId": "cluster_id",
                "keyName": "key_name",
                "keyVaultId": "key_vault_id",
                "keyVersion": "key_version",
                "userIdentity": "user_identity"
            },
            "azure:kusto/clusterManagedPrivateEndpoint:ClusterManagedPrivateEndpoint": {
                "clusterName": "cluster_name",
                "groupId": "group_id",
                "privateLinkResourceId": "private_link_resource_id",
                "privateLinkResourceRegion": "private_link_resource_region",
                "requestMessage": "request_message",
                "resourceGroupName": "resource_group_name"
            },
            "azure:kusto/clusterPrincipalAssignment:ClusterPrincipalAssignment": {
                "clusterName": "cluster_name",
                "principalId": "principal_id",
                "principalName": "principal_name",
                "principalType": "principal_type",
                "resourceGroupName": "resource_group_name",
                "tenantId": "tenant_id",
                "tenantName": "tenant_name"
            },
            "azure:kusto/cosmosdbDataConnection:CosmosdbDataConnection": {
                "cosmosdbContainerId": "cosmosdb_container_id",
                "kustoDatabaseId": "kusto_database_id",
                "managedIdentityId": "managed_identity_id",
                "mappingRuleName": "mapping_rule_name",
                "retrievalStartDate": "retrieval_start_date",
                "tableName": "table_name"
            },
            "azure:kusto/database:Database": {
                "clusterName": "cluster_name",
                "hotCachePeriod": "hot_cache_period",
                "resourceGroupName": "resource_group_name",
                "softDeletePeriod": "soft_delete_period"
            },
            "azure:kusto/databasePrincipalAssignment:DatabasePrincipalAssignment": {
                "clusterName": "cluster_name",
                "databaseName": "database_name",
                "principalId": "principal_id",
                "principalName": "principal_name",
                "principalType": "principal_type",
                "resourceGroupName": "resource_group_name",
                "tenantId": "tenant_id",
                "tenantName": "tenant_name"
            },
            "azure:kusto/eventGridDataConnection:EventGridDataConnection": {
                "blobStorageEventType": "blob_storage_event_type",
                "clusterName": "cluster_name",
                "dataFormat": "data_format",
                "databaseName": "database_name",
                "databaseRoutingType": "database_routing_type",
                "eventgridResourceId": "eventgrid_resource_id",
                "eventhubConsumerGroupName": "eventhub_consumer_group_name",
                "eventhubId": "eventhub_id",
                "managedIdentityResourceId": "managed_identity_resource_id",
                "mappingRuleName": "mapping_rule_name",
                "resourceGroupName": "resource_group_name",
                "skipFirstRecord": "skip_first_record",
                "storageAccountId": "storage_account_id",
                "tableName": "table_name"
            },
            "azure:kusto/eventhubDataConnection:EventhubDataConnection": {
                "clusterName": "cluster_name",
                "consumerGroup": "consumer_group",
                "dataFormat": "data_format",
                "databaseName": "database_name",
                "databaseRoutingType": "database_routing_type",
                "eventSystemProperties": "event_system_properties",
                "eventhubId": "eventhub_id",
                "identityId": "identity_id",
                "mappingRuleName": "mapping_rule_name",
                "resourceGroupName": "resource_group_name",
                "tableName": "table_name"
            },
            "azure:kusto/getCluster:getCluster": {
                "dataIngestionUri": "data_ingestion_uri",
                "resourceGroupName": "resource_group_name"
            },
            "azure:kusto/getDatabase:getDatabase": {
                "clusterName": "cluster_name",
                "hotCachePeriod": "hot_cache_period",
                "resourceGroupName": "resource_group_name",
                "softDeletePeriod": "soft_delete_period"
            },
            "azure:kusto/iotHubDataConnection:IotHubDataConnection": {
                "clusterName": "cluster_name",
                "consumerGroup": "consumer_group",
                "dataFormat": "data_format",
                "databaseName": "database_name",
                "databaseRoutingType": "database_routing_type",
                "eventSystemProperties": "event_system_properties",
                "iothubId": "iothub_id",
                "mappingRuleName": "mapping_rule_name",
                "resourceGroupName": "resource_group_name",
                "sharedAccessPolicyName": "shared_access_policy_name",
                "tableName": "table_name"
            },
            "azure:kusto/script:Script": {
                "continueOnErrorsEnabled": "continue_on_errors_enabled",
                "databaseId": "database_id",
                "forceAnUpdateWhenValueChanged": "force_an_update_when_value_changed",
                "sasToken": "sas_token",
                "scriptContent": "script_content"
            },
            "azure:lab/LabAutoShutdown:LabAutoShutdown": {
                "disconnectDelay": "disconnect_delay",
                "idleDelay": "idle_delay",
                "noConnectDelay": "no_connect_delay",
                "shutdownOnIdle": "shutdown_on_idle"
            },
            "azure:lab/LabConnectionSetting:LabConnectionSetting": {
                "clientRdpAccess": "client_rdp_access",
                "clientSshAccess": "client_ssh_access"
            },
            "azure:lab/LabNetwork:LabNetwork": {
                "loadBalancerId": "load_balancer_id",
                "publicIpId": "public_ip_id",
                "subnetId": "subnet_id"
            },
            "azure:lab/LabRoster:LabRoster": {
                "activeDirectoryGroupId": "active_directory_group_id",
                "lmsInstance": "lms_instance",
                "ltiClientId": "lti_client_id",
                "ltiContextId": "lti_context_id",
                "ltiRosterEndpoint": "lti_roster_endpoint"
            },
            "azure:lab/LabSecurity:LabSecurity": {
                "openAccessEnabled": "open_access_enabled",
                "registrationCode": "registration_code"
            },
            "azure:lab/LabVirtualMachine:LabVirtualMachine": {
                "additionalCapabilityGpuDriversInstalled": "additional_capability_gpu_drivers_installed",
                "adminUser": "admin_user",
                "createOption": "create_option",
                "imageReference": "image_reference",
                "nonAdminUser": "non_admin_user",
                "sharedPasswordEnabled": "shared_password_enabled",
                "usageQuota": "usage_quota"
            },
            "azure:lab/ScheduleRecurrence:ScheduleRecurrence": {
                "expirationDate": "expiration_date",
                "weekDays": "week_days"
            },
            "azure:lab/ServicePlanDefaultAutoShutdown:ServicePlanDefaultAutoShutdown": {
                "disconnectDelay": "disconnect_delay",
                "idleDelay": "idle_delay",
                "noConnectDelay": "no_connect_delay",
                "shutdownOnIdle": "shutdown_on_idle"
            },
            "azure:lab/ServicePlanDefaultConnection:ServicePlanDefaultConnection": {
                "clientRdpAccess": "client_rdp_access",
                "clientSshAccess": "client_ssh_access",
                "webRdpAccess": "web_rdp_access",
                "webSshAccess": "web_ssh_access"
            },
            "azure:lab/lab:Lab": {
                "autoShutdown": "auto_shutdown",
                "connectionSetting": "connection_setting",
                "labPlanId": "lab_plan_id",
                "resourceGroupName": "resource_group_name",
                "virtualMachine": "virtual_machine"
            },
            "azure:lab/schedule:Schedule": {
                "labId": "lab_id",
                "startTime": "start_time",
                "stopTime": "stop_time",
                "timeZone": "time_zone"
            },
            "azure:lab/servicePlan:ServicePlan": {
                "allowedRegions": "allowed_regions",
                "defaultAutoShutdown": "default_auto_shutdown",
                "defaultConnection": "default_connection",
                "defaultNetworkSubnetId": "default_network_subnet_id",
                "resourceGroupName": "resource_group_name",
                "sharedGalleryId": "shared_gallery_id"
            },
            "azure:lab/user:User": {
                "additionalUsageQuota": "additional_usage_quota",
                "labId": "lab_id"
            },
            "azure:lb/BackendAddressPoolAddressInboundNatRulePortMapping:BackendAddressPoolAddressInboundNatRulePortMapping": {
                "backendPort": "backend_port",
                "frontendPort": "frontend_port",
                "inboundNatRuleName": "inbound_nat_rule_name"
            },
            "azure:lb/LoadBalancerFrontendIpConfiguration:LoadBalancerFrontendIpConfiguration": {
                "gatewayLoadBalancerFrontendIpConfigurationId": "gateway_load_balancer_frontend_ip_configuration_id",
                "inboundNatRules": "inbound_nat_rules",
                "loadBalancerRules": "load_balancer_rules",
                "outboundRules": "outbound_rules",
                "privateIpAddress": "private_ip_address",
                "privateIpAddressAllocation": "private_ip_address_allocation",
                "privateIpAddressVersion": "private_ip_address_version",
                "publicIpAddressId": "public_ip_address_id",
                "publicIpPrefixId": "public_ip_prefix_id",
                "subnetId": "subnet_id"
            },
            "azure:lb/backendAddressPool:BackendAddressPool": {
                "backendIpConfigurations": "backend_ip_configurations",
                "inboundNatRules": "inbound_nat_rules",
                "loadBalancingRules": "load_balancing_rules",
                "loadbalancerId": "loadbalancer_id",
                "outboundRules": "outbound_rules",
                "tunnelInterfaces": "tunnel_interface",
                "virtualNetworkId": "virtual_network_id"
            },
            "azure:lb/backendAddressPoolAddress:BackendAddressPoolAddress": {
                "backendAddressIpConfigurationId": "backend_address_ip_configuration_id",
                "backendAddressPoolId": "backend_address_pool_id",
                "inboundNatRulePortMappings": "inbound_nat_rule_port_mapping",
                "ipAddress": "ip_address",
                "virtualNetworkId": "virtual_network_id"
            },
            "azure:lb/getBackendAddressPool:getBackendAddressPool": {
                "backendAddresses": "backend_address",
                "backendIpConfigurations": "backend_ip_configurations",
                "inboundNatRules": "inbound_nat_rules",
                "loadBalancingRules": "load_balancing_rules",
                "loadbalancerId": "loadbalancer_id",
                "outboundRules": "outbound_rules"
            },
            "azure:lb/getBackendAddressPoolBackendAddress:getBackendAddressPoolBackendAddress": {
                "inboundNatRulePortMappings": "inbound_nat_rule_port_mapping",
                "ipAddress": "ip_address",
                "virtualNetworkId": "virtual_network_id"
            },
            "azure:lb/getBackendAddressPoolBackendAddressInboundNatRulePortMapping:getBackendAddressPoolBackendAddressInboundNatRulePortMapping": {
                "backendPort": "backend_port",
                "frontendPort": "frontend_port",
                "inboundNatRuleName": "inbound_nat_rule_name"
            },
            "azure:lb/getLB:getLB": {
                "frontendIpConfigurations": "frontend_ip_configuration",
                "privateIpAddress": "private_ip_address",
                "privateIpAddresses": "private_ip_addresses",
                "resourceGroupName": "resource_group_name"
            },
            "azure:lb/getLBFrontendIpConfiguration:getLBFrontendIpConfiguration": {
                "privateIpAddress": "private_ip_address",
                "privateIpAddressAllocation": "private_ip_address_allocation",
                "privateIpAddressVersion": "private_ip_address_version",
                "publicIpAddressId": "public_ip_address_id",
                "subnetId": "subnet_id"
            },
            "azure:lb/getLBOutboundRule:getLBOutboundRule": {
                "allocatedOutboundPorts": "allocated_outbound_ports",
                "backendAddressPoolId": "backend_address_pool_id",
                "frontendIpConfigurations": "frontend_ip_configuration",
                "idleTimeoutInMinutes": "idle_timeout_in_minutes",
                "loadbalancerId": "loadbalancer_id",
                "tcpResetEnabled": "tcp_reset_enabled"
            },
            "azure:lb/getLBRule:getLBRule": {
                "backendAddressPoolId": "backend_address_pool_id",
                "backendPort": "backend_port",
                "disableOutboundSnat": "disable_outbound_snat",
                "enableFloatingIp": "enable_floating_ip",
                "enableTcpReset": "enable_tcp_reset",
                "frontendIpConfigurationName": "frontend_ip_configuration_name",
                "frontendPort": "frontend_port",
                "idleTimeoutInMinutes": "idle_timeout_in_minutes",
                "loadDistribution": "load_distribution",
                "loadbalancerId": "loadbalancer_id",
                "probeId": "probe_id"
            },
            "azure:lb/loadBalancer:LoadBalancer": {
                "edgeZone": "edge_zone",
                "frontendIpConfigurations": "frontend_ip_configuration",
                "privateIpAddress": "private_ip_address",
                "privateIpAddresses": "private_ip_addresses",
                "resourceGroupName": "resource_group_name",
                "skuTier": "sku_tier"
            },
            "azure:lb/natPool:NatPool": {
                "backendPort": "backend_port",
                "floatingIpEnabled": "floating_ip_enabled",
                "frontendIpConfigurationId": "frontend_ip_configuration_id",
                "frontendIpConfigurationName": "frontend_ip_configuration_name",
                "frontendPortEnd": "frontend_port_end",
                "frontendPortStart": "frontend_port_start",
                "idleTimeoutInMinutes": "idle_timeout_in_minutes",
                "loadbalancerId": "loadbalancer_id",
                "resourceGroupName": "resource_group_name",
                "tcpResetEnabled": "tcp_reset_enabled"
            },
            "azure:lb/natRule:NatRule": {
                "backendAddressPoolId": "backend_address_pool_id",
                "backendIpConfigurationId": "backend_ip_configuration_id",
                "backendPort": "backend_port",
                "enableFloatingIp": "enable_floating_ip",
                "enableTcpReset": "enable_tcp_reset",
                "frontendIpConfigurationId": "frontend_ip_configuration_id",
                "frontendIpConfigurationName": "frontend_ip_configuration_name",
                "frontendPort": "frontend_port",
                "frontendPortEnd": "frontend_port_end",
                "frontendPortStart": "frontend_port_start",
                "idleTimeoutInMinutes": "idle_timeout_in_minutes",
                "loadbalancerId": "loadbalancer_id",
                "resourceGroupName": "resource_group_name"
            },
            "azure:lb/outboundRule:OutboundRule": {
                "allocatedOutboundPorts": "allocated_outbound_ports",
                "backendAddressPoolId": "backend_address_pool_id",
                "enableTcpReset": "enable_tcp_reset",
                "frontendIpConfigurations": "frontend_ip_configuration",
                "idleTimeoutInMinutes": "idle_timeout_in_minutes",
                "loadbalancerId": "loadbalancer_id"
            },
            "azure:lb/probe:Probe": {
                "intervalInSeconds": "interval_in_seconds",
                "loadBalancerRules": "load_balancer_rules",
                "loadbalancerId": "loadbalancer_id",
                "numberOfProbes": "number_of_probes",
                "probeThreshold": "probe_threshold",
                "requestPath": "request_path"
            },
            "azure:lb/rule:Rule": {
                "backendAddressPoolIds": "backend_address_pool_ids",
                "backendPort": "backend_port",
                "disableOutboundSnat": "disable_outbound_snat",
                "enableFloatingIp": "enable_floating_ip",
                "enableTcpReset": "enable_tcp_reset",
                "frontendIpConfigurationId": "frontend_ip_configuration_id",
                "frontendIpConfigurationName": "frontend_ip_configuration_name",
                "frontendPort": "frontend_port",
                "idleTimeoutInMinutes": "idle_timeout_in_minutes",
                "loadDistribution": "load_distribution",
                "loadbalancerId": "loadbalancer_id",
                "probeId": "probe_id"
            },
            "azure:lighthouse/DefinitionAuthorization:DefinitionAuthorization": {
                "delegatedRoleDefinitionIds": "delegated_role_definition_ids",
                "principalDisplayName": "principal_display_name",
                "principalId": "principal_id",
                "roleDefinitionId": "role_definition_id"
            },
            "azure:lighthouse/DefinitionEligibleAuthorization:DefinitionEligibleAuthorization": {
                "justInTimeAccessPolicy": "just_in_time_access_policy",
                "principalDisplayName": "principal_display_name",
                "principalId": "principal_id",
                "roleDefinitionId": "role_definition_id"
            },
            "azure:lighthouse/DefinitionEligibleAuthorizationJustInTimeAccessPolicy:DefinitionEligibleAuthorizationJustInTimeAccessPolicy": {
                "approvers": "approver",
                "maximumActivationDuration": "maximum_activation_duration",
                "multiFactorAuthProvider": "multi_factor_auth_provider"
            },
            "azure:lighthouse/DefinitionEligibleAuthorizationJustInTimeAccessPolicyApprover:DefinitionEligibleAuthorizationJustInTimeAccessPolicyApprover": {
                "principalDisplayName": "principal_display_name",
                "principalId": "principal_id"
            },
            "azure:lighthouse/assignment:Assignment": {
                "lighthouseDefinitionId": "lighthouse_definition_id"
            },
            "azure:lighthouse/definition:Definition": {
                "authorizations": "authorization",
                "eligibleAuthorizations": "eligible_authorization",
                "lighthouseDefinitionId": "lighthouse_definition_id",
                "managingTenantId": "managing_tenant_id"
            },
            "azure:loadtest/LoadTestIdentity:LoadTestIdentity": {
                "identityIds": "identity_ids",
                "principalId": "principal_id",
                "tenantId": "tenant_id"
            },
            "azure:loadtest/loadTest:LoadTest": {
                "dataPlaneUri": "data_plane_uri",
                "resourceGroupName": "resource_group_name"
            },
            "azure:loganalytics/ClusterIdentity:ClusterIdentity": {
                "principalId": "principal_id",
                "tenantId": "tenant_id"
            },
            "azure:loganalytics/cluster:Cluster": {
                "clusterId": "cluster_id",
                "resourceGroupName": "resource_group_name",
                "sizeGb": "size_gb"
            },
            "azure:loganalytics/clusterCustomerManagedKey:ClusterCustomerManagedKey": {
                "keyVaultKeyId": "key_vault_key_id",
                "logAnalyticsClusterId": "log_analytics_cluster_id"
            },
            "azure:loganalytics/dataExportRule:DataExportRule": {
                "destinationResourceId": "destination_resource_id",
                "exportRuleId": "export_rule_id",
                "resourceGroupName": "resource_group_name",
                "tableNames": "table_names",
                "workspaceResourceId": "workspace_resource_id"
            },
            "azure:loganalytics/dataSourceWindowsEvent:DataSourceWindowsEvent": {
                "eventLogName": "event_log_name",
                "eventTypes": "event_types",
                "resourceGroupName": "resource_group_name",
                "workspaceName": "workspace_name"
            },
            "azure:loganalytics/dataSourceWindowsPerformanceCounter:DataSourceWindowsPerformanceCounter": {
                "counterName": "counter_name",
                "instanceName": "instance_name",
                "intervalSeconds": "interval_seconds",
                "objectName": "object_name",
                "resourceGroupName": "resource_group_name",
                "workspaceName": "workspace_name"
            },
            "azure:loganalytics/linkedService:LinkedService": {
                "readAccessId": "read_access_id",
                "resourceGroupName": "resource_group_name",
                "workspaceId": "workspace_id",
                "writeAccessId": "write_access_id"
            },
            "azure:loganalytics/linkedStorageAccount:LinkedStorageAccount": {
                "dataSourceType": "data_source_type",
                "resourceGroupName": "resource_group_name",
                "storageAccountIds": "storage_account_ids",
                "workspaceResourceId": "workspace_resource_id"
            },
            "azure:loganalytics/queryPack:QueryPack": {
                "resourceGroupName": "resource_group_name"
            },
            "azure:loganalytics/savedSearch:SavedSearch": {
                "displayName": "display_name",
                "functionAlias": "function_alias",
                "functionParameters": "function_parameters",
                "logAnalyticsWorkspaceId": "log_analytics_workspace_id"
            },
            "azure:loganalytics/storageInsights:StorageInsights": {
                "blobContainerNames": "blob_container_names",
                "resourceGroupName": "resource_group_name",
                "storageAccountId": "storage_account_id",
                "storageAccountKey": "storage_account_key",
                "tableNames": "table_names",
                "workspaceId": "workspace_id"
            },
            "azure:logicapps/ActionHttpRunAfter:ActionHttpRunAfter": {
                "actionName": "action_name",
                "actionResult": "action_result"
            },
            "azure:logicapps/IntegrationAccountBatchConfigurationReleaseCriteria:IntegrationAccountBatchConfigurationReleaseCriteria": {
                "batchSize": "batch_size",
                "messageCount": "message_count"
            },
            "azure:logicapps/IntegrationAccountBatchConfigurationReleaseCriteriaRecurrence:IntegrationAccountBatchConfigurationReleaseCriteriaRecurrence": {
                "endTime": "end_time",
                "startTime": "start_time",
                "timeZone": "time_zone"
            },
            "azure:logicapps/IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceSchedule:IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceSchedule": {
                "monthDays": "month_days",
                "monthlies": "monthly",
                "weekDays": "week_days"
            },
            "azure:logicapps/IntegrationAccountCertificateKeyVaultKey:IntegrationAccountCertificateKeyVaultKey": {
                "keyName": "key_name",
                "keyVaultId": "key_vault_id",
                "keyVersion": "key_version"
            },
            "azure:logicapps/StandardIdentity:StandardIdentity": {
                "identityIds": "identity_ids",
                "principalId": "principal_id",
                "tenantId": "tenant_id"
            },
            "azure:logicapps/StandardSiteConfig:StandardSiteConfig": {
                "alwaysOn": "always_on",
                "appScaleLimit": "app_scale_limit",
                "autoSwapSlotName": "auto_swap_slot_name",
                "dotnetFrameworkVersion": "dotnet_framework_version",
                "elasticInstanceMinimum": "elastic_instance_minimum",
                "ftpsState": "ftps_state",
                "healthCheckPath": "health_check_path",
                "http2Enabled": "http2_enabled",
                "ipRestrictions": "ip_restriction",
                "linuxFxVersion": "linux_fx_version",
                "minTlsVersion": "min_tls_version",
                "preWarmedInstanceCount": "pre_warmed_instance_count",
                "runtimeScaleMonitoringEnabled": "runtime_scale_monitoring_enabled",
                "scmIpRestrictions": "scm_ip_restriction",
                "scmMinTlsVersion": "scm_min_tls_version",
                "scmType": "scm_type",
                "scmUseMainIpRestriction": "scm_use_main_ip_restriction",
                "use32BitWorkerProcess": "use_32_bit_worker_process",
                "vnetRouteAllEnabled": "vnet_route_all_enabled",
                "websocketsEnabled": "websockets_enabled"
            },
            "azure:logicapps/StandardSiteConfigCors:StandardSiteConfigCors": {
                "allowedOrigins": "allowed_origins",
                "supportCredentials": "support_credentials"
            },
            "azure:logicapps/StandardSiteConfigIpRestriction:StandardSiteConfigIpRestriction": {
                "ipAddress": "ip_address",
                "serviceTag": "service_tag",
                "virtualNetworkSubnetId": "virtual_network_subnet_id"
            },
            "azure:logicapps/StandardSiteConfigIpRestrictionHeaders:StandardSiteConfigIpRestrictionHeaders": {
                "xAzureFdids": "x_azure_fdid",
                "xFdHealthProbe": "x_fd_health_probe",
                "xForwardedFors": "x_forwarded_for",
                "xForwardedHosts": "x_forwarded_host"
            },
            "azure:logicapps/StandardSiteConfigScmIpRestriction:StandardSiteConfigScmIpRestriction": {
                "ipAddress": "ip_address",
                "serviceTag": "service_tag",
                "virtualNetworkSubnetId": "virtual_network_subnet_id"
            },
            "azure:logicapps/StandardSiteConfigScmIpRestrictionHeaders:StandardSiteConfigScmIpRestrictionHeaders": {
                "xAzureFdids": "x_azure_fdid",
                "xFdHealthProbe": "x_fd_health_probe",
                "xForwardedFors": "x_forwarded_for",
                "xForwardedHosts": "x_forwarded_host"
            },
            "azure:logicapps/TriggerRecurrenceSchedule:TriggerRecurrenceSchedule": {
                "atTheseHours": "at_these_hours",
                "atTheseMinutes": "at_these_minutes",
                "onTheseDays": "on_these_days"
            },
            "azure:logicapps/WorkflowAccessControl:WorkflowAccessControl": {
                "workflowManagement": "workflow_management"
            },
            "azure:logicapps/WorkflowAccessControlAction:WorkflowAccessControlAction": {
                "allowedCallerIpAddressRanges": "allowed_caller_ip_address_range"
            },
            "azure:logicapps/WorkflowAccessControlContent:WorkflowAccessControlContent": {
                "allowedCallerIpAddressRanges": "allowed_caller_ip_address_range"
            },
            "azure:logicapps/WorkflowAccessControlTrigger:WorkflowAccessControlTrigger": {
                "allowedCallerIpAddressRanges": "allowed_caller_ip_address_range",
                "openAuthenticationPolicies": "open_authentication_policy"
            },
            "azure:logicapps/WorkflowAccessControlTriggerOpenAuthenticationPolicy:WorkflowAccessControlTriggerOpenAuthenticationPolicy": {
                "claims": "claim"
            },
            "azure:logicapps/WorkflowAccessControlWorkflowManagement:WorkflowAccessControlWorkflowManagement": {
                "allowedCallerIpAddressRanges": "allowed_caller_ip_address_range"
            },
            "azure:logicapps/WorkflowIdentity:WorkflowIdentity": {
                "identityIds": "identity_ids",
                "principalId": "principal_id",
                "tenantId": "tenant_id"
            },
            "azure:logicapps/actionCustom:ActionCustom": {
                "logicAppId": "logic_app_id"
            },
            "azure:logicapps/actionHttp:ActionHttp": {
                "logicAppId": "logic_app_id",
                "runAfters": "run_after"
            },
            "azure:logicapps/getIntegrationAccount:getIntegrationAccount": {
                "resourceGroupName": "resource_group_name",
                "skuName": "sku_name"
            },
            "azure:logicapps/getStandard:getStandard": {
                "appServicePlanId": "app_service_plan_id",
                "appSettings": "app_settings",
                "bundleVersion": "bundle_version",
                "clientAffinityEnabled": "client_affinity_enabled",
                "clientCertificateMode": "client_certificate_mode",
                "connectionStrings": "connection_string",
                "customDomainVerificationId": "custom_domain_verification_id",
                "defaultHostname": "default_hostname",
                "httpsOnly": "https_only",
                "identities": "identity",
                "outboundIpAddresses": "outbound_ip_addresses",
                "possibleOutboundIpAddresses": "possible_outbound_ip_addresses",
                "resourceGroupName": "resource_group_name",
                "siteConfig": "site_config",
                "siteCredentials": "site_credential",
                "storageAccountAccessKey": "storage_account_access_key",
                "storageAccountName": "storage_account_name",
                "storageAccountShareName": "storage_account_share_name",
                "useExtensionBundle": "use_extension_bundle",
                "virtualNetworkSubnetId": "virtual_network_subnet_id"
            },
            "azure:logicapps/getStandardIdentity:getStandardIdentity": {
                "principalId": "principal_id",
                "tenantId": "tenant_id"
            },
            "azure:logicapps/getStandardSiteConfig:getStandardSiteConfig": {
                "alwaysOn": "always_on",
                "appScaleLimit": "app_scale_limit",
                "autoSwapSlotName": "auto_swap_slot_name",
                "dotnetFrameworkVersion": "dotnet_framework_version",
                "elasticInstanceMinimum": "elastic_instance_minimum",
                "ftpsState": "ftps_state",
                "healthCheckPath": "health_check_path",
                "http2Enabled": "http2_enabled",
                "ipRestrictions": "ip_restriction",
                "linuxFxVersion": "linux_fx_version",
                "minTlsVersion": "min_tls_version",
                "preWarmedInstanceCount": "pre_warmed_instance_count",
                "runtimeScaleMonitoringEnabled": "runtime_scale_monitoring_enabled",
                "scmIpRestrictions": "scm_ip_restriction",
                "scmMinTlsVersion": "scm_min_tls_version",
                "scmType": "scm_type",
                "scmUseMainIpRestriction": "scm_use_main_ip_restriction",
                "use32BitWorkerProcess": "use_32_bit_worker_process",
                "vnetRouteAllEnabled": "vnet_route_all_enabled",
                "websocketsEnabled": "websockets_enabled"
            },
            "azure:logicapps/getStandardSiteConfigCors:getStandardSiteConfigCors": {
                "allowedOrigins": "allowed_origins",
                "supportCredentials": "support_credentials"
            },
            "azure:logicapps/getStandardSiteConfigIpRestriction:getStandardSiteConfigIpRestriction": {
                "ipAddress": "ip_address",
                "serviceTag": "service_tag",
                "virtualNetworkSubnetId": "virtual_network_subnet_id"
            },
            "azure:logicapps/getStandardSiteConfigIpRestrictionHeaders:getStandardSiteConfigIpRestrictionHeaders": {
                "xAzureFdids": "x_azure_fdid",
                "xFdHealthProbe": "x_fd_health_probe",
                "xForwardedFors": "x_forwarded_for",
                "xForwardedHosts": "x_forwarded_host"
            },
            "azure:logicapps/getStandardSiteConfigScmIpRestriction:getStandardSiteConfigScmIpRestriction": {
                "ipAddress": "ip_address",
                "serviceTag": "service_tag",
                "virtualNetworkSubnetId": "virtual_network_subnet_id"
            },
            "azure:logicapps/getStandardSiteConfigScmIpRestrictionHeaders:getStandardSiteConfigScmIpRestrictionHeaders": {
                "xAzureFdids": "x_azure_fdid",
                "xFdHealthProbe": "x_fd_health_probe",
                "xForwardedFors": "x_forwarded_for",
                "xForwardedHosts": "x_forwarded_host"
            },
            "azure:logicapps/getWorkflow:getWorkflow": {
                "accessEndpoint": "access_endpoint",
                "connectorEndpointIpAddresses": "connector_endpoint_ip_addresses",
                "connectorOutboundIpAddresses": "connector_outbound_ip_addresses",
                "identities": "identity",
                "logicAppIntegrationAccountId": "logic_app_integration_account_id",
                "resourceGroupName": "resource_group_name",
                "workflowEndpointIpAddresses": "workflow_endpoint_ip_addresses",
                "workflowOutboundIpAddresses": "workflow_outbound_ip_addresses",
                "workflowSchema": "workflow_schema",
                "workflowVersion": "workflow_version"
            },
            "azure:logicapps/getWorkflowIdentity:getWorkflowIdentity": {
                "identityIds": "identity_ids",
                "principalId": "principal_id",
                "tenantId": "tenant_id"
            },
            "azure:logicapps/integrationAccount:IntegrationAccount": {
                "integrationServiceEnvironmentId": "integration_service_environment_id",
                "resourceGroupName": "resource_group_name",
                "skuName": "sku_name"
            },
            "azure:logicapps/integrationAccountAgreement:IntegrationAccountAgreement": {
                "agreementType": "agreement_type",
                "guestIdentity": "guest_identity",
                "guestPartnerName": "guest_partner_name",
                "hostIdentity": "host_identity",
                "hostPartnerName": "host_partner_name",
                "integrationAccountName": "integration_account_name",
                "resourceGroupName": "resource_group_name"
            },
            "azure:logicapps/integrationAccountAssembly:IntegrationAccountAssembly": {
                "assemblyName": "assembly_name",
                "assemblyVersion": "assembly_version",
                "contentLinkUri": "content_link_uri",
                "integrationAccountName": "integration_account_name",
                "resourceGroupName": "resource_group_name"
            },
            "azure:logicapps/integrationAccountBatchConfiguration:IntegrationAccountBatchConfiguration": {
                "batchGroupName": "batch_group_name",
                "integrationAccountName": "integration_account_name",
                "releaseCriteria": "release_criteria",
                "resourceGroupName": "resource_group_name"
            },
            "azure:logicapps/integrationAccountCertificate:IntegrationAccountCertificate": {
                "integrationAccountName": "integration_account_name",
                "keyVaultKey": "key_vault_key",
                "publicCertificate": "public_certificate",
                "resourceGroupName": "resource_group_name"
            },
            "azure:logicapps/integrationAccountMap:IntegrationAccountMap": {
                "integrationAccountName": "integration_account_name",
                "mapType": "map_type",
                "resourceGroupName": "resource_group_name"
            },
            "azure:logicapps/integrationAccountPartner:IntegrationAccountPartner": {
                "businessIdentities": "business_identity",
                "integrationAccountName": "integration_account_name",
                "resourceGroupName": "resource_group_name"
            },
            "azure:logicapps/integrationAccountSchema:IntegrationAccountSchema": {
                "fileName": "file_name",
                "integrationAccountName": "integration_account_name",
                "resourceGroupName": "resource_group_name"
            },
            "azure:logicapps/integrationAccountSession:IntegrationAccountSession": {
                "integrationAccountName": "integration_account_name",
                "resourceGroupName": "resource_group_name"
            },
            "azure:logicapps/interationServiceEnvironment:InterationServiceEnvironment": {
                "accessEndpointType": "access_endpoint_type",
                "connectorEndpointIpAddresses": "connector_endpoint_ip_addresses",
                "connectorOutboundIpAddresses": "connector_outbound_ip_addresses",
                "resourceGroupName": "resource_group_name",
                "skuName": "sku_name",
                "virtualNetworkSubnetIds": "virtual_network_subnet_ids",
                "workflowEndpointIpAddresses": "workflow_endpoint_ip_addresses",
                "workflowOutboundIpAddresses": "workflow_outbound_ip_addresses"
            },
            "azure:logicapps/standard:Standard": {
                "appServicePlanId": "app_service_plan_id",
                "appSettings": "app_settings",
                "bundleVersion": "bundle_version",
                "clientAffinityEnabled": "client_affinity_enabled",
                "clientCertificateMode": "client_certificate_mode",
                "connectionStrings": "connection_string",
                "customDomainVerificationId": "custom_domain_verification_id",
                "defaultHostname": "default_hostname",
                "httpsOnly": "https_only",
                "outboundIpAddresses": "outbound_ip_addresses",
                "possibleOutboundIpAddresses": "possible_outbound_ip_addresses",
                "resourceGroupName": "resource_group_name",
                "siteConfig": "site_config",
                "siteCredentials": "site_credential",
                "storageAccountAccessKey": "storage_account_access_key",
                "storageAccountName": "storage_account_name",
                "storageAccountShareName": "storage_account_share_name",
                "useExtensionBundle": "use_extension_bundle",
                "virtualNetworkSubnetId": "virtual_network_subnet_id"
            },
            "azure:logicapps/triggerCustom:TriggerCustom": {
                "logicAppId": "logic_app_id"
            },
            "azure:logicapps/triggerHttpRequest:TriggerHttpRequest": {
                "callbackUrl": "callback_url",
                "logicAppId": "logic_app_id",
                "relativePath": "relative_path"
            },
            "azure:logicapps/triggerRecurrence:TriggerRecurrence": {
                "logicAppId": "logic_app_id",
                "startTime": "start_time",
                "timeZone": "time_zone"
            },
            "azure:logicapps/workflow:Workflow": {
                "accessControl": "access_control",
                "accessEndpoint": "access_endpoint",
                "connectorEndpointIpAddresses": "connector_endpoint_ip_addresses",
                "connectorOutboundIpAddresses": "connector_outbound_ip_addresses",
                "integrationServiceEnvironmentId": "integration_service_environment_id",
                "logicAppIntegrationAccountId": "logic_app_integration_account_id",
                "resourceGroupName": "resource_group_name",
                "workflowEndpointIpAddresses": "workflow_endpoint_ip_addresses",
                "workflowOutboundIpAddresses": "workflow_outbound_ip_addresses",
                "workflowParameters": "workflow_parameters",
                "workflowSchema": "workflow_schema",
                "workflowVersion": "workflow_version"
            },
            "azure:machinelearning/ComputeClusterIdentity:ComputeClusterIdentity": {
                "identityIds": "identity_ids",
                "principalId": "principal_id",
                "tenantId": "tenant_id"
            },
            "azure:machinelearning/ComputeClusterScaleSettings:ComputeClusterScaleSettings": {
                "maxNodeCount": "max_node_count",
                "minNodeCount": "min_node_count",
                "scaleDownNodesAfterIdleDuration": "scale_down_nodes_after_idle_duration"
            },
            "azure:machinelearning/ComputeClusterSsh:ComputeClusterSsh": {
                "adminPassword": "admin_password",
                "adminUsername": "admin_username",
                "keyValue": "key_value"
            },
            "azure:machinelearning/ComputeInstanceAssignToUser:ComputeInstanceAssignToUser": {
                "objectId": "object_id",
                "tenantId": "tenant_id"
            },
            "azure:machinelearning/ComputeInstanceIdentity:ComputeInstanceIdentity": {
                "identityIds": "identity_ids",
                "principalId": "principal_id",
                "tenantId": "tenant_id"
            },
            "azure:machinelearning/ComputeInstanceSsh:ComputeInstanceSsh": {
                "publicKey": "public_key"
            },
            "azure:machinelearning/InferenceClusterIdentity:InferenceClusterIdentity": {
                "identityIds": "identity_ids",
                "principalId": "principal_id",
                "tenantId": "tenant_id"
            },
            "azure:machinelearning/InferenceClusterSsl:InferenceClusterSsl": {
                "leafDomainLabel": "leaf_domain_label",
                "overwriteExistingDomain": "overwrite_existing_domain"
            },
            "azure:machinelearning/SynapseSparkIdentity:SynapseSparkIdentity": {
                "identityIds": "identity_ids",
                "principalId": "principal_id",
                "tenantId": "tenant_id"
            },
            "azure:machinelearning/WorkspaceEncryption:WorkspaceEncryption": {
                "keyId": "key_id",
                "keyVaultId": "key_vault_id",
                "userAssignedIdentityId": "user_assigned_identity_id"
            },
            "azure:machinelearning/WorkspaceIdentity:WorkspaceIdentity": {
                "identityIds": "identity_ids",
                "principalId": "principal_id",
                "tenantId": "tenant_id"
            },
            "azure:machinelearning/computeCluster:ComputeCluster": {
                "localAuthEnabled": "local_auth_enabled",
                "machineLearningWorkspaceId": "machine_learning_workspace_id",
                "nodePublicIpEnabled": "node_public_ip_enabled",
                "scaleSettings": "scale_settings",
                "sshPublicAccessEnabled": "ssh_public_access_enabled",
                "subnetResourceId": "subnet_resource_id",
                "vmPriority": "vm_priority",
                "vmSize": "vm_size"
            },
            "azure:machinelearning/computeInstance:ComputeInstance": {
                "assignToUser": "assign_to_user",
                "authorizationType": "authorization_type",
                "localAuthEnabled": "local_auth_enabled",
                "machineLearningWorkspaceId": "machine_learning_workspace_id",
                "nodePublicIpEnabled": "node_public_ip_enabled",
                "subnetResourceId": "subnet_resource_id",
                "virtualMachineSize": "virtual_machine_size"
            },
            "azure:machinelearning/datastoreBlobstorage:DatastoreBlobstorage": {
                "accountKey": "account_key",
                "isDefault": "is_default",
                "serviceDataAuthIdentity": "service_data_auth_identity",
                "sharedAccessSignature": "shared_access_signature",
                "storageContainerId": "storage_container_id",
                "workspaceId": "workspace_id"
            },
            "azure:machinelearning/datastoreDatalakeGen2:DatastoreDatalakeGen2": {
                "authorityUrl": "authority_url",
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "isDefault": "is_default",
                "serviceDataIdentity": "service_data_identity",
                "storageContainerId": "storage_container_id",
                "tenantId": "tenant_id",
                "workspaceId": "workspace_id"
            },
            "azure:machinelearning/datastoreFileshare:DatastoreFileshare": {
                "accountKey": "account_key",
                "isDefault": "is_default",
                "serviceDataIdentity": "service_data_identity",
                "sharedAccessSignature": "shared_access_signature",
                "storageFileshareId": "storage_fileshare_id",
                "workspaceId": "workspace_id"
            },
            "azure:machinelearning/getWorkspace:getWorkspace": {
                "identities": "identity",
                "resourceGroupName": "resource_group_name"
            },
            "azure:machinelearning/getWorkspaceIdentity:getWorkspaceIdentity": {
                "identityIds": "identity_ids",
                "principalId": "principal_id",
                "tenantId": "tenant_id"
            },
            "azure:machinelearning/inferenceCluster:InferenceCluster": {
                "clusterPurpose": "cluster_purpose",
                "kubernetesClusterId": "kubernetes_cluster_id",
                "machineLearningWorkspaceId": "machine_learning_workspace_id"
            },
            "azure:machinelearning/synapseSpark:SynapseSpark": {
                "localAuthEnabled": "local_auth_enabled",
                "machineLearningWorkspaceId": "machine_learning_workspace_id",
                "synapseSparkPoolId": "synapse_spark_pool_id"
            },
            "azure:machinelearning/workspace:Workspace": {
                "applicationInsightsId": "application_insights_id",
                "containerRegistryId": "container_registry_id",
                "discoveryUrl": "discovery_url",
                "friendlyName": "friendly_name",
                "highBusinessImpact": "high_business_impact",
                "imageBuildComputeName": "image_build_compute_name",
                "keyVaultId": "key_vault_id",
                "primaryUserAssignedIdentity": "primary_user_assigned_identity",
                "publicAccessBehindVirtualNetworkEnabled": "public_access_behind_virtual_network_enabled",
                "publicNetworkAccessEnabled": "public_network_access_enabled",
                "resourceGroupName": "resource_group_name",
                "skuName": "sku_name",
                "storageAccountId": "storage_account_id",
                "v1LegacyModeEnabled": "v1_legacy_mode_enabled",
                "workspaceId": "workspace_id"
            },
            "azure:maintenance/ConfigurationInstallPatches:ConfigurationInstallPatches": {
                "linuxes": "linux"
            },
            "azure:maintenance/ConfigurationInstallPatchesLinux:ConfigurationInstallPatchesLinux": {
                "classificationsToIncludes": "classifications_to_include",
                "packageNamesMaskToExcludes": "package_names_mask_to_exclude",
                "packageNamesMaskToIncludes": "package_names_mask_to_include"
            },
            "azure:maintenance/ConfigurationInstallPatchesWindow:ConfigurationInstallPatchesWindow": {
                "classificationsToIncludes": "classifications_to_include",
                "kbNumbersToExcludes": "kb_numbers_to_exclude",
                "kbNumbersToIncludes": "kb_numbers_to_include"
            },
            "azure:maintenance/ConfigurationWindow:ConfigurationWindow": {
                "expirationDateTime": "expiration_date_time",
                "recurEvery": "recur_every",
                "startDateTime": "start_date_time",
                "timeZone": "time_zone"
            },
            "azure:maintenance/assignmentDedicatedHost:AssignmentDedicatedHost": {
                "dedicatedHostId": "dedicated_host_id",
                "maintenanceConfigurationId": "maintenance_configuration_id"
            },
            "azure:maintenance/assignmentVirtualMachine:AssignmentVirtualMachine": {
                "maintenanceConfigurationId": "maintenance_configuration_id",
                "virtualMachineId": "virtual_machine_id"
            },
            "azure:maintenance/assignmentVirtualMachineScaleSet:AssignmentVirtualMachineScaleSet": {
                "maintenanceConfigurationId": "maintenance_configuration_id",
                "virtualMachineScaleSetId": "virtual_machine_scale_set_id"
            },
            "azure:maintenance/configuration:Configuration": {
                "inGuestUserPatchMode": "in_guest_user_patch_mode",
                "installPatches": "install_patches",
                "resourceGroupName": "resource_group_name"
            },
            "azure:maintenance/getConfiguration:getConfiguration": {
                "inGuestUserPatchMode": "in_guest_user_patch_mode",
                "installPatches": "install_patches",
                "resourceGroupName": "resource_group_name",
                "windows": "window"
            },
            "azure:maintenance/getConfigurationInstallPatch:getConfigurationInstallPatch": {
                "linuxes": "linux"
            },
            "azure:maintenance/getConfigurationInstallPatchLinux:getConfigurationInstallPatchLinux": {
                "classificationsToIncludes": "classifications_to_include",
                "packageNamesMaskToExcludes": "package_names_mask_to_exclude",
                "packageNamesMaskToIncludes": "package_names_mask_to_include"
            },
            "azure:maintenance/getConfigurationInstallPatchWindow:getConfigurationInstallPatchWindow": {
                "classificationsToIncludes": "classifications_to_include",
                "kbNumbersToExcludes": "kb_numbers_to_exclude",
                "kbNumbersToIncludes": "kb_numbers_to_include"
            },
            "azure:maintenance/getConfigurationWindow:getConfigurationWindow": {
                "expirationDateTime": "expiration_date_time",
                "recurEvery": "recur_every",
                "startDateTime": "start_date_time",
                "timeZone": "time_zone"
            },
            "azure:maintenance/getPublicConfigurations:getPublicConfigurations": {
                "recurEvery": "recur_every"
            },
            "azure:maintenance/getPublicConfigurationsConfig:getPublicConfigurationsConfig": {
                "maintenanceScope": "maintenance_scope",
                "recurEvery": "recur_every",
                "timeZone": "time_zone"
            },
            "azure:managedapplication/ApplicationPlan:ApplicationPlan": {
                "promotionCode": "promotion_code"
            },
            "azure:managedapplication/DefinitionAuthorization:DefinitionAuthorization": {
                "roleDefinitionId": "role_definition_id",
                "servicePrincipalId": "service_principal_id"
            },
            "azure:managedapplication/application:Application": {
                "applicationDefinitionId": "application_definition_id",
                "managedResourceGroupName": "managed_resource_group_name",
                "parameterValues": "parameter_values",
                "resourceGroupName": "resource_group_name"
            },
            "azure:managedapplication/definition:Definition": {
                "authorizations": "authorization",
                "createUiDefinition": "create_ui_definition",
                "displayName": "display_name",
                "lockLevel": "lock_level",
                "mainTemplate": "main_template",
                "packageEnabled": "package_enabled",
                "packageFileUri": "package_file_uri",
                "resourceGroupName": "resource_group_name"
            },
            "azure:managedapplication/getDefinition:getDefinition": {
                "resourceGroupName": "resource_group_name"
            },
            "azure:managedlustre/FileSystemEncryptionKey:FileSystemEncryptionKey": {
                "keyUrl": "key_url",
                "sourceVaultId": "source_vault_id"
            },
            "azure:managedlustre/FileSystemHsmSetting:FileSystemHsmSetting": {
                "containerId": "container_id",
                "importPrefix": "import_prefix",
                "loggingContainerId": "logging_container_id"
            },
            "azure:managedlustre/FileSystemIdentity:FileSystemIdentity": {
                "identityIds": "identity_ids"
            },
            "azure:managedlustre/FileSystemMaintenanceWindow:FileSystemMaintenanceWindow": {
                "dayOfWeek": "day_of_week",
                "timeOfDayInUtc": "time_of_day_in_utc"
            },
            "azure:managedlustre/fileSystem:FileSystem": {
                "encryptionKey": "encryption_key",
                "hsmSetting": "hsm_setting",
                "maintenanceWindow": "maintenance_window",
                "mgsAddress": "mgs_address",
                "resourceGroupName": "resource_group_name",
                "skuName": "sku_name",
                "storageCapacityInTb": "storage_capacity_in_tb",
                "subnetId": "subnet_id"
            },
            "azure:management/GroupPolicyAssignmentIdentity:GroupPolicyAssignmentIdentity": {
                "identityIds": "identity_ids",
                "principalId": "principal_id",
                "tenantId": "tenant_id"
            },
            "azure:management/GroupPolicyAssignmentNonComplianceMessage:GroupPolicyAssignmentNonComplianceMessage": {
                "policyDefinitionReferenceId": "policy_definition_reference_id"
            },
            "azure:management/GroupPolicyAssignmentOverrideSelector:GroupPolicyAssignmentOverrideSelector": {
                "ins": "in",
                "notIns": "not_in"
            },
            "azure:management/GroupPolicyAssignmentResourceSelectorSelector:GroupPolicyAssignmentResourceSelectorSelector": {
                "ins": "in",
                "notIns": "not_in"
            },
            "azure:management/getGroup:getGroup": {
                "allManagementGroupIds": "all_management_group_ids",
                "allSubscriptionIds": "all_subscription_ids",
                "displayName": "display_name",
                "managementGroupIds": "management_group_ids",
                "parentManagementGroupId": "parent_management_group_id",
                "subscriptionIds": "subscription_ids"
            },
            "azure:management/getGroupTemplateDeployment:getGroupTemplateDeployment": {
                "managementGroupId": "management_group_id",
                "outputContent": "output_content"
            },
            "azure:management/group:Group": {
                "displayName": "display_name",
                "parentManagementGroupId": "parent_management_group_id",
                "subscriptionIds": "subscription_ids"
            },
            "azure:management/groupPolicyAssignment:GroupPolicyAssignment": {
                "displayName": "display_name",
                "managementGroupId": "management_group_id",
                "nonComplianceMessages": "non_compliance_message",
                "notScopes": "not_scopes",
                "policyDefinitionId": "policy_definition_id",
                "resourceSelectors": "resource_selectors"
            },
            "azure:management/groupPolicyExemption:GroupPolicyExemption": {
                "displayName": "display_name",
                "exemptionCategory": "exemption_category",
                "expiresOn": "expires_on",
                "managementGroupId": "management_group_id",
                "policyAssignmentId": "policy_assignment_id",
                "policyDefinitionReferenceIds": "policy_definition_reference_ids"
            },
            "azure:management/groupPolicyRemediation:GroupPolicyRemediation": {
                "failurePercentage": "failure_percentage",
                "locationFilters": "location_filters",
                "managementGroupId": "management_group_id",
                "parallelDeployments": "parallel_deployments",
                "policyAssignmentId": "policy_assignment_id",
                "policyDefinitionId": "policy_definition_id",
                "policyDefinitionReferenceId": "policy_definition_reference_id",
                "resourceCount": "resource_count",
                "resourceDiscoveryMode": "resource_discovery_mode"
            },
            "azure:management/groupSubscriptionAssociation:GroupSubscriptionAssociation": {
                "managementGroupId": "management_group_id",
                "subscriptionId": "subscription_id"
            },
            "azure:management/groupTemplateDeployment:GroupTemplateDeployment": {
                "debugLevel": "debug_level",
                "managementGroupId": "management_group_id",
                "outputContent": "output_content",
                "parametersContent": "parameters_content",
                "templateContent": "template_content",
                "templateSpecVersionId": "template_spec_version_id"
            },
            "azure:management/lock:Lock": {
                "lockLevel": "lock_level"
            },
            "azure:management/privateLink:PrivateLink": {
                "resourceGroupName": "resource_group_name"
            },
            "azure:management/privateLinkAssociation:PrivateLinkAssociation": {
                "managementGroupId": "management_group_id",
                "publicNetworkAccessEnabled": "public_network_access_enabled",
                "resourceManagementPrivateLinkId": "resource_management_private_link_id",
                "tenantId": "tenant_id"
            },
            "azure:managementgroups/getManagementGroup:getManagementGroup": {
                "allManagementGroupIds": "all_management_group_ids",
                "allSubscriptionIds": "all_subscription_ids",
                "displayName": "display_name",
                "managementGroupIds": "management_group_ids",
                "parentManagementGroupId": "parent_management_group_id",
                "subscriptionIds": "subscription_ids"
            },
            "azure:managementgroups/managementGroup:ManagementGroup": {
                "displayName": "display_name",
                "parentManagementGroupId": "parent_management_group_id",
                "subscriptionIds": "subscription_ids"
            },
            "azure:managementresource/manangementLock:ManangementLock": {
                "lockLevel": "lock_level"
            },
            "azure:maps/account:Account": {
                "localAuthenticationEnabled": "local_authentication_enabled",
                "primaryAccessKey": "primary_access_key",
                "resourceGroupName": "resource_group_name",
                "secondaryAccessKey": "secondary_access_key",
                "skuName": "sku_name",
                "xMsClientId": "x_ms_client_id"
            },
            "azure:maps/creator:Creator": {
                "mapsAccountId": "maps_account_id",
                "storageUnits": "storage_units"
            },
            "azure:maps/getAccount:getAccount": {
                "primaryAccessKey": "primary_access_key",
                "resourceGroupName": "resource_group_name",
                "secondaryAccessKey": "secondary_access_key",
                "skuName": "sku_name",
                "xMsClientId": "x_ms_client_id"
            },
            "azure:mariadb/configuration:Configuration": {
                "resourceGroupName": "resource_group_name",
                "serverName": "server_name"
            },
            "azure:mariadb/database:Database": {
                "resourceGroupName": "resource_group_name",
                "serverName": "server_name"
            },
            "azure:mariadb/firewallRule:FirewallRule": {
                "endIpAddress": "end_ip_address",
                "resourceGroupName": "resource_group_name",
                "serverName": "server_name",
                "startIpAddress": "start_ip_address"
            },
            "azure:mariadb/getMariaDbServer:getMariaDbServer": {
                "administratorLogin": "administrator_login",
                "resourceGroupName": "resource_group_name",
                "skuName": "sku_name",
                "sslEnforcement": "ssl_enforcement",
                "storageProfiles": "storage_profile"
            },
            "azure:mariadb/getMariaDbServerStorageProfile:getMariaDbServerStorageProfile": {
                "autoGrow": "auto_grow",
                "backupRetentionDays": "backup_retention_days",
                "geoRedundantBackup": "geo_redundant_backup",
                "storageMb": "storage_mb"
            },
            "azure:mariadb/server:Server": {
                "administratorLogin": "administrator_login",
                "administratorLoginPassword": "administrator_login_password",
                "autoGrowEnabled": "auto_grow_enabled",
                "backupRetentionDays": "backup_retention_days",
                "createMode": "create_mode",
                "creationSourceServerId": "creation_source_server_id",
                "geoRedundantBackupEnabled": "geo_redundant_backup_enabled",
                "publicNetworkAccessEnabled": "public_network_access_enabled",
                "resourceGroupName": "resource_group_name",
                "restorePointInTime": "restore_point_in_time",
                "skuName": "sku_name",
                "sslEnforcementEnabled": "ssl_enforcement_enabled",
                "sslMinimalTlsVersionEnforced": "ssl_minimal_tls_version_enforced",
                "storageMb": "storage_mb"
            },
            "azure:mariadb/virtualNetworkRule:VirtualNetworkRule": {
                "resourceGroupName": "resource_group_name",
                "serverName": "server_name",
                "subnetId": "subnet_id"
            },
            "azure:marketplace/agreement:Agreement": {
                "licenseTextLink": "license_text_link",
                "privacyPolicyLink": "privacy_policy_link"
            },
            "azure:marketplace/getAgreement:getAgreement": {
                "licenseTextLink": "license_text_link",
                "privacyPolicyLink": "privacy_policy_link"
            },
            "azure:marketplace/roleAssignment:RoleAssignment": {
                "conditionVersion": "condition_version",
                "delegatedManagedIdentityResourceId": "delegated_managed_identity_resource_id",
                "principalId": "principal_id",
                "principalType": "principal_type",
                "roleDefinitionId": "role_definition_id",
                "roleDefinitionName": "role_definition_name",
                "skipServicePrincipalAadCheck": "skip_service_principal_aad_check"
            },
            "azure:media/AccountFilterPresentationTimeRange:AccountFilterPresentationTimeRange": {
                "endInUnits": "end_in_units",
                "forceEnd": "force_end",
                "liveBackoffInUnits": "live_backoff_in_units",
                "presentationWindowInUnits": "presentation_window_in_units",
                "startInUnits": "start_in_units",
                "unitTimescaleInMilliseconds": "unit_timescale_in_milliseconds"
            },
            "azure:media/AccountFilterTrackSelection:AccountFilterTrackSelection": {
                "conditions": "condition"
            },
            "azure:media/AssetFilterPresentationTimeRange:AssetFilterPresentationTimeRange": {
                "endInUnits": "end_in_units",
                "forceEnd": "force_end",
                "liveBackoffInUnits": "live_backoff_in_units",
                "presentationWindowInUnits": "presentation_window_in_units",
                "startInUnits": "start_in_units",
                "unitTimescaleInMiliseconds": "unit_timescale_in_miliseconds"
            },
            "azure:media/AssetFilterTrackSelection:AssetFilterTrackSelection": {
                "conditions": "condition"
            },
            "azure:media/ContentKeyPolicyPolicyOption:ContentKeyPolicyPolicyOption": {
                "clearKeyConfigurationEnabled": "clear_key_configuration_enabled",
                "fairplayConfiguration": "fairplay_configuration",
                "openRestrictionEnabled": "open_restriction_enabled",
                "playreadyConfigurationLicenses": "playready_configuration_license",
                "playreadyResponseCustomData": "playready_response_custom_data",
                "tokenRestriction": "token_restriction",
                "widevineConfigurationTemplate": "widevine_configuration_template"
            },
            "azure:media/ContentKeyPolicyPolicyOptionFairplayConfiguration:ContentKeyPolicyPolicyOptionFairplayConfiguration": {
                "offlineRentalConfiguration": "offline_rental_configuration",
                "pfxPassword": "pfx_password",
                "rentalAndLeaseKeyType": "rental_and_lease_key_type",
                "rentalDurationSeconds": "rental_duration_seconds"
            },
            "azure:media/ContentKeyPolicyPolicyOptionFairplayConfigurationOfflineRentalConfiguration:ContentKeyPolicyPolicyOptionFairplayConfigurationOfflineRentalConfiguration": {
                "playbackDurationSeconds": "playback_duration_seconds",
                "storageDurationSeconds": "storage_duration_seconds"
            },
            "azure:media/ContentKeyPolicyPolicyOptionPlayreadyConfigurationLicense:ContentKeyPolicyPolicyOptionPlayreadyConfigurationLicense": {
                "allowTestDevices": "allow_test_devices",
                "beginDate": "begin_date",
                "contentKeyLocationFromHeaderEnabled": "content_key_location_from_header_enabled",
                "contentKeyLocationFromKeyId": "content_key_location_from_key_id",
                "contentType": "content_type",
                "expirationDate": "expiration_date",
                "gracePeriod": "grace_period",
                "licenseType": "license_type",
                "playRight": "play_right",
                "relativeBeginDate": "relative_begin_date",
                "relativeExpirationDate": "relative_expiration_date",
                "securityLevel": "security_level"
            },
            "azure:media/ContentKeyPolicyPolicyOptionPlayreadyConfigurationLicensePlayRight:ContentKeyPolicyPolicyOptionPlayreadyConfigurationLicensePlayRight": {
                "agcAndColorStripeRestriction": "agc_and_color_stripe_restriction",
                "allowPassingVideoContentToUnknownOutput": "allow_passing_video_content_to_unknown_output",
                "analogVideoOpl": "analog_video_opl",
                "compressedDigitalAudioOpl": "compressed_digital_audio_opl",
                "compressedDigitalVideoOpl": "compressed_digital_video_opl",
                "digitalVideoOnlyContentRestriction": "digital_video_only_content_restriction",
                "explicitAnalogTelevisionOutputRestriction": "explicit_analog_television_output_restriction",
                "firstPlayExpiration": "first_play_expiration",
                "imageConstraintForAnalogComponentVideoRestriction": "image_constraint_for_analog_component_video_restriction",
                "imageConstraintForAnalogComputerMonitorRestriction": "image_constraint_for_analog_computer_monitor_restriction",
                "scmsRestriction": "scms_restriction",
                "uncompressedDigitalAudioOpl": "uncompressed_digital_audio_opl",
                "uncompressedDigitalVideoOpl": "uncompressed_digital_video_opl"
            },
            "azure:media/ContentKeyPolicyPolicyOptionPlayreadyConfigurationLicensePlayRightExplicitAnalogTelevisionOutputRestriction:ContentKeyPolicyPolicyOptionPlayreadyConfigurationLicensePlayRightExplicitAnalogTelevisionOutputRestriction": {
                "bestEffortEnforced": "best_effort_enforced",
                "controlBits": "control_bits"
            },
            "azure:media/ContentKeyPolicyPolicyOptionTokenRestriction:ContentKeyPolicyPolicyOptionTokenRestriction": {
                "alternateKeys": "alternate_key",
                "openIdConnectDiscoveryDocument": "open_id_connect_discovery_document",
                "primaryRsaTokenKeyExponent": "primary_rsa_token_key_exponent",
                "primaryRsaTokenKeyModulus": "primary_rsa_token_key_modulus",
                "primarySymmetricTokenKey": "primary_symmetric_token_key",
                "primaryX509TokenKeyRaw": "primary_x509_token_key_raw",
                "requiredClaims": "required_claim",
                "tokenType": "token_type"
            },
            "azure:media/ContentKeyPolicyPolicyOptionTokenRestrictionAlternateKey:ContentKeyPolicyPolicyOptionTokenRestrictionAlternateKey": {
                "rsaTokenKeyExponent": "rsa_token_key_exponent",
                "rsaTokenKeyModulus": "rsa_token_key_modulus",
                "symmetricTokenKey": "symmetric_token_key",
                "x509TokenKeyRaw": "x509_token_key_raw"
            },
            "azure:media/LiveEventCrossSiteAccessPolicy:LiveEventCrossSiteAccessPolicy": {
                "clientAccessPolicy": "client_access_policy",
                "crossDomainPolicy": "cross_domain_policy"
            },
            "azure:media/LiveEventEncoding:LiveEventEncoding": {
                "keyFrameInterval": "key_frame_interval",
                "presetName": "preset_name",
                "stretchMode": "stretch_mode"
            },
            "azure:media/LiveEventInput:LiveEventInput": {
                "accessToken": "access_token",
                "endpoints": "endpoint",
                "ipAccessControlAllows": "ip_access_control_allow",
                "keyFrameIntervalDuration": "key_frame_interval_duration",
                "streamingProtocol": "streaming_protocol"
            },
            "azure:media/LiveEventInputIpAccessControlAllow:LiveEventInputIpAccessControlAllow": {
                "subnetPrefixLength": "subnet_prefix_length"
            },
            "azure:media/LiveEventPreview:LiveEventPreview": {
                "alternativeMediaId": "alternative_media_id",
                "endpoints": "endpoint",
                "ipAccessControlAllows": "ip_access_control_allow",
                "previewLocator": "preview_locator",
                "streamingPolicyName": "streaming_policy_name"
            },
            "azure:media/LiveEventPreviewIpAccessControlAllow:LiveEventPreviewIpAccessControlAllow": {
                "subnetPrefixLength": "subnet_prefix_length"
            },
            "azure:media/ServiceAccountEncryption:ServiceAccountEncryption": {
                "currentKeyIdentifier": "current_key_identifier",
                "keyVaultKeyIdentifier": "key_vault_key_identifier",
                "managedIdentity": "managed_identity"
            },
            "azure:media/ServiceAccountEncryptionManagedIdentity:ServiceAccountEncryptionManagedIdentity": {
                "useSystemAssignedIdentity": "use_system_assigned_identity",
                "userAssignedIdentityId": "user_assigned_identity_id"
            },
            "azure:media/ServiceAccountIdentity:ServiceAccountIdentity": {
                "identityIds": "identity_ids",
                "principalId": "principal_id",
                "tenantId": "tenant_id"
            },
            "azure:media/ServiceAccountKeyDeliveryAccessControl:ServiceAccountKeyDeliveryAccessControl": {
                "defaultAction": "default_action",
                "ipAllowLists": "ip_allow_list"
            },
            "azure:media/ServiceAccountStorageAccount:ServiceAccountStorageAccount": {
                "isPrimary": "is_primary",
                "managedIdentity": "managed_identity"
            },
            "azure:media/ServiceAccountStorageAccountManagedIdentity:ServiceAccountStorageAccountManagedIdentity": {
                "useSystemAssignedIdentity": "use_system_assigned_identity",
                "userAssignedIdentityId": "user_assigned_identity_id"
            },
            "azure:media/StreamingEndpointAccessControl:StreamingEndpointAccessControl": {
                "akamaiSignatureHeaderAuthenticationKeys": "akamai_signature_header_authentication_key",
                "ipAllows": "ip_allow"
            },
            "azure:media/StreamingEndpointAccessControlAkamaiSignatureHeaderAuthenticationKey:StreamingEndpointAccessControlAkamaiSignatureHeaderAuthenticationKey": {
                "base64Key": "base64_key"
            },
            "azure:media/StreamingEndpointAccessControlIpAllow:StreamingEndpointAccessControlIpAllow": {
                "subnetPrefixLength": "subnet_prefix_length"
            },
            "azure:media/StreamingEndpointCrossSiteAccessPolicy:StreamingEndpointCrossSiteAccessPolicy": {
                "clientAccessPolicy": "client_access_policy",
                "crossDomainPolicy": "cross_domain_policy"
            },
            "azure:media/StreamingLocatorContentKey:StreamingLocatorContentKey": {
                "contentKeyId": "content_key_id",
                "labelReferenceInStreamingPolicy": "label_reference_in_streaming_policy",
                "policyName": "policy_name"
            },
            "azure:media/StreamingPolicyCommonEncryptionCbcs:StreamingPolicyCommonEncryptionCbcs": {
                "clearKeyEncryption": "clear_key_encryption",
                "defaultContentKey": "default_content_key",
                "drmFairplay": "drm_fairplay",
                "enabledProtocols": "enabled_protocols"
            },
            "azure:media/StreamingPolicyCommonEncryptionCbcsClearKeyEncryption:StreamingPolicyCommonEncryptionCbcsClearKeyEncryption": {
                "customKeysAcquisitionUrlTemplate": "custom_keys_acquisition_url_template"
            },
            "azure:media/StreamingPolicyCommonEncryptionCbcsDefaultContentKey:StreamingPolicyCommonEncryptionCbcsDefaultContentKey": {
                "policyName": "policy_name"
            },
            "azure:media/StreamingPolicyCommonEncryptionCbcsDrmFairplay:StreamingPolicyCommonEncryptionCbcsDrmFairplay": {
                "allowPersistentLicense": "allow_persistent_license",
                "customLicenseAcquisitionUrlTemplate": "custom_license_acquisition_url_template"
            },
            "azure:media/StreamingPolicyCommonEncryptionCbcsEnabledProtocols:StreamingPolicyCommonEncryptionCbcsEnabledProtocols": {
                "smoothStreaming": "smooth_streaming"
            },
            "azure:media/StreamingPolicyCommonEncryptionCenc:StreamingPolicyCommonEncryptionCenc": {
                "clearKeyEncryption": "clear_key_encryption",
                "clearTracks": "clear_track",
                "contentKeyToTrackMappings": "content_key_to_track_mapping",
                "defaultContentKey": "default_content_key",
                "drmPlayready": "drm_playready",
                "drmWidevineCustomLicenseAcquisitionUrlTemplate": "drm_widevine_custom_license_acquisition_url_template",
                "enabledProtocols": "enabled_protocols"
            },
            "azure:media/StreamingPolicyCommonEncryptionCencClearKeyEncryption:StreamingPolicyCommonEncryptionCencClearKeyEncryption": {
                "customKeysAcquisitionUrlTemplate": "custom_keys_acquisition_url_template"
            },
            "azure:media/StreamingPolicyCommonEncryptionCencClearTrack:StreamingPolicyCommonEncryptionCencClearTrack": {
                "conditions": "condition"
            },
            "azure:media/StreamingPolicyCommonEncryptionCencContentKeyToTrackMapping:StreamingPolicyCommonEncryptionCencContentKeyToTrackMapping": {
                "policyName": "policy_name",
                "tracks": "track"
            },
            "azure:media/StreamingPolicyCommonEncryptionCencContentKeyToTrackMappingTrack:StreamingPolicyCommonEncryptionCencContentKeyToTrackMappingTrack": {
                "conditions": "condition"
            },
            "azure:media/StreamingPolicyCommonEncryptionCencDefaultContentKey:StreamingPolicyCommonEncryptionCencDefaultContentKey": {
                "policyName": "policy_name"
            },
            "azure:media/StreamingPolicyCommonEncryptionCencDrmPlayready:StreamingPolicyCommonEncryptionCencDrmPlayready": {
                "customAttributes": "custom_attributes",
                "customLicenseAcquisitionUrlTemplate": "custom_license_acquisition_url_template"
            },
            "azure:media/StreamingPolicyCommonEncryptionCencEnabledProtocols:StreamingPolicyCommonEncryptionCencEnabledProtocols": {
                "smoothStreaming": "smooth_streaming"
            },
            "azure:media/StreamingPolicyEnvelopeEncryption:StreamingPolicyEnvelopeEncryption": {
                "customKeysAcquisitionUrlTemplate": "custom_keys_acquisition_url_template",
                "defaultContentKey": "default_content_key",
                "enabledProtocols": "enabled_protocols"
            },
            "azure:media/StreamingPolicyEnvelopeEncryptionDefaultContentKey:StreamingPolicyEnvelopeEncryptionDefaultContentKey": {
                "policyName": "policy_name"
            },
            "azure:media/StreamingPolicyEnvelopeEncryptionEnabledProtocols:StreamingPolicyEnvelopeEncryptionEnabledProtocols": {
                "smoothStreaming": "smooth_streaming"
            },
            "azure:media/StreamingPolicyNoEncryptionEnabledProtocols:StreamingPolicyNoEncryptionEnabledProtocols": {
                "smoothStreaming": "smooth_streaming"
            },
            "azure:media/TransformOutput:TransformOutput": {
                "audioAnalyzerPreset": "audio_analyzer_preset",
                "builtinPreset": "builtin_preset",
                "customPreset": "custom_preset",
                "faceDetectorPreset": "face_detector_preset",
                "onErrorAction": "on_error_action",
                "relativePriority": "relative_priority",
                "videoAnalyzerPreset": "video_analyzer_preset"
            },
            "azure:media/TransformOutputAudioAnalyzerPreset:TransformOutputAudioAnalyzerPreset": {
                "audioAnalysisMode": "audio_analysis_mode",
                "audioLanguage": "audio_language",
                "experimentalOptions": "experimental_options"
            },
            "azure:media/TransformOutputBuiltinPreset:TransformOutputBuiltinPreset": {
                "presetConfiguration": "preset_configuration",
                "presetName": "preset_name"
            },
            "azure:media/TransformOutputBuiltinPresetPresetConfiguration:TransformOutputBuiltinPresetPresetConfiguration": {
                "interleaveOutput": "interleave_output",
                "keyFrameIntervalInSeconds": "key_frame_interval_in_seconds",
                "maxBitrateBps": "max_bitrate_bps",
                "maxHeight": "max_height",
                "maxLayers": "max_layers",
                "minBitrateBps": "min_bitrate_bps",
                "minHeight": "min_height"
            },
            "azure:media/TransformOutputCustomPreset:TransformOutputCustomPreset": {
                "codecs": "codec",
                "experimentalOptions": "experimental_options",
                "formats": "format"
            },
            "azure:media/TransformOutputCustomPresetCodec:TransformOutputCustomPresetCodec": {
                "aacAudio": "aac_audio",
                "copyAudio": "copy_audio",
                "copyVideo": "copy_video",
                "ddAudio": "dd_audio",
                "h264Video": "h264_video",
                "h265Video": "h265_video",
                "jpgImage": "jpg_image",
                "pngImage": "png_image"
            },
            "azure:media/TransformOutputCustomPresetCodecAacAudio:TransformOutputCustomPresetCodecAacAudio": {
                "samplingRate": "sampling_rate"
            },
            "azure:media/TransformOutputCustomPresetCodecDdAudio:TransformOutputCustomPresetCodecDdAudio": {
                "samplingRate": "sampling_rate"
            },
            "azure:media/TransformOutputCustomPresetCodecH264Video:TransformOutputCustomPresetCodecH264Video": {
                "keyFrameInterval": "key_frame_interval",
                "layers": "layer",
                "rateControlMode": "rate_control_mode",
                "sceneChangeDetectionEnabled": "scene_change_detection_enabled",
                "stretchMode": "stretch_mode",
                "syncMode": "sync_mode"
            },
            "azure:media/TransformOutputCustomPresetCodecH264VideoLayer:TransformOutputCustomPresetCodecH264VideoLayer": {
                "adaptiveBFrameEnabled": "adaptive_b_frame_enabled",
                "bFrames": "b_frames",
                "bufferWindow": "buffer_window",
                "entropyMode": "entropy_mode",
                "frameRate": "frame_rate",
                "maxBitrate": "max_bitrate",
                "referenceFrames": "reference_frames"
            },
            "azure:media/TransformOutputCustomPresetCodecH265Video:TransformOutputCustomPresetCodecH265Video": {
                "keyFrameInterval": "key_frame_interval",
                "layers": "layer",
                "sceneChangeDetectionEnabled": "scene_change_detection_enabled",
                "stretchMode": "stretch_mode",
                "syncMode": "sync_mode"
            },
            "azure:media/TransformOutputCustomPresetCodecH265VideoLayer:TransformOutputCustomPresetCodecH265VideoLayer": {
                "adaptiveBFrameEnabled": "adaptive_b_frame_enabled",
                "bFrames": "b_frames",
                "bufferWindow": "buffer_window",
                "frameRate": "frame_rate",
                "maxBitrate": "max_bitrate",
                "referenceFrames": "reference_frames"
            },
            "azure:media/TransformOutputCustomPresetCodecJpgImage:TransformOutputCustomPresetCodecJpgImage": {
                "keyFrameInterval": "key_frame_interval",
                "layers": "layer",
                "spriteColumn": "sprite_column",
                "stretchMode": "stretch_mode",
                "syncMode": "sync_mode"
            },
            "azure:media/TransformOutputCustomPresetCodecPngImage:TransformOutputCustomPresetCodecPngImage": {
                "keyFrameInterval": "key_frame_interval",
                "layers": "layer",
                "stretchMode": "stretch_mode",
                "syncMode": "sync_mode"
            },
            "azure:media/TransformOutputCustomPresetFilter:TransformOutputCustomPresetFilter": {
                "cropRectangle": "crop_rectangle",
                "fadeIn": "fade_in",
                "fadeOut": "fade_out",
                "overlays": "overlay"
            },
            "azure:media/TransformOutputCustomPresetFilterFadeIn:TransformOutputCustomPresetFilterFadeIn": {
                "fadeColor": "fade_color"
            },
            "azure:media/TransformOutputCustomPresetFilterFadeOut:TransformOutputCustomPresetFilterFadeOut": {
                "fadeColor": "fade_color"
            },
            "azure:media/TransformOutputCustomPresetFilterOverlayAudio:TransformOutputCustomPresetFilterOverlayAudio": {
                "audioGainLevel": "audio_gain_level",
                "fadeInDuration": "fade_in_duration",
                "fadeOutDuration": "fade_out_duration",
                "inputLabel": "input_label"
            },
            "azure:media/TransformOutputCustomPresetFilterOverlayVideo:TransformOutputCustomPresetFilterOverlayVideo": {
                "audioGainLevel": "audio_gain_level",
                "cropRectangle": "crop_rectangle",
                "fadeInDuration": "fade_in_duration",
                "fadeOutDuration": "fade_out_duration",
                "inputLabel": "input_label"
            },
            "azure:media/TransformOutputCustomPresetFormat:TransformOutputCustomPresetFormat": {
                "transportStream": "transport_stream"
            },
            "azure:media/TransformOutputCustomPresetFormatJpg:TransformOutputCustomPresetFormatJpg": {
                "filenamePattern": "filename_pattern"
            },
            "azure:media/TransformOutputCustomPresetFormatMp4:TransformOutputCustomPresetFormatMp4": {
                "filenamePattern": "filename_pattern",
                "outputFiles": "output_file"
            },
            "azure:media/TransformOutputCustomPresetFormatPng:TransformOutputCustomPresetFormatPng": {
                "filenamePattern": "filename_pattern"
            },
            "azure:media/TransformOutputCustomPresetFormatTransportStream:TransformOutputCustomPresetFormatTransportStream": {
                "filenamePattern": "filename_pattern",
                "outputFiles": "output_file"
            },
            "azure:media/TransformOutputFaceDetectorPreset:TransformOutputFaceDetectorPreset": {
                "analysisResolution": "analysis_resolution",
                "blurType": "blur_type",
                "experimentalOptions": "experimental_options",
                "faceRedactorMode": "face_redactor_mode"
            },
            "azure:media/TransformOutputVideoAnalyzerPreset:TransformOutputVideoAnalyzerPreset": {
                "audioAnalysisMode": "audio_analysis_mode",
                "audioLanguage": "audio_language",
                "experimentalOptions": "experimental_options",
                "insightsType": "insights_type"
            },
            "azure:media/accountFilter:AccountFilter": {
                "firstQualityBitrate": "first_quality_bitrate",
                "mediaServicesAccountName": "media_services_account_name",
                "presentationTimeRange": "presentation_time_range",
                "resourceGroupName": "resource_group_name",
                "trackSelections": "track_selection"
            },
            "azure:media/asset:Asset": {
                "alternateId": "alternate_id",
                "mediaServicesAccountName": "media_services_account_name",
                "resourceGroupName": "resource_group_name",
                "storageAccountName": "storage_account_name"
            },
            "azure:media/assetFilter:AssetFilter": {
                "assetId": "asset_id",
                "firstQualityBitrate": "first_quality_bitrate",
                "presentationTimeRange": "presentation_time_range",
                "trackSelections": "track_selection"
            },
            "azure:media/contentKeyPolicy:ContentKeyPolicy": {
                "mediaServicesAccountName": "media_services_account_name",
                "policyOptions": "policy_option",
                "resourceGroupName": "resource_group_name"
            },
            "azure:media/job:Job": {
                "inputAsset": "input_asset",
                "mediaServicesAccountName": "media_services_account_name",
                "outputAssets": "output_asset",
                "resourceGroupName": "resource_group_name",
                "transformName": "transform_name"
            },
            "azure:media/liveEvent:LiveEvent": {
                "autoStartEnabled": "auto_start_enabled",
                "crossSiteAccessPolicy": "cross_site_access_policy",
                "hostnamePrefix": "hostname_prefix",
                "mediaServicesAccountName": "media_services_account_name",
                "resourceGroupName": "resource_group_name",
                "streamOptions": "stream_options",
                "transcriptionLanguages": "transcription_languages",
                "useStaticHostname": "use_static_hostname"
            },
            "azure:media/liveEventOutput:LiveEventOutput": {
                "archiveWindowDuration": "archive_window_duration",
                "assetName": "asset_name",
                "hlsFragmentsPerTsSegment": "hls_fragments_per_ts_segment",
                "liveEventId": "live_event_id",
                "manifestName": "manifest_name",
                "outputSnapTimeInSeconds": "output_snap_time_in_seconds",
                "rewindWindowDuration": "rewind_window_duration"
            },
            "azure:media/serviceAccount:ServiceAccount": {
                "keyDeliveryAccessControl": "key_delivery_access_control",
                "publicNetworkAccessEnabled": "public_network_access_enabled",
                "resourceGroupName": "resource_group_name",
                "storageAccounts": "storage_account",
                "storageAuthenticationType": "storage_authentication_type"
            },
            "azure:media/streamingEndpoint:StreamingEndpoint": {
                "accessControl": "access_control",
                "autoStartEnabled": "auto_start_enabled",
                "cdnEnabled": "cdn_enabled",
                "cdnProfile": "cdn_profile",
                "cdnProvider": "cdn_provider",
                "crossSiteAccessPolicy": "cross_site_access_policy",
                "customHostNames": "custom_host_names",
                "hostName": "host_name",
                "maxCacheAgeSeconds": "max_cache_age_seconds",
                "mediaServicesAccountName": "media_services_account_name",
                "resourceGroupName": "resource_group_name",
                "scaleUnits": "scale_units",
                "skus": "sku"
            },
            "azure:media/streamingLocator:StreamingLocator": {
                "alternativeMediaId": "alternative_media_id",
                "assetName": "asset_name",
                "contentKeys": "content_key",
                "defaultContentKeyPolicyName": "default_content_key_policy_name",
                "endTime": "end_time",
                "filterNames": "filter_names",
                "mediaServicesAccountName": "media_services_account_name",
                "resourceGroupName": "resource_group_name",
                "startTime": "start_time",
                "streamingLocatorId": "streaming_locator_id",
                "streamingPolicyName": "streaming_policy_name"
            },
            "azure:media/streamingPolicy:StreamingPolicy": {
                "commonEncryptionCbcs": "common_encryption_cbcs",
                "commonEncryptionCenc": "common_encryption_cenc",
                "defaultContentKeyPolicyName": "default_content_key_policy_name",
                "envelopeEncryption": "envelope_encryption",
                "mediaServicesAccountName": "media_services_account_name",
                "noEncryptionEnabledProtocols": "no_encryption_enabled_protocols",
                "resourceGroupName": "resource_group_name"
            },
            "azure:media/transform:Transform": {
                "mediaServicesAccountName": "media_services_account_name",
                "outputs": "output",
                "resourceGroupName": "resource_group_name"
            },
            "azure:mediaservices/AccountEncryption:AccountEncryption": {
                "currentKeyIdentifier": "current_key_identifier",
                "keyVaultKeyIdentifier": "key_vault_key_identifier",
                "managedIdentity": "managed_identity"
            },
            "azure:mediaservices/AccountEncryptionManagedIdentity:AccountEncryptionManagedIdentity": {
                "useSystemAssignedIdentity": "use_system_assigned_identity",
                "userAssignedIdentityId": "user_assigned_identity_id"
            },
            "azure:mediaservices/AccountIdentity:AccountIdentity": {
                "identityIds": "identity_ids",
                "principalId": "principal_id",
                "tenantId": "tenant_id"
            },
            "azure:mediaservices/AccountKeyDeliveryAccessControl:AccountKeyDeliveryAccessControl": {
                "defaultAction": "default_action",
                "ipAllowLists": "ip_allow_list"
            },
            "azure:mediaservices/AccountStorageAccount:AccountStorageAccount": {
                "isPrimary": "is_primary",
                "managedIdentity": "managed_identity"
            },
            "azure:mediaservices/AccountStorageAccountManagedIdentity:AccountStorageAccountManagedIdentity": {
                "useSystemAssignedIdentity": "use_system_assigned_identity",
                "userAssignedIdentityId": "user_assigned_identity_id"
            },
            "azure:mediaservices/account:Account": {
                "keyDeliveryAccessControl": "key_delivery_access_control",
                "publicNetworkAccessEnabled": "public_network_access_enabled",
                "resourceGroupName": "resource_group_name",
                "storageAccounts": "storage_account",
                "storageAuthenticationType": "storage_authentication_type"
            },
            "azure:mixedreality/getSpatialAnchorsAccount:getSpatialAnchorsAccount": {
                "accountDomain": "account_domain",
                "accountId": "account_id",
                "resourceGroupName": "resource_group_name"
            },
            "azure:mixedreality/spatialAnchorsAccount:SpatialAnchorsAccount": {
                "accountDomain": "account_domain",
                "accountId": "account_id",
                "resourceGroupName": "resource_group_name"
            },
            "azure:mobile/NetworkAttachedDataNetworkNetworkAddressPortTranslation:NetworkAttachedDataNetworkNetworkAddressPortTranslation": {
                "icmpPinholeTimeoutInSeconds": "icmp_pinhole_timeout_in_seconds",
                "pinholeMaximumNumber": "pinhole_maximum_number",
                "portRange": "port_range",
                "tcpPinholeTimeoutInSeconds": "tcp_pinhole_timeout_in_seconds",
                "tcpPortReuseMinimumHoldTimeInSeconds": "tcp_port_reuse_minimum_hold_time_in_seconds",
                "udpPinholeTimeoutInSeconds": "udp_pinhole_timeout_in_seconds",
                "udpPortReuseMinimumHoldTimeInSeconds": "udp_port_reuse_minimum_hold_time_in_seconds"
            },
            "azure:mobile/NetworkPacketCoreControlPlaneIdentity:NetworkPacketCoreControlPlaneIdentity": {
                "identityIds": "identity_ids"
            },
            "azure:mobile/NetworkPacketCoreControlPlaneLocalDiagnosticsAccess:NetworkPacketCoreControlPlaneLocalDiagnosticsAccess": {
                "authenticationType": "authentication_type",
                "httpsServerCertificateUrl": "https_server_certificate_url"
            },
            "azure:mobile/NetworkPacketCoreControlPlanePlatform:NetworkPacketCoreControlPlanePlatform": {
                "arcKubernetesClusterId": "arc_kubernetes_cluster_id",
                "customLocationId": "custom_location_id",
                "edgeDeviceId": "edge_device_id",
                "stackHciClusterId": "stack_hci_cluster_id"
            },
            "azure:mobile/NetworkServicePccRule:NetworkServicePccRule": {
                "qosPolicy": "qos_policy",
                "serviceDataFlowTemplates": "service_data_flow_template",
                "trafficControlEnabled": "traffic_control_enabled"
            },
            "azure:mobile/NetworkServicePccRuleQosPolicy:NetworkServicePccRuleQosPolicy": {
                "allocationAndRetentionPriorityLevel": "allocation_and_retention_priority_level",
                "guaranteedBitRate": "guaranteed_bit_rate",
                "maximumBitRate": "maximum_bit_rate",
                "preemptionCapability": "preemption_capability",
                "preemptionVulnerability": "preemption_vulnerability",
                "qosIndicator": "qos_indicator"
            },
            "azure:mobile/NetworkServicePccRuleServiceDataFlowTemplate:NetworkServicePccRuleServiceDataFlowTemplate": {
                "protocols": "protocol",
                "remoteIpLists": "remote_ip_list"
            },
            "azure:mobile/NetworkServiceServiceQosPolicy:NetworkServiceServiceQosPolicy": {
                "allocationAndRetentionPriorityLevel": "allocation_and_retention_priority_level",
                "maximumBitRate": "maximum_bit_rate",
                "preemptionCapability": "preemption_capability",
                "preemptionVulnerability": "preemption_vulnerability",
                "qosIndicator": "qos_indicator"
            },
            "azure:mobile/NetworkSimGroupIdentity:NetworkSimGroupIdentity": {
                "identityIds": "identity_ids"
            },
            "azure:mobile/NetworkSimPolicySlice:NetworkSimPolicySlice": {
                "dataNetworks": "data_network",
                "defaultDataNetworkId": "default_data_network_id",
                "sliceId": "slice_id"
            },
            "azure:mobile/NetworkSimPolicySliceDataNetwork:NetworkSimPolicySliceDataNetwork": {
                "additionalAllowedSessionTypes": "additional_allowed_session_types",
                "allocationAndRetentionPriorityLevel": "allocation_and_retention_priority_level",
                "allowedServicesIds": "allowed_services_ids",
                "dataNetworkId": "data_network_id",
                "defaultSessionType": "default_session_type",
                "maxBufferedPackets": "max_buffered_packets",
                "preemptionCapability": "preemption_capability",
                "preemptionVulnerability": "preemption_vulnerability",
                "qosIndicator": "qos_indicator",
                "sessionAggregateMaximumBitRate": "session_aggregate_maximum_bit_rate"
            },
            "azure:mobile/NetworkSimStaticIpConfiguration:NetworkSimStaticIpConfiguration": {
                "attachedDataNetworkId": "attached_data_network_id",
                "sliceId": "slice_id",
                "staticIpv4Address": "static_ipv4_address"
            },
            "azure:mobile/NetworkSliceSingleNetworkSliceSelectionAssistanceInformation:NetworkSliceSingleNetworkSliceSelectionAssistanceInformation": {
                "sliceDifferentiator": "slice_differentiator",
                "sliceServiceType": "slice_service_type"
            },
            "azure:mobile/getNetwork:getNetwork": {
                "mobileCountryCode": "mobile_country_code",
                "mobileNetworkCode": "mobile_network_code",
                "resourceGroupName": "resource_group_name",
                "serviceKey": "service_key"
            },
            "azure:mobile/getNetworkAttachedDataNetwork:getNetworkAttachedDataNetwork": {
                "dnsAddresses": "dns_addresses",
                "mobileNetworkDataNetworkName": "mobile_network_data_network_name",
                "mobileNetworkPacketCoreDataPlaneId": "mobile_network_packet_core_data_plane_id",
                "networkAddressPortTranslations": "network_address_port_translation",
                "userEquipmentAddressPoolPrefixes": "user_equipment_address_pool_prefixes",
                "userEquipmentStaticAddressPoolPrefixes": "user_equipment_static_address_pool_prefixes",
                "userPlaneAccessIpv4Address": "user_plane_access_ipv4_address",
                "userPlaneAccessIpv4Gateway": "user_plane_access_ipv4_gateway",
                "userPlaneAccessIpv4Subnet": "user_plane_access_ipv4_subnet",
                "userPlaneAccessName": "user_plane_access_name"
            },
            "azure:mobile/getNetworkAttachedDataNetworkNetworkAddressPortTranslation:getNetworkAttachedDataNetworkNetworkAddressPortTranslation": {
                "icmpPinholeTimeoutInSeconds": "icmp_pinhole_timeout_in_seconds",
                "pinholeMaximumNumber": "pinhole_maximum_number",
                "portRanges": "port_range",
                "tcpPinholeTimeoutInSeconds": "tcp_pinhole_timeout_in_seconds",
                "tcpPortReuseMinimumHoldTimeInSeconds": "tcp_port_reuse_minimum_hold_time_in_seconds",
                "udpPinholeTimeoutInSeconds": "udp_pinhole_timeout_in_seconds",
                "udpPortReuseMinimumHoldTimeInSeconds": "udp_port_reuse_minimum_hold_time_in_seconds"
            },
            "azure:mobile/getNetworkDataNetwork:getNetworkDataNetwork": {
                "mobileNetworkId": "mobile_network_id"
            },
            "azure:mobile/getNetworkPacketCoreControlPlane:getNetworkPacketCoreControlPlane": {
                "controlPlaneAccessIpv4Address": "control_plane_access_ipv4_address",
                "controlPlaneAccessIpv4Gateway": "control_plane_access_ipv4_gateway",
                "controlPlaneAccessIpv4Subnet": "control_plane_access_ipv4_subnet",
                "controlPlaneAccessName": "control_plane_access_name",
                "coreNetworkTechnology": "core_network_technology",
                "identities": "identity",
                "interoperabilitySettingsJson": "interoperability_settings_json",
                "localDiagnosticsAccesses": "local_diagnostics_access",
                "platforms": "platform",
                "resourceGroupName": "resource_group_name",
                "siteIds": "site_ids",
                "softwareVersion": "software_version",
                "userEquipmentMtuInBytes": "user_equipment_mtu_in_bytes"
            },
            "azure:mobile/getNetworkPacketCoreControlPlaneIdentity:getNetworkPacketCoreControlPlaneIdentity": {
                "identityIds": "identity_ids"
            },
            "azure:mobile/getNetworkPacketCoreControlPlaneLocalDiagnosticsAccess:getNetworkPacketCoreControlPlaneLocalDiagnosticsAccess": {
                "authenticationType": "authentication_type",
                "httpsServerCertificateUrl": "https_server_certificate_url"
            },
            "azure:mobile/getNetworkPacketCoreControlPlanePlatform:getNetworkPacketCoreControlPlanePlatform": {
                "arcKubernetesClusterId": "arc_kubernetes_cluster_id",
                "customLocationId": "custom_location_id",
                "edgeDeviceId": "edge_device_id",
                "stackHciClusterId": "stack_hci_cluster_id"
            },
            "azure:mobile/getNetworkPacketCoreDataPlane:getNetworkPacketCoreDataPlane": {
                "mobileNetworkPacketCoreControlPlaneId": "mobile_network_packet_core_control_plane_id",
                "userPlaneAccessIpv4Address": "user_plane_access_ipv4_address",
                "userPlaneAccessIpv4Gateway": "user_plane_access_ipv4_gateway",
                "userPlaneAccessIpv4Subnet": "user_plane_access_ipv4_subnet",
                "userPlaneAccessName": "user_plane_access_name"
            },
            "azure:mobile/getNetworkService:getNetworkService": {
                "mobileNetworkId": "mobile_network_id",
                "pccRules": "pcc_rule",
                "servicePrecedence": "service_precedence",
                "serviceQosPolicies": "service_qos_policy"
            },
            "azure:mobile/getNetworkServicePccRule:getNetworkServicePccRule": {
                "qosPolicies": "qos_policy",
                "serviceDataFlowTemplates": "service_data_flow_template",
                "trafficControlEnabled": "traffic_control_enabled"
            },
            "azure:mobile/getNetworkServicePccRuleQosPolicy:getNetworkServicePccRuleQosPolicy": {
                "allocationAndRetentionPriorityLevel": "allocation_and_retention_priority_level",
                "guaranteedBitRates": "guaranteed_bit_rate",
                "maximumBitRates": "maximum_bit_rate",
                "preemptionCapability": "preemption_capability",
                "preemptionVulnerability": "preemption_vulnerability",
                "qosIndicator": "qos_indicator"
            },
            "azure:mobile/getNetworkServicePccRuleServiceDataFlowTemplate:getNetworkServicePccRuleServiceDataFlowTemplate": {
                "protocols": "protocol",
                "remoteIpLists": "remote_ip_list"
            },
            "azure:mobile/getNetworkServiceServiceQosPolicy:getNetworkServiceServiceQosPolicy": {
                "allocationAndRetentionPriorityLevel": "allocation_and_retention_priority_level",
                "maximumBitRates": "maximum_bit_rate",
                "preemptionCapability": "preemption_capability",
                "preemptionVulnerability": "preemption_vulnerability",
                "qosIndicator": "qos_indicator"
            },
            "azure:mobile/getNetworkSim:getNetworkSim": {
                "deviceType": "device_type",
                "integratedCircuitCardIdentifier": "integrated_circuit_card_identifier",
                "internationalMobileSubscriberIdentity": "international_mobile_subscriber_identity",
                "mobileNetworkSimGroupId": "mobile_network_sim_group_id",
                "simPolicyId": "sim_policy_id",
                "simState": "sim_state",
                "staticIpConfigurations": "static_ip_configuration",
                "vendorKeyFingerprint": "vendor_key_fingerprint",
                "vendorName": "vendor_name"
            },
            "azure:mobile/getNetworkSimGroup:getNetworkSimGroup": {
                "encryptionKeyUrl": "encryption_key_url",
                "identities": "identity",
                "mobileNetworkId": "mobile_network_id"
            },
            "azure:mobile/getNetworkSimGroupIdentity:getNetworkSimGroupIdentity": {
                "identityIds": "identity_ids",
                "principalId": "principal_id",
                "tenantId": "tenant_id"
            },
            "azure:mobile/getNetworkSimPolicy:getNetworkSimPolicy": {
                "defaultSliceId": "default_slice_id",
                "mobileNetworkId": "mobile_network_id",
                "ratFrequencySelectionPriorityIndex": "rat_frequency_selection_priority_index",
                "registrationTimerInSeconds": "registration_timer_in_seconds",
                "slices": "slice",
                "userEquipmentAggregateMaximumBitRates": "user_equipment_aggregate_maximum_bit_rate"
            },
            "azure:mobile/getNetworkSimPolicySlice:getNetworkSimPolicySlice": {
                "dataNetworks": "data_network",
                "defaultDataNetworkId": "default_data_network_id",
                "sliceId": "slice_id"
            },
            "azure:mobile/getNetworkSimPolicySliceDataNetwork:getNetworkSimPolicySliceDataNetwork": {
                "additionalAllowedSessionTypes": "additional_allowed_session_types",
                "allocationAndRetentionPriorityLevel": "allocation_and_retention_priority_level",
                "allowedServicesIds": "allowed_services_ids",
                "dataNetworkId": "data_network_id",
                "defaultSessionType": "default_session_type",
                "maxBufferedPackets": "max_buffered_packets",
                "preemptionCapability": "preemption_capability",
                "preemptionVulnerability": "preemption_vulnerability",
                "qosIndicator": "qos_indicator",
                "sessionAggregateMaximumBitRates": "session_aggregate_maximum_bit_rate"
            },
            "azure:mobile/getNetworkSimStaticIpConfiguration:getNetworkSimStaticIpConfiguration": {
                "attachedDataNetworkId": "attached_data_network_id",
                "sliceId": "slice_id",
                "staticIpv4Address": "static_ipv4_address"
            },
            "azure:mobile/getNetworkSite:getNetworkSite": {
                "mobileNetworkId": "mobile_network_id",
                "networkFunctionIds": "network_function_ids"
            },
            "azure:mobile/getNetworkSlice:getNetworkSlice": {
                "mobileNetworkId": "mobile_network_id",
                "singleNetworkSliceSelectionAssistanceInformations": "single_network_slice_selection_assistance_information"
            },
            "azure:mobile/getNetworkSliceSingleNetworkSliceSelectionAssistanceInformation:getNetworkSliceSingleNetworkSliceSelectionAssistanceInformation": {
                "sliceDifferentiator": "slice_differentiator",
                "sliceServiceType": "slice_service_type"
            },
            "azure:mobile/network:Network": {
                "mobileCountryCode": "mobile_country_code",
                "mobileNetworkCode": "mobile_network_code",
                "resourceGroupName": "resource_group_name",
                "serviceKey": "service_key"
            },
            "azure:mobile/networkAttachedDataNetwork:NetworkAttachedDataNetwork": {
                "dnsAddresses": "dns_addresses",
                "mobileNetworkDataNetworkName": "mobile_network_data_network_name",
                "mobileNetworkPacketCoreDataPlaneId": "mobile_network_packet_core_data_plane_id",
                "networkAddressPortTranslation": "network_address_port_translation",
                "userEquipmentAddressPoolPrefixes": "user_equipment_address_pool_prefixes",
                "userEquipmentStaticAddressPoolPrefixes": "user_equipment_static_address_pool_prefixes",
                "userPlaneAccessIpv4Address": "user_plane_access_ipv4_address",
                "userPlaneAccessIpv4Gateway": "user_plane_access_ipv4_gateway",
                "userPlaneAccessIpv4Subnet": "user_plane_access_ipv4_subnet",
                "userPlaneAccessName": "user_plane_access_name"
            },
            "azure:mobile/networkDataNetwork:NetworkDataNetwork": {
                "mobileNetworkId": "mobile_network_id"
            },
            "azure:mobile/networkPacketCoreControlPlane:NetworkPacketCoreControlPlane": {
                "controlPlaneAccessIpv4Address": "control_plane_access_ipv4_address",
                "controlPlaneAccessIpv4Gateway": "control_plane_access_ipv4_gateway",
                "controlPlaneAccessIpv4Subnet": "control_plane_access_ipv4_subnet",
                "controlPlaneAccessName": "control_plane_access_name",
                "coreNetworkTechnology": "core_network_technology",
                "interoperabilitySettingsJson": "interoperability_settings_json",
                "localDiagnosticsAccess": "local_diagnostics_access",
                "resourceGroupName": "resource_group_name",
                "siteIds": "site_ids",
                "softwareVersion": "software_version",
                "userEquipmentMtuInBytes": "user_equipment_mtu_in_bytes"
            },
            "azure:mobile/networkPacketCoreDataPlane:NetworkPacketCoreDataPlane": {
                "mobileNetworkPacketCoreControlPlaneId": "mobile_network_packet_core_control_plane_id",
                "userPlaneAccessIpv4Address": "user_plane_access_ipv4_address",
                "userPlaneAccessIpv4Gateway": "user_plane_access_ipv4_gateway",
                "userPlaneAccessIpv4Subnet": "user_plane_access_ipv4_subnet",
                "userPlaneAccessName": "user_plane_access_name"
            },
            "azure:mobile/networkService:NetworkService": {
                "mobileNetworkId": "mobile_network_id",
                "pccRules": "pcc_rule",
                "servicePrecedence": "service_precedence",
                "serviceQosPolicy": "service_qos_policy"
            },
            "azure:mobile/networkSim:NetworkSim": {
                "authenticationKey": "authentication_key",
                "deviceType": "device_type",
                "integratedCircuitCardIdentifier": "integrated_circuit_card_identifier",
                "internationalMobileSubscriberIdentity": "international_mobile_subscriber_identity",
                "mobileNetworkSimGroupId": "mobile_network_sim_group_id",
                "operatorKeyCode": "operator_key_code",
                "simPolicyId": "sim_policy_id",
                "simState": "sim_state",
                "staticIpConfigurations": "static_ip_configuration",
                "vendorKeyFingerprint": "vendor_key_fingerprint",
                "vendorName": "vendor_name"
            },
            "azure:mobile/networkSimGroup:NetworkSimGroup": {
                "encryptionKeyUrl": "encryption_key_url",
                "mobileNetworkId": "mobile_network_id"
            },
            "azure:mobile/networkSimPolicy:NetworkSimPolicy": {
                "defaultSliceId": "default_slice_id",
                "mobileNetworkId": "mobile_network_id",
                "ratFrequencySelectionPriorityIndex": "rat_frequency_selection_priority_index",
                "registrationTimerInSeconds": "registration_timer_in_seconds",
                "slices": "slice",
                "userEquipmentAggregateMaximumBitRate": "user_equipment_aggregate_maximum_bit_rate"
            },
            "azure:mobile/networkSite:NetworkSite": {
                "mobileNetworkId": "mobile_network_id",
                "networkFunctionIds": "network_function_ids"
            },
            "azure:mobile/networkSlice:NetworkSlice": {
                "mobileNetworkId": "mobile_network_id",
                "singleNetworkSliceSelectionAssistanceInformation": "single_network_slice_selection_assistance_information"
            },
            "azure:monitoring/AadDiagnosticSettingEnabledLog:AadDiagnosticSettingEnabledLog": {
                "retentionPolicy": "retention_policy"
            },
            "azure:monitoring/AadDiagnosticSettingLog:AadDiagnosticSettingLog": {
                "retentionPolicy": "retention_policy"
            },
            "azure:monitoring/ActionGroupArmRoleReceiver:ActionGroupArmRoleReceiver": {
                "roleId": "role_id",
                "useCommonAlertSchema": "use_common_alert_schema"
            },
            "azure:monitoring/ActionGroupAutomationRunbookReceiver:ActionGroupAutomationRunbookReceiver": {
                "automationAccountId": "automation_account_id",
                "isGlobalRunbook": "is_global_runbook",
                "runbookName": "runbook_name",
                "serviceUri": "service_uri",
                "useCommonAlertSchema": "use_common_alert_schema",
                "webhookResourceId": "webhook_resource_id"
            },
            "azure:monitoring/ActionGroupAzureAppPushReceiver:ActionGroupAzureAppPushReceiver": {
                "emailAddress": "email_address"
            },
            "azure:monitoring/ActionGroupAzureFunctionReceiver:ActionGroupAzureFunctionReceiver": {
                "functionAppResourceId": "function_app_resource_id",
                "functionName": "function_name",
                "httpTriggerUrl": "http_trigger_url",
                "useCommonAlertSchema": "use_common_alert_schema"
            },
            "azure:monitoring/ActionGroupEmailReceiver:ActionGroupEmailReceiver": {
                "emailAddress": "email_address",
                "useCommonAlertSchema": "use_common_alert_schema"
            },
            "azure:monitoring/ActionGroupEventHubReceiver:ActionGroupEventHubReceiver": {
                "eventHubId": "event_hub_id",
                "eventHubName": "event_hub_name",
                "eventHubNamespace": "event_hub_namespace",
                "subscriptionId": "subscription_id",
                "tenantId": "tenant_id",
                "useCommonAlertSchema": "use_common_alert_schema"
            },
            "azure:monitoring/ActionGroupItsmReceiver:ActionGroupItsmReceiver": {
                "connectionId": "connection_id",
                "ticketConfiguration": "ticket_configuration",
                "workspaceId": "workspace_id"
            },
            "azure:monitoring/ActionGroupLogicAppReceiver:ActionGroupLogicAppReceiver": {
                "callbackUrl": "callback_url",
                "resourceId": "resource_id",
                "useCommonAlertSchema": "use_common_alert_schema"
            },
            "azure:monitoring/ActionGroupSmsReceiver:ActionGroupSmsReceiver": {
                "countryCode": "country_code",
                "phoneNumber": "phone_number"
            },
            "azure:monitoring/ActionGroupVoiceReceiver:ActionGroupVoiceReceiver": {
                "countryCode": "country_code",
                "phoneNumber": "phone_number"
            },
            "azure:monitoring/ActionGroupWebhookReceiver:ActionGroupWebhookReceiver": {
                "aadAuth": "aad_auth",
                "serviceUri": "service_uri",
                "useCommonAlertSchema": "use_common_alert_schema"
            },
            "azure:monitoring/ActionGroupWebhookReceiverAadAuth:ActionGroupWebhookReceiverAadAuth": {
                "identifierUri": "identifier_uri",
                "objectId": "object_id",
                "tenantId": "tenant_id"
            },
            "azure:monitoring/ActionRuleActionGroupCondition:ActionRuleActionGroupCondition": {
                "alertContext": "alert_context",
                "alertRuleId": "alert_rule_id",
                "monitorService": "monitor_service",
                "targetResourceType": "target_resource_type"
            },
            "azure:monitoring/ActionRuleActionGroupScope:ActionRuleActionGroupScope": {
                "resourceIds": "resource_ids"
            },
            "azure:monitoring/ActionRuleSuppressionCondition:ActionRuleSuppressionCondition": {
                "alertContext": "alert_context",
                "alertRuleId": "alert_rule_id",
                "monitorService": "monitor_service",
                "targetResourceType": "target_resource_type"
            },
            "azure:monitoring/ActionRuleSuppressionScope:ActionRuleSuppressionScope": {
                "resourceIds": "resource_ids"
            },
            "azure:monitoring/ActionRuleSuppressionSuppression:ActionRuleSuppressionSuppression": {
                "recurrenceType": "recurrence_type"
            },
            "azure:monitoring/ActionRuleSuppressionSuppressionSchedule:ActionRuleSuppressionSuppressionSchedule": {
                "endDateUtc": "end_date_utc",
                "recurrenceMonthlies": "recurrence_monthly",
                "recurrenceWeeklies": "recurrence_weekly",
                "startDateUtc": "start_date_utc"
            },
            "azure:monitoring/ActivityLogAlertAction:ActivityLogAlertAction": {
                "actionGroupId": "action_group_id",
                "webhookProperties": "webhook_properties"
            },
            "azure:monitoring/ActivityLogAlertCriteria:ActivityLogAlertCriteria": {
                "operationName": "operation_name",
                "recommendationCategory": "recommendation_category",
                "recommendationImpact": "recommendation_impact",
                "recommendationType": "recommendation_type",
                "resourceGroup": "resource_group",
                "resourceGroups": "resource_groups",
                "resourceHealths": "resource_health",
                "resourceId": "resource_id",
                "resourceIds": "resource_ids",
                "resourceProvider": "resource_provider",
                "resourceProviders": "resource_providers",
                "resourceType": "resource_type",
                "resourceTypes": "resource_types",
                "serviceHealths": "service_health",
                "subStatus": "sub_status",
                "subStatuses": "sub_statuses"
            },
            "azure:monitoring/ActivityLogAlertCriteriaResourceHealth:ActivityLogAlertCriteriaResourceHealth": {
                "currents": "current",
                "previouses": "previous",
                "reasons": "reason"
            },
            "azure:monitoring/AlertProcessingRuleActionGroupCondition:AlertProcessingRuleActionGroupCondition": {
                "alertContext": "alert_context",
                "alertRuleId": "alert_rule_id",
                "alertRuleName": "alert_rule_name",
                "monitorCondition": "monitor_condition",
                "monitorService": "monitor_service",
                "signalType": "signal_type",
                "targetResource": "target_resource",
                "targetResourceGroup": "target_resource_group",
                "targetResourceType": "target_resource_type"
            },
            "azure:monitoring/AlertProcessingRuleActionGroupSchedule:AlertProcessingRuleActionGroupSchedule": {
                "effectiveFrom": "effective_from",
                "effectiveUntil": "effective_until",
                "timeZone": "time_zone"
            },
            "azure:monitoring/AlertProcessingRuleActionGroupScheduleRecurrence:AlertProcessingRuleActionGroupScheduleRecurrence": {
                "dailies": "daily",
                "monthlies": "monthly",
                "weeklies": "weekly"
            },
            "azure:monitoring/AlertProcessingRuleActionGroupScheduleRecurrenceDaily:AlertProcessingRuleActionGroupScheduleRecurrenceDaily": {
                "endTime": "end_time",
                "startTime": "start_time"
            },
            "azure:monitoring/AlertProcessingRuleActionGroupScheduleRecurrenceMonthly:AlertProcessingRuleActionGroupScheduleRecurrenceMonthly": {
                "daysOfMonths": "days_of_month",
                "endTime": "end_time",
                "startTime": "start_time"
            },
            "azure:monitoring/AlertProcessingRuleActionGroupScheduleRecurrenceWeekly:AlertProcessingRuleActionGroupScheduleRecurrenceWeekly": {
                "daysOfWeeks": "days_of_week",
                "endTime": "end_time",
                "startTime": "start_time"
            },
            "azure:monitoring/AlertProcessingRuleSuppressionCondition:AlertProcessingRuleSuppressionCondition": {
                "alertContext": "alert_context",
                "alertRuleId": "alert_rule_id",
                "alertRuleName": "alert_rule_name",
                "monitorCondition": "monitor_condition",
                "monitorService": "monitor_service",
                "signalType": "signal_type",
                "targetResource": "target_resource",
                "targetResourceGroup": "target_resource_group",
                "targetResourceType": "target_resource_type"
            },
            "azure:monitoring/AlertProcessingRuleSuppressionSchedule:AlertProcessingRuleSuppressionSchedule": {
                "effectiveFrom": "effective_from",
                "effectiveUntil": "effective_until",
                "timeZone": "time_zone"
            },
            "azure:monitoring/AlertProcessingRuleSuppressionScheduleRecurrence:AlertProcessingRuleSuppressionScheduleRecurrence": {
                "dailies": "daily",
                "monthlies": "monthly",
                "weeklies": "weekly"
            },
            "azure:monitoring/AlertProcessingRuleSuppressionScheduleRecurrenceDaily:AlertProcessingRuleSuppressionScheduleRecurrenceDaily": {
                "endTime": "end_time",
                "startTime": "start_time"
            },
            "azure:monitoring/AlertProcessingRuleSuppressionScheduleRecurrenceMonthly:AlertProcessingRuleSuppressionScheduleRecurrenceMonthly": {
                "daysOfMonths": "days_of_month",
                "endTime": "end_time",
                "startTime": "start_time"
            },
            "azure:monitoring/AlertProcessingRuleSuppressionScheduleRecurrenceWeekly:AlertProcessingRuleSuppressionScheduleRecurrenceWeekly": {
                "daysOfWeeks": "days_of_week",
                "endTime": "end_time",
                "startTime": "start_time"
            },
            "azure:monitoring/AlertPrometheusRuleGroupRule:AlertPrometheusRuleGroupRule": {
                "actions": "action",
                "alertResolution": "alert_resolution"
            },
            "azure:monitoring/AlertPrometheusRuleGroupRuleAction:AlertPrometheusRuleGroupRuleAction": {
                "actionGroupId": "action_group_id",
                "actionProperties": "action_properties"
            },
            "azure:monitoring/AlertPrometheusRuleGroupRuleAlertResolution:AlertPrometheusRuleGroupRuleAlertResolution": {
                "autoResolved": "auto_resolved",
                "timeToResolve": "time_to_resolve"
            },
            "azure:monitoring/AutoscaleSettingNotification:AutoscaleSettingNotification": {
                "webhooks": "webhook"
            },
            "azure:monitoring/AutoscaleSettingNotificationEmail:AutoscaleSettingNotificationEmail": {
                "customEmails": "custom_emails",
                "sendToSubscriptionAdministrator": "send_to_subscription_administrator",
                "sendToSubscriptionCoAdministrator": "send_to_subscription_co_administrator"
            },
            "azure:monitoring/AutoscaleSettingNotificationWebhook:AutoscaleSettingNotificationWebhook": {
                "serviceUri": "service_uri"
            },
            "azure:monitoring/AutoscaleSettingPredictive:AutoscaleSettingPredictive": {
                "lookAheadTime": "look_ahead_time",
                "scaleMode": "scale_mode"
            },
            "azure:monitoring/AutoscaleSettingProfile:AutoscaleSettingProfile": {
                "fixedDate": "fixed_date",
                "rules": "rule"
            },
            "azure:monitoring/AutoscaleSettingProfileRule:AutoscaleSettingProfileRule": {
                "metricTrigger": "metric_trigger",
                "scaleAction": "scale_action"
            },
            "azure:monitoring/AutoscaleSettingProfileRuleMetricTrigger:AutoscaleSettingProfileRuleMetricTrigger": {
                "divideByInstanceCount": "divide_by_instance_count",
                "metricName": "metric_name",
                "metricNamespace": "metric_namespace",
                "metricResourceId": "metric_resource_id",
                "timeAggregation": "time_aggregation",
                "timeGrain": "time_grain",
                "timeWindow": "time_window"
            },
            "azure:monitoring/DataCollectionRuleDataFlow:DataCollectionRuleDataFlow": {
                "builtInTransform": "built_in_transform",
                "outputStream": "output_stream",
                "transformKql": "transform_kql"
            },
            "azure:monitoring/DataCollectionRuleDataSources:DataCollectionRuleDataSources": {
                "dataImport": "data_import",
                "extensions": "extension",
                "iisLogs": "iis_log",
                "logFiles": "log_file",
                "performanceCounters": "performance_counter",
                "platformTelemetries": "platform_telemetry",
                "prometheusForwarders": "prometheus_forwarder",
                "syslogs": "syslog",
                "windowsEventLogs": "windows_event_log",
                "windowsFirewallLogs": "windows_firewall_log"
            },
            "azure:monitoring/DataCollectionRuleDataSourcesDataImport:DataCollectionRuleDataSourcesDataImport": {
                "eventHubDataSources": "event_hub_data_source"
            },
            "azure:monitoring/DataCollectionRuleDataSourcesDataImportEventHubDataSource:DataCollectionRuleDataSourcesDataImportEventHubDataSource": {
                "consumerGroup": "consumer_group"
            },
            "azure:monitoring/DataCollectionRuleDataSourcesExtension:DataCollectionRuleDataSourcesExtension": {
                "extensionJson": "extension_json",
                "extensionName": "extension_name",
                "inputDataSources": "input_data_sources"
            },
            "azure:monitoring/DataCollectionRuleDataSourcesIisLog:DataCollectionRuleDataSourcesIisLog": {
                "logDirectories": "log_directories"
            },
            "azure:monitoring/DataCollectionRuleDataSourcesLogFile:DataCollectionRuleDataSourcesLogFile": {
                "filePatterns": "file_patterns"
            },
            "azure:monitoring/DataCollectionRuleDataSourcesLogFileSettingsText:DataCollectionRuleDataSourcesLogFileSettingsText": {
                "recordStartTimestampFormat": "record_start_timestamp_format"
            },
            "azure:monitoring/DataCollectionRuleDataSourcesPerformanceCounter:DataCollectionRuleDataSourcesPerformanceCounter": {
                "counterSpecifiers": "counter_specifiers",
                "samplingFrequencyInSeconds": "sampling_frequency_in_seconds"
            },
            "azure:monitoring/DataCollectionRuleDataSourcesPrometheusForwarder:DataCollectionRuleDataSourcesPrometheusForwarder": {
                "labelIncludeFilters": "label_include_filter"
            },
            "azure:monitoring/DataCollectionRuleDataSourcesSyslog:DataCollectionRuleDataSourcesSyslog": {
                "facilityNames": "facility_names",
                "logLevels": "log_levels"
            },
            "azure:monitoring/DataCollectionRuleDataSourcesWindowsEventLog:DataCollectionRuleDataSourcesWindowsEventLog": {
                "xPathQueries": "x_path_queries"
            },
            "azure:monitoring/DataCollectionRuleDestinations:DataCollectionRuleDestinations": {
                "azureMonitorMetrics": "azure_monitor_metrics",
                "eventHub": "event_hub",
                "eventHubDirect": "event_hub_direct",
                "logAnalytics": "log_analytics",
                "monitorAccounts": "monitor_account",
                "storageBlobDirects": "storage_blob_direct",
                "storageBlobs": "storage_blob",
                "storageTableDirects": "storage_table_direct"
            },
            "azure:monitoring/DataCollectionRuleDestinationsEventHub:DataCollectionRuleDestinationsEventHub": {
                "eventHubId": "event_hub_id"
            },
            "azure:monitoring/DataCollectionRuleDestinationsEventHubDirect:DataCollectionRuleDestinationsEventHubDirect": {
                "eventHubId": "event_hub_id"
            },
            "azure:monitoring/DataCollectionRuleDestinationsLogAnalytic:DataCollectionRuleDestinationsLogAnalytic": {
                "workspaceResourceId": "workspace_resource_id"
            },
            "azure:monitoring/DataCollectionRuleDestinationsMonitorAccount:DataCollectionRuleDestinationsMonitorAccount": {
                "monitorAccountId": "monitor_account_id"
            },
            "azure:monitoring/DataCollectionRuleDestinationsStorageBlob:DataCollectionRuleDestinationsStorageBlob": {
                "containerName": "container_name",
                "storageAccountId": "storage_account_id"
            },
            "azure:monitoring/DataCollectionRuleDestinationsStorageBlobDirect:DataCollectionRuleDestinationsStorageBlobDirect": {
                "containerName": "container_name",
                "storageAccountId": "storage_account_id"
            },
            "azure:monitoring/DataCollectionRuleDestinationsStorageTableDirect:DataCollectionRuleDestinationsStorageTableDirect": {
                "storageAccountId": "storage_account_id",
                "tableName": "table_name"
            },
            "azure:monitoring/DataCollectionRuleIdentity:DataCollectionRuleIdentity": {
                "identityIds": "identity_ids",
                "principalId": "principal_id",
                "tenantId": "tenant_id"
            },
            "azure:monitoring/DataCollectionRuleStreamDeclaration:DataCollectionRuleStreamDeclaration": {
                "columns": "column",
                "streamName": "stream_name"
            },
            "azure:monitoring/DiagnosticSettingEnabledLog:DiagnosticSettingEnabledLog": {
                "categoryGroup": "category_group",
                "retentionPolicy": "retention_policy"
            },
            "azure:monitoring/DiagnosticSettingLog:DiagnosticSettingLog": {
                "categoryGroup": "category_group",
                "retentionPolicy": "retention_policy"
            },
            "azure:monitoring/DiagnosticSettingMetric:DiagnosticSettingMetric": {
                "retentionPolicy": "retention_policy"
            },
            "azure:monitoring/LogzMonitorPlan:LogzMonitorPlan": {
                "billingCycle": "billing_cycle",
                "effectiveDate": "effective_date",
                "planId": "plan_id",
                "usageType": "usage_type"
            },
            "azure:monitoring/LogzMonitorUser:LogzMonitorUser": {
                "firstName": "first_name",
                "lastName": "last_name",
                "phoneNumber": "phone_number"
            },
            "azure:monitoring/LogzSubAccountUser:LogzSubAccountUser": {
                "firstName": "first_name",
                "lastName": "last_name",
                "phoneNumber": "phone_number"
            },
            "azure:monitoring/MetricAlertAction:MetricAlertAction": {
                "actionGroupId": "action_group_id",
                "webhookProperties": "webhook_properties"
            },
            "azure:monitoring/MetricAlertApplicationInsightsWebTestLocationAvailabilityCriteria:MetricAlertApplicationInsightsWebTestLocationAvailabilityCriteria": {
                "componentId": "component_id",
                "failedLocationCount": "failed_location_count",
                "webTestId": "web_test_id"
            },
            "azure:monitoring/MetricAlertCriteria:MetricAlertCriteria": {
                "dimensions": "dimension",
                "metricName": "metric_name",
                "metricNamespace": "metric_namespace",
                "skipMetricValidation": "skip_metric_validation"
            },
            "azure:monitoring/MetricAlertDynamicCriteria:MetricAlertDynamicCriteria": {
                "alertSensitivity": "alert_sensitivity",
                "dimensions": "dimension",
                "evaluationFailureCount": "evaluation_failure_count",
                "evaluationTotalCount": "evaluation_total_count",
                "ignoreDataBefore": "ignore_data_before",
                "metricName": "metric_name",
                "metricNamespace": "metric_namespace",
                "skipMetricValidation": "skip_metric_validation"
            },
            "azure:monitoring/ScheduledQueryRulesAlertAction:ScheduledQueryRulesAlertAction": {
                "actionGroups": "action_group",
                "customWebhookPayload": "custom_webhook_payload",
                "emailSubject": "email_subject"
            },
            "azure:monitoring/ScheduledQueryRulesAlertTrigger:ScheduledQueryRulesAlertTrigger": {
                "metricTrigger": "metric_trigger"
            },
            "azure:monitoring/ScheduledQueryRulesAlertTriggerMetricTrigger:ScheduledQueryRulesAlertTriggerMetricTrigger": {
                "metricColumn": "metric_column",
                "metricTriggerType": "metric_trigger_type"
            },
            "azure:monitoring/ScheduledQueryRulesAlertV2Action:ScheduledQueryRulesAlertV2Action": {
                "actionGroups": "action_groups",
                "customProperties": "custom_properties"
            },
            "azure:monitoring/ScheduledQueryRulesAlertV2Criteria:ScheduledQueryRulesAlertV2Criteria": {
                "dimensions": "dimension",
                "failingPeriods": "failing_periods",
                "metricMeasureColumn": "metric_measure_column",
                "resourceIdColumn": "resource_id_column",
                "timeAggregationMethod": "time_aggregation_method"
            },
            "azure:monitoring/ScheduledQueryRulesAlertV2CriteriaFailingPeriods:ScheduledQueryRulesAlertV2CriteriaFailingPeriods": {
                "minimumFailingPeriodsToTriggerAlert": "minimum_failing_periods_to_trigger_alert",
                "numberOfEvaluationPeriods": "number_of_evaluation_periods"
            },
            "azure:monitoring/ScheduledQueryRulesLogCriteria:ScheduledQueryRulesLogCriteria": {
                "dimensions": "dimension",
                "metricName": "metric_name"
            },
            "azure:monitoring/SmartDetectorAlertRuleActionGroup:SmartDetectorAlertRuleActionGroup": {
                "emailSubject": "email_subject",
                "webhookPayload": "webhook_payload"
            },
            "azure:monitoring/aadDiagnosticSetting:AadDiagnosticSetting": {
                "enabledLogs": "enabled_log",
                "eventhubAuthorizationRuleId": "eventhub_authorization_rule_id",
                "eventhubName": "eventhub_name",
                "logAnalyticsWorkspaceId": "log_analytics_workspace_id",
                "logs": "log",
                "storageAccountId": "storage_account_id"
            },
            "azure:monitoring/actionGroup:ActionGroup": {
                "armRoleReceivers": "arm_role_receiver",
                "automationRunbookReceivers": "automation_runbook_receiver",
                "azureAppPushReceivers": "azure_app_push_receiver",
                "azureFunctionReceivers": "azure_function_receiver",
                "emailReceivers": "email_receiver",
                "eventHubReceivers": "event_hub_receiver",
                "itsmReceivers": "itsm_receiver",
                "logicAppReceivers": "logic_app_receiver",
                "resourceGroupName": "resource_group_name",
                "shortName": "short_name",
                "smsReceivers": "sms_receiver",
                "voiceReceivers": "voice_receiver",
                "webhookReceivers": "webhook_receiver"
            },
            "azure:monitoring/actionRuleActionGroup:ActionRuleActionGroup": {
                "actionGroupId": "action_group_id",
                "resourceGroupName": "resource_group_name"
            },
            "azure:monitoring/actionRuleSuppression:ActionRuleSuppression": {
                "resourceGroupName": "resource_group_name"
            },
            "azure:monitoring/activityLogAlert:ActivityLogAlert": {
                "actions": "action",
                "resourceGroupName": "resource_group_name"
            },
            "azure:monitoring/alertProcessingRuleActionGroup:AlertProcessingRuleActionGroup": {
                "addActionGroupIds": "add_action_group_ids",
                "resourceGroupName": "resource_group_name"
            },
            "azure:monitoring/alertProcessingRuleSuppression:AlertProcessingRuleSuppression": {
                "resourceGroupName": "resource_group_name"
            },
            "azure:monitoring/alertPrometheusRuleGroup:AlertPrometheusRuleGroup": {
                "clusterName": "cluster_name",
                "resourceGroupName": "resource_group_name",
                "ruleGroupEnabled": "rule_group_enabled",
                "rules": "rule"
            },
            "azure:monitoring/autoscaleSetting:AutoscaleSetting": {
                "profiles": "profile",
                "resourceGroupName": "resource_group_name",
                "targetResourceId": "target_resource_id"
            },
            "azure:monitoring/dataCollectionEndpoint:DataCollectionEndpoint": {
                "configurationAccessEndpoint": "configuration_access_endpoint",
                "logsIngestionEndpoint": "logs_ingestion_endpoint",
                "publicNetworkAccessEnabled": "public_network_access_enabled",
                "resourceGroupName": "resource_group_name"
            },
            "azure:monitoring/dataCollectionRule:DataCollectionRule": {
                "dataCollectionEndpointId": "data_collection_endpoint_id",
                "dataFlows": "data_flow",
                "dataSources": "data_sources",
                "immutableId": "immutable_id",
                "resourceGroupName": "resource_group_name",
                "streamDeclarations": "stream_declaration"
            },
            "azure:monitoring/dataCollectionRuleAssociation:DataCollectionRuleAssociation": {
                "dataCollectionEndpointId": "data_collection_endpoint_id",
                "dataCollectionRuleId": "data_collection_rule_id",
                "targetResourceId": "target_resource_id"
            },
            "azure:monitoring/diagnosticSetting:DiagnosticSetting": {
                "enabledLogs": "enabled_log",
                "eventhubAuthorizationRuleId": "eventhub_authorization_rule_id",
                "eventhubName": "eventhub_name",
                "logAnalyticsDestinationType": "log_analytics_destination_type",
                "logAnalyticsWorkspaceId": "log_analytics_workspace_id",
                "logs": "log",
                "metrics": "metric",
                "partnerSolutionId": "partner_solution_id",
                "storageAccountId": "storage_account_id",
                "targetResourceId": "target_resource_id"
            },
            "azure:monitoring/getActionGroup:getActionGroup": {
                "armRoleReceivers": "arm_role_receiver",
                "automationRunbookReceivers": "automation_runbook_receiver",
                "azureAppPushReceivers": "azure_app_push_receiver",
                "azureFunctionReceivers": "azure_function_receiver",
                "emailReceivers": "email_receiver",
                "eventHubReceivers": "event_hub_receiver",
                "itsmReceivers": "itsm_receiver",
                "logicAppReceivers": "logic_app_receiver",
                "resourceGroupName": "resource_group_name",
                "shortName": "short_name",
                "smsReceivers": "sms_receiver",
                "voiceReceivers": "voice_receiver",
                "webhookReceivers": "webhook_receiver"
            },
            "azure:monitoring/getActionGroupArmRoleReceiver:getActionGroupArmRoleReceiver": {
                "roleId": "role_id",
                "useCommonAlertSchema": "use_common_alert_schema"
            },
            "azure:monitoring/getActionGroupAutomationRunbookReceiver:getActionGroupAutomationRunbookReceiver": {
                "automationAccountId": "automation_account_id",
                "isGlobalRunbook": "is_global_runbook",
                "runbookName": "runbook_name",
                "serviceUri": "service_uri",
                "useCommonAlertSchema": "use_common_alert_schema",
                "webhookResourceId": "webhook_resource_id"
            },
            "azure:monitoring/getActionGroupAzureAppPushReceiver:getActionGroupAzureAppPushReceiver": {
                "emailAddress": "email_address"
            },
            "azure:monitoring/getActionGroupAzureFunctionReceiver:getActionGroupAzureFunctionReceiver": {
                "functionAppResourceId": "function_app_resource_id",
                "functionName": "function_name",
                "httpTriggerUrl": "http_trigger_url",
                "useCommonAlertSchema": "use_common_alert_schema"
            },
            "azure:monitoring/getActionGroupEmailReceiver:getActionGroupEmailReceiver": {
                "emailAddress": "email_address",
                "useCommonAlertSchema": "use_common_alert_schema"
            },
            "azure:monitoring/getActionGroupEventHubReceiver:getActionGroupEventHubReceiver": {
                "eventHubId": "event_hub_id",
                "eventHubName": "event_hub_name",
                "eventHubNamespace": "event_hub_namespace",
                "subscriptionId": "subscription_id",
                "tenantId": "tenant_id",
                "useCommonAlertSchema": "use_common_alert_schema"
            },
            "azure:monitoring/getActionGroupItsmReceiver:getActionGroupItsmReceiver": {
                "connectionId": "connection_id",
                "ticketConfiguration": "ticket_configuration",
                "workspaceId": "workspace_id"
            },
            "azure:monitoring/getActionGroupLogicAppReceiver:getActionGroupLogicAppReceiver": {
                "callbackUrl": "callback_url",
                "resourceId": "resource_id",
                "useCommonAlertSchema": "use_common_alert_schema"
            },
            "azure:monitoring/getActionGroupSmsReceiver:getActionGroupSmsReceiver": {
                "countryCode": "country_code",
                "phoneNumber": "phone_number"
            },
            "azure:monitoring/getActionGroupVoiceReceiver:getActionGroupVoiceReceiver": {
                "countryCode": "country_code",
                "phoneNumber": "phone_number"
            },
            "azure:monitoring/getActionGroupWebhookReceiver:getActionGroupWebhookReceiver": {
                "aadAuths": "aad_auth",
                "serviceUri": "service_uri",
                "useCommonAlertSchema": "use_common_alert_schema"
            },
            "azure:monitoring/getActionGroupWebhookReceiverAadAuth:getActionGroupWebhookReceiverAadAuth": {
                "identifierUri": "identifier_uri",
                "objectId": "object_id",
                "tenantId": "tenant_id"
            },
            "azure:monitoring/getDataCollectionEndpoint:getDataCollectionEndpoint": {
                "configurationAccessEndpoint": "configuration_access_endpoint",
                "logsIngestionEndpoint": "logs_ingestion_endpoint",
                "publicNetworkAccessEnabled": "public_network_access_enabled",
                "resourceGroupName": "resource_group_name"
            },
            "azure:monitoring/getDataCollectionRule:getDataCollectionRule": {
                "dataCollectionEndpointId": "data_collection_endpoint_id",
                "dataFlows": "data_flow",
                "dataSources": "data_sources",
                "identities": "identity",
                "immutableId": "immutable_id",
                "resourceGroupName": "resource_group_name",
                "streamDeclarations": "stream_declaration"
            },
            "azure:monitoring/getDataCollectionRuleDataFlow:getDataCollectionRuleDataFlow": {
                "builtInTransform": "built_in_transform",
                "outputStream": "output_stream",
                "transformKql": "transform_kql"
            },
            "azure:monitoring/getDataCollectionRuleDataSource:getDataCollectionRuleDataSource": {
                "dataImports": "data_import",
                "extensions": "extension",
                "iisLogs": "iis_log",
                "logFiles": "log_file",
                "performanceCounters": "performance_counter",
                "platformTelemetries": "platform_telemetry",
                "prometheusForwarders": "prometheus_forwarder",
                "syslogs": "syslog",
                "windowsEventLogs": "windows_event_log",
                "windowsFirewallLogs": "windows_firewall_log"
            },
            "azure:monitoring/getDataCollectionRuleDataSourceDataImport:getDataCollectionRuleDataSourceDataImport": {
                "eventHubDataSources": "event_hub_data_source"
            },
            "azure:monitoring/getDataCollectionRuleDataSourceDataImportEventHubDataSource:getDataCollectionRuleDataSourceDataImportEventHubDataSource": {
                "consumerGroup": "consumer_group"
            },
            "azure:monitoring/getDataCollectionRuleDataSourceExtension:getDataCollectionRuleDataSourceExtension": {
                "extensionJson": "extension_json",
                "extensionName": "extension_name",
                "inputDataSources": "input_data_sources"
            },
            "azure:monitoring/getDataCollectionRuleDataSourceIisLog:getDataCollectionRuleDataSourceIisLog": {
                "logDirectories": "log_directories"
            },
            "azure:monitoring/getDataCollectionRuleDataSourceLogFile:getDataCollectionRuleDataSourceLogFile": {
                "filePatterns": "file_patterns"
            },
            "azure:monitoring/getDataCollectionRuleDataSourceLogFileSetting:getDataCollectionRuleDataSourceLogFileSetting": {
                "texts": "text"
            },
            "azure:monitoring/getDataCollectionRuleDataSourceLogFileSettingText:getDataCollectionRuleDataSourceLogFileSettingText": {
                "recordStartTimestampFormat": "record_start_timestamp_format"
            },
            "azure:monitoring/getDataCollectionRuleDataSourcePerformanceCounter:getDataCollectionRuleDataSourcePerformanceCounter": {
                "counterSpecifiers": "counter_specifiers",
                "samplingFrequencyInSeconds": "sampling_frequency_in_seconds"
            },
            "azure:monitoring/getDataCollectionRuleDataSourcePrometheusForwarder:getDataCollectionRuleDataSourcePrometheusForwarder": {
                "labelIncludeFilters": "label_include_filter"
            },
            "azure:monitoring/getDataCollectionRuleDataSourceSyslog:getDataCollectionRuleDataSourceSyslog": {
                "facilityNames": "facility_names",
                "logLevels": "log_levels"
            },
            "azure:monitoring/getDataCollectionRuleDataSourceWindowsEventLog:getDataCollectionRuleDataSourceWindowsEventLog": {
                "xPathQueries": "x_path_queries"
            },
            "azure:monitoring/getDataCollectionRuleDestination:getDataCollectionRuleDestination": {
                "azureMonitorMetrics": "azure_monitor_metrics",
                "eventHub": "event_hub",
                "eventHubDirect": "event_hub_direct",
                "logAnalytics": "log_analytics",
                "monitorAccounts": "monitor_account",
                "storageBlobDirects": "storage_blob_direct",
                "storageBlobs": "storage_blob",
                "storageTableDirects": "storage_table_direct"
            },
            "azure:monitoring/getDataCollectionRuleDestinationEventHub:getDataCollectionRuleDestinationEventHub": {
                "eventHubId": "event_hub_id"
            },
            "azure:monitoring/getDataCollectionRuleDestinationEventHubDirect:getDataCollectionRuleDestinationEventHubDirect": {
                "eventHubId": "event_hub_id"
            },
            "azure:monitoring/getDataCollectionRuleDestinationLogAnalytic:getDataCollectionRuleDestinationLogAnalytic": {
                "workspaceResourceId": "workspace_resource_id"
            },
            "azure:monitoring/getDataCollectionRuleDestinationMonitorAccount:getDataCollectionRuleDestinationMonitorAccount": {
                "monitorAccountId": "monitor_account_id"
            },
            "azure:monitoring/getDataCollectionRuleDestinationStorageBlob:getDataCollectionRuleDestinationStorageBlob": {
                "containerName": "container_name",
                "storageAccountId": "storage_account_id"
            },
            "azure:monitoring/getDataCollectionRuleDestinationStorageBlobDirect:getDataCollectionRuleDestinationStorageBlobDirect": {
                "containerName": "container_name",
                "storageAccountId": "storage_account_id"
            },
            "azure:monitoring/getDataCollectionRuleDestinationStorageTableDirect:getDataCollectionRuleDestinationStorageTableDirect": {
                "storageAccountId": "storage_account_id",
                "tableName": "table_name"
            },
            "azure:monitoring/getDataCollectionRuleIdentity:getDataCollectionRuleIdentity": {
                "identityIds": "identity_ids",
                "principalId": "principal_id",
                "tenantId": "tenant_id"
            },
            "azure:monitoring/getDataCollectionRuleStreamDeclaration:getDataCollectionRuleStreamDeclaration": {
                "columns": "column",
                "streamName": "stream_name"
            },
            "azure:monitoring/getDiagnosticCategories:getDiagnosticCategories": {
                "logCategoryGroups": "log_category_groups",
                "logCategoryTypes": "log_category_types",
                "resourceId": "resource_id"
            },
            "azure:monitoring/getLogProfile:getLogProfile": {
                "retentionPolicies": "retention_policy",
                "servicebusRuleId": "servicebus_rule_id",
                "storageAccountId": "storage_account_id"
            },
            "azure:monitoring/getScheduledQueryRulesAlert:getScheduledQueryRulesAlert": {
                "actions": "action",
                "authorizedResourceIds": "authorized_resource_ids",
                "dataSourceId": "data_source_id",
                "queryType": "query_type",
                "resourceGroupName": "resource_group_name",
                "timeWindow": "time_window",
                "triggers": "trigger"
            },
            "azure:monitoring/getScheduledQueryRulesAlertAction:getScheduledQueryRulesAlertAction": {
                "actionGroups": "action_group",
                "customWebhookPayload": "custom_webhook_payload",
                "emailSubject": "email_subject"
            },
            "azure:monitoring/getScheduledQueryRulesAlertTrigger:getScheduledQueryRulesAlertTrigger": {
                "metricTriggers": "metric_trigger"
            },
            "azure:monitoring/getScheduledQueryRulesAlertTriggerMetricTrigger:getScheduledQueryRulesAlertTriggerMetricTrigger": {
                "metricColumn": "metric_column",
                "metricTriggerType": "metric_trigger_type"
            },
            "azure:monitoring/getScheduledQueryRulesLog:getScheduledQueryRulesLog": {
                "authorizedResourceIds": "authorized_resource_ids",
                "criterias": "criteria",
                "dataSourceId": "data_source_id",
                "resourceGroupName": "resource_group_name"
            },
            "azure:monitoring/getScheduledQueryRulesLogCriteria:getScheduledQueryRulesLogCriteria": {
                "dimensions": "dimension",
                "metricName": "metric_name"
            },
            "azure:monitoring/getWorkspace:getWorkspace": {
                "publicNetworkAccessEnabled": "public_network_access_enabled",
                "queryEndpoint": "query_endpoint",
                "resourceGroupName": "resource_group_name"
            },
            "azure:monitoring/logProfile:LogProfile": {
                "retentionPolicy": "retention_policy",
                "servicebusRuleId": "servicebus_rule_id",
                "storageAccountId": "storage_account_id"
            },
            "azure:monitoring/logzMonitor:LogzMonitor": {
                "companyName": "company_name",
                "enterpriseAppId": "enterprise_app_id",
                "logzOrganizationId": "logz_organization_id",
                "resourceGroupName": "resource_group_name",
                "singleSignOnUrl": "single_sign_on_url"
            },
            "azure:monitoring/logzSubAccount:LogzSubAccount": {
                "logzMonitorId": "logz_monitor_id"
            },
            "azure:monitoring/logzSubAccountTagRule:LogzSubAccountTagRule": {
                "logzSubAccountId": "logz_sub_account_id",
                "sendAadLogs": "send_aad_logs",
                "sendActivityLogs": "send_activity_logs",
                "sendSubscriptionLogs": "send_subscription_logs",
                "tagFilters": "tag_filter"
            },
            "azure:monitoring/logzTagRule:LogzTagRule": {
                "logzMonitorId": "logz_monitor_id",
                "sendAadLogs": "send_aad_logs",
                "sendActivityLogs": "send_activity_logs",
                "sendSubscriptionLogs": "send_subscription_logs",
                "tagFilters": "tag_filter"
            },
            "azure:monitoring/metricAlert:MetricAlert": {
                "actions": "action",
                "applicationInsightsWebTestLocationAvailabilityCriteria": "application_insights_web_test_location_availability_criteria",
                "autoMitigate": "auto_mitigate",
                "criterias": "criteria",
                "dynamicCriteria": "dynamic_criteria",
                "resourceGroupName": "resource_group_name",
                "targetResourceLocation": "target_resource_location",
                "targetResourceType": "target_resource_type",
                "windowSize": "window_size"
            },
            "azure:monitoring/privateLinkScope:PrivateLinkScope": {
                "resourceGroupName": "resource_group_name"
            },
            "azure:monitoring/privateLinkScopedService:PrivateLinkScopedService": {
                "linkedResourceId": "linked_resource_id",
                "resourceGroupName": "resource_group_name",
                "scopeName": "scope_name"
            },
            "azure:monitoring/scheduledQueryRulesAlert:ScheduledQueryRulesAlert": {
                "authorizedResourceIds": "authorized_resource_ids",
                "autoMitigationEnabled": "auto_mitigation_enabled",
                "dataSourceId": "data_source_id",
                "queryType": "query_type",
                "resourceGroupName": "resource_group_name",
                "timeWindow": "time_window"
            },
            "azure:monitoring/scheduledQueryRulesAlertV2:ScheduledQueryRulesAlertV2": {
                "autoMitigationEnabled": "auto_mitigation_enabled",
                "createdWithApiVersion": "created_with_api_version",
                "criterias": "criteria",
                "displayName": "display_name",
                "evaluationFrequency": "evaluation_frequency",
                "isALegacyLogAnalyticsRule": "is_a_legacy_log_analytics_rule",
                "isWorkspaceAlertsStorageConfigured": "is_workspace_alerts_storage_configured",
                "muteActionsAfterAlertDuration": "mute_actions_after_alert_duration",
                "queryTimeRangeOverride": "query_time_range_override",
                "resourceGroupName": "resource_group_name",
                "skipQueryValidation": "skip_query_validation",
                "targetResourceTypes": "target_resource_types",
                "windowDuration": "window_duration",
                "workspaceAlertsStorageEnabled": "workspace_alerts_storage_enabled"
            },
            "azure:monitoring/scheduledQueryRulesLog:ScheduledQueryRulesLog": {
                "authorizedResourceIds": "authorized_resource_ids",
                "dataSourceId": "data_source_id",
                "resourceGroupName": "resource_group_name"
            },
            "azure:monitoring/smartDetectorAlertRule:SmartDetectorAlertRule": {
                "actionGroup": "action_group",
                "detectorType": "detector_type",
                "resourceGroupName": "resource_group_name",
                "scopeResourceIds": "scope_resource_ids",
                "throttlingDuration": "throttling_duration"
            },
            "azure:monitoring/workspace:Workspace": {
                "publicNetworkAccessEnabled": "public_network_access_enabled",
                "queryEndpoint": "query_endpoint",
                "resourceGroupName": "resource_group_name"
            },
            "azure:msi/userAssignedIdentity:UserAssignedIdentity": {
                "clientId": "client_id",
                "principalId": "principal_id",
                "resourceGroupName": "resource_group_name",
                "tenantId": "tenant_id"
            },
            "azure:mssql/DatabaseImport:DatabaseImport": {
                "administratorLogin": "administrator_login",
                "administratorLoginPassword": "administrator_login_password",
                "authenticationType": "authentication_type",
                "storageAccountId": "storage_account_id",
                "storageKey": "storage_key",
                "storageKeyType": "storage_key_type",
                "storageUri": "storage_uri"
            },
            "azure:mssql/DatabaseLongTermRetentionPolicy:DatabaseLongTermRetentionPolicy": {
                "monthlyRetention": "monthly_retention",
                "weekOfYear": "week_of_year",
                "weeklyRetention": "weekly_retention",
                "yearlyRetention": "yearly_retention"
            },
            "azure:mssql/DatabaseShortTermRetentionPolicy:DatabaseShortTermRetentionPolicy": {
                "backupIntervalInHours": "backup_interval_in_hours",
                "retentionDays": "retention_days"
            },
            "azure:mssql/DatabaseThreatDetectionPolicy:DatabaseThreatDetectionPolicy": {
                "disabledAlerts": "disabled_alerts",
                "emailAccountAdmins": "email_account_admins",
                "emailAddresses": "email_addresses",
                "retentionDays": "retention_days",
                "storageAccountAccessKey": "storage_account_access_key",
                "storageEndpoint": "storage_endpoint"
            },
            "azure:mssql/DatabaseVulnerabilityAssessmentRuleBaselineBaselineResult:DatabaseVulnerabilityAssessmentRuleBaselineBaselineResult": {
                "results": "result"
            },
            "azure:mssql/ElasticPoolPerDatabaseSettings:ElasticPoolPerDatabaseSettings": {
                "maxCapacity": "max_capacity",
                "minCapacity": "min_capacity"
            },
            "azure:mssql/FailoverGroupReadWriteEndpointFailoverPolicy:FailoverGroupReadWriteEndpointFailoverPolicy": {
                "graceMinutes": "grace_minutes"
            },
            "azure:mssql/ManagedDatabaseLongTermRetentionPolicy:ManagedDatabaseLongTermRetentionPolicy": {
                "monthlyRetention": "monthly_retention",
                "weekOfYear": "week_of_year",
                "weeklyRetention": "weekly_retention",
                "yearlyRetention": "yearly_retention"
            },
            "azure:mssql/ManagedInstanceFailoverGroupReadWriteEndpointFailoverPolicy:ManagedInstanceFailoverGroupReadWriteEndpointFailoverPolicy": {
                "graceMinutes": "grace_minutes"
            },
            "azure:mssql/ManagedInstanceIdentity:ManagedInstanceIdentity": {
                "identityIds": "identity_ids",
                "principalId": "principal_id",
                "tenantId": "tenant_id"
            },
            "azure:mssql/ManagedInstanceVulnerabilityAssessmentRecurringScans:ManagedInstanceVulnerabilityAssessmentRecurringScans": {
                "emailSubscriptionAdmins": "email_subscription_admins"
            },
            "azure:mssql/ServerAzureadAdministrator:ServerAzureadAdministrator": {
                "azureadAuthenticationOnly": "azuread_authentication_only",
                "loginUsername": "login_username",
                "objectId": "object_id",
                "tenantId": "tenant_id"
            },
            "azure:mssql/ServerIdentity:ServerIdentity": {
                "identityIds": "identity_ids",
                "principalId": "principal_id",
                "tenantId": "tenant_id"
            },
            "azure:mssql/ServerVulnerabilityAssessmentRecurringScans:ServerVulnerabilityAssessmentRecurringScans": {
                "emailSubscriptionAdmins": "email_subscription_admins"
            },
            "azure:mssql/VirtualMachineAssessment:VirtualMachineAssessment": {
                "runImmediately": "run_immediately"
            },
            "azure:mssql/VirtualMachineAssessmentSchedule:VirtualMachineAssessmentSchedule": {
                "dayOfWeek": "day_of_week",
                "monthlyOccurrence": "monthly_occurrence",
                "startTime": "start_time",
                "weeklyInterval": "weekly_interval"
            },
            "azure:mssql/VirtualMachineAutoBackup:VirtualMachineAutoBackup": {
                "encryptionEnabled": "encryption_enabled",
                "encryptionPassword": "encryption_password",
                "manualSchedule": "manual_schedule",
                "retentionPeriodInDays": "retention_period_in_days",
                "storageAccountAccessKey": "storage_account_access_key",
                "storageBlobEndpoint": "storage_blob_endpoint",
                "systemDatabasesBackupEnabled": "system_databases_backup_enabled"
            },
            "azure:mssql/VirtualMachineAutoBackupManualSchedule:VirtualMachineAutoBackupManualSchedule": {
                "daysOfWeeks": "days_of_week",
                "fullBackupFrequency": "full_backup_frequency",
                "fullBackupStartHour": "full_backup_start_hour",
                "fullBackupWindowInHours": "full_backup_window_in_hours",
                "logBackupFrequencyInMinutes": "log_backup_frequency_in_minutes"
            },
            "azure:mssql/VirtualMachineAutoPatching:VirtualMachineAutoPatching": {
                "dayOfWeek": "day_of_week",
                "maintenanceWindowDurationInMinutes": "maintenance_window_duration_in_minutes",
                "maintenanceWindowStartingHour": "maintenance_window_starting_hour"
            },
            "azure:mssql/VirtualMachineAvailabilityGroupListenerLoadBalancerConfiguration:VirtualMachineAvailabilityGroupListenerLoadBalancerConfiguration": {
                "loadBalancerId": "load_balancer_id",
                "privateIpAddress": "private_ip_address",
                "probePort": "probe_port",
                "sqlVirtualMachineIds": "sql_virtual_machine_ids",
                "subnetId": "subnet_id"
            },
            "azure:mssql/VirtualMachineAvailabilityGroupListenerMultiSubnetIpConfiguration:VirtualMachineAvailabilityGroupListenerMultiSubnetIpConfiguration": {
                "privateIpAddress": "private_ip_address",
                "sqlVirtualMachineId": "sql_virtual_machine_id",
                "subnetId": "subnet_id"
            },
            "azure:mssql/VirtualMachineAvailabilityGroupListenerReplica:VirtualMachineAvailabilityGroupListenerReplica": {
                "failoverMode": "failover_mode",
                "readableSecondary": "readable_secondary",
                "sqlVirtualMachineId": "sql_virtual_machine_id"
            },
            "azure:mssql/VirtualMachineGroupWsfcDomainProfile:VirtualMachineGroupWsfcDomainProfile": {
                "clusterBootstrapAccountName": "cluster_bootstrap_account_name",
                "clusterOperatorAccountName": "cluster_operator_account_name",
                "clusterSubnetType": "cluster_subnet_type",
                "organizationalUnitPath": "organizational_unit_path",
                "sqlServiceAccountName": "sql_service_account_name",
                "storageAccountPrimaryKey": "storage_account_primary_key",
                "storageAccountUrl": "storage_account_url"
            },
            "azure:mssql/VirtualMachineKeyVaultCredential:VirtualMachineKeyVaultCredential": {
                "keyVaultUrl": "key_vault_url",
                "servicePrincipalName": "service_principal_name",
                "servicePrincipalSecret": "service_principal_secret"
            },
            "azure:mssql/VirtualMachineSqlInstance:VirtualMachineSqlInstance": {
                "adhocWorkloadsOptimizationEnabled": "adhoc_workloads_optimization_enabled",
                "instantFileInitializationEnabled": "instant_file_initialization_enabled",
                "lockPagesInMemoryEnabled": "lock_pages_in_memory_enabled",
                "maxDop": "max_dop",
                "maxServerMemoryMb": "max_server_memory_mb",
                "minServerMemoryMb": "min_server_memory_mb"
            },
            "azure:mssql/VirtualMachineStorageConfiguration:VirtualMachineStorageConfiguration": {
                "dataSettings": "data_settings",
                "diskType": "disk_type",
                "logSettings": "log_settings",
                "storageWorkloadType": "storage_workload_type",
                "systemDbOnDataDiskEnabled": "system_db_on_data_disk_enabled",
                "tempDbSettings": "temp_db_settings"
            },
            "azure:mssql/VirtualMachineStorageConfigurationDataSettings:VirtualMachineStorageConfigurationDataSettings": {
                "defaultFilePath": "default_file_path"
            },
            "azure:mssql/VirtualMachineStorageConfigurationLogSettings:VirtualMachineStorageConfigurationLogSettings": {
                "defaultFilePath": "default_file_path"
            },
            "azure:mssql/VirtualMachineStorageConfigurationTempDbSettings:VirtualMachineStorageConfigurationTempDbSettings": {
                "dataFileCount": "data_file_count",
                "dataFileGrowthInMb": "data_file_growth_in_mb",
                "dataFileSizeMb": "data_file_size_mb",
                "defaultFilePath": "default_file_path",
                "logFileGrowthMb": "log_file_growth_mb",
                "logFileSizeMb": "log_file_size_mb"
            },
            "azure:mssql/VirtualMachineWsfcDomainCredential:VirtualMachineWsfcDomainCredential": {
                "clusterBootstrapAccountPassword": "cluster_bootstrap_account_password",
                "clusterOperatorAccountPassword": "cluster_operator_account_password",
                "sqlServiceAccountPassword": "sql_service_account_password"
            },
            "azure:mssql/database:Database": {
                "autoPauseDelayInMinutes": "auto_pause_delay_in_minutes",
                "createMode": "create_mode",
                "creationSourceDatabaseId": "creation_source_database_id",
                "elasticPoolId": "elastic_pool_id",
                "enclaveType": "enclave_type",
                "geoBackupEnabled": "geo_backup_enabled",
                "ledgerEnabled": "ledger_enabled",
                "licenseType": "license_type",
                "longTermRetentionPolicy": "long_term_retention_policy",
                "maintenanceConfigurationName": "maintenance_configuration_name",
                "maxSizeGb": "max_size_gb",
                "minCapacity": "min_capacity",
                "readReplicaCount": "read_replica_count",
                "readScale": "read_scale",
                "recoverDatabaseId": "recover_database_id",
                "restoreDroppedDatabaseId": "restore_dropped_database_id",
                "restorePointInTime": "restore_point_in_time",
                "sampleName": "sample_name",
                "serverId": "server_id",
                "shortTermRetentionPolicy": "short_term_retention_policy",
                "skuName": "sku_name",
                "storageAccountType": "storage_account_type",
                "threatDetectionPolicy": "threat_detection_policy",
                "transparentDataEncryptionEnabled": "transparent_data_encryption_enabled",
                "zoneRedundant": "zone_redundant"
            },
            "azure:mssql/databaseExtendedAuditingPolicy:DatabaseExtendedAuditingPolicy": {
                "databaseId": "database_id",
                "logMonitoringEnabled": "log_monitoring_enabled",
                "retentionInDays": "retention_in_days",
                "storageAccountAccessKey": "storage_account_access_key",
                "storageAccountAccessKeyIsSecondary": "storage_account_access_key_is_secondary",
                "storageEndpoint": "storage_endpoint"
            },
            "azure:mssql/databaseVulnerabilityAssessmentRuleBaseline:DatabaseVulnerabilityAssessmentRuleBaseline": {
                "baselineName": "baseline_name",
                "baselineResults": "baseline_result",
                "databaseName": "database_name",
                "ruleId": "rule_id",
                "serverVulnerabilityAssessmentId": "server_vulnerability_assessment_id"
            },
            "azure:mssql/elasticPool:ElasticPool": {
                "enclaveType": "enclave_type",
                "licenseType": "license_type",
                "maintenanceConfigurationName": "maintenance_configuration_name",
                "maxSizeBytes": "max_size_bytes",
                "maxSizeGb": "max_size_gb",
                "perDatabaseSettings": "per_database_settings",
                "resourceGroupName": "resource_group_name",
                "serverName": "server_name",
                "zoneRedundant": "zone_redundant"
            },
            "azure:mssql/failoverGroup:FailoverGroup": {
                "partnerServers": "partner_server",
                "readWriteEndpointFailoverPolicy": "read_write_endpoint_failover_policy",
                "readonlyEndpointFailoverPolicyEnabled": "readonly_endpoint_failover_policy_enabled",
                "serverId": "server_id"
            },
            "azure:mssql/firewallRule:FirewallRule": {
                "endIpAddress": "end_ip_address",
                "serverId": "server_id",
                "startIpAddress": "start_ip_address"
            },
            "azure:mssql/getDatabase:getDatabase": {
                "elasticPoolId": "elastic_pool_id",
                "enclaveType": "enclave_type",
                "licenseType": "license_type",
                "maxSizeGb": "max_size_gb",
                "readReplicaCount": "read_replica_count",
                "readScale": "read_scale",
                "serverId": "server_id",
                "skuName": "sku_name",
                "storageAccountType": "storage_account_type",
                "zoneRedundant": "zone_redundant"
            },
            "azure:mssql/getElasticPool:getElasticPool": {
                "enclaveType": "enclave_type",
                "licenseType": "license_type",
                "maxSizeBytes": "max_size_bytes",
                "maxSizeGb": "max_size_gb",
                "perDbMaxCapacity": "per_db_max_capacity",
                "perDbMinCapacity": "per_db_min_capacity",
                "resourceGroupName": "resource_group_name",
                "serverName": "server_name",
                "skus": "sku",
                "zoneRedundant": "zone_redundant"
            },
            "azure:mssql/getManagedInstance:getManagedInstance": {
                "administratorLogin": "administrator_login",
                "customerManagedKeyId": "customer_managed_key_id",
                "dnsZonePartnerId": "dns_zone_partner_id",
                "identities": "identity",
                "licenseType": "license_type",
                "minimumTlsVersion": "minimum_tls_version",
                "proxyOverride": "proxy_override",
                "publicDataEndpointEnabled": "public_data_endpoint_enabled",
                "resourceGroupName": "resource_group_name",
                "skuName": "sku_name",
                "storageAccountType": "storage_account_type",
                "storageSizeInGb": "storage_size_in_gb",
                "subnetId": "subnet_id",
                "timezoneId": "timezone_id"
            },
            "azure:mssql/getManagedInstanceIdentity:getManagedInstanceIdentity": {
                "identityIds": "identity_ids",
                "principalId": "principal_id",
                "tenantId": "tenant_id"
            },
            "azure:mssql/getServer:getServer": {
                "administratorLogin": "administrator_login",
                "fullyQualifiedDomainName": "fully_qualified_domain_name",
                "identities": "identity",
                "resourceGroupName": "resource_group_name",
                "restorableDroppedDatabaseIds": "restorable_dropped_database_ids"
            },
            "azure:mssql/getServerIdentity:getServerIdentity": {
                "identityIds": "identity_ids",
                "principalId": "principal_id",
                "tenantId": "tenant_id"
            },
            "azure:mssql/jobAgent:JobAgent": {
                "databaseId": "database_id"
            },
            "azure:mssql/jobCredential:JobCredential": {
                "jobAgentId": "job_agent_id"
            },
            "azure:mssql/managedDatabase:ManagedDatabase": {
                "longTermRetentionPolicy": "long_term_retention_policy",
                "managedInstanceId": "managed_instance_id",
                "shortTermRetentionDays": "short_term_retention_days"
            },
            "azure:mssql/managedInstance:ManagedInstance": {
                "administratorLogin": "administrator_login",
                "administratorLoginPassword": "administrator_login_password",
                "dnsZonePartnerId": "dns_zone_partner_id",
                "licenseType": "license_type",
                "maintenanceConfigurationName": "maintenance_configuration_name",
                "minimumTlsVersion": "minimum_tls_version",
                "proxyOverride": "proxy_override",
                "publicDataEndpointEnabled": "public_data_endpoint_enabled",
                "resourceGroupName": "resource_group_name",
                "skuName": "sku_name",
                "storageAccountType": "storage_account_type",
                "storageSizeInGb": "storage_size_in_gb",
                "subnetId": "subnet_id",
                "timezoneId": "timezone_id"
            },
            "azure:mssql/managedInstanceActiveDirectoryAdministrator:ManagedInstanceActiveDirectoryAdministrator": {
                "azureadAuthenticationOnly": "azuread_authentication_only",
                "loginUsername": "login_username",
                "managedInstanceId": "managed_instance_id",
                "objectId": "object_id",
                "tenantId": "tenant_id"
            },
            "azure:mssql/managedInstanceFailoverGroup:ManagedInstanceFailoverGroup": {
                "managedInstanceId": "managed_instance_id",
                "partnerManagedInstanceId": "partner_managed_instance_id",
                "partnerRegions": "partner_region",
                "readWriteEndpointFailoverPolicy": "read_write_endpoint_failover_policy",
                "readonlyEndpointFailoverPolicyEnabled": "readonly_endpoint_failover_policy_enabled"
            },
            "azure:mssql/managedInstanceSecurityAlertPolicy:ManagedInstanceSecurityAlertPolicy": {
                "disabledAlerts": "disabled_alerts",
                "emailAccountAdminsEnabled": "email_account_admins_enabled",
                "emailAddresses": "email_addresses",
                "managedInstanceName": "managed_instance_name",
                "resourceGroupName": "resource_group_name",
                "retentionDays": "retention_days",
                "storageAccountAccessKey": "storage_account_access_key",
                "storageEndpoint": "storage_endpoint"
            },
            "azure:mssql/managedInstanceTransparentDataEncryption:ManagedInstanceTransparentDataEncryption": {
                "autoRotationEnabled": "auto_rotation_enabled",
                "keyVaultKeyId": "key_vault_key_id",
                "managedInstanceId": "managed_instance_id"
            },
            "azure:mssql/managedInstanceVulnerabilityAssessment:ManagedInstanceVulnerabilityAssessment": {
                "managedInstanceId": "managed_instance_id",
                "recurringScans": "recurring_scans",
                "storageAccountAccessKey": "storage_account_access_key",
                "storageContainerPath": "storage_container_path",
                "storageContainerSasKey": "storage_container_sas_key"
            },
            "azure:mssql/outboundFirewallRule:OutboundFirewallRule": {
                "serverId": "server_id"
            },
            "azure:mssql/server:Server": {
                "administratorLogin": "administrator_login",
                "administratorLoginPassword": "administrator_login_password",
                "azureadAdministrator": "azuread_administrator",
                "connectionPolicy": "connection_policy",
                "fullyQualifiedDomainName": "fully_qualified_domain_name",
                "minimumTlsVersion": "minimum_tls_version",
                "outboundNetworkRestrictionEnabled": "outbound_network_restriction_enabled",
                "primaryUserAssignedIdentityId": "primary_user_assigned_identity_id",
                "publicNetworkAccessEnabled": "public_network_access_enabled",
                "resourceGroupName": "resource_group_name",
                "restorableDroppedDatabaseIds": "restorable_dropped_database_ids",
                "transparentDataEncryptionKeyVaultKeyId": "transparent_data_encryption_key_vault_key_id"
            },
            "azure:mssql/serverDnsAlias:ServerDnsAlias": {
                "dnsRecord": "dns_record",
                "mssqlServerId": "mssql_server_id"
            },
            "azure:mssql/serverExtendedAuditingPolicy:ServerExtendedAuditingPolicy": {
                "logMonitoringEnabled": "log_monitoring_enabled",
                "retentionInDays": "retention_in_days",
                "serverId": "server_id",
                "storageAccountAccessKey": "storage_account_access_key",
                "storageAccountAccessKeyIsSecondary": "storage_account_access_key_is_secondary",
                "storageAccountSubscriptionId": "storage_account_subscription_id",
                "storageEndpoint": "storage_endpoint"
            },
            "azure:mssql/serverMicrosoftSupportAuditingPolicy:ServerMicrosoftSupportAuditingPolicy": {
                "blobStorageEndpoint": "blob_storage_endpoint",
                "logMonitoringEnabled": "log_monitoring_enabled",
                "serverId": "server_id",
                "storageAccountAccessKey": "storage_account_access_key",
                "storageAccountSubscriptionId": "storage_account_subscription_id"
            },
            "azure:mssql/serverSecurityAlertPolicy:ServerSecurityAlertPolicy": {
                "disabledAlerts": "disabled_alerts",
                "emailAccountAdmins": "email_account_admins",
                "emailAddresses": "email_addresses",
                "resourceGroupName": "resource_group_name",
                "retentionDays": "retention_days",
                "serverName": "server_name",
                "storageAccountAccessKey": "storage_account_access_key",
                "storageEndpoint": "storage_endpoint"
            },
            "azure:mssql/serverTransparentDataEncryption:ServerTransparentDataEncryption": {
                "autoRotationEnabled": "auto_rotation_enabled",
                "keyVaultKeyId": "key_vault_key_id",
                "serverId": "server_id"
            },
            "azure:mssql/serverVulnerabilityAssessment:ServerVulnerabilityAssessment": {
                "recurringScans": "recurring_scans",
                "serverSecurityAlertPolicyId": "server_security_alert_policy_id",
                "storageAccountAccessKey": "storage_account_access_key",
                "storageContainerPath": "storage_container_path",
                "storageContainerSasKey": "storage_container_sas_key"
            },
            "azure:mssql/virtualMachine:VirtualMachine": {
                "autoBackup": "auto_backup",
                "autoPatching": "auto_patching",
                "keyVaultCredential": "key_vault_credential",
                "rServicesEnabled": "r_services_enabled",
                "sqlConnectivityPort": "sql_connectivity_port",
                "sqlConnectivityType": "sql_connectivity_type",
                "sqlConnectivityUpdatePassword": "sql_connectivity_update_password",
                "sqlConnectivityUpdateUsername": "sql_connectivity_update_username",
                "sqlInstance": "sql_instance",
                "sqlLicenseType": "sql_license_type",
                "sqlVirtualMachineGroupId": "sql_virtual_machine_group_id",
                "storageConfiguration": "storage_configuration",
                "virtualMachineId": "virtual_machine_id",
                "wsfcDomainCredential": "wsfc_domain_credential"
            },
            "azure:mssql/virtualMachineAvailabilityGroupListener:VirtualMachineAvailabilityGroupListener": {
                "availabilityGroupName": "availability_group_name",
                "loadBalancerConfiguration": "load_balancer_configuration",
                "multiSubnetIpConfigurations": "multi_subnet_ip_configuration",
                "replicas": "replica",
                "sqlVirtualMachineGroupId": "sql_virtual_machine_group_id"
            },
            "azure:mssql/virtualMachineGroup:VirtualMachineGroup": {
                "resourceGroupName": "resource_group_name",
                "sqlImageOffer": "sql_image_offer",
                "sqlImageSku": "sql_image_sku",
                "wsfcDomainProfile": "wsfc_domain_profile"
            },
            "azure:mssql/virtualNetworkRule:VirtualNetworkRule": {
                "ignoreMissingVnetServiceEndpoint": "ignore_missing_vnet_service_endpoint",
                "serverId": "server_id",
                "subnetId": "subnet_id"
            },
            "azure:mysql/FlexibleServerCustomerManagedKey:FlexibleServerCustomerManagedKey": {
                "geoBackupKeyVaultKeyId": "geo_backup_key_vault_key_id",
                "geoBackupUserAssignedIdentityId": "geo_backup_user_assigned_identity_id",
                "keyVaultKeyId": "key_vault_key_id",
                "primaryUserAssignedIdentityId": "primary_user_assigned_identity_id"
            },
            "azure:mysql/FlexibleServerHighAvailability:FlexibleServerHighAvailability": {
                "standbyAvailabilityZone": "standby_availability_zone"
            },
            "azure:mysql/FlexibleServerIdentity:FlexibleServerIdentity": {
                "identityIds": "identity_ids"
            },
            "azure:mysql/FlexibleServerMaintenanceWindow:FlexibleServerMaintenanceWindow": {
                "dayOfWeek": "day_of_week",
                "startHour": "start_hour",
                "startMinute": "start_minute"
            },
            "azure:mysql/FlexibleServerStorage:FlexibleServerStorage": {
                "autoGrowEnabled": "auto_grow_enabled",
                "ioScalingEnabled": "io_scaling_enabled",
                "sizeGb": "size_gb"
            },
            "azure:mysql/ServerIdentity:ServerIdentity": {
                "principalId": "principal_id",
                "tenantId": "tenant_id"
            },
            "azure:mysql/ServerThreatDetectionPolicy:ServerThreatDetectionPolicy": {
                "disabledAlerts": "disabled_alerts",
                "emailAccountAdmins": "email_account_admins",
                "emailAddresses": "email_addresses",
                "retentionDays": "retention_days",
                "storageAccountAccessKey": "storage_account_access_key",
                "storageEndpoint": "storage_endpoint"
            },
            "azure:mysql/activeDirectoryAdministrator:ActiveDirectoryAdministrator": {
                "objectId": "object_id",
                "resourceGroupName": "resource_group_name",
                "serverName": "server_name",
                "tenantId": "tenant_id"
            },
            "azure:mysql/configuration:Configuration": {
                "resourceGroupName": "resource_group_name",
                "serverName": "server_name"
            },
            "azure:mysql/database:Database": {
                "resourceGroupName": "resource_group_name",
                "serverName": "server_name"
            },
            "azure:mysql/firewallRule:FirewallRule": {
                "endIpAddress": "end_ip_address",
                "resourceGroupName": "resource_group_name",
                "serverName": "server_name",
                "startIpAddress": "start_ip_address"
            },
            "azure:mysql/flexibleDatabase:FlexibleDatabase": {
                "resourceGroupName": "resource_group_name",
                "serverName": "server_name"
            },
            "azure:mysql/flexibleServer:FlexibleServer": {
                "administratorLogin": "administrator_login",
                "administratorPassword": "administrator_password",
                "backupRetentionDays": "backup_retention_days",
                "createMode": "create_mode",
                "customerManagedKey": "customer_managed_key",
                "delegatedSubnetId": "delegated_subnet_id",
                "geoRedundantBackupEnabled": "geo_redundant_backup_enabled",
                "highAvailability": "high_availability",
                "maintenanceWindow": "maintenance_window",
                "pointInTimeRestoreTimeInUtc": "point_in_time_restore_time_in_utc",
                "privateDnsZoneId": "private_dns_zone_id",
                "publicNetworkAccessEnabled": "public_network_access_enabled",
                "replicaCapacity": "replica_capacity",
                "replicationRole": "replication_role",
                "resourceGroupName": "resource_group_name",
                "skuName": "sku_name",
                "sourceServerId": "source_server_id"
            },
            "azure:mysql/flexibleServerActiveDirectoryAdministrator:FlexibleServerActiveDirectoryAdministrator": {
                "identityId": "identity_id",
                "objectId": "object_id",
                "serverId": "server_id",
                "tenantId": "tenant_id"
            },
            "azure:mysql/flexibleServerActiveDirectoryAdministratory:FlexibleServerActiveDirectoryAdministratory": {
                "identityId": "identity_id",
                "objectId": "object_id",
                "serverId": "server_id",
                "tenantId": "tenant_id"
            },
            "azure:mysql/flexibleServerConfiguration:FlexibleServerConfiguration": {
                "resourceGroupName": "resource_group_name",
                "serverName": "server_name"
            },
            "azure:mysql/flexibleServerFirewallRule:FlexibleServerFirewallRule": {
                "endIpAddress": "end_ip_address",
                "resourceGroupName": "resource_group_name",
                "serverName": "server_name",
                "startIpAddress": "start_ip_address"
            },
            "azure:mysql/getFlexibleServer:getFlexibleServer": {
                "administratorLogin": "administrator_login",
                "backupRetentionDays": "backup_retention_days",
                "delegatedSubnetId": "delegated_subnet_id",
                "geoRedundantBackupEnabled": "geo_redundant_backup_enabled",
                "highAvailabilities": "high_availability",
                "maintenanceWindows": "maintenance_window",
                "privateDnsZoneId": "private_dns_zone_id",
                "publicNetworkAccessEnabled": "public_network_access_enabled",
                "replicaCapacity": "replica_capacity",
                "replicationRole": "replication_role",
                "resourceGroupName": "resource_group_name",
                "restorePointInTime": "restore_point_in_time",
                "skuName": "sku_name",
                "storages": "storage"
            },
            "azure:mysql/getFlexibleServerHighAvailability:getFlexibleServerHighAvailability": {
                "standbyAvailabilityZone": "standby_availability_zone"
            },
            "azure:mysql/getFlexibleServerMaintenanceWindow:getFlexibleServerMaintenanceWindow": {
                "dayOfWeek": "day_of_week",
                "startHour": "start_hour",
                "startMinute": "start_minute"
            },
            "azure:mysql/getFlexibleServerStorage:getFlexibleServerStorage": {
                "autoGrowEnabled": "auto_grow_enabled",
                "ioScalingEnabled": "io_scaling_enabled",
                "sizeGb": "size_gb"
            },
            "azure:mysql/getServer:getServer": {
                "administratorLogin": "administrator_login",
                "autoGrowEnabled": "auto_grow_enabled",
                "backupRetentionDays": "backup_retention_days",
                "geoRedundantBackupEnabled": "geo_redundant_backup_enabled",
                "identities": "identity",
                "infrastructureEncryptionEnabled": "infrastructure_encryption_enabled",
                "publicNetworkAccessEnabled": "public_network_access_enabled",
                "resourceGroupName": "resource_group_name",
                "restorePointInTime": "restore_point_in_time",
                "skuName": "sku_name",
                "sslEnforcementEnabled": "ssl_enforcement_enabled",
                "sslMinimalTlsVersionEnforced": "ssl_minimal_tls_version_enforced",
                "storageMb": "storage_mb",
                "threatDetectionPolicies": "threat_detection_policy"
            },
            "azure:mysql/getServerIdentity:getServerIdentity": {
                "principalId": "principal_id",
                "tenantId": "tenant_id"
            },
            "azure:mysql/getServerThreatDetectionPolicy:getServerThreatDetectionPolicy": {
                "disabledAlerts": "disabled_alerts",
                "emailAccountAdmins": "email_account_admins",
                "emailAddresses": "email_addresses",
                "retentionDays": "retention_days",
                "storageAccountAccessKey": "storage_account_access_key",
                "storageEndpoint": "storage_endpoint"
            },
            "azure:mysql/server:Server": {
                "administratorLogin": "administrator_login",
                "administratorLoginPassword": "administrator_login_password",
                "autoGrowEnabled": "auto_grow_enabled",
                "backupRetentionDays": "backup_retention_days",
                "createMode": "create_mode",
                "creationSourceServerId": "creation_source_server_id",
                "geoRedundantBackupEnabled": "geo_redundant_backup_enabled",
                "infrastructureEncryptionEnabled": "infrastructure_encryption_enabled",
                "publicNetworkAccessEnabled": "public_network_access_enabled",
                "resourceGroupName": "resource_group_name",
                "restorePointInTime": "restore_point_in_time",
                "skuName": "sku_name",
                "sslEnforcementEnabled": "ssl_enforcement_enabled",
                "sslMinimalTlsVersionEnforced": "ssl_minimal_tls_version_enforced",
                "storageMb": "storage_mb",
                "threatDetectionPolicy": "threat_detection_policy"
            },
            "azure:mysql/serverKey:ServerKey": {
                "keyVaultKeyId": "key_vault_key_id",
                "serverId": "server_id"
            },
            "azure:mysql/virtualNetworkRule:VirtualNetworkRule": {
                "resourceGroupName": "resource_group_name",
                "serverName": "server_name",
                "subnetId": "subnet_id"
            },
            "azure:netapp/AccountActiveDirectory:AccountActiveDirectory": {
                "dnsServers": "dns_servers",
                "organizationalUnit": "organizational_unit",
                "smbServerName": "smb_server_name"
            },
            "azure:netapp/SnapshotPolicyDailySchedule:SnapshotPolicyDailySchedule": {
                "snapshotsToKeep": "snapshots_to_keep"
            },
            "azure:netapp/SnapshotPolicyHourlySchedule:SnapshotPolicyHourlySchedule": {
                "snapshotsToKeep": "snapshots_to_keep"
            },
            "azure:netapp/SnapshotPolicyMonthlySchedule:SnapshotPolicyMonthlySchedule": {
                "daysOfMonths": "days_of_month",
                "snapshotsToKeep": "snapshots_to_keep"
            },
            "azure:netapp/SnapshotPolicyWeeklySchedule:SnapshotPolicyWeeklySchedule": {
                "daysOfWeeks": "days_of_week",
                "snapshotsToKeep": "snapshots_to_keep"
            },
            "azure:netapp/VolumeDataProtectionReplication:VolumeDataProtectionReplication": {
                "endpointType": "endpoint_type",
                "remoteVolumeLocation": "remote_volume_location",
                "remoteVolumeResourceId": "remote_volume_resource_id",
                "replicationFrequency": "replication_frequency"
            },
            "azure:netapp/VolumeDataProtectionSnapshotPolicy:VolumeDataProtectionSnapshotPolicy": {
                "snapshotPolicyId": "snapshot_policy_id"
            },
            "azure:netapp/VolumeExportPolicyRule:VolumeExportPolicyRule": {
                "allowedClients": "allowed_clients",
                "protocolsEnabled": "protocols_enabled",
                "rootAccessEnabled": "root_access_enabled",
                "ruleIndex": "rule_index",
                "unixReadOnly": "unix_read_only",
                "unixReadWrite": "unix_read_write"
            },
            "azure:netapp/VolumeGroupSapHanaVolume:VolumeGroupSapHanaVolume": {
                "capacityPoolId": "capacity_pool_id",
                "dataProtectionReplication": "data_protection_replication",
                "dataProtectionSnapshotPolicy": "data_protection_snapshot_policy",
                "exportPolicyRules": "export_policy_rule",
                "mountIpAddresses": "mount_ip_addresses",
                "proximityPlacementGroupId": "proximity_placement_group_id",
                "securityStyle": "security_style",
                "serviceLevel": "service_level",
                "snapshotDirectoryVisible": "snapshot_directory_visible",
                "storageQuotaInGb": "storage_quota_in_gb",
                "subnetId": "subnet_id",
                "throughputInMibps": "throughput_in_mibps",
                "volumePath": "volume_path",
                "volumeSpecName": "volume_spec_name"
            },
            "azure:netapp/VolumeGroupSapHanaVolumeDataProtectionReplication:VolumeGroupSapHanaVolumeDataProtectionReplication": {
                "endpointType": "endpoint_type",
                "remoteVolumeLocation": "remote_volume_location",
                "remoteVolumeResourceId": "remote_volume_resource_id",
                "replicationFrequency": "replication_frequency"
            },
            "azure:netapp/VolumeGroupSapHanaVolumeDataProtectionSnapshotPolicy:VolumeGroupSapHanaVolumeDataProtectionSnapshotPolicy": {
                "snapshotPolicyId": "snapshot_policy_id"
            },
            "azure:netapp/VolumeGroupSapHanaVolumeExportPolicyRule:VolumeGroupSapHanaVolumeExportPolicyRule": {
                "allowedClients": "allowed_clients",
                "nfsv3Enabled": "nfsv3_enabled",
                "nfsv41Enabled": "nfsv41_enabled",
                "rootAccessEnabled": "root_access_enabled",
                "ruleIndex": "rule_index",
                "unixReadOnly": "unix_read_only",
                "unixReadWrite": "unix_read_write"
            },
            "azure:netapp/account:Account": {
                "activeDirectory": "active_directory",
                "resourceGroupName": "resource_group_name"
            },
            "azure:netapp/getAccount:getAccount": {
                "resourceGroupName": "resource_group_name"
            },
            "azure:netapp/getPool:getPool": {
                "accountName": "account_name",
                "resourceGroupName": "resource_group_name",
                "serviceLevel": "service_level",
                "sizeInTb": "size_in_tb"
            },
            "azure:netapp/getSnapshot:getSnapshot": {
                "accountName": "account_name",
                "poolName": "pool_name",
                "resourceGroupName": "resource_group_name",
                "volumeName": "volume_name"
            },
            "azure:netapp/getSnapshotPolicy:getSnapshotPolicy": {
                "accountName": "account_name",
                "dailySchedules": "daily_schedule",
                "hourlySchedules": "hourly_schedule",
                "monthlySchedules": "monthly_schedule",
                "resourceGroupName": "resource_group_name",
                "weeklySchedules": "weekly_schedule"
            },
            "azure:netapp/getSnapshotPolicyDailySchedule:getSnapshotPolicyDailySchedule": {
                "snapshotsToKeep": "snapshots_to_keep"
            },
            "azure:netapp/getSnapshotPolicyHourlySchedule:getSnapshotPolicyHourlySchedule": {
                "snapshotsToKeep": "snapshots_to_keep"
            },
            "azure:netapp/getSnapshotPolicyMonthlySchedule:getSnapshotPolicyMonthlySchedule": {
                "daysOfMonths": "days_of_month",
                "snapshotsToKeep": "snapshots_to_keep"
            },
            "azure:netapp/getSnapshotPolicyWeeklySchedule:getSnapshotPolicyWeeklySchedule": {
                "daysOfWeeks": "days_of_week",
                "snapshotsToKeep": "snapshots_to_keep"
            },
            "azure:netapp/getVolume:getVolume": {
                "accountName": "account_name",
                "dataProtectionReplications": "data_protection_replication",
                "mountIpAddresses": "mount_ip_addresses",
                "networkFeatures": "network_features",
                "poolName": "pool_name",
                "resourceGroupName": "resource_group_name",
                "securityStyle": "security_style",
                "serviceLevel": "service_level",
                "storageQuotaInGb": "storage_quota_in_gb",
                "subnetId": "subnet_id",
                "volumePath": "volume_path"
            },
            "azure:netapp/getVolumeDataProtectionReplication:getVolumeDataProtectionReplication": {
                "endpointType": "endpoint_type",
                "remoteVolumeLocation": "remote_volume_location",
                "remoteVolumeResourceId": "remote_volume_resource_id",
                "replicationFrequency": "replication_frequency"
            },
            "azure:netapp/getVolumeGroupSapHana:getVolumeGroupSapHana": {
                "accountName": "account_name",
                "applicationIdentifier": "application_identifier",
                "groupDescription": "group_description",
                "resourceGroupName": "resource_group_name",
                "volumes": "volume"
            },
            "azure:netapp/getVolumeGroupSapHanaVolume:getVolumeGroupSapHanaVolume": {
                "capacityPoolId": "capacity_pool_id",
                "dataProtectionReplications": "data_protection_replication",
                "dataProtectionSnapshotPolicies": "data_protection_snapshot_policy",
                "exportPolicyRules": "export_policy_rule",
                "mountIpAddresses": "mount_ip_addresses",
                "proximityPlacementGroupId": "proximity_placement_group_id",
                "securityStyle": "security_style",
                "serviceLevel": "service_level",
                "snapshotDirectoryVisible": "snapshot_directory_visible",
                "storageQuotaInGb": "storage_quota_in_gb",
                "subnetId": "subnet_id",
                "throughputInMibps": "throughput_in_mibps",
                "volumePath": "volume_path",
                "volumeSpecName": "volume_spec_name"
            },
            "azure:netapp/getVolumeGroupSapHanaVolumeDataProtectionReplication:getVolumeGroupSapHanaVolumeDataProtectionReplication": {
                "endpointType": "endpoint_type",
                "remoteVolumeLocation": "remote_volume_location",
                "remoteVolumeResourceId": "remote_volume_resource_id",
                "replicationFrequency": "replication_frequency"
            },
            "azure:netapp/getVolumeGroupSapHanaVolumeDataProtectionSnapshotPolicy:getVolumeGroupSapHanaVolumeDataProtectionSnapshotPolicy": {
                "snapshotPolicyId": "snapshot_policy_id"
            },
            "azure:netapp/getVolumeGroupSapHanaVolumeExportPolicyRule:getVolumeGroupSapHanaVolumeExportPolicyRule": {
                "allowedClients": "allowed_clients",
                "nfsv3Enabled": "nfsv3_enabled",
                "nfsv41Enabled": "nfsv41_enabled",
                "rootAccessEnabled": "root_access_enabled",
                "ruleIndex": "rule_index",
                "unixReadOnly": "unix_read_only",
                "unixReadWrite": "unix_read_write"
            },
            "azure:netapp/getVolumeQuotaRule:getVolumeQuotaRule": {
                "quotaSizeInKib": "quota_size_in_kib",
                "quotaTarget": "quota_target",
                "quotaType": "quota_type",
                "volumeId": "volume_id"
            },
            "azure:netapp/pool:Pool": {
                "accountName": "account_name",
                "qosType": "qos_type",
                "resourceGroupName": "resource_group_name",
                "serviceLevel": "service_level",
                "sizeInTb": "size_in_tb"
            },
            "azure:netapp/snapshot:Snapshot": {
                "accountName": "account_name",
                "poolName": "pool_name",
                "resourceGroupName": "resource_group_name",
                "volumeName": "volume_name"
            },
            "azure:netapp/snapshotPolicy:SnapshotPolicy": {
                "accountName": "account_name",
                "dailySchedule": "daily_schedule",
                "hourlySchedule": "hourly_schedule",
                "monthlySchedule": "monthly_schedule",
                "resourceGroupName": "resource_group_name",
                "weeklySchedule": "weekly_schedule"
            },
            "azure:netapp/volume:Volume": {
                "accountName": "account_name",
                "azureVmwareDataStoreEnabled": "azure_vmware_data_store_enabled",
                "createFromSnapshotResourceId": "create_from_snapshot_resource_id",
                "dataProtectionReplication": "data_protection_replication",
                "dataProtectionSnapshotPolicy": "data_protection_snapshot_policy",
                "exportPolicyRules": "export_policy_rule",
                "mountIpAddresses": "mount_ip_addresses",
                "networkFeatures": "network_features",
                "poolName": "pool_name",
                "resourceGroupName": "resource_group_name",
                "securityStyle": "security_style",
                "serviceLevel": "service_level",
                "snapshotDirectoryVisible": "snapshot_directory_visible",
                "storageQuotaInGb": "storage_quota_in_gb",
                "subnetId": "subnet_id",
                "throughputInMibps": "throughput_in_mibps",
                "volumePath": "volume_path"
            },
            "azure:netapp/volumeGroupSapHana:VolumeGroupSapHana": {
                "accountName": "account_name",
                "applicationIdentifier": "application_identifier",
                "groupDescription": "group_description",
                "resourceGroupName": "resource_group_name",
                "volumes": "volume"
            },
            "azure:netapp/volumeQuotaRule:VolumeQuotaRule": {
                "quotaSizeInKib": "quota_size_in_kib",
                "quotaTarget": "quota_target",
                "quotaType": "quota_type",
                "volumeId": "volume_id"
            },
            "azure:network/ApplicationGatewayAutoscaleConfiguration:ApplicationGatewayAutoscaleConfiguration": {
                "maxCapacity": "max_capacity",
                "minCapacity": "min_capacity"
            },
            "azure:network/ApplicationGatewayBackendAddressPool:ApplicationGatewayBackendAddressPool": {
                "ipAddresses": "ip_addresses"
            },
            "azure:network/ApplicationGatewayBackendHttpSetting:ApplicationGatewayBackendHttpSetting": {
                "affinityCookieName": "affinity_cookie_name",
                "authenticationCertificates": "authentication_certificate",
                "connectionDraining": "connection_draining",
                "cookieBasedAffinity": "cookie_based_affinity",
                "hostName": "host_name",
                "pickHostNameFromBackendAddress": "pick_host_name_from_backend_address",
                "probeId": "probe_id",
                "probeName": "probe_name",
                "requestTimeout": "request_timeout",
                "trustedRootCertificateNames": "trusted_root_certificate_names"
            },
            "azure:network/ApplicationGatewayBackendHttpSettingConnectionDraining:ApplicationGatewayBackendHttpSettingConnectionDraining": {
                "drainTimeoutSec": "drain_timeout_sec"
            },
            "azure:network/ApplicationGatewayCustomErrorConfiguration:ApplicationGatewayCustomErrorConfiguration": {
                "customErrorPageUrl": "custom_error_page_url",
                "statusCode": "status_code"
            },
            "azure:network/ApplicationGatewayFrontendIpConfiguration:ApplicationGatewayFrontendIpConfiguration": {
                "privateIpAddress": "private_ip_address",
                "privateIpAddressAllocation": "private_ip_address_allocation",
                "privateLinkConfigurationId": "private_link_configuration_id",
                "privateLinkConfigurationName": "private_link_configuration_name",
                "publicIpAddressId": "public_ip_address_id",
                "subnetId": "subnet_id"
            },
            "azure:network/ApplicationGatewayGatewayIpConfiguration:ApplicationGatewayGatewayIpConfiguration": {
                "subnetId": "subnet_id"
            },
            "azure:network/ApplicationGatewayGlobal:ApplicationGatewayGlobal": {
                "requestBufferingEnabled": "request_buffering_enabled",
                "responseBufferingEnabled": "response_buffering_enabled"
            },
            "azure:network/ApplicationGatewayHttpListener:ApplicationGatewayHttpListener": {
                "customErrorConfigurations": "custom_error_configuration",
                "firewallPolicyId": "firewall_policy_id",
                "frontendIpConfigurationId": "frontend_ip_configuration_id",
                "frontendIpConfigurationName": "frontend_ip_configuration_name",
                "frontendPortId": "frontend_port_id",
                "frontendPortName": "frontend_port_name",
                "hostName": "host_name",
                "hostNames": "host_names",
                "requireSni": "require_sni",
                "sslCertificateId": "ssl_certificate_id",
                "sslCertificateName": "ssl_certificate_name",
                "sslProfileId": "ssl_profile_id",
                "sslProfileName": "ssl_profile_name"
            },
            "azure:network/ApplicationGatewayHttpListenerCustomErrorConfiguration:ApplicationGatewayHttpListenerCustomErrorConfiguration": {
                "customErrorPageUrl": "custom_error_page_url",
                "statusCode": "status_code"
            },
            "azure:network/ApplicationGatewayIdentity:ApplicationGatewayIdentity": {
                "identityIds": "identity_ids"
            },
            "azure:network/ApplicationGatewayPrivateLinkConfiguration:ApplicationGatewayPrivateLinkConfiguration": {
                "ipConfigurations": "ip_configuration"
            },
            "azure:network/ApplicationGatewayPrivateLinkConfigurationIpConfiguration:ApplicationGatewayPrivateLinkConfigurationIpConfiguration": {
                "privateIpAddress": "private_ip_address",
                "privateIpAddressAllocation": "private_ip_address_allocation",
                "subnetId": "subnet_id"
            },
            "azure:network/ApplicationGatewayProbe:ApplicationGatewayProbe": {
                "minimumServers": "minimum_servers",
                "pickHostNameFromBackendHttpSettings": "pick_host_name_from_backend_http_settings",
                "unhealthyThreshold": "unhealthy_threshold"
            },
            "azure:network/ApplicationGatewayProbeMatch:ApplicationGatewayProbeMatch": {
                "statusCodes": "status_code"
            },
            "azure:network/ApplicationGatewayRedirectConfiguration:ApplicationGatewayRedirectConfiguration": {
                "includePath": "include_path",
                "includeQueryString": "include_query_string",
                "redirectType": "redirect_type",
                "targetListenerId": "target_listener_id",
                "targetListenerName": "target_listener_name",
                "targetUrl": "target_url"
            },
            "azure:network/ApplicationGatewayRequestRoutingRule:ApplicationGatewayRequestRoutingRule": {
                "backendAddressPoolId": "backend_address_pool_id",
                "backendAddressPoolName": "backend_address_pool_name",
                "backendHttpSettingsId": "backend_http_settings_id",
                "backendHttpSettingsName": "backend_http_settings_name",
                "httpListenerId": "http_listener_id",
                "httpListenerName": "http_listener_name",
                "redirectConfigurationId": "redirect_configuration_id",
                "redirectConfigurationName": "redirect_configuration_name",
                "rewriteRuleSetId": "rewrite_rule_set_id",
                "rewriteRuleSetName": "rewrite_rule_set_name",
                "ruleType": "rule_type",
                "urlPathMapId": "url_path_map_id",
                "urlPathMapName": "url_path_map_name"
            },
            "azure:network/ApplicationGatewayRewriteRuleSet:ApplicationGatewayRewriteRuleSet": {
                "rewriteRules": "rewrite_rule"
            },
            "azure:network/ApplicationGatewayRewriteRuleSetRewriteRule:ApplicationGatewayRewriteRuleSetRewriteRule": {
                "conditions": "condition",
                "requestHeaderConfigurations": "request_header_configuration",
                "responseHeaderConfigurations": "response_header_configuration",
                "ruleSequence": "rule_sequence"
            },
            "azure:network/ApplicationGatewayRewriteRuleSetRewriteRuleCondition:ApplicationGatewayRewriteRuleSetRewriteRuleCondition": {
                "ignoreCase": "ignore_case"
            },
            "azure:network/ApplicationGatewayRewriteRuleSetRewriteRuleRequestHeaderConfiguration:ApplicationGatewayRewriteRuleSetRewriteRuleRequestHeaderConfiguration": {
                "headerName": "header_name",
                "headerValue": "header_value"
            },
            "azure:network/ApplicationGatewayRewriteRuleSetRewriteRuleResponseHeaderConfiguration:ApplicationGatewayRewriteRuleSetRewriteRuleResponseHeaderConfiguration": {
                "headerName": "header_name",
                "headerValue": "header_value"
            },
            "azure:network/ApplicationGatewayRewriteRuleSetRewriteRuleUrl:ApplicationGatewayRewriteRuleSetRewriteRuleUrl": {
                "queryString": "query_string"
            },
            "azure:network/ApplicationGatewaySslCertificate:ApplicationGatewaySslCertificate": {
                "keyVaultSecretId": "key_vault_secret_id",
                "publicCertData": "public_cert_data"
            },
            "azure:network/ApplicationGatewaySslPolicy:ApplicationGatewaySslPolicy": {
                "cipherSuites": "cipher_suites",
                "disabledProtocols": "disabled_protocols",
                "minProtocolVersion": "min_protocol_version",
                "policyName": "policy_name",
                "policyType": "policy_type"
            },
            "azure:network/ApplicationGatewaySslProfile:ApplicationGatewaySslProfile": {
                "sslPolicy": "ssl_policy",
                "trustedClientCertificateNames": "trusted_client_certificate_names",
                "verifyClientCertIssuerDn": "verify_client_cert_issuer_dn",
                "verifyClientCertificateRevocation": "verify_client_certificate_revocation"
            },
            "azure:network/ApplicationGatewaySslProfileSslPolicy:ApplicationGatewaySslProfileSslPolicy": {
                "cipherSuites": "cipher_suites",
                "disabledProtocols": "disabled_protocols",
                "minProtocolVersion": "min_protocol_version",
                "policyName": "policy_name",
                "policyType": "policy_type"
            },
            "azure:network/ApplicationGatewayTrustedRootCertificate:ApplicationGatewayTrustedRootCertificate": {
                "keyVaultSecretId": "key_vault_secret_id"
            },
            "azure:network/ApplicationGatewayUrlPathMap:ApplicationGatewayUrlPathMap": {
                "defaultBackendAddressPoolId": "default_backend_address_pool_id",
                "defaultBackendAddressPoolName": "default_backend_address_pool_name",
                "defaultBackendHttpSettingsId": "default_backend_http_settings_id",
                "defaultBackendHttpSettingsName": "default_backend_http_settings_name",
                "defaultRedirectConfigurationId": "default_redirect_configuration_id",
                "defaultRedirectConfigurationName": "default_redirect_configuration_name",
                "defaultRewriteRuleSetId": "default_rewrite_rule_set_id",
                "defaultRewriteRuleSetName": "default_rewrite_rule_set_name",
                "pathRules": "path_rule"
            },
            "azure:network/ApplicationGatewayUrlPathMapPathRule:ApplicationGatewayUrlPathMapPathRule": {
                "backendAddressPoolId": "backend_address_pool_id",
                "backendAddressPoolName": "backend_address_pool_name",
                "backendHttpSettingsId": "backend_http_settings_id",
                "backendHttpSettingsName": "backend_http_settings_name",
                "firewallPolicyId": "firewall_policy_id",
                "redirectConfigurationId": "redirect_configuration_id",
                "redirectConfigurationName": "redirect_configuration_name",
                "rewriteRuleSetId": "rewrite_rule_set_id",
                "rewriteRuleSetName": "rewrite_rule_set_name"
            },
            "azure:network/ApplicationGatewayWafConfiguration:ApplicationGatewayWafConfiguration": {
                "disabledRuleGroups": "disabled_rule_group",
                "exclusions": "exclusion",
                "fileUploadLimitMb": "file_upload_limit_mb",
                "firewallMode": "firewall_mode",
                "maxRequestBodySizeKb": "max_request_body_size_kb",
                "requestBodyCheck": "request_body_check",
                "ruleSetType": "rule_set_type",
                "ruleSetVersion": "rule_set_version"
            },
            "azure:network/ApplicationGatewayWafConfigurationDisabledRuleGroup:ApplicationGatewayWafConfigurationDisabledRuleGroup": {
                "ruleGroupName": "rule_group_name"
            },
            "azure:network/ApplicationGatewayWafConfigurationExclusion:ApplicationGatewayWafConfigurationExclusion": {
                "matchVariable": "match_variable",
                "selectorMatchOperator": "selector_match_operator"
            },
            "azure:network/ExpressRouteCircuitPeeringIpv6:ExpressRouteCircuitPeeringIpv6": {
                "microsoftPeering": "microsoft_peering",
                "primaryPeerAddressPrefix": "primary_peer_address_prefix",
                "routeFilterId": "route_filter_id",
                "secondaryPeerAddressPrefix": "secondary_peer_address_prefix"
            },
            "azure:network/ExpressRouteCircuitPeeringIpv6MicrosoftPeering:ExpressRouteCircuitPeeringIpv6MicrosoftPeering": {
                "advertisedCommunities": "advertised_communities",
                "advertisedPublicPrefixes": "advertised_public_prefixes",
                "customerAsn": "customer_asn",
                "routingRegistryName": "routing_registry_name"
            },
            "azure:network/ExpressRouteCircuitPeeringMicrosoftPeeringConfig:ExpressRouteCircuitPeeringMicrosoftPeeringConfig": {
                "advertisedCommunities": "advertised_communities",
                "advertisedPublicPrefixes": "advertised_public_prefixes",
                "customerAsn": "customer_asn",
                "routingRegistryName": "routing_registry_name"
            },
            "azure:network/ExpressRouteConnectionRouting:ExpressRouteConnectionRouting": {
                "associatedRouteTableId": "associated_route_table_id",
                "inboundRouteMapId": "inbound_route_map_id",
                "outboundRouteMapId": "outbound_route_map_id",
                "propagatedRouteTable": "propagated_route_table"
            },
            "azure:network/ExpressRouteConnectionRoutingPropagatedRouteTable:ExpressRouteConnectionRoutingPropagatedRouteTable": {
                "routeTableIds": "route_table_ids"
            },
            "azure:network/ExpressRoutePortIdentity:ExpressRoutePortIdentity": {
                "identityIds": "identity_ids"
            },
            "azure:network/ExpressRoutePortLink1:ExpressRoutePortLink1": {
                "adminEnabled": "admin_enabled",
                "connectorType": "connector_type",
                "interfaceName": "interface_name",
                "macsecCakKeyvaultSecretId": "macsec_cak_keyvault_secret_id",
                "macsecCipher": "macsec_cipher",
                "macsecCknKeyvaultSecretId": "macsec_ckn_keyvault_secret_id",
                "macsecSciEnabled": "macsec_sci_enabled",
                "patchPanelId": "patch_panel_id",
                "rackId": "rack_id",
                "routerName": "router_name"
            },
            "azure:network/ExpressRoutePortLink2:ExpressRoutePortLink2": {
                "adminEnabled": "admin_enabled",
                "connectorType": "connector_type",
                "interfaceName": "interface_name",
                "macsecCakKeyvaultSecretId": "macsec_cak_keyvault_secret_id",
                "macsecCipher": "macsec_cipher",
                "macsecCknKeyvaultSecretId": "macsec_ckn_keyvault_secret_id",
                "macsecSciEnabled": "macsec_sci_enabled",
                "patchPanelId": "patch_panel_id",
                "rackId": "rack_id",
                "routerName": "router_name"
            },
            "azure:network/FirewallApplicationRuleCollectionRule:FirewallApplicationRuleCollectionRule": {
                "fqdnTags": "fqdn_tags",
                "protocols": "protocol",
                "sourceAddresses": "source_addresses",
                "sourceIpGroups": "source_ip_groups",
                "targetFqdns": "target_fqdns"
            },
            "azure:network/FirewallIpConfiguration:FirewallIpConfiguration": {
                "privateIpAddress": "private_ip_address",
                "publicIpAddressId": "public_ip_address_id",
                "subnetId": "subnet_id"
            },
            "azure:network/FirewallManagementIpConfiguration:FirewallManagementIpConfiguration": {
                "privateIpAddress": "private_ip_address",
                "publicIpAddressId": "public_ip_address_id",
                "subnetId": "subnet_id"
            },
            "azure:network/FirewallNatRuleCollectionRule:FirewallNatRuleCollectionRule": {
                "destinationAddresses": "destination_addresses",
                "destinationPorts": "destination_ports",
                "sourceAddresses": "source_addresses",
                "sourceIpGroups": "source_ip_groups",
                "translatedAddress": "translated_address",
                "translatedPort": "translated_port"
            },
            "azure:network/FirewallNetworkRuleCollectionRule:FirewallNetworkRuleCollectionRule": {
                "destinationAddresses": "destination_addresses",
                "destinationFqdns": "destination_fqdns",
                "destinationIpGroups": "destination_ip_groups",
                "destinationPorts": "destination_ports",
                "sourceAddresses": "source_addresses",
                "sourceIpGroups": "source_ip_groups"
            },
            "azure:network/FirewallPolicyDns:FirewallPolicyDns": {
                "proxyEnabled": "proxy_enabled"
            },
            "azure:network/FirewallPolicyExplicitProxy:FirewallPolicyExplicitProxy": {
                "enablePacFile": "enable_pac_file",
                "httpPort": "http_port",
                "httpsPort": "https_port",
                "pacFile": "pac_file",
                "pacFilePort": "pac_file_port"
            },
            "azure:network/FirewallPolicyIdentity:FirewallPolicyIdentity": {
                "identityIds": "identity_ids",
                "principalId": "principal_id",
                "tenantId": "tenant_id"
            },
            "azure:network/FirewallPolicyInsights:FirewallPolicyInsights": {
                "defaultLogAnalyticsWorkspaceId": "default_log_analytics_workspace_id",
                "logAnalyticsWorkspaces": "log_analytics_workspace",
                "retentionInDays": "retention_in_days"
            },
            "azure:network/FirewallPolicyInsightsLogAnalyticsWorkspace:FirewallPolicyInsightsLogAnalyticsWorkspace": {
                "firewallLocation": "firewall_location"
            },
            "azure:network/FirewallPolicyIntrusionDetection:FirewallPolicyIntrusionDetection": {
                "privateRanges": "private_ranges",
                "signatureOverrides": "signature_overrides",
                "trafficBypasses": "traffic_bypass"
            },
            "azure:network/FirewallPolicyIntrusionDetectionTrafficBypass:FirewallPolicyIntrusionDetectionTrafficBypass": {
                "destinationAddresses": "destination_addresses",
                "destinationIpGroups": "destination_ip_groups",
                "destinationPorts": "destination_ports",
                "sourceAddresses": "source_addresses",
                "sourceIpGroups": "source_ip_groups"
            },
            "azure:network/FirewallPolicyRuleCollectionGroupApplicationRuleCollection:FirewallPolicyRuleCollectionGroupApplicationRuleCollection": {
                "rules": "rule"
            },
            "azure:network/FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRule:FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRule": {
                "destinationAddresses": "destination_addresses",
                "destinationFqdnTags": "destination_fqdn_tags",
                "destinationFqdns": "destination_fqdns",
                "destinationUrls": "destination_urls",
                "httpHeaders": "http_headers",
                "sourceAddresses": "source_addresses",
                "sourceIpGroups": "source_ip_groups",
                "terminateTls": "terminate_tls",
                "webCategories": "web_categories"
            },
            "azure:network/FirewallPolicyRuleCollectionGroupNatRuleCollection:FirewallPolicyRuleCollectionGroupNatRuleCollection": {
                "rules": "rule"
            },
            "azure:network/FirewallPolicyRuleCollectionGroupNatRuleCollectionRule:FirewallPolicyRuleCollectionGroupNatRuleCollectionRule": {
                "destinationAddress": "destination_address",
                "destinationPorts": "destination_ports",
                "sourceAddresses": "source_addresses",
                "sourceIpGroups": "source_ip_groups",
                "translatedAddress": "translated_address",
                "translatedFqdn": "translated_fqdn",
                "translatedPort": "translated_port"
            },
            "azure:network/FirewallPolicyRuleCollectionGroupNetworkRuleCollection:FirewallPolicyRuleCollectionGroupNetworkRuleCollection": {
                "rules": "rule"
            },
            "azure:network/FirewallPolicyRuleCollectionGroupNetworkRuleCollectionRule:FirewallPolicyRuleCollectionGroupNetworkRuleCollectionRule": {
                "destinationAddresses": "destination_addresses",
                "destinationFqdns": "destination_fqdns",
                "destinationIpGroups": "destination_ip_groups",
                "destinationPorts": "destination_ports",
                "sourceAddresses": "source_addresses",
                "sourceIpGroups": "source_ip_groups"
            },
            "azure:network/FirewallPolicyThreatIntelligenceAllowlist:FirewallPolicyThreatIntelligenceAllowlist": {
                "ipAddresses": "ip_addresses"
            },
            "azure:network/FirewallPolicyTlsCertificate:FirewallPolicyTlsCertificate": {
                "keyVaultSecretId": "key_vault_secret_id"
            },
            "azure:network/FirewallVirtualHub:FirewallVirtualHub": {
                "privateIpAddress": "private_ip_address",
                "publicIpAddresses": "public_ip_addresses",
                "publicIpCount": "public_ip_count",
                "virtualHubId": "virtual_hub_id"
            },
            "azure:network/LocalNetworkGatewayBgpSettings:LocalNetworkGatewayBgpSettings": {
                "bgpPeeringAddress": "bgp_peering_address",
                "peerWeight": "peer_weight"
            },
            "azure:network/NetworkConnectionMonitorEndpoint:NetworkConnectionMonitorEndpoint": {
                "coverageLevel": "coverage_level",
                "excludedIpAddresses": "excluded_ip_addresses",
                "includedIpAddresses": "included_ip_addresses",
                "targetResourceId": "target_resource_id",
                "targetResourceType": "target_resource_type"
            },
            "azure:network/NetworkConnectionMonitorEndpointFilter:NetworkConnectionMonitorEndpointFilter": {
                "items": "item"
            },
            "azure:network/NetworkConnectionMonitorTestConfiguration:NetworkConnectionMonitorTestConfiguration": {
                "httpConfiguration": "http_configuration",
                "icmpConfiguration": "icmp_configuration",
                "preferredIpVersion": "preferred_ip_version",
                "successThreshold": "success_threshold",
                "tcpConfiguration": "tcp_configuration",
                "testFrequencyInSeconds": "test_frequency_in_seconds"
            },
            "azure:network/NetworkConnectionMonitorTestConfigurationHttpConfiguration:NetworkConnectionMonitorTestConfigurationHttpConfiguration": {
                "preferHttps": "prefer_https",
                "requestHeaders": "request_header",
                "validStatusCodeRanges": "valid_status_code_ranges"
            },
            "azure:network/NetworkConnectionMonitorTestConfigurationIcmpConfiguration:NetworkConnectionMonitorTestConfigurationIcmpConfiguration": {
                "traceRouteEnabled": "trace_route_enabled"
            },
            "azure:network/NetworkConnectionMonitorTestConfigurationSuccessThreshold:NetworkConnectionMonitorTestConfigurationSuccessThreshold": {
                "checksFailedPercent": "checks_failed_percent",
                "roundTripTimeMs": "round_trip_time_ms"
            },
            "azure:network/NetworkConnectionMonitorTestConfigurationTcpConfiguration:NetworkConnectionMonitorTestConfigurationTcpConfiguration": {
                "destinationPortBehavior": "destination_port_behavior",
                "traceRouteEnabled": "trace_route_enabled"
            },
            "azure:network/NetworkConnectionMonitorTestGroup:NetworkConnectionMonitorTestGroup": {
                "destinationEndpoints": "destination_endpoints",
                "sourceEndpoints": "source_endpoints",
                "testConfigurationNames": "test_configuration_names"
            },
            "azure:network/NetworkInterfaceIpConfiguration:NetworkInterfaceIpConfiguration": {
                "gatewayLoadBalancerFrontendIpConfigurationId": "gateway_load_balancer_frontend_ip_configuration_id",
                "privateIpAddress": "private_ip_address",
                "privateIpAddressAllocation": "private_ip_address_allocation",
                "privateIpAddressVersion": "private_ip_address_version",
                "publicIpAddressId": "public_ip_address_id",
                "subnetId": "subnet_id"
            },
            "azure:network/NetworkManagerAdminRuleDestination:NetworkManagerAdminRuleDestination": {
                "addressPrefix": "address_prefix",
                "addressPrefixType": "address_prefix_type"
            },
            "azure:network/NetworkManagerAdminRuleSource:NetworkManagerAdminRuleSource": {
                "addressPrefix": "address_prefix",
                "addressPrefixType": "address_prefix_type"
            },
            "azure:network/NetworkManagerConnectivityConfigurationAppliesToGroup:NetworkManagerConnectivityConfigurationAppliesToGroup": {
                "globalMeshEnabled": "global_mesh_enabled",
                "groupConnectivity": "group_connectivity",
                "networkGroupId": "network_group_id",
                "useHubGateway": "use_hub_gateway"
            },
            "azure:network/NetworkManagerConnectivityConfigurationHub:NetworkManagerConnectivityConfigurationHub": {
                "resourceId": "resource_id",
                "resourceType": "resource_type"
            },
            "azure:network/NetworkManagerCrossTenantScope:NetworkManagerCrossTenantScope": {
                "managementGroups": "management_groups",
                "tenantId": "tenant_id"
            },
            "azure:network/NetworkManagerScope:NetworkManagerScope": {
                "managementGroupIds": "management_group_ids",
                "subscriptionIds": "subscription_ids"
            },
            "azure:network/NetworkPacketCaptureFilter:NetworkPacketCaptureFilter": {
                "localIpAddress": "local_ip_address",
                "localPort": "local_port",
                "remoteIpAddress": "remote_ip_address",
                "remotePort": "remote_port"
            },
            "azure:network/NetworkPacketCaptureStorageLocation:NetworkPacketCaptureStorageLocation": {
                "filePath": "file_path",
                "storageAccountId": "storage_account_id",
                "storagePath": "storage_path"
            },
            "azure:network/NetworkSecurityGroupSecurityRule:NetworkSecurityGroupSecurityRule": {
                "destinationAddressPrefix": "destination_address_prefix",
                "destinationAddressPrefixes": "destination_address_prefixes",
                "destinationApplicationSecurityGroupIds": "destination_application_security_group_ids",
                "destinationPortRange": "destination_port_range",
                "destinationPortRanges": "destination_port_ranges",
                "sourceAddressPrefix": "source_address_prefix",
                "sourceAddressPrefixes": "source_address_prefixes",
                "sourceApplicationSecurityGroupIds": "source_application_security_group_ids",
                "sourcePortRange": "source_port_range",
                "sourcePortRanges": "source_port_ranges"
            },
            "azure:network/NetworkWatcherFlowLogTrafficAnalytics:NetworkWatcherFlowLogTrafficAnalytics": {
                "intervalInMinutes": "interval_in_minutes",
                "workspaceId": "workspace_id",
                "workspaceRegion": "workspace_region",
                "workspaceResourceId": "workspace_resource_id"
            },
            "azure:network/PointToPointVpnGatewayConnectionConfiguration:PointToPointVpnGatewayConnectionConfiguration": {
                "internetSecurityEnabled": "internet_security_enabled",
                "vpnClientAddressPool": "vpn_client_address_pool"
            },
            "azure:network/PointToPointVpnGatewayConnectionConfigurationRoute:PointToPointVpnGatewayConnectionConfigurationRoute": {
                "associatedRouteTableId": "associated_route_table_id",
                "inboundRouteMapId": "inbound_route_map_id",
                "outboundRouteMapId": "outbound_route_map_id",
                "propagatedRouteTable": "propagated_route_table"
            },
            "azure:network/PointToPointVpnGatewayConnectionConfigurationVpnClientAddressPool:PointToPointVpnGatewayConnectionConfigurationVpnClientAddressPool": {
                "addressPrefixes": "address_prefixes"
            },
            "azure:network/ProfileContainerNetworkInterface:ProfileContainerNetworkInterface": {
                "ipConfigurations": "ip_configuration"
            },
            "azure:network/ProfileContainerNetworkInterfaceIpConfiguration:ProfileContainerNetworkInterfaceIpConfiguration": {
                "subnetId": "subnet_id"
            },
            "azure:network/RouteFilterRule:RouteFilterRule": {
                "ruleType": "rule_type"
            },
            "azure:network/RouteMapRule:RouteMapRule": {
                "actions": "action",
                "matchCriterions": "match_criterion",
                "nextStepIfMatched": "next_step_if_matched"
            },
            "azure:network/RouteMapRuleAction:RouteMapRuleAction": {
                "parameters": "parameter"
            },
            "azure:network/RouteMapRuleActionParameter:RouteMapRuleActionParameter": {
                "asPaths": "as_path",
                "communities": "community",
                "routePrefixes": "route_prefix"
            },
            "azure:network/RouteMapRuleMatchCriterion:RouteMapRuleMatchCriterion": {
                "asPaths": "as_path",
                "communities": "community",
                "matchCondition": "match_condition",
                "routePrefixes": "route_prefix"
            },
            "azure:network/RouteTableRoute:RouteTableRoute": {
                "addressPrefix": "address_prefix",
                "nextHopInIpAddress": "next_hop_in_ip_address",
                "nextHopType": "next_hop_type"
            },
            "azure:network/RoutingIntentRoutingPolicy:RoutingIntentRoutingPolicy": {
                "nextHop": "next_hop"
            },
            "azure:network/SubnetDelegation:SubnetDelegation": {
                "serviceDelegation": "service_delegation"
            },
            "azure:network/SubnetServiceEndpointStoragePolicyDefinition:SubnetServiceEndpointStoragePolicyDefinition": {
                "serviceResources": "service_resources"
            },
            "azure:network/TrafficManagerProfileDnsConfig:TrafficManagerProfileDnsConfig": {
                "relativeName": "relative_name"
            },
            "azure:network/TrafficManagerProfileMonitorConfig:TrafficManagerProfileMonitorConfig": {
                "customHeaders": "custom_header",
                "expectedStatusCodeRanges": "expected_status_code_ranges",
                "intervalInSeconds": "interval_in_seconds",
                "timeoutInSeconds": "timeout_in_seconds",
                "toleratedNumberOfFailures": "tolerated_number_of_failures"
            },
            "azure:network/VirtualHubConnectionRouting:VirtualHubConnectionRouting": {
                "associatedRouteTableId": "associated_route_table_id",
                "inboundRouteMapId": "inbound_route_map_id",
                "outboundRouteMapId": "outbound_route_map_id",
                "propagatedRouteTable": "propagated_route_table",
                "staticVnetLocalRouteOverrideCriteria": "static_vnet_local_route_override_criteria",
                "staticVnetRoutes": "static_vnet_route"
            },
            "azure:network/VirtualHubConnectionRoutingPropagatedRouteTable:VirtualHubConnectionRoutingPropagatedRouteTable": {
                "routeTableIds": "route_table_ids"
            },
            "azure:network/VirtualHubConnectionRoutingStaticVnetRoute:VirtualHubConnectionRoutingStaticVnetRoute": {
                "addressPrefixes": "address_prefixes",
                "nextHopIpAddress": "next_hop_ip_address"
            },
            "azure:network/VirtualHubRoute:VirtualHubRoute": {
                "addressPrefixes": "address_prefixes",
                "nextHopIpAddress": "next_hop_ip_address"
            },
            "azure:network/VirtualHubRouteTableRoute:VirtualHubRouteTableRoute": {
                "destinationsType": "destinations_type",
                "nextHop": "next_hop",
                "nextHopType": "next_hop_type"
            },
            "azure:network/VirtualNetworkGatewayBgpSettings:VirtualNetworkGatewayBgpSettings": {
                "peerWeight": "peer_weight",
                "peeringAddresses": "peering_addresses"
            },
            "azure:network/VirtualNetworkGatewayBgpSettingsPeeringAddress:VirtualNetworkGatewayBgpSettingsPeeringAddress": {
                "apipaAddresses": "apipa_addresses",
                "defaultAddresses": "default_addresses",
                "ipConfigurationName": "ip_configuration_name",
                "tunnelIpAddresses": "tunnel_ip_addresses"
            },
            "azure:network/VirtualNetworkGatewayConnectionIpsecPolicy:VirtualNetworkGatewayConnectionIpsecPolicy": {
                "dhGroup": "dh_group",
                "ikeEncryption": "ike_encryption",
                "ikeIntegrity": "ike_integrity",
                "ipsecEncryption": "ipsec_encryption",
                "ipsecIntegrity": "ipsec_integrity",
                "pfsGroup": "pfs_group",
                "saDatasize": "sa_datasize",
                "saLifetime": "sa_lifetime"
            },
            "azure:network/VirtualNetworkGatewayConnectionTrafficSelectorPolicy:VirtualNetworkGatewayConnectionTrafficSelectorPolicy": {
                "localAddressCidrs": "local_address_cidrs",
                "remoteAddressCidrs": "remote_address_cidrs"
            },
            "azure:network/VirtualNetworkGatewayCustomRoute:VirtualNetworkGatewayCustomRoute": {
                "addressPrefixes": "address_prefixes"
            },
            "azure:network/VirtualNetworkGatewayIpConfiguration:VirtualNetworkGatewayIpConfiguration": {
                "privateIpAddressAllocation": "private_ip_address_allocation",
                "publicIpAddressId": "public_ip_address_id",
                "subnetId": "subnet_id"
            },
            "azure:network/VirtualNetworkGatewayNatRuleExternalMapping:VirtualNetworkGatewayNatRuleExternalMapping": {
                "addressSpace": "address_space",
                "portRange": "port_range"
            },
            "azure:network/VirtualNetworkGatewayNatRuleInternalMapping:VirtualNetworkGatewayNatRuleInternalMapping": {
                "addressSpace": "address_space",
                "portRange": "port_range"
            },
            "azure:network/VirtualNetworkGatewayPolicyGroup:VirtualNetworkGatewayPolicyGroup": {
                "isDefault": "is_default",
                "policyMembers": "policy_member"
            },
            "azure:network/VirtualNetworkGatewayVpnClientConfiguration:VirtualNetworkGatewayVpnClientConfiguration": {
                "aadAudience": "aad_audience",
                "aadIssuer": "aad_issuer",
                "aadTenant": "aad_tenant",
                "addressSpaces": "address_space",
                "ipsecPolicy": "ipsec_policy",
                "radiusServerAddress": "radius_server_address",
                "radiusServerSecret": "radius_server_secret",
                "radiusServers": "radius_server",
                "revokedCertificates": "revoked_certificate",
                "rootCertificates": "root_certificate",
                "virtualNetworkGatewayClientConnections": "virtual_network_gateway_client_connection",
                "vpnAuthTypes": "vpn_auth_types",
                "vpnClientProtocols": "vpn_client_protocols"
            },
            "azure:network/VirtualNetworkGatewayVpnClientConfigurationIpsecPolicy:VirtualNetworkGatewayVpnClientConfigurationIpsecPolicy": {
                "dhGroup": "dh_group",
                "ikeEncryption": "ike_encryption",
                "ikeIntegrity": "ike_integrity",
                "ipsecEncryption": "ipsec_encryption",
                "ipsecIntegrity": "ipsec_integrity",
                "pfsGroup": "pfs_group",
                "saDataSizeInKilobytes": "sa_data_size_in_kilobytes",
                "saLifetimeInSeconds": "sa_lifetime_in_seconds"
            },
            "azure:network/VirtualNetworkGatewayVpnClientConfigurationRootCertificate:VirtualNetworkGatewayVpnClientConfigurationRootCertificate": {
                "publicCertData": "public_cert_data"
            },
            "azure:network/VirtualNetworkGatewayVpnClientConfigurationVirtualNetworkGatewayClientConnection:VirtualNetworkGatewayVpnClientConfigurationVirtualNetworkGatewayClientConnection": {
                "addressPrefixes": "address_prefixes",
                "policyGroupNames": "policy_group_names"
            },
            "azure:network/VirtualNetworkSubnet:VirtualNetworkSubnet": {
                "addressPrefix": "address_prefix",
                "securityGroup": "security_group"
            },
            "azure:network/VnpGatewayNatRuleExternalMapping:VnpGatewayNatRuleExternalMapping": {
                "addressSpace": "address_space",
                "portRange": "port_range"
            },
            "azure:network/VnpGatewayNatRuleInternalMapping:VnpGatewayNatRuleInternalMapping": {
                "addressSpace": "address_space",
                "portRange": "port_range"
            },
            "azure:network/VpnGatewayBgpSettings:VpnGatewayBgpSettings": {
                "bgpPeeringAddress": "bgp_peering_address",
                "instance0BgpPeeringAddress": "instance_0_bgp_peering_address",
                "instance1BgpPeeringAddress": "instance_1_bgp_peering_address",
                "peerWeight": "peer_weight"
            },
            "azure:network/VpnGatewayBgpSettingsInstance0BgpPeeringAddress:VpnGatewayBgpSettingsInstance0BgpPeeringAddress": {
                "customIps": "custom_ips",
                "defaultIps": "default_ips",
                "ipConfigurationId": "ip_configuration_id",
                "tunnelIps": "tunnel_ips"
            },
            "azure:network/VpnGatewayBgpSettingsInstance1BgpPeeringAddress:VpnGatewayBgpSettingsInstance1BgpPeeringAddress": {
                "customIps": "custom_ips",
                "defaultIps": "default_ips",
                "ipConfigurationId": "ip_configuration_id",
                "tunnelIps": "tunnel_ips"
            },
            "azure:network/VpnGatewayConnectionRouting:VpnGatewayConnectionRouting": {
                "associatedRouteTable": "associated_route_table",
                "inboundRouteMapId": "inbound_route_map_id",
                "outboundRouteMapId": "outbound_route_map_id",
                "propagatedRouteTable": "propagated_route_table"
            },
            "azure:network/VpnGatewayConnectionRoutingPropagatedRouteTable:VpnGatewayConnectionRoutingPropagatedRouteTable": {
                "routeTableIds": "route_table_ids"
            },
            "azure:network/VpnGatewayConnectionTrafficSelectorPolicy:VpnGatewayConnectionTrafficSelectorPolicy": {
                "localAddressRanges": "local_address_ranges",
                "remoteAddressRanges": "remote_address_ranges"
            },
            "azure:network/VpnGatewayConnectionVpnLink:VpnGatewayConnectionVpnLink": {
                "bandwidthMbps": "bandwidth_mbps",
                "bgpEnabled": "bgp_enabled",
                "connectionMode": "connection_mode",
                "customBgpAddresses": "custom_bgp_address",
                "egressNatRuleIds": "egress_nat_rule_ids",
                "ingressNatRuleIds": "ingress_nat_rule_ids",
                "ipsecPolicies": "ipsec_policy",
                "localAzureIpAddressEnabled": "local_azure_ip_address_enabled",
                "policyBasedTrafficSelectorEnabled": "policy_based_traffic_selector_enabled",
                "ratelimitEnabled": "ratelimit_enabled",
                "routeWeight": "route_weight",
                "sharedKey": "shared_key",
                "vpnSiteLinkId": "vpn_site_link_id"
            },
            "azure:network/VpnGatewayConnectionVpnLinkCustomBgpAddress:VpnGatewayConnectionVpnLinkCustomBgpAddress": {
                "ipAddress": "ip_address",
                "ipConfigurationId": "ip_configuration_id"
            },
            "azure:network/VpnGatewayConnectionVpnLinkIpsecPolicy:VpnGatewayConnectionVpnLinkIpsecPolicy": {
                "dhGroup": "dh_group",
                "encryptionAlgorithm": "encryption_algorithm",
                "ikeEncryptionAlgorithm": "ike_encryption_algorithm",
                "ikeIntegrityAlgorithm": "ike_integrity_algorithm",
                "integrityAlgorithm": "integrity_algorithm",
                "pfsGroup": "pfs_group",
                "saDataSizeKb": "sa_data_size_kb",
                "saLifetimeSec": "sa_lifetime_sec"
            },
            "azure:network/VpnServerConfigurationClientRootCertificate:VpnServerConfigurationClientRootCertificate": {
                "publicCertData": "public_cert_data"
            },
            "azure:network/VpnServerConfigurationIpsecPolicy:VpnServerConfigurationIpsecPolicy": {
                "dhGroup": "dh_group",
                "ikeEncryption": "ike_encryption",
                "ikeIntegrity": "ike_integrity",
                "ipsecEncryption": "ipsec_encryption",
                "ipsecIntegrity": "ipsec_integrity",
                "pfsGroup": "pfs_group",
                "saDataSizeKilobytes": "sa_data_size_kilobytes",
                "saLifetimeSeconds": "sa_lifetime_seconds"
            },
            "azure:network/VpnServerConfigurationRadius:VpnServerConfigurationRadius": {
                "clientRootCertificates": "client_root_certificate",
                "serverRootCertificates": "server_root_certificate",
                "servers": "server"
            },
            "azure:network/VpnServerConfigurationRadiusServerRootCertificate:VpnServerConfigurationRadiusServerRootCertificate": {
                "publicCertData": "public_cert_data"
            },
            "azure:network/VpnSiteLink:VpnSiteLink": {
                "ipAddress": "ip_address",
                "providerName": "provider_name",
                "speedInMbps": "speed_in_mbps"
            },
            "azure:network/VpnSiteLinkBgp:VpnSiteLinkBgp": {
                "peeringAddress": "peering_address"
            },
            "azure:network/VpnSiteO365Policy:VpnSiteO365Policy": {
                "trafficCategory": "traffic_category"
            },
            "azure:network/VpnSiteO365PolicyTrafficCategory:VpnSiteO365PolicyTrafficCategory": {
                "allowEndpointEnabled": "allow_endpoint_enabled",
                "defaultEndpointEnabled": "default_endpoint_enabled",
                "optimizeEndpointEnabled": "optimize_endpoint_enabled"
            },
            "azure:network/applicationGateway:ApplicationGateway": {
                "authenticationCertificates": "authentication_certificate",
                "autoscaleConfiguration": "autoscale_configuration",
                "backendAddressPools": "backend_address_pool",
                "backendHttpSettings": "backend_http_settings",
                "customErrorConfigurations": "custom_error_configuration",
                "enableHttp2": "enable_http2",
                "fipsEnabled": "fips_enabled",
                "firewallPolicyId": "firewall_policy_id",
                "forceFirewallPolicyAssociation": "force_firewall_policy_association",
                "frontendIpConfigurations": "frontend_ip_configuration",
                "frontendPorts": "frontend_port",
                "gatewayIpConfigurations": "gateway_ip_configuration",
                "httpListeners": "http_listener",
                "privateEndpointConnections": "private_endpoint_connection",
                "privateLinkConfigurations": "private_link_configuration",
                "probes": "probe",
                "redirectConfigurations": "redirect_configuration",
                "requestRoutingRules": "request_routing_rule",
                "resourceGroupName": "resource_group_name",
                "rewriteRuleSets": "rewrite_rule_set",
                "sslCertificates": "ssl_certificate",
                "sslPolicy": "ssl_policy",
                "sslProfiles": "ssl_profile",
                "trustedClientCertificates": "trusted_client_certificate",
                "trustedRootCertificates": "trusted_root_certificate",
                "urlPathMaps": "url_path_map",
                "wafConfiguration": "waf_configuration"
            },
            "azure:network/applicationSecurityGroup:ApplicationSecurityGroup": {
                "resourceGroupName": "resource_group_name"
            },
            "azure:network/bgpConnection:BgpConnection": {
                "peerAsn": "peer_asn",
                "peerIp": "peer_ip",
                "virtualHubId": "virtual_hub_id",
                "virtualNetworkConnectionId": "virtual_network_connection_id"
            },
            "azure:network/ddosProtectionPlan:DdosProtectionPlan": {
                "resourceGroupName": "resource_group_name",
                "virtualNetworkIds": "virtual_network_ids"
            },
            "azure:network/expressRouteCircuit:ExpressRouteCircuit": {
                "allowClassicOperations": "allow_classic_operations",
                "authorizationKey": "authorization_key",
                "bandwidthInGbps": "bandwidth_in_gbps",
                "bandwidthInMbps": "bandwidth_in_mbps",
                "expressRoutePortId": "express_route_port_id",
                "peeringLocation": "peering_location",
                "resourceGroupName": "resource_group_name",
                "serviceKey": "service_key",
                "serviceProviderName": "service_provider_name",
                "serviceProviderProvisioningState": "service_provider_provisioning_state"
            },
            "azure:network/expressRouteCircuitAuthorization:ExpressRouteCircuitAuthorization": {
                "authorizationKey": "authorization_key",
                "authorizationUseStatus": "authorization_use_status",
                "expressRouteCircuitName": "express_route_circuit_name",
                "resourceGroupName": "resource_group_name"
            },
            "azure:network/expressRouteCircuitConnection:ExpressRouteCircuitConnection": {
                "addressPrefixIpv4": "address_prefix_ipv4",
                "addressPrefixIpv6": "address_prefix_ipv6",
                "authorizationKey": "authorization_key",
                "peerPeeringId": "peer_peering_id",
                "peeringId": "peering_id"
            },
            "azure:network/expressRouteCircuitPeering:ExpressRouteCircuitPeering": {
                "azureAsn": "azure_asn",
                "expressRouteCircuitName": "express_route_circuit_name",
                "gatewayManagerEtag": "gateway_manager_etag",
                "ipv4Enabled": "ipv4_enabled",
                "microsoftPeeringConfig": "microsoft_peering_config",
                "peerAsn": "peer_asn",
                "peeringType": "peering_type",
                "primaryAzurePort": "primary_azure_port",
                "primaryPeerAddressPrefix": "primary_peer_address_prefix",
                "resourceGroupName": "resource_group_name",
                "routeFilterId": "route_filter_id",
                "secondaryAzurePort": "secondary_azure_port",
                "secondaryPeerAddressPrefix": "secondary_peer_address_prefix",
                "sharedKey": "shared_key",
                "vlanId": "vlan_id"
            },
            "azure:network/expressRouteConnection:ExpressRouteConnection": {
                "authorizationKey": "authorization_key",
                "enableInternetSecurity": "enable_internet_security",
                "expressRouteCircuitPeeringId": "express_route_circuit_peering_id",
                "expressRouteGatewayBypassEnabled": "express_route_gateway_bypass_enabled",
                "expressRouteGatewayId": "express_route_gateway_id",
                "routingWeight": "routing_weight"
            },
            "azure:network/expressRouteGateway:ExpressRouteGateway": {
                "allowNonVirtualWanTraffic": "allow_non_virtual_wan_traffic",
                "resourceGroupName": "resource_group_name",
                "scaleUnits": "scale_units",
                "virtualHubId": "virtual_hub_id"
            },
            "azure:network/expressRoutePort:ExpressRoutePort": {
                "bandwidthInGbps": "bandwidth_in_gbps",
                "billingType": "billing_type",
                "peeringLocation": "peering_location",
                "resourceGroupName": "resource_group_name"
            },
            "azure:network/expressRoutePortAuthorization:ExpressRoutePortAuthorization": {
                "authorizationKey": "authorization_key",
                "authorizationUseStatus": "authorization_use_status",
                "expressRoutePortName": "express_route_port_name",
                "resourceGroupName": "resource_group_name"
            },
            "azure:network/firewall:Firewall": {
                "dnsProxyEnabled": "dns_proxy_enabled",
                "dnsServers": "dns_servers",
                "firewallPolicyId": "firewall_policy_id",
                "ipConfigurations": "ip_configuration",
                "managementIpConfiguration": "management_ip_configuration",
                "privateIpRanges": "private_ip_ranges",
                "resourceGroupName": "resource_group_name",
                "skuName": "sku_name",
                "skuTier": "sku_tier",
                "threatIntelMode": "threat_intel_mode",
                "virtualHub": "virtual_hub"
            },
            "azure:network/firewallApplicationRuleCollection:FirewallApplicationRuleCollection": {
                "azureFirewallName": "azure_firewall_name",
                "resourceGroupName": "resource_group_name",
                "rules": "rule"
            },
            "azure:network/firewallNatRuleCollection:FirewallNatRuleCollection": {
                "azureFirewallName": "azure_firewall_name",
                "resourceGroupName": "resource_group_name",
                "rules": "rule"
            },
            "azure:network/firewallNetworkRuleCollection:FirewallNetworkRuleCollection": {
                "azureFirewallName": "azure_firewall_name",
                "resourceGroupName": "resource_group_name",
                "rules": "rule"
            },
            "azure:network/firewallPolicy:FirewallPolicy": {
                "autoLearnPrivateRangesEnabled": "auto_learn_private_ranges_enabled",
                "basePolicyId": "base_policy_id",
                "childPolicies": "child_policies",
                "explicitProxy": "explicit_proxy",
                "intrusionDetection": "intrusion_detection",
                "privateIpRanges": "private_ip_ranges",
                "resourceGroupName": "resource_group_name",
                "ruleCollectionGroups": "rule_collection_groups",
                "sqlRedirectAllowed": "sql_redirect_allowed",
                "threatIntelligenceAllowlist": "threat_intelligence_allowlist",
                "threatIntelligenceMode": "threat_intelligence_mode",
                "tlsCertificate": "tls_certificate"
            },
            "azure:network/firewallPolicyRuleCollectionGroup:FirewallPolicyRuleCollectionGroup": {
                "applicationRuleCollections": "application_rule_collection",
                "firewallPolicyId": "firewall_policy_id",
                "natRuleCollections": "nat_rule_collection",
                "networkRuleCollections": "network_rule_collection"
            },
            "azure:network/getApplicationGateway:getApplicationGateway": {
                "authenticationCertificates": "authentication_certificate",
                "autoscaleConfigurations": "autoscale_configuration",
                "backendAddressPools": "backend_address_pool",
                "backendHttpSettings": "backend_http_settings",
                "customErrorConfigurations": "custom_error_configuration",
                "fipsEnabled": "fips_enabled",
                "firewallPolicyId": "firewall_policy_id",
                "forceFirewallPolicyAssociation": "force_firewall_policy_association",
                "frontendIpConfigurations": "frontend_ip_configuration",
                "frontendPorts": "frontend_port",
                "gatewayIpConfigurations": "gateway_ip_configuration",
                "globals": "global",
                "http2Enabled": "http2_enabled",
                "httpListeners": "http_listener",
                "identities": "identity",
                "privateEndpointConnections": "private_endpoint_connection",
                "privateLinkConfigurations": "private_link_configuration",
                "probes": "probe",
                "redirectConfigurations": "redirect_configuration",
                "requestRoutingRules": "request_routing_rule",
                "resourceGroupName": "resource_group_name",
                "rewriteRuleSets": "rewrite_rule_set",
                "skus": "sku",
                "sslCertificates": "ssl_certificate",
                "sslPolicies": "ssl_policy",
                "sslProfiles": "ssl_profile",
                "trustedClientCertificates": "trusted_client_certificate",
                "trustedRootCertificates": "trusted_root_certificate",
                "urlPathMaps": "url_path_map",
                "wafConfigurations": "waf_configuration"
            },
            "azure:network/getApplicationGatewayAutoscaleConfiguration:getApplicationGatewayAutoscaleConfiguration": {
                "maxCapacity": "max_capacity",
                "minCapacity": "min_capacity"
            },
            "azure:network/getApplicationGatewayBackendAddressPool:getApplicationGatewayBackendAddressPool": {
                "ipAddresses": "ip_addresses"
            },
            "azure:network/getApplicationGatewayBackendHttpSetting:getApplicationGatewayBackendHttpSetting": {
                "affinityCookieName": "affinity_cookie_name",
                "authenticationCertificates": "authentication_certificate",
                "connectionDrainings": "connection_draining",
                "cookieBasedAffinity": "cookie_based_affinity",
                "hostName": "host_name",
                "pickHostNameFromBackendAddress": "pick_host_name_from_backend_address",
                "probeId": "probe_id",
                "probeName": "probe_name",
                "requestTimeout": "request_timeout",
                "trustedRootCertificateNames": "trusted_root_certificate_names"
            },
            "azure:network/getApplicationGatewayBackendHttpSettingConnectionDraining:getApplicationGatewayBackendHttpSettingConnectionDraining": {
                "drainTimeoutSec": "drain_timeout_sec"
            },
            "azure:network/getApplicationGatewayCustomErrorConfiguration:getApplicationGatewayCustomErrorConfiguration": {
                "customErrorPageUrl": "custom_error_page_url",
                "statusCode": "status_code"
            },
            "azure:network/getApplicationGatewayFrontendIpConfiguration:getApplicationGatewayFrontendIpConfiguration": {
                "privateIpAddress": "private_ip_address",
                "privateIpAddressAllocation": "private_ip_address_allocation",
                "privateLinkConfigurationId": "private_link_configuration_id",
                "privateLinkConfigurationName": "private_link_configuration_name",
                "publicIpAddressId": "public_ip_address_id",
                "subnetId": "subnet_id"
            },
            "azure:network/getApplicationGatewayGatewayIpConfiguration:getApplicationGatewayGatewayIpConfiguration": {
                "subnetId": "subnet_id"
            },
            "azure:network/getApplicationGatewayGlobal:getApplicationGatewayGlobal": {
                "requestBufferingEnabled": "request_buffering_enabled",
                "responseBufferingEnabled": "response_buffering_enabled"
            },
            "azure:network/getApplicationGatewayHttpListener:getApplicationGatewayHttpListener": {
                "customErrorConfigurations": "custom_error_configuration",
                "firewallPolicyId": "firewall_policy_id",
                "frontendIpConfigurationId": "frontend_ip_configuration_id",
                "frontendIpConfigurationName": "frontend_ip_configuration_name",
                "frontendPortId": "frontend_port_id",
                "frontendPortName": "frontend_port_name",
                "hostName": "host_name",
                "hostNames": "host_names",
                "requireSni": "require_sni",
                "sslCertificateId": "ssl_certificate_id",
                "sslCertificateName": "ssl_certificate_name",
                "sslProfileId": "ssl_profile_id",
                "sslProfileName": "ssl_profile_name"
            },
            "azure:network/getApplicationGatewayHttpListenerCustomErrorConfiguration:getApplicationGatewayHttpListenerCustomErrorConfiguration": {
                "customErrorPageUrl": "custom_error_page_url",
                "statusCode": "status_code"
            },
            "azure:network/getApplicationGatewayIdentity:getApplicationGatewayIdentity": {
                "identityIds": "identity_ids"
            },
            "azure:network/getApplicationGatewayPrivateLinkConfiguration:getApplicationGatewayPrivateLinkConfiguration": {
                "ipConfigurations": "ip_configuration"
            },
            "azure:network/getApplicationGatewayPrivateLinkConfigurationIpConfiguration:getApplicationGatewayPrivateLinkConfigurationIpConfiguration": {
                "privateIpAddress": "private_ip_address",
                "privateIpAddressAllocation": "private_ip_address_allocation",
                "subnetId": "subnet_id"
            },
            "azure:network/getApplicationGatewayProbe:getApplicationGatewayProbe": {
                "matches": "match",
                "minimumServers": "minimum_servers",
                "pickHostNameFromBackendHttpSettings": "pick_host_name_from_backend_http_settings",
                "unhealthyThreshold": "unhealthy_threshold"
            },
            "azure:network/getApplicationGatewayProbeMatch:getApplicationGatewayProbeMatch": {
                "statusCodes": "status_code"
            },
            "azure:network/getApplicationGatewayRedirectConfiguration:getApplicationGatewayRedirectConfiguration": {
                "includePath": "include_path",
                "includeQueryString": "include_query_string",
                "redirectType": "redirect_type",
                "targetListenerId": "target_listener_id",
                "targetListenerName": "target_listener_name",
                "targetUrl": "target_url"
            },
            "azure:network/getApplicationGatewayRequestRoutingRule:getApplicationGatewayRequestRoutingRule": {
                "backendAddressPoolId": "backend_address_pool_id",
                "backendAddressPoolName": "backend_address_pool_name",
                "backendHttpSettingsId": "backend_http_settings_id",
                "backendHttpSettingsName": "backend_http_settings_name",
                "httpListenerId": "http_listener_id",
                "httpListenerName": "http_listener_name",
                "redirectConfigurationId": "redirect_configuration_id",
                "redirectConfigurationName": "redirect_configuration_name",
                "rewriteRuleSetId": "rewrite_rule_set_id",
                "rewriteRuleSetName": "rewrite_rule_set_name",
                "ruleType": "rule_type",
                "urlPathMapId": "url_path_map_id",
                "urlPathMapName": "url_path_map_name"
            },
            "azure:network/getApplicationGatewayRewriteRuleSet:getApplicationGatewayRewriteRuleSet": {
                "rewriteRules": "rewrite_rule"
            },
            "azure:network/getApplicationGatewayRewriteRuleSetRewriteRule:getApplicationGatewayRewriteRuleSetRewriteRule": {
                "conditions": "condition",
                "requestHeaderConfigurations": "request_header_configuration",
                "responseHeaderConfigurations": "response_header_configuration",
                "ruleSequence": "rule_sequence",
                "urls": "url"
            },
            "azure:network/getApplicationGatewayRewriteRuleSetRewriteRuleCondition:getApplicationGatewayRewriteRuleSetRewriteRuleCondition": {
                "ignoreCase": "ignore_case"
            },
            "azure:network/getApplicationGatewayRewriteRuleSetRewriteRuleRequestHeaderConfiguration:getApplicationGatewayRewriteRuleSetRewriteRuleRequestHeaderConfiguration": {
                "headerName": "header_name",
                "headerValue": "header_value"
            },
            "azure:network/getApplicationGatewayRewriteRuleSetRewriteRuleResponseHeaderConfiguration:getApplicationGatewayRewriteRuleSetRewriteRuleResponseHeaderConfiguration": {
                "headerName": "header_name",
                "headerValue": "header_value"
            },
            "azure:network/getApplicationGatewayRewriteRuleSetRewriteRuleUrl:getApplicationGatewayRewriteRuleSetRewriteRuleUrl": {
                "queryString": "query_string"
            },
            "azure:network/getApplicationGatewaySslCertificate:getApplicationGatewaySslCertificate": {
                "keyVaultSecretId": "key_vault_secret_id",
                "publicCertData": "public_cert_data"
            },
            "azure:network/getApplicationGatewaySslPolicy:getApplicationGatewaySslPolicy": {
                "cipherSuites": "cipher_suites",
                "disabledProtocols": "disabled_protocols",
                "minProtocolVersion": "min_protocol_version",
                "policyName": "policy_name",
                "policyType": "policy_type"
            },
            "azure:network/getApplicationGatewaySslProfile:getApplicationGatewaySslProfile": {
                "sslPolicies": "ssl_policy",
                "trustedClientCertificateNames": "trusted_client_certificate_names",
                "verifyClientCertificateIssuerDn": "verify_client_certificate_issuer_dn",
                "verifyClientCertificateRevocation": "verify_client_certificate_revocation"
            },
            "azure:network/getApplicationGatewaySslProfileSslPolicy:getApplicationGatewaySslProfileSslPolicy": {
                "cipherSuites": "cipher_suites",
                "disabledProtocols": "disabled_protocols",
                "minProtocolVersion": "min_protocol_version",
                "policyName": "policy_name",
                "policyType": "policy_type"
            },
            "azure:network/getApplicationGatewayTrustedRootCertificate:getApplicationGatewayTrustedRootCertificate": {
                "keyVaultSecretId": "key_vault_secret_id"
            },
            "azure:network/getApplicationGatewayUrlPathMap:getApplicationGatewayUrlPathMap": {
                "defaultBackendAddressPoolId": "default_backend_address_pool_id",
                "defaultBackendAddressPoolName": "default_backend_address_pool_name",
                "defaultBackendHttpSettingsId": "default_backend_http_settings_id",
                "defaultBackendHttpSettingsName": "default_backend_http_settings_name",
                "defaultRedirectConfigurationId": "default_redirect_configuration_id",
                "defaultRedirectConfigurationName": "default_redirect_configuration_name",
                "defaultRewriteRuleSetId": "default_rewrite_rule_set_id",
                "defaultRewriteRuleSetName": "default_rewrite_rule_set_name",
                "pathRules": "path_rule"
            },
            "azure:network/getApplicationGatewayUrlPathMapPathRule:getApplicationGatewayUrlPathMapPathRule": {
                "backendAddressPoolId": "backend_address_pool_id",
                "backendAddressPoolName": "backend_address_pool_name",
                "backendHttpSettingsId": "backend_http_settings_id",
                "backendHttpSettingsName": "backend_http_settings_name",
                "firewallPolicyId": "firewall_policy_id",
                "redirectConfigurationId": "redirect_configuration_id",
                "redirectConfigurationName": "redirect_configuration_name",
                "rewriteRuleSetId": "rewrite_rule_set_id",
                "rewriteRuleSetName": "rewrite_rule_set_name"
            },
            "azure:network/getApplicationGatewayWafConfiguration:getApplicationGatewayWafConfiguration": {
                "disabledRuleGroups": "disabled_rule_group",
                "exclusions": "exclusion",
                "fileUploadLimitMb": "file_upload_limit_mb",
                "firewallMode": "firewall_mode",
                "maxRequestBodySizeKb": "max_request_body_size_kb",
                "requestBodyCheck": "request_body_check",
                "ruleSetType": "rule_set_type",
                "ruleSetVersion": "rule_set_version"
            },
            "azure:network/getApplicationGatewayWafConfigurationDisabledRuleGroup:getApplicationGatewayWafConfigurationDisabledRuleGroup": {
                "ruleGroupName": "rule_group_name"
            },
            "azure:network/getApplicationGatewayWafConfigurationExclusion:getApplicationGatewayWafConfigurationExclusion": {
                "matchVariable": "match_variable",
                "selectorMatchOperator": "selector_match_operator"
            },
            "azure:network/getApplicationSecurityGroup:getApplicationSecurityGroup": {
                "resourceGroupName": "resource_group_name"
            },
            "azure:network/getExpressRouteCircuit:getExpressRouteCircuit": {
                "resourceGroupName": "resource_group_name",
                "serviceKey": "service_key",
                "serviceProviderProperties": "service_provider_properties",
                "serviceProviderProvisioningState": "service_provider_provisioning_state"
            },
            "azure:network/getExpressRouteCircuitPeering:getExpressRouteCircuitPeering": {
                "azureAsn": "azure_asn",
                "peerAsn": "peer_asn",
                "peeringType": "peering_type",
                "primaryPeerAddressPrefix": "primary_peer_address_prefix",
                "secondaryPeerAddressPrefix": "secondary_peer_address_prefix",
                "sharedKey": "shared_key",
                "vlanId": "vlan_id"
            },
            "azure:network/getExpressRouteCircuitServiceProviderProperty:getExpressRouteCircuitServiceProviderProperty": {
                "bandwidthInMbps": "bandwidth_in_mbps",
                "peeringLocation": "peering_location",
                "serviceProviderName": "service_provider_name"
            },
            "azure:network/getFirewall:getFirewall": {
                "dnsProxyEnabled": "dns_proxy_enabled",
                "dnsServers": "dns_servers",
                "firewallPolicyId": "firewall_policy_id",
                "ipConfigurations": "ip_configuration",
                "managementIpConfigurations": "management_ip_configuration",
                "resourceGroupName": "resource_group_name",
                "skuName": "sku_name",
                "skuTier": "sku_tier",
                "threatIntelMode": "threat_intel_mode",
                "virtualHubs": "virtual_hub"
            },
            "azure:network/getFirewallIpConfiguration:getFirewallIpConfiguration": {
                "privateIpAddress": "private_ip_address",
                "publicIpAddressId": "public_ip_address_id",
                "subnetId": "subnet_id"
            },
            "azure:network/getFirewallManagementIpConfiguration:getFirewallManagementIpConfiguration": {
                "privateIpAddress": "private_ip_address",
                "publicIpAddressId": "public_ip_address_id",
                "subnetId": "subnet_id"
            },
            "azure:network/getFirewallPolicy:getFirewallPolicy": {
                "basePolicyId": "base_policy_id",
                "childPolicies": "child_policies",
                "resourceGroupName": "resource_group_name",
                "ruleCollectionGroups": "rule_collection_groups",
                "threatIntelligenceAllowlists": "threat_intelligence_allowlist",
                "threatIntelligenceMode": "threat_intelligence_mode"
            },
            "azure:network/getFirewallPolicyDn:getFirewallPolicyDn": {
                "networkRuleFqdnEnabled": "network_rule_fqdn_enabled",
                "proxyEnabled": "proxy_enabled"
            },
            "azure:network/getFirewallPolicyThreatIntelligenceAllowlist:getFirewallPolicyThreatIntelligenceAllowlist": {
                "ipAddresses": "ip_addresses"
            },
            "azure:network/getFirewallVirtualHub:getFirewallVirtualHub": {
                "privateIpAddress": "private_ip_address",
                "publicIpAddresses": "public_ip_addresses",
                "publicIpCount": "public_ip_count",
                "virtualHubId": "virtual_hub_id"
            },
            "azure:network/getGatewayConnection:getGatewayConnection": {
                "authorizationKey": "authorization_key",
                "connectionProtocol": "connection_protocol",
                "dpdTimeoutSeconds": "dpd_timeout_seconds",
                "egressBytesTransferred": "egress_bytes_transferred",
                "enableBgp": "enable_bgp",
                "expressRouteCircuitId": "express_route_circuit_id",
                "expressRouteGatewayBypass": "express_route_gateway_bypass",
                "ingressBytesTransferred": "ingress_bytes_transferred",
                "ipsecPolicies": "ipsec_policy",
                "localAzureIpAddressEnabled": "local_azure_ip_address_enabled",
                "localNetworkGatewayId": "local_network_gateway_id",
                "peerVirtualNetworkGatewayId": "peer_virtual_network_gateway_id",
                "resourceGroupName": "resource_group_name",
                "resourceGuid": "resource_guid",
                "routingWeight": "routing_weight",
                "sharedKey": "shared_key",
                "trafficSelectorPolicies": "traffic_selector_policy",
                "usePolicyBasedTrafficSelectors": "use_policy_based_traffic_selectors",
                "virtualNetworkGatewayId": "virtual_network_gateway_id"
            },
            "azure:network/getGatewayConnectionIpsecPolicy:getGatewayConnectionIpsecPolicy": {
                "dhGroup": "dh_group",
                "ikeEncryption": "ike_encryption",
                "ikeIntegrity": "ike_integrity",
                "ipsecEncryption": "ipsec_encryption",
                "ipsecIntegrity": "ipsec_integrity",
                "pfsGroup": "pfs_group",
                "saDatasize": "sa_datasize",
                "saLifetime": "sa_lifetime"
            },
            "azure:network/getGatewayConnectionTrafficSelectorPolicy:getGatewayConnectionTrafficSelectorPolicy": {
                "localAddressCidrs": "local_address_cidrs",
                "remoteAddressCidrs": "remote_address_cidrs"
            },
            "azure:network/getIpGroup:getIpGroup": {
                "resourceGroupName": "resource_group_name"
            },
            "azure:network/getLocalNetworkGateway:getLocalNetworkGateway": {
                "addressSpaces": "address_space",
                "bgpSettings": "bgp_settings",
                "gatewayAddress": "gateway_address",
                "gatewayFqdn": "gateway_fqdn",
                "resourceGroupName": "resource_group_name"
            },
            "azure:network/getLocalNetworkGatewayBgpSetting:getLocalNetworkGatewayBgpSetting": {
                "bgpPeeringAddress": "bgp_peering_address",
                "peerWeight": "peer_weight"
            },
            "azure:network/getNatGateway:getNatGateway": {
                "idleTimeoutInMinutes": "idle_timeout_in_minutes",
                "publicIpAddressIds": "public_ip_address_ids",
                "publicIpPrefixIds": "public_ip_prefix_ids",
                "resourceGroupName": "resource_group_name",
                "resourceGuid": "resource_guid",
                "skuName": "sku_name"
            },
            "azure:network/getNetworkDdosProtectionPlan:getNetworkDdosProtectionPlan": {
                "resourceGroupName": "resource_group_name",
                "virtualNetworkIds": "virtual_network_ids"
            },
            "azure:network/getNetworkInterface:getNetworkInterface": {
                "appliedDnsServers": "applied_dns_servers",
                "dnsServers": "dns_servers",
                "enableAcceleratedNetworking": "enable_accelerated_networking",
                "enableIpForwarding": "enable_ip_forwarding",
                "internalDnsNameLabel": "internal_dns_name_label",
                "ipConfigurations": "ip_configuration",
                "macAddress": "mac_address",
                "networkSecurityGroupId": "network_security_group_id",
                "privateIpAddress": "private_ip_address",
                "privateIpAddresses": "private_ip_addresses",
                "resourceGroupName": "resource_group_name",
                "virtualMachineId": "virtual_machine_id"
            },
            "azure:network/getNetworkInterfaceIpConfiguration:getNetworkInterfaceIpConfiguration": {
                "applicationGatewayBackendAddressPoolsIds": "application_gateway_backend_address_pools_ids",
                "applicationSecurityGroupIds": "application_security_group_ids",
                "gatewayLoadBalancerFrontendIpConfigurationId": "gateway_load_balancer_frontend_ip_configuration_id",
                "loadBalancerBackendAddressPoolsIds": "load_balancer_backend_address_pools_ids",
                "loadBalancerInboundNatRulesIds": "load_balancer_inbound_nat_rules_ids",
                "privateIpAddress": "private_ip_address",
                "privateIpAddressAllocation": "private_ip_address_allocation",
                "privateIpAddressVersion": "private_ip_address_version",
                "publicIpAddressId": "public_ip_address_id",
                "subnetId": "subnet_id"
            },
            "azure:network/getNetworkManagerNetworkGroup:getNetworkManagerNetworkGroup": {
                "networkManagerId": "network_manager_id"
            },
            "azure:network/getNetworkSecurityGroup:getNetworkSecurityGroup": {
                "resourceGroupName": "resource_group_name",
                "securityRules": "security_rule"
            },
            "azure:network/getNetworkSecurityGroupSecurityRule:getNetworkSecurityGroupSecurityRule": {
                "destinationAddressPrefix": "destination_address_prefix",
                "destinationAddressPrefixes": "destination_address_prefixes",
                "destinationApplicationSecurityGroupIds": "destination_application_security_group_ids",
                "destinationPortRange": "destination_port_range",
                "destinationPortRanges": "destination_port_ranges",
                "sourceAddressPrefix": "source_address_prefix",
                "sourceAddressPrefixes": "source_address_prefixes",
                "sourceApplicationSecurityGroupIds": "source_application_security_group_ids",
                "sourcePortRange": "source_port_range",
                "sourcePortRanges": "source_port_ranges"
            },
            "azure:network/getNetworkWatcher:getNetworkWatcher": {
                "resourceGroupName": "resource_group_name"
            },
            "azure:network/getPublicIP:getPublicIP": {
                "allocationMethod": "allocation_method",
                "ddosProtectionMode": "ddos_protection_mode",
                "ddosProtectionPlanId": "ddos_protection_plan_id",
                "domainNameLabel": "domain_name_label",
                "idleTimeoutInMinutes": "idle_timeout_in_minutes",
                "ipAddress": "ip_address",
                "ipTags": "ip_tags",
                "ipVersion": "ip_version",
                "resourceGroupName": "resource_group_name",
                "reverseFqdn": "reverse_fqdn"
            },
            "azure:network/getPublicIPs:getPublicIPs": {
                "allocationType": "allocation_type",
                "attachmentStatus": "attachment_status",
                "namePrefix": "name_prefix",
                "publicIps": "public_ips",
                "resourceGroupName": "resource_group_name"
            },
            "azure:network/getPublicIPsPublicIp:getPublicIPsPublicIp": {
                "domainNameLabel": "domain_name_label",
                "ipAddress": "ip_address"
            },
            "azure:network/getPublicIpPrefix:getPublicIpPrefix": {
                "ipPrefix": "ip_prefix",
                "prefixLength": "prefix_length",
                "resourceGroupName": "resource_group_name"
            },
            "azure:network/getRouteFilter:getRouteFilter": {
                "resourceGroupName": "resource_group_name",
                "rules": "rule"
            },
            "azure:network/getRouteFilterRule:getRouteFilterRule": {
                "ruleType": "rule_type"
            },
            "azure:network/getRouteTable:getRouteTable": {
                "bgpRoutePropagationEnabled": "bgp_route_propagation_enabled",
                "resourceGroupName": "resource_group_name",
                "routes": "route"
            },
            "azure:network/getRouteTableRoute:getRouteTableRoute": {
                "addressPrefix": "address_prefix",
                "nextHopInIpAddress": "next_hop_in_ip_address",
                "nextHopType": "next_hop_type"
            },
            "azure:network/getServiceTags:getServiceTags": {
                "addressPrefixes": "address_prefixes",
                "ipv4Cidrs": "ipv4_cidrs",
                "ipv6Cidrs": "ipv6_cidrs",
                "locationFilter": "location_filter"
            },
            "azure:network/getSubnet:getSubnet": {
                "addressPrefix": "address_prefix",
                "addressPrefixes": "address_prefixes",
                "enforcePrivateLinkEndpointNetworkPolicies": "enforce_private_link_endpoint_network_policies",
                "enforcePrivateLinkServiceNetworkPolicies": "enforce_private_link_service_network_policies",
                "networkSecurityGroupId": "network_security_group_id",
                "privateEndpointNetworkPoliciesEnabled": "private_endpoint_network_policies_enabled",
                "privateLinkServiceNetworkPoliciesEnabled": "private_link_service_network_policies_enabled",
                "resourceGroupName": "resource_group_name",
                "routeTableId": "route_table_id",
                "serviceEndpoints": "service_endpoints",
                "virtualNetworkName": "virtual_network_name"
            },
            "azure:network/getTrafficManagerProfile:getTrafficManagerProfile": {
                "dnsConfigs": "dns_config",
                "monitorConfigs": "monitor_config",
                "profileStatus": "profile_status",
                "resourceGroupName": "resource_group_name",
                "trafficRoutingMethod": "traffic_routing_method",
                "trafficViewEnabled": "traffic_view_enabled"
            },
            "azure:network/getTrafficManagerProfileDnsConfig:getTrafficManagerProfileDnsConfig": {
                "relativeName": "relative_name"
            },
            "azure:network/getTrafficManagerProfileMonitorConfig:getTrafficManagerProfileMonitorConfig": {
                "customHeaders": "custom_header",
                "expectedStatusCodeRanges": "expected_status_code_ranges",
                "intervalInSeconds": "interval_in_seconds",
                "timeoutInSeconds": "timeout_in_seconds",
                "toleratedNumberOfFailures": "tolerated_number_of_failures"
            },
            "azure:network/getVirtualHub:getVirtualHub": {
                "addressPrefix": "address_prefix",
                "defaultRouteTableId": "default_route_table_id",
                "resourceGroupName": "resource_group_name",
                "virtualRouterAsn": "virtual_router_asn",
                "virtualRouterIps": "virtual_router_ips",
                "virtualWanId": "virtual_wan_id"
            },
            "azure:network/getVirtualHubConnection:getVirtualHubConnection": {
                "internetSecurityEnabled": "internet_security_enabled",
                "remoteVirtualNetworkId": "remote_virtual_network_id",
                "resourceGroupName": "resource_group_name",
                "routings": "routing",
                "virtualHubId": "virtual_hub_id",
                "virtualHubName": "virtual_hub_name"
            },
            "azure:network/getVirtualHubConnectionRouting:getVirtualHubConnectionRouting": {
                "associatedRouteTableId": "associated_route_table_id",
                "inboundRouteMapId": "inbound_route_map_id",
                "outboundRouteMapId": "outbound_route_map_id",
                "propagatedRouteTables": "propagated_route_table",
                "staticVnetLocalRouteOverrideCriteria": "static_vnet_local_route_override_criteria",
                "staticVnetRoutes": "static_vnet_route"
            },
            "azure:network/getVirtualHubConnectionRoutingPropagatedRouteTable:getVirtualHubConnectionRoutingPropagatedRouteTable": {
                "routeTableIds": "route_table_ids"
            },
            "azure:network/getVirtualHubConnectionRoutingStaticVnetRoute:getVirtualHubConnectionRoutingStaticVnetRoute": {
                "addressPrefixes": "address_prefixes",
                "nextHopIpAddress": "next_hop_ip_address"
            },
            "azure:network/getVirtualHubRouteTable:getVirtualHubRouteTable": {
                "resourceGroupName": "resource_group_name",
                "routes": "route",
                "virtualHubId": "virtual_hub_id",
                "virtualHubName": "virtual_hub_name"
            },
            "azure:network/getVirtualHubRouteTableRoute:getVirtualHubRouteTableRoute": {
                "destinationsType": "destinations_type",
                "nextHop": "next_hop",
                "nextHopType": "next_hop_type"
            },
            "azure:network/getVirtualNetwork:getVirtualNetwork": {
                "addressSpaces": "address_space",
                "dnsServers": "dns_servers",
                "resourceGroupName": "resource_group_name",
                "vnetPeerings": "vnet_peerings",
                "vnetPeeringsAddresses": "vnet_peerings_addresses"
            },
            "azure:network/getVirtualNetworkGateway:getVirtualNetworkGateway": {
                "activeActive": "active_active",
                "bgpSettings": "bgp_settings",
                "customRoutes": "custom_route",
                "defaultLocalNetworkGatewayId": "default_local_network_gateway_id",
                "enableBgp": "enable_bgp",
                "ipConfigurations": "ip_configuration",
                "privateIpAddressEnabled": "private_ip_address_enabled",
                "resourceGroupName": "resource_group_name",
                "vpnClientConfigurations": "vpn_client_configuration",
                "vpnType": "vpn_type"
            },
            "azure:network/getVirtualNetworkGatewayBgpSetting:getVirtualNetworkGatewayBgpSetting": {
                "peerWeight": "peer_weight",
                "peeringAddress": "peering_address"
            },
            "azure:network/getVirtualNetworkGatewayCustomRoute:getVirtualNetworkGatewayCustomRoute": {
                "addressPrefixes": "address_prefixes"
            },
            "azure:network/getVirtualNetworkGatewayIpConfiguration:getVirtualNetworkGatewayIpConfiguration": {
                "privateIpAddress": "private_ip_address",
                "privateIpAddressAllocation": "private_ip_address_allocation",
                "publicIpAddressId": "public_ip_address_id",
                "subnetId": "subnet_id"
            },
            "azure:network/getVirtualNetworkGatewayVpnClientConfiguration:getVirtualNetworkGatewayVpnClientConfiguration": {
                "aadAudience": "aad_audience",
                "aadIssuer": "aad_issuer",
                "aadTenant": "aad_tenant",
                "addressSpaces": "address_space",
                "radiusServerAddress": "radius_server_address",
                "radiusServerSecret": "radius_server_secret",
                "revokedCertificates": "revoked_certificate",
                "rootCertificates": "root_certificate",
                "vpnClientProtocols": "vpn_client_protocols"
            },
            "azure:network/getVirtualNetworkGatewayVpnClientConfigurationRootCertificate:getVirtualNetworkGatewayVpnClientConfigurationRootCertificate": {
                "publicCertData": "public_cert_data"
            },
            "azure:network/getVirtualWan:getVirtualWan": {
                "allowBranchToBranchTraffic": "allow_branch_to_branch_traffic",
                "disableVpnEncryption": "disable_vpn_encryption",
                "office365LocalBreakoutCategory": "office365_local_breakout_category",
                "resourceGroupName": "resource_group_name",
                "virtualHubIds": "virtual_hub_ids",
                "vpnSiteIds": "vpn_site_ids"
            },
            "azure:network/getVpnGateway:getVpnGateway": {
                "bgpSettings": "bgp_settings",
                "resourceGroupName": "resource_group_name",
                "scaleUnit": "scale_unit",
                "virtualHubId": "virtual_hub_id"
            },
            "azure:network/getVpnGatewayBgpSetting:getVpnGatewayBgpSetting": {
                "bgpPeeringAddress": "bgp_peering_address",
                "instance0BgpPeeringAddresses": "instance_0_bgp_peering_address",
                "instance1BgpPeeringAddresses": "instance_1_bgp_peering_address",
                "peerWeight": "peer_weight"
            },
            "azure:network/getVpnGatewayBgpSettingInstance0BgpPeeringAddress:getVpnGatewayBgpSettingInstance0BgpPeeringAddress": {
                "customIps": "custom_ips",
                "defaultIps": "default_ips",
                "ipConfigurationId": "ip_configuration_id",
                "tunnelIps": "tunnel_ips"
            },
            "azure:network/getVpnGatewayBgpSettingInstance1BgpPeeringAddress:getVpnGatewayBgpSettingInstance1BgpPeeringAddress": {
                "customIps": "custom_ips",
                "defaultIps": "default_ips",
                "ipConfigurationId": "ip_configuration_id",
                "tunnelIps": "tunnel_ips"
            },
            "azure:network/iPGroup:IPGroup": {
                "firewallIds": "firewall_ids",
                "firewallPolicyIds": "firewall_policy_ids",
                "resourceGroupName": "resource_group_name"
            },
            "azure:network/iPGroupCIDR:IPGroupCIDR": {
                "ipGroupId": "ip_group_id"
            },
            "azure:network/localNetworkGateway:LocalNetworkGateway": {
                "addressSpaces": "address_space",
                "bgpSettings": "bgp_settings",
                "gatewayAddress": "gateway_address",
                "gatewayFqdn": "gateway_fqdn",
                "resourceGroupName": "resource_group_name"
            },
            "azure:network/natGateway:NatGateway": {
                "idleTimeoutInMinutes": "idle_timeout_in_minutes",
                "resourceGroupName": "resource_group_name",
                "resourceGuid": "resource_guid",
                "skuName": "sku_name"
            },
            "azure:network/natGatewayPublicIpAssociation:NatGatewayPublicIpAssociation": {
                "natGatewayId": "nat_gateway_id",
                "publicIpAddressId": "public_ip_address_id"
            },
            "azure:network/natGatewayPublicIpPrefixAssociation:NatGatewayPublicIpPrefixAssociation": {
                "natGatewayId": "nat_gateway_id",
                "publicIpPrefixId": "public_ip_prefix_id"
            },
            "azure:network/networkConnectionMonitor:NetworkConnectionMonitor": {
                "endpoints": "endpoint",
                "networkWatcherId": "network_watcher_id",
                "outputWorkspaceResourceIds": "output_workspace_resource_ids",
                "testConfigurations": "test_configuration",
                "testGroups": "test_group"
            },
            "azure:network/networkInterface:NetworkInterface": {
                "appliedDnsServers": "applied_dns_servers",
                "auxiliaryMode": "auxiliary_mode",
                "auxiliarySku": "auxiliary_sku",
                "dnsServers": "dns_servers",
                "edgeZone": "edge_zone",
                "enableAcceleratedNetworking": "enable_accelerated_networking",
                "enableIpForwarding": "enable_ip_forwarding",
                "internalDnsNameLabel": "internal_dns_name_label",
                "internalDomainNameSuffix": "internal_domain_name_suffix",
                "ipConfigurations": "ip_configuration",
                "macAddress": "mac_address",
                "privateIpAddress": "private_ip_address",
                "privateIpAddresses": "private_ip_addresses",
                "resourceGroupName": "resource_group_name",
                "virtualMachineId": "virtual_machine_id"
            },
            "azure:network/networkInterfaceApplicationGatewayBackendAddressPoolAssociation:NetworkInterfaceApplicationGatewayBackendAddressPoolAssociation": {
                "backendAddressPoolId": "backend_address_pool_id",
                "ipConfigurationName": "ip_configuration_name",
                "networkInterfaceId": "network_interface_id"
            },
            "azure:network/networkInterfaceApplicationSecurityGroupAssociation:NetworkInterfaceApplicationSecurityGroupAssociation": {
                "applicationSecurityGroupId": "application_security_group_id",
                "networkInterfaceId": "network_interface_id"
            },
            "azure:network/networkInterfaceBackendAddressPoolAssociation:NetworkInterfaceBackendAddressPoolAssociation": {
                "backendAddressPoolId": "backend_address_pool_id",
                "ipConfigurationName": "ip_configuration_name",
                "networkInterfaceId": "network_interface_id"
            },
            "azure:network/networkInterfaceNatRuleAssociation:NetworkInterfaceNatRuleAssociation": {
                "ipConfigurationName": "ip_configuration_name",
                "natRuleId": "nat_rule_id",
                "networkInterfaceId": "network_interface_id"
            },
            "azure:network/networkInterfaceSecurityGroupAssociation:NetworkInterfaceSecurityGroupAssociation": {
                "networkInterfaceId": "network_interface_id",
                "networkSecurityGroupId": "network_security_group_id"
            },
            "azure:network/networkManager:NetworkManager": {
                "crossTenantScopes": "cross_tenant_scopes",
                "resourceGroupName": "resource_group_name",
                "scopeAccesses": "scope_accesses"
            },
            "azure:network/networkManagerAdminRule:NetworkManagerAdminRule": {
                "adminRuleCollectionId": "admin_rule_collection_id",
                "destinationPortRanges": "destination_port_ranges",
                "destinations": "destination",
                "sourcePortRanges": "source_port_ranges",
                "sources": "source"
            },
            "azure:network/networkManagerAdminRuleCollection:NetworkManagerAdminRuleCollection": {
                "networkGroupIds": "network_group_ids",
                "securityAdminConfigurationId": "security_admin_configuration_id"
            },
            "azure:network/networkManagerConnectivityConfiguration:NetworkManagerConnectivityConfiguration": {
                "appliesToGroups": "applies_to_group",
                "connectivityTopology": "connectivity_topology",
                "deleteExistingPeeringEnabled": "delete_existing_peering_enabled",
                "globalMeshEnabled": "global_mesh_enabled",
                "networkManagerId": "network_manager_id"
            },
            "azure:network/networkManagerDeployment:NetworkManagerDeployment": {
                "configurationIds": "configuration_ids",
                "networkManagerId": "network_manager_id",
                "scopeAccess": "scope_access"
            },
            "azure:network/networkManagerManagementGroupConnection:NetworkManagerManagementGroupConnection": {
                "connectionState": "connection_state",
                "managementGroupId": "management_group_id",
                "networkManagerId": "network_manager_id"
            },
            "azure:network/networkManagerNetworkGroup:NetworkManagerNetworkGroup": {
                "networkManagerId": "network_manager_id"
            },
            "azure:network/networkManagerScopeConnection:NetworkManagerScopeConnection": {
                "connectionState": "connection_state",
                "networkManagerId": "network_manager_id",
                "targetScopeId": "target_scope_id",
                "tenantId": "tenant_id"
            },
            "azure:network/networkManagerSecurityAdminConfiguration:NetworkManagerSecurityAdminConfiguration": {
                "applyOnNetworkIntentPolicyBasedServices": "apply_on_network_intent_policy_based_services",
                "networkManagerId": "network_manager_id"
            },
            "azure:network/networkManagerStaticMember:NetworkManagerStaticMember": {
                "networkGroupId": "network_group_id",
                "targetVirtualNetworkId": "target_virtual_network_id"
            },
            "azure:network/networkManagerSubscriptionConnection:NetworkManagerSubscriptionConnection": {
                "connectionState": "connection_state",
                "networkManagerId": "network_manager_id",
                "subscriptionId": "subscription_id"
            },
            "azure:network/networkPacketCapture:NetworkPacketCapture": {
                "filters": "filter",
                "maximumBytesPerPacket": "maximum_bytes_per_packet",
                "maximumBytesPerSession": "maximum_bytes_per_session",
                "maximumCaptureDuration": "maximum_capture_duration",
                "networkWatcherName": "network_watcher_name",
                "resourceGroupName": "resource_group_name",
                "storageLocation": "storage_location",
                "targetResourceId": "target_resource_id"
            },
            "azure:network/networkSecurityGroup:NetworkSecurityGroup": {
                "resourceGroupName": "resource_group_name",
                "securityRules": "security_rule"
            },
            "azure:network/networkSecurityRule:NetworkSecurityRule": {
                "destinationAddressPrefix": "destination_address_prefix",
                "destinationAddressPrefixes": "destination_address_prefixes",
                "destinationApplicationSecurityGroupIds": "destination_application_security_group_ids",
                "destinationPortRange": "destination_port_range",
                "destinationPortRanges": "destination_port_ranges",
                "networkSecurityGroupName": "network_security_group_name",
                "resourceGroupName": "resource_group_name",
                "sourceAddressPrefix": "source_address_prefix",
                "sourceAddressPrefixes": "source_address_prefixes",
                "sourceApplicationSecurityGroupIds": "source_application_security_group_ids",
                "sourcePortRange": "source_port_range",
                "sourcePortRanges": "source_port_ranges"
            },
            "azure:network/networkWatcher:NetworkWatcher": {
                "resourceGroupName": "resource_group_name"
            },
            "azure:network/networkWatcherFlowLog:NetworkWatcherFlowLog": {
                "networkSecurityGroupId": "network_security_group_id",
                "networkWatcherName": "network_watcher_name",
                "resourceGroupName": "resource_group_name",
                "retentionPolicy": "retention_policy",
                "storageAccountId": "storage_account_id",
                "trafficAnalytics": "traffic_analytics"
            },
            "azure:network/pointToPointVpnGateway:PointToPointVpnGateway": {
                "connectionConfiguration": "connection_configuration",
                "dnsServers": "dns_servers",
                "resourceGroupName": "resource_group_name",
                "routingPreferenceInternetEnabled": "routing_preference_internet_enabled",
                "scaleUnit": "scale_unit",
                "virtualHubId": "virtual_hub_id",
                "vpnServerConfigurationId": "vpn_server_configuration_id"
            },
            "azure:network/profile:Profile": {
                "containerNetworkInterface": "container_network_interface",
                "containerNetworkInterfaceIds": "container_network_interface_ids",
                "resourceGroupName": "resource_group_name"
            },
            "azure:network/publicIp:PublicIp": {
                "allocationMethod": "allocation_method",
                "ddosProtectionMode": "ddos_protection_mode",
                "ddosProtectionPlanId": "ddos_protection_plan_id",
                "domainNameLabel": "domain_name_label",
                "edgeZone": "edge_zone",
                "idleTimeoutInMinutes": "idle_timeout_in_minutes",
                "ipAddress": "ip_address",
                "ipTags": "ip_tags",
                "ipVersion": "ip_version",
                "publicIpPrefixId": "public_ip_prefix_id",
                "resourceGroupName": "resource_group_name",
                "reverseFqdn": "reverse_fqdn",
                "skuTier": "sku_tier"
            },
            "azure:network/publicIpPrefix:PublicIpPrefix": {
                "ipPrefix": "ip_prefix",
                "ipVersion": "ip_version",
                "prefixLength": "prefix_length",
                "resourceGroupName": "resource_group_name"
            },
            "azure:network/route:Route": {
                "addressPrefix": "address_prefix",
                "nextHopInIpAddress": "next_hop_in_ip_address",
                "nextHopType": "next_hop_type",
                "resourceGroupName": "resource_group_name",
                "routeTableName": "route_table_name"
            },
            "azure:network/routeFilter:RouteFilter": {
                "resourceGroupName": "resource_group_name"
            },
            "azure:network/routeMap:RouteMap": {
                "rules": "rule",
                "virtualHubId": "virtual_hub_id"
            },
            "azure:network/routeServer:RouteServer": {
                "branchToBranchTrafficEnabled": "branch_to_branch_traffic_enabled",
                "publicIpAddressId": "public_ip_address_id",
                "resourceGroupName": "resource_group_name",
                "routingState": "routing_state",
                "subnetId": "subnet_id",
                "virtualRouterAsn": "virtual_router_asn",
                "virtualRouterIps": "virtual_router_ips"
            },
            "azure:network/routeServerBgpConnection:RouteServerBgpConnection": {
                "peerAsn": "peer_asn",
                "peerIp": "peer_ip",
                "routeServerId": "route_server_id"
            },
            "azure:network/routeTable:RouteTable": {
                "disableBgpRoutePropagation": "disable_bgp_route_propagation",
                "resourceGroupName": "resource_group_name",
                "routes": "route"
            },
            "azure:network/routingIntent:RoutingIntent": {
                "routingPolicies": "routing_policy",
                "virtualHubId": "virtual_hub_id"
            },
            "azure:network/securityPartnerProvider:SecurityPartnerProvider": {
                "resourceGroupName": "resource_group_name",
                "securityProviderName": "security_provider_name",
                "virtualHubId": "virtual_hub_id"
            },
            "azure:network/subnet:Subnet": {
                "addressPrefixes": "address_prefixes",
                "delegations": "delegation",
                "enforcePrivateLinkEndpointNetworkPolicies": "enforce_private_link_endpoint_network_policies",
                "enforcePrivateLinkServiceNetworkPolicies": "enforce_private_link_service_network_policies",
                "privateEndpointNetworkPoliciesEnabled": "private_endpoint_network_policies_enabled",
                "privateLinkServiceNetworkPoliciesEnabled": "private_link_service_network_policies_enabled",
                "resourceGroupName": "resource_group_name",
                "serviceEndpointPolicyIds": "service_endpoint_policy_ids",
                "serviceEndpoints": "service_endpoints",
                "virtualNetworkName": "virtual_network_name"
            },
            "azure:network/subnetNatGatewayAssociation:SubnetNatGatewayAssociation": {
                "natGatewayId": "nat_gateway_id",
                "subnetId": "subnet_id"
            },
            "azure:network/subnetNetworkSecurityGroupAssociation:SubnetNetworkSecurityGroupAssociation": {
                "networkSecurityGroupId": "network_security_group_id",
                "subnetId": "subnet_id"
            },
            "azure:network/subnetRouteTableAssociation:SubnetRouteTableAssociation": {
                "routeTableId": "route_table_id",
                "subnetId": "subnet_id"
            },
            "azure:network/subnetServiceEndpointStoragePolicy:SubnetServiceEndpointStoragePolicy": {
                "resourceGroupName": "resource_group_name"
            },
            "azure:network/trafficManagerAzureEndpoint:TrafficManagerAzureEndpoint": {
                "customHeaders": "custom_header",
                "geoMappings": "geo_mappings",
                "profileId": "profile_id",
                "subnets": "subnet",
                "targetResourceId": "target_resource_id"
            },
            "azure:network/trafficManagerExternalEndpoint:TrafficManagerExternalEndpoint": {
                "customHeaders": "custom_header",
                "endpointLocation": "endpoint_location",
                "geoMappings": "geo_mappings",
                "profileId": "profile_id",
                "subnets": "subnet"
            },
            "azure:network/trafficManagerNestedEndpoint:TrafficManagerNestedEndpoint": {
                "customHeaders": "custom_header",
                "endpointLocation": "endpoint_location",
                "geoMappings": "geo_mappings",
                "minimumChildEndpoints": "minimum_child_endpoints",
                "minimumRequiredChildEndpointsIpv4": "minimum_required_child_endpoints_ipv4",
                "minimumRequiredChildEndpointsIpv6": "minimum_required_child_endpoints_ipv6",
                "profileId": "profile_id",
                "subnets": "subnet",
                "targetResourceId": "target_resource_id"
            },
            "azure:network/trafficManagerProfile:TrafficManagerProfile": {
                "dnsConfig": "dns_config",
                "maxReturn": "max_return",
                "monitorConfig": "monitor_config",
                "profileStatus": "profile_status",
                "resourceGroupName": "resource_group_name",
                "trafficRoutingMethod": "traffic_routing_method",
                "trafficViewEnabled": "traffic_view_enabled"
            },
            "azure:network/virtualHub:VirtualHub": {
                "addressPrefix": "address_prefix",
                "defaultRouteTableId": "default_route_table_id",
                "hubRoutingPreference": "hub_routing_preference",
                "resourceGroupName": "resource_group_name",
                "routes": "route",
                "virtualRouterAsn": "virtual_router_asn",
                "virtualRouterAutoScaleMinCapacity": "virtual_router_auto_scale_min_capacity",
                "virtualRouterIps": "virtual_router_ips",
                "virtualWanId": "virtual_wan_id"
            },
            "azure:network/virtualHubConnection:VirtualHubConnection": {
                "internetSecurityEnabled": "internet_security_enabled",
                "remoteVirtualNetworkId": "remote_virtual_network_id",
                "virtualHubId": "virtual_hub_id"
            },
            "azure:network/virtualHubIp:VirtualHubIp": {
                "privateIpAddress": "private_ip_address",
                "privateIpAllocationMethod": "private_ip_allocation_method",
                "publicIpAddressId": "public_ip_address_id",
                "subnetId": "subnet_id",
                "virtualHubId": "virtual_hub_id"
            },
            "azure:network/virtualHubRouteTable:VirtualHubRouteTable": {
                "routes": "route",
                "virtualHubId": "virtual_hub_id"
            },
            "azure:network/virtualHubRouteTableRoute:VirtualHubRouteTableRoute": {
                "destinationsType": "destinations_type",
                "nextHop": "next_hop",
                "nextHopType": "next_hop_type",
                "routeTableId": "route_table_id"
            },
            "azure:network/virtualNetwork:VirtualNetwork": {
                "addressSpaces": "address_space",
                "bgpCommunity": "bgp_community",
                "ddosProtectionPlan": "ddos_protection_plan",
                "dnsServers": "dns_servers",
                "edgeZone": "edge_zone",
                "flowTimeoutInMinutes": "flow_timeout_in_minutes",
                "resourceGroupName": "resource_group_name",
                "subnets": "subnet"
            },
            "azure:network/virtualNetworkDnsServers:VirtualNetworkDnsServers": {
                "dnsServers": "dns_servers",
                "virtualNetworkId": "virtual_network_id"
            },
            "azure:network/virtualNetworkGateway:VirtualNetworkGateway": {
                "activeActive": "active_active",
                "bgpRouteTranslationForNatEnabled": "bgp_route_translation_for_nat_enabled",
                "bgpSettings": "bgp_settings",
                "customRoute": "custom_route",
                "defaultLocalNetworkGatewayId": "default_local_network_gateway_id",
                "dnsForwardingEnabled": "dns_forwarding_enabled",
                "edgeZone": "edge_zone",
                "enableBgp": "enable_bgp",
                "ipConfigurations": "ip_configuration",
                "ipSecReplayProtectionEnabled": "ip_sec_replay_protection_enabled",
                "policyGroups": "policy_group",
                "privateIpAddressEnabled": "private_ip_address_enabled",
                "remoteVnetTrafficEnabled": "remote_vnet_traffic_enabled",
                "resourceGroupName": "resource_group_name",
                "virtualWanTrafficEnabled": "virtual_wan_traffic_enabled",
                "vpnClientConfiguration": "vpn_client_configuration",
                "vpnType": "vpn_type"
            },
            "azure:network/virtualNetworkGatewayConnection:VirtualNetworkGatewayConnection": {
                "authorizationKey": "authorization_key",
                "connectionMode": "connection_mode",
                "connectionProtocol": "connection_protocol",
                "customBgpAddresses": "custom_bgp_addresses",
                "dpdTimeoutSeconds": "dpd_timeout_seconds",
                "egressNatRuleIds": "egress_nat_rule_ids",
                "enableBgp": "enable_bgp",
                "expressRouteCircuitId": "express_route_circuit_id",
                "expressRouteGatewayBypass": "express_route_gateway_bypass",
                "ingressNatRuleIds": "ingress_nat_rule_ids",
                "ipsecPolicy": "ipsec_policy",
                "localAzureIpAddressEnabled": "local_azure_ip_address_enabled",
                "localNetworkGatewayId": "local_network_gateway_id",
                "peerVirtualNetworkGatewayId": "peer_virtual_network_gateway_id",
                "resourceGroupName": "resource_group_name",
                "routingWeight": "routing_weight",
                "sharedKey": "shared_key",
                "trafficSelectorPolicy": "traffic_selector_policy",
                "usePolicyBasedTrafficSelectors": "use_policy_based_traffic_selectors",
                "virtualNetworkGatewayId": "virtual_network_gateway_id"
            },
            "azure:network/virtualNetworkGatewayNatRule:VirtualNetworkGatewayNatRule": {
                "externalMappings": "external_mapping",
                "internalMappings": "internal_mapping",
                "ipConfigurationId": "ip_configuration_id",
                "resourceGroupName": "resource_group_name",
                "virtualNetworkGatewayId": "virtual_network_gateway_id"
            },
            "azure:network/virtualNetworkPeering:VirtualNetworkPeering": {
                "allowForwardedTraffic": "allow_forwarded_traffic",
                "allowGatewayTransit": "allow_gateway_transit",
                "allowVirtualNetworkAccess": "allow_virtual_network_access",
                "remoteVirtualNetworkId": "remote_virtual_network_id",
                "resourceGroupName": "resource_group_name",
                "useRemoteGateways": "use_remote_gateways",
                "virtualNetworkName": "virtual_network_name"
            },
            "azure:network/virtualWan:VirtualWan": {
                "allowBranchToBranchTraffic": "allow_branch_to_branch_traffic",
                "disableVpnEncryption": "disable_vpn_encryption",
                "office365LocalBreakoutCategory": "office365_local_breakout_category",
                "resourceGroupName": "resource_group_name"
            },
            "azure:network/vnpGatewayNatRule:VnpGatewayNatRule": {
                "externalAddressSpaceMappings": "external_address_space_mappings",
                "externalMappings": "external_mapping",
                "internalAddressSpaceMappings": "internal_address_space_mappings",
                "internalMappings": "internal_mapping",
                "ipConfigurationId": "ip_configuration_id",
                "resourceGroupName": "resource_group_name",
                "vpnGatewayId": "vpn_gateway_id"
            },
            "azure:network/vpnGateway:VpnGateway": {
                "bgpRouteTranslationForNatEnabled": "bgp_route_translation_for_nat_enabled",
                "bgpSettings": "bgp_settings",
                "resourceGroupName": "resource_group_name",
                "routingPreference": "routing_preference",
                "scaleUnit": "scale_unit",
                "virtualHubId": "virtual_hub_id"
            },
            "azure:network/vpnGatewayConnection:VpnGatewayConnection": {
                "internetSecurityEnabled": "internet_security_enabled",
                "remoteVpnSiteId": "remote_vpn_site_id",
                "trafficSelectorPolicies": "traffic_selector_policy",
                "vpnGatewayId": "vpn_gateway_id",
                "vpnLinks": "vpn_link"
            },
            "azure:network/vpnServerConfiguration:VpnServerConfiguration": {
                "azureActiveDirectoryAuthentications": "azure_active_directory_authentication",
                "clientRevokedCertificates": "client_revoked_certificate",
                "clientRootCertificates": "client_root_certificate",
                "ipsecPolicy": "ipsec_policy",
                "resourceGroupName": "resource_group_name",
                "vpnAuthenticationTypes": "vpn_authentication_types",
                "vpnProtocols": "vpn_protocols"
            },
            "azure:network/vpnServerConfigurationPolicyGroup:VpnServerConfigurationPolicyGroup": {
                "isDefault": "is_default",
                "policies": "policy",
                "vpnServerConfigurationId": "vpn_server_configuration_id"
            },
            "azure:network/vpnSite:VpnSite": {
                "addressCidrs": "address_cidrs",
                "deviceModel": "device_model",
                "deviceVendor": "device_vendor",
                "links": "link",
                "o365Policy": "o365_policy",
                "resourceGroupName": "resource_group_name",
                "virtualWanId": "virtual_wan_id"
            },
            "azure:networkfunction/CollectorPolicyIpfxEmission:CollectorPolicyIpfxEmission": {
                "destinationTypes": "destination_types"
            },
            "azure:networkfunction/CollectorPolicyIpfxIngestion:CollectorPolicyIpfxIngestion": {
                "sourceResourceIds": "source_resource_ids"
            },
            "azure:networkfunction/azureTrafficCollector:AzureTrafficCollector": {
                "collectorPolicyIds": "collector_policy_ids",
                "resourceGroupName": "resource_group_name",
                "virtualHubIds": "virtual_hub_id"
            },
            "azure:networkfunction/collectorPolicy:CollectorPolicy": {
                "ipfxEmission": "ipfx_emission",
                "ipfxIngestion": "ipfx_ingestion",
                "trafficCollectorId": "traffic_collector_id"
            },
            "azure:newrelic/MonitorPlan:MonitorPlan": {
                "billingCycle": "billing_cycle",
                "effectiveDate": "effective_date",
                "planId": "plan_id",
                "usageType": "usage_type"
            },
            "azure:newrelic/MonitorUser:MonitorUser": {
                "firstName": "first_name",
                "lastName": "last_name",
                "phoneNumber": "phone_number"
            },
            "azure:newrelic/monitor:Monitor": {
                "accountCreationSource": "account_creation_source",
                "accountId": "account_id",
                "ingestionKey": "ingestion_key",
                "orgCreationSource": "org_creation_source",
                "organizationId": "organization_id",
                "resourceGroupName": "resource_group_name",
                "userId": "user_id"
            },
            "azure:newrelic/tagRule:TagRule": {
                "activityLogEnabled": "activity_log_enabled",
                "azureActiveDirectoryLogEnabled": "azure_active_directory_log_enabled",
                "logTagFilters": "log_tag_filter",
                "metricEnabled": "metric_enabled",
                "metricTagFilters": "metric_tag_filter",
                "monitorId": "monitor_id",
                "subscriptionLogEnabled": "subscription_log_enabled"
            },
            "azure:nginx/ConfigurationConfigFile:ConfigurationConfigFile": {
                "virtualPath": "virtual_path"
            },
            "azure:nginx/ConfigurationProtectedFile:ConfigurationProtectedFile": {
                "virtualPath": "virtual_path"
            },
            "azure:nginx/DeploymentFrontendPrivate:DeploymentFrontendPrivate": {
                "allocationMethod": "allocation_method",
                "ipAddress": "ip_address",
                "subnetId": "subnet_id"
            },
            "azure:nginx/DeploymentFrontendPublic:DeploymentFrontendPublic": {
                "ipAddresses": "ip_address"
            },
            "azure:nginx/DeploymentIdentity:DeploymentIdentity": {
                "identityIds": "identity_ids",
                "principalId": "principal_id",
                "tenantId": "tenant_id"
            },
            "azure:nginx/DeploymentLoggingStorageAccount:DeploymentLoggingStorageAccount": {
                "containerName": "container_name"
            },
            "azure:nginx/DeploymentNetworkInterface:DeploymentNetworkInterface": {
                "subnetId": "subnet_id"
            },
            "azure:nginx/certificate:Certificate": {
                "certificateVirtualPath": "certificate_virtual_path",
                "keyVaultSecretId": "key_vault_secret_id",
                "keyVirtualPath": "key_virtual_path",
                "nginxDeploymentId": "nginx_deployment_id"
            },
            "azure:nginx/configuration:Configuration": {
                "configFiles": "config_file",
                "nginxDeploymentId": "nginx_deployment_id",
                "packageData": "package_data",
                "protectedFiles": "protected_file",
                "rootFile": "root_file"
            },
            "azure:nginx/deployment:Deployment": {
                "diagnoseSupportEnabled": "diagnose_support_enabled",
                "frontendPrivates": "frontend_private",
                "frontendPublic": "frontend_public",
                "ipAddress": "ip_address",
                "loggingStorageAccounts": "logging_storage_account",
                "managedResourceGroup": "managed_resource_group",
                "networkInterfaces": "network_interface",
                "nginxVersion": "nginx_version",
                "resourceGroupName": "resource_group_name"
            },
            "azure:notificationhub/HubApnsCredential:HubApnsCredential": {
                "applicationMode": "application_mode",
                "bundleId": "bundle_id",
                "keyId": "key_id",
                "teamId": "team_id"
            },
            "azure:notificationhub/HubGcmCredential:HubGcmCredential": {
                "apiKey": "api_key"
            },
            "azure:notificationhub/authorizationRule:AuthorizationRule": {
                "namespaceName": "namespace_name",
                "notificationHubName": "notification_hub_name",
                "primaryAccessKey": "primary_access_key",
                "resourceGroupName": "resource_group_name",
                "secondaryAccessKey": "secondary_access_key"
            },
            "azure:notificationhub/getHub:getHub": {
                "apnsCredentials": "apns_credential",
                "gcmCredentials": "gcm_credential",
                "namespaceName": "namespace_name",
                "resourceGroupName": "resource_group_name"
            },
            "azure:notificationhub/getHubApnsCredential:getHubApnsCredential": {
                "applicationMode": "application_mode",
                "bundleId": "bundle_id",
                "keyId": "key_id",
                "teamId": "team_id"
            },
            "azure:notificationhub/getHubGcmCredential:getHubGcmCredential": {
                "apiKey": "api_key"
            },
            "azure:notificationhub/getNamespace:getNamespace": {
                "namespaceType": "namespace_type",
                "resourceGroupName": "resource_group_name",
                "servicebusEndpoint": "servicebus_endpoint"
            },
            "azure:notificationhub/hub:Hub": {
                "apnsCredential": "apns_credential",
                "gcmCredential": "gcm_credential",
                "namespaceName": "namespace_name",
                "resourceGroupName": "resource_group_name"
            },
            "azure:notificationhub/namespace:Namespace": {
                "namespaceType": "namespace_type",
                "resourceGroupName": "resource_group_name",
                "servicebusEndpoint": "servicebus_endpoint",
                "skuName": "sku_name"
            },
            "azure:operationalinsights/AnalyticsSolutionPlan:AnalyticsSolutionPlan": {
                "promotionCode": "promotion_code"
            },
            "azure:operationalinsights/AnalyticsWorkspaceIdentity:AnalyticsWorkspaceIdentity": {
                "identityIds": "identity_ids",
                "principalId": "principal_id",
                "tenantId": "tenant_id"
            },
            "azure:operationalinsights/analyticsSolution:AnalyticsSolution": {
                "resourceGroupName": "resource_group_name",
                "solutionName": "solution_name",
                "workspaceName": "workspace_name",
                "workspaceResourceId": "workspace_resource_id"
            },
            "azure:operationalinsights/analyticsWorkspace:AnalyticsWorkspace": {
                "allowResourceOnlyPermissions": "allow_resource_only_permissions",
                "cmkForQueryForced": "cmk_for_query_forced",
                "dailyQuotaGb": "daily_quota_gb",
                "dataCollectionRuleId": "data_collection_rule_id",
                "internetIngestionEnabled": "internet_ingestion_enabled",
                "internetQueryEnabled": "internet_query_enabled",
                "localAuthenticationDisabled": "local_authentication_disabled",
                "primarySharedKey": "primary_shared_key",
                "reservationCapacityInGbPerDay": "reservation_capacity_in_gb_per_day",
                "resourceGroupName": "resource_group_name",
                "retentionInDays": "retention_in_days",
                "secondarySharedKey": "secondary_shared_key",
                "workspaceId": "workspace_id"
            },
            "azure:operationalinsights/getAnalyticsWorkspace:getAnalyticsWorkspace": {
                "dailyQuotaGb": "daily_quota_gb",
                "primarySharedKey": "primary_shared_key",
                "resourceGroupName": "resource_group_name",
                "retentionInDays": "retention_in_days",
                "secondarySharedKey": "secondary_shared_key",
                "workspaceId": "workspace_id"
            },
            "azure:operationalinsights/queryPackQuery:QueryPackQuery": {
                "additionalSettingsJson": "additional_settings_json",
                "displayName": "display_name",
                "queryPackId": "query_pack_id",
                "resourceTypes": "resource_types"
            },
            "azure:orbital/ContactProfileLinkChannel:ContactProfileLinkChannel": {
                "bandwidthMhz": "bandwidth_mhz",
                "centerFrequencyMhz": "center_frequency_mhz",
                "demodulationConfiguration": "demodulation_configuration",
                "endPoints": "end_point",
                "modulationConfiguration": "modulation_configuration"
            },
            "azure:orbital/ContactProfileLinkChannelEndPoint:ContactProfileLinkChannelEndPoint": {
                "endPointName": "end_point_name",
                "ipAddress": "ip_address"
            },
            "azure:orbital/SpacecraftLink:SpacecraftLink": {
                "bandwidthMhz": "bandwidth_mhz",
                "centerFrequencyMhz": "center_frequency_mhz"
            },
            "azure:orbital/contact:Contact": {
                "contactProfileId": "contact_profile_id",
                "groundStationName": "ground_station_name",
                "reservationEndTime": "reservation_end_time",
                "reservationStartTime": "reservation_start_time",
                "spacecraftId": "spacecraft_id"
            },
            "azure:orbital/contactProfile:ContactProfile": {
                "autoTracking": "auto_tracking",
                "eventHubUri": "event_hub_uri",
                "minimumElevationDegrees": "minimum_elevation_degrees",
                "minimumVariableContactDuration": "minimum_variable_contact_duration",
                "networkConfigurationSubnetId": "network_configuration_subnet_id",
                "resourceGroupName": "resource_group_name"
            },
            "azure:orbital/spacecraft:Spacecraft": {
                "noradId": "norad_id",
                "resourceGroupName": "resource_group_name",
                "titleLine": "title_line",
                "twoLineElements": "two_line_elements"
            },
            "azure:paloalto/LocalRulestackRuleCategory:LocalRulestackRuleCategory": {
                "customUrls": "custom_urls"
            },
            "azure:paloalto/LocalRulestackRuleDestination:LocalRulestackRuleDestination": {
                "localRulestackFqdnListIds": "local_rulestack_fqdn_list_ids",
                "localRulestackPrefixListIds": "local_rulestack_prefix_list_ids"
            },
            "azure:paloalto/LocalRulestackRuleSource:LocalRulestackRuleSource": {
                "localRulestackPrefixListIds": "local_rulestack_prefix_list_ids"
            },
            "azure:paloalto/NextGenerationFirewallVirtualHubLocalRulestackDestinationNat:NextGenerationFirewallVirtualHubLocalRulestackDestinationNat": {
                "backendConfig": "backend_config",
                "frontendConfig": "frontend_config"
            },
            "azure:paloalto/NextGenerationFirewallVirtualHubLocalRulestackDestinationNatBackendConfig:NextGenerationFirewallVirtualHubLocalRulestackDestinationNatBackendConfig": {
                "publicIpAddress": "public_ip_address"
            },
            "azure:paloalto/NextGenerationFirewallVirtualHubLocalRulestackDestinationNatFrontendConfig:NextGenerationFirewallVirtualHubLocalRulestackDestinationNatFrontendConfig": {
                "publicIpAddressId": "public_ip_address_id"
            },
            "azure:paloalto/NextGenerationFirewallVirtualHubLocalRulestackDnsSettings:NextGenerationFirewallVirtualHubLocalRulestackDnsSettings": {
                "azureDnsServers": "azure_dns_servers",
                "dnsServers": "dns_servers",
                "useAzureDns": "use_azure_dns"
            },
            "azure:paloalto/NextGenerationFirewallVirtualHubLocalRulestackNetworkProfile:NextGenerationFirewallVirtualHubLocalRulestackNetworkProfile": {
                "egressNatIpAddressIds": "egress_nat_ip_address_ids",
                "egressNatIpAddresses": "egress_nat_ip_addresses",
                "ipOfTrustForUserDefinedRoutes": "ip_of_trust_for_user_defined_routes",
                "networkVirtualApplianceId": "network_virtual_appliance_id",
                "publicIpAddressIds": "public_ip_address_ids",
                "publicIpAddresses": "public_ip_addresses",
                "trustedSubnetId": "trusted_subnet_id",
                "untrustedSubnetId": "untrusted_subnet_id",
                "virtualHubId": "virtual_hub_id"
            },
            "azure:paloalto/NextGenerationFirewallVirtualHubPanoramaDestinationNat:NextGenerationFirewallVirtualHubPanoramaDestinationNat": {
                "backendConfig": "backend_config",
                "frontendConfig": "frontend_config"
            },
            "azure:paloalto/NextGenerationFirewallVirtualHubPanoramaDestinationNatBackendConfig:NextGenerationFirewallVirtualHubPanoramaDestinationNatBackendConfig": {
                "publicIpAddress": "public_ip_address"
            },
            "azure:paloalto/NextGenerationFirewallVirtualHubPanoramaDestinationNatFrontendConfig:NextGenerationFirewallVirtualHubPanoramaDestinationNatFrontendConfig": {
                "publicIpAddressId": "public_ip_address_id"
            },
            "azure:paloalto/NextGenerationFirewallVirtualHubPanoramaDnsSettings:NextGenerationFirewallVirtualHubPanoramaDnsSettings": {
                "azureDnsServers": "azure_dns_servers",
                "dnsServers": "dns_servers",
                "useAzureDns": "use_azure_dns"
            },
            "azure:paloalto/NextGenerationFirewallVirtualHubPanoramaNetworkProfile:NextGenerationFirewallVirtualHubPanoramaNetworkProfile": {
                "egressNatIpAddressIds": "egress_nat_ip_address_ids",
                "egressNatIpAddresses": "egress_nat_ip_addresses",
                "ipOfTrustForUserDefinedRoutes": "ip_of_trust_for_user_defined_routes",
                "networkVirtualApplianceId": "network_virtual_appliance_id",
                "publicIpAddressIds": "public_ip_address_ids",
                "publicIpAddresses": "public_ip_addresses",
                "trustedSubnetId": "trusted_subnet_id",
                "untrustedSubnetId": "untrusted_subnet_id",
                "virtualHubId": "virtual_hub_id"
            },
            "azure:paloalto/NextGenerationFirewallVirtualHubPanoramaPanorama:NextGenerationFirewallVirtualHubPanoramaPanorama": {
                "deviceGroupName": "device_group_name",
                "hostName": "host_name",
                "panoramaServer1": "panorama_server_1",
                "panoramaServer2": "panorama_server_2",
                "templateName": "template_name",
                "virtualMachineSshKey": "virtual_machine_ssh_key"
            },
            "azure:paloalto/NextGenerationFirewallVirtualNetworkLocalRulestackDestinationNat:NextGenerationFirewallVirtualNetworkLocalRulestackDestinationNat": {
                "backendConfig": "backend_config",
                "frontendConfig": "frontend_config"
            },
            "azure:paloalto/NextGenerationFirewallVirtualNetworkLocalRulestackDestinationNatBackendConfig:NextGenerationFirewallVirtualNetworkLocalRulestackDestinationNatBackendConfig": {
                "publicIpAddress": "public_ip_address"
            },
            "azure:paloalto/NextGenerationFirewallVirtualNetworkLocalRulestackDestinationNatFrontendConfig:NextGenerationFirewallVirtualNetworkLocalRulestackDestinationNatFrontendConfig": {
                "publicIpAddressId": "public_ip_address_id"
            },
            "azure:paloalto/NextGenerationFirewallVirtualNetworkLocalRulestackDnsSettings:NextGenerationFirewallVirtualNetworkLocalRulestackDnsSettings": {
                "azureDnsServers": "azure_dns_servers",
                "dnsServers": "dns_servers",
                "useAzureDns": "use_azure_dns"
            },
            "azure:paloalto/NextGenerationFirewallVirtualNetworkLocalRulestackNetworkProfile:NextGenerationFirewallVirtualNetworkLocalRulestackNetworkProfile": {
                "egressNatIpAddressIds": "egress_nat_ip_address_ids",
                "egressNatIpAddresses": "egress_nat_ip_addresses",
                "publicIpAddressIds": "public_ip_address_ids",
                "publicIpAddresses": "public_ip_addresses",
                "vnetConfiguration": "vnet_configuration"
            },
            "azure:paloalto/NextGenerationFirewallVirtualNetworkLocalRulestackNetworkProfileVnetConfiguration:NextGenerationFirewallVirtualNetworkLocalRulestackNetworkProfileVnetConfiguration": {
                "ipOfTrustForUserDefinedRoutes": "ip_of_trust_for_user_defined_routes",
                "trustedSubnetId": "trusted_subnet_id",
                "untrustedSubnetId": "untrusted_subnet_id",
                "virtualNetworkId": "virtual_network_id"
            },
            "azure:paloalto/NextGenerationFirewallVirtualNetworkPanoramaDestinationNat:NextGenerationFirewallVirtualNetworkPanoramaDestinationNat": {
                "backendConfig": "backend_config",
                "frontendConfig": "frontend_config"
            },
            "azure:paloalto/NextGenerationFirewallVirtualNetworkPanoramaDestinationNatBackendConfig:NextGenerationFirewallVirtualNetworkPanoramaDestinationNatBackendConfig": {
                "publicIpAddress": "public_ip_address"
            },
            "azure:paloalto/NextGenerationFirewallVirtualNetworkPanoramaDestinationNatFrontendConfig:NextGenerationFirewallVirtualNetworkPanoramaDestinationNatFrontendConfig": {
                "publicIpAddressId": "public_ip_address_id"
            },
            "azure:paloalto/NextGenerationFirewallVirtualNetworkPanoramaDnsSettings:NextGenerationFirewallVirtualNetworkPanoramaDnsSettings": {
                "azureDnsServers": "azure_dns_servers",
                "dnsServers": "dns_servers",
                "useAzureDns": "use_azure_dns"
            },
            "azure:paloalto/NextGenerationFirewallVirtualNetworkPanoramaNetworkProfile:NextGenerationFirewallVirtualNetworkPanoramaNetworkProfile": {
                "egressNatIpAddressIds": "egress_nat_ip_address_ids",
                "egressNatIpAddresses": "egress_nat_ip_addresses",
                "publicIpAddressIds": "public_ip_address_ids",
                "publicIpAddresses": "public_ip_addresses",
                "vnetConfiguration": "vnet_configuration"
            },
            "azure:paloalto/NextGenerationFirewallVirtualNetworkPanoramaNetworkProfileVnetConfiguration:NextGenerationFirewallVirtualNetworkPanoramaNetworkProfileVnetConfiguration": {
                "ipOfTrustForUserDefinedRoutes": "ip_of_trust_for_user_defined_routes",
                "trustedSubnetId": "trusted_subnet_id",
                "untrustedSubnetId": "untrusted_subnet_id",
                "virtualNetworkId": "virtual_network_id"
            },
            "azure:paloalto/NextGenerationFirewallVirtualNetworkPanoramaPanorama:NextGenerationFirewallVirtualNetworkPanoramaPanorama": {
                "deviceGroupName": "device_group_name",
                "hostName": "host_name",
                "panoramaServer1": "panorama_server_1",
                "panoramaServer2": "panorama_server_2",
                "templateName": "template_name",
                "virtualMachineSshKey": "virtual_machine_ssh_key"
            },
            "azure:paloalto/getLocalRulestack:getLocalRulestack": {
                "antiSpywareProfile": "anti_spyware_profile",
                "antiVirusProfile": "anti_virus_profile",
                "dnsSubscription": "dns_subscription",
                "fileBlockingProfile": "file_blocking_profile",
                "outboundTrustCertificate": "outbound_trust_certificate",
                "outboundUntrustCertificate": "outbound_untrust_certificate",
                "resourceGroupName": "resource_group_name",
                "urlFilteringProfile": "url_filtering_profile",
                "vulnerabilityProfile": "vulnerability_profile"
            },
            "azure:paloalto/localRulestack:LocalRulestack": {
                "antiSpywareProfile": "anti_spyware_profile",
                "antiVirusProfile": "anti_virus_profile",
                "dnsSubscription": "dns_subscription",
                "fileBlockingProfile": "file_blocking_profile",
                "resourceGroupName": "resource_group_name",
                "urlFilteringProfile": "url_filtering_profile",
                "vulnerabilityProfile": "vulnerability_profile"
            },
            "azure:paloalto/localRulestackCertificate:LocalRulestackCertificate": {
                "auditComment": "audit_comment",
                "keyVaultCertificateId": "key_vault_certificate_id",
                "rulestackId": "rulestack_id",
                "selfSigned": "self_signed"
            },
            "azure:paloalto/localRulestackFqdnList:LocalRulestackFqdnList": {
                "auditComment": "audit_comment",
                "fullyQualifiedDomainNames": "fully_qualified_domain_names",
                "rulestackId": "rulestack_id"
            },
            "azure:paloalto/localRulestackOutboundTrustCertificateAssociation:LocalRulestackOutboundTrustCertificateAssociation": {
                "certificateId": "certificate_id"
            },
            "azure:paloalto/localRulestackOutboundUntrustCertificateAssociation:LocalRulestackOutboundUntrustCertificateAssociation": {
                "certificateId": "certificate_id"
            },
            "azure:paloalto/localRulestackPrefixList:LocalRulestackPrefixList": {
                "auditComment": "audit_comment",
                "prefixLists": "prefix_list",
                "rulestackId": "rulestack_id"
            },
            "azure:paloalto/localRulestackRule:LocalRulestackRule": {
                "auditComment": "audit_comment",
                "decryptionRuleType": "decryption_rule_type",
                "inspectionCertificateId": "inspection_certificate_id",
                "loggingEnabled": "logging_enabled",
                "negateDestination": "negate_destination",
                "negateSource": "negate_source",
                "protocolPorts": "protocol_ports",
                "rulestackId": "rulestack_id"
            },
            "azure:paloalto/nextGenerationFirewallVirtualHubLocalRulestack:NextGenerationFirewallVirtualHubLocalRulestack": {
                "destinationNats": "destination_nat",
                "dnsSettings": "dns_settings",
                "networkProfile": "network_profile",
                "resourceGroupName": "resource_group_name",
                "rulestackId": "rulestack_id"
            },
            "azure:paloalto/nextGenerationFirewallVirtualHubPanorama:NextGenerationFirewallVirtualHubPanorama": {
                "destinationNats": "destination_nat",
                "dnsSettings": "dns_settings",
                "networkProfile": "network_profile",
                "panoramaBase64Config": "panorama_base64_config",
                "panoramas": "panorama",
                "resourceGroupName": "resource_group_name"
            },
            "azure:paloalto/nextGenerationFirewallVirtualNetworkLocalRulestack:NextGenerationFirewallVirtualNetworkLocalRulestack": {
                "destinationNats": "destination_nat",
                "dnsSettings": "dns_settings",
                "networkProfile": "network_profile",
                "resourceGroupName": "resource_group_name",
                "rulestackId": "rulestack_id"
            },
            "azure:paloalto/nextGenerationFirewallVirtualNetworkPanorama:NextGenerationFirewallVirtualNetworkPanorama": {
                "destinationNats": "destination_nat",
                "dnsSettings": "dns_settings",
                "networkProfile": "network_profile",
                "panoramaBase64Config": "panorama_base64_config",
                "panoramas": "panorama",
                "resourceGroupName": "resource_group_name"
            },
            "azure:paloalto/virtualNetworkAppliance:VirtualNetworkAppliance": {
                "virtualHubId": "virtual_hub_id"
            },
            "azure:pim/ActiveRoleAssignmentSchedule:ActiveRoleAssignmentSchedule": {
                "startDateTime": "start_date_time"
            },
            "azure:pim/ActiveRoleAssignmentScheduleExpiration:ActiveRoleAssignmentScheduleExpiration": {
                "durationDays": "duration_days",
                "durationHours": "duration_hours",
                "endDateTime": "end_date_time"
            },
            "azure:pim/EligibleRoleAssignmentSchedule:EligibleRoleAssignmentSchedule": {
                "startDateTime": "start_date_time"
            },
            "azure:pim/EligibleRoleAssignmentScheduleExpiration:EligibleRoleAssignmentScheduleExpiration": {
                "durationDays": "duration_days",
                "durationHours": "duration_hours",
                "endDateTime": "end_date_time"
            },
            "azure:pim/activeRoleAssignment:ActiveRoleAssignment": {
                "principalId": "principal_id",
                "principalType": "principal_type",
                "roleDefinitionId": "role_definition_id"
            },
            "azure:pim/eligibleRoleAssignment:EligibleRoleAssignment": {
                "principalId": "principal_id",
                "principalType": "principal_type",
                "roleDefinitionId": "role_definition_id"
            },
            "azure:policy/PolicySetDefinitionPolicyDefinitionGroup:PolicySetDefinitionPolicyDefinitionGroup": {
                "additionalMetadataResourceId": "additional_metadata_resource_id",
                "displayName": "display_name"
            },
            "azure:policy/PolicySetDefinitionPolicyDefinitionReference:PolicySetDefinitionPolicyDefinitionReference": {
                "parameterValues": "parameter_values",
                "policyDefinitionId": "policy_definition_id",
                "policyGroupNames": "policy_group_names",
                "referenceId": "reference_id"
            },
            "azure:policy/VirtualMachineConfigurationAssignmentConfiguration:VirtualMachineConfigurationAssignmentConfiguration": {
                "assignmentType": "assignment_type",
                "contentHash": "content_hash",
                "contentUri": "content_uri",
                "parameters": "parameter"
            },
            "azure:policy/definition:Definition": {
                "displayName": "display_name",
                "managementGroupId": "management_group_id",
                "policyRule": "policy_rule",
                "policyType": "policy_type",
                "roleDefinitionIds": "role_definition_ids"
            },
            "azure:policy/getPolicyAssignment:getPolicyAssignment": {
                "displayName": "display_name",
                "identities": "identity",
                "nonComplianceMessages": "non_compliance_message",
                "notScopes": "not_scopes",
                "policyDefinitionId": "policy_definition_id",
                "scopeId": "scope_id"
            },
            "azure:policy/getPolicyAssignmentIdentity:getPolicyAssignmentIdentity": {
                "identityIds": "identity_ids",
                "principalId": "principal_id",
                "tenantId": "tenant_id"
            },
            "azure:policy/getPolicyAssignmentNonComplianceMessage:getPolicyAssignmentNonComplianceMessage": {
                "policyDefinitionReferenceId": "policy_definition_reference_id"
            },
            "azure:policy/getPolicyDefintion:getPolicyDefintion": {
                "displayName": "display_name",
                "managementGroupName": "management_group_name",
                "policyRule": "policy_rule",
                "policyType": "policy_type",
                "roleDefinitionIds": "role_definition_ids"
            },
            "azure:policy/getPolicyDefintionBuiltIn:getPolicyDefintionBuiltIn": {
                "displayName": "display_name",
                "managementGroupName": "management_group_name",
                "policyRule": "policy_rule",
                "policyType": "policy_type",
                "roleDefinitionIds": "role_definition_ids"
            },
            "azure:policy/getPolicySetDefinition:getPolicySetDefinition": {
                "displayName": "display_name",
                "managementGroupName": "management_group_name",
                "policyDefinitionGroups": "policy_definition_group",
                "policyDefinitionReferences": "policy_definition_reference",
                "policyDefinitions": "policy_definitions",
                "policyType": "policy_type"
            },
            "azure:policy/getPolicySetDefinitionPolicyDefinitionGroup:getPolicySetDefinitionPolicyDefinitionGroup": {
                "additionalMetadataResourceId": "additional_metadata_resource_id",
                "displayName": "display_name"
            },
            "azure:policy/getPolicySetDefinitionPolicyDefinitionReference:getPolicySetDefinitionPolicyDefinitionReference": {
                "parameterValues": "parameter_values",
                "policyDefinitionId": "policy_definition_id",
                "policyGroupNames": "policy_group_names",
                "referenceId": "reference_id"
            },
            "azure:policy/getVirtualMachineConfigurationAssignment:getVirtualMachineConfigurationAssignment": {
                "assignmentHash": "assignment_hash",
                "complianceStatus": "compliance_status",
                "contentHash": "content_hash",
                "contentUri": "content_uri",
                "lastComplianceStatusChecked": "last_compliance_status_checked",
                "latestReportId": "latest_report_id",
                "resourceGroupName": "resource_group_name",
                "virtualMachineName": "virtual_machine_name"
            },
            "azure:policy/policySetDefinition:PolicySetDefinition": {
                "displayName": "display_name",
                "managementGroupId": "management_group_id",
                "policyDefinitionGroups": "policy_definition_group",
                "policyDefinitionReferences": "policy_definition_reference",
                "policyType": "policy_type"
            },
            "azure:policy/virtualMachineConfigurationAssignment:VirtualMachineConfigurationAssignment": {
                "virtualMachineId": "virtual_machine_id"
            },
            "azure:portal/dashboard:Dashboard": {
                "dashboardProperties": "dashboard_properties",
                "resourceGroupName": "resource_group_name"
            },
            "azure:portal/getDashboard:getDashboard": {
                "dashboardProperties": "dashboard_properties",
                "displayName": "display_name",
                "resourceGroupName": "resource_group_name"
            },
            "azure:portal/portalDashboard:PortalDashboard": {
                "dashboardProperties": "dashboard_properties",
                "resourceGroupName": "resource_group_name"
            },
            "azure:postgresql/FlexibleServerAuthentication:FlexibleServerAuthentication": {
                "activeDirectoryAuthEnabled": "active_directory_auth_enabled",
                "passwordAuthEnabled": "password_auth_enabled",
                "tenantId": "tenant_id"
            },
            "azure:postgresql/FlexibleServerCustomerManagedKey:FlexibleServerCustomerManagedKey": {
                "geoBackupKeyVaultKeyId": "geo_backup_key_vault_key_id",
                "geoBackupUserAssignedIdentityId": "geo_backup_user_assigned_identity_id",
                "keyVaultKeyId": "key_vault_key_id",
                "primaryUserAssignedIdentityId": "primary_user_assigned_identity_id"
            },
            "azure:postgresql/FlexibleServerHighAvailability:FlexibleServerHighAvailability": {
                "standbyAvailabilityZone": "standby_availability_zone"
            },
            "azure:postgresql/FlexibleServerIdentity:FlexibleServerIdentity": {
                "identityIds": "identity_ids"
            },
            "azure:postgresql/FlexibleServerMaintenanceWindow:FlexibleServerMaintenanceWindow": {
                "dayOfWeek": "day_of_week",
                "startHour": "start_hour",
                "startMinute": "start_minute"
            },
            "azure:postgresql/ServerIdentity:ServerIdentity": {
                "principalId": "principal_id",
                "tenantId": "tenant_id"
            },
            "azure:postgresql/ServerThreatDetectionPolicy:ServerThreatDetectionPolicy": {
                "disabledAlerts": "disabled_alerts",
                "emailAccountAdmins": "email_account_admins",
                "emailAddresses": "email_addresses",
                "retentionDays": "retention_days",
                "storageAccountAccessKey": "storage_account_access_key",
                "storageEndpoint": "storage_endpoint"
            },
            "azure:postgresql/activeDirectoryAdministrator:ActiveDirectoryAdministrator": {
                "objectId": "object_id",
                "resourceGroupName": "resource_group_name",
                "serverName": "server_name",
                "tenantId": "tenant_id"
            },
            "azure:postgresql/configuration:Configuration": {
                "resourceGroupName": "resource_group_name",
                "serverName": "server_name"
            },
            "azure:postgresql/database:Database": {
                "resourceGroupName": "resource_group_name",
                "serverName": "server_name"
            },
            "azure:postgresql/firewallRule:FirewallRule": {
                "endIpAddress": "end_ip_address",
                "resourceGroupName": "resource_group_name",
                "serverName": "server_name",
                "startIpAddress": "start_ip_address"
            },
            "azure:postgresql/flexibleServer:FlexibleServer": {
                "administratorLogin": "administrator_login",
                "administratorPassword": "administrator_password",
                "autoGrowEnabled": "auto_grow_enabled",
                "backupRetentionDays": "backup_retention_days",
                "createMode": "create_mode",
                "customerManagedKey": "customer_managed_key",
                "delegatedSubnetId": "delegated_subnet_id",
                "geoRedundantBackupEnabled": "geo_redundant_backup_enabled",
                "highAvailability": "high_availability",
                "maintenanceWindow": "maintenance_window",
                "pointInTimeRestoreTimeInUtc": "point_in_time_restore_time_in_utc",
                "privateDnsZoneId": "private_dns_zone_id",
                "publicNetworkAccessEnabled": "public_network_access_enabled",
                "replicationRole": "replication_role",
                "resourceGroupName": "resource_group_name",
                "skuName": "sku_name",
                "sourceServerId": "source_server_id",
                "storageMb": "storage_mb"
            },
            "azure:postgresql/flexibleServerActiveDirectoryAdministrator:FlexibleServerActiveDirectoryAdministrator": {
                "objectId": "object_id",
                "principalName": "principal_name",
                "principalType": "principal_type",
                "resourceGroupName": "resource_group_name",
                "serverName": "server_name",
                "tenantId": "tenant_id"
            },
            "azure:postgresql/flexibleServerConfiguration:FlexibleServerConfiguration": {
                "serverId": "server_id"
            },
            "azure:postgresql/flexibleServerDatabase:FlexibleServerDatabase": {
                "serverId": "server_id"
            },
            "azure:postgresql/flexibleServerFirewallRule:FlexibleServerFirewallRule": {
                "endIpAddress": "end_ip_address",
                "serverId": "server_id",
                "startIpAddress": "start_ip_address"
            },
            "azure:postgresql/getFlexibleServer:getFlexibleServer": {
                "administratorLogin": "administrator_login",
                "autoGrowEnabled": "auto_grow_enabled",
                "backupRetentionDays": "backup_retention_days",
                "delegatedSubnetId": "delegated_subnet_id",
                "publicNetworkAccessEnabled": "public_network_access_enabled",
                "resourceGroupName": "resource_group_name",
                "skuName": "sku_name",
                "storageMb": "storage_mb"
            },
            "azure:postgresql/getServer:getServer": {
                "administratorLogin": "administrator_login",
                "identities": "identity",
                "resourceGroupName": "resource_group_name",
                "skuName": "sku_name"
            },
            "azure:postgresql/getServerIdentity:getServerIdentity": {
                "principalId": "principal_id",
                "tenantId": "tenant_id"
            },
            "azure:postgresql/server:Server": {
                "administratorLogin": "administrator_login",
                "administratorLoginPassword": "administrator_login_password",
                "autoGrowEnabled": "auto_grow_enabled",
                "backupRetentionDays": "backup_retention_days",
                "createMode": "create_mode",
                "creationSourceServerId": "creation_source_server_id",
                "geoRedundantBackupEnabled": "geo_redundant_backup_enabled",
                "infrastructureEncryptionEnabled": "infrastructure_encryption_enabled",
                "publicNetworkAccessEnabled": "public_network_access_enabled",
                "resourceGroupName": "resource_group_name",
                "restorePointInTime": "restore_point_in_time",
                "skuName": "sku_name",
                "sslEnforcementEnabled": "ssl_enforcement_enabled",
                "sslMinimalTlsVersionEnforced": "ssl_minimal_tls_version_enforced",
                "storageMb": "storage_mb",
                "threatDetectionPolicy": "threat_detection_policy"
            },
            "azure:postgresql/serverKey:ServerKey": {
                "keyVaultKeyId": "key_vault_key_id",
                "serverId": "server_id"
            },
            "azure:postgresql/virtualNetworkRule:VirtualNetworkRule": {
                "ignoreMissingVnetServiceEndpoint": "ignore_missing_vnet_service_endpoint",
                "resourceGroupName": "resource_group_name",
                "serverName": "server_name",
                "subnetId": "subnet_id"
            },
            "azure:powerbi/embedded:Embedded": {
                "resourceGroupName": "resource_group_name",
                "skuName": "sku_name"
            },
            "azure:privatedns/LinkServiceNatIpConfiguration:LinkServiceNatIpConfiguration": {
                "privateIpAddress": "private_ip_address",
                "privateIpAddressVersion": "private_ip_address_version",
                "subnetId": "subnet_id"
            },
            "azure:privatedns/ResolverForwardingRuleTargetDnsServer:ResolverForwardingRuleTargetDnsServer": {
                "ipAddress": "ip_address"
            },
            "azure:privatedns/ResolverInboundEndpointIpConfiguration:ResolverInboundEndpointIpConfiguration": {
                "privateIpAddress": "private_ip_address",
                "privateIpAllocationMethod": "private_ip_allocation_method",
                "subnetId": "subnet_id"
            },
            "azure:privatedns/ZoneSoaRecord:ZoneSoaRecord": {
                "expireTime": "expire_time",
                "hostName": "host_name",
                "minimumTtl": "minimum_ttl",
                "refreshTime": "refresh_time",
                "retryTime": "retry_time",
                "serialNumber": "serial_number"
            },
            "azure:privatedns/aAAARecord:AAAARecord": {
                "resourceGroupName": "resource_group_name",
                "zoneName": "zone_name"
            },
            "azure:privatedns/aRecord:ARecord": {
                "resourceGroupName": "resource_group_name",
                "zoneName": "zone_name"
            },
            "azure:privatedns/cnameRecord:CnameRecord": {
                "resourceGroupName": "resource_group_name",
                "zoneName": "zone_name"
            },
            "azure:privatedns/getAAAARecord:getAAAARecord": {
                "resourceGroupName": "resource_group_name",
                "zoneName": "zone_name"
            },
            "azure:privatedns/getARecord:getARecord": {
                "resourceGroupName": "resource_group_name",
                "zoneName": "zone_name"
            },
            "azure:privatedns/getCnameRecord:getCnameRecord": {
                "resourceGroupName": "resource_group_name",
                "targetResourceId": "target_resource_id",
                "zoneName": "zone_name"
            },
            "azure:privatedns/getDnsZone:getDnsZone": {
                "maxNumberOfRecordSets": "max_number_of_record_sets",
                "maxNumberOfVirtualNetworkLinks": "max_number_of_virtual_network_links",
                "maxNumberOfVirtualNetworkLinksWithRegistration": "max_number_of_virtual_network_links_with_registration",
                "numberOfRecordSets": "number_of_record_sets",
                "resourceGroupName": "resource_group_name"
            },
            "azure:privatedns/getMxRecord:getMxRecord": {
                "records": "record",
                "resourceGroupName": "resource_group_name",
                "zoneName": "zone_name"
            },
            "azure:privatedns/getPtrRecord:getPtrRecord": {
                "resourceGroupName": "resource_group_name",
                "zoneName": "zone_name"
            },
            "azure:privatedns/getResolver:getResolver": {
                "resourceGroupName": "resource_group_name",
                "virtualNetworkId": "virtual_network_id"
            },
            "azure:privatedns/getResolverDnsForwardingRuleset:getResolverDnsForwardingRuleset": {
                "privateDnsResolverOutboundEndpointIds": "private_dns_resolver_outbound_endpoint_ids",
                "resourceGroupName": "resource_group_name"
            },
            "azure:privatedns/getResolverForwardingRule:getResolverForwardingRule": {
                "dnsForwardingRulesetId": "dns_forwarding_ruleset_id",
                "domainName": "domain_name",
                "targetDnsServers": "target_dns_servers"
            },
            "azure:privatedns/getResolverForwardingRuleTargetDnsServer:getResolverForwardingRuleTargetDnsServer": {
                "ipAddress": "ip_address"
            },
            "azure:privatedns/getResolverInboundEndpoint:getResolverInboundEndpoint": {
                "ipConfigurations": "ip_configurations",
                "privateDnsResolverId": "private_dns_resolver_id"
            },
            "azure:privatedns/getResolverInboundEndpointIpConfiguration:getResolverInboundEndpointIpConfiguration": {
                "privateIpAddress": "private_ip_address",
                "privateIpAllocationMethod": "private_ip_allocation_method",
                "subnetId": "subnet_id"
            },
            "azure:privatedns/getResolverOutboundEndpoint:getResolverOutboundEndpoint": {
                "privateDnsResolverId": "private_dns_resolver_id",
                "subnetId": "subnet_id"
            },
            "azure:privatedns/getResolverVirtualNetworkLink:getResolverVirtualNetworkLink": {
                "dnsForwardingRulesetId": "dns_forwarding_ruleset_id",
                "virtualNetworkId": "virtual_network_id"
            },
            "azure:privatedns/getSoaRecord:getSoaRecord": {
                "expireTime": "expire_time",
                "hostName": "host_name",
                "minimumTtl": "minimum_ttl",
                "refreshTime": "refresh_time",
                "resourceGroupName": "resource_group_name",
                "retryTime": "retry_time",
                "serialNumber": "serial_number",
                "zoneName": "zone_name"
            },
            "azure:privatedns/getSrvRecord:getSrvRecord": {
                "records": "record",
                "resourceGroupName": "resource_group_name",
                "zoneName": "zone_name"
            },
            "azure:privatedns/getTxtRecord:getTxtRecord": {
                "records": "record",
                "resourceGroupName": "resource_group_name",
                "zoneName": "zone_name"
            },
            "azure:privatedns/getZoneVirtualNetworkLink:getZoneVirtualNetworkLink": {
                "privateDnsZoneName": "private_dns_zone_name",
                "registrationEnabled": "registration_enabled",
                "resourceGroupName": "resource_group_name",
                "virtualNetworkId": "virtual_network_id"
            },
            "azure:privatedns/linkService:LinkService": {
                "autoApprovalSubscriptionIds": "auto_approval_subscription_ids",
                "enableProxyProtocol": "enable_proxy_protocol",
                "loadBalancerFrontendIpConfigurationIds": "load_balancer_frontend_ip_configuration_ids",
                "natIpConfigurations": "nat_ip_configuration",
                "resourceGroupName": "resource_group_name",
                "visibilitySubscriptionIds": "visibility_subscription_ids"
            },
            "azure:privatedns/mxRecord:MxRecord": {
                "records": "record",
                "resourceGroupName": "resource_group_name",
                "zoneName": "zone_name"
            },
            "azure:privatedns/pTRRecord:PTRRecord": {
                "resourceGroupName": "resource_group_name",
                "zoneName": "zone_name"
            },
            "azure:privatedns/resolver:Resolver": {
                "resourceGroupName": "resource_group_name",
                "virtualNetworkId": "virtual_network_id"
            },
            "azure:privatedns/resolverDnsForwardingRuleset:ResolverDnsForwardingRuleset": {
                "privateDnsResolverOutboundEndpointIds": "private_dns_resolver_outbound_endpoint_ids",
                "resourceGroupName": "resource_group_name"
            },
            "azure:privatedns/resolverForwardingRule:ResolverForwardingRule": {
                "dnsForwardingRulesetId": "dns_forwarding_ruleset_id",
                "domainName": "domain_name",
                "targetDnsServers": "target_dns_servers"
            },
            "azure:privatedns/resolverInboundEndpoint:ResolverInboundEndpoint": {
                "ipConfigurations": "ip_configurations",
                "privateDnsResolverId": "private_dns_resolver_id"
            },
            "azure:privatedns/resolverOutboundEndpoint:ResolverOutboundEndpoint": {
                "privateDnsResolverId": "private_dns_resolver_id",
                "subnetId": "subnet_id"
            },
            "azure:privatedns/resolverVirtualNetworkLink:ResolverVirtualNetworkLink": {
                "dnsForwardingRulesetId": "dns_forwarding_ruleset_id",
                "virtualNetworkId": "virtual_network_id"
            },
            "azure:privatedns/sRVRecord:SRVRecord": {
                "records": "record",
                "resourceGroupName": "resource_group_name",
                "zoneName": "zone_name"
            },
            "azure:privatedns/txtRecord:TxtRecord": {
                "records": "record",
                "resourceGroupName": "resource_group_name",
                "zoneName": "zone_name"
            },
            "azure:privatedns/zone:Zone": {
                "maxNumberOfRecordSets": "max_number_of_record_sets",
                "maxNumberOfVirtualNetworkLinks": "max_number_of_virtual_network_links",
                "maxNumberOfVirtualNetworkLinksWithRegistration": "max_number_of_virtual_network_links_with_registration",
                "numberOfRecordSets": "number_of_record_sets",
                "resourceGroupName": "resource_group_name",
                "soaRecord": "soa_record"
            },
            "azure:privatedns/zoneVirtualNetworkLink:ZoneVirtualNetworkLink": {
                "privateDnsZoneName": "private_dns_zone_name",
                "registrationEnabled": "registration_enabled",
                "resourceGroupName": "resource_group_name",
                "virtualNetworkId": "virtual_network_id"
            },
            "azure:privatelink/EndpointCustomDnsConfig:EndpointCustomDnsConfig": {
                "ipAddresses": "ip_addresses"
            },
            "azure:privatelink/EndpointIpConfiguration:EndpointIpConfiguration": {
                "memberName": "member_name",
                "privateIpAddress": "private_ip_address",
                "subresourceName": "subresource_name"
            },
            "azure:privatelink/EndpointPrivateDnsZoneConfig:EndpointPrivateDnsZoneConfig": {
                "privateDnsZoneId": "private_dns_zone_id",
                "recordSets": "record_sets"
            },
            "azure:privatelink/EndpointPrivateDnsZoneConfigRecordSet:EndpointPrivateDnsZoneConfigRecordSet": {
                "ipAddresses": "ip_addresses"
            },
            "azure:privatelink/EndpointPrivateDnsZoneGroup:EndpointPrivateDnsZoneGroup": {
                "privateDnsZoneIds": "private_dns_zone_ids"
            },
            "azure:privatelink/EndpointPrivateServiceConnection:EndpointPrivateServiceConnection": {
                "isManualConnection": "is_manual_connection",
                "privateConnectionResourceAlias": "private_connection_resource_alias",
                "privateConnectionResourceId": "private_connection_resource_id",
                "privateIpAddress": "private_ip_address",
                "requestMessage": "request_message",
                "subresourceNames": "subresource_names"
            },
            "azure:privatelink/applicationSecurityGroupAssociation:ApplicationSecurityGroupAssociation": {
                "applicationSecurityGroupId": "application_security_group_id",
                "privateEndpointId": "private_endpoint_id"
            },
            "azure:privatelink/endpoint:Endpoint": {
                "customDnsConfigs": "custom_dns_configs",
                "customNetworkInterfaceName": "custom_network_interface_name",
                "ipConfigurations": "ip_configuration",
                "networkInterfaces": "network_interface",
                "privateDnsZoneConfigs": "private_dns_zone_configs",
                "privateDnsZoneGroup": "private_dns_zone_group",
                "privateServiceConnection": "private_service_connection",
                "resourceGroupName": "resource_group_name",
                "subnetId": "subnet_id"
            },
            "azure:privatelink/getEndpointConnection:getEndpointConnection": {
                "networkInterfaces": "network_interface",
                "privateServiceConnections": "private_service_connection",
                "resourceGroupName": "resource_group_name"
            },
            "azure:privatelink/getEndpointConnectionPrivateServiceConnection:getEndpointConnectionPrivateServiceConnection": {
                "privateIpAddress": "private_ip_address",
                "requestResponse": "request_response"
            },
            "azure:privatelink/getService:getService": {
                "autoApprovalSubscriptionIds": "auto_approval_subscription_ids",
                "enableProxyProtocol": "enable_proxy_protocol",
                "loadBalancerFrontendIpConfigurationIds": "load_balancer_frontend_ip_configuration_ids",
                "natIpConfigurations": "nat_ip_configuration",
                "resourceGroupName": "resource_group_name",
                "visibilitySubscriptionIds": "visibility_subscription_ids"
            },
            "azure:privatelink/getServiceEndpointConnections:getServiceEndpointConnections": {
                "privateEndpointConnections": "private_endpoint_connections",
                "resourceGroupName": "resource_group_name",
                "serviceId": "service_id",
                "serviceName": "service_name"
            },
            "azure:privatelink/getServiceEndpointConnectionsPrivateEndpointConnection:getServiceEndpointConnectionsPrivateEndpointConnection": {
                "actionRequired": "action_required",
                "connectionId": "connection_id",
                "connectionName": "connection_name",
                "privateEndpointId": "private_endpoint_id",
                "privateEndpointName": "private_endpoint_name"
            },
            "azure:privatelink/getServiceNatIpConfiguration:getServiceNatIpConfiguration": {
                "privateIpAddress": "private_ip_address",
                "privateIpAddressVersion": "private_ip_address_version",
                "subnetId": "subnet_id"
            },
            "azure:proximity/getPlacementGroup:getPlacementGroup": {
                "resourceGroupName": "resource_group_name"
            },
            "azure:proximity/placementGroup:PlacementGroup": {
                "allowedVmSizes": "allowed_vm_sizes",
                "resourceGroupName": "resource_group_name"
            },
            "azure:purview/AccountIdentity:AccountIdentity": {
                "identityIds": "identity_ids",
                "principalId": "principal_id",
                "tenantId": "tenant_id"
            },
            "azure:purview/AccountManagedResource:AccountManagedResource": {
                "eventHubNamespaceId": "event_hub_namespace_id",
                "resourceGroupId": "resource_group_id",
                "storageAccountId": "storage_account_id"
            },
            "azure:purview/account:Account": {
                "atlasKafkaEndpointPrimaryConnectionString": "atlas_kafka_endpoint_primary_connection_string",
                "atlasKafkaEndpointSecondaryConnectionString": "atlas_kafka_endpoint_secondary_connection_string",
                "catalogEndpoint": "catalog_endpoint",
                "guardianEndpoint": "guardian_endpoint",
                "managedResourceGroupName": "managed_resource_group_name",
                "managedResources": "managed_resources",
                "publicNetworkEnabled": "public_network_enabled",
                "resourceGroupName": "resource_group_name",
                "scanEndpoint": "scan_endpoint"
            },
            "azure:recoveryservices/VaultEncryption:VaultEncryption": {
                "infrastructureEncryptionEnabled": "infrastructure_encryption_enabled",
                "keyId": "key_id",
                "useSystemAssignedIdentity": "use_system_assigned_identity",
                "userAssignedIdentityId": "user_assigned_identity_id"
            },
            "azure:recoveryservices/VaultIdentity:VaultIdentity": {
                "identityIds": "identity_ids",
                "principalId": "principal_id",
                "tenantId": "tenant_id"
            },
            "azure:recoveryservices/VaultMonitoring:VaultMonitoring": {
                "alertsForAllJobFailuresEnabled": "alerts_for_all_job_failures_enabled",
                "alertsForCriticalOperationFailuresEnabled": "alerts_for_critical_operation_failures_enabled"
            },
            "azure:recoveryservices/getVault:getVault": {
                "resourceGroupName": "resource_group_name"
            },
            "azure:recoveryservices/vault:Vault": {
                "classicVmwareReplicationEnabled": "classic_vmware_replication_enabled",
                "crossRegionRestoreEnabled": "cross_region_restore_enabled",
                "publicNetworkAccessEnabled": "public_network_access_enabled",
                "resourceGroupName": "resource_group_name",
                "softDeleteEnabled": "soft_delete_enabled",
                "storageModeType": "storage_mode_type"
            },
            "azure:recoveryservices/vaultResourceGuardAssociation:VaultResourceGuardAssociation": {
                "resourceGuardId": "resource_guard_id",
                "vaultId": "vault_id"
            },
            "azure:redis/CacheIdentity:CacheIdentity": {
                "identityIds": "identity_ids",
                "principalId": "principal_id",
                "tenantId": "tenant_id"
            },
            "azure:redis/CachePatchSchedule:CachePatchSchedule": {
                "dayOfWeek": "day_of_week",
                "maintenanceWindow": "maintenance_window",
                "startHourUtc": "start_hour_utc"
            },
            "azure:redis/CacheRedisConfiguration:CacheRedisConfiguration": {
                "activeDirectoryAuthenticationEnabled": "active_directory_authentication_enabled",
                "aofBackupEnabled": "aof_backup_enabled",
                "aofStorageConnectionString0": "aof_storage_connection_string_0",
                "aofStorageConnectionString1": "aof_storage_connection_string_1",
                "enableAuthentication": "enable_authentication",
                "maxfragmentationmemoryReserved": "maxfragmentationmemory_reserved",
                "maxmemoryDelta": "maxmemory_delta",
                "maxmemoryPolicy": "maxmemory_policy",
                "maxmemoryReserved": "maxmemory_reserved",
                "notifyKeyspaceEvents": "notify_keyspace_events",
                "rdbBackupEnabled": "rdb_backup_enabled",
                "rdbBackupFrequency": "rdb_backup_frequency",
                "rdbBackupMaxSnapshotCount": "rdb_backup_max_snapshot_count",
                "rdbStorageConnectionString": "rdb_storage_connection_string"
            },
            "azure:redis/cache:Cache": {
                "enableNonSslPort": "enable_non_ssl_port",
                "minimumTlsVersion": "minimum_tls_version",
                "patchSchedules": "patch_schedule",
                "primaryAccessKey": "primary_access_key",
                "primaryConnectionString": "primary_connection_string",
                "privateStaticIpAddress": "private_static_ip_address",
                "publicNetworkAccessEnabled": "public_network_access_enabled",
                "redisConfiguration": "redis_configuration",
                "redisVersion": "redis_version",
                "replicasPerMaster": "replicas_per_master",
                "replicasPerPrimary": "replicas_per_primary",
                "resourceGroupName": "resource_group_name",
                "secondaryAccessKey": "secondary_access_key",
                "secondaryConnectionString": "secondary_connection_string",
                "shardCount": "shard_count",
                "skuName": "sku_name",
                "sslPort": "ssl_port",
                "subnetId": "subnet_id",
                "tenantSettings": "tenant_settings"
            },
            "azure:redis/enterpriseCluster:EnterpriseCluster": {
                "minimumTlsVersion": "minimum_tls_version",
                "resourceGroupName": "resource_group_name",
                "skuName": "sku_name"
            },
            "azure:redis/enterpriseDatabase:EnterpriseDatabase": {
                "clientProtocol": "client_protocol",
                "clusterId": "cluster_id",
                "clusteringPolicy": "clustering_policy",
                "evictionPolicy": "eviction_policy",
                "linkedDatabaseGroupNickname": "linked_database_group_nickname",
                "linkedDatabaseIds": "linked_database_id",
                "modules": "module",
                "primaryAccessKey": "primary_access_key",
                "resourceGroupName": "resource_group_name",
                "secondaryAccessKey": "secondary_access_key"
            },
            "azure:redis/firewallRule:FirewallRule": {
                "endIp": "end_ip",
                "redisCacheName": "redis_cache_name",
                "resourceGroupName": "resource_group_name",
                "startIp": "start_ip"
            },
            "azure:redis/getCache:getCache": {
                "enableNonSslPort": "enable_non_ssl_port",
                "minimumTlsVersion": "minimum_tls_version",
                "patchSchedules": "patch_schedule",
                "primaryAccessKey": "primary_access_key",
                "primaryConnectionString": "primary_connection_string",
                "privateStaticIpAddress": "private_static_ip_address",
                "redisConfigurations": "redis_configuration",
                "resourceGroupName": "resource_group_name",
                "secondaryAccessKey": "secondary_access_key",
                "secondaryConnectionString": "secondary_connection_string",
                "shardCount": "shard_count",
                "skuName": "sku_name",
                "sslPort": "ssl_port",
                "subnetId": "subnet_id"
            },
            "azure:redis/getCachePatchSchedule:getCachePatchSchedule": {
                "dayOfWeek": "day_of_week",
                "maintenanceWindow": "maintenance_window",
                "startHourUtc": "start_hour_utc"
            },
            "azure:redis/getCacheRedisConfiguration:getCacheRedisConfiguration": {
                "aofBackupEnabled": "aof_backup_enabled",
                "aofStorageConnectionString0": "aof_storage_connection_string_0",
                "aofStorageConnectionString1": "aof_storage_connection_string_1",
                "enableAuthentication": "enable_authentication",
                "maxfragmentationmemoryReserved": "maxfragmentationmemory_reserved",
                "maxmemoryDelta": "maxmemory_delta",
                "maxmemoryPolicy": "maxmemory_policy",
                "maxmemoryReserved": "maxmemory_reserved",
                "notifyKeyspaceEvents": "notify_keyspace_events",
                "rdbBackupEnabled": "rdb_backup_enabled",
                "rdbBackupFrequency": "rdb_backup_frequency",
                "rdbBackupMaxSnapshotCount": "rdb_backup_max_snapshot_count",
                "rdbStorageConnectionString": "rdb_storage_connection_string"
            },
            "azure:redis/getEnterpriseDatabase:getEnterpriseDatabase": {
                "clusterId": "cluster_id",
                "linkedDatabaseGroupNickname": "linked_database_group_nickname",
                "linkedDatabaseIds": "linked_database_id",
                "primaryAccessKey": "primary_access_key",
                "resourceGroupName": "resource_group_name",
                "secondaryAccessKey": "secondary_access_key"
            },
            "azure:redis/linkedServer:LinkedServer": {
                "geoReplicatedPrimaryHostName": "geo_replicated_primary_host_name",
                "linkedRedisCacheId": "linked_redis_cache_id",
                "linkedRedisCacheLocation": "linked_redis_cache_location",
                "resourceGroupName": "resource_group_name",
                "serverRole": "server_role",
                "targetRedisCacheName": "target_redis_cache_name"
            },
            "azure:relay/hybridConnection:HybridConnection": {
                "relayNamespaceName": "relay_namespace_name",
                "requiresClientAuthorization": "requires_client_authorization",
                "resourceGroupName": "resource_group_name",
                "userMetadata": "user_metadata"
            },
            "azure:relay/hybridConnectionAuthorizationRule:HybridConnectionAuthorizationRule": {
                "hybridConnectionName": "hybrid_connection_name",
                "namespaceName": "namespace_name",
                "primaryConnectionString": "primary_connection_string",
                "primaryKey": "primary_key",
                "resourceGroupName": "resource_group_name",
                "secondaryConnectionString": "secondary_connection_string",
                "secondaryKey": "secondary_key"
            },
            "azure:relay/namespace:Namespace": {
                "metricId": "metric_id",
                "primaryConnectionString": "primary_connection_string",
                "primaryKey": "primary_key",
                "resourceGroupName": "resource_group_name",
                "secondaryConnectionString": "secondary_connection_string",
                "secondaryKey": "secondary_key",
                "skuName": "sku_name"
            },
            "azure:relay/namespaceAuthorizationRule:NamespaceAuthorizationRule": {
                "namespaceName": "namespace_name",
                "primaryConnectionString": "primary_connection_string",
                "primaryKey": "primary_key",
                "resourceGroupName": "resource_group_name",
                "secondaryConnectionString": "secondary_connection_string",
                "secondaryKey": "secondary_key"
            },
            "azure:role/DefinitionPermission:DefinitionPermission": {
                "dataActions": "data_actions",
                "notActions": "not_actions",
                "notDataActions": "not_data_actions"
            },
            "azure:role/assignment:Assignment": {
                "conditionVersion": "condition_version",
                "delegatedManagedIdentityResourceId": "delegated_managed_identity_resource_id",
                "principalId": "principal_id",
                "principalType": "principal_type",
                "roleDefinitionId": "role_definition_id",
                "roleDefinitionName": "role_definition_name",
                "skipServicePrincipalAadCheck": "skip_service_principal_aad_check"
            },
            "azure:role/definition:Definition": {
                "assignableScopes": "assignable_scopes",
                "roleDefinitionId": "role_definition_id",
                "roleDefinitionResourceId": "role_definition_resource_id"
            },
            "azure:role/getRoleDefinition:getRoleDefinition": {
                "assignableScopes": "assignable_scopes",
                "roleDefinitionId": "role_definition_id"
            },
            "azure:role/getRoleDefinitionPermission:getRoleDefinitionPermission": {
                "dataActions": "data_actions",
                "notActions": "not_actions",
                "notDataActions": "not_data_actions"
            },
            "azure:search/ServiceIdentity:ServiceIdentity": {
                "principalId": "principal_id",
                "tenantId": "tenant_id"
            },
            "azure:search/getService:getService": {
                "identities": "identity",
                "partitionCount": "partition_count",
                "primaryKey": "primary_key",
                "publicNetworkAccessEnabled": "public_network_access_enabled",
                "queryKeys": "query_keys",
                "replicaCount": "replica_count",
                "resourceGroupName": "resource_group_name",
                "secondaryKey": "secondary_key"
            },
            "azure:search/getServiceIdentity:getServiceIdentity": {
                "principalId": "principal_id",
                "tenantId": "tenant_id"
            },
            "azure:search/service:Service": {
                "allowedIps": "allowed_ips",
                "authenticationFailureMode": "authentication_failure_mode",
                "customerManagedKeyEnforcementEnabled": "customer_managed_key_enforcement_enabled",
                "hostingMode": "hosting_mode",
                "localAuthenticationEnabled": "local_authentication_enabled",
                "partitionCount": "partition_count",
                "primaryKey": "primary_key",
                "publicNetworkAccessEnabled": "public_network_access_enabled",
                "queryKeys": "query_keys",
                "replicaCount": "replica_count",
                "resourceGroupName": "resource_group_name",
                "secondaryKey": "secondary_key",
                "semanticSearchSku": "semantic_search_sku"
            },
            "azure:search/sharedPrivateLinkService:SharedPrivateLinkService": {
                "requestMessage": "request_message",
                "searchServiceId": "search_service_id",
                "subresourceName": "subresource_name",
                "targetResourceId": "target_resource_id"
            },
            "azure:securitycenter/AutomationAction:AutomationAction": {
                "connectionString": "connection_string",
                "resourceId": "resource_id",
                "triggerUrl": "trigger_url"
            },
            "azure:securitycenter/AutomationSource:AutomationSource": {
                "eventSource": "event_source",
                "ruleSets": "rule_set"
            },
            "azure:securitycenter/AutomationSourceRuleSet:AutomationSourceRuleSet": {
                "rules": "rule"
            },
            "azure:securitycenter/AutomationSourceRuleSetRule:AutomationSourceRuleSetRule": {
                "expectedValue": "expected_value",
                "propertyPath": "property_path",
                "propertyType": "property_type"
            },
            "azure:securitycenter/SubscriptionPricingExtension:SubscriptionPricingExtension": {
                "additionalExtensionProperties": "additional_extension_properties"
            },
            "azure:securitycenter/advancedThreatProtection:AdvancedThreatProtection": {
                "targetResourceId": "target_resource_id"
            },
            "azure:securitycenter/assessment:Assessment": {
                "additionalData": "additional_data",
                "assessmentPolicyId": "assessment_policy_id",
                "targetResourceId": "target_resource_id"
            },
            "azure:securitycenter/assessmentPolicy:AssessmentPolicy": {
                "displayName": "display_name",
                "implementationEffort": "implementation_effort",
                "remediationDescription": "remediation_description",
                "userImpact": "user_impact"
            },
            "azure:securitycenter/autoProvisioning:AutoProvisioning": {
                "autoProvision": "auto_provision"
            },
            "azure:securitycenter/automation:Automation": {
                "actions": "action",
                "resourceGroupName": "resource_group_name",
                "sources": "source"
            },
            "azure:securitycenter/contact:Contact": {
                "alertNotifications": "alert_notifications",
                "alertsToAdmins": "alerts_to_admins"
            },
            "azure:securitycenter/serverVulnerabilityAssessment:ServerVulnerabilityAssessment": {
                "hybridMachineId": "hybrid_machine_id",
                "virtualMachineId": "virtual_machine_id"
            },
            "azure:securitycenter/serverVulnerabilityAssessmentVirtualMachine:ServerVulnerabilityAssessmentVirtualMachine": {
                "virtualMachineId": "virtual_machine_id"
            },
            "azure:securitycenter/setting:Setting": {
                "settingName": "setting_name"
            },
            "azure:securitycenter/storageDefender:StorageDefender": {
                "malwareScanningOnUploadCapGbPerMonth": "malware_scanning_on_upload_cap_gb_per_month",
                "malwareScanningOnUploadEnabled": "malware_scanning_on_upload_enabled",
                "overrideSubscriptionSettingsEnabled": "override_subscription_settings_enabled",
                "sensitiveDataDiscoveryEnabled": "sensitive_data_discovery_enabled",
                "storageAccountId": "storage_account_id"
            },
            "azure:securitycenter/subscriptionPricing:SubscriptionPricing": {
                "extensions": "extension",
                "resourceType": "resource_type"
            },
            "azure:securitycenter/workspace:Workspace": {
                "workspaceId": "workspace_id"
            },
            "azure:sentinel/AlertRuleAnomalyBuiltInMultiSelectObservation:AlertRuleAnomalyBuiltInMultiSelectObservation": {
                "supportedValues": "supported_values"
            },
            "azure:sentinel/AlertRuleAnomalyBuiltInRequiredDataConnector:AlertRuleAnomalyBuiltInRequiredDataConnector": {
                "connectorId": "connector_id",
                "dataTypes": "data_types"
            },
            "azure:sentinel/AlertRuleAnomalyBuiltInSingleSelectObservation:AlertRuleAnomalyBuiltInSingleSelectObservation": {
                "supportedValues": "supported_values"
            },
            "azure:sentinel/AlertRuleAnomalyDuplicateMultiSelectObservation:AlertRuleAnomalyDuplicateMultiSelectObservation": {
                "supportedValues": "supported_values"
            },
            "azure:sentinel/AlertRuleAnomalyDuplicateRequiredDataConnector:AlertRuleAnomalyDuplicateRequiredDataConnector": {
                "connectorId": "connector_id",
                "dataTypes": "data_types"
            },
            "azure:sentinel/AlertRuleAnomalyDuplicateSingleSelectObservation:AlertRuleAnomalyDuplicateSingleSelectObservation": {
                "supportedValues": "supported_values"
            },
            "azure:sentinel/AlertRuleFusionSource:AlertRuleFusionSource": {
                "subTypes": "sub_type"
            },
            "azure:sentinel/AlertRuleFusionSourceSubType:AlertRuleFusionSourceSubType": {
                "severitiesAlloweds": "severities_allowed"
            },
            "azure:sentinel/AlertRuleNrtAlertDetailsOverride:AlertRuleNrtAlertDetailsOverride": {
                "descriptionFormat": "description_format",
                "displayNameFormat": "display_name_format",
                "dynamicProperties": "dynamic_property",
                "severityColumnName": "severity_column_name",
                "tacticsColumnName": "tactics_column_name"
            },
            "azure:sentinel/AlertRuleNrtEntityMapping:AlertRuleNrtEntityMapping": {
                "entityType": "entity_type",
                "fieldMappings": "field_mapping"
            },
            "azure:sentinel/AlertRuleNrtEntityMappingFieldMapping:AlertRuleNrtEntityMappingFieldMapping": {
                "columnName": "column_name"
            },
            "azure:sentinel/AlertRuleNrtEventGrouping:AlertRuleNrtEventGrouping": {
                "aggregationMethod": "aggregation_method"
            },
            "azure:sentinel/AlertRuleNrtIncident:AlertRuleNrtIncident": {
                "createIncidentEnabled": "create_incident_enabled"
            },
            "azure:sentinel/AlertRuleNrtIncidentGrouping:AlertRuleNrtIncidentGrouping": {
                "byAlertDetails": "by_alert_details",
                "byCustomDetails": "by_custom_details",
                "byEntities": "by_entities",
                "entityMatchingMethod": "entity_matching_method",
                "lookbackDuration": "lookback_duration",
                "reopenClosedIncidents": "reopen_closed_incidents"
            },
            "azure:sentinel/AlertRuleNrtSentinelEntityMapping:AlertRuleNrtSentinelEntityMapping": {
                "columnName": "column_name"
            },
            "azure:sentinel/AlertRuleScheduledAlertDetailsOverride:AlertRuleScheduledAlertDetailsOverride": {
                "descriptionFormat": "description_format",
                "displayNameFormat": "display_name_format",
                "dynamicProperties": "dynamic_property",
                "severityColumnName": "severity_column_name",
                "tacticsColumnName": "tactics_column_name"
            },
            "azure:sentinel/AlertRuleScheduledEntityMapping:AlertRuleScheduledEntityMapping": {
                "entityType": "entity_type",
                "fieldMappings": "field_mapping"
            },
            "azure:sentinel/AlertRuleScheduledEntityMappingFieldMapping:AlertRuleScheduledEntityMappingFieldMapping": {
                "columnName": "column_name"
            },
            "azure:sentinel/AlertRuleScheduledEventGrouping:AlertRuleScheduledEventGrouping": {
                "aggregationMethod": "aggregation_method"
            },
            "azure:sentinel/AlertRuleScheduledIncidentConfiguration:AlertRuleScheduledIncidentConfiguration": {
                "createIncident": "create_incident"
            },
            "azure:sentinel/AlertRuleScheduledIncidentConfigurationGrouping:AlertRuleScheduledIncidentConfigurationGrouping": {
                "entityMatchingMethod": "entity_matching_method",
                "groupByAlertDetails": "group_by_alert_details",
                "groupByCustomDetails": "group_by_custom_details",
                "groupByEntities": "group_by_entities",
                "lookbackDuration": "lookback_duration",
                "reopenClosedIncidents": "reopen_closed_incidents"
            },
            "azure:sentinel/AlertRuleScheduledSentinelEntityMapping:AlertRuleScheduledSentinelEntityMapping": {
                "columnName": "column_name"
            },
            "azure:sentinel/AuthomationRuleActionIncident:AuthomationRuleActionIncident": {
                "classificationComment": "classification_comment",
                "ownerId": "owner_id"
            },
            "azure:sentinel/AuthomationRuleActionPlaybook:AuthomationRuleActionPlaybook": {
                "logicAppId": "logic_app_id",
                "tenantId": "tenant_id"
            },
            "azure:sentinel/AutomationRuleActionIncident:AutomationRuleActionIncident": {
                "classificationComment": "classification_comment",
                "ownerId": "owner_id"
            },
            "azure:sentinel/AutomationRuleActionPlaybook:AutomationRuleActionPlaybook": {
                "logicAppId": "logic_app_id",
                "tenantId": "tenant_id"
            },
            "azure:sentinel/ThreatIntelligenceIndicatorExternalReference:ThreatIntelligenceIndicatorExternalReference": {
                "sourceName": "source_name"
            },
            "azure:sentinel/ThreatIntelligenceIndicatorGranularMarking:ThreatIntelligenceIndicatorGranularMarking": {
                "markingRef": "marking_ref"
            },
            "azure:sentinel/ThreatIntelligenceIndicatorParsedPattern:ThreatIntelligenceIndicatorParsedPattern": {
                "patternTypeKey": "pattern_type_key",
                "patternTypeValues": "pattern_type_values"
            },
            "azure:sentinel/ThreatIntelligenceIndicatorParsedPatternPatternTypeValue:ThreatIntelligenceIndicatorParsedPatternPatternTypeValue": {
                "valueType": "value_type"
            },
            "azure:sentinel/alertRuleAnomalyBuiltIn:AlertRuleAnomalyBuiltIn": {
                "anomalySettingsVersion": "anomaly_settings_version",
                "anomalyVersion": "anomaly_version",
                "displayName": "display_name",
                "logAnalyticsWorkspaceId": "log_analytics_workspace_id",
                "multiSelectObservations": "multi_select_observation",
                "prioritizedExcludeObservations": "prioritized_exclude_observation",
                "requiredDataConnectors": "required_data_connector",
                "settingsDefinitionId": "settings_definition_id",
                "singleSelectObservations": "single_select_observation",
                "thresholdObservations": "threshold_observation"
            },
            "azure:sentinel/alertRuleAnomalyDuplicate:AlertRuleAnomalyDuplicate": {
                "anomalySettingsVersion": "anomaly_settings_version",
                "anomalyVersion": "anomaly_version",
                "builtInRuleId": "built_in_rule_id",
                "displayName": "display_name",
                "isDefaultSettings": "is_default_settings",
                "logAnalyticsWorkspaceId": "log_analytics_workspace_id",
                "multiSelectObservations": "multi_select_observation",
                "prioritizedExcludeObservations": "prioritized_exclude_observation",
                "requiredDataConnectors": "required_data_connector",
                "settingsDefinitionId": "settings_definition_id",
                "singleSelectObservations": "single_select_observation",
                "thresholdObservations": "threshold_observation"
            },
            "azure:sentinel/alertRuleFusion:AlertRuleFusion": {
                "alertRuleTemplateGuid": "alert_rule_template_guid",
                "logAnalyticsWorkspaceId": "log_analytics_workspace_id",
                "sources": "source"
            },
            "azure:sentinel/alertRuleMachineLearningBehaviorAnalytics:AlertRuleMachineLearningBehaviorAnalytics": {
                "alertRuleTemplateGuid": "alert_rule_template_guid",
                "logAnalyticsWorkspaceId": "log_analytics_workspace_id"
            },
            "azure:sentinel/alertRuleMsSecurityIncident:AlertRuleMsSecurityIncident": {
                "alertRuleTemplateGuid": "alert_rule_template_guid",
                "displayName": "display_name",
                "displayNameExcludeFilters": "display_name_exclude_filter",
                "displayNameFilters": "display_name_filter",
                "logAnalyticsWorkspaceId": "log_analytics_workspace_id",
                "productFilter": "product_filter",
                "severityFilters": "severity_filter"
            },
            "azure:sentinel/alertRuleNrt:AlertRuleNrt": {
                "alertDetailsOverrides": "alert_details_override",
                "alertRuleTemplateGuid": "alert_rule_template_guid",
                "alertRuleTemplateVersion": "alert_rule_template_version",
                "customDetails": "custom_details",
                "displayName": "display_name",
                "entityMappings": "entity_mapping",
                "eventGrouping": "event_grouping",
                "logAnalyticsWorkspaceId": "log_analytics_workspace_id",
                "sentinelEntityMappings": "sentinel_entity_mapping",
                "suppressionDuration": "suppression_duration",
                "suppressionEnabled": "suppression_enabled"
            },
            "azure:sentinel/alertRuleScheduled:AlertRuleScheduled": {
                "alertDetailsOverrides": "alert_details_override",
                "alertRuleTemplateGuid": "alert_rule_template_guid",
                "alertRuleTemplateVersion": "alert_rule_template_version",
                "customDetails": "custom_details",
                "displayName": "display_name",
                "entityMappings": "entity_mapping",
                "eventGrouping": "event_grouping",
                "incidentConfiguration": "incident_configuration",
                "logAnalyticsWorkspaceId": "log_analytics_workspace_id",
                "queryFrequency": "query_frequency",
                "queryPeriod": "query_period",
                "sentinelEntityMappings": "sentinel_entity_mapping",
                "suppressionDuration": "suppression_duration",
                "suppressionEnabled": "suppression_enabled",
                "triggerOperator": "trigger_operator",
                "triggerThreshold": "trigger_threshold"
            },
            "azure:sentinel/alertRuleThreatIntelligence:AlertRuleThreatIntelligence": {
                "alertRuleTemplateGuid": "alert_rule_template_guid",
                "logAnalyticsWorkspaceId": "log_analytics_workspace_id"
            },
            "azure:sentinel/authomationRule:AuthomationRule": {
                "actionIncidents": "action_incident",
                "actionPlaybooks": "action_playbook",
                "conditionJson": "condition_json",
                "conditions": "condition",
                "displayName": "display_name",
                "logAnalyticsWorkspaceId": "log_analytics_workspace_id",
                "triggersOn": "triggers_on",
                "triggersWhen": "triggers_when"
            },
            "azure:sentinel/automationRule:AutomationRule": {
                "actionIncidents": "action_incident",
                "actionPlaybooks": "action_playbook",
                "conditionJson": "condition_json",
                "conditions": "condition",
                "displayName": "display_name",
                "logAnalyticsWorkspaceId": "log_analytics_workspace_id",
                "triggersOn": "triggers_on",
                "triggersWhen": "triggers_when"
            },
            "azure:sentinel/dataConnectorAwsCloudTrail:DataConnectorAwsCloudTrail": {
                "awsRoleArn": "aws_role_arn",
                "logAnalyticsWorkspaceId": "log_analytics_workspace_id"
            },
            "azure:sentinel/dataConnectorAwsS3:DataConnectorAwsS3": {
                "awsRoleArn": "aws_role_arn",
                "destinationTable": "destination_table",
                "logAnalyticsWorkspaceId": "log_analytics_workspace_id",
                "sqsUrls": "sqs_urls"
            },
            "azure:sentinel/dataConnectorAzureActiveDirectory:DataConnectorAzureActiveDirectory": {
                "logAnalyticsWorkspaceId": "log_analytics_workspace_id",
                "tenantId": "tenant_id"
            },
            "azure:sentinel/dataConnectorAzureAdvancedThreadProtection:DataConnectorAzureAdvancedThreadProtection": {
                "logAnalyticsWorkspaceId": "log_analytics_workspace_id",
                "tenantId": "tenant_id"
            },
            "azure:sentinel/dataConnectorAzureSecurityCenter:DataConnectorAzureSecurityCenter": {
                "logAnalyticsWorkspaceId": "log_analytics_workspace_id",
                "subscriptionId": "subscription_id"
            },
            "azure:sentinel/dataConnectorDynamics365:DataConnectorDynamics365": {
                "logAnalyticsWorkspaceId": "log_analytics_workspace_id",
                "tenantId": "tenant_id"
            },
            "azure:sentinel/dataConnectorIot:DataConnectorIot": {
                "logAnalyticsWorkspaceId": "log_analytics_workspace_id",
                "subscriptionId": "subscription_id"
            },
            "azure:sentinel/dataConnectorMicrosoftCloudAppSecurity:DataConnectorMicrosoftCloudAppSecurity": {
                "alertsEnabled": "alerts_enabled",
                "discoveryLogsEnabled": "discovery_logs_enabled",
                "logAnalyticsWorkspaceId": "log_analytics_workspace_id",
                "tenantId": "tenant_id"
            },
            "azure:sentinel/dataConnectorMicrosoftDefenderAdvancedThreatProtection:DataConnectorMicrosoftDefenderAdvancedThreatProtection": {
                "logAnalyticsWorkspaceId": "log_analytics_workspace_id",
                "tenantId": "tenant_id"
            },
            "azure:sentinel/dataConnectorMicrosoftThreatIntelligence:DataConnectorMicrosoftThreatIntelligence": {
                "bingSafetyPhishingUrlLookbackDate": "bing_safety_phishing_url_lookback_date",
                "logAnalyticsWorkspaceId": "log_analytics_workspace_id",
                "microsoftEmergingThreatFeedLookbackDate": "microsoft_emerging_threat_feed_lookback_date",
                "tenantId": "tenant_id"
            },
            "azure:sentinel/dataConnectorMicrosoftThreatProtection:DataConnectorMicrosoftThreatProtection": {
                "logAnalyticsWorkspaceId": "log_analytics_workspace_id",
                "tenantId": "tenant_id"
            },
            "azure:sentinel/dataConnectorOffice365:DataConnectorOffice365": {
                "exchangeEnabled": "exchange_enabled",
                "logAnalyticsWorkspaceId": "log_analytics_workspace_id",
                "sharepointEnabled": "sharepoint_enabled",
                "teamsEnabled": "teams_enabled",
                "tenantId": "tenant_id"
            },
            "azure:sentinel/dataConnectorOffice365Project:DataConnectorOffice365Project": {
                "logAnalyticsWorkspaceId": "log_analytics_workspace_id",
                "tenantId": "tenant_id"
            },
            "azure:sentinel/dataConnectorOfficeAtp:DataConnectorOfficeAtp": {
                "logAnalyticsWorkspaceId": "log_analytics_workspace_id",
                "tenantId": "tenant_id"
            },
            "azure:sentinel/dataConnectorOfficeIrm:DataConnectorOfficeIrm": {
                "logAnalyticsWorkspaceId": "log_analytics_workspace_id",
                "tenantId": "tenant_id"
            },
            "azure:sentinel/dataConnectorOfficePowerBi:DataConnectorOfficePowerBi": {
                "logAnalyticsWorkspaceId": "log_analytics_workspace_id",
                "tenantId": "tenant_id"
            },
            "azure:sentinel/dataConnectorThreatIntelligence:DataConnectorThreatIntelligence": {
                "logAnalyticsWorkspaceId": "log_analytics_workspace_id",
                "lookbackDate": "lookback_date",
                "tenantId": "tenant_id"
            },
            "azure:sentinel/dataConnectorThreatIntelligenceTaxii:DataConnectorThreatIntelligenceTaxii": {
                "apiRootUrl": "api_root_url",
                "collectionId": "collection_id",
                "displayName": "display_name",
                "logAnalyticsWorkspaceId": "log_analytics_workspace_id",
                "lookbackDate": "lookback_date",
                "pollingFrequency": "polling_frequency",
                "tenantId": "tenant_id",
                "userName": "user_name"
            },
            "azure:sentinel/getAlertRule:getAlertRule": {
                "logAnalyticsWorkspaceId": "log_analytics_workspace_id"
            },
            "azure:sentinel/getAlertRuleAnomaly:getAlertRuleAnomaly": {
                "anomalySettingsVersion": "anomaly_settings_version",
                "anomalyVersion": "anomaly_version",
                "displayName": "display_name",
                "logAnalyticsWorkspaceId": "log_analytics_workspace_id",
                "multiSelectObservations": "multi_select_observation",
                "prioritizedExcludeObservations": "prioritized_exclude_observation",
                "requiredDataConnectors": "required_data_connector",
                "settingsDefinitionId": "settings_definition_id",
                "singleSelectObservations": "single_select_observation",
                "thresholdObservations": "threshold_observation"
            },
            "azure:sentinel/getAlertRuleAnomalyMultiSelectObservation:getAlertRuleAnomalyMultiSelectObservation": {
                "supportedValues": "supported_values"
            },
            "azure:sentinel/getAlertRuleAnomalyRequiredDataConnector:getAlertRuleAnomalyRequiredDataConnector": {
                "connectorId": "connector_id",
                "dataTypes": "data_types"
            },
            "azure:sentinel/getAlertRuleAnomalySingleSelectObservation:getAlertRuleAnomalySingleSelectObservation": {
                "supportedValues": "supported_values"
            },
            "azure:sentinel/getAlertRuleTemplate:getAlertRuleTemplate": {
                "displayName": "display_name",
                "logAnalyticsWorkspaceId": "log_analytics_workspace_id",
                "nrtTemplates": "nrt_template",
                "scheduledTemplates": "scheduled_template",
                "securityIncidentTemplates": "security_incident_template"
            },
            "azure:sentinel/getAlertRuleTemplateScheduledTemplate:getAlertRuleTemplateScheduledTemplate": {
                "queryFrequency": "query_frequency",
                "queryPeriod": "query_period",
                "triggerOperator": "trigger_operator",
                "triggerThreshold": "trigger_threshold"
            },
            "azure:sentinel/getAlertRuleTemplateSecurityIncidentTemplate:getAlertRuleTemplateSecurityIncidentTemplate": {
                "productFilter": "product_filter"
            },
            "azure:sentinel/logAnalyticsWorkspaceOnboarding:LogAnalyticsWorkspaceOnboarding": {
                "customerManagedKeyEnabled": "customer_managed_key_enabled",
                "resourceGroupName": "resource_group_name",
                "workspaceId": "workspace_id",
                "workspaceName": "workspace_name"
            },
            "azure:sentinel/metadata:Metadata": {
                "contentId": "content_id",
                "contentSchemaVersion": "content_schema_version",
                "customVersion": "custom_version",
                "firstPublishDate": "first_publish_date",
                "iconId": "icon_id",
                "lastPublishDate": "last_publish_date",
                "parentId": "parent_id",
                "previewImages": "preview_images",
                "previewImagesDarks": "preview_images_dark",
                "threatAnalysisTactics": "threat_analysis_tactics",
                "threatAnalysisTechniques": "threat_analysis_techniques",
                "workspaceId": "workspace_id"
            },
            "azure:sentinel/threatIntelligenceIndicator:ThreatIntelligenceIndicator": {
                "createdBy": "created_by",
                "createdOn": "created_on",
                "displayName": "display_name",
                "externalId": "external_id",
                "externalLastUpdatedTimeUtc": "external_last_updated_time_utc",
                "externalReferences": "external_reference",
                "granularMarkings": "granular_marking",
                "indicatorTypes": "indicator_type",
                "killChainPhases": "kill_chain_phase",
                "lastUpdatedTimeUtc": "last_updated_time_utc",
                "objectMarkingRefs": "object_marking_refs",
                "parsedPatterns": "parsed_pattern",
                "patternType": "pattern_type",
                "patternVersion": "pattern_version",
                "threatTypes": "threat_types",
                "validateFromUtc": "validate_from_utc",
                "validateUntilUtc": "validate_until_utc",
                "workspaceId": "workspace_id"
            },
            "azure:sentinel/watchlist:Watchlist": {
                "defaultDuration": "default_duration",
                "displayName": "display_name",
                "itemSearchKey": "item_search_key",
                "logAnalyticsWorkspaceId": "log_analytics_workspace_id"
            },
            "azure:sentinel/watchlistItem:WatchlistItem": {
                "watchlistId": "watchlist_id"
            },
            "azure:servicebus/NamespaceCustomerManagedKey:NamespaceCustomerManagedKey": {
                "identityId": "identity_id",
                "infrastructureEncryptionEnabled": "infrastructure_encryption_enabled",
                "keyVaultKeyId": "key_vault_key_id"
            },
            "azure:servicebus/NamespaceIdentity:NamespaceIdentity": {
                "identityIds": "identity_ids",
                "principalId": "principal_id",
                "tenantId": "tenant_id"
            },
            "azure:servicebus/NamespaceNetworkRuleSet:NamespaceNetworkRuleSet": {
                "defaultAction": "default_action",
                "ipRules": "ip_rules",
                "networkRules": "network_rules",
                "publicNetworkAccessEnabled": "public_network_access_enabled",
                "trustedServicesAllowed": "trusted_services_allowed"
            },
            "azure:servicebus/NamespaceNetworkRuleSetNetworkRule:NamespaceNetworkRuleSetNetworkRule": {
                "ignoreMissingVnetServiceEndpoint": "ignore_missing_vnet_service_endpoint",
                "subnetId": "subnet_id"
            },
            "azure:servicebus/SubscriptionClientScopedSubscription:SubscriptionClientScopedSubscription": {
                "clientId": "client_id",
                "isClientScopedSubscriptionDurable": "is_client_scoped_subscription_durable",
                "isClientScopedSubscriptionShareable": "is_client_scoped_subscription_shareable"
            },
            "azure:servicebus/SubscriptionRuleCorrelationFilter:SubscriptionRuleCorrelationFilter": {
                "contentType": "content_type",
                "correlationId": "correlation_id",
                "messageId": "message_id",
                "replyTo": "reply_to",
                "replyToSessionId": "reply_to_session_id",
                "sessionId": "session_id"
            },
            "azure:servicebus/getNamespace:getNamespace": {
                "defaultPrimaryConnectionString": "default_primary_connection_string",
                "defaultPrimaryKey": "default_primary_key",
                "defaultSecondaryConnectionString": "default_secondary_connection_string",
                "defaultSecondaryKey": "default_secondary_key",
                "resourceGroupName": "resource_group_name",
                "zoneRedundant": "zone_redundant"
            },
            "azure:servicebus/getNamespaceAuthorizationRule:getNamespaceAuthorizationRule": {
                "namespaceId": "namespace_id",
                "namespaceName": "namespace_name",
                "primaryConnectionString": "primary_connection_string",
                "primaryConnectionStringAlias": "primary_connection_string_alias",
                "primaryKey": "primary_key",
                "resourceGroupName": "resource_group_name",
                "secondaryConnectionString": "secondary_connection_string",
                "secondaryConnectionStringAlias": "secondary_connection_string_alias",
                "secondaryKey": "secondary_key"
            },
            "azure:servicebus/getNamespaceDisasterRecoveryConfig:getNamespaceDisasterRecoveryConfig": {
                "aliasAuthorizationRuleId": "alias_authorization_rule_id",
                "defaultPrimaryKey": "default_primary_key",
                "defaultSecondaryKey": "default_secondary_key",
                "namespaceId": "namespace_id",
                "namespaceName": "namespace_name",
                "partnerNamespaceId": "partner_namespace_id",
                "primaryConnectionStringAlias": "primary_connection_string_alias",
                "resourceGroupName": "resource_group_name",
                "secondaryConnectionStringAlias": "secondary_connection_string_alias"
            },
            "azure:servicebus/getQueue:getQueue": {
                "autoDeleteOnIdle": "auto_delete_on_idle",
                "deadLetteringOnMessageExpiration": "dead_lettering_on_message_expiration",
                "defaultMessageTtl": "default_message_ttl",
                "duplicateDetectionHistoryTimeWindow": "duplicate_detection_history_time_window",
                "enableBatchedOperations": "enable_batched_operations",
                "enableExpress": "enable_express",
                "enablePartitioning": "enable_partitioning",
                "forwardDeadLetteredMessagesTo": "forward_dead_lettered_messages_to",
                "forwardTo": "forward_to",
                "lockDuration": "lock_duration",
                "maxDeliveryCount": "max_delivery_count",
                "maxSizeInMegabytes": "max_size_in_megabytes",
                "namespaceId": "namespace_id",
                "namespaceName": "namespace_name",
                "requiresDuplicateDetection": "requires_duplicate_detection",
                "requiresSession": "requires_session",
                "resourceGroupName": "resource_group_name"
            },
            "azure:servicebus/getQueueAuthorizationRule:getQueueAuthorizationRule": {
                "namespaceName": "namespace_name",
                "primaryConnectionString": "primary_connection_string",
                "primaryConnectionStringAlias": "primary_connection_string_alias",
                "primaryKey": "primary_key",
                "queueId": "queue_id",
                "queueName": "queue_name",
                "resourceGroupName": "resource_group_name",
                "secondaryConnectionString": "secondary_connection_string",
                "secondaryConnectionStringAlias": "secondary_connection_string_alias",
                "secondaryKey": "secondary_key"
            },
            "azure:servicebus/getSubscription:getSubscription": {
                "autoDeleteOnIdle": "auto_delete_on_idle",
                "deadLetteringOnFilterEvaluationError": "dead_lettering_on_filter_evaluation_error",
                "deadLetteringOnMessageExpiration": "dead_lettering_on_message_expiration",
                "defaultMessageTtl": "default_message_ttl",
                "enableBatchedOperations": "enable_batched_operations",
                "forwardDeadLetteredMessagesTo": "forward_dead_lettered_messages_to",
                "forwardTo": "forward_to",
                "lockDuration": "lock_duration",
                "maxDeliveryCount": "max_delivery_count",
                "namespaceName": "namespace_name",
                "requiresSession": "requires_session",
                "resourceGroupName": "resource_group_name",
                "topicId": "topic_id",
                "topicName": "topic_name"
            },
            "azure:servicebus/getTopic:getTopic": {
                "autoDeleteOnIdle": "auto_delete_on_idle",
                "defaultMessageTtl": "default_message_ttl",
                "duplicateDetectionHistoryTimeWindow": "duplicate_detection_history_time_window",
                "enableBatchedOperations": "enable_batched_operations",
                "enableExpress": "enable_express",
                "enablePartitioning": "enable_partitioning",
                "maxSizeInMegabytes": "max_size_in_megabytes",
                "namespaceId": "namespace_id",
                "namespaceName": "namespace_name",
                "requiresDuplicateDetection": "requires_duplicate_detection",
                "resourceGroupName": "resource_group_name",
                "supportOrdering": "support_ordering"
            },
            "azure:servicebus/getTopicAuthorizationRule:getTopicAuthorizationRule": {
                "namespaceName": "namespace_name",
                "primaryConnectionString": "primary_connection_string",
                "primaryConnectionStringAlias": "primary_connection_string_alias",
                "primaryKey": "primary_key",
                "queueName": "queue_name",
                "resourceGroupName": "resource_group_name",
                "secondaryConnectionString": "secondary_connection_string",
                "secondaryConnectionStringAlias": "secondary_connection_string_alias",
                "secondaryKey": "secondary_key",
                "topicId": "topic_id",
                "topicName": "topic_name"
            },
            "azure:servicebus/namespace:Namespace": {
                "customerManagedKey": "customer_managed_key",
                "defaultPrimaryConnectionString": "default_primary_connection_string",
                "defaultPrimaryKey": "default_primary_key",
                "defaultSecondaryConnectionString": "default_secondary_connection_string",
                "defaultSecondaryKey": "default_secondary_key",
                "localAuthEnabled": "local_auth_enabled",
                "minimumTlsVersion": "minimum_tls_version",
                "networkRuleSet": "network_rule_set",
                "publicNetworkAccessEnabled": "public_network_access_enabled",
                "resourceGroupName": "resource_group_name",
                "zoneRedundant": "zone_redundant"
            },
            "azure:servicebus/namespaceAuthorizationRule:NamespaceAuthorizationRule": {
                "namespaceId": "namespace_id",
                "primaryConnectionString": "primary_connection_string",
                "primaryConnectionStringAlias": "primary_connection_string_alias",
                "primaryKey": "primary_key",
                "secondaryConnectionString": "secondary_connection_string",
                "secondaryConnectionStringAlias": "secondary_connection_string_alias",
                "secondaryKey": "secondary_key"
            },
            "azure:servicebus/namespaceDisasterRecoveryConfig:NamespaceDisasterRecoveryConfig": {
                "aliasAuthorizationRuleId": "alias_authorization_rule_id",
                "defaultPrimaryKey": "default_primary_key",
                "defaultSecondaryKey": "default_secondary_key",
                "partnerNamespaceId": "partner_namespace_id",
                "primaryConnectionStringAlias": "primary_connection_string_alias",
                "primaryNamespaceId": "primary_namespace_id",
                "secondaryConnectionStringAlias": "secondary_connection_string_alias"
            },
            "azure:servicebus/namespaceNetworkRuleSet:NamespaceNetworkRuleSet": {
                "defaultAction": "default_action",
                "ipRules": "ip_rules",
                "namespaceId": "namespace_id",
                "networkRules": "network_rules",
                "publicNetworkAccessEnabled": "public_network_access_enabled",
                "trustedServicesAllowed": "trusted_services_allowed"
            },
            "azure:servicebus/queue:Queue": {
                "autoDeleteOnIdle": "auto_delete_on_idle",
                "deadLetteringOnMessageExpiration": "dead_lettering_on_message_expiration",
                "defaultMessageTtl": "default_message_ttl",
                "duplicateDetectionHistoryTimeWindow": "duplicate_detection_history_time_window",
                "enableBatchedOperations": "enable_batched_operations",
                "enableExpress": "enable_express",
                "enablePartitioning": "enable_partitioning",
                "forwardDeadLetteredMessagesTo": "forward_dead_lettered_messages_to",
                "forwardTo": "forward_to",
                "lockDuration": "lock_duration",
                "maxDeliveryCount": "max_delivery_count",
                "maxMessageSizeInKilobytes": "max_message_size_in_kilobytes",
                "maxSizeInMegabytes": "max_size_in_megabytes",
                "namespaceId": "namespace_id",
                "namespaceName": "namespace_name",
                "requiresDuplicateDetection": "requires_duplicate_detection",
                "requiresSession": "requires_session",
                "resourceGroupName": "resource_group_name"
            },
            "azure:servicebus/queueAuthorizationRule:QueueAuthorizationRule": {
                "primaryConnectionString": "primary_connection_string",
                "primaryConnectionStringAlias": "primary_connection_string_alias",
                "primaryKey": "primary_key",
                "queueId": "queue_id",
                "secondaryConnectionString": "secondary_connection_string",
                "secondaryConnectionStringAlias": "secondary_connection_string_alias",
                "secondaryKey": "secondary_key"
            },
            "azure:servicebus/subscription:Subscription": {
                "autoDeleteOnIdle": "auto_delete_on_idle",
                "clientScopedSubscription": "client_scoped_subscription",
                "clientScopedSubscriptionEnabled": "client_scoped_subscription_enabled",
                "deadLetteringOnFilterEvaluationError": "dead_lettering_on_filter_evaluation_error",
                "deadLetteringOnMessageExpiration": "dead_lettering_on_message_expiration",
                "defaultMessageTtl": "default_message_ttl",
                "enableBatchedOperations": "enable_batched_operations",
                "forwardDeadLetteredMessagesTo": "forward_dead_lettered_messages_to",
                "forwardTo": "forward_to",
                "lockDuration": "lock_duration",
                "maxDeliveryCount": "max_delivery_count",
                "requiresSession": "requires_session",
                "topicId": "topic_id"
            },
            "azure:servicebus/subscriptionRule:SubscriptionRule": {
                "correlationFilter": "correlation_filter",
                "filterType": "filter_type",
                "sqlFilter": "sql_filter",
                "sqlFilterCompatibilityLevel": "sql_filter_compatibility_level",
                "subscriptionId": "subscription_id"
            },
            "azure:servicebus/topic:Topic": {
                "autoDeleteOnIdle": "auto_delete_on_idle",
                "defaultMessageTtl": "default_message_ttl",
                "duplicateDetectionHistoryTimeWindow": "duplicate_detection_history_time_window",
                "enableBatchedOperations": "enable_batched_operations",
                "enableExpress": "enable_express",
                "enablePartitioning": "enable_partitioning",
                "maxMessageSizeInKilobytes": "max_message_size_in_kilobytes",
                "maxSizeInMegabytes": "max_size_in_megabytes",
                "namespaceId": "namespace_id",
                "namespaceName": "namespace_name",
                "requiresDuplicateDetection": "requires_duplicate_detection",
                "resourceGroupName": "resource_group_name",
                "supportOrdering": "support_ordering"
            },
            "azure:servicebus/topicAuthorizationRule:TopicAuthorizationRule": {
                "primaryConnectionString": "primary_connection_string",
                "primaryConnectionStringAlias": "primary_connection_string_alias",
                "primaryKey": "primary_key",
                "secondaryConnectionString": "secondary_connection_string",
                "secondaryConnectionStringAlias": "secondary_connection_string_alias",
                "secondaryKey": "secondary_key",
                "topicId": "topic_id"
            },
            "azure:servicefabric/ClusterAzureActiveDirectory:ClusterAzureActiveDirectory": {
                "clientApplicationId": "client_application_id",
                "clusterApplicationId": "cluster_application_id",
                "tenantId": "tenant_id"
            },
            "azure:servicefabric/ClusterCertificate:ClusterCertificate": {
                "thumbprintSecondary": "thumbprint_secondary",
                "x509StoreName": "x509_store_name"
            },
            "azure:servicefabric/ClusterCertificateCommonNames:ClusterCertificateCommonNames": {
                "commonNames": "common_names",
                "x509StoreName": "x509_store_name"
            },
            "azure:servicefabric/ClusterCertificateCommonNamesCommonName:ClusterCertificateCommonNamesCommonName": {
                "certificateCommonName": "certificate_common_name",
                "certificateIssuerThumbprint": "certificate_issuer_thumbprint"
            },
            "azure:servicefabric/ClusterClientCertificateCommonName:ClusterClientCertificateCommonName": {
                "commonName": "common_name",
                "isAdmin": "is_admin",
                "issuerThumbprint": "issuer_thumbprint"
            },
            "azure:servicefabric/ClusterClientCertificateThumbprint:ClusterClientCertificateThumbprint": {
                "isAdmin": "is_admin"
            },
            "azure:servicefabric/ClusterDiagnosticsConfig:ClusterDiagnosticsConfig": {
                "blobEndpoint": "blob_endpoint",
                "protectedAccountKeyName": "protected_account_key_name",
                "queueEndpoint": "queue_endpoint",
                "storageAccountName": "storage_account_name",
                "tableEndpoint": "table_endpoint"
            },
            "azure:servicefabric/ClusterNodeType:ClusterNodeType": {
                "applicationPorts": "application_ports",
                "clientEndpointPort": "client_endpoint_port",
                "durabilityLevel": "durability_level",
                "ephemeralPorts": "ephemeral_ports",
                "httpEndpointPort": "http_endpoint_port",
                "instanceCount": "instance_count",
                "isPrimary": "is_primary",
                "isStateless": "is_stateless",
                "multipleAvailabilityZones": "multiple_availability_zones",
                "placementProperties": "placement_properties",
                "reverseProxyEndpointPort": "reverse_proxy_endpoint_port"
            },
            "azure:servicefabric/ClusterNodeTypeApplicationPorts:ClusterNodeTypeApplicationPorts": {
                "endPort": "end_port",
                "startPort": "start_port"
            },
            "azure:servicefabric/ClusterNodeTypeEphemeralPorts:ClusterNodeTypeEphemeralPorts": {
                "endPort": "end_port",
                "startPort": "start_port"
            },
            "azure:servicefabric/ClusterReverseProxyCertificate:ClusterReverseProxyCertificate": {
                "thumbprintSecondary": "thumbprint_secondary",
                "x509StoreName": "x509_store_name"
            },
            "azure:servicefabric/ClusterReverseProxyCertificateCommonNames:ClusterReverseProxyCertificateCommonNames": {
                "commonNames": "common_names",
                "x509StoreName": "x509_store_name"
            },
            "azure:servicefabric/ClusterReverseProxyCertificateCommonNamesCommonName:ClusterReverseProxyCertificateCommonNamesCommonName": {
                "certificateCommonName": "certificate_common_name",
                "certificateIssuerThumbprint": "certificate_issuer_thumbprint"
            },
            "azure:servicefabric/ClusterUpgradePolicy:ClusterUpgradePolicy": {
                "deltaHealthPolicy": "delta_health_policy",
                "forceRestartEnabled": "force_restart_enabled",
                "healthCheckRetryTimeout": "health_check_retry_timeout",
                "healthCheckStableDuration": "health_check_stable_duration",
                "healthCheckWaitDuration": "health_check_wait_duration",
                "healthPolicy": "health_policy",
                "upgradeDomainTimeout": "upgrade_domain_timeout",
                "upgradeReplicaSetCheckTimeout": "upgrade_replica_set_check_timeout",
                "upgradeTimeout": "upgrade_timeout"
            },
            "azure:servicefabric/ClusterUpgradePolicyDeltaHealthPolicy:ClusterUpgradePolicyDeltaHealthPolicy": {
                "maxDeltaUnhealthyApplicationsPercent": "max_delta_unhealthy_applications_percent",
                "maxDeltaUnhealthyNodesPercent": "max_delta_unhealthy_nodes_percent",
                "maxUpgradeDomainDeltaUnhealthyNodesPercent": "max_upgrade_domain_delta_unhealthy_nodes_percent"
            },
            "azure:servicefabric/ClusterUpgradePolicyHealthPolicy:ClusterUpgradePolicyHealthPolicy": {
                "maxUnhealthyApplicationsPercent": "max_unhealthy_applications_percent",
                "maxUnhealthyNodesPercent": "max_unhealthy_nodes_percent"
            },
            "azure:servicefabric/ManagedClusterAuthentication:ManagedClusterAuthentication": {
                "activeDirectory": "active_directory",
                "certificates": "certificate"
            },
            "azure:servicefabric/ManagedClusterAuthenticationActiveDirectory:ManagedClusterAuthenticationActiveDirectory": {
                "clientApplicationId": "client_application_id",
                "clusterApplicationId": "cluster_application_id",
                "tenantId": "tenant_id"
            },
            "azure:servicefabric/ManagedClusterAuthenticationCertificate:ManagedClusterAuthenticationCertificate": {
                "commonName": "common_name"
            },
            "azure:servicefabric/ManagedClusterLbRule:ManagedClusterLbRule": {
                "backendPort": "backend_port",
                "frontendPort": "frontend_port",
                "probeProtocol": "probe_protocol",
                "probeRequestPath": "probe_request_path"
            },
            "azure:servicefabric/ManagedClusterNodeType:ManagedClusterNodeType": {
                "applicationPortRange": "application_port_range",
                "dataDiskSizeGb": "data_disk_size_gb",
                "dataDiskType": "data_disk_type",
                "ephemeralPortRange": "ephemeral_port_range",
                "multiplePlacementGroupsEnabled": "multiple_placement_groups_enabled",
                "placementProperties": "placement_properties",
                "vmImageOffer": "vm_image_offer",
                "vmImagePublisher": "vm_image_publisher",
                "vmImageSku": "vm_image_sku",
                "vmImageVersion": "vm_image_version",
                "vmInstanceCount": "vm_instance_count",
                "vmSecrets": "vm_secrets",
                "vmSize": "vm_size"
            },
            "azure:servicefabric/ManagedClusterNodeTypeVmSecret:ManagedClusterNodeTypeVmSecret": {
                "vaultId": "vault_id"
            },
            "azure:servicefabric/cluster:Cluster": {
                "addOnFeatures": "add_on_features",
                "azureActiveDirectory": "azure_active_directory",
                "certificateCommonNames": "certificate_common_names",
                "clientCertificateCommonNames": "client_certificate_common_name",
                "clientCertificateThumbprints": "client_certificate_thumbprint",
                "clusterCodeVersion": "cluster_code_version",
                "clusterEndpoint": "cluster_endpoint",
                "diagnosticsConfig": "diagnostics_config",
                "fabricSettings": "fabric_settings",
                "managementEndpoint": "management_endpoint",
                "nodeTypes": "node_type",
                "reliabilityLevel": "reliability_level",
                "resourceGroupName": "resource_group_name",
                "reverseProxyCertificate": "reverse_proxy_certificate",
                "reverseProxyCertificateCommonNames": "reverse_proxy_certificate_common_names",
                "serviceFabricZonalUpgradeMode": "service_fabric_zonal_upgrade_mode",
                "upgradeMode": "upgrade_mode",
                "upgradePolicy": "upgrade_policy",
                "vmImage": "vm_image",
                "vmssZonalUpgradeMode": "vmss_zonal_upgrade_mode"
            },
            "azure:servicefabric/managedCluster:ManagedCluster": {
                "backupServiceEnabled": "backup_service_enabled",
                "clientConnectionPort": "client_connection_port",
                "customFabricSettings": "custom_fabric_setting",
                "dnsName": "dns_name",
                "dnsServiceEnabled": "dns_service_enabled",
                "httpGatewayPort": "http_gateway_port",
                "lbRules": "lb_rule",
                "nodeTypes": "node_type",
                "resourceGroupName": "resource_group_name",
                "upgradeWave": "upgrade_wave"
            },
            "azure:signalr/ServiceCor:ServiceCor": {
                "allowedOrigins": "allowed_origins"
            },
            "azure:signalr/ServiceIdentity:ServiceIdentity": {
                "identityIds": "identity_ids",
                "principalId": "principal_id",
                "tenantId": "tenant_id"
            },
            "azure:signalr/ServiceLiveTrace:ServiceLiveTrace": {
                "connectivityLogsEnabled": "connectivity_logs_enabled",
                "httpRequestLogsEnabled": "http_request_logs_enabled",
                "messagingLogsEnabled": "messaging_logs_enabled"
            },
            "azure:signalr/ServiceNetworkAclPrivateEndpoint:ServiceNetworkAclPrivateEndpoint": {
                "allowedRequestTypes": "allowed_request_types",
                "deniedRequestTypes": "denied_request_types"
            },
            "azure:signalr/ServiceNetworkAclPublicNetwork:ServiceNetworkAclPublicNetwork": {
                "allowedRequestTypes": "allowed_request_types",
                "deniedRequestTypes": "denied_request_types"
            },
            "azure:signalr/ServiceUpstreamEndpoint:ServiceUpstreamEndpoint": {
                "categoryPatterns": "category_pattern",
                "eventPatterns": "event_pattern",
                "hubPatterns": "hub_pattern",
                "urlTemplate": "url_template",
                "userAssignedIdentityId": "user_assigned_identity_id"
            },
            "azure:signalr/getService:getService": {
                "aadAuthEnabled": "aad_auth_enabled",
                "ipAddress": "ip_address",
                "localAuthEnabled": "local_auth_enabled",
                "primaryAccessKey": "primary_access_key",
                "primaryConnectionString": "primary_connection_string",
                "publicNetworkAccessEnabled": "public_network_access_enabled",
                "publicPort": "public_port",
                "resourceGroupName": "resource_group_name",
                "secondaryAccessKey": "secondary_access_key",
                "secondaryConnectionString": "secondary_connection_string",
                "serverPort": "server_port",
                "serverlessConnectionTimeoutInSeconds": "serverless_connection_timeout_in_seconds",
                "tlsClientCertEnabled": "tls_client_cert_enabled"
            },
            "azure:signalr/service:Service": {
                "aadAuthEnabled": "aad_auth_enabled",
                "connectivityLogsEnabled": "connectivity_logs_enabled",
                "httpRequestLogsEnabled": "http_request_logs_enabled",
                "ipAddress": "ip_address",
                "liveTrace": "live_trace",
                "liveTraceEnabled": "live_trace_enabled",
                "localAuthEnabled": "local_auth_enabled",
                "messagingLogsEnabled": "messaging_logs_enabled",
                "primaryAccessKey": "primary_access_key",
                "primaryConnectionString": "primary_connection_string",
                "publicNetworkAccessEnabled": "public_network_access_enabled",
                "publicPort": "public_port",
                "resourceGroupName": "resource_group_name",
                "secondaryAccessKey": "secondary_access_key",
                "secondaryConnectionString": "secondary_connection_string",
                "serverPort": "server_port",
                "serverlessConnectionTimeoutInSeconds": "serverless_connection_timeout_in_seconds",
                "serviceMode": "service_mode",
                "tlsClientCertEnabled": "tls_client_cert_enabled",
                "upstreamEndpoints": "upstream_endpoint"
            },
            "azure:signalr/serviceCustomCertificate:ServiceCustomCertificate": {
                "certificateVersion": "certificate_version",
                "customCertificateId": "custom_certificate_id",
                "signalrServiceId": "signalr_service_id"
            },
            "azure:signalr/serviceCustomDomain:ServiceCustomDomain": {
                "domainName": "domain_name",
                "signalrCustomCertificateId": "signalr_custom_certificate_id",
                "signalrServiceId": "signalr_service_id"
            },
            "azure:signalr/serviceNetworkAcl:ServiceNetworkAcl": {
                "defaultAction": "default_action",
                "privateEndpoints": "private_endpoint",
                "publicNetwork": "public_network",
                "signalrServiceId": "signalr_service_id"
            },
            "azure:signalr/sharedPrivateLinkResource:SharedPrivateLinkResource": {
                "requestMessage": "request_message",
                "signalrServiceId": "signalr_service_id",
                "subResourceName": "sub_resource_name",
                "targetResourceId": "target_resource_id"
            },
            "azure:siterecovery/ProtectionContainerMappingAutomaticUpdate:ProtectionContainerMappingAutomaticUpdate": {
                "authenticationType": "authentication_type",
                "automationAccountId": "automation_account_id"
            },
            "azure:siterecovery/ReplicatedVMManagedDisk:ReplicatedVMManagedDisk": {
                "diskId": "disk_id",
                "stagingStorageAccountId": "staging_storage_account_id",
                "targetDiskEncryption": "target_disk_encryption",
                "targetDiskEncryptionSetId": "target_disk_encryption_set_id",
                "targetDiskType": "target_disk_type",
                "targetReplicaDiskType": "target_replica_disk_type",
                "targetResourceGroupId": "target_resource_group_id"
            },
            "azure:siterecovery/ReplicatedVMManagedDiskTargetDiskEncryption:ReplicatedVMManagedDiskTargetDiskEncryption": {
                "diskEncryptionKey": "disk_encryption_key",
                "keyEncryptionKey": "key_encryption_key"
            },
            "azure:siterecovery/ReplicatedVMManagedDiskTargetDiskEncryptionDiskEncryptionKey:ReplicatedVMManagedDiskTargetDiskEncryptionDiskEncryptionKey": {
                "secretUrl": "secret_url",
                "vaultId": "vault_id"
            },
            "azure:siterecovery/ReplicatedVMManagedDiskTargetDiskEncryptionKeyEncryptionKey:ReplicatedVMManagedDiskTargetDiskEncryptionKeyEncryptionKey": {
                "keyUrl": "key_url",
                "vaultId": "vault_id"
            },
            "azure:siterecovery/ReplicatedVMNetworkInterface:ReplicatedVMNetworkInterface": {
                "failoverTestPublicIpAddressId": "failover_test_public_ip_address_id",
                "failoverTestStaticIp": "failover_test_static_ip",
                "failoverTestSubnetName": "failover_test_subnet_name",
                "isPrimary": "is_primary",
                "recoveryPublicIpAddressId": "recovery_public_ip_address_id",
                "sourceNetworkInterfaceId": "source_network_interface_id",
                "targetStaticIp": "target_static_ip",
                "targetSubnetName": "target_subnet_name"
            },
            "azure:siterecovery/ReplicatedVMUnmanagedDisk:ReplicatedVMUnmanagedDisk": {
                "diskUri": "disk_uri",
                "stagingStorageAccountId": "staging_storage_account_id",
                "targetStorageAccountId": "target_storage_account_id"
            },
            "azure:siterecovery/ReplicationRecoveryPlanAzureToAzureSettings:ReplicationRecoveryPlanAzureToAzureSettings": {
                "primaryEdgeZone": "primary_edge_zone",
                "primaryZone": "primary_zone",
                "recoveryEdgeZone": "recovery_edge_zone",
                "recoveryZone": "recovery_zone"
            },
            "azure:siterecovery/ReplicationRecoveryPlanBootRecoveryGroup:ReplicationRecoveryPlanBootRecoveryGroup": {
                "postActions": "post_action",
                "preActions": "pre_action",
                "replicatedProtectedItems": "replicated_protected_items"
            },
            "azure:siterecovery/ReplicationRecoveryPlanBootRecoveryGroupPostAction:ReplicationRecoveryPlanBootRecoveryGroupPostAction": {
                "fabricLocation": "fabric_location",
                "failOverDirections": "fail_over_directions",
                "failOverTypes": "fail_over_types",
                "manualActionInstruction": "manual_action_instruction",
                "runbookId": "runbook_id",
                "scriptPath": "script_path"
            },
            "azure:siterecovery/ReplicationRecoveryPlanBootRecoveryGroupPreAction:ReplicationRecoveryPlanBootRecoveryGroupPreAction": {
                "fabricLocation": "fabric_location",
                "failOverDirections": "fail_over_directions",
                "failOverTypes": "fail_over_types",
                "manualActionInstruction": "manual_action_instruction",
                "runbookId": "runbook_id",
                "scriptPath": "script_path"
            },
            "azure:siterecovery/ReplicationRecoveryPlanFailoverRecoveryGroup:ReplicationRecoveryPlanFailoverRecoveryGroup": {
                "postActions": "post_action",
                "preActions": "pre_action"
            },
            "azure:siterecovery/ReplicationRecoveryPlanFailoverRecoveryGroupPostAction:ReplicationRecoveryPlanFailoverRecoveryGroupPostAction": {
                "fabricLocation": "fabric_location",
                "failOverDirections": "fail_over_directions",
                "failOverTypes": "fail_over_types",
                "manualActionInstruction": "manual_action_instruction",
                "runbookId": "runbook_id",
                "scriptPath": "script_path"
            },
            "azure:siterecovery/ReplicationRecoveryPlanFailoverRecoveryGroupPreAction:ReplicationRecoveryPlanFailoverRecoveryGroupPreAction": {
                "fabricLocation": "fabric_location",
                "failOverDirections": "fail_over_directions",
                "failOverTypes": "fail_over_types",
                "manualActionInstruction": "manual_action_instruction",
                "runbookId": "runbook_id",
                "scriptPath": "script_path"
            },
            "azure:siterecovery/ReplicationRecoveryPlanRecoveryGroup:ReplicationRecoveryPlanRecoveryGroup": {
                "postActions": "post_action",
                "preActions": "pre_action",
                "replicatedProtectedItems": "replicated_protected_items"
            },
            "azure:siterecovery/ReplicationRecoveryPlanRecoveryGroupPostAction:ReplicationRecoveryPlanRecoveryGroupPostAction": {
                "fabricLocation": "fabric_location",
                "failOverDirections": "fail_over_directions",
                "failOverTypes": "fail_over_types",
                "manualActionInstruction": "manual_action_instruction",
                "runbookId": "runbook_id",
                "scriptPath": "script_path"
            },
            "azure:siterecovery/ReplicationRecoveryPlanRecoveryGroupPreAction:ReplicationRecoveryPlanRecoveryGroupPreAction": {
                "fabricLocation": "fabric_location",
                "failOverDirections": "fail_over_directions",
                "failOverTypes": "fail_over_types",
                "manualActionInstruction": "manual_action_instruction",
                "runbookId": "runbook_id",
                "scriptPath": "script_path"
            },
            "azure:siterecovery/ReplicationRecoveryPlanShutdownRecoveryGroup:ReplicationRecoveryPlanShutdownRecoveryGroup": {
                "postActions": "post_action",
                "preActions": "pre_action"
            },
            "azure:siterecovery/ReplicationRecoveryPlanShutdownRecoveryGroupPostAction:ReplicationRecoveryPlanShutdownRecoveryGroupPostAction": {
                "fabricLocation": "fabric_location",
                "failOverDirections": "fail_over_directions",
                "failOverTypes": "fail_over_types",
                "manualActionInstruction": "manual_action_instruction",
                "runbookId": "runbook_id",
                "scriptPath": "script_path"
            },
            "azure:siterecovery/ReplicationRecoveryPlanShutdownRecoveryGroupPreAction:ReplicationRecoveryPlanShutdownRecoveryGroupPreAction": {
                "fabricLocation": "fabric_location",
                "failOverDirections": "fail_over_directions",
                "failOverTypes": "fail_over_types",
                "manualActionInstruction": "manual_action_instruction",
                "runbookId": "runbook_id",
                "scriptPath": "script_path"
            },
            "azure:siterecovery/fabric:Fabric": {
                "recoveryVaultName": "recovery_vault_name",
                "resourceGroupName": "resource_group_name"
            },
            "azure:siterecovery/getFabric:getFabric": {
                "recoveryVaultName": "recovery_vault_name",
                "resourceGroupName": "resource_group_name"
            },
            "azure:siterecovery/getProtectionContainer:getProtectionContainer": {
                "recoveryFabricName": "recovery_fabric_name",
                "recoveryVaultName": "recovery_vault_name",
                "resourceGroupName": "resource_group_name"
            },
            "azure:siterecovery/getReplicationPolicy:getReplicationPolicy": {
                "applicationConsistentSnapshotFrequencyInMinutes": "application_consistent_snapshot_frequency_in_minutes",
                "recoveryPointRetentionInMinutes": "recovery_point_retention_in_minutes",
                "recoveryVaultName": "recovery_vault_name",
                "resourceGroupName": "resource_group_name"
            },
            "azure:siterecovery/getReplicationRecoveryPlan:getReplicationRecoveryPlan": {
                "azureToAzureSettings": "azure_to_azure_settings",
                "failoverDeploymentModel": "failover_deployment_model",
                "recoveryGroups": "recovery_group",
                "recoveryVaultId": "recovery_vault_id",
                "sourceRecoveryFabricId": "source_recovery_fabric_id",
                "targetRecoveryFabricId": "target_recovery_fabric_id"
            },
            "azure:siterecovery/getReplicationRecoveryPlanAzureToAzureSetting:getReplicationRecoveryPlanAzureToAzureSetting": {
                "primaryEdgeZone": "primary_edge_zone",
                "primaryZone": "primary_zone",
                "recoveryEdgeZone": "recovery_edge_zone",
                "recoveryZone": "recovery_zone"
            },
            "azure:siterecovery/getReplicationRecoveryPlanRecoveryGroup:getReplicationRecoveryPlanRecoveryGroup": {
                "postActions": "post_action",
                "preActions": "pre_action",
                "replicatedProtectedItems": "replicated_protected_items"
            },
            "azure:siterecovery/getReplicationRecoveryPlanRecoveryGroupPostAction:getReplicationRecoveryPlanRecoveryGroupPostAction": {
                "fabricLocation": "fabric_location",
                "failOverDirections": "fail_over_directions",
                "failOverTypes": "fail_over_types",
                "manualActionInstruction": "manual_action_instruction",
                "runbookId": "runbook_id",
                "scriptPath": "script_path"
            },
            "azure:siterecovery/getReplicationRecoveryPlanRecoveryGroupPreAction:getReplicationRecoveryPlanRecoveryGroupPreAction": {
                "fabricLocation": "fabric_location",
                "failOverDirections": "fail_over_directions",
                "failOverTypes": "fail_over_types",
                "manualActionInstruction": "manual_action_instruction",
                "runbookId": "runbook_id",
                "scriptPath": "script_path"
            },
            "azure:siterecovery/hyperVReplicationPolicy:HyperVReplicationPolicy": {
                "applicationConsistentSnapshotFrequencyInHours": "application_consistent_snapshot_frequency_in_hours",
                "recoveryPointRetentionInHours": "recovery_point_retention_in_hours",
                "recoveryVaultId": "recovery_vault_id",
                "replicationIntervalInSeconds": "replication_interval_in_seconds"
            },
            "azure:siterecovery/hyperVReplicationPolicyAssociation:HyperVReplicationPolicyAssociation": {
                "hypervSiteId": "hyperv_site_id",
                "policyId": "policy_id"
            },
            "azure:siterecovery/hyperVSite:HyperVSite": {
                "recoveryVaultId": "recovery_vault_id"
            },
            "azure:siterecovery/hypervNetworkMapping:HypervNetworkMapping": {
                "recoveryVaultId": "recovery_vault_id",
                "sourceNetworkName": "source_network_name",
                "sourceSystemCenterVirtualMachineManagerName": "source_system_center_virtual_machine_manager_name",
                "targetNetworkId": "target_network_id"
            },
            "azure:siterecovery/networkMapping:NetworkMapping": {
                "recoveryVaultName": "recovery_vault_name",
                "resourceGroupName": "resource_group_name",
                "sourceNetworkId": "source_network_id",
                "sourceRecoveryFabricName": "source_recovery_fabric_name",
                "targetNetworkId": "target_network_id",
                "targetRecoveryFabricName": "target_recovery_fabric_name"
            },
            "azure:siterecovery/protectionContainer:ProtectionContainer": {
                "recoveryFabricName": "recovery_fabric_name",
                "recoveryVaultName": "recovery_vault_name",
                "resourceGroupName": "resource_group_name"
            },
            "azure:siterecovery/protectionContainerMapping:ProtectionContainerMapping": {
                "automaticUpdate": "automatic_update",
                "recoveryFabricName": "recovery_fabric_name",
                "recoveryReplicationPolicyId": "recovery_replication_policy_id",
                "recoverySourceProtectionContainerName": "recovery_source_protection_container_name",
                "recoveryTargetProtectionContainerId": "recovery_target_protection_container_id",
                "recoveryVaultName": "recovery_vault_name",
                "resourceGroupName": "resource_group_name"
            },
            "azure:siterecovery/replicatedVM:ReplicatedVM": {
                "managedDisks": "managed_disk",
                "multiVmGroupName": "multi_vm_group_name",
                "networkInterfaces": "network_interface",
                "recoveryReplicationPolicyId": "recovery_replication_policy_id",
                "recoveryVaultName": "recovery_vault_name",
                "resourceGroupName": "resource_group_name",
                "sourceRecoveryFabricName": "source_recovery_fabric_name",
                "sourceRecoveryProtectionContainerName": "source_recovery_protection_container_name",
                "sourceVmId": "source_vm_id",
                "targetAvailabilitySetId": "target_availability_set_id",
                "targetBootDiagnosticStorageAccountId": "target_boot_diagnostic_storage_account_id",
                "targetCapacityReservationGroupId": "target_capacity_reservation_group_id",
                "targetEdgeZone": "target_edge_zone",
                "targetNetworkId": "target_network_id",
                "targetProximityPlacementGroupId": "target_proximity_placement_group_id",
                "targetRecoveryFabricId": "target_recovery_fabric_id",
                "targetRecoveryProtectionContainerId": "target_recovery_protection_container_id",
                "targetResourceGroupId": "target_resource_group_id",
                "targetVirtualMachineScaleSetId": "target_virtual_machine_scale_set_id",
                "targetZone": "target_zone",
                "testNetworkId": "test_network_id",
                "unmanagedDisks": "unmanaged_disk"
            },
            "azure:siterecovery/replicationPolicy:ReplicationPolicy": {
                "applicationConsistentSnapshotFrequencyInMinutes": "application_consistent_snapshot_frequency_in_minutes",
                "recoveryPointRetentionInMinutes": "recovery_point_retention_in_minutes",
                "recoveryVaultName": "recovery_vault_name",
                "resourceGroupName": "resource_group_name"
            },
            "azure:siterecovery/replicationRecoveryPlan:ReplicationRecoveryPlan": {
                "azureToAzureSettings": "azure_to_azure_settings",
                "bootRecoveryGroups": "boot_recovery_group",
                "failoverRecoveryGroup": "failover_recovery_group",
                "recoveryGroups": "recovery_group",
                "recoveryVaultId": "recovery_vault_id",
                "shutdownRecoveryGroup": "shutdown_recovery_group",
                "sourceRecoveryFabricId": "source_recovery_fabric_id",
                "targetRecoveryFabricId": "target_recovery_fabric_id"
            },
            "azure:siterecovery/vMWareReplicationPolicy:VMWareReplicationPolicy": {
                "applicationConsistentSnapshotFrequencyInMinutes": "application_consistent_snapshot_frequency_in_minutes",
                "recoveryPointRetentionInMinutes": "recovery_point_retention_in_minutes",
                "recoveryVaultId": "recovery_vault_id"
            },
            "azure:siterecovery/vmwareReplicationPolicyAssociation:VmwareReplicationPolicyAssociation": {
                "policyId": "policy_id",
                "recoveryVaultId": "recovery_vault_id"
            },
            "azure:sql/DatabaseImport:DatabaseImport": {
                "administratorLogin": "administrator_login",
                "administratorLoginPassword": "administrator_login_password",
                "authenticationType": "authentication_type",
                "operationMode": "operation_mode",
                "storageKey": "storage_key",
                "storageKeyType": "storage_key_type",
                "storageUri": "storage_uri"
            },
            "azure:sql/DatabaseThreatDetectionPolicy:DatabaseThreatDetectionPolicy": {
                "disabledAlerts": "disabled_alerts",
                "emailAccountAdmins": "email_account_admins",
                "emailAddresses": "email_addresses",
                "retentionDays": "retention_days",
                "storageAccountAccessKey": "storage_account_access_key",
                "storageEndpoint": "storage_endpoint"
            },
            "azure:sql/FailoverGroupReadWriteEndpointFailoverPolicy:FailoverGroupReadWriteEndpointFailoverPolicy": {
                "graceMinutes": "grace_minutes"
            },
            "azure:sql/ManagedInstanceFailoverGroupReadWriteEndpointFailoverPolicy:ManagedInstanceFailoverGroupReadWriteEndpointFailoverPolicy": {
                "graceMinutes": "grace_minutes"
            },
            "azure:sql/ManagedInstanceIdentity:ManagedInstanceIdentity": {
                "principalId": "principal_id",
                "tenantId": "tenant_id"
            },
            "azure:sql/SqlServerIdentity:SqlServerIdentity": {
                "principalId": "principal_id",
                "tenantId": "tenant_id"
            },
            "azure:sql/SqlServerThreatDetectionPolicy:SqlServerThreatDetectionPolicy": {
                "disabledAlerts": "disabled_alerts",
                "emailAccountAdmins": "email_account_admins",
                "emailAddresses": "email_addresses",
                "retentionDays": "retention_days",
                "storageAccountAccessKey": "storage_account_access_key",
                "storageEndpoint": "storage_endpoint"
            },
            "azure:sql/activeDirectoryAdministrator:ActiveDirectoryAdministrator": {
                "azureadAuthenticationOnly": "azuread_authentication_only",
                "objectId": "object_id",
                "resourceGroupName": "resource_group_name",
                "serverName": "server_name",
                "tenantId": "tenant_id"
            },
            "azure:sql/database:Database": {
                "createMode": "create_mode",
                "creationDate": "creation_date",
                "defaultSecondaryLocation": "default_secondary_location",
                "elasticPoolName": "elastic_pool_name",
                "maxSizeBytes": "max_size_bytes",
                "maxSizeGb": "max_size_gb",
                "readScale": "read_scale",
                "requestedServiceObjectiveId": "requested_service_objective_id",
                "requestedServiceObjectiveName": "requested_service_objective_name",
                "resourceGroupName": "resource_group_name",
                "restorePointInTime": "restore_point_in_time",
                "serverName": "server_name",
                "sourceDatabaseDeletionDate": "source_database_deletion_date",
                "sourceDatabaseId": "source_database_id",
                "threatDetectionPolicy": "threat_detection_policy",
                "zoneRedundant": "zone_redundant"
            },
            "azure:sql/elasticPool:ElasticPool": {
                "creationDate": "creation_date",
                "dbDtuMax": "db_dtu_max",
                "dbDtuMin": "db_dtu_min",
                "poolSize": "pool_size",
                "resourceGroupName": "resource_group_name",
                "serverName": "server_name"
            },
            "azure:sql/failoverGroup:FailoverGroup": {
                "partnerServers": "partner_servers",
                "readWriteEndpointFailoverPolicy": "read_write_endpoint_failover_policy",
                "readonlyEndpointFailoverPolicy": "readonly_endpoint_failover_policy",
                "resourceGroupName": "resource_group_name",
                "serverName": "server_name"
            },
            "azure:sql/firewallRule:FirewallRule": {
                "endIpAddress": "end_ip_address",
                "resourceGroupName": "resource_group_name",
                "serverName": "server_name",
                "startIpAddress": "start_ip_address"
            },
            "azure:sql/getDatabase:getDatabase": {
                "defaultSecondaryLocation": "default_secondary_location",
                "elasticPoolName": "elastic_pool_name",
                "failoverGroupId": "failover_group_id",
                "readScale": "read_scale",
                "resourceGroupName": "resource_group_name",
                "serverName": "server_name"
            },
            "azure:sql/getServer:getServer": {
                "administratorLogin": "administrator_login",
                "identities": "identity",
                "resourceGroupName": "resource_group_name"
            },
            "azure:sql/getServerIdentity:getServerIdentity": {
                "principalId": "principal_id",
                "tenantId": "tenant_id"
            },
            "azure:sql/getSqlManagedInstance:getSqlManagedInstance": {
                "administratorLogin": "administrator_login",
                "dnsZonePartnerId": "dns_zone_partner_id",
                "identities": "identity",
                "licenseType": "license_type",
                "minimumTlsVersion": "minimum_tls_version",
                "proxyOverride": "proxy_override",
                "publicDataEndpointEnabled": "public_data_endpoint_enabled",
                "resourceGroupName": "resource_group_name",
                "skuName": "sku_name",
                "storageAccountType": "storage_account_type",
                "storageSizeInGb": "storage_size_in_gb",
                "subnetId": "subnet_id",
                "timezoneId": "timezone_id"
            },
            "azure:sql/getSqlManagedInstanceIdentity:getSqlManagedInstanceIdentity": {
                "principalId": "principal_id",
                "tenantId": "tenant_id"
            },
            "azure:sql/managedDatabase:ManagedDatabase": {
                "sqlManagedInstanceId": "sql_managed_instance_id"
            },
            "azure:sql/managedInstance:ManagedInstance": {
                "administratorLogin": "administrator_login",
                "administratorLoginPassword": "administrator_login_password",
                "dnsZonePartnerId": "dns_zone_partner_id",
                "licenseType": "license_type",
                "minimumTlsVersion": "minimum_tls_version",
                "proxyOverride": "proxy_override",
                "publicDataEndpointEnabled": "public_data_endpoint_enabled",
                "resourceGroupName": "resource_group_name",
                "skuName": "sku_name",
                "storageAccountType": "storage_account_type",
                "storageSizeInGb": "storage_size_in_gb",
                "subnetId": "subnet_id",
                "timezoneId": "timezone_id"
            },
            "azure:sql/managedInstanceActiveDirectoryAdministrator:ManagedInstanceActiveDirectoryAdministrator": {
                "azureadAuthenticationOnly": "azuread_authentication_only",
                "managedInstanceName": "managed_instance_name",
                "objectId": "object_id",
                "resourceGroupName": "resource_group_name",
                "tenantId": "tenant_id"
            },
            "azure:sql/managedInstanceFailoverGroup:ManagedInstanceFailoverGroup": {
                "managedInstanceName": "managed_instance_name",
                "partnerManagedInstanceId": "partner_managed_instance_id",
                "partnerRegions": "partner_region",
                "readWriteEndpointFailoverPolicy": "read_write_endpoint_failover_policy",
                "readonlyEndpointFailoverPolicyEnabled": "readonly_endpoint_failover_policy_enabled",
                "resourceGroupName": "resource_group_name"
            },
            "azure:sql/sqlServer:SqlServer": {
                "administratorLogin": "administrator_login",
                "administratorLoginPassword": "administrator_login_password",
                "connectionPolicy": "connection_policy",
                "fullyQualifiedDomainName": "fully_qualified_domain_name",
                "resourceGroupName": "resource_group_name",
                "threatDetectionPolicy": "threat_detection_policy"
            },
            "azure:sql/virtualNetworkRule:VirtualNetworkRule": {
                "ignoreMissingVnetServiceEndpoint": "ignore_missing_vnet_service_endpoint",
                "resourceGroupName": "resource_group_name",
                "serverName": "server_name",
                "subnetId": "subnet_id"
            },
            "azure:stack/getHciCluster:getHciCluster": {
                "automanageConfigurationId": "automanage_configuration_id",
                "clientId": "client_id",
                "resourceGroupName": "resource_group_name",
                "tenantId": "tenant_id"
            },
            "azure:stack/hciCluster:HciCluster": {
                "automanageConfigurationId": "automanage_configuration_id",
                "clientId": "client_id",
                "resourceGroupName": "resource_group_name",
                "tenantId": "tenant_id"
            },
            "azure:storage/AccountAzureFilesAuthentication:AccountAzureFilesAuthentication": {
                "activeDirectory": "active_directory",
                "directoryType": "directory_type"
            },
            "azure:storage/AccountAzureFilesAuthenticationActiveDirectory:AccountAzureFilesAuthenticationActiveDirectory": {
                "domainGuid": "domain_guid",
                "domainName": "domain_name",
                "domainSid": "domain_sid",
                "forestName": "forest_name",
                "netbiosDomainName": "netbios_domain_name",
                "storageSid": "storage_sid"
            },
            "azure:storage/AccountBlobProperties:AccountBlobProperties": {
                "changeFeedEnabled": "change_feed_enabled",
                "changeFeedRetentionInDays": "change_feed_retention_in_days",
                "containerDeleteRetentionPolicy": "container_delete_retention_policy",
                "corsRules": "cors_rule",
                "defaultServiceVersion": "default_service_version",
                "deleteRetentionPolicy": "delete_retention_policy",
                "lastAccessTimeEnabled": "last_access_time_enabled",
                "restorePolicy": "restore_policy",
                "versioningEnabled": "versioning_enabled"
            },
            "azure:storage/AccountBlobPropertiesCorsRule:AccountBlobPropertiesCorsRule": {
                "allowedHeaders": "allowed_headers",
                "allowedMethods": "allowed_methods",
                "allowedOrigins": "allowed_origins",
                "exposedHeaders": "exposed_headers",
                "maxAgeInSeconds": "max_age_in_seconds"
            },
            "azure:storage/AccountCustomDomain:AccountCustomDomain": {
                "useSubdomain": "use_subdomain"
            },
            "azure:storage/AccountCustomerManagedKey:AccountCustomerManagedKey": {
                "keyVaultKeyId": "key_vault_key_id",
                "userAssignedIdentityId": "user_assigned_identity_id"
            },
            "azure:storage/AccountIdentity:AccountIdentity": {
                "identityIds": "identity_ids",
                "principalId": "principal_id",
                "tenantId": "tenant_id"
            },
            "azure:storage/AccountImmutabilityPolicy:AccountImmutabilityPolicy": {
                "allowProtectedAppendWrites": "allow_protected_append_writes",
                "periodSinceCreationInDays": "period_since_creation_in_days"
            },
            "azure:storage/AccountNetworkRules:AccountNetworkRules": {
                "bypasses": "bypass",
                "defaultAction": "default_action",
                "ipRules": "ip_rules",
                "privateLinkAccesses": "private_link_access",
                "virtualNetworkSubnetIds": "virtual_network_subnet_ids"
            },
            "azure:storage/AccountNetworkRulesPrivateLinkAccess:AccountNetworkRulesPrivateLinkAccess": {
                "endpointResourceId": "endpoint_resource_id",
                "endpointTenantId": "endpoint_tenant_id"
            },
            "azure:storage/AccountNetworkRulesPrivateLinkAccessRule:AccountNetworkRulesPrivateLinkAccessRule": {
                "endpointResourceId": "endpoint_resource_id",
                "endpointTenantId": "endpoint_tenant_id"
            },
            "azure:storage/AccountQueueProperties:AccountQueueProperties": {
                "corsRules": "cors_rule",
                "hourMetrics": "hour_metrics",
                "minuteMetrics": "minute_metrics"
            },
            "azure:storage/AccountQueuePropertiesCorsRule:AccountQueuePropertiesCorsRule": {
                "allowedHeaders": "allowed_headers",
                "allowedMethods": "allowed_methods",
                "allowedOrigins": "allowed_origins",
                "exposedHeaders": "exposed_headers",
                "maxAgeInSeconds": "max_age_in_seconds"
            },
            "azure:storage/AccountQueuePropertiesHourMetrics:AccountQueuePropertiesHourMetrics": {
                "includeApis": "include_apis",
                "retentionPolicyDays": "retention_policy_days"
            },
            "azure:storage/AccountQueuePropertiesLogging:AccountQueuePropertiesLogging": {
                "retentionPolicyDays": "retention_policy_days"
            },
            "azure:storage/AccountQueuePropertiesMinuteMetrics:AccountQueuePropertiesMinuteMetrics": {
                "includeApis": "include_apis",
                "retentionPolicyDays": "retention_policy_days"
            },
            "azure:storage/AccountRouting:AccountRouting": {
                "publishInternetEndpoints": "publish_internet_endpoints",
                "publishMicrosoftEndpoints": "publish_microsoft_endpoints"
            },
            "azure:storage/AccountSasPolicy:AccountSasPolicy": {
                "expirationAction": "expiration_action",
                "expirationPeriod": "expiration_period"
            },
            "azure:storage/AccountShareProperties:AccountShareProperties": {
                "corsRules": "cors_rule",
                "retentionPolicy": "retention_policy"
            },
            "azure:storage/AccountSharePropertiesCorsRule:AccountSharePropertiesCorsRule": {
                "allowedHeaders": "allowed_headers",
                "allowedMethods": "allowed_methods",
                "allowedOrigins": "allowed_origins",
                "exposedHeaders": "exposed_headers",
                "maxAgeInSeconds": "max_age_in_seconds"
            },
            "azure:storage/AccountSharePropertiesSmb:AccountSharePropertiesSmb": {
                "authenticationTypes": "authentication_types",
                "channelEncryptionTypes": "channel_encryption_type",
                "kerberosTicketEncryptionTypes": "kerberos_ticket_encryption_type",
                "multichannelEnabled": "multichannel_enabled"
            },
            "azure:storage/AccountStaticWebsite:AccountStaticWebsite": {
                "error404Document": "error_404_document",
                "indexDocument": "index_document"
            },
            "azure:storage/BlobInventoryPolicyRule:BlobInventoryPolicyRule": {
                "schemaFields": "schema_fields",
                "storageContainerName": "storage_container_name"
            },
            "azure:storage/BlobInventoryPolicyRuleFilter:BlobInventoryPolicyRuleFilter": {
                "blobTypes": "blob_types",
                "excludePrefixes": "exclude_prefixes",
                "includeBlobVersions": "include_blob_versions",
                "includeDeleted": "include_deleted",
                "includeSnapshots": "include_snapshots",
                "prefixMatches": "prefix_match"
            },
            "azure:storage/LocalUserPermissionScope:LocalUserPermissionScope": {
                "resourceName": "resource_name"
            },
            "azure:storage/ManagementPolicyRuleActions:ManagementPolicyRuleActions": {
                "baseBlob": "base_blob"
            },
            "azure:storage/ManagementPolicyRuleActionsBaseBlob:ManagementPolicyRuleActionsBaseBlob": {
                "autoTierToHotFromCoolEnabled": "auto_tier_to_hot_from_cool_enabled",
                "deleteAfterDaysSinceCreationGreaterThan": "delete_after_days_since_creation_greater_than",
                "deleteAfterDaysSinceLastAccessTimeGreaterThan": "delete_after_days_since_last_access_time_greater_than",
                "deleteAfterDaysSinceModificationGreaterThan": "delete_after_days_since_modification_greater_than",
                "tierToArchiveAfterDaysSinceCreationGreaterThan": "tier_to_archive_after_days_since_creation_greater_than",
                "tierToArchiveAfterDaysSinceLastAccessTimeGreaterThan": "tier_to_archive_after_days_since_last_access_time_greater_than",
                "tierToArchiveAfterDaysSinceLastTierChangeGreaterThan": "tier_to_archive_after_days_since_last_tier_change_greater_than",
                "tierToArchiveAfterDaysSinceModificationGreaterThan": "tier_to_archive_after_days_since_modification_greater_than",
                "tierToColdAfterDaysSinceCreationGreaterThan": "tier_to_cold_after_days_since_creation_greater_than",
                "tierToColdAfterDaysSinceLastAccessTimeGreaterThan": "tier_to_cold_after_days_since_last_access_time_greater_than",
                "tierToColdAfterDaysSinceModificationGreaterThan": "tier_to_cold_after_days_since_modification_greater_than",
                "tierToCoolAfterDaysSinceCreationGreaterThan": "tier_to_cool_after_days_since_creation_greater_than",
                "tierToCoolAfterDaysSinceLastAccessTimeGreaterThan": "tier_to_cool_after_days_since_last_access_time_greater_than",
                "tierToCoolAfterDaysSinceModificationGreaterThan": "tier_to_cool_after_days_since_modification_greater_than"
            },
            "azure:storage/ManagementPolicyRuleActionsSnapshot:ManagementPolicyRuleActionsSnapshot": {
                "changeTierToArchiveAfterDaysSinceCreation": "change_tier_to_archive_after_days_since_creation",
                "changeTierToCoolAfterDaysSinceCreation": "change_tier_to_cool_after_days_since_creation",
                "deleteAfterDaysSinceCreationGreaterThan": "delete_after_days_since_creation_greater_than",
                "tierToArchiveAfterDaysSinceLastTierChangeGreaterThan": "tier_to_archive_after_days_since_last_tier_change_greater_than",
                "tierToColdAfterDaysSinceCreationGreaterThan": "tier_to_cold_after_days_since_creation_greater_than"
            },
            "azure:storage/ManagementPolicyRuleActionsVersion:ManagementPolicyRuleActionsVersion": {
                "changeTierToArchiveAfterDaysSinceCreation": "change_tier_to_archive_after_days_since_creation",
                "changeTierToCoolAfterDaysSinceCreation": "change_tier_to_cool_after_days_since_creation",
                "deleteAfterDaysSinceCreation": "delete_after_days_since_creation",
                "tierToArchiveAfterDaysSinceLastTierChangeGreaterThan": "tier_to_archive_after_days_since_last_tier_change_greater_than",
                "tierToColdAfterDaysSinceCreationGreaterThan": "tier_to_cold_after_days_since_creation_greater_than"
            },
            "azure:storage/ManagementPolicyRuleFilters:ManagementPolicyRuleFilters": {
                "blobTypes": "blob_types",
                "matchBlobIndexTags": "match_blob_index_tag",
                "prefixMatches": "prefix_match"
            },
            "azure:storage/ObjectReplicationRule:ObjectReplicationRule": {
                "copyBlobsCreatedAfter": "copy_blobs_created_after",
                "destinationContainerName": "destination_container_name",
                "filterOutBlobsWithPrefixes": "filter_out_blobs_with_prefix",
                "sourceContainerName": "source_container_name"
            },
            "azure:storage/ShareAcl:ShareAcl": {
                "accessPolicies": "access_policy"
            },
            "azure:storage/TableAcl:TableAcl": {
                "accessPolicies": "access_policy"
            },
            "azure:storage/account:Account": {
                "accessTier": "access_tier",
                "accountKind": "account_kind",
                "accountReplicationType": "account_replication_type",
                "accountTier": "account_tier",
                "allowNestedItemsToBePublic": "allow_nested_items_to_be_public",
                "allowedCopyScope": "allowed_copy_scope",
                "azureFilesAuthentication": "azure_files_authentication",
                "blobProperties": "blob_properties",
                "crossTenantReplicationEnabled": "cross_tenant_replication_enabled",
                "customDomain": "custom_domain",
                "customerManagedKey": "customer_managed_key",
                "defaultToOauthAuthentication": "default_to_oauth_authentication",
                "edgeZone": "edge_zone",
                "enableHttpsTrafficOnly": "enable_https_traffic_only",
                "immutabilityPolicy": "immutability_policy",
                "infrastructureEncryptionEnabled": "infrastructure_encryption_enabled",
                "isHnsEnabled": "is_hns_enabled",
                "largeFileShareEnabled": "large_file_share_enabled",
                "minTlsVersion": "min_tls_version",
                "networkRules": "network_rules",
                "nfsv3Enabled": "nfsv3_enabled",
                "primaryAccessKey": "primary_access_key",
                "primaryBlobConnectionString": "primary_blob_connection_string",
                "primaryBlobEndpoint": "primary_blob_endpoint",
                "primaryBlobHost": "primary_blob_host",
                "primaryBlobInternetEndpoint": "primary_blob_internet_endpoint",
                "primaryBlobInternetHost": "primary_blob_internet_host",
                "primaryBlobMicrosoftEndpoint": "primary_blob_microsoft_endpoint",
                "primaryBlobMicrosoftHost": "primary_blob_microsoft_host",
                "primaryConnectionString": "primary_connection_string",
                "primaryDfsEndpoint": "primary_dfs_endpoint",
                "primaryDfsHost": "primary_dfs_host",
                "primaryDfsInternetEndpoint": "primary_dfs_internet_endpoint",
                "primaryDfsInternetHost": "primary_dfs_internet_host",
                "primaryDfsMicrosoftEndpoint": "primary_dfs_microsoft_endpoint",
                "primaryDfsMicrosoftHost": "primary_dfs_microsoft_host",
                "primaryFileEndpoint": "primary_file_endpoint",
                "primaryFileHost": "primary_file_host",
                "primaryFileInternetEndpoint": "primary_file_internet_endpoint",
                "primaryFileInternetHost": "primary_file_internet_host",
                "primaryFileMicrosoftEndpoint": "primary_file_microsoft_endpoint",
                "primaryFileMicrosoftHost": "primary_file_microsoft_host",
                "primaryLocation": "primary_location",
                "primaryQueueEndpoint": "primary_queue_endpoint",
                "primaryQueueHost": "primary_queue_host",
                "primaryQueueMicrosoftEndpoint": "primary_queue_microsoft_endpoint",
                "primaryQueueMicrosoftHost": "primary_queue_microsoft_host",
                "primaryTableEndpoint": "primary_table_endpoint",
                "primaryTableHost": "primary_table_host",
                "primaryTableMicrosoftEndpoint": "primary_table_microsoft_endpoint",
                "primaryTableMicrosoftHost": "primary_table_microsoft_host",
                "primaryWebEndpoint": "primary_web_endpoint",
                "primaryWebHost": "primary_web_host",
                "primaryWebInternetEndpoint": "primary_web_internet_endpoint",
                "primaryWebInternetHost": "primary_web_internet_host",
                "primaryWebMicrosoftEndpoint": "primary_web_microsoft_endpoint",
                "primaryWebMicrosoftHost": "primary_web_microsoft_host",
                "publicNetworkAccessEnabled": "public_network_access_enabled",
                "queueEncryptionKeyType": "queue_encryption_key_type",
                "queueProperties": "queue_properties",
                "resourceGroupName": "resource_group_name",
                "sasPolicy": "sas_policy",
                "secondaryAccessKey": "secondary_access_key",
                "secondaryBlobConnectionString": "secondary_blob_connection_string",
                "secondaryBlobEndpoint": "secondary_blob_endpoint",
                "secondaryBlobHost": "secondary_blob_host",
                "secondaryBlobInternetEndpoint": "secondary_blob_internet_endpoint",
                "secondaryBlobInternetHost": "secondary_blob_internet_host",
                "secondaryBlobMicrosoftEndpoint": "secondary_blob_microsoft_endpoint",
                "secondaryBlobMicrosoftHost": "secondary_blob_microsoft_host",
                "secondaryConnectionString": "secondary_connection_string",
                "secondaryDfsEndpoint": "secondary_dfs_endpoint",
                "secondaryDfsHost": "secondary_dfs_host",
                "secondaryDfsInternetEndpoint": "secondary_dfs_internet_endpoint",
                "secondaryDfsInternetHost": "secondary_dfs_internet_host",
                "secondaryDfsMicrosoftEndpoint": "secondary_dfs_microsoft_endpoint",
                "secondaryDfsMicrosoftHost": "secondary_dfs_microsoft_host",
                "secondaryFileEndpoint": "secondary_file_endpoint",
                "secondaryFileHost": "secondary_file_host",
                "secondaryFileInternetEndpoint": "secondary_file_internet_endpoint",
                "secondaryFileInternetHost": "secondary_file_internet_host",
                "secondaryFileMicrosoftEndpoint": "secondary_file_microsoft_endpoint",
                "secondaryFileMicrosoftHost": "secondary_file_microsoft_host",
                "secondaryLocation": "secondary_location",
                "secondaryQueueEndpoint": "secondary_queue_endpoint",
                "secondaryQueueHost": "secondary_queue_host",
                "secondaryQueueMicrosoftEndpoint": "secondary_queue_microsoft_endpoint",
                "secondaryQueueMicrosoftHost": "secondary_queue_microsoft_host",
                "secondaryTableEndpoint": "secondary_table_endpoint",
                "secondaryTableHost": "secondary_table_host",
                "secondaryTableMicrosoftEndpoint": "secondary_table_microsoft_endpoint",
                "secondaryTableMicrosoftHost": "secondary_table_microsoft_host",
                "secondaryWebEndpoint": "secondary_web_endpoint",
                "secondaryWebHost": "secondary_web_host",
                "secondaryWebInternetEndpoint": "secondary_web_internet_endpoint",
                "secondaryWebInternetHost": "secondary_web_internet_host",
                "secondaryWebMicrosoftEndpoint": "secondary_web_microsoft_endpoint",
                "secondaryWebMicrosoftHost": "secondary_web_microsoft_host",
                "sftpEnabled": "sftp_enabled",
                "shareProperties": "share_properties",
                "sharedAccessKeyEnabled": "shared_access_key_enabled",
                "staticWebsite": "static_website",
                "tableEncryptionKeyType": "table_encryption_key_type"
            },
            "azure:storage/accountNetworkRules:AccountNetworkRules": {
                "bypasses": "bypass",
                "defaultAction": "default_action",
                "ipRules": "ip_rules",
                "privateLinkAccessRules": "private_link_access",
                "storageAccountId": "storage_account_id",
                "virtualNetworkSubnetIds": "virtual_network_subnet_ids"
            },
            "azure:storage/blob:Blob": {
                "accessTier": "access_tier",
                "cacheControl": "cache_control",
                "contentMd5": "content_md5",
                "contentType": "content_type",
                "sourceContent": "source_content",
                "sourceUri": "source_uri",
                "storageAccountName": "storage_account_name",
                "storageContainerName": "storage_container_name"
            },
            "azure:storage/blobInventoryPolicy:BlobInventoryPolicy": {
                "storageAccountId": "storage_account_id"
            },
            "azure:storage/container:Container": {
                "containerAccessType": "container_access_type",
                "hasImmutabilityPolicy": "has_immutability_policy",
                "hasLegalHold": "has_legal_hold",
                "resourceManagerId": "resource_manager_id",
                "storageAccountName": "storage_account_name"
            },
            "azure:storage/customerManagedKey:CustomerManagedKey": {
                "federatedIdentityClientId": "federated_identity_client_id",
                "keyName": "key_name",
                "keyVaultId": "key_vault_id",
                "keyVaultUri": "key_vault_uri",
                "keyVersion": "key_version",
                "storageAccountId": "storage_account_id",
                "userAssignedIdentityId": "user_assigned_identity_id"
            },
            "azure:storage/dataLakeGen2Filesystem:DataLakeGen2Filesystem": {
                "aces": "ace",
                "storageAccountId": "storage_account_id"
            },
            "azure:storage/dataLakeGen2Path:DataLakeGen2Path": {
                "aces": "ace",
                "filesystemName": "filesystem_name",
                "storageAccountId": "storage_account_id"
            },
            "azure:storage/encryptionScope:EncryptionScope": {
                "infrastructureEncryptionRequired": "infrastructure_encryption_required",
                "keyVaultKeyId": "key_vault_key_id",
                "storageAccountId": "storage_account_id"
            },
            "azure:storage/getAccount:getAccount": {
                "accessTier": "access_tier",
                "accountKind": "account_kind",
                "accountReplicationType": "account_replication_type",
                "accountTier": "account_tier",
                "allowNestedItemsToBePublic": "allow_nested_items_to_be_public",
                "azureFilesAuthentications": "azure_files_authentication",
                "customDomains": "custom_domain",
                "enableHttpsTrafficOnly": "enable_https_traffic_only",
                "identities": "identity",
                "infrastructureEncryptionEnabled": "infrastructure_encryption_enabled",
                "isHnsEnabled": "is_hns_enabled",
                "minTlsVersion": "min_tls_version",
                "nfsv3Enabled": "nfsv3_enabled",
                "primaryAccessKey": "primary_access_key",
                "primaryBlobConnectionString": "primary_blob_connection_string",
                "primaryBlobEndpoint": "primary_blob_endpoint",
                "primaryBlobHost": "primary_blob_host",
                "primaryBlobInternetEndpoint": "primary_blob_internet_endpoint",
                "primaryBlobInternetHost": "primary_blob_internet_host",
                "primaryBlobMicrosoftEndpoint": "primary_blob_microsoft_endpoint",
                "primaryBlobMicrosoftHost": "primary_blob_microsoft_host",
                "primaryConnectionString": "primary_connection_string",
                "primaryDfsEndpoint": "primary_dfs_endpoint",
                "primaryDfsHost": "primary_dfs_host",
                "primaryDfsInternetEndpoint": "primary_dfs_internet_endpoint",
                "primaryDfsInternetHost": "primary_dfs_internet_host",
                "primaryDfsMicrosoftEndpoint": "primary_dfs_microsoft_endpoint",
                "primaryDfsMicrosoftHost": "primary_dfs_microsoft_host",
                "primaryFileEndpoint": "primary_file_endpoint",
                "primaryFileHost": "primary_file_host",
                "primaryFileInternetEndpoint": "primary_file_internet_endpoint",
                "primaryFileInternetHost": "primary_file_internet_host",
                "primaryFileMicrosoftEndpoint": "primary_file_microsoft_endpoint",
                "primaryFileMicrosoftHost": "primary_file_microsoft_host",
                "primaryLocation": "primary_location",
                "primaryQueueEndpoint": "primary_queue_endpoint",
                "primaryQueueHost": "primary_queue_host",
                "primaryQueueMicrosoftEndpoint": "primary_queue_microsoft_endpoint",
                "primaryQueueMicrosoftHost": "primary_queue_microsoft_host",
                "primaryTableEndpoint": "primary_table_endpoint",
                "primaryTableHost": "primary_table_host",
                "primaryTableMicrosoftEndpoint": "primary_table_microsoft_endpoint",
                "primaryTableMicrosoftHost": "primary_table_microsoft_host",
                "primaryWebEndpoint": "primary_web_endpoint",
                "primaryWebHost": "primary_web_host",
                "primaryWebInternetEndpoint": "primary_web_internet_endpoint",
                "primaryWebInternetHost": "primary_web_internet_host",
                "primaryWebMicrosoftEndpoint": "primary_web_microsoft_endpoint",
                "primaryWebMicrosoftHost": "primary_web_microsoft_host",
                "queueEncryptionKeyType": "queue_encryption_key_type",
                "resourceGroupName": "resource_group_name",
                "secondaryAccessKey": "secondary_access_key",
                "secondaryBlobConnectionString": "secondary_blob_connection_string",
                "secondaryBlobEndpoint": "secondary_blob_endpoint",
                "secondaryBlobHost": "secondary_blob_host",
                "secondaryBlobInternetEndpoint": "secondary_blob_internet_endpoint",
                "secondaryBlobInternetHost": "secondary_blob_internet_host",
                "secondaryBlobMicrosoftEndpoint": "secondary_blob_microsoft_endpoint",
                "secondaryBlobMicrosoftHost": "secondary_blob_microsoft_host",
                "secondaryConnectionString": "secondary_connection_string",
                "secondaryDfsEndpoint": "secondary_dfs_endpoint",
                "secondaryDfsHost": "secondary_dfs_host",
                "secondaryDfsInternetEndpoint": "secondary_dfs_internet_endpoint",
                "secondaryDfsInternetHost": "secondary_dfs_internet_host",
                "secondaryDfsMicrosoftEndpoint": "secondary_dfs_microsoft_endpoint",
                "secondaryDfsMicrosoftHost": "secondary_dfs_microsoft_host",
                "secondaryFileEndpoint": "secondary_file_endpoint",
                "secondaryFileHost": "secondary_file_host",
                "secondaryFileInternetEndpoint": "secondary_file_internet_endpoint",
                "secondaryFileInternetHost": "secondary_file_internet_host",
                "secondaryFileMicrosoftEndpoint": "secondary_file_microsoft_endpoint",
                "secondaryFileMicrosoftHost": "secondary_file_microsoft_host",
                "secondaryLocation": "secondary_location",
                "secondaryQueueEndpoint": "secondary_queue_endpoint",
                "secondaryQueueHost": "secondary_queue_host",
                "secondaryQueueMicrosoftEndpoint": "secondary_queue_microsoft_endpoint",
                "secondaryQueueMicrosoftHost": "secondary_queue_microsoft_host",
                "secondaryTableEndpoint": "secondary_table_endpoint",
                "secondaryTableHost": "secondary_table_host",
                "secondaryTableMicrosoftEndpoint": "secondary_table_microsoft_endpoint",
                "secondaryTableMicrosoftHost": "secondary_table_microsoft_host",
                "secondaryWebEndpoint": "secondary_web_endpoint",
                "secondaryWebHost": "secondary_web_host",
                "secondaryWebInternetEndpoint": "secondary_web_internet_endpoint",
                "secondaryWebInternetHost": "secondary_web_internet_host",
                "secondaryWebMicrosoftEndpoint": "secondary_web_microsoft_endpoint",
                "secondaryWebMicrosoftHost": "secondary_web_microsoft_host",
                "tableEncryptionKeyType": "table_encryption_key_type"
            },
            "azure:storage/getAccountAzureFilesAuthentication:getAccountAzureFilesAuthentication": {
                "activeDirectories": "active_directory",
                "directoryType": "directory_type"
            },
            "azure:storage/getAccountAzureFilesAuthenticationActiveDirectory:getAccountAzureFilesAuthenticationActiveDirectory": {
                "domainGuid": "domain_guid",
                "domainName": "domain_name",
                "domainSid": "domain_sid",
                "forestName": "forest_name",
                "netbiosDomainName": "netbios_domain_name",
                "storageSid": "storage_sid"
            },
            "azure:storage/getAccountBlobContainerSAS:getAccountBlobContainerSAS": {
                "cacheControl": "cache_control",
                "connectionString": "connection_string",
                "containerName": "container_name",
                "contentDisposition": "content_disposition",
                "contentEncoding": "content_encoding",
                "contentLanguage": "content_language",
                "contentType": "content_type",
                "httpsOnly": "https_only",
                "ipAddress": "ip_address"
            },
            "azure:storage/getAccountIdentity:getAccountIdentity": {
                "identityIds": "identity_ids",
                "principalId": "principal_id",
                "tenantId": "tenant_id"
            },
            "azure:storage/getAccountSAS:getAccountSAS": {
                "connectionString": "connection_string",
                "httpsOnly": "https_only",
                "ipAddresses": "ip_addresses",
                "resourceTypes": "resource_types",
                "signedVersion": "signed_version"
            },
            "azure:storage/getBlob:getBlob": {
                "accessTier": "access_tier",
                "contentMd5": "content_md5",
                "contentType": "content_type",
                "storageAccountName": "storage_account_name",
                "storageContainerName": "storage_container_name"
            },
            "azure:storage/getContainers:getContainers": {
                "namePrefix": "name_prefix",
                "storageAccountId": "storage_account_id"
            },
            "azure:storage/getContainersContainer:getContainersContainer": {
                "dataPlaneId": "data_plane_id",
                "resourceManagerId": "resource_manager_id"
            },
            "azure:storage/getEncryptionScope:getEncryptionScope": {
                "keyVaultKeyId": "key_vault_key_id",
                "storageAccountId": "storage_account_id"
            },
            "azure:storage/getPolicy:getPolicy": {
                "rules": "rule",
                "storageAccountId": "storage_account_id"
            },
            "azure:storage/getPolicyRuleAction:getPolicyRuleAction": {
                "baseBlobs": "base_blob",
                "snapshots": "snapshot",
                "versions": "version"
            },
            "azure:storage/getPolicyRuleActionBaseBlob:getPolicyRuleActionBaseBlob": {
                "autoTierToHotFromCoolEnabled": "auto_tier_to_hot_from_cool_enabled",
                "deleteAfterDaysSinceCreationGreaterThan": "delete_after_days_since_creation_greater_than",
                "deleteAfterDaysSinceLastAccessTimeGreaterThan": "delete_after_days_since_last_access_time_greater_than",
                "deleteAfterDaysSinceModificationGreaterThan": "delete_after_days_since_modification_greater_than",
                "tierToArchiveAfterDaysSinceCreationGreaterThan": "tier_to_archive_after_days_since_creation_greater_than",
                "tierToArchiveAfterDaysSinceLastAccessTimeGreaterThan": "tier_to_archive_after_days_since_last_access_time_greater_than",
                "tierToArchiveAfterDaysSinceLastTierChangeGreaterThan": "tier_to_archive_after_days_since_last_tier_change_greater_than",
                "tierToArchiveAfterDaysSinceModificationGreaterThan": "tier_to_archive_after_days_since_modification_greater_than",
                "tierToColdAfterDaysSinceCreationGreaterThan": "tier_to_cold_after_days_since_creation_greater_than",
                "tierToColdAfterDaysSinceLastAccessTimeGreaterThan": "tier_to_cold_after_days_since_last_access_time_greater_than",
                "tierToColdAfterDaysSinceModificationGreaterThan": "tier_to_cold_after_days_since_modification_greater_than",
                "tierToCoolAfterDaysSinceCreationGreaterThan": "tier_to_cool_after_days_since_creation_greater_than",
                "tierToCoolAfterDaysSinceLastAccessTimeGreaterThan": "tier_to_cool_after_days_since_last_access_time_greater_than",
                "tierToCoolAfterDaysSinceModificationGreaterThan": "tier_to_cool_after_days_since_modification_greater_than"
            },
            "azure:storage/getPolicyRuleActionSnapshot:getPolicyRuleActionSnapshot": {
                "changeTierToArchiveAfterDaysSinceCreation": "change_tier_to_archive_after_days_since_creation",
                "changeTierToCoolAfterDaysSinceCreation": "change_tier_to_cool_after_days_since_creation",
                "deleteAfterDaysSinceCreationGreaterThan": "delete_after_days_since_creation_greater_than",
                "tierToArchiveAfterDaysSinceLastTierChangeGreaterThan": "tier_to_archive_after_days_since_last_tier_change_greater_than",
                "tierToColdAfterDaysSinceCreationGreaterThan": "tier_to_cold_after_days_since_creation_greater_than"
            },
            "azure:storage/getPolicyRuleActionVersion:getPolicyRuleActionVersion": {
                "changeTierToArchiveAfterDaysSinceCreation": "change_tier_to_archive_after_days_since_creation",
                "changeTierToCoolAfterDaysSinceCreation": "change_tier_to_cool_after_days_since_creation",
                "deleteAfterDaysSinceCreation": "delete_after_days_since_creation",
                "tierToArchiveAfterDaysSinceLastTierChangeGreaterThan": "tier_to_archive_after_days_since_last_tier_change_greater_than",
                "tierToColdAfterDaysSinceCreationGreaterThan": "tier_to_cold_after_days_since_creation_greater_than"
            },
            "azure:storage/getPolicyRuleFilter:getPolicyRuleFilter": {
                "blobTypes": "blob_types",
                "matchBlobIndexTags": "match_blob_index_tag",
                "prefixMatches": "prefix_match"
            },
            "azure:storage/getShare:getShare": {
                "acls": "acl",
                "resourceManagerId": "resource_manager_id",
                "storageAccountName": "storage_account_name"
            },
            "azure:storage/getShareAcl:getShareAcl": {
                "accessPolicies": "access_policy"
            },
            "azure:storage/getStorageContainer:getStorageContainer": {
                "containerAccessType": "container_access_type",
                "hasImmutabilityPolicy": "has_immutability_policy",
                "hasLegalHold": "has_legal_hold",
                "resourceManagerId": "resource_manager_id",
                "storageAccountName": "storage_account_name"
            },
            "azure:storage/getSync:getSync": {
                "incomingTrafficPolicy": "incoming_traffic_policy",
                "resourceGroupName": "resource_group_name"
            },
            "azure:storage/getSyncGroup:getSyncGroup": {
                "storageSyncId": "storage_sync_id"
            },
            "azure:storage/getTableEntity:getTableEntity": {
                "partitionKey": "partition_key",
                "rowKey": "row_key",
                "storageAccountName": "storage_account_name",
                "tableName": "table_name"
            },
            "azure:storage/localUser:LocalUser": {
                "homeDirectory": "home_directory",
                "permissionScopes": "permission_scope",
                "sshAuthorizedKeys": "ssh_authorized_key",
                "sshKeyEnabled": "ssh_key_enabled",
                "sshPasswordEnabled": "ssh_password_enabled",
                "storageAccountId": "storage_account_id"
            },
            "azure:storage/managementPolicy:ManagementPolicy": {
                "rules": "rule",
                "storageAccountId": "storage_account_id"
            },
            "azure:storage/mover:Mover": {
                "resourceGroupName": "resource_group_name"
            },
            "azure:storage/moverAgent:MoverAgent": {
                "arcVirtualMachineId": "arc_virtual_machine_id",
                "arcVirtualMachineUuid": "arc_virtual_machine_uuid",
                "storageMoverId": "storage_mover_id"
            },
            "azure:storage/moverJobDefinition:MoverJobDefinition": {
                "agentName": "agent_name",
                "copyMode": "copy_mode",
                "sourceName": "source_name",
                "sourceSubPath": "source_sub_path",
                "storageMoverProjectId": "storage_mover_project_id",
                "targetName": "target_name",
                "targetSubPath": "target_sub_path"
            },
            "azure:storage/moverProject:MoverProject": {
                "storageMoverId": "storage_mover_id"
            },
            "azure:storage/moverSourceEndpoint:MoverSourceEndpoint": {
                "nfsVersion": "nfs_version",
                "storageMoverId": "storage_mover_id"
            },
            "azure:storage/moverTargetEndpoint:MoverTargetEndpoint": {
                "storageAccountId": "storage_account_id",
                "storageContainerName": "storage_container_name",
                "storageMoverId": "storage_mover_id"
            },
            "azure:storage/objectReplication:ObjectReplication": {
                "destinationObjectReplicationId": "destination_object_replication_id",
                "destinationStorageAccountId": "destination_storage_account_id",
                "sourceObjectReplicationId": "source_object_replication_id",
                "sourceStorageAccountId": "source_storage_account_id"
            },
            "azure:storage/queue:Queue": {
                "resourceManagerId": "resource_manager_id",
                "storageAccountName": "storage_account_name"
            },
            "azure:storage/share:Share": {
                "accessTier": "access_tier",
                "acls": "acl",
                "enabledProtocol": "enabled_protocol",
                "resourceManagerId": "resource_manager_id",
                "storageAccountName": "storage_account_name"
            },
            "azure:storage/shareDirectory:ShareDirectory": {
                "shareName": "share_name",
                "storageAccountName": "storage_account_name"
            },
            "azure:storage/shareFile:ShareFile": {
                "contentDisposition": "content_disposition",
                "contentEncoding": "content_encoding",
                "contentLength": "content_length",
                "contentMd5": "content_md5",
                "contentType": "content_type",
                "storageShareId": "storage_share_id"
            },
            "azure:storage/sync:Sync": {
                "incomingTrafficPolicy": "incoming_traffic_policy",
                "resourceGroupName": "resource_group_name"
            },
            "azure:storage/syncCloudEndpoint:SyncCloudEndpoint": {
                "fileShareName": "file_share_name",
                "storageAccountId": "storage_account_id",
                "storageAccountTenantId": "storage_account_tenant_id",
                "storageSyncGroupId": "storage_sync_group_id"
            },
            "azure:storage/syncGroup:SyncGroup": {
                "storageSyncId": "storage_sync_id"
            },
            "azure:storage/table:Table": {
                "acls": "acl",
                "storageAccountName": "storage_account_name"
            },
            "azure:storage/tableEntity:TableEntity": {
                "partitionKey": "partition_key",
                "rowKey": "row_key",
                "storageAccountName": "storage_account_name",
                "tableName": "table_name"
            },
            "azure:storage/zipBlob:ZipBlob": {
                "accessTier": "access_tier",
                "cacheControl": "cache_control",
                "content": "source",
                "contentMd5": "content_md5",
                "contentType": "content_type",
                "sourceContent": "source_content",
                "sourceUri": "source_uri",
                "storageAccountName": "storage_account_name",
                "storageContainerName": "storage_container_name"
            },
            "azure:streamanalytics/FunctionJavaScriptUDFInput:FunctionJavaScriptUDFInput": {
                "configurationParameter": "configuration_parameter"
            },
            "azure:streamanalytics/FunctionJavascriptUdaInput:FunctionJavascriptUdaInput": {
                "configurationParameter": "configuration_parameter"
            },
            "azure:streamanalytics/JobIdentity:JobIdentity": {
                "principalId": "principal_id",
                "tenantId": "tenant_id"
            },
            "azure:streamanalytics/JobJobStorageAccount:JobJobStorageAccount": {
                "accountKey": "account_key",
                "accountName": "account_name",
                "authenticationMode": "authentication_mode"
            },
            "azure:streamanalytics/OutputBlobSerialization:OutputBlobSerialization": {
                "fieldDelimiter": "field_delimiter"
            },
            "azure:streamanalytics/OutputEventHubSerialization:OutputEventHubSerialization": {
                "fieldDelimiter": "field_delimiter"
            },
            "azure:streamanalytics/OutputServiceBusQueueSerialization:OutputServiceBusQueueSerialization": {
                "fieldDelimiter": "field_delimiter"
            },
            "azure:streamanalytics/OutputServicebusTopicSerialization:OutputServicebusTopicSerialization": {
                "fieldDelimiter": "field_delimiter"
            },
            "azure:streamanalytics/ReferenceInputBlobSerialization:ReferenceInputBlobSerialization": {
                "fieldDelimiter": "field_delimiter"
            },
            "azure:streamanalytics/StreamInputBlobSerialization:StreamInputBlobSerialization": {
                "fieldDelimiter": "field_delimiter"
            },
            "azure:streamanalytics/StreamInputEventHubSerialization:StreamInputEventHubSerialization": {
                "fieldDelimiter": "field_delimiter"
            },
            "azure:streamanalytics/StreamInputEventHubV2Serialization:StreamInputEventHubV2Serialization": {
                "fieldDelimiter": "field_delimiter"
            },
            "azure:streamanalytics/StreamInputIotHubSerialization:StreamInputIotHubSerialization": {
                "fieldDelimiter": "field_delimiter"
            },
            "azure:streamanalytics/cluster:Cluster": {
                "resourceGroupName": "resource_group_name",
                "streamingCapacity": "streaming_capacity"
            },
            "azure:streamanalytics/functionJavaScriptUDF:FunctionJavaScriptUDF": {
                "inputs": "input",
                "resourceGroupName": "resource_group_name",
                "streamAnalyticsJobName": "stream_analytics_job_name"
            },
            "azure:streamanalytics/functionJavascriptUda:FunctionJavascriptUda": {
                "inputs": "input",
                "streamAnalyticsJobId": "stream_analytics_job_id"
            },
            "azure:streamanalytics/getJob:getJob": {
                "compatibilityLevel": "compatibility_level",
                "dataLocale": "data_locale",
                "eventsLateArrivalMaxDelayInSeconds": "events_late_arrival_max_delay_in_seconds",
                "eventsOutOfOrderMaxDelayInSeconds": "events_out_of_order_max_delay_in_seconds",
                "eventsOutOfOrderPolicy": "events_out_of_order_policy",
                "identities": "identity",
                "jobId": "job_id",
                "lastOutputTime": "last_output_time",
                "outputErrorPolicy": "output_error_policy",
                "resourceGroupName": "resource_group_name",
                "startMode": "start_mode",
                "startTime": "start_time",
                "streamingUnits": "streaming_units",
                "transformationQuery": "transformation_query"
            },
            "azure:streamanalytics/getJobIdentity:getJobIdentity": {
                "principalId": "principal_id",
                "tenantId": "tenant_id"
            },
            "azure:streamanalytics/job:Job": {
                "compatibilityLevel": "compatibility_level",
                "contentStoragePolicy": "content_storage_policy",
                "dataLocale": "data_locale",
                "eventsLateArrivalMaxDelayInSeconds": "events_late_arrival_max_delay_in_seconds",
                "eventsOutOfOrderMaxDelayInSeconds": "events_out_of_order_max_delay_in_seconds",
                "eventsOutOfOrderPolicy": "events_out_of_order_policy",
                "jobId": "job_id",
                "jobStorageAccounts": "job_storage_account",
                "outputErrorPolicy": "output_error_policy",
                "resourceGroupName": "resource_group_name",
                "streamAnalyticsClusterId": "stream_analytics_cluster_id",
                "streamingUnits": "streaming_units",
                "transformationQuery": "transformation_query"
            },
            "azure:streamanalytics/jobSchedule:JobSchedule": {
                "lastOutputTime": "last_output_time",
                "startMode": "start_mode",
                "startTime": "start_time",
                "streamAnalyticsJobId": "stream_analytics_job_id"
            },
            "azure:streamanalytics/managedPrivateEndpoint:ManagedPrivateEndpoint": {
                "resourceGroupName": "resource_group_name",
                "streamAnalyticsClusterName": "stream_analytics_cluster_name",
                "subresourceName": "subresource_name",
                "targetResourceId": "target_resource_id"
            },
            "azure:streamanalytics/outputBlob:OutputBlob": {
                "authenticationMode": "authentication_mode",
                "batchMaxWaitTime": "batch_max_wait_time",
                "batchMinRows": "batch_min_rows",
                "dateFormat": "date_format",
                "pathPattern": "path_pattern",
                "resourceGroupName": "resource_group_name",
                "storageAccountKey": "storage_account_key",
                "storageAccountName": "storage_account_name",
                "storageContainerName": "storage_container_name",
                "streamAnalyticsJobName": "stream_analytics_job_name",
                "timeFormat": "time_format"
            },
            "azure:streamanalytics/outputCosmosdb:OutputCosmosdb": {
                "containerName": "container_name",
                "cosmosdbAccountKey": "cosmosdb_account_key",
                "cosmosdbSqlDatabaseId": "cosmosdb_sql_database_id",
                "documentId": "document_id",
                "partitionKey": "partition_key",
                "streamAnalyticsJobId": "stream_analytics_job_id"
            },
            "azure:streamanalytics/outputEventHub:OutputEventHub": {
                "authenticationMode": "authentication_mode",
                "eventhubName": "eventhub_name",
                "partitionKey": "partition_key",
                "propertyColumns": "property_columns",
                "resourceGroupName": "resource_group_name",
                "servicebusNamespace": "servicebus_namespace",
                "sharedAccessPolicyKey": "shared_access_policy_key",
                "sharedAccessPolicyName": "shared_access_policy_name",
                "streamAnalyticsJobName": "stream_analytics_job_name"
            },
            "azure:streamanalytics/outputFunction:OutputFunction": {
                "apiKey": "api_key",
                "batchMaxCount": "batch_max_count",
                "batchMaxInBytes": "batch_max_in_bytes",
                "functionApp": "function_app",
                "functionName": "function_name",
                "resourceGroupName": "resource_group_name",
                "streamAnalyticsJobName": "stream_analytics_job_name"
            },
            "azure:streamanalytics/outputMssql:OutputMssql": {
                "authenticationMode": "authentication_mode",
                "maxBatchCount": "max_batch_count",
                "maxWriterCount": "max_writer_count",
                "resourceGroupName": "resource_group_name",
                "streamAnalyticsJobName": "stream_analytics_job_name"
            },
            "azure:streamanalytics/outputPowerbi:OutputPowerbi": {
                "groupId": "group_id",
                "groupName": "group_name",
                "streamAnalyticsJobId": "stream_analytics_job_id",
                "tokenUserDisplayName": "token_user_display_name",
                "tokenUserPrincipalName": "token_user_principal_name"
            },
            "azure:streamanalytics/outputServiceBusQueue:OutputServiceBusQueue": {
                "authenticationMode": "authentication_mode",
                "propertyColumns": "property_columns",
                "queueName": "queue_name",
                "resourceGroupName": "resource_group_name",
                "servicebusNamespace": "servicebus_namespace",
                "sharedAccessPolicyKey": "shared_access_policy_key",
                "sharedAccessPolicyName": "shared_access_policy_name",
                "streamAnalyticsJobName": "stream_analytics_job_name",
                "systemPropertyColumns": "system_property_columns"
            },
            "azure:streamanalytics/outputServicebusTopic:OutputServicebusTopic": {
                "authenticationMode": "authentication_mode",
                "propertyColumns": "property_columns",
                "resourceGroupName": "resource_group_name",
                "servicebusNamespace": "servicebus_namespace",
                "sharedAccessPolicyKey": "shared_access_policy_key",
                "sharedAccessPolicyName": "shared_access_policy_name",
                "streamAnalyticsJobName": "stream_analytics_job_name",
                "systemPropertyColumns": "system_property_columns",
                "topicName": "topic_name"
            },
            "azure:streamanalytics/outputSynapse:OutputSynapse": {
                "resourceGroupName": "resource_group_name",
                "streamAnalyticsJobName": "stream_analytics_job_name"
            },
            "azure:streamanalytics/outputTable:OutputTable": {
                "batchSize": "batch_size",
                "columnsToRemoves": "columns_to_remove",
                "partitionKey": "partition_key",
                "resourceGroupName": "resource_group_name",
                "rowKey": "row_key",
                "storageAccountKey": "storage_account_key",
                "storageAccountName": "storage_account_name",
                "streamAnalyticsJobName": "stream_analytics_job_name"
            },
            "azure:streamanalytics/referenceInputBlob:ReferenceInputBlob": {
                "authenticationMode": "authentication_mode",
                "dateFormat": "date_format",
                "pathPattern": "path_pattern",
                "resourceGroupName": "resource_group_name",
                "storageAccountKey": "storage_account_key",
                "storageAccountName": "storage_account_name",
                "storageContainerName": "storage_container_name",
                "streamAnalyticsJobName": "stream_analytics_job_name",
                "timeFormat": "time_format"
            },
            "azure:streamanalytics/referenceInputMssql:ReferenceInputMssql": {
                "deltaSnapshotQuery": "delta_snapshot_query",
                "fullSnapshotQuery": "full_snapshot_query",
                "refreshIntervalDuration": "refresh_interval_duration",
                "refreshType": "refresh_type",
                "resourceGroupName": "resource_group_name",
                "streamAnalyticsJobName": "stream_analytics_job_name"
            },
            "azure:streamanalytics/streamInputBlob:StreamInputBlob": {
                "dateFormat": "date_format",
                "pathPattern": "path_pattern",
                "resourceGroupName": "resource_group_name",
                "storageAccountKey": "storage_account_key",
                "storageAccountName": "storage_account_name",
                "storageContainerName": "storage_container_name",
                "streamAnalyticsJobName": "stream_analytics_job_name",
                "timeFormat": "time_format"
            },
            "azure:streamanalytics/streamInputEventHub:StreamInputEventHub": {
                "authenticationMode": "authentication_mode",
                "eventhubConsumerGroupName": "eventhub_consumer_group_name",
                "eventhubName": "eventhub_name",
                "partitionKey": "partition_key",
                "resourceGroupName": "resource_group_name",
                "servicebusNamespace": "servicebus_namespace",
                "sharedAccessPolicyKey": "shared_access_policy_key",
                "sharedAccessPolicyName": "shared_access_policy_name",
                "streamAnalyticsJobName": "stream_analytics_job_name"
            },
            "azure:streamanalytics/streamInputEventHubV2:StreamInputEventHubV2": {
                "authenticationMode": "authentication_mode",
                "eventhubConsumerGroupName": "eventhub_consumer_group_name",
                "eventhubName": "eventhub_name",
                "partitionKey": "partition_key",
                "servicebusNamespace": "servicebus_namespace",
                "sharedAccessPolicyKey": "shared_access_policy_key",
                "sharedAccessPolicyName": "shared_access_policy_name",
                "streamAnalyticsJobId": "stream_analytics_job_id"
            },
            "azure:streamanalytics/streamInputIotHub:StreamInputIotHub": {
                "eventhubConsumerGroupName": "eventhub_consumer_group_name",
                "iothubNamespace": "iothub_namespace",
                "resourceGroupName": "resource_group_name",
                "sharedAccessPolicyKey": "shared_access_policy_key",
                "sharedAccessPolicyName": "shared_access_policy_name",
                "streamAnalyticsJobName": "stream_analytics_job_name"
            },
            "azure:synapse/SparkPoolAutoPause:SparkPoolAutoPause": {
                "delayInMinutes": "delay_in_minutes"
            },
            "azure:synapse/SparkPoolAutoScale:SparkPoolAutoScale": {
                "maxNodeCount": "max_node_count",
                "minNodeCount": "min_node_count"
            },
            "azure:synapse/SqlPoolRestore:SqlPoolRestore": {
                "pointInTime": "point_in_time",
                "sourceDatabaseId": "source_database_id"
            },
            "azure:synapse/SqlPoolVulnerabilityAssessmentBaselineBaseline:SqlPoolVulnerabilityAssessmentBaselineBaseline": {
                "results": "result"
            },
            "azure:synapse/SqlPoolVulnerabilityAssessmentRecurringScans:SqlPoolVulnerabilityAssessmentRecurringScans": {
                "emailSubscriptionAdminsEnabled": "email_subscription_admins_enabled"
            },
            "azure:synapse/WorkspaceAadAdmin:WorkspaceAadAdmin": {
                "objectId": "object_id",
                "tenantId": "tenant_id"
            },
            "azure:synapse/WorkspaceAzureDevopsRepo:WorkspaceAzureDevopsRepo": {
                "accountName": "account_name",
                "branchName": "branch_name",
                "lastCommitId": "last_commit_id",
                "projectName": "project_name",
                "repositoryName": "repository_name",
                "rootFolder": "root_folder",
                "tenantId": "tenant_id"
            },
            "azure:synapse/WorkspaceCustomerManagedKey:WorkspaceCustomerManagedKey": {
                "keyName": "key_name",
                "keyVersionlessId": "key_versionless_id"
            },
            "azure:synapse/WorkspaceGithubRepo:WorkspaceGithubRepo": {
                "accountName": "account_name",
                "branchName": "branch_name",
                "gitUrl": "git_url",
                "lastCommitId": "last_commit_id",
                "repositoryName": "repository_name",
                "rootFolder": "root_folder"
            },
            "azure:synapse/WorkspaceIdentity:WorkspaceIdentity": {
                "identityIds": "identity_ids",
                "principalId": "principal_id",
                "tenantId": "tenant_id"
            },
            "azure:synapse/WorkspaceSqlAadAdmin:WorkspaceSqlAadAdmin": {
                "objectId": "object_id",
                "tenantId": "tenant_id"
            },
            "azure:synapse/WorkspaceVulnerabilityAssessmentRecurringScans:WorkspaceVulnerabilityAssessmentRecurringScans": {
                "emailSubscriptionAdminsEnabled": "email_subscription_admins_enabled"
            },
            "azure:synapse/firewallRule:FirewallRule": {
                "endIpAddress": "end_ip_address",
                "startIpAddress": "start_ip_address",
                "synapseWorkspaceId": "synapse_workspace_id"
            },
            "azure:synapse/getWorkspace:getWorkspace": {
                "connectivityEndpoints": "connectivity_endpoints",
                "identities": "identity",
                "resourceGroupName": "resource_group_name"
            },
            "azure:synapse/getWorkspaceIdentity:getWorkspaceIdentity": {
                "identityIds": "identity_ids",
                "principalId": "principal_id",
                "tenantId": "tenant_id"
            },
            "azure:synapse/integrationRuntimeAzure:IntegrationRuntimeAzure": {
                "computeType": "compute_type",
                "coreCount": "core_count",
                "synapseWorkspaceId": "synapse_workspace_id",
                "timeToLiveMin": "time_to_live_min"
            },
            "azure:synapse/integrationRuntimeSelfHosted:IntegrationRuntimeSelfHosted": {
                "authorizationKeyPrimary": "authorization_key_primary",
                "authorizationKeySecondary": "authorization_key_secondary",
                "synapseWorkspaceId": "synapse_workspace_id"
            },
            "azure:synapse/linkedService:LinkedService": {
                "additionalProperties": "additional_properties",
                "integrationRuntime": "integration_runtime",
                "synapseWorkspaceId": "synapse_workspace_id",
                "typePropertiesJson": "type_properties_json"
            },
            "azure:synapse/managedPrivateEndpoint:ManagedPrivateEndpoint": {
                "subresourceName": "subresource_name",
                "synapseWorkspaceId": "synapse_workspace_id",
                "targetResourceId": "target_resource_id"
            },
            "azure:synapse/privateLinkHub:PrivateLinkHub": {
                "resourceGroupName": "resource_group_name"
            },
            "azure:synapse/roleAssignment:RoleAssignment": {
                "principalId": "principal_id",
                "principalType": "principal_type",
                "roleName": "role_name",
                "synapseSparkPoolId": "synapse_spark_pool_id",
                "synapseWorkspaceId": "synapse_workspace_id"
            },
            "azure:synapse/sparkPool:SparkPool": {
                "autoPause": "auto_pause",
                "autoScale": "auto_scale",
                "cacheSize": "cache_size",
                "computeIsolationEnabled": "compute_isolation_enabled",
                "dynamicExecutorAllocationEnabled": "dynamic_executor_allocation_enabled",
                "libraryRequirement": "library_requirement",
                "maxExecutors": "max_executors",
                "minExecutors": "min_executors",
                "nodeCount": "node_count",
                "nodeSize": "node_size",
                "nodeSizeFamily": "node_size_family",
                "sessionLevelPackagesEnabled": "session_level_packages_enabled",
                "sparkConfig": "spark_config",
                "sparkEventsFolder": "spark_events_folder",
                "sparkLogFolder": "spark_log_folder",
                "sparkVersion": "spark_version",
                "synapseWorkspaceId": "synapse_workspace_id"
            },
            "azure:synapse/sqlPool:SqlPool": {
                "createMode": "create_mode",
                "dataEncrypted": "data_encrypted",
                "geoBackupPolicyEnabled": "geo_backup_policy_enabled",
                "recoveryDatabaseId": "recovery_database_id",
                "skuName": "sku_name",
                "storageAccountType": "storage_account_type",
                "synapseWorkspaceId": "synapse_workspace_id"
            },
            "azure:synapse/sqlPoolExtendedAuditingPolicy:SqlPoolExtendedAuditingPolicy": {
                "logMonitoringEnabled": "log_monitoring_enabled",
                "retentionInDays": "retention_in_days",
                "sqlPoolId": "sql_pool_id",
                "storageAccountAccessKey": "storage_account_access_key",
                "storageAccountAccessKeyIsSecondary": "storage_account_access_key_is_secondary",
                "storageEndpoint": "storage_endpoint"
            },
            "azure:synapse/sqlPoolSecurityAlertPolicy:SqlPoolSecurityAlertPolicy": {
                "disabledAlerts": "disabled_alerts",
                "emailAccountAdminsEnabled": "email_account_admins_enabled",
                "emailAddresses": "email_addresses",
                "policyState": "policy_state",
                "retentionDays": "retention_days",
                "sqlPoolId": "sql_pool_id",
                "storageAccountAccessKey": "storage_account_access_key",
                "storageEndpoint": "storage_endpoint"
            },
            "azure:synapse/sqlPoolVulnerabilityAssessment:SqlPoolVulnerabilityAssessment": {
                "recurringScans": "recurring_scans",
                "sqlPoolSecurityAlertPolicyId": "sql_pool_security_alert_policy_id",
                "storageAccountAccessKey": "storage_account_access_key",
                "storageContainerPath": "storage_container_path",
                "storageContainerSasKey": "storage_container_sas_key"
            },
            "azure:synapse/sqlPoolVulnerabilityAssessmentBaseline:SqlPoolVulnerabilityAssessmentBaseline": {
                "baselines": "baseline",
                "ruleName": "rule_name",
                "sqlPoolVulnerabilityAssessmentId": "sql_pool_vulnerability_assessment_id"
            },
            "azure:synapse/sqlPoolWorkloadClassifier:SqlPoolWorkloadClassifier": {
                "endTime": "end_time",
                "memberName": "member_name",
                "startTime": "start_time",
                "workloadGroupId": "workload_group_id"
            },
            "azure:synapse/sqlPoolWorkloadGroup:SqlPoolWorkloadGroup": {
                "maxResourcePercent": "max_resource_percent",
                "maxResourcePercentPerRequest": "max_resource_percent_per_request",
                "minResourcePercent": "min_resource_percent",
                "minResourcePercentPerRequest": "min_resource_percent_per_request",
                "queryExecutionTimeoutInSeconds": "query_execution_timeout_in_seconds",
                "sqlPoolId": "sql_pool_id"
            },
            "azure:synapse/workspace:Workspace": {
                "aadAdmin": "aad_admin",
                "azureDevopsRepo": "azure_devops_repo",
                "azureadAuthenticationOnly": "azuread_authentication_only",
                "computeSubnetId": "compute_subnet_id",
                "connectivityEndpoints": "connectivity_endpoints",
                "customerManagedKey": "customer_managed_key",
                "dataExfiltrationProtectionEnabled": "data_exfiltration_protection_enabled",
                "githubRepo": "github_repo",
                "linkingAllowedForAadTenantIds": "linking_allowed_for_aad_tenant_ids",
                "managedResourceGroupName": "managed_resource_group_name",
                "managedVirtualNetworkEnabled": "managed_virtual_network_enabled",
                "publicNetworkAccessEnabled": "public_network_access_enabled",
                "purviewId": "purview_id",
                "resourceGroupName": "resource_group_name",
                "sqlAadAdmin": "sql_aad_admin",
                "sqlAdministratorLogin": "sql_administrator_login",
                "sqlAdministratorLoginPassword": "sql_administrator_login_password",
                "sqlIdentityControlEnabled": "sql_identity_control_enabled",
                "storageDataLakeGen2FilesystemId": "storage_data_lake_gen2_filesystem_id"
            },
            "azure:synapse/workspaceAadAdmin:WorkspaceAadAdmin": {
                "objectId": "object_id",
                "synapseWorkspaceId": "synapse_workspace_id",
                "tenantId": "tenant_id"
            },
            "azure:synapse/workspaceExtendedAuditingPolicy:WorkspaceExtendedAuditingPolicy": {
                "logMonitoringEnabled": "log_monitoring_enabled",
                "retentionInDays": "retention_in_days",
                "storageAccountAccessKey": "storage_account_access_key",
                "storageAccountAccessKeyIsSecondary": "storage_account_access_key_is_secondary",
                "storageEndpoint": "storage_endpoint",
                "synapseWorkspaceId": "synapse_workspace_id"
            },
            "azure:synapse/workspaceKey:WorkspaceKey": {
                "customerManagedKeyName": "customer_managed_key_name",
                "customerManagedKeyVersionlessId": "customer_managed_key_versionless_id",
                "synapseWorkspaceId": "synapse_workspace_id"
            },
            "azure:synapse/workspaceSecurityAlertPolicy:WorkspaceSecurityAlertPolicy": {
                "disabledAlerts": "disabled_alerts",
                "emailAccountAdminsEnabled": "email_account_admins_enabled",
                "emailAddresses": "email_addresses",
                "policyState": "policy_state",
                "retentionDays": "retention_days",
                "storageAccountAccessKey": "storage_account_access_key",
                "storageEndpoint": "storage_endpoint",
                "synapseWorkspaceId": "synapse_workspace_id"
            },
            "azure:synapse/workspaceSqlAadAdmin:WorkspaceSqlAadAdmin": {
                "objectId": "object_id",
                "synapseWorkspaceId": "synapse_workspace_id",
                "tenantId": "tenant_id"
            },
            "azure:synapse/workspaceVulnerabilityAssessment:WorkspaceVulnerabilityAssessment": {
                "recurringScans": "recurring_scans",
                "storageAccountAccessKey": "storage_account_access_key",
                "storageContainerPath": "storage_container_path",
                "storageContainerSasKey": "storage_container_sas_key",
                "workspaceSecurityAlertPolicyId": "workspace_security_alert_policy_id"
            },
            "azure:trafficmanager/ProfileDnsConfig:ProfileDnsConfig": {
                "relativeName": "relative_name"
            },
            "azure:trafficmanager/ProfileMonitorConfig:ProfileMonitorConfig": {
                "customHeaders": "custom_header",
                "expectedStatusCodeRanges": "expected_status_code_ranges",
                "intervalInSeconds": "interval_in_seconds",
                "timeoutInSeconds": "timeout_in_seconds",
                "toleratedNumberOfFailures": "tolerated_number_of_failures"
            },
            "azure:trafficmanager/profile:Profile": {
                "dnsConfig": "dns_config",
                "maxReturn": "max_return",
                "monitorConfig": "monitor_config",
                "profileStatus": "profile_status",
                "resourceGroupName": "resource_group_name",
                "trafficRoutingMethod": "traffic_routing_method",
                "trafficViewEnabled": "traffic_view_enabled"
            },
            "azure:videoanalyzer/AnalyzerIdentity:AnalyzerIdentity": {
                "identityIds": "identity_ids"
            },
            "azure:videoanalyzer/AnalyzerStorageAccount:AnalyzerStorageAccount": {
                "userAssignedIdentityId": "user_assigned_identity_id"
            },
            "azure:videoanalyzer/analyzer:Analyzer": {
                "resourceGroupName": "resource_group_name",
                "storageAccount": "storage_account"
            },
            "azure:videoanalyzer/edgeModule:EdgeModule": {
                "resourceGroupName": "resource_group_name",
                "videoAnalyzerName": "video_analyzer_name"
            },
            "azure:voice/ServicesCommunicationsGatewayServiceLocation:ServicesCommunicationsGatewayServiceLocation": {
                "allowedMediaSourceAddressPrefixes": "allowed_media_source_address_prefixes",
                "allowedSignalingSourceAddressPrefixes": "allowed_signaling_source_address_prefixes",
                "esrpAddresses": "esrp_addresses",
                "operatorAddresses": "operator_addresses"
            },
            "azure:voice/servicesCommunicationsGateway:ServicesCommunicationsGateway": {
                "apiBridge": "api_bridge",
                "autoGeneratedDomainNameLabelScope": "auto_generated_domain_name_label_scope",
                "e911Type": "e911_type",
                "emergencyDialStrings": "emergency_dial_strings",
                "microsoftTeamsVoicemailPilotNumber": "microsoft_teams_voicemail_pilot_number",
                "onPremMcpEnabled": "on_prem_mcp_enabled",
                "resourceGroupName": "resource_group_name",
                "serviceLocations": "service_location"
            },
            "azure:voice/servicesCommunicationsGatewayTestLine:ServicesCommunicationsGatewayTestLine": {
                "phoneNumber": "phone_number",
                "voiceServicesCommunicationsGatewayId": "voice_services_communications_gateway_id"
            },
            "azure:waf/PolicyCustomRule:PolicyCustomRule": {
                "groupRateLimitBy": "group_rate_limit_by",
                "matchConditions": "match_conditions",
                "rateLimitDuration": "rate_limit_duration",
                "rateLimitThreshold": "rate_limit_threshold",
                "ruleType": "rule_type"
            },
            "azure:waf/PolicyCustomRuleMatchCondition:PolicyCustomRuleMatchCondition": {
                "matchValues": "match_values",
                "matchVariables": "match_variables",
                "negationCondition": "negation_condition"
            },
            "azure:waf/PolicyCustomRuleMatchConditionMatchVariable:PolicyCustomRuleMatchConditionMatchVariable": {
                "variableName": "variable_name"
            },
            "azure:waf/PolicyManagedRules:PolicyManagedRules": {
                "exclusions": "exclusion",
                "managedRuleSets": "managed_rule_set"
            },
            "azure:waf/PolicyManagedRulesExclusion:PolicyManagedRulesExclusion": {
                "excludedRuleSet": "excluded_rule_set",
                "matchVariable": "match_variable",
                "selectorMatchOperator": "selector_match_operator"
            },
            "azure:waf/PolicyManagedRulesExclusionExcludedRuleSet:PolicyManagedRulesExclusionExcludedRuleSet": {
                "ruleGroups": "rule_group"
            },
            "azure:waf/PolicyManagedRulesExclusionExcludedRuleSetRuleGroup:PolicyManagedRulesExclusionExcludedRuleSetRuleGroup": {
                "excludedRules": "excluded_rules",
                "ruleGroupName": "rule_group_name"
            },
            "azure:waf/PolicyManagedRulesManagedRuleSet:PolicyManagedRulesManagedRuleSet": {
                "ruleGroupOverrides": "rule_group_override"
            },
            "azure:waf/PolicyManagedRulesManagedRuleSetRuleGroupOverride:PolicyManagedRulesManagedRuleSetRuleGroupOverride": {
                "disabledRules": "disabled_rules",
                "ruleGroupName": "rule_group_name",
                "rules": "rule"
            },
            "azure:waf/PolicyPolicySettings:PolicyPolicySettings": {
                "fileUploadLimitInMb": "file_upload_limit_in_mb",
                "logScrubbing": "log_scrubbing",
                "maxRequestBodySizeInKb": "max_request_body_size_in_kb",
                "requestBodyCheck": "request_body_check",
                "requestBodyInspectLimitInKb": "request_body_inspect_limit_in_kb"
            },
            "azure:waf/PolicyPolicySettingsLogScrubbing:PolicyPolicySettingsLogScrubbing": {
                "rules": "rule"
            },
            "azure:waf/PolicyPolicySettingsLogScrubbingRule:PolicyPolicySettingsLogScrubbingRule": {
                "matchVariable": "match_variable",
                "selectorMatchOperator": "selector_match_operator"
            },
            "azure:waf/getFirewallPolicy:getFirewallPolicy": {
                "resourceGroupName": "resource_group_name"
            },
            "azure:waf/policy:Policy": {
                "customRules": "custom_rules",
                "httpListenerIds": "http_listener_ids",
                "managedRules": "managed_rules",
                "pathBasedRuleIds": "path_based_rule_ids",
                "policySettings": "policy_settings",
                "resourceGroupName": "resource_group_name"
            },
            "azure:webpubsub/HubEventHandler:HubEventHandler": {
                "systemEvents": "system_events",
                "urlTemplate": "url_template",
                "userEventPattern": "user_event_pattern"
            },
            "azure:webpubsub/HubEventHandlerAuth:HubEventHandlerAuth": {
                "managedIdentityId": "managed_identity_id"
            },
            "azure:webpubsub/HubEventListener:HubEventListener": {
                "eventhubName": "eventhub_name",
                "eventhubNamespaceName": "eventhub_namespace_name",
                "systemEventNameFilters": "system_event_name_filter",
                "userEventNameFilters": "user_event_name_filter"
            },
            "azure:webpubsub/NetworkAclPrivateEndpoint:NetworkAclPrivateEndpoint": {
                "allowedRequestTypes": "allowed_request_types",
                "deniedRequestTypes": "denied_request_types"
            },
            "azure:webpubsub/NetworkAclPublicNetwork:NetworkAclPublicNetwork": {
                "allowedRequestTypes": "allowed_request_types",
                "deniedRequestTypes": "denied_request_types"
            },
            "azure:webpubsub/ServiceIdentity:ServiceIdentity": {
                "identityIds": "identity_ids",
                "principalId": "principal_id",
                "tenantId": "tenant_id"
            },
            "azure:webpubsub/ServiceLiveTrace:ServiceLiveTrace": {
                "connectivityLogsEnabled": "connectivity_logs_enabled",
                "httpRequestLogsEnabled": "http_request_logs_enabled",
                "messagingLogsEnabled": "messaging_logs_enabled"
            },
            "azure:webpubsub/customCertificate:CustomCertificate": {
                "certificateVersion": "certificate_version",
                "customCertificateId": "custom_certificate_id",
                "webPubsubId": "web_pubsub_id"
            },
            "azure:webpubsub/customDomain:CustomDomain": {
                "domainName": "domain_name",
                "webPubsubCustomCertificateId": "web_pubsub_custom_certificate_id",
                "webPubsubId": "web_pubsub_id"
            },
            "azure:webpubsub/getPrivateLinkResource:getPrivateLinkResource": {
                "sharedPrivateLinkResourceTypes": "shared_private_link_resource_types",
                "webPubsubId": "web_pubsub_id"
            },
            "azure:webpubsub/getPrivateLinkResourceSharedPrivateLinkResourceType:getPrivateLinkResourceSharedPrivateLinkResourceType": {
                "subresourceName": "subresource_name"
            },
            "azure:webpubsub/getService:getService": {
                "aadAuthEnabled": "aad_auth_enabled",
                "externalIp": "external_ip",
                "localAuthEnabled": "local_auth_enabled",
                "primaryAccessKey": "primary_access_key",
                "primaryConnectionString": "primary_connection_string",
                "publicNetworkAccessEnabled": "public_network_access_enabled",
                "publicPort": "public_port",
                "resourceGroupName": "resource_group_name",
                "secondaryAccessKey": "secondary_access_key",
                "secondaryConnectionString": "secondary_connection_string",
                "serverPort": "server_port",
                "tlsClientCertEnabled": "tls_client_cert_enabled"
            },
            "azure:webpubsub/hub:Hub": {
                "anonymousConnectionsEnabled": "anonymous_connections_enabled",
                "eventHandlers": "event_handler",
                "eventListeners": "event_listener",
                "webPubsubId": "web_pubsub_id"
            },
            "azure:webpubsub/networkAcl:NetworkAcl": {
                "defaultAction": "default_action",
                "privateEndpoints": "private_endpoint",
                "publicNetwork": "public_network",
                "webPubsubId": "web_pubsub_id"
            },
            "azure:webpubsub/service:Service": {
                "aadAuthEnabled": "aad_auth_enabled",
                "externalIp": "external_ip",
                "liveTrace": "live_trace",
                "localAuthEnabled": "local_auth_enabled",
                "primaryAccessKey": "primary_access_key",
                "primaryConnectionString": "primary_connection_string",
                "publicNetworkAccessEnabled": "public_network_access_enabled",
                "publicPort": "public_port",
                "resourceGroupName": "resource_group_name",
                "secondaryAccessKey": "secondary_access_key",
                "secondaryConnectionString": "secondary_connection_string",
                "serverPort": "server_port",
                "tlsClientCertEnabled": "tls_client_cert_enabled"
            },
            "azure:webpubsub/sharedPrivateLinkResource:SharedPrivateLinkResource": {
                "requestMessage": "request_message",
                "subresourceName": "subresource_name",
                "targetResourceId": "target_resource_id",
                "webPubsubId": "web_pubsub_id"
            }
        },
        "renamedConfigProperties": {
            "auxiliaryTenantIds": "auxiliary_tenant_ids",
            "clientCertificate": "client_certificate",
            "clientCertificatePassword": "client_certificate_password",
            "clientCertificatePath": "client_certificate_path",
            "clientId": "client_id",
            "clientIdFilePath": "client_id_file_path",
            "clientSecret": "client_secret",
            "clientSecretFilePath": "client_secret_file_path",
            "disableCorrelationRequestId": "disable_correlation_request_id",
            "disableTerraformPartnerId": "disable_terraform_partner_id",
            "metadataHost": "metadata_host",
            "msiEndpoint": "msi_endpoint",
            "oidcRequestToken": "oidc_request_token",
            "oidcRequestUrl": "oidc_request_url",
            "oidcToken": "oidc_token",
            "oidcTokenFilePath": "oidc_token_file_path",
            "partnerId": "partner_id",
            "skipProviderRegistration": "skip_provider_registration",
            "storageUseAzuread": "storage_use_azuread",
            "subscriptionId": "subscription_id",
            "tenantId": "tenant_id",
            "useCli": "use_cli",
            "useMsi": "use_msi",
            "useOidc": "use_oidc"
        }
    }
}